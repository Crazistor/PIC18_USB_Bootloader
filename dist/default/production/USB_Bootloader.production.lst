

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Oct 03 00:09:11 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=2
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=2
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1,group=2
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1,group=2
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	text203,global,reloc=2,class=CODE,delta=1
   225                           	psect	text204,global,reloc=2,class=CODE,delta=1
   226                           	psect	text205,global,reloc=2,class=CODE,delta=1
   227                           	psect	text206,global,reloc=2,class=CODE,delta=1
   228                           	psect	text207,global,reloc=2,class=CODE,delta=1
   229                           	psect	text208,global,reloc=2,class=CODE,delta=1
   230                           	psect	text209,global,reloc=2,class=CODE,delta=1
   231                           	psect	text210,global,reloc=2,class=CODE,delta=1
   232                           	psect	text211,global,reloc=2,class=CODE,delta=1
   233                           	psect	text212,global,reloc=2,class=CODE,delta=1
   234                           	psect	text213,global,reloc=2,class=CODE,delta=1
   235                           	psect	text214,global,reloc=2,class=CODE,delta=1
   236                           	psect	text215,global,reloc=2,class=CODE,delta=1
   237                           	psect	text216,global,reloc=2,class=CODE,delta=1
   238                           	psect	text217,global,reloc=2,class=CODE,delta=1
   239                           	psect	text218,global,reloc=2,class=CODE,delta=1
   240                           	psect	text219,global,reloc=2,class=CODE,delta=1
   241                           	psect	text220,global,reloc=2,class=CODE,delta=1
   242                           	psect	text221,global,reloc=2,class=CODE,delta=1
   243                           	psect	text222,global,reloc=2,class=CODE,delta=1
   244                           	psect	text223,global,reloc=2,class=CODE,delta=1
   245                           	psect	text224,global,reloc=2,class=CODE,delta=1
   246                           	psect	text225,global,reloc=2,class=CODE,delta=1
   247                           	psect	text226,global,reloc=2,class=CODE,delta=1
   248                           	psect	text227,global,reloc=2,class=CODE,delta=1
   249                           	psect	text228,global,reloc=2,class=CODE,delta=1
   250                           	psect	text229,global,reloc=2,class=CODE,delta=1
   251                           	psect	text230,global,reloc=2,class=CODE,delta=1
   252                           	psect	text231,global,reloc=2,class=CODE,delta=1
   253                           	psect	text232,global,reloc=2,class=CODE,delta=1
   254                           	psect	text233,global,reloc=2,class=CODE,delta=1
   255                           	psect	text234,global,reloc=2,class=CODE,delta=1
   256                           	psect	text235,global,reloc=2,class=CODE,delta=1
   257                           	psect	text236,global,reloc=2,class=CODE,delta=1
   258                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   259                           	psect	text237,global,reloc=2,class=CODE,delta=1
   260                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   261                           	dabs	1,0x600,512,_msd_buffer
   262                           	dabs	1,0xD00,48,_BDT
   263                           	dabs	1,0xD40,31,_msd_cbw
   264                           	dabs	1,0xD80,13,_msd_csw
   265                           	dabs	1,0xD38,8,_CtrlTrfData
   266                           	dabs	1,0xD30,8,_SetupPkt
   267  0000                     
   268                           ; Version 2.00
   269                           ; Generated 27/05/2018 GMT
   270                           ; 
   271                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   272                           ; All rights reserved.
   273                           ; 
   274                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   275                           ; 
   276                           ; Redistribution and use in source and binary forms, with or without modification, are
   277                           ; permitted provided that the following conditions are met:
   278                           ; 
   279                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   280                           ;        conditions and the following disclaimer.
   281                           ; 
   282                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   283                           ;        of conditions and the following disclaimer in the documentation and/or other
   284                           ;        materials provided with the distribution.
   285                           ; 
   286                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   287                           ;        software without specific prior written permission.
   288                           ; 
   289                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   290                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   291                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   292                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   293                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   294                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   295                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   296                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   297                           ; 
   298                           ; 
   299                           ; Code-generator required, PIC18F47J53 Definitions
   300                           ; 
   301                           ; SFR Addresses
   302  0000                     
   303                           	psect	intcode
   304  000008  EF04 F060          	goto	49160	;# 
   305                           
   306                           	psect	intcodelo
   307  000018  EF0C F060          	goto	49176	; ;# 
   308  0000                     
   309                           	psect	idataBANK0
   310  009D32                     __pidataBANK0:
   311                           	opt stack 0
   312                           
   313                           ;initializer for _file_number
   314  009D32  FF                 	db	255
   315                           
   316                           	psect	idataBANK1
   317  00990C                     __pidataBANK1:
   318                           	opt stack 0
   319                           
   320                           ;initializer for _LUN
   321  00990C  F0                 	db	low _ExternalFlash_MediaInitialize
   322  00990D  9A                 	db	high _ExternalFlash_MediaInitialize
   323  00990E  D6                 	db	low _ExternalFlash_CapacityRead
   324  00990F  9B                 	db	high _ExternalFlash_CapacityRead
   325  009910  9E                 	db	low _ExternalFlash_SectorSizeRead
   326  009911  9C                 	db	high _ExternalFlash_SectorSizeRead
   327  009912  2E                 	db	low _ExternalFlash_MediaDetect
   328  009913  9D                 	db	high _ExternalFlash_MediaDetect
   329  009914  9C                 	db	low _ExternalFlash_SectorRead
   330  009915  95                 	db	high _ExternalFlash_SectorRead
   331  009916  2A                 	db	low _ExternalFlash_WriteProtectStateGet
   332  009917  9D                 	db	high _ExternalFlash_WriteProtectStateGet
   333  009918  6A                 	db	low _ExternalFlash_SectorWrite
   334  009919  95                 	db	high _ExternalFlash_SectorWrite
   335  00991A  00                 	db	0
   336  00991B  00                 	db	0
   337  00991C  00                 	db	0
   338  00991D  00                 	db	0
   339  00991E  00                 	db	0
   340  00991F  00                 	db	0
   341                           
   342                           ;initializer for i2c_display_send_init_sequence@F6810
   343  009920  3A                 	db	58
   344  009921  1E                 	db	30
   345  009922  39                 	db	57
   346  009923  0C                 	db	12
   347  009924  74                 	db	116
   348  009925  5C                 	db	92
   349  009926  6D                 	db	109
   350  009927  0C                 	db	12
   351  009928  01                 	db	1
   352                           
   353                           ;initializer for _tx_buf
   354  009929  01                 	db	1
   355  00992A  02                 	db	2
   356  00992B  03                 	db	3
   357  00992C  04                 	db	4
   358  00992D  05                 	db	5
   359  00992E  06                 	db	6
   360  00992F  07                 	db	7
   361  009930  08                 	db	8
   362                           
   363                           	psect	mediumconst
   364  00BC6C                     __pmediumconst:
   365                           	opt stack 0
   366  00BC6C  00                 	db	0
   367  00BC6D                     _checked_line2:
   368                           	opt stack 0
   369  00BC6D  46                 	db	70
   370  00BC6E  69                 	db	105
   371  00BC6F  6C                 	db	108
   372  00BC70  65                 	db	101
   373  00BC71  20                 	db	32
   374  00BC72  63                 	db	99
   375  00BC73  68                 	db	104
   376  00BC74  65                 	db	101
   377  00BC75  63                 	db	99
   378  00BC76  6B                 	db	107
   379  00BC77  20                 	db	32
   380  00BC78  63                 	db	99
   381  00BC79  6F                 	db	111
   382  00BC7A  6D                 	db	109
   383  00BC7B  70                 	db	112
   384  00BC7C  6C                 	db	108
   385  00BC7D  65                 	db	101
   386  00BC7E  74                 	db	116
   387  00BC7F  65                 	db	101
   388  00BC80  64                 	db	100
   389  00BC81  00                 	db	0
   390  00BC82                     __end_of_checked_line2:
   391                           	opt stack 0
   392  00BC82                     _failed_line3_addressRange:
   393                           	opt stack 0
   394  00BC82  41                 	db	65
   395  00BC83  64                 	db	100
   396  00BC84  64                 	db	100
   397  00BC85  72                 	db	114
   398  00BC86  2E                 	db	46
   399  00BC87  20                 	db	32
   400  00BC88  6F                 	db	111
   401  00BC89  75                 	db	117
   402  00BC8A  74                 	db	116
   403  00BC8B  73                 	db	115
   404  00BC8C  69                 	db	105
   405  00BC8D  64                 	db	100
   406  00BC8E  65                 	db	101
   407  00BC8F  20                 	db	32
   408  00BC90  72                 	db	114
   409  00BC91  61                 	db	97
   410  00BC92  6E                 	db	110
   411  00BC93  67                 	db	103
   412  00BC94  65                 	db	101
   413  00BC95  00                 	db	0
   414  00BC96                     __end_of_failed_line3_addressRange:
   415                           	opt stack 0
   416  00BC96                     _search_line3:
   417                           	opt stack 0
   418  00BC96  46                 	db	70
   419  00BC97  49                 	db	73
   420  00BC98  52                 	db	82
   421  00BC99  4D                 	db	77
   422  00BC9A  57                 	db	87
   423  00BC9B  41                 	db	65
   424  00BC9C  52                 	db	82
   425  00BC9D  45                 	db	69
   426  00BC9E  2E                 	db	46
   427  00BC9F  48                 	db	72
   428  00BCA0  45                 	db	69
   429  00BCA1  58                 	db	88
   430  00BCA2  20                 	db	32
   431  00BCA3  6F                 	db	111
   432  00BCA4  6E                 	db	110
   433  00BCA5  20                 	db	32
   434  00BCA6  55                 	db	85
   435  00BCA7  53                 	db	83
   436  00BCA8  42                 	db	66
   437  00BCA9  00                 	db	0
   438  00BCAA                     __end_of_search_line3:
   439                           	opt stack 0
   440  00BCAA                     _failed_line3_startCode:
   441                           	opt stack 0
   442  00BCAA  4D                 	db	77
   443  00BCAB  69                 	db	105
   444  00BCAC  73                 	db	115
   445  00BCAD  73                 	db	115
   446  00BCAE  69                 	db	105
   447  00BCAF  6E                 	db	110
   448  00BCB0  67                 	db	103
   449  00BCB1  20                 	db	32
   450  00BCB2  73                 	db	115
   451  00BCB3  74                 	db	116
   452  00BCB4  61                 	db	97
   453  00BCB5  72                 	db	114
   454  00BCB6  74                 	db	116
   455  00BCB7  20                 	db	32
   456  00BCB8  63                 	db	99
   457  00BCB9  6F                 	db	111
   458  00BCBA  64                 	db	100
   459  00BCBB  65                 	db	101
   460  00BCBC  00                 	db	0
   461  00BCBD                     __end_of_failed_line3_startCode:
   462                           	opt stack 0
   463  00BCBD                     _found_line2:
   464                           	opt stack 0
   465  00BCBD  46                 	db	70
   466  00BCBE  49                 	db	73
   467  00BCBF  52                 	db	82
   468  00BCC0  4D                 	db	77
   469  00BCC1  57                 	db	87
   470  00BCC2  41                 	db	65
   471  00BCC3  52                 	db	82
   472  00BCC4  45                 	db	69
   473  00BCC5  2E                 	db	46
   474  00BCC6  48                 	db	72
   475  00BCC7  45                 	db	69
   476  00BCC8  58                 	db	88
   477  00BCC9  20                 	db	32
   478  00BCCA  66                 	db	102
   479  00BCCB  6F                 	db	111
   480  00BCCC  75                 	db	117
   481  00BCCD  6E                 	db	110
   482  00BCCE  64                 	db	100
   483  00BCCF  00                 	db	0
   484  00BCD0                     __end_of_found_line2:
   485                           	opt stack 0
   486  00BCD0                     _programming_line2:
   487                           	opt stack 0
   488  00BCD0  50                 	db	80
   489  00BCD1  72                 	db	114
   490  00BCD2  6F                 	db	111
   491  00BCD3  67                 	db	103
   492  00BCD4  72                 	db	114
   493  00BCD5  61                 	db	97
   494  00BCD6  6D                 	db	109
   495  00BCD7  6D                 	db	109
   496  00BCD8  69                 	db	105
   497  00BCD9  6E                 	db	110
   498  00BCDA  67                 	db	103
   499  00BCDB  20                 	db	32
   500  00BCDC  66                 	db	102
   501  00BCDD  6C                 	db	108
   502  00BCDE  61                 	db	97
   503  00BCDF  73                 	db	115
   504  00BCE0  68                 	db	104
   505  00BCE1  00                 	db	0
   506  00BCE2                     __end_of_programming_line2:
   507                           	opt stack 0
   508  00BCE2                     _failed_line2:
   509                           	opt stack 0
   510  00BCE2  46                 	db	70
   511  00BCE3  69                 	db	105
   512  00BCE4  6C                 	db	108
   513  00BCE5  65                 	db	101
   514  00BCE6  20                 	db	32
   515  00BCE7  63                 	db	99
   516  00BCE8  68                 	db	104
   517  00BCE9  65                 	db	101
   518  00BCEA  63                 	db	99
   519  00BCEB  6B                 	db	107
   520  00BCEC  20                 	db	32
   521  00BCED  66                 	db	102
   522  00BCEE  61                 	db	97
   523  00BCEF  69                 	db	105
   524  00BCF0  6C                 	db	108
   525  00BCF1  65                 	db	101
   526  00BCF2  64                 	db	100
   527  00BCF3  00                 	db	0
   528  00BCF4                     __end_of_failed_line2:
   529                           	opt stack 0
   530  00BCF4                     _found_line4:
   531                           	opt stack 0
   532  00BCF4  50                 	db	80
   533  00BCF5  72                 	db	114
   534  00BCF6  65                 	db	101
   535  00BCF7  73                 	db	115
   536  00BCF8  73                 	db	115
   537  00BCF9  20                 	db	32
   538  00BCFA  74                 	db	116
   539  00BCFB  6F                 	db	111
   540  00BCFC  20                 	db	32
   541  00BCFD  75                 	db	117
   542  00BCFE  73                 	db	115
   543  00BCFF  65                 	db	101
   544  00BD00  20                 	db	32
   545  00BD01  66                 	db	102
   546  00BD02  69                 	db	105
   547  00BD03  6C                 	db	108
   548  00BD04  65                 	db	101
   549  00BD05  00                 	db	0
   550  00BD06                     __end_of_found_line4:
   551                           	opt stack 0
   552  00BD06                     _checked_line4:
   553                           	opt stack 0
   554  00BD06  50                 	db	80
   555  00BD07  72                 	db	114
   556  00BD08  65                 	db	101
   557  00BD09  73                 	db	115
   558  00BD0A  73                 	db	115
   559  00BD0B  20                 	db	32
   560  00BD0C  74                 	db	116
   561  00BD0D  6F                 	db	111
   562  00BD0E  20                 	db	32
   563  00BD0F  70                 	db	112
   564  00BD10  72                 	db	114
   565  00BD11  6F                 	db	111
   566  00BD12  67                 	db	103
   567  00BD13  72                 	db	114
   568  00BD14  61                 	db	97
   569  00BD15  6D                 	db	109
   570  00BD16  00                 	db	0
   571  00BD17                     __end_of_checked_line4:
   572                           	opt stack 0
   573  00BD17                     _search_line2:
   574                           	opt stack 0
   575  00BD17  4C                 	db	76
   576  00BD18  6F                 	db	111
   577  00BD19  6F                 	db	111
   578  00BD1A  6B                 	db	107
   579  00BD1B  69                 	db	105
   580  00BD1C  6E                 	db	110
   581  00BD1D  67                 	db	103
   582  00BD1E  20                 	db	32
   583  00BD1F  66                 	db	102
   584  00BD20  6F                 	db	111
   585  00BD21  72                 	db	114
   586  00BD22  20                 	db	32
   587  00BD23  66                 	db	102
   588  00BD24  69                 	db	105
   589  00BD25  6C                 	db	108
   590  00BD26  65                 	db	101
   591  00BD27  00                 	db	0
   592  00BD28                     __end_of_search_line2:
   593                           	opt stack 0
   594  00BD28                     _suspended_line4:
   595                           	opt stack 0
   596  00BD28  50                 	db	80
   597  00BD29  72                 	db	114
   598  00BD2A  65                 	db	101
   599  00BD2B  73                 	db	115
   600  00BD2C  73                 	db	115
   601  00BD2D  20                 	db	32
   602  00BD2E  74                 	db	116
   603  00BD2F  6F                 	db	111
   604  00BD30  20                 	db	32
   605  00BD31  72                 	db	114
   606  00BD32  65                 	db	101
   607  00BD33  73                 	db	115
   608  00BD34  75                 	db	117
   609  00BD35  6D                 	db	109
   610  00BD36  65                 	db	101
   611  00BD37  00                 	db	0
   612  00BD38                     __end_of_suspended_line4:
   613                           	opt stack 0
   614  00BD38                     _suspended_line1:
   615                           	opt stack 0
   616  00BD38  42                 	db	66
   617  00BD39  6F                 	db	111
   618  00BD3A  6F                 	db	111
   619  00BD3B  74                 	db	116
   620  00BD3C  6C                 	db	108
   621  00BD3D  6F                 	db	111
   622  00BD3E  61                 	db	97
   623  00BD3F  64                 	db	100
   624  00BD40  65                 	db	101
   625  00BD41  72                 	db	114
   626  00BD42  20                 	db	32
   627  00BD43  4D                 	db	77
   628  00BD44  6F                 	db	111
   629  00BD45  64                 	db	100
   630  00BD46  65                 	db	101
   631  00BD47  00                 	db	0
   632  00BD48                     __end_of_suspended_line1:
   633                           	opt stack 0
   634  00BD48                     _done_line4:
   635                           	opt stack 0
   636  00BD48  50                 	db	80
   637  00BD49  72                 	db	114
   638  00BD4A  65                 	db	101
   639  00BD4B  73                 	db	115
   640  00BD4C  73                 	db	115
   641  00BD4D  20                 	db	32
   642  00BD4E  74                 	db	116
   643  00BD4F  6F                 	db	111
   644  00BD50  20                 	db	32
   645  00BD51  72                 	db	114
   646  00BD52  65                 	db	101
   647  00BD53  62                 	db	98
   648  00BD54  6F                 	db	111
   649  00BD55  6F                 	db	111
   650  00BD56  74                 	db	116
   651  00BD57  00                 	db	0
   652  00BD58                     __end_of_done_line4:
   653                           	opt stack 0
   654  00BD58                     _done_line3:
   655                           	opt stack 0
   656  00BD58  50                 	db	80
   657  00BD59  61                 	db	97
   658  00BD5A  67                 	db	103
   659  00BD5B  65                 	db	101
   660  00BD5C  73                 	db	115
   661  00BD5D  20                 	db	32
   662  00BD5E  77                 	db	119
   663  00BD5F  72                 	db	114
   664  00BD60  69                 	db	105
   665  00BD61  74                 	db	116
   666  00BD62  74                 	db	116
   667  00BD63  65                 	db	101
   668  00BD64  6E                 	db	110
   669  00BD65  3A                 	db	58
   670  00BD66  20                 	db	32
   671  00BD67  00                 	db	0
   672  00BD68                     __end_of_done_line3:
   673                           	opt stack 0
   674  00BD68                     _done_line1:
   675                           	opt stack 0
   676  00BD68  42                 	db	66
   677  00BD69  6F                 	db	111
   678  00BD6A  6F                 	db	111
   679  00BD6B  74                 	db	116
   680  00BD6C  6C                 	db	108
   681  00BD6D  6F                 	db	111
   682  00BD6E  61                 	db	97
   683  00BD6F  64                 	db	100
   684  00BD70  65                 	db	101
   685  00BD71  72                 	db	114
   686  00BD72  20                 	db	32
   687  00BD73  4D                 	db	77
   688  00BD74  6F                 	db	111
   689  00BD75  64                 	db	100
   690  00BD76  65                 	db	101
   691  00BD77  00                 	db	0
   692  00BD78                     __end_of_done_line1:
   693                           	opt stack 0
   694  00BD78                     _programming_line4:
   695                           	opt stack 0
   696  00BD78  50                 	db	80
   697  00BD79  61                 	db	97
   698  00BD7A  67                 	db	103
   699  00BD7B  65                 	db	101
   700  00BD7C  73                 	db	115
   701  00BD7D  20                 	db	32
   702  00BD7E  77                 	db	119
   703  00BD7F  72                 	db	114
   704  00BD80  69                 	db	105
   705  00BD81  74                 	db	116
   706  00BD82  74                 	db	116
   707  00BD83  65                 	db	101
   708  00BD84  6E                 	db	110
   709  00BD85  3A                 	db	58
   710  00BD86  20                 	db	32
   711  00BD87  00                 	db	0
   712  00BD88                     __end_of_programming_line4:
   713                           	opt stack 0
   714  00BD88                     _programming_line1:
   715                           	opt stack 0
   716  00BD88  42                 	db	66
   717  00BD89  6F                 	db	111
   718  00BD8A  6F                 	db	111
   719  00BD8B  74                 	db	116
   720  00BD8C  6C                 	db	108
   721  00BD8D  6F                 	db	111
   722  00BD8E  61                 	db	97
   723  00BD8F  64                 	db	100
   724  00BD90  65                 	db	101
   725  00BD91  72                 	db	114
   726  00BD92  20                 	db	32
   727  00BD93  4D                 	db	77
   728  00BD94  6F                 	db	111
   729  00BD95  64                 	db	100
   730  00BD96  65                 	db	101
   731  00BD97  00                 	db	0
   732  00BD98                     __end_of_programming_line1:
   733                           	opt stack 0
   734  00BD98                     _failed_line1:
   735                           	opt stack 0
   736  00BD98  42                 	db	66
   737  00BD99  6F                 	db	111
   738  00BD9A  6F                 	db	111
   739  00BD9B  74                 	db	116
   740  00BD9C  6C                 	db	108
   741  00BD9D  6F                 	db	111
   742  00BD9E  61                 	db	97
   743  00BD9F  64                 	db	100
   744  00BDA0  65                 	db	101
   745  00BDA1  72                 	db	114
   746  00BDA2  20                 	db	32
   747  00BDA3  4D                 	db	77
   748  00BDA4  6F                 	db	111
   749  00BDA5  64                 	db	100
   750  00BDA6  65                 	db	101
   751  00BDA7  00                 	db	0
   752  00BDA8                     __end_of_failed_line1:
   753                           	opt stack 0
   754  00BDA8                     _checked_line1:
   755                           	opt stack 0
   756  00BDA8  42                 	db	66
   757  00BDA9  6F                 	db	111
   758  00BDAA  6F                 	db	111
   759  00BDAB  74                 	db	116
   760  00BDAC  6C                 	db	108
   761  00BDAD  6F                 	db	111
   762  00BDAE  61                 	db	97
   763  00BDAF  64                 	db	100
   764  00BDB0  65                 	db	101
   765  00BDB1  72                 	db	114
   766  00BDB2  20                 	db	32
   767  00BDB3  4D                 	db	77
   768  00BDB4  6F                 	db	111
   769  00BDB5  64                 	db	100
   770  00BDB6  65                 	db	101
   771  00BDB7  00                 	db	0
   772  00BDB8                     __end_of_checked_line1:
   773                           	opt stack 0
   774  00BDB8                     _verify_line1:
   775                           	opt stack 0
   776  00BDB8  42                 	db	66
   777  00BDB9  6F                 	db	111
   778  00BDBA  6F                 	db	111
   779  00BDBB  74                 	db	116
   780  00BDBC  6C                 	db	108
   781  00BDBD  6F                 	db	111
   782  00BDBE  61                 	db	97
   783  00BDBF  64                 	db	100
   784  00BDC0  65                 	db	101
   785  00BDC1  72                 	db	114
   786  00BDC2  20                 	db	32
   787  00BDC3  4D                 	db	77
   788  00BDC4  6F                 	db	111
   789  00BDC5  64                 	db	100
   790  00BDC6  65                 	db	101
   791  00BDC7  00                 	db	0
   792  00BDC8                     __end_of_verify_line1:
   793                           	opt stack 0
   794  00BDC8                     _found_line1:
   795                           	opt stack 0
   796  00BDC8  42                 	db	66
   797  00BDC9  6F                 	db	111
   798  00BDCA  6F                 	db	111
   799  00BDCB  74                 	db	116
   800  00BDCC  6C                 	db	108
   801  00BDCD  6F                 	db	111
   802  00BDCE  61                 	db	97
   803  00BDCF  64                 	db	100
   804  00BDD0  65                 	db	101
   805  00BDD1  72                 	db	114
   806  00BDD2  20                 	db	32
   807  00BDD3  4D                 	db	77
   808  00BDD4  6F                 	db	111
   809  00BDD5  64                 	db	100
   810  00BDD6  65                 	db	101
   811  00BDD7  00                 	db	0
   812  00BDD8                     __end_of_found_line1:
   813                           	opt stack 0
   814  00BDD8                     _search_line1:
   815                           	opt stack 0
   816  00BDD8  42                 	db	66
   817  00BDD9  6F                 	db	111
   818  00BDDA  6F                 	db	111
   819  00BDDB  74                 	db	116
   820  00BDDC  6C                 	db	108
   821  00BDDD  6F                 	db	111
   822  00BDDE  61                 	db	97
   823  00BDDF  64                 	db	100
   824  00BDE0  65                 	db	101
   825  00BDE1  72                 	db	114
   826  00BDE2  20                 	db	32
   827  00BDE3  4D                 	db	77
   828  00BDE4  6F                 	db	111
   829  00BDE5  64                 	db	100
   830  00BDE6  65                 	db	101
   831  00BDE7  00                 	db	0
   832  00BDE8                     __end_of_search_line1:
   833                           	opt stack 0
   834  00BDE8                     _start_line1:
   835                           	opt stack 0
   836  00BDE8  42                 	db	66
   837  00BDE9  6F                 	db	111
   838  00BDEA  6F                 	db	111
   839  00BDEB  74                 	db	116
   840  00BDEC  6C                 	db	108
   841  00BDED  6F                 	db	111
   842  00BDEE  61                 	db	97
   843  00BDEF  64                 	db	100
   844  00BDF0  65                 	db	101
   845  00BDF1  72                 	db	114
   846  00BDF2  20                 	db	32
   847  00BDF3  4D                 	db	77
   848  00BDF4  6F                 	db	111
   849  00BDF5  64                 	db	100
   850  00BDF6  65                 	db	101
   851  00BDF7  00                 	db	0
   852  00BDF8                     __end_of_start_line1:
   853                           	opt stack 0
   854  00BDF8                     _failed_line3_checksum:
   855                           	opt stack 0
   856  00BDF8  43                 	db	67
   857  00BDF9  68                 	db	104
   858  00BDFA  65                 	db	101
   859  00BDFB  63                 	db	99
   860  00BDFC  6B                 	db	107
   861  00BDFD  73                 	db	115
   862  00BDFE  75                 	db	117
   863  00BDFF  6D                 	db	109
   864  00BE00  20                 	db	32
   865  00BE01  65                 	db	101
   866  00BE02  72                 	db	114
   867  00BE03  72                 	db	114
   868  00BE04  6F                 	db	111
   869  00BE05  72                 	db	114
   870  00BE06  00                 	db	0
   871  00BE07                     __end_of_failed_line3_checksum:
   872                           	opt stack 0
   873  00BE07                     _failed_line3_noNextRecord:
   874                           	opt stack 0
   875  00BE07  4E                 	db	78
   876  00BE08  6F                 	db	111
   877  00BE09  20                 	db	32
   878  00BE0A  6E                 	db	110
   879  00BE0B  65                 	db	101
   880  00BE0C  78                 	db	120
   881  00BE0D  74                 	db	116
   882  00BE0E  20                 	db	32
   883  00BE0F  72                 	db	114
   884  00BE10  65                 	db	101
   885  00BE11  63                 	db	99
   886  00BE12  6F                 	db	111
   887  00BE13  72                 	db	114
   888  00BE14  64                 	db	100
   889  00BE15  00                 	db	0
   890  00BE16                     __end_of_failed_line3_noNextRecord:
   891                           	opt stack 0
   892  00BE16                     _start_line4:
   893                           	opt stack 0
   894  00BE16  73                 	db	115
   895  00BE17  6F                 	db	111
   896  00BE18  6C                 	db	108
   897  00BE19  64                 	db	100
   898  00BE1A  65                 	db	101
   899  00BE1B  72                 	db	114
   900  00BE1C  6E                 	db	110
   901  00BE1D  65                 	db	101
   902  00BE1E  72                 	db	114
   903  00BE1F  64                 	db	100
   904  00BE20  2E                 	db	46
   905  00BE21  63                 	db	99
   906  00BE22  6F                 	db	111
   907  00BE23  6D                 	db	109
   908  00BE24  00                 	db	0
   909  00BE25                     __end_of_start_line4:
   910                           	opt stack 0
   911  00BE25                     _failed_line3_dataTooLong:
   912                           	opt stack 0
   913  00BE25  44                 	db	68
   914  00BE26  61                 	db	97
   915  00BE27  74                 	db	116
   916  00BE28  61                 	db	97
   917  00BE29  20                 	db	32
   918  00BE2A  74                 	db	116
   919  00BE2B  6F                 	db	111
   920  00BE2C  6F                 	db	111
   921  00BE2D  20                 	db	32
   922  00BE2E  6C                 	db	108
   923  00BE2F  6F                 	db	111
   924  00BE30  6E                 	db	110
   925  00BE31  67                 	db	103
   926  00BE32  00                 	db	0
   927  00BE33                     __end_of_failed_line3_dataTooLong:
   928                           	opt stack 0
   929  00BE33                     _reboot_line1:
   930                           	opt stack 0
   931  00BE33  52                 	db	82
   932  00BE34  65                 	db	101
   933  00BE35  62                 	db	98
   934  00BE36  6F                 	db	111
   935  00BE37  6F                 	db	111
   936  00BE38  74                 	db	116
   937  00BE39  69                 	db	105
   938  00BE3A  6E                 	db	110
   939  00BE3B  67                 	db	103
   940  00BE3C  2E                 	db	46
   941  00BE3D  2E                 	db	46
   942  00BE3E  2E                 	db	46
   943  00BE3F  00                 	db	0
   944  00BE40                     __end_of_reboot_line1:
   945                           	opt stack 0
   946  00BE40                     _verify_line2:
   947                           	opt stack 0
   948  00BE40  56                 	db	86
   949  00BE41  65                 	db	101
   950  00BE42  72                 	db	114
   951  00BE43  69                 	db	105
   952  00BE44  66                 	db	102
   953  00BE45  79                 	db	121
   954  00BE46  69                 	db	105
   955  00BE47  6E                 	db	110
   956  00BE48  67                 	db	103
   957  00BE49  2E                 	db	46
   958  00BE4A  2E                 	db	46
   959  00BE4B  2E                 	db	46
   960  00BE4C  00                 	db	0
   961  00BE4D                     __end_of_verify_line2:
   962                           	opt stack 0
   963  00BE4D                     _suspended_line2:
   964                           	opt stack 0
   965  00BE4D  53                 	db	83
   966  00BE4E  75                 	db	117
   967  00BE4F  73                 	db	115
   968  00BE50  70                 	db	112
   969  00BE51  65                 	db	101
   970  00BE52  6E                 	db	110
   971  00BE53  64                 	db	100
   972  00BE54  65                 	db	101
   973  00BE55  64                 	db	100
   974  00BE56  00                 	db	0
   975  00BE57                     __end_of_suspended_line2:
   976                           	opt stack 0
   977  00BE57                     _search_line4:
   978                           	opt stack 0
   979  00BE57  64                 	db	100
   980  00BE58  72                 	db	114
   981  00BE59  69                 	db	105
   982  00BE5A  76                 	db	118
   983  00BE5B  65                 	db	101
   984  00BE5C  2E                 	db	46
   985  00BE5D  2E                 	db	46
   986  00BE5E  2E                 	db	46
   987  00BE5F  00                 	db	0
   988  00BE60                     __end_of_search_line4:
   989                           	opt stack 0
   990  00BE60                     _start_line2:
   991                           	opt stack 0
   992  00BE60  56                 	db	86
   993  00BE61  65                 	db	101
   994  00BE62  72                 	db	114
   995  00BE63  73                 	db	115
   996  00BE64  69                 	db	105
   997  00BE65  6F                 	db	111
   998  00BE66  6E                 	db	110
   999  00BE67  20                 	db	32
  1000  00BE68  00                 	db	0
  1001  00BE69                     __end_of_start_line2:
  1002                           	opt stack 0
  1003  00BE69                     _failed_line4:
  1004                           	opt stack 0
  1005  00BE69  52                 	db	82
  1006  00BE6A  65                 	db	101
  1007  00BE6B  63                 	db	99
  1008  00BE6C  6F                 	db	111
  1009  00BE6D  72                 	db	114
  1010  00BE6E  64                 	db	100
  1011  00BE6F  20                 	db	32
  1012  00BE70  00                 	db	0
  1013  00BE71                     __end_of_failed_line4:
  1014                           	opt stack 0
  1015  00BE71                     _checked_line3:
  1016                           	opt stack 0
  1017  00BE71  72                 	db	114
  1018  00BE72  65                 	db	101
  1019  00BE73  63                 	db	99
  1020  00BE74  6F                 	db	111
  1021  00BE75  72                 	db	114
  1022  00BE76  64                 	db	100
  1023  00BE77  73                 	db	115
  1024  00BE78  00                 	db	0
  1025  00BE79                     __end_of_checked_line3:
  1026                           	opt stack 0
  1027  00BE79                     _USB_SD_Ptr:
  1028                           	opt stack 0
  1029  00BE79  CB                 	db	low _sd000
  1030  00BE7A  BF                 	db	high _sd000
  1031  00BE7B  E7                 	db	low _sd001
  1032  00BE7C  BE                 	db	high _sd001
  1033  00BE7D  1B                 	db	low _sd002
  1034  00BE7E  BF                 	db	high _sd002
  1035  00BE7F  8A                 	db	low _sd003
  1036  00BE80  BF                 	db	high _sd003
  1037  00BE81                     __end_of_USB_SD_Ptr:
  1038                           	opt stack 0
  1039  00BE81                     _programming_line3:
  1040                           	opt stack 0
  1041  00BE81  45                 	db	69
  1042  00BE82  6E                 	db	110
  1043  00BE83  74                 	db	116
  1044  00BE84  72                 	db	114
  1045  00BE85  79                 	db	121
  1046  00BE86  20                 	db	32
  1047  00BE87  00                 	db	0
  1048  00BE88                     __end_of_programming_line3:
  1049                           	opt stack 0
  1050  00BE88                     _verify_line3:
  1051                           	opt stack 0
  1052  00BE88  52                 	db	82
  1053  00BE89  65                 	db	101
  1054  00BE8A  63                 	db	99
  1055  00BE8B  6F                 	db	111
  1056  00BE8C  72                 	db	114
  1057  00BE8D  64                 	db	100
  1058  00BE8E  00                 	db	0
  1059  00BE8F                     __end_of_verify_line3:
  1060                           	opt stack 0
  1061  00BE8F                     _found_line3b:
  1062                           	opt stack 0
  1063  00BE8F  20                 	db	32
  1064  00BE90  62                 	db	98
  1065  00BE91  79                 	db	121
  1066  00BE92  74                 	db	116
  1067  00BE93  65                 	db	101
  1068  00BE94  73                 	db	115
  1069  00BE95  00                 	db	0
  1070  00BE96                     __end_of_found_line3b:
  1071                           	opt stack 0
  1072  00BE96                     _found_line3:
  1073                           	opt stack 0
  1074  00BE96  53                 	db	83
  1075  00BE97  69                 	db	105
  1076  00BE98  7A                 	db	122
  1077  00BE99  65                 	db	101
  1078  00BE9A  3A                 	db	58
  1079  00BE9B  20                 	db	32
  1080  00BE9C  00                 	db	0
  1081  00BE9D                     __end_of_found_line3:
  1082                           	opt stack 0
  1083  00BE9D                     _done_line2:
  1084                           	opt stack 0
  1085  00BE9D  44                 	db	68
  1086  00BE9E  6F                 	db	111
  1087  00BE9F  6E                 	db	110
  1088  00BEA0  65                 	db	101
  1089  00BEA1  21                 	db	33
  1090  00BEA2  00                 	db	0
  1091  00BEA3                     __end_of_done_line2:
  1092                           	opt stack 0
  1093  00BEA3                     _USB_CD_Ptr:
  1094                           	opt stack 0
  1095  00BEA3  A7                 	db	low _configDescriptor1
  1096  00BEA4  BE                 	db	high _configDescriptor1
  1097  00BEA5                     __end_of_USB_CD_Ptr:
  1098                           	opt stack 0
  1099  00BEA5                     _suspended_line3:
  1100                           	opt stack 0
  1101  00BEA5  00                 	db	0
  1102  00BEA6                     __end_of_suspended_line3:
  1103                           	opt stack 0
  1104  00BEA6                     _start_line3:
  1105                           	opt stack 0
  1106  00BEA6  00                 	db	0
  1107  00BEA7                     __end_of_start_line3:
  1108                           	opt stack 0
  1109  00BEA7                     _configDescriptor1:
  1110                           	opt stack 0
  1111  00BEA7  09                 	db	9
  1112  00BEA8  02                 	db	2
  1113  00BEA9  40                 	db	64
  1114  00BEAA  00                 	db	0
  1115  00BEAB  02                 	db	2
  1116  00BEAC  01                 	db	1
  1117  00BEAD  00                 	db	0
  1118  00BEAE  C0                 	db	192
  1119  00BEAF  32                 	db	50
  1120  00BEB0  09                 	db	9
  1121  00BEB1  04                 	db	4
  1122  00BEB2  00                 	db	0
  1123  00BEB3  00                 	db	0
  1124  00BEB4  02                 	db	2
  1125  00BEB5  03                 	db	3
  1126  00BEB6  00                 	db	0
  1127  00BEB7  00                 	db	0
  1128  00BEB8  00                 	db	0
  1129  00BEB9  09                 	db	9
  1130  00BEBA  21                 	db	33
  1131  00BEBB  11                 	db	17
  1132  00BEBC  01                 	db	1
  1133  00BEBD  00                 	db	0
  1134  00BEBE  01                 	db	1
  1135  00BEBF  22                 	db	34
  1136  00BEC0  1D                 	db	29
  1137  00BEC1  00                 	db	0
  1138  00BEC2  07                 	db	7
  1139  00BEC3  05                 	db	5
  1140  00BEC4  81                 	db	129
  1141  00BEC5  03                 	db	3
  1142  00BEC6  40                 	db	64
  1143  00BEC7  00                 	db	0
  1144  00BEC8  01                 	db	1
  1145  00BEC9  07                 	db	7
  1146  00BECA  05                 	db	5
  1147  00BECB  01                 	db	1
  1148  00BECC  03                 	db	3
  1149  00BECD  40                 	db	64
  1150  00BECE  00                 	db	0
  1151  00BECF  01                 	db	1
  1152  00BED0  09                 	db	9
  1153  00BED1  04                 	db	4
  1154  00BED2  01                 	db	1
  1155  00BED3  00                 	db	0
  1156  00BED4  02                 	db	2
  1157  00BED5  08                 	db	8
  1158  00BED6  06                 	db	6
  1159  00BED7  50                 	db	80
  1160  00BED8  00                 	db	0
  1161  00BED9  07                 	db	7
  1162  00BEDA  05                 	db	5
  1163  00BEDB  82                 	db	130
  1164  00BEDC  02                 	db	2
  1165  00BEDD  40                 	db	64
  1166  00BEDE  00                 	db	0
  1167  00BEDF  01                 	db	1
  1168  00BEE0  07                 	db	7
  1169  00BEE1  05                 	db	5
  1170  00BEE2  02                 	db	2
  1171  00BEE3  02                 	db	2
  1172  00BEE4  40                 	db	64
  1173  00BEE5  00                 	db	0
  1174  00BEE6  01                 	db	1
  1175  00BEE7                     __end_of_configDescriptor1:
  1176                           	opt stack 0
  1177  00BEE7                     _sd001:
  1178                           	opt stack 0
  1179  00BEE7  34                 	db	52
  1180  00BEE8  03                 	db	3
  1181  00BEE9  0053               	dw	83
  1182  00BEEB  006F               	dw	111
  1183  00BEED  006C               	dw	108
  1184  00BEEF  0064               	dw	100
  1185  00BEF1  0065               	dw	101
  1186  00BEF3  0072               	dw	114
  1187  00BEF5  006E               	dw	110
  1188  00BEF7  0065               	dw	101
  1189  00BEF9  0072               	dw	114
  1190  00BEFB  0064               	dw	100
  1191  00BEFD  002E               	dw	46
  1192  00BEFF  0063               	dw	99
  1193  00BF01  006F               	dw	111
  1194  00BF03  006D               	dw	109
  1195  00BF05  0020               	dw	32
  1196  00BF07  0020               	dw	32
  1197  00BF09  0020               	dw	32
  1198  00BF0B  0020               	dw	32
  1199  00BF0D  0020               	dw	32
  1200  00BF0F  0020               	dw	32
  1201  00BF11  0020               	dw	32
  1202  00BF13  0020               	dw	32
  1203  00BF15  0020               	dw	32
  1204  00BF17  0020               	dw	32
  1205  00BF19  0020               	dw	32
  1206  00BF1B                     __end_of_sd001:
  1207                           	opt stack 0
  1208  00BF1B                     _sd002:
  1209                           	opt stack 0
  1210  00BF1B  2E                 	db	46
  1211  00BF1C  03                 	db	3
  1212  00BF1D  004D               	dw	77
  1213  00BF1F  0050               	dw	80
  1214  00BF21  0050               	dw	80
  1215  00BF23  0054               	dw	84
  1216  00BF25  0053               	dw	83
  1217  00BF27  006F               	dw	111
  1218  00BF29  006C               	dw	108
  1219  00BF2B  0061               	dw	97
  1220  00BF2D  0072               	dw	114
  1221  00BF2F  0020               	dw	32
  1222  00BF31  0043               	dw	67
  1223  00BF33  0068               	dw	104
  1224  00BF35  0061               	dw	97
  1225  00BF37  0072               	dw	114
  1226  00BF39  0067               	dw	103
  1227  00BF3B  0065               	dw	101
  1228  00BF3D  0072               	dw	114
  1229  00BF3F  0020               	dw	32
  1230  00BF41  0052               	dw	82
  1231  00BF43  0065               	dw	101
  1232  00BF45  0076               	dw	118
  1233  00BF47  0043               	dw	67
  1234  00BF49                     __end_of_sd002:
  1235                           	opt stack 0
  1236  00BF49                     _inq_resp:
  1237                           	opt stack 0
  1238  00BF49  00                 	db	0
  1239  00BF4A  80                 	db	128
  1240  00BF4B  04                 	db	4
  1241  00BF4C  02                 	db	2
  1242  00BF4D  20                 	db	32
  1243  00BF4E  00                 	db	0
  1244  00BF4F  00                 	db	0
  1245  00BF50  00                 	db	0
  1246  00BF51  4D                 	db	77
  1247  00BF52  69                 	db	105
  1248  00BF53  63                 	db	99
  1249  00BF54  72                 	db	114
  1250  00BF55  6F                 	db	111
  1251  00BF56  63                 	db	99
  1252  00BF57  68                 	db	104
  1253  00BF58  70                 	db	112
  1254  00BF59  4D                 	db	77
  1255  00BF5A  61                 	db	97
  1256  00BF5B  73                 	db	115
  1257  00BF5C  73                 	db	115
  1258  00BF5D  20                 	db	32
  1259  00BF5E  53                 	db	83
  1260  00BF5F  74                 	db	116
  1261  00BF60  6F                 	db	111
  1262  00BF61  72                 	db	114
  1263  00BF62  61                 	db	97
  1264  00BF63  67                 	db	103
  1265  00BF64  65                 	db	101
  1266  00BF65  20                 	db	32
  1267  00BF66  20                 	db	32
  1268  00BF67  20                 	db	32
  1269  00BF68  20                 	db	32
  1270  00BF69  30                 	db	48
  1271  00BF6A  30                 	db	48
  1272  00BF6B  30                 	db	48
  1273  00BF6C  31                 	db	49
  1274  00BF6D                     __end_of_inq_resp:
  1275                           	opt stack 0
  1276  00BF6D                     _hid_rpt01:
  1277                           	opt stack 0
  1278  00BF6D  06                 	db	6
  1279  00BF6E  00                 	db	0
  1280  00BF6F  FF                 	db	255
  1281  00BF70  09                 	db	9
  1282  00BF71  01                 	db	1
  1283  00BF72  A1                 	db	161
  1284  00BF73  01                 	db	1
  1285  00BF74  19                 	db	25
  1286  00BF75  01                 	db	1
  1287  00BF76  29                 	db	41
  1288  00BF77  40                 	db	64
  1289  00BF78  15                 	db	21
  1290  00BF79  00                 	db	0
  1291  00BF7A  26                 	db	38
  1292  00BF7B  FF                 	db	255
  1293  00BF7C  00                 	db	0
  1294  00BF7D  75                 	db	117
  1295  00BF7E  08                 	db	8
  1296  00BF7F  95                 	db	149
  1297  00BF80  40                 	db	64
  1298  00BF81  81                 	db	129
  1299  00BF82  00                 	db	0
  1300  00BF83  19                 	db	25
  1301  00BF84  01                 	db	1
  1302  00BF85  29                 	db	41
  1303  00BF86  40                 	db	64
  1304  00BF87  91                 	db	145
  1305  00BF88  00                 	db	0
  1306  00BF89  C0                 	db	192
  1307  00BF8A                     __end_of_hid_rpt01:
  1308                           	opt stack 0
  1309  00BF8A                     _sd003:
  1310                           	opt stack 0
  1311  00BF8A  1A                 	db	26
  1312  00BF8B  03                 	db	3
  1313  00BF8C  0031               	dw	49
  1314  00BF8E  0032               	dw	50
  1315  00BF90  0033               	dw	51
  1316  00BF92  0034               	dw	52
  1317  00BF94  0035               	dw	53
  1318  00BF96  0036               	dw	54
  1319  00BF98  0037               	dw	55
  1320  00BF9A  0038               	dw	56
  1321  00BF9C  0039               	dw	57
  1322  00BF9E  0030               	dw	48
  1323  00BFA0  0039               	dw	57
  1324  00BFA2  0039               	dw	57
  1325  00BFA4                     __end_of_sd003:
  1326                           	opt stack 0
  1327  00BFA4                     _device_dsc:
  1328                           	opt stack 0
  1329  00BFA4  12                 	db	18
  1330  00BFA5  01                 	db	1
  1331  00BFA6  0200               	dw	512
  1332  00BFA8  00                 	db	0
  1333  00BFA9  00                 	db	0
  1334  00BFAA  00                 	db	0
  1335  00BFAB  08                 	db	8
  1336  00BFAC  04D8               	dw	1240
  1337  00BFAE  F08E               	dw	61582
  1338  00BFB0  0100               	dw	256
  1339  00BFB2  01                 	db	1
  1340  00BFB3  02                 	db	2
  1341  00BFB4  00                 	db	0
  1342  00BFB5  01                 	db	1
  1343  00BFB6                     __end_of_device_dsc:
  1344                           	opt stack 0
  1345  00BFB6                     _bootloader_filename:
  1346                           	opt stack 0
  1347  00BFB6  46                 	db	70
  1348  00BFB7  49                 	db	73
  1349  00BFB8  52                 	db	82
  1350  00BFB9  4D                 	db	77
  1351  00BFBA  57                 	db	87
  1352  00BFBB  41                 	db	65
  1353  00BFBC  52                 	db	82
  1354  00BFBD  45                 	db	69
  1355  00BFBE  00                 	db	0
  1356  00BFBF                     __end_of_bootloader_filename:
  1357                           	opt stack 0
  1358  00BFBF                     _flash_command_pagesize_528:
  1359                           	opt stack 0
  1360  00BFBF  3D                 	db	61
  1361  00BFC0  2A                 	db	42
  1362  00BFC1  80                 	db	128
  1363  00BFC2  A7                 	db	167
  1364  00BFC3                     __end_of_flash_command_pagesize_528:
  1365                           	opt stack 0
  1366  00BFC3                     _flash_command_pagesize_512:
  1367                           	opt stack 0
  1368  00BFC3  3D                 	db	61
  1369  00BFC4  2A                 	db	42
  1370  00BFC5  80                 	db	128
  1371  00BFC6  A6                 	db	166
  1372  00BFC7                     __end_of_flash_command_pagesize_512:
  1373                           	opt stack 0
  1374  00BFC7                     _bootloader_extension:
  1375                           	opt stack 0
  1376  00BFC7  48                 	db	72
  1377  00BFC8  45                 	db	69
  1378  00BFC9  58                 	db	88
  1379  00BFCA  00                 	db	0
  1380  00BFCB                     __end_of_bootloader_extension:
  1381                           	opt stack 0
  1382  00BFCB                     _sd000:
  1383                           	opt stack 0
  1384  00BFCB  04                 	db	4
  1385  00BFCC  03                 	db	3
  1386  00BFCD  0409               	dw	1033
  1387  00BFCF                     __end_of_sd000:
  1388                           	opt stack 0
  1389  0000                     _RPINR23	set	3838
  1390  0000                     _RPOR23	set	3799
  1391  0000                     _RPINR22	set	3837
  1392  0000                     _RPOR22	set	3798
  1393  0000                     _RPOR21	set	3797
  1394  0000                     _RPINR21	set	3836
  1395  0000                     _RPINR2	set	3810
  1396  0000                     _RPINR3	set	3811
  1397  0000                     _RPINR1	set	3809
  1398  0000                     _PPSCONbits	set	3775
  1399  0000                     _ODCON3bits	set	3904
  1400  0000                     _ANCON0bits	set	3912
  1401  0000                     _UEP0bits	set	3878
  1402  0000                     _UIEbits	set	3894
  1403  0000                     _UADDR	set	3896
  1404  0000                     _UIE	set	3894
  1405  0000                     _UEIE	set	3895
  1406  0000                     _UCFG	set	3897
  1407  0000                     _UEP1	set	3879
  1408  0000                     _UEP0	set	3878
  1409  0000                     _TBLPTR	set	4086
  1410  0000                     _DMACON2bits	set	3974
  1411  0000                     _SSP2CON1bits	set	3954
  1412  0000                     _SSP2STATbits	set	3955
  1413  0000                     _INTCON	set	4082
  1414  0000                     _EECON1	set	4006
  1415  0000                     _TABLAT	set	4085
  1416  0000                     _EECON1bits	set	4006
  1417  0000                     _SSP1CON1	set	4038
  1418  0000                     _SSP1BUF	set	4041
  1419  0000                     _SSP1CON2bits	set	4037
  1420  0000                     _SSP1CON1bits	set	4038
  1421  0000                     _SSP1ADD	set	4040
  1422  0000                     _SSP1STATbits	set	4039
  1423  0000                     _LATEbits	set	3981
  1424  0000                     _TRISEbits	set	3990
  1425  0000                     _LATBbits	set	3978
  1426  0000                     _TRISBbits	set	3987
  1427  0000                     _LATDbits	set	3980
  1428  0000                     _TRISDbits	set	3989
  1429  0000                     _LATCbits	set	3979
  1430  0000                     _TRISCbits	set	3988
  1431  0000                     _T0CONbits	set	4053
  1432  0000                     _INTCON2bits	set	4081
  1433  0000                     _EECON2	set	4007
  1434  0000                     _PORTBbits	set	3969
  1435  0000                     _INTCON3bits	set	4080
  1436  0000                     _TMR0L	set	4054
  1437  0000                     _TMR0H	set	4055
  1438  0000                     _INTCONbits	set	4082
  1439  0000                     _OSCCON	set	4051
  1440  0000                     _OSCTUNEbits	set	3995
  1441  0000                     _PORTAbits	set	3968
  1442  0000                     _TRISAbits	set	3986
  1443  0000                     _LATAbits	set	3977
  1444  0000                     _PIR3bits	set	4004
  1445  0000                     _DMABCL	set	3943
  1446  0000                     _DMABCH	set	3942
  1447  0000                     _RXADDRL	set	3945
  1448  0000                     _RXADDRH	set	3944
  1449  0000                     _DMACON1bits	set	3976
  1450  0000                     _TXADDRL	set	3947
  1451  0000                     _TXADDRH	set	3946
  1452  0000                     _PORTDbits	set	3971
  1453  0000                     _USTAT	set	3940
  1454  0000                     _PIR2bits	set	4001
  1455  0000                     _UCON	set	3941
  1456  0000                     _UIRbits	set	3938
  1457  0000                     _UCONbits	set	3941
  1458  0000                     _UIR	set	3938
  1459  0000                     _UEIR	set	3939
  1460  0000                     _PIE2bits	set	4000
  1461  00BFCF                     STR_12:
  1462  00BFCF  68                 	db	104	;'h'
  1463  00BFD0  65                 	db	101	;'e'
  1464  00BFD1  6C                 	db	108	;'l'
  1465  00BFD2  6C                 	db	108	;'l'
  1466  00BFD3  6F                 	db	111	;'o'
  1467  00BFD4  20                 	db	32
  1468  00BFD5  77                 	db	119	;'w'
  1469  00BFD6  6F                 	db	111	;'o'
  1470  00BFD7  72                 	db	114	;'r'
  1471  00BFD8  6C                 	db	108	;'l'
  1472  00BFD9  64                 	db	100	;'d'
  1473  00BFDA  21                 	db	33
  1474  00BFDB  00                 	db	0
  1475  00BFDC                     STR_9:
  1476  00BFDC  53                 	db	83	;'S'
  1477  00BFDD  6F                 	db	111	;'o'
  1478  00BFDE  6C                 	db	108	;'l'
  1479  00BFDF  61                 	db	97	;'a'
  1480  00BFE0  72                 	db	114	;'r'
  1481  00BFE1  43                 	db	67	;'C'
  1482  00BFE2  68                 	db	104	;'h'
  1483  00BFE3  61                 	db	97	;'a'
  1484  00BFE4  72                 	db	114	;'r'
  1485  00BFE5  67                 	db	103	;'g'
  1486  00BFE6  72                 	db	114	;'r'
  1487  00BFE7  00                 	db	0
  1488  00BFE8                     STR_10:
  1489  00BFE8  46                 	db	70	;'F'
  1490  00BFE9  49                 	db	73	;'I'
  1491  00BFEA  4C                 	db	76	;'L'
  1492  00BFEB  45                 	db	69	;'E'
  1493  00BFEC  20                 	db	32
  1494  00BFED  20                 	db	32
  1495  00BFEE  20                 	db	32
  1496  00BFEF  20                 	db	32
  1497  00BFF0  00                 	db	0
  1498  00BFF1                     STR_1:
  1499  00BFF1  4D                 	db	77	;'M'
  1500  00BFF2  53                 	db	83	;'S'
  1501  00BFF3  44                 	db	68	;'D'
  1502  00BFF4  4F                 	db	79	;'O'
  1503  00BFF5  53                 	db	83	;'S'
  1504  00BFF6  35                 	db	53	;'5'
  1505  00BFF7  2E                 	db	46
  1506  00BFF8  30                 	db	48	;'0'
  1507  00BFF9  00                 	db	0
  1508  00BFFA                     STR_11:
  1509  00BFFA  54                 	db	84	;'T'
  1510  00BFFB  58                 	db	88	;'X'
  1511  00BFFC  54                 	db	84	;'T'
  1512  00BFFD  00                 	db	0
  1513  0000                     
  1514                           ; #config settings
  1515  00BFFE  00                 	db	0	; dummy byte at the end
  1516  0000                     
  1517                           	psect	cinit
  1518  007F0C                     __pcinit:
  1519                           	opt stack 0
  1520  007F0C                     start_initialization:
  1521                           	opt stack 0
  1522  007F0C                     __initialization:
  1523                           	opt stack 0
  1524                           
  1525                           ; Initialize objects allocated to BANK1 (37 bytes)
  1526                           ; load TBLPTR registers with __pidataBANK1
  1527  007F0C  0E0C               	movlw	low __pidataBANK1
  1528  007F0E  6EF6               	movwf	tblptrl,c
  1529  007F10  0E99               	movlw	high __pidataBANK1
  1530  007F12  6EF7               	movwf	tblptrh,c
  1531  007F14  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1532  007F16  6EF8               	movwf	tblptru,c
  1533  007F18  EE01  F0B3         	lfsr	0,__pdataBANK1
  1534  007F1C  EE10 F025          	lfsr	1,37
  1535  007F20                     copy_data0:
  1536  007F20  0009               	tblrd		*+
  1537  007F22  CFF5 FFEE          	movff	tablat,postinc0
  1538  007F26  50E5               	movf	postdec1,w,c
  1539  007F28  50E1               	movf	fsr1l,w,c
  1540  007F2A  E1FA               	bnz	copy_data0
  1541                           
  1542                           ; Initialize objects allocated to BANK0 (1 bytes)
  1543                           ; load TBLPTR registers with __pidataBANK0
  1544  007F2C  0E32               	movlw	low __pidataBANK0
  1545  007F2E  6EF6               	movwf	tblptrl,c
  1546  007F30  0E9D               	movlw	high __pidataBANK0
  1547  007F32  6EF7               	movwf	tblptrh,c
  1548  007F34  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1549  007F36  6EF8               	movwf	tblptru,c
  1550  007F38  0009               	tblrd		*+	;fetch initializer
  1551  007F3A  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1552                           
  1553                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1554  007F3E  EE03  F0C0         	lfsr	0,__pbssBIGRAMll
  1555  007F42  EE12 F000          	lfsr	1,512
  1556  007F46                     clear_0:
  1557  007F46  6AEE               	clrf	postinc0,c
  1558  007F48  50E5               	movf	postdec1,w,c
  1559  007F4A  50E1               	movf	fsr1l,w,c
  1560  007F4C  E1FC               	bnz	clear_0
  1561  007F4E  50E2               	movf	fsr1h,w,c
  1562  007F50  E1FA               	bnz	clear_0
  1563                           
  1564                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1565  007F52  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1566  007F56  EE14 F000          	lfsr	1,1024
  1567  007F5A                     clear_1:
  1568  007F5A  6AEE               	clrf	postinc0,c
  1569  007F5C  50E5               	movf	postdec1,w,c
  1570  007F5E  50E1               	movf	fsr1l,w,c
  1571  007F60  E1FC               	bnz	clear_1
  1572  007F62  50E2               	movf	fsr1h,w,c
  1573  007F64  E1FA               	bnz	clear_1
  1574                           
  1575                           ; Clear objects allocated to BANK3 (192 bytes)
  1576  007F66  EE03  F000         	lfsr	0,__pbssBANK3
  1577  007F6A  0EC0               	movlw	192
  1578  007F6C                     clear_2:
  1579  007F6C  6AEE               	clrf	postinc0,c
  1580  007F6E  06E8               	decf	wreg,f,c
  1581  007F70  E1FD               	bnz	clear_2
  1582                           
  1583                           ; Clear objects allocated to BANK2 (194 bytes)
  1584  007F72  EE02  F000         	lfsr	0,__pbssBANK2
  1585  007F76  0EC2               	movlw	194
  1586  007F78                     clear_3:
  1587  007F78  6AEE               	clrf	postinc0,c
  1588  007F7A  06E8               	decf	wreg,f,c
  1589  007F7C  E1FD               	bnz	clear_3
  1590                           
  1591                           ; Clear objects allocated to BANK1 (179 bytes)
  1592  007F7E  EE01  F000         	lfsr	0,__pbssBANK1
  1593  007F82  0EB3               	movlw	179
  1594  007F84                     clear_4:
  1595  007F84  6AEE               	clrf	postinc0,c
  1596  007F86  06E8               	decf	wreg,f,c
  1597  007F88  E1FD               	bnz	clear_4
  1598                           
  1599                           ; Clear objects allocated to BANK0 (58 bytes)
  1600  007F8A  EE00  F0C5         	lfsr	0,__pbssBANK0
  1601  007F8E  0E3A               	movlw	58
  1602  007F90                     clear_5:
  1603  007F90  6AEE               	clrf	postinc0,c
  1604  007F92  06E8               	decf	wreg,f,c
  1605  007F94  E1FD               	bnz	clear_5
  1606  007F96                     end_of_initialization:
  1607                           	opt stack 0
  1608  007F96                     __end_of__initialization:
  1609                           	opt stack 0
  1610  007F96  0100               	movlb	0
  1611  007F98  EF92  F01F         	goto	_main	;jump to C main() function
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           postinc0	equ	0xFEE
  1617                           wreg	equ	0xFE8
  1618                           postdec1	equ	0xFE5
  1619                           fsr1h	equ	0xFE2
  1620                           fsr1l	equ	0xFE1
  1621                           
  1622                           	psect	bssBANK0
  1623  0000C5                     __pbssBANK0:
  1624                           	opt stack 0
  1625  0000C5                     _os:
  1626                           	opt stack 0
  1627  0000C5                     	ds	6
  1628  0000CB                     _inPipes:
  1629                           	opt stack 0
  1630  0000CB                     	ds	6
  1631  0000D1                     _pBDTEntryIn:
  1632                           	opt stack 0
  1633  0000D1                     	ds	6
  1634  0000D7                     _hex_file_offset:
  1635                           	opt stack 0
  1636  0000D7                     	ds	4
  1637  0000DB                     _TransferLength:
  1638                           	opt stack 0
  1639  0000DB                     	ds	2
  1640  0000DD                     _USBMSDInHandle:
  1641                           	opt stack 0
  1642  0000DD                     	ds	2
  1643  0000DF                     _USBMSDOutHandle:
  1644                           	opt stack 0
  1645  0000DF                     	ds	2
  1646  0000E1                     _pBDTEntryEP0OutNext:
  1647                           	opt stack 0
  1648  0000E1                     	ds	2
  1649  0000E3                     _pBDTEntryEP0OutCurrent:
  1650                           	opt stack 0
  1651  0000E3                     	ds	2
  1652  0000E5                     _power_state:
  1653                           	opt stack 0
  1654  0000E5                     	ds	1
  1655  0000E6                     _userInterfaceStatus:
  1656                           	opt stack 0
  1657  0000E6                     	ds	1
  1658  0000E7                     _MSDHostNoData:
  1659                           	opt stack 0
  1660  0000E7                     	ds	1
  1661  0000E8                     _SoftDetach:
  1662                           	opt stack 0
  1663  0000E8                     	ds	1
  1664  0000E9                     _MSDRetryAttempt:
  1665                           	opt stack 0
  1666  0000E9                     	ds	1
  1667  0000EA                     _MSDWriteState:
  1668                           	opt stack 0
  1669  0000EA                     	ds	1
  1670  0000EB                     _MSDReadState:
  1671                           	opt stack 0
  1672  0000EB                     	ds	1
  1673  0000EC                     _MSDCommandState:
  1674                           	opt stack 0
  1675  0000EC                     	ds	1
  1676  0000ED                     _MSD_State:
  1677                           	opt stack 0
  1678  0000ED                     	ds	1
  1679  0000EE                     _USBDeferOUTDataStagePackets:
  1680                           	opt stack 0
  1681  0000EE                     	ds	1
  1682  0000EF                     _USBDeferINDataStagePackets:
  1683                           	opt stack 0
  1684  0000EF                     	ds	1
  1685  0000F0                     _USBStatusStageEnabledFlag2:
  1686                           	opt stack 0
  1687  0000F0                     	ds	1
  1688  0000F1                     _USBStatusStageEnabledFlag1:
  1689                           	opt stack 0
  1690  0000F1                     	ds	1
  1691  0000F2                     _USBDeferStatusStagePacket:
  1692                           	opt stack 0
  1693  0000F2                     	ds	1
  1694  0000F3                     _USBStatusStageTimeoutCounter:
  1695                           	opt stack 0
  1696  0000F3                     	ds	1
  1697  0000F4                     _endpoint_number:
  1698                           	opt stack 0
  1699  0000F4                     	ds	1
  1700  0000F5                     _RemoteWakeup:
  1701                           	opt stack 0
  1702  0000F5                     	ds	1
  1703  0000F6                     _controlTransferState:
  1704                           	opt stack 0
  1705  0000F6                     	ds	1
  1706  0000F7                     _shortPacketStatus:
  1707                           	opt stack 0
  1708  0000F7                     	ds	1
  1709  0000F8                     _USBDeviceState:
  1710                           	opt stack 0
  1711  0000F8                     	ds	1
  1712  0000F9                     _fast_read_cluster_number:
  1713                           	opt stack 0
  1714  0000F9                     	ds	2
  1715  0000FB                     _fast_read_cluster:
  1716                           	opt stack 0
  1717  0000FB                     	ds	2
  1718  0000FD                     _USTATcopy:
  1719                           	opt stack 0
  1720  0000FD                     	ds	1
  1721  0000FE                     _USBActiveConfiguration:
  1722                           	opt stack 0
  1723  0000FE                     	ds	1
  1724                           tblptru	equ	0xFF8
  1725                           tblptrh	equ	0xFF7
  1726                           tblptrl	equ	0xFF6
  1727                           tablat	equ	0xFF5
  1728                           postinc0	equ	0xFEE
  1729                           wreg	equ	0xFE8
  1730                           postdec1	equ	0xFE5
  1731                           fsr1h	equ	0xFE2
  1732                           fsr1l	equ	0xFE1
  1733                           
  1734                           	psect	dataBANK0
  1735  0000FF                     __pdataBANK0:
  1736                           	opt stack 0
  1737  0000FF                     _file_number:
  1738                           	opt stack 0
  1739  0000FF                     	ds	1
  1740                           tblptru	equ	0xFF8
  1741                           tblptrh	equ	0xFF7
  1742                           tblptrl	equ	0xFF6
  1743                           tablat	equ	0xFF5
  1744                           postinc0	equ	0xFEE
  1745                           wreg	equ	0xFE8
  1746                           postdec1	equ	0xFE5
  1747                           fsr1h	equ	0xFE2
  1748                           fsr1l	equ	0xFE1
  1749                           
  1750                           	psect	bssBANK1
  1751  000100                     __pbssBANK1:
  1752                           	opt stack 0
  1753  000100                     _gblCBW:
  1754                           	opt stack 0
  1755  000100                     	ds	31
  1756  00011F                     _gblSenseData:
  1757                           	opt stack 0
  1758  00011F                     	ds	18
  1759  000131                     _outPipes:
  1760                           	opt stack 0
  1761  000131                     	ds	8
  1762  000139                     _communicationSettings:
  1763                           	opt stack 0
  1764  000139                     	ds	7
  1765  000140                     _pBDTEntryOut:
  1766                           	opt stack 0
  1767  000140                     	ds	6
  1768  000146                     _extended_linear_address:
  1769                           	opt stack 0
  1770  000146                     	ds	4
  1771  00014A                     _hex_file_size:
  1772                           	opt stack 0
  1773  00014A                     	ds	4
  1774  00014E                     _file_maximum_address:
  1775                           	opt stack 0
  1776  00014E                     	ds	4
  1777  000152                     _file_minimum_address:
  1778                           	opt stack 0
  1779  000152                     	ds	4
  1780  000156                     _gblBLKLen:
  1781                           	opt stack 0
  1782  000156                     	ds	4
  1783  00015A                     _gblNumBLKS:
  1784                           	opt stack 0
  1785  00015A                     	ds	4
  1786  00015E                     _LBA:
  1787                           	opt stack 0
  1788  00015E                     	ds	4
  1789  000162                     _USB1msTickCount:
  1790                           	opt stack 0
  1791  000162                     	ds	4
  1792  000166                     _config_external:
  1793                           	opt stack 0
  1794  000166                     	ds	3
  1795  000169                     _config_internal:
  1796                           	opt stack 0
  1797  000169                     	ds	3
  1798  00016C                     _ep_data_out:
  1799                           	opt stack 0
  1800  00016C                     	ds	3
  1801  00016F                     _ep_data_in:
  1802                           	opt stack 0
  1803  00016F                     	ds	3
  1804  000172                     _FileAddress:
  1805                           	opt stack 0
  1806  000172                     	ds	2
  1807  000174                     _flash_pages_written:
  1808                           	opt stack 0
  1809  000174                     	ds	2
  1810  000176                     _total_hex_file_entries:
  1811                           	opt stack 0
  1812  000176                     	ds	2
  1813  000178                     _hex_file_entries:
  1814                           	opt stack 0
  1815  000178                     	ds	2
  1816  00017A                     _startup_timer:
  1817                           	opt stack 0
  1818  00017A                     	ds	2
  1819  00017C                     _system_ui_inactive_count:
  1820                           	opt stack 0
  1821  00017C                     	ds	2
  1822  00017E                     _USBInHandle:
  1823                           	opt stack 0
  1824  00017E                     	ds	2
  1825  000180                     _USBOutHandle:
  1826                           	opt stack 0
  1827  000180                     	ds	2
  1828  000182                     _gblMediaPresent:
  1829                           	opt stack 0
  1830  000182                     	ds	2
  1831  000184                     _MSBBufferIndex:
  1832                           	opt stack 0
  1833  000184                     	ds	2
  1834  000186                     _ptrNextData:
  1835                           	opt stack 0
  1836  000186                     	ds	2
  1837  000188                     _pDst:
  1838                           	opt stack 0
  1839  000188                     	ds	2
  1840  00018A                     _active_configuration:
  1841                           	opt stack 0
  1842  00018A                     	ds	1
  1843  00018B                     _start_from_byte_next:
  1844                           	opt stack 0
  1845  00018B                     	ds	1
  1846  00018C                     _last_error:
  1847                           	opt stack 0
  1848  00018C                     	ds	1
  1849  00018D                     _i2c_frequency:
  1850                           	opt stack 0
  1851  00018D                     	ds	1
  1852  00018E                     _MSDCBWValid:
  1853                           	opt stack 0
  1854  00018E                     	ds	1
  1855  00018F                     _gblCBWLength:
  1856                           	opt stack 0
  1857  00018F                     	ds	1
  1858  000190                     _USBTicksSinceSuspendEnd:
  1859                           	opt stack 0
  1860  000190                     	ds	1
  1861  000191                     _BothEP0OutUOWNsSet:
  1862                           	opt stack 0
  1863  000191                     	ds	1
  1864  000192                     _USBBusIsSuspended:
  1865                           	opt stack 0
  1866  000192                     	ds	1
  1867  000193                     _hex_file_entry:
  1868                           	opt stack 0
  1869  000193                     	ds	23
  1870  0001AA                     _mediaInformation:
  1871                           	opt stack 0
  1872  0001AA                     	ds	5
  1873  0001AF                     _USBAlternateInterface:
  1874                           	opt stack 0
  1875  0001AF                     	ds	2
  1876  0001B1                     _active_protocol:
  1877                           	opt stack 0
  1878  0001B1                     	ds	1
  1879  0001B2                     _idle_rate:
  1880                           	opt stack 0
  1881  0001B2                     	ds	1
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           postinc0	equ	0xFEE
  1887                           wreg	equ	0xFE8
  1888                           postdec1	equ	0xFE5
  1889                           fsr1h	equ	0xFE2
  1890                           fsr1l	equ	0xFE1
  1891                           
  1892                           	psect	dataBANK1
  1893  0001B3                     __pdataBANK1:
  1894                           	opt stack 0
  1895  0001B3                     _LUN:
  1896                           	opt stack 0
  1897  0001B3                     	ds	20
  1898  0001C7                     i2c_display_send_init_sequence@F6810:
  1899                           	opt stack 0
  1900  0001C7                     	ds	9
  1901  0001D0                     	ds	8
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           postinc0	equ	0xFEE
  1907                           wreg	equ	0xFE8
  1908                           postdec1	equ	0xFE5
  1909                           fsr1h	equ	0xFE2
  1910                           fsr1l	equ	0xFE1
  1911                           
  1912                           	psect	bssBANK2
  1913  000200                     __pbssBANK2:
  1914                           	opt stack 0
  1915  000200                     _display_content:
  1916                           	opt stack 0
  1917  000200                     	ds	80
  1918  000250                     _ReceivedDataBuffer:
  1919                           	opt stack 0
  1920  000250                     	ds	64
  1921  000290                     _file_buffer:
  1922                           	opt stack 0
  1923  000290                     	ds	50
  1924                           tblptru	equ	0xFF8
  1925                           tblptrh	equ	0xFF7
  1926                           tblptrl	equ	0xFF6
  1927                           tablat	equ	0xFF5
  1928                           postinc0	equ	0xFEE
  1929                           wreg	equ	0xFE8
  1930                           postdec1	equ	0xFE5
  1931                           fsr1h	equ	0xFE2
  1932                           fsr1l	equ	0xFE1
  1933                           
  1934                           	psect	bssBANK3
  1935  000300                     __pbssBANK3:
  1936                           	opt stack 0
  1937  000300                     __spi_external_rx_buffer:
  1938                           	opt stack 0
  1939  000300                     	ds	64
  1940  000340                     __spi_external_tx_buffer:
  1941                           	opt stack 0
  1942  000340                     	ds	64
  1943  000380                     _ToSendDataBuffer:
  1944                           	opt stack 0
  1945  000380                     	ds	64
  1946                           tblptru	equ	0xFF8
  1947                           tblptrh	equ	0xFF7
  1948                           tblptrl	equ	0xFF6
  1949                           tablat	equ	0xFF5
  1950                           postinc0	equ	0xFEE
  1951                           wreg	equ	0xFE8
  1952                           postdec1	equ	0xFE5
  1953                           fsr1h	equ	0xFE2
  1954                           fsr1l	equ	0xFE1
  1955                           
  1956                           	psect	bssBIGRAMlh
  1957  000800                     __pbssBIGRAMlh:
  1958                           	opt stack 0
  1959  000800                     _pageBuffer:
  1960                           	opt stack 0
  1961  000800                     	ds	1024
  1962                           tblptru	equ	0xFF8
  1963                           tblptrh	equ	0xFF7
  1964                           tblptrl	equ	0xFF6
  1965                           tablat	equ	0xFF5
  1966                           postinc0	equ	0xFEE
  1967                           wreg	equ	0xFE8
  1968                           postdec1	equ	0xFE5
  1969                           fsr1h	equ	0xFE2
  1970                           fsr1l	equ	0xFE1
  1971                           
  1972                           	psect	bssBIGRAMll
  1973  0003C0                     __pbssBIGRAMll:
  1974                           	opt stack 0
  1975  0003C0                     _buffer:
  1976                           	opt stack 0
  1977  0003C0                     	ds	512
  1978                           tblptru	equ	0xFF8
  1979                           tblptrh	equ	0xFF7
  1980                           tblptrl	equ	0xFF6
  1981                           tablat	equ	0xFF5
  1982                           postinc0	equ	0xFEE
  1983                           wreg	equ	0xFE8
  1984                           postdec1	equ	0xFE5
  1985                           fsr1h	equ	0xFE2
  1986                           fsr1l	equ	0xFE1
  1987                           
  1988                           	psect	cstackBANK0
  1989  000060                     __pcstackBANK0:
  1990                           	opt stack 0
  1991  000060                     fat_create_file@number_of_clusters:
  1992                           	opt stack 0
  1993  000060                     fat_read_from_file_fast@sector:
  1994                           	opt stack 0
  1995  000060                     fat_resize_file@old_number_of_clusters:
  1996                           	opt stack 0
  1997  000060                     fat_modify_file@sector:
  1998                           	opt stack 0
  1999  000060                     __parse_file_rename@data:
  2000                           	opt stack 0
  2001                           
  2002                           ; 2 bytes @ 0x0
  2003  000060                     	ds	2
  2004  000062                     fat_modify_file@file_number:
  2005                           	opt stack 0
  2006  000062                     fat_create_file@first_cluster:
  2007                           	opt stack 0
  2008  000062                     fat_read_from_file_fast@working_cluster:
  2009                           	opt stack 0
  2010  000062                     fat_resize_file@new_number_of_clusters:
  2011                           	opt stack 0
  2012  000062                     __parse_file_rename@out_buffer:
  2013                           	opt stack 0
  2014                           
  2015                           ; 2 bytes @ 0x2
  2016  000062                     	ds	1
  2017  000063                     fat_modify_file@cluster:
  2018                           	opt stack 0
  2019                           
  2020                           ; 2 bytes @ 0x3
  2021  000063                     	ds	1
  2022  000064                     fat_create_file@file_number:
  2023                           	opt stack 0
  2024  000064                     fat_read_from_file_fast@offset:
  2025                           	opt stack 0
  2026  000064                     fat_resize_file@first_cluster:
  2027                           	opt stack 0
  2028  000064                     __parse_file_rename@out_idx_ptr:
  2029                           	opt stack 0
  2030                           
  2031                           ; 2 bytes @ 0x4
  2032  000064                     	ds	1
  2033  000065                     fat_modify_file@return_code:
  2034                           	opt stack 0
  2035  000065                     fat_create_file@root_entry:
  2036                           	opt stack 0
  2037                           
  2038                           ; 32 bytes @ 0x5
  2039  000065                     	ds	1
  2040  000066                     fat_resize_file@file_number:
  2041                           	opt stack 0
  2042  000066                     __parse_file_rename@return_value:
  2043                           	opt stack 0
  2044  000066                     fat_read_from_file_fast@needed_cluster:
  2045                           	opt stack 0
  2046  000066                     fat_modify_file@offset:
  2047                           	opt stack 0
  2048                           
  2049                           ; 2 bytes @ 0x6
  2050  000066                     	ds	1
  2051  000067                     __parse_file_rename@file_number:
  2052                           	opt stack 0
  2053  000067                     fat_resize_file@root:
  2054                           	opt stack 0
  2055                           
  2056                           ; 32 bytes @ 0x7
  2057  000067                     	ds	1
  2058  000068                     fat_read_from_file_fast@read_length:
  2059                           	opt stack 0
  2060  000068                     fat_modify_file@number_of_bytes:
  2061                           	opt stack 0
  2062                           
  2063                           ; 2 bytes @ 0x8
  2064  000068                     	ds	2
  2065  00006A                     fat_read_from_file_fast@position:
  2066                           	opt stack 0
  2067  00006A                     fat_modify_file@position:
  2068                           	opt stack 0
  2069                           
  2070                           ; 4 bytes @ 0xA
  2071  00006A                     	ds	4
  2072  00006E                     ??__bootloader_verify_file:
  2073  00006E                     ??__bootloader_program:
  2074  00006E                     fat_read_from_file@start_byte:
  2075                           	opt stack 0
  2076  00006E                     fat_modify_file@root:
  2077                           	opt stack 0
  2078                           
  2079                           ; 32 bytes @ 0xE
  2080  00006E                     	ds	4
  2081  000072                     fat_read_from_file@length:
  2082                           	opt stack 0
  2083                           
  2084                           ; 4 bytes @ 0x12
  2085  000072                     	ds	4
  2086  000076                     fat_read_from_file@data:
  2087                           	opt stack 0
  2088  000076                     __bootloader_program@buffer:
  2089                           	opt stack 0
  2090  000076                     __bootloader_verify_file@root:
  2091                           	opt stack 0
  2092                           
  2093                           ; 32 bytes @ 0x16
  2094  000076                     	ds	2
  2095  000078                     fat_read_from_file@file_number:
  2096                           	opt stack 0
  2097  000078                     __bootloader_program@entry_page:
  2098                           	opt stack 0
  2099                           
  2100                           ; 2 bytes @ 0x18
  2101  000078                     	ds	1
  2102  000079                     fat_read_from_file@cluster:
  2103                           	opt stack 0
  2104                           
  2105                           ; 2 bytes @ 0x19
  2106  000079                     	ds	1
  2107  00007A                     __bootloader_program@address_within_page:
  2108                           	opt stack 0
  2109                           
  2110                           ; 2 bytes @ 0x1A
  2111  00007A                     	ds	1
  2112  00007B                     fat_read_from_file@cluster_number:
  2113                           	opt stack 0
  2114                           
  2115                           ; 2 bytes @ 0x1B
  2116  00007B                     	ds	1
  2117  00007C                     __bootloader_program@root:
  2118                           	opt stack 0
  2119                           
  2120                           ; 32 bytes @ 0x1C
  2121  00007C                     	ds	1
  2122  00007D                     fat_read_from_file@return_code:
  2123                           	opt stack 0
  2124                           
  2125                           ; 1 bytes @ 0x1D
  2126  00007D                     	ds	1
  2127  00007E                     fat_read_from_file@root:
  2128                           	opt stack 0
  2129                           
  2130                           ; 32 bytes @ 0x1E
  2131  00007E                     	ds	7
  2132  000085                     ??_fat_copy_file:
  2133  000085                     __parse_file_create@file_number:
  2134                           	opt stack 0
  2135                           
  2136                           ; 1 bytes @ 0x25
  2137  000085                     	ds	1
  2138  000086                     __parse_file_create@file_size:
  2139                           	opt stack 0
  2140                           
  2141                           ; 4 bytes @ 0x26
  2142  000086                     	ds	1
  2143  000087                     __parse_file_resize@return_value:
  2144                           	opt stack 0
  2145                           
  2146                           ; 1 bytes @ 0x27
  2147  000087                     	ds	1
  2148  000088                     __parse_file_resize@file_number:
  2149                           	opt stack 0
  2150                           
  2151                           ; 1 bytes @ 0x28
  2152  000088                     	ds	1
  2153  000089                     fat_copy_file@number_of_clusters:
  2154                           	opt stack 0
  2155  000089                     __parse_file_resize@file_size:
  2156                           	opt stack 0
  2157                           
  2158                           ; 4 bytes @ 0x29
  2159  000089                     	ds	2
  2160  00008B                     fat_copy_file@file_size:
  2161                           	opt stack 0
  2162                           
  2163                           ; 4 bytes @ 0x2B
  2164  00008B                     	ds	3
  2165  00008E                     __parse_file_modify@return_value:
  2166                           	opt stack 0
  2167  00008E                     fat_append_to_file@new_file_size:
  2168                           	opt stack 0
  2169                           
  2170                           ; 4 bytes @ 0x2E
  2171  00008E                     	ds	1
  2172  00008F                     fat_copy_file@new_file_number:
  2173                           	opt stack 0
  2174  00008F                     __parse_file_modify@file_number:
  2175                           	opt stack 0
  2176                           
  2177                           ; 1 bytes @ 0x2F
  2178  00008F                     	ds	1
  2179  000090                     fat_copy_file@return_value:
  2180                           	opt stack 0
  2181  000090                     __parse_file_modify@number_of_bytes:
  2182                           	opt stack 0
  2183                           
  2184                           ; 2 bytes @ 0x30
  2185  000090                     	ds	1
  2186  000091                     fat_copy_file@sector:
  2187                           	opt stack 0
  2188                           
  2189                           ; 2 bytes @ 0x31
  2190  000091                     	ds	1
  2191  000092                     fat_append_to_file@old_file_size:
  2192                           	opt stack 0
  2193  000092                     __parse_file_modify@start_byte:
  2194                           	opt stack 0
  2195                           
  2196                           ; 4 bytes @ 0x32
  2197  000092                     	ds	1
  2198  000093                     fat_copy_file@file_number:
  2199                           	opt stack 0
  2200                           
  2201                           ; 1 bytes @ 0x33
  2202  000093                     	ds	1
  2203  000094                     __parse_file_copy@data:
  2204                           	opt stack 0
  2205                           
  2206                           ; 2 bytes @ 0x34
  2207  000094                     	ds	2
  2208  000096                     fat_append_to_file@return_code:
  2209                           	opt stack 0
  2210  000096                     __bootloader_verify_file@rec_counter:
  2211                           	opt stack 0
  2212  000096                     __parse_file_copy@out_buffer:
  2213                           	opt stack 0
  2214                           
  2215                           ; 2 bytes @ 0x36
  2216  000096                     	ds	1
  2217  000097                     fat_append_to_file@file_number:
  2218                           	opt stack 0
  2219  000097                     __bootloader_verify_file@return_value:
  2220                           	opt stack 0
  2221                           
  2222                           ; 4 bytes @ 0x37
  2223  000097                     	ds	1
  2224  000098                     ??__parse_file_append:
  2225  000098                     __parse_file_copy@out_idx_ptr:
  2226                           	opt stack 0
  2227                           
  2228                           ; 2 bytes @ 0x38
  2229  000098                     	ds	1
  2230  000099                     __parse_file_append@return_value:
  2231                           	opt stack 0
  2232                           
  2233                           ; 1 bytes @ 0x39
  2234  000099                     	ds	1
  2235  00009A                     __parse_file_append@file_number:
  2236                           	opt stack 0
  2237                           
  2238                           ; 1 bytes @ 0x3A
  2239  00009A                     	ds	1
  2240  00009B                     __parse_file_append@number_of_bytes:
  2241                           	opt stack 0
  2242  00009B                     __bootloader_verify_file@address32:
  2243                           	opt stack 0
  2244                           
  2245                           ; 4 bytes @ 0x3B
  2246  00009B                     	ds	1
  2247  00009C                     __bootloader_program@return_value:
  2248                           	opt stack 0
  2249                           
  2250                           ; 4 bytes @ 0x3C
  2251  00009C                     	ds	1
  2252  00009D                     __parse_command_long@data:
  2253                           	opt stack 0
  2254                           
  2255                           ; 2 bytes @ 0x3D
  2256  00009D                     	ds	1
  2257  00009E                     __fill_buffer_read_file@inBuffer:
  2258                           	opt stack 0
  2259                           
  2260                           ; 2 bytes @ 0x3E
  2261  00009E                     	ds	1
  2262  00009F                     __parse_command_long@out_buffer:
  2263                           	opt stack 0
  2264                           
  2265                           ; 2 bytes @ 0x3F
  2266  00009F                     	ds	1
  2267  0000A0                     __fill_buffer_read_file@outBuffer:
  2268                           	opt stack 0
  2269  0000A0                     __bootloader_program@address32:
  2270                           	opt stack 0
  2271                           
  2272                           ; 4 bytes @ 0x40
  2273  0000A0                     	ds	1
  2274  0000A1                     __parse_command_long@out_idx_ptr:
  2275                           	opt stack 0
  2276                           
  2277                           ; 2 bytes @ 0x41
  2278  0000A1                     	ds	1
  2279  0000A2                     ??__fill_buffer_read_file:
  2280                           
  2281                           ; 1 bytes @ 0x42
  2282  0000A2                     	ds	1
  2283  0000A3                     __parse_command_long@length:
  2284                           	opt stack 0
  2285                           
  2286                           ; 1 bytes @ 0x43
  2287  0000A3                     	ds	1
  2288  0000A4                     __bootloader_program@start_from_byte:
  2289                           	opt stack 0
  2290  0000A4                     api_parse@inBuffer:
  2291                           	opt stack 0
  2292                           
  2293                           ; 2 bytes @ 0x44
  2294  0000A4                     	ds	1
  2295  0000A5                     __bootloader_program@cntr:
  2296                           	opt stack 0
  2297                           
  2298                           ; 2 bytes @ 0x45
  2299  0000A5                     	ds	1
  2300  0000A6                     api_parse@receivedDataLength:
  2301                           	opt stack 0
  2302  0000A6                     __fill_buffer_read_file@file_size:
  2303                           	opt stack 0
  2304                           
  2305                           ; 4 bytes @ 0x46
  2306  0000A6                     	ds	1
  2307  0000A7                     __bootloader_program@page_to_write:
  2308                           	opt stack 0
  2309  0000A7                     api_parse@outBuffer:
  2310                           	opt stack 0
  2311                           
  2312                           ; 2 bytes @ 0x47
  2313  0000A7                     	ds	2
  2314  0000A9                     ??_api_parse:
  2315                           
  2316                           ; 1 bytes @ 0x49
  2317  0000A9                     	ds	1
  2318  0000AA                     __fill_buffer_read_file@data_length:
  2319                           	opt stack 0
  2320                           
  2321                           ; 4 bytes @ 0x4A
  2322  0000AA                     	ds	1
  2323  0000AB                     api_parse@out_idx_ptr:
  2324                           	opt stack 0
  2325                           
  2326                           ; 2 bytes @ 0x4B
  2327  0000AB                     	ds	2
  2328  0000AD                     api_parse@in_idx:
  2329                           	opt stack 0
  2330                           
  2331                           ; 1 bytes @ 0x4D
  2332  0000AD                     	ds	1
  2333  0000AE                     api_parse@out_idx:
  2334                           	opt stack 0
  2335  0000AE                     __fill_buffer_read_file@start:
  2336                           	opt stack 0
  2337                           
  2338                           ; 4 bytes @ 0x4E
  2339  0000AE                     	ds	4
  2340  0000B2                     api_prepare@inBuffer:
  2341                           	opt stack 0
  2342                           
  2343                           ; 2 bytes @ 0x52
  2344  0000B2                     	ds	2
  2345  0000B4                     api_prepare@outBuffer:
  2346                           	opt stack 0
  2347                           
  2348                           ; 2 bytes @ 0x54
  2349  0000B4                     	ds	2
  2350  0000B6                     api_prepare@command:
  2351                           	opt stack 0
  2352                           
  2353                           ; 1 bytes @ 0x56
  2354  0000B6                     	ds	1
  2355  0000B7                     ??_APP_DeviceCustomHIDTasks:
  2356                           
  2357                           ; 1 bytes @ 0x57
  2358  0000B7                     	ds	4
  2359  0000BB                     ??_main:
  2360                           
  2361                           ; 1 bytes @ 0x5B
  2362  0000BB                     	ds	2
  2363  0000BD                     main@tx_start_addr:
  2364                           	opt stack 0
  2365                           
  2366                           ; 2 bytes @ 0x5D
  2367  0000BD                     	ds	2
  2368  0000BF                     main@bytes_transmitted:
  2369                           	opt stack 0
  2370                           
  2371                           ; 2 bytes @ 0x5F
  2372  0000BF                     	ds	2
  2373  0000C1                     main@rx_buffer:
  2374                           	opt stack 0
  2375                           
  2376                           ; 2 bytes @ 0x61
  2377  0000C1                     	ds	2
  2378  0000C3                     main@tx_buffer:
  2379                           	opt stack 0
  2380                           
  2381                           ; 2 bytes @ 0x63
  2382  0000C3                     	ds	2
  2383                           tblptru	equ	0xFF8
  2384                           tblptrh	equ	0xFF7
  2385                           tblptrl	equ	0xFF6
  2386                           tablat	equ	0xFF5
  2387                           postinc0	equ	0xFEE
  2388                           wreg	equ	0xFE8
  2389                           postdec1	equ	0xFE5
  2390                           fsr1h	equ	0xFE2
  2391                           fsr1l	equ	0xFE1
  2392                           
  2393                           	psect	cstackCOMRAM
  2394  000001                     __pcstackCOMRAM:
  2395                           	opt stack 0
  2396  000001                     ??_USBStdGetDscHandler:
  2397  000001                     ??_USBStdGetStatusHandler:
  2398  000001                     ??_system_delay_ms:
  2399  000001                     ??__i2c_wait_idle:
  2400  000001                     ??__display_clear:
  2401  000001                     ?_USBTransferOnePacket:
  2402                           	opt stack 0
  2403  000001                     ?_spi_get_external_rx_buffer:
  2404                           	opt stack 0
  2405  000001                     ?_spi_get_external_tx_buffer:
  2406                           	opt stack 0
  2407  000001                     ?_ExternalFlash_MediaInitialize:
  2408                           	opt stack 0
  2409  000001                     ?_ExternalFlash_SectorSizeRead:
  2410                           	opt stack 0
  2411  000001                     ?_bootloader_get_entries:
  2412                           	opt stack 0
  2413  000001                     ?_bootloader_get_total_entries:
  2414                           	opt stack 0
  2415  000001                     ?_bootloader_get_rec_address:
  2416                           	opt stack 0
  2417  000001                     ?_bootloader_get_flashPagesWritten:
  2418                           	opt stack 0
  2419  000001                     ?_strncmp:
  2420                           	opt stack 0
  2421  000001                     ?_internalFlash_pageFromAddress:
  2422                           	opt stack 0
  2423  000001                     ?_internalFlash_getBuffer:
  2424                           	opt stack 0
  2425  000001                     ?__sector_from_file_number:
  2426                           	opt stack 0
  2427  000001                     ?__offset_from_file_number:
  2428                           	opt stack 0
  2429  000001                     ?__data_sector_from_cluster:
  2430                           	opt stack 0
  2431  000001                     ?__fat_sector_from_cluster:
  2432                           	opt stack 0
  2433  000001                     ?__fat_offset_from_cluster:
  2434                           	opt stack 0
  2435  000001                     ?__cluster_from_sector_and_offset:
  2436                           	opt stack 0
  2437  000001                     ?__get_available_offset_from_buffer:
  2438                           	opt stack 0
  2439  000001                     ?__read_value_from_offset:
  2440                           	opt stack 0
  2441  000001                     ?__get_time:
  2442                           	opt stack 0
  2443  000001                     ?__get_date:
  2444                           	opt stack 0
  2445  000001                     ?_bootloader_get_rec_dataLength:
  2446                           	opt stack 0
  2447  000001                     ?___lwdiv:
  2448                           	opt stack 0
  2449  000001                     ?___lwmod:
  2450                           	opt stack 0
  2451  000001                     ?_ExternalFlash_CapacityRead:
  2452                           	opt stack 0
  2453  000001                     ?_bootloader_get_file_size:
  2454                           	opt stack 0
  2455  000001                     ?_internalFlash_addressFromPage:
  2456                           	opt stack 0
  2457  000001                     ?___lldiv:
  2458                           	opt stack 0
  2459  000001                     ?___llmod:
  2460                           	opt stack 0
  2461  000001                     USBTransferOnePacket@dir:
  2462                           	opt stack 0
  2463  000001                     USBStallEndpoint@dir:
  2464                           	opt stack 0
  2465  000001                     USBConfigureEndpoint@direction:
  2466                           	opt stack 0
  2467  000001                     USBCtrlTrfTxService@byteToSend:
  2468                           	opt stack 0
  2469  000001                     USBCtrlTrfRxService@i:
  2470                           	opt stack 0
  2471  000001                     __i2c_send@dat:
  2472                           	opt stack 0
  2473  000001                     i2c_set_frequency@frequency:
  2474                           	opt stack 0
  2475  000001                     display_get_character@position:
  2476                           	opt stack 0
  2477  000001                     __display_search@cntr:
  2478                           	opt stack 0
  2479  000001                     __display_rebooting@cntr:
  2480                           	opt stack 0
  2481  000001                     __display_suspended@cntr:
  2482                           	opt stack 0
  2483  000001                     hexCharToUint8@c:
  2484                           	opt stack 0
  2485  000001                     bootloader_get_rec_data@index:
  2486                           	opt stack 0
  2487  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2488                           	opt stack 0
  2489  000001                     spi_set_configuration@configuration:
  2490                           	opt stack 0
  2491  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2492                           	opt stack 0
  2493  000001                     SYSTEM_Initialize@pll_startup_counter:
  2494                           	opt stack 0
  2495  000001                     ExternalFlash_MediaInitialize@config:
  2496                           	opt stack 0
  2497  000001                     ExternalFlash_SectorSizeRead@config:
  2498                           	opt stack 0
  2499  000001                     ExternalFlash_CapacityRead@config:
  2500                           	opt stack 0
  2501  000001                     ExternalFlash_MediaDetect@config:
  2502                           	opt stack 0
  2503  000001                     ExternalFlash_WriteProtectStateGet@config:
  2504                           	opt stack 0
  2505  000001                     __data_sector_from_cluster@fat_cluster:
  2506                           	opt stack 0
  2507  000001                     __fat_sector_from_cluster@cluster:
  2508                           	opt stack 0
  2509  000001                     __fat_offset_from_cluster@cluster:
  2510                           	opt stack 0
  2511  000001                     __cluster_from_sector_and_offset@sector:
  2512                           	opt stack 0
  2513  000001                     __get_available_offset_from_buffer@minimum_offset:
  2514                           	opt stack 0
  2515  000001                     __read_value_from_offset@offset:
  2516                           	opt stack 0
  2517  000001                     __write_value_to_offset@offset:
  2518                           	opt stack 0
  2519  000001                     __get_mbr@idx:
  2520                           	opt stack 0
  2521  000001                     __get_fbr@idx:
  2522                           	opt stack 0
  2523  000001                     __get_fat@idx:
  2524                           	opt stack 0
  2525  000001                     __get_root@idx:
  2526                           	opt stack 0
  2527  000001                     __get_data@idx:
  2528                           	opt stack 0
  2529  000001                     internalFlash_addressFromPage@page:
  2530                           	opt stack 0
  2531  000001                     __fill_buffer_get_configuration@outBuffer:
  2532                           	opt stack 0
  2533  000001                     spi_tx@data:
  2534                           	opt stack 0
  2535  000001                     spi_tx_tx@command:
  2536                           	opt stack 0
  2537  000001                     spi_tx_rx@command:
  2538                           	opt stack 0
  2539  000001                     ___lwdiv@dividend:
  2540                           	opt stack 0
  2541  000001                     ___lwmod@dividend:
  2542                           	opt stack 0
  2543  000001                     memcpy@d1:
  2544                           	opt stack 0
  2545  000001                     memset@p1:
  2546                           	opt stack 0
  2547  000001                     strncmp@s1:
  2548                           	opt stack 0
  2549  000001                     __spi_init@details:
  2550                           	opt stack 0
  2551  000001                     __bootloader_check_address@address:
  2552                           	opt stack 0
  2553  000001                     internalFlash_pageFromAddress@address:
  2554                           	opt stack 0
  2555  000001                     ___lldiv@dividend:
  2556                           	opt stack 0
  2557  000001                     ___llmod@dividend:
  2558                           	opt stack 0
  2559                           
  2560                           ; 4 bytes @ 0x0
  2561  000001                     	ds	1
  2562  000002                     ??_USBConfigureEndpoint:
  2563  000002                     ??_USBStallEndpoint:
  2564  000002                     ??_display_get_character:
  2565  000002                     USBCtrlTrfRxService@byteToRead:
  2566                           	opt stack 0
  2567  000002                     USBCtrlTrfInHandler@lastDTS:
  2568                           	opt stack 0
  2569  000002                     system_delay_ms@ms:
  2570                           	opt stack 0
  2571  000002                     hexCharToUint8@ascii:
  2572                           	opt stack 0
  2573  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2574                           	opt stack 0
  2575  000002                     USBTransferOnePacket@data:
  2576                           	opt stack 0
  2577  000002                     USBStdGetStatusHandler@p:
  2578                           	opt stack 0
  2579                           
  2580                           ; 2 bytes @ 0x1
  2581  000002                     	ds	1
  2582  000003                     ??_MSDComputeDeviceInAndResidue:
  2583  000003                     ??__get_mbr:
  2584  000003                     ??__get_fbr:
  2585  000003                     ??__get_fat:
  2586  000003                     ??__get_root:
  2587  000003                     ?_hexCharsToUint16:
  2588                           	opt stack 0
  2589  000003                     system_delay_ms@cntr:
  2590                           	opt stack 0
  2591  000003                     __display_clear@row:
  2592                           	opt stack 0
  2593  000003                     __sector_from_file_number@file_number:
  2594                           	opt stack 0
  2595  000003                     __offset_from_file_number@file_number:
  2596                           	opt stack 0
  2597  000003                     hexCharsToUint8@c2:
  2598                           	opt stack 0
  2599  000003                     hexCharsToUint16@c2:
  2600                           	opt stack 0
  2601  000003                     SYSTEM_Initialize@pll_startup_counter_3116:
  2602                           	opt stack 0
  2603  000003                     __cluster_from_sector_and_offset@offset:
  2604                           	opt stack 0
  2605  000003                     __get_available_offset_from_buffer@buffer:
  2606                           	opt stack 0
  2607  000003                     __read_value_from_offset@buffer:
  2608                           	opt stack 0
  2609  000003                     __write_value_to_offset@buffer:
  2610                           	opt stack 0
  2611  000003                     spi_tx@length:
  2612                           	opt stack 0
  2613  000003                     spi_tx_tx@command_length:
  2614                           	opt stack 0
  2615  000003                     spi_tx_rx@command_length:
  2616                           	opt stack 0
  2617  000003                     ___lwdiv@divisor:
  2618                           	opt stack 0
  2619  000003                     ___lwmod@divisor:
  2620                           	opt stack 0
  2621  000003                     memset@c:
  2622                           	opt stack 0
  2623  000003                     strncmp@s2:
  2624                           	opt stack 0
  2625  000003                     memcpy@s1:
  2626                           	opt stack 0
  2627                           
  2628                           ; 3 bytes @ 0x2
  2629  000003                     	ds	1
  2630  000004                     ??_hexCharsToUint8:
  2631  000004                     USBTransferOnePacket@len:
  2632                           	opt stack 0
  2633  000004                     display_get_character@line:
  2634                           	opt stack 0
  2635  000004                     __display_clear@col:
  2636                           	opt stack 0
  2637  000004                     hexCharsToUint16@c3:
  2638                           	opt stack 0
  2639  000004                     spi_init@configuration:
  2640                           	opt stack 0
  2641  000004                     __sector_from_file_number@sector:
  2642                           	opt stack 0
  2643  000004                     __offset_from_file_number@offset:
  2644                           	opt stack 0
  2645                           
  2646                           ; 2 bytes @ 0x3
  2647  000004                     	ds	1
  2648  000005                     ??_USBTransferOnePacket:
  2649  000005                     ??_spi_tx:
  2650  000005                     ??_internalFlash_pageFromAddress:
  2651  000005                     ??__get_available_offset_from_buffer:
  2652  000005                     ??__read_value_from_offset:
  2653  000005                     SYSTEM_Initialize@state:
  2654                           	opt stack 0
  2655  000005                     hexCharsToUint8@c1:
  2656                           	opt stack 0
  2657  000005                     hexCharsToUint16@c4:
  2658                           	opt stack 0
  2659  000005                     __bootloader_check_address@dataLength:
  2660                           	opt stack 0
  2661  000005                     ___lwmod@counter:
  2662                           	opt stack 0
  2663  000005                     __write_value_to_offset@value:
  2664                           	opt stack 0
  2665  000005                     __fill_buffer_get_display@outBuffer:
  2666                           	opt stack 0
  2667  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2668                           	opt stack 0
  2669  000005                     spi_tx_tx@data:
  2670                           	opt stack 0
  2671  000005                     spi_tx_rx@data:
  2672                           	opt stack 0
  2673  000005                     ___lwdiv@quotient:
  2674                           	opt stack 0
  2675  000005                     memset@n:
  2676                           	opt stack 0
  2677  000005                     strncmp@len:
  2678                           	opt stack 0
  2679  000005                     internalFlash_addressFromPage@address:
  2680                           	opt stack 0
  2681  000005                     ___lldiv@divisor:
  2682                           	opt stack 0
  2683  000005                     ___llmod@divisor:
  2684                           	opt stack 0
  2685                           
  2686                           ; 4 bytes @ 0x4
  2687  000005                     	ds	1
  2688  000006                     ??_hexCharsToUint16:
  2689  000006                     ??__bootloader_check_address:
  2690  000006                     USBStallEndpoint@ep:
  2691                           	opt stack 0
  2692  000006                     USBConfigureEndpoint@EPNum:
  2693                           	opt stack 0
  2694  000006                     hexCharsToUint8@retVal:
  2695                           	opt stack 0
  2696  000006                     __i2c_write@data:
  2697                           	opt stack 0
  2698  000006                     __i2c_read@data:
  2699                           	opt stack 0
  2700  000006                     i2c_display_write_fixed@data:
  2701                           	opt stack 0
  2702  000006                     memcpy@n:
  2703                           	opt stack 0
  2704                           
  2705                           ; 2 bytes @ 0x5
  2706  000006                     	ds	1
  2707  000007                     ??_strncmp:
  2708  000007                     ??__fill_buffer_get_bootloader_details:
  2709  000007                     ??__write_value_to_offset:
  2710  000007                     __fill_buffer_get_display@secondHalf:
  2711                           	opt stack 0
  2712  000007                     ___lwdiv@counter:
  2713                           	opt stack 0
  2714  000007                     USBStallEndpoint@p:
  2715                           	opt stack 0
  2716  000007                     USBConfigureEndpoint@handle:
  2717                           	opt stack 0
  2718  000007                     __get_available_offset_from_buffer@offset:
  2719                           	opt stack 0
  2720  000007                     spi_tx_tx@data_length:
  2721                           	opt stack 0
  2722  000007                     spi_tx_rx@data_length:
  2723                           	opt stack 0
  2724  000007                     memset@p:
  2725                           	opt stack 0
  2726                           
  2727                           ; 2 bytes @ 0x6
  2728  000007                     	ds	1
  2729  000008                     ??__fill_buffer_get_display:
  2730  000008                     __i2c_write@length:
  2731                           	opt stack 0
  2732  000008                     __i2c_read@length:
  2733                           	opt stack 0
  2734  000008                     i2c_display_write_fixed@length:
  2735                           	opt stack 0
  2736  000008                     __read_value_from_offset@value:
  2737                           	opt stack 0
  2738  000008                     utoa@buf:
  2739                           	opt stack 0
  2740  000008                     memcpy@s:
  2741                           	opt stack 0
  2742                           
  2743                           ; 3 bytes @ 0x7
  2744  000008                     	ds	1
  2745  000009                     ??_spi_tx_rx:
  2746  000009                     ??_spi_tx_tx:
  2747  000009                     ??__i2c_read:
  2748  000009                     ?_internalFlash_addressWithinPage:
  2749                           	opt stack 0
  2750  000009                     USBDeviceInit@i:
  2751                           	opt stack 0
  2752  000009                     USBEnableEndpoint@options:
  2753                           	opt stack 0
  2754  000009                     USBTransferOnePacket@ep:
  2755                           	opt stack 0
  2756  000009                     MSDErrorHandler@ErrorCase:
  2757                           	opt stack 0
  2758  000009                     __i2c_write@slave_address:
  2759                           	opt stack 0
  2760  000009                     i2c_display_write_fixed@pos:
  2761                           	opt stack 0
  2762  000009                     __flash_wakeup@command:
  2763                           	opt stack 0
  2764  000009                     hexCharsToUint16@c1:
  2765                           	opt stack 0
  2766  000009                     ___llmod@counter:
  2767                           	opt stack 0
  2768  000009                     internalFlash_erasePage@page:
  2769                           	opt stack 0
  2770  000009                     internalFlash_writePage@page:
  2771                           	opt stack 0
  2772  000009                     internalFlash_addressWithinPage@address:
  2773                           	opt stack 0
  2774  000009                     ___lldiv@quotient:
  2775                           	opt stack 0
  2776                           
  2777                           ; 4 bytes @ 0x8
  2778  000009                     	ds	1
  2779  00000A                     MSDErrorHandler@OldMSD_State:
  2780                           	opt stack 0
  2781  00000A                     __i2c_write@cntr:
  2782                           	opt stack 0
  2783  00000A                     __bootloader_check_address@worst_case:
  2784                           	opt stack 0
  2785  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2786                           	opt stack 0
  2787  00000A                     USBEnableEndpoint@p:
  2788                           	opt stack 0
  2789  00000A                     USBTransferOnePacket@handle:
  2790                           	opt stack 0
  2791  00000A                     hexCharsToUint16@retVal:
  2792                           	opt stack 0
  2793  00000A                     utoa@val:
  2794                           	opt stack 0
  2795                           
  2796                           ; 2 bytes @ 0x9
  2797  00000A                     	ds	1
  2798  00000B                     ??_internalFlash_erasePage:
  2799  00000B                     ??_internalFlash_writePage:
  2800  00000B                     __ic2_display_set_address@address:
  2801                           	opt stack 0
  2802  00000B                     i2c_digipot_backlight@level:
  2803                           	opt stack 0
  2804  00000B                     __bootloader_check_address@byte_status:
  2805                           	opt stack 0
  2806  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2807                           	opt stack 0
  2808  00000B                     i2c_digipot_reset_on@data_array:
  2809                           	opt stack 0
  2810  00000B                     i2c_digipot_reset_off@data_array:
  2811                           	opt stack 0
  2812  00000B                     i2c_eeprom_writeByte@address:
  2813                           	opt stack 0
  2814  00000B                     memcpy@d:
  2815                           	opt stack 0
  2816  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2817                           	opt stack 0
  2818  00000B                     i2c_display_send_init_sequence@init_sequence:
  2819                           	opt stack 0
  2820                           
  2821                           ; 9 bytes @ 0xA
  2822  00000B                     	ds	1
  2823  00000C                     ??_USBMSDInit:
  2824  00000C                     ?_parseHexFileEntry:
  2825                           	opt stack 0
  2826  00000C                     USBEnableEndpoint@ep:
  2827                           	opt stack 0
  2828  00000C                     __bootloader_check_address@cntr:
  2829                           	opt stack 0
  2830  00000C                     _USBCheckMSDRequest$2319:
  2831                           	opt stack 0
  2832  00000C                     MSDTransferTerminated@handle:
  2833                           	opt stack 0
  2834  00000C                     __ic2_display_set_address@data_array:
  2835                           	opt stack 0
  2836  00000C                     i2c_digipot_backlight@data_array:
  2837                           	opt stack 0
  2838  00000C                     parseHexFileEntry@data:
  2839                           	opt stack 0
  2840  00000C                     utoa@base:
  2841                           	opt stack 0
  2842  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2843                           	opt stack 0
  2844                           
  2845                           ; 4 bytes @ 0xB
  2846  00000C                     	ds	1
  2847  00000D                     ?__flash_get_status:
  2848                           	opt stack 0
  2849  00000D                     i2c_eeprom_writeByte@data:
  2850                           	opt stack 0
  2851  00000D                     __fill_buffer_get_display@cntr:
  2852                           	opt stack 0
  2853  00000D                     ___lldiv@counter:
  2854                           	opt stack 0
  2855  00000D                     memcpy@tmp:
  2856                           	opt stack 0
  2857  00000D                     internalFlash_addressWithinPage@page:
  2858                           	opt stack 0
  2859                           
  2860                           ; 2 bytes @ 0xC
  2861  00000D                     	ds	1
  2862  00000E                     ??_i2c_eeprom_writeByte:
  2863  00000E                     i2c_display_cursor@position:
  2864                           	opt stack 0
  2865  00000E                     __fill_buffer_get_display@line:
  2866                           	opt stack 0
  2867  00000E                     _USBCheckMSDRequest$2320:
  2868                           	opt stack 0
  2869  00000E                     _MSDTransferTerminated$2407:
  2870                           	opt stack 0
  2871  00000E                     utoa@v:
  2872                           	opt stack 0
  2873  00000E                     parseHexFileEntry@offset:
  2874                           	opt stack 0
  2875  00000E                     internalFlash_read@address:
  2876                           	opt stack 0
  2877                           
  2878                           ; 4 bytes @ 0xD
  2879  00000E                     	ds	1
  2880  00000F                     ??_internalFlash_addressWithinPage:
  2881  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2882                           	opt stack 0
  2883  00000F                     i2c_display_cursor@line:
  2884                           	opt stack 0
  2885  00000F                     __flash_get_status@command:
  2886                           	opt stack 0
  2887  00000F                     __fill_buffer_get_display@start_line:
  2888                           	opt stack 0
  2889  00000F                     internalFlash_writePage@cntr:
  2890                           	opt stack 0
  2891  00000F                     internalFlash_erasePage@address:
  2892                           	opt stack 0
  2893                           
  2894                           ; 4 bytes @ 0xE
  2895  00000F                     	ds	1
  2896  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2897                           	opt stack 0
  2898  000010                     __i2c_read@slave_address:
  2899                           	opt stack 0
  2900  000010                     i2c_display_cursor@address:
  2901                           	opt stack 0
  2902  000010                     __fill_buffer_get_display@position:
  2903                           	opt stack 0
  2904  000010                     utoa@c:
  2905                           	opt stack 0
  2906  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2907                           	opt stack 0
  2908  000010                     __flash_get_status@status:
  2909                           	opt stack 0
  2910  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2911                           	opt stack 0
  2912                           
  2913                           ; 2 bytes @ 0xF
  2914  000010                     	ds	1
  2915  000011                     MSDCheckForErrorCases@DeviceNoData:
  2916                           	opt stack 0
  2917  000011                     __i2c_read@cntr:
  2918                           	opt stack 0
  2919  000011                     internalFlash_writePage@block_cntr:
  2920                           	opt stack 0
  2921  000011                     i2c_eeprom_writeByte@dat:
  2922                           	opt stack 0
  2923  000011                     itoa@buf:
  2924                           	opt stack 0
  2925                           
  2926                           ; 2 bytes @ 0x10
  2927  000011                     	ds	1
  2928  000012                     internalFlash_writePage@byte_cntr:
  2929                           	opt stack 0
  2930  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2931                           	opt stack 0
  2932  000012                     i2c_eeprom_readByte@address:
  2933                           	opt stack 0
  2934  000012                     __flash_is_busy@status:
  2935                           	opt stack 0
  2936  000012                     parseHexFileEntry@hexEntry:
  2937                           	opt stack 0
  2938  000012                     internalFlash_read@data_length:
  2939                           	opt stack 0
  2940                           
  2941                           ; 2 bytes @ 0x11
  2942  000012                     	ds	1
  2943  000013                     i2c_eeprom_writeByte@slave_address:
  2944                           	opt stack 0
  2945  000013                     itoa@val:
  2946                           	opt stack 0
  2947  000013                     internalFlash_writePage@address:
  2948                           	opt stack 0
  2949  000013                     internalFlash_addressWithinPage@page_start_address:
  2950                           	opt stack 0
  2951                           
  2952                           ; 4 bytes @ 0x12
  2953  000013                     	ds	1
  2954  000014                     ??_i2c_eeprom_readByte:
  2955  000014                     ??_parseHexFileEntry:
  2956  000014                     flash_is_busy@result:
  2957                           	opt stack 0
  2958  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2959                           	opt stack 0
  2960  000014                     __flash_copy_page_to_buffer@page:
  2961                           	opt stack 0
  2962  000014                     __flash_compare_page_to_buffer@page:
  2963                           	opt stack 0
  2964  000014                     __flash_write_to_buffer@start:
  2965                           	opt stack 0
  2966  000014                     __flash_write_page_from_buffer@page:
  2967                           	opt stack 0
  2968  000014                     __flash_partial_read@page:
  2969                           	opt stack 0
  2970  000014                     __flash_buffer_read@start:
  2971                           	opt stack 0
  2972  000014                     internalFlash_read@buffer:
  2973                           	opt stack 0
  2974  000014                     __flash_set_page_size@command:
  2975                           	opt stack 0
  2976                           
  2977                           ; 4 bytes @ 0x13
  2978  000014                     	ds	1
  2979  000015                     __fill_buffer_get_status@outBuffer:
  2980                           	opt stack 0
  2981  000015                     itoa@base:
  2982                           	opt stack 0
  2983                           
  2984                           ; 2 bytes @ 0x14
  2985  000015                     	ds	1
  2986  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2987  000016                     __flash_copy_page_to_buffer@buffer:
  2988                           	opt stack 0
  2989  000016                     __flash_compare_page_to_buffer@buffer:
  2990                           	opt stack 0
  2991  000016                     __flash_write_page_from_buffer@buffer:
  2992                           	opt stack 0
  2993  000016                     __flash_write_to_buffer@data:
  2994                           	opt stack 0
  2995  000016                     __flash_partial_read@start:
  2996                           	opt stack 0
  2997  000016                     __flash_buffer_read@length:
  2998                           	opt stack 0
  2999  000016                     internalFlash_readPage@page:
  3000                           	opt stack 0
  3001                           
  3002                           ; 2 bytes @ 0x15
  3003  000016                     	ds	1
  3004  000017                     ??__flash_copy_page_to_buffer:
  3005  000017                     ??__flash_compare_page_to_buffer:
  3006  000017                     ??__flash_write_page_from_buffer:
  3007  000017                     i2c_eeprom_readByte@slave_address:
  3008                           	opt stack 0
  3009  000017                     itoa@cp:
  3010                           	opt stack 0
  3011                           
  3012                           ; 2 bytes @ 0x16
  3013  000017                     	ds	1
  3014  000018                     ??_USBStdFeatureReqHandler:
  3015  000018                     USBStdSetCfgHandler@i:
  3016                           	opt stack 0
  3017  000018                     i2c_eeprom_readByte@addr:
  3018                           	opt stack 0
  3019  000018                     __flash_set_page_size@size:
  3020                           	opt stack 0
  3021  000018                     __flash_write_to_buffer@data_length:
  3022                           	opt stack 0
  3023  000018                     __flash_partial_read@length:
  3024                           	opt stack 0
  3025  000018                     __flash_buffer_read@data:
  3026                           	opt stack 0
  3027  000018                     internalFlash_readPage@address:
  3028                           	opt stack 0
  3029                           
  3030                           ; 4 bytes @ 0x17
  3031  000018                     	ds	1
  3032  000019                     USBStdFeatureReqHandler@pUEP:
  3033                           	opt stack 0
  3034  000019                     __display_itoa_u16@value:
  3035                           	opt stack 0
  3036                           
  3037                           ; 4 bytes @ 0x18
  3038  000019                     	ds	1
  3039  00001A                     __flash_write_to_buffer@buffer:
  3040                           	opt stack 0
  3041  00001A                     __flash_buffer_read@buffer:
  3042                           	opt stack 0
  3043  00001A                     __flash_compare_page_to_buffer@status:
  3044                           	opt stack 0
  3045  00001A                     __flash_partial_read@data:
  3046                           	opt stack 0
  3047  00001A                     __flash_copy_page_to_buffer@command:
  3048                           	opt stack 0
  3049  00001A                     __flash_write_page_from_buffer@command:
  3050                           	opt stack 0
  3051                           
  3052                           ; 4 bytes @ 0x19
  3053  00001A                     	ds	1
  3054  00001B                     USBStdFeatureReqHandler@current_ep_data:
  3055                           	opt stack 0
  3056  00001B                     __flash_write_to_buffer@command:
  3057                           	opt stack 0
  3058  00001B                     __flash_buffer_read@command:
  3059                           	opt stack 0
  3060                           
  3061                           ; 4 bytes @ 0x1A
  3062  00001B                     	ds	1
  3063  00001C                     ??__flash_partial_read:
  3064  00001C                     parseHexFileEntry@i:
  3065                           	opt stack 0
  3066  00001C                     USBStdFeatureReqHandler@p:
  3067                           	opt stack 0
  3068  00001C                     __flash_compare_page_to_buffer@command:
  3069                           	opt stack 0
  3070                           
  3071                           ; 4 bytes @ 0x1B
  3072  00001C                     	ds	1
  3073  00001D                     __display_itoa_u16@text:
  3074                           	opt stack 0
  3075                           
  3076                           ; 2 bytes @ 0x1C
  3077  00001D                     	ds	1
  3078  00001E                     ??_USBCtrlEPService:
  3079  00001E                     flash_copy_page_to_buffer@page:
  3080                           	opt stack 0
  3081                           
  3082                           ; 2 bytes @ 0x1D
  3083  00001E                     	ds	1
  3084  00001F                     ??__display_verify:
  3085  00001F                     ??__display_checked:
  3086  00001F                     __display_programming@cntr:
  3087                           	opt stack 0
  3088  00001F                     __display_done@cntr:
  3089                           	opt stack 0
  3090  00001F                     flash_read_from_buffer@start:
  3091                           	opt stack 0
  3092  00001F                     flash_write_to_buffer@start:
  3093                           	opt stack 0
  3094  00001F                     __display_itoa_u32@value:
  3095                           	opt stack 0
  3096                           
  3097                           ; 4 bytes @ 0x1E
  3098  00001F                     	ds	1
  3099  000020                     USBDeviceTasks@i:
  3100                           	opt stack 0
  3101  000020                     flash_sector_write@page:
  3102                           	opt stack 0
  3103  000020                     flash_partial_write@page:
  3104                           	opt stack 0
  3105  000020                     __flash_partial_read@command:
  3106                           	opt stack 0
  3107                           
  3108                           ; 4 bytes @ 0x1F
  3109  000020                     	ds	1
  3110  000021                     __display_verify@cntr:
  3111                           	opt stack 0
  3112  000021                     __display_checked@start:
  3113                           	opt stack 0
  3114  000021                     flash_read_from_buffer@length:
  3115                           	opt stack 0
  3116  000021                     flash_write_to_buffer@length:
  3117                           	opt stack 0
  3118                           
  3119                           ; 2 bytes @ 0x20
  3120  000021                     	ds	1
  3121  000022                     __display_checked@cntr:
  3122                           	opt stack 0
  3123  000022                     flash_sector_write@data:
  3124                           	opt stack 0
  3125  000022                     flash_partial_write@start:
  3126                           	opt stack 0
  3127                           
  3128                           ; 2 bytes @ 0x21
  3129  000022                     	ds	1
  3130  000023                     __display_itoa_u32@text:
  3131                           	opt stack 0
  3132  000023                     flash_read_from_buffer@data:
  3133                           	opt stack 0
  3134  000023                     flash_write_to_buffer@data:
  3135                           	opt stack 0
  3136                           
  3137                           ; 2 bytes @ 0x22
  3138  000023                     	ds	1
  3139  000024                     flash_sector_write@match:
  3140                           	opt stack 0
  3141  000024                     flash_partial_write@length:
  3142                           	opt stack 0
  3143  000024                     __flash_partial_read@address:
  3144                           	opt stack 0
  3145                           
  3146                           ; 4 bytes @ 0x23
  3147  000024                     	ds	1
  3148  000025                     ??__display_found:
  3149  000025                     __display_start@cntr:
  3150                           	opt stack 0
  3151  000025                     __display_failed@cntr:
  3152                           	opt stack 0
  3153  000025                     ExternalFlash_SectorWrite@config:
  3154                           	opt stack 0
  3155  000025                     fat_format@cntr:
  3156                           	opt stack 0
  3157  000025                     fat_read_from_buffer@start:
  3158                           	opt stack 0
  3159  000025                     fat_write_to_buffer@start:
  3160                           	opt stack 0
  3161                           
  3162                           ; 2 bytes @ 0x24
  3163  000025                     	ds	1
  3164  000026                     flash_partial_write@data:
  3165                           	opt stack 0
  3166                           
  3167                           ; 2 bytes @ 0x25
  3168  000026                     	ds	1
  3169  000027                     __display_found@start:
  3170                           	opt stack 0
  3171  000027                     fat_read_from_buffer@length:
  3172                           	opt stack 0
  3173  000027                     fat_write_to_buffer@length:
  3174                           	opt stack 0
  3175  000027                     __parse_format_drive@data:
  3176                           	opt stack 0
  3177  000027                     ExternalFlash_SectorWrite@sector_addr:
  3178                           	opt stack 0
  3179                           
  3180                           ; 4 bytes @ 0x26
  3181  000027                     	ds	1
  3182  000028                     __display_found@cntr:
  3183                           	opt stack 0
  3184  000028                     flash_partial_write@match:
  3185                           	opt stack 0
  3186  000028                     flash_sector_read@page:
  3187                           	opt stack 0
  3188  000028                     flash_partial_read@page:
  3189                           	opt stack 0
  3190                           
  3191                           ; 2 bytes @ 0x27
  3192  000028                     	ds	1
  3193  000029                     ??_display_prepare:
  3194  000029                     __write_root@data:
  3195                           	opt stack 0
  3196  000029                     __delete_root@sector:
  3197                           	opt stack 0
  3198  000029                     fat_read_from_buffer@data:
  3199                           	opt stack 0
  3200  000029                     fat_write_to_buffer@data:
  3201                           	opt stack 0
  3202  000029                     __parse_format_drive@out_buffer:
  3203                           	opt stack 0
  3204                           
  3205                           ; 2 bytes @ 0x28
  3206  000029                     	ds	1
  3207  00002A                     flash_sector_read@data:
  3208                           	opt stack 0
  3209  00002A                     flash_partial_read@start:
  3210                           	opt stack 0
  3211                           
  3212                           ; 2 bytes @ 0x29
  3213  00002A                     	ds	1
  3214  00002B                     display_prepare@mode:
  3215                           	opt stack 0
  3216  00002B                     ExternalFlash_SectorWrite@buffer:
  3217                           	opt stack 0
  3218  00002B                     __write_root@sector:
  3219                           	opt stack 0
  3220  00002B                     __delete_root@offset:
  3221                           	opt stack 0
  3222  00002B                     __fill_buffer_read_buffer@inBuffer:
  3223                           	opt stack 0
  3224  00002B                     __parse_format_drive@out_idx_ptr:
  3225                           	opt stack 0
  3226  00002B                     __parse_write_buffer@data:
  3227                           	opt stack 0
  3228                           
  3229                           ; 2 bytes @ 0x2A
  3230  00002B                     	ds	1
  3231  00002C                     ??_fat_get_format_status:
  3232  00002C                     ?__get_available_cluster:
  3233                           	opt stack 0
  3234  00002C                     __parse_command_short@cmd:
  3235                           	opt stack 0
  3236  00002C                     flash_partial_read@length:
  3237                           	opt stack 0
  3238  00002C                     ExternalFlash_SectorRead@config:
  3239                           	opt stack 0
  3240  00002C                     __get_available_cluster@first_sector:
  3241                           	opt stack 0
  3242  00002C                     fat_find_file@name:
  3243                           	opt stack 0
  3244                           
  3245                           ; 2 bytes @ 0x2B
  3246  00002C                     	ds	1
  3247  00002D                     ??__parse_format_drive:
  3248  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  3249                           	opt stack 0
  3250  00002D                     __delete_root@deleted_value:
  3251                           	opt stack 0
  3252  00002D                     __write_root@offset:
  3253                           	opt stack 0
  3254  00002D                     __fill_buffer_read_buffer@outBuffer:
  3255                           	opt stack 0
  3256  00002D                     __parse_write_buffer@out_buffer:
  3257                           	opt stack 0
  3258                           
  3259                           ; 2 bytes @ 0x2C
  3260  00002D                     	ds	1
  3261  00002E                     __delete_root@file_number:
  3262                           	opt stack 0
  3263  00002E                     __parse_format_drive@return_value:
  3264                           	opt stack 0
  3265  00002E                     flash_partial_read@data:
  3266                           	opt stack 0
  3267  00002E                     ExternalFlash_SectorWrite@page:
  3268                           	opt stack 0
  3269  00002E                     __get_available_cluster@skip_sector:
  3270                           	opt stack 0
  3271  00002E                     fat_find_file@extension:
  3272                           	opt stack 0
  3273  00002E                     fat_get_format_status@cntr:
  3274                           	opt stack 0
  3275  00002E                     ExternalFlash_SectorRead@sector_addr:
  3276                           	opt stack 0
  3277                           
  3278                           ; 4 bytes @ 0x2D
  3279  00002E                     	ds	1
  3280  00002F                     ??__fill_buffer_read_buffer:
  3281  00002F                     __write_root@file_number:
  3282                           	opt stack 0
  3283  00002F                     __parse_write_buffer@out_idx_ptr:
  3284                           	opt stack 0
  3285                           
  3286                           ; 2 bytes @ 0x2E
  3287  00002F                     	ds	1
  3288  000030                     ??_MSDWriteHandler:
  3289  000030                     ??_fat_find_file:
  3290  000030                     ?__read_fat:
  3291                           	opt stack 0
  3292  000030                     ?__get_first_cluster:
  3293                           	opt stack 0
  3294  000030                     __get_available_cluster@cluster:
  3295                           	opt stack 0
  3296  000030                     __root_is_available@root_sector:
  3297                           	opt stack 0
  3298  000030                     __read_fat@cluster:
  3299                           	opt stack 0
  3300  000030                     fat_get_file_information@data:
  3301                           	opt stack 0
  3302                           
  3303                           ; 2 bytes @ 0x2F
  3304  000030                     	ds	1
  3305  000031                     ??__parse_write_buffer:
  3306  000031                     __fill_buffer_read_buffer@start:
  3307                           	opt stack 0
  3308                           
  3309                           ; 2 bytes @ 0x30
  3310  000031                     	ds	1
  3311  000032                     fat_find_file@file_number:
  3312                           	opt stack 0
  3313  000032                     ExternalFlash_SectorRead@buffer:
  3314                           	opt stack 0
  3315  000032                     __get_available_cluster@offset:
  3316                           	opt stack 0
  3317  000032                     __root_is_available@offset:
  3318                           	opt stack 0
  3319  000032                     __read_fat@sector:
  3320                           	opt stack 0
  3321  000032                     __get_first_cluster@sector:
  3322                           	opt stack 0
  3323  000032                     __parse_write_buffer@number_of_bytes:
  3324                           	opt stack 0
  3325                           
  3326                           ; 2 bytes @ 0x31
  3327  000032                     	ds	1
  3328  000033                     fat_find_file@sector:
  3329                           	opt stack 0
  3330  000033                     fat_get_file_information@root_sector:
  3331                           	opt stack 0
  3332  000033                     __fill_buffer_read_buffer@data_length:
  3333                           	opt stack 0
  3334                           
  3335                           ; 2 bytes @ 0x32
  3336  000033                     	ds	1
  3337  000034                     __root_is_available@file_number:
  3338                           	opt stack 0
  3339  000034                     ExternalFlash_SectorRead@page:
  3340                           	opt stack 0
  3341  000034                     __get_available_cluster@sector:
  3342                           	opt stack 0
  3343  000034                     __read_fat@offset:
  3344                           	opt stack 0
  3345  000034                     __get_first_cluster@offset:
  3346                           	opt stack 0
  3347  000034                     __parse_write_buffer@start_byte:
  3348                           	opt stack 0
  3349                           
  3350                           ; 2 bytes @ 0x33
  3351  000034                     	ds	1
  3352  000035                     __root_is_available@first_byte:
  3353                           	opt stack 0
  3354  000035                     fat_find_file@offset:
  3355                           	opt stack 0
  3356  000035                     fat_get_file_information@offset:
  3357                           	opt stack 0
  3358                           
  3359                           ; 2 bytes @ 0x34
  3360  000035                     	ds	1
  3361  000036                     ??_MSDReadHandler:
  3362  000036                     ?__make_cluster_chain:
  3363                           	opt stack 0
  3364  000036                     ?_fat_get_file_size:
  3365                           	opt stack 0
  3366  000036                     __get_available_root_entry@file_number:
  3367                           	opt stack 0
  3368  000036                     __make_cluster_chain@first_cluster:
  3369                           	opt stack 0
  3370  000036                     __read_fat@value:
  3371                           	opt stack 0
  3372  000036                     __get_first_cluster@first_cluster:
  3373                           	opt stack 0
  3374                           
  3375                           ; 2 bytes @ 0x35
  3376  000036                     	ds	1
  3377  000037                     fat_get_file_information@file_number:
  3378                           	opt stack 0
  3379  000037                     __fill_buffer_find_file@inBuffer:
  3380                           	opt stack 0
  3381                           
  3382                           ; 2 bytes @ 0x36
  3383  000037                     	ds	1
  3384  000038                     ?__find_nth_cluster:
  3385                           	opt stack 0
  3386  000038                     __get_first_cluster@file_number:
  3387                           	opt stack 0
  3388  000038                     __find_nth_cluster@cluster:
  3389                           	opt stack 0
  3390  000038                     __make_cluster_chain@number_of_clusters:
  3391                           	opt stack 0
  3392  000038                     fat_rename_file@name:
  3393                           	opt stack 0
  3394  000038                     __fill_buffer_get_file_details@inBuffer:
  3395                           	opt stack 0
  3396                           
  3397                           ; 2 bytes @ 0x37
  3398  000038                     	ds	1
  3399  000039                     __fill_buffer_find_file@outBuffer:
  3400                           	opt stack 0
  3401                           
  3402                           ; 2 bytes @ 0x38
  3403  000039                     	ds	1
  3404  00003A                     ??_MSDProcessCommandMediaPresent:
  3405  00003A                     ??__make_cluster_chain:
  3406  00003A                     __find_nth_cluster@n:
  3407                           	opt stack 0
  3408  00003A                     fat_get_file_size@sector:
  3409                           	opt stack 0
  3410  00003A                     fat_rename_file@extension:
  3411                           	opt stack 0
  3412  00003A                     __fill_buffer_get_file_details@outBuffer:
  3413                           	opt stack 0
  3414                           
  3415                           ; 2 bytes @ 0x39
  3416  00003A                     	ds	1
  3417  00003B                     ??__fill_buffer_find_file:
  3418                           
  3419                           ; 1 bytes @ 0x3A
  3420  00003B                     	ds	1
  3421  00003C                     ??__fill_buffer_get_file_details:
  3422  00003C                     fat_rename_file@file_number:
  3423                           	opt stack 0
  3424  00003C                     _MSDProcessCommandMediaPresent$2390:
  3425                           	opt stack 0
  3426  00003C                     __find_nth_cluster@offset:
  3427                           	opt stack 0
  3428  00003C                     __make_cluster_chain@next_offset:
  3429                           	opt stack 0
  3430  00003C                     fat_get_file_size@offset:
  3431                           	opt stack 0
  3432                           
  3433                           ; 2 bytes @ 0x3B
  3434  00003C                     	ds	1
  3435  00003D                     fat_rename_file@return_code:
  3436                           	opt stack 0
  3437  00003D                     __fill_buffer_get_file_details@file_number:
  3438                           	opt stack 0
  3439                           
  3440                           ; 1 bytes @ 0x3C
  3441  00003D                     	ds	1
  3442  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3443                           	opt stack 0
  3444  00003E                     __find_nth_cluster@sector_in_buffer:
  3445                           	opt stack 0
  3446  00003E                     __make_cluster_chain@minimum_sector:
  3447                           	opt stack 0
  3448  00003E                     fat_get_file_size@file_size:
  3449                           	opt stack 0
  3450  00003E                     fat_rename_file@root:
  3451                           	opt stack 0
  3452                           
  3453                           ; 32 bytes @ 0x3D
  3454  00003E                     	ds	1
  3455  00003F                     __fill_buffer_find_file@cntr:
  3456                           	opt stack 0
  3457  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3458                           	opt stack 0
  3459                           
  3460                           ; 4 bytes @ 0x3E
  3461  00003F                     	ds	1
  3462  000040                     __find_nth_cluster@sector:
  3463                           	opt stack 0
  3464  000040                     __make_cluster_chain@different_sector_cluster:
  3465                           	opt stack 0
  3466                           
  3467                           ; 2 bytes @ 0x3F
  3468  000040                     	ds	2
  3469  000042                     __make_cluster_chain@data_changed:
  3470                           	opt stack 0
  3471  000042                     fat_get_file_size@file_number:
  3472                           	opt stack 0
  3473  000042                     fat_read_from_file_fast@start_byte:
  3474                           	opt stack 0
  3475  000042                     fat_modify_file@start_byte:
  3476                           	opt stack 0
  3477                           
  3478                           ; 4 bytes @ 0x41
  3479  000042                     	ds	1
  3480  000043                     __make_cluster_chain@remaining_clusters:
  3481                           	opt stack 0
  3482  000043                     fat_copy_sector_to_buffer@sector:
  3483                           	opt stack 0
  3484  000043                     fat_write_sector_from_buffer@sector:
  3485                           	opt stack 0
  3486  000043                     MSDProcessCommandMediaPresent@capacity:
  3487                           	opt stack 0
  3488                           
  3489                           ; 4 bytes @ 0x42
  3490  000043                     	ds	2
  3491  000045                     ??_fat_copy_sector_to_buffer:
  3492  000045                     ??_fat_write_sector_from_buffer:
  3493  000045                     __make_cluster_chain@sector:
  3494                           	opt stack 0
  3495                           
  3496                           ; 2 bytes @ 0x44
  3497  000045                     	ds	1
  3498  000046                     fat_modify_file@length:
  3499                           	opt stack 0
  3500  000046                     fat_read_from_file_fast@length:
  3501                           	opt stack 0
  3502                           
  3503                           ; 4 bytes @ 0x45
  3504  000046                     	ds	1
  3505  000047                     MSDProcessCommandMediaPresent@i:
  3506                           	opt stack 0
  3507  000047                     __make_cluster_chain@sector_in_buffer:
  3508                           	opt stack 0
  3509                           
  3510                           ; 2 bytes @ 0x46
  3511  000047                     	ds	1
  3512  000048                     ??_MSDProcessCommand:
  3513  000048                     fat_modify_file@data:
  3514                           	opt stack 0
  3515                           
  3516                           ; 2 bytes @ 0x47
  3517  000048                     	ds	1
  3518  000049                     __make_cluster_chain@offset:
  3519                           	opt stack 0
  3520  000049                     fat_write_sector_from_buffer@cluster:
  3521                           	opt stack 0
  3522  000049                     fat_copy_sector_to_buffer@file_size:
  3523                           	opt stack 0
  3524                           
  3525                           ; 4 bytes @ 0x48
  3526  000049                     	ds	1
  3527  00004A                     ??_fat_modify_file:
  3528  00004A                     fat_read_from_file_fast@data:
  3529                           	opt stack 0
  3530                           
  3531                           ; 2 bytes @ 0x49
  3532  00004A                     	ds	1
  3533  00004B                     __make_cluster_chain@next_cluster:
  3534                           	opt stack 0
  3535  00004B                     fat_write_sector_from_buffer@file_size:
  3536                           	opt stack 0
  3537                           
  3538                           ; 4 bytes @ 0x4A
  3539  00004B                     	ds	1
  3540  00004C                     fat_read_from_file_fast@cluster:
  3541                           	opt stack 0
  3542                           
  3543                           ; 2 bytes @ 0x4B
  3544  00004C                     	ds	1
  3545  00004D                     ??_MSDTasks:
  3546  00004D                     fat_create_file@name:
  3547                           	opt stack 0
  3548  00004D                     fat_delete_file@first_cluster:
  3549                           	opt stack 0
  3550  00004D                     fat_copy_sector_to_buffer@number_of_clusters:
  3551                           	opt stack 0
  3552  00004D                     fat_resize_file@new_file_size:
  3553                           	opt stack 0
  3554                           
  3555                           ; 4 bytes @ 0x4C
  3556  00004D                     	ds	1
  3557  00004E                     _MSDTasks$2372:
  3558                           	opt stack 0
  3559  00004E                     fat_read_from_file_fast@cluster_number:
  3560                           	opt stack 0
  3561                           
  3562                           ; 2 bytes @ 0x4D
  3563  00004E                     	ds	1
  3564  00004F                     fat_delete_file@file_number:
  3565                           	opt stack 0
  3566  00004F                     fat_create_file@extension:
  3567                           	opt stack 0
  3568  00004F                     fat_copy_sector_to_buffer@physical_sector:
  3569                           	opt stack 0
  3570  00004F                     fat_write_sector_from_buffer@number_of_clusters:
  3571                           	opt stack 0
  3572                           
  3573                           ; 2 bytes @ 0x4E
  3574  00004F                     	ds	1
  3575  000050                     ??_fat_read_from_file_fast:
  3576  000050                     _MSDTasks$2373:
  3577                           	opt stack 0
  3578  000050                     __parse_file_delete@data:
  3579                           	opt stack 0
  3580                           
  3581                           ; 2 bytes @ 0x4F
  3582  000050                     	ds	1
  3583  000051                     ??_fat_resize_file:
  3584  000051                     fat_write_sector_from_buffer@file_number:
  3585                           	opt stack 0
  3586  000051                     fat_copy_sector_to_buffer@cluster:
  3587                           	opt stack 0
  3588  000051                     fat_create_file@size:
  3589                           	opt stack 0
  3590                           
  3591                           ; 4 bytes @ 0x50
  3592  000051                     	ds	1
  3593  000052                     MSDTasks@i:
  3594                           	opt stack 0
  3595  000052                     __parse_file_delete@out_buffer:
  3596                           	opt stack 0
  3597  000052                     __parse_buffer_to_sector@data:
  3598                           	opt stack 0
  3599                           
  3600                           ; 2 bytes @ 0x51
  3601  000052                     	ds	1
  3602  000053                     fat_copy_sector_to_buffer@file_number:
  3603                           	opt stack 0
  3604                           
  3605                           ; 1 bytes @ 0x52
  3606  000053                     	ds	1
  3607  000054                     __parse_file_delete@out_idx_ptr:
  3608                           	opt stack 0
  3609  000054                     __parse_sector_to_buffer@data:
  3610                           	opt stack 0
  3611  000054                     __parse_buffer_to_sector@out_buffer:
  3612                           	opt stack 0
  3613                           
  3614                           ; 2 bytes @ 0x53
  3615  000054                     	ds	1
  3616  000055                     ??_fat_create_file:
  3617  000055                     __parse_file_resize@data:
  3618                           	opt stack 0
  3619                           
  3620                           ; 2 bytes @ 0x54
  3621  000055                     	ds	1
  3622  000056                     ??__parse_file_delete:
  3623  000056                     fat_append_to_file@number_of_bytes:
  3624                           	opt stack 0
  3625  000056                     __parse_file_modify@data:
  3626                           	opt stack 0
  3627  000056                     __parse_sector_to_buffer@out_buffer:
  3628                           	opt stack 0
  3629  000056                     __parse_buffer_to_sector@out_idx_ptr:
  3630                           	opt stack 0
  3631                           
  3632                           ; 2 bytes @ 0x55
  3633  000056                     	ds	1
  3634  000057                     __parse_file_delete@return_value:
  3635                           	opt stack 0
  3636  000057                     __parse_file_resize@out_buffer:
  3637                           	opt stack 0
  3638                           
  3639                           ; 2 bytes @ 0x56
  3640  000057                     	ds	1
  3641  000058                     ??__parse_buffer_to_sector:
  3642  000058                     __parse_file_delete@file_number:
  3643                           	opt stack 0
  3644  000058                     fat_append_to_file@data:
  3645                           	opt stack 0
  3646  000058                     __parse_file_modify@out_buffer:
  3647                           	opt stack 0
  3648  000058                     __parse_sector_to_buffer@out_idx_ptr:
  3649                           	opt stack 0
  3650                           
  3651                           ; 2 bytes @ 0x57
  3652  000058                     	ds	1
  3653  000059                     __parse_buffer_to_sector@return_value:
  3654                           	opt stack 0
  3655  000059                     fat_copy_file@name:
  3656                           	opt stack 0
  3657  000059                     __parse_file_resize@out_idx_ptr:
  3658                           	opt stack 0
  3659  000059                     __parse_file_create@data:
  3660                           	opt stack 0
  3661                           
  3662                           ; 2 bytes @ 0x58
  3663  000059                     	ds	1
  3664  00005A                     ??__parse_sector_to_buffer:
  3665  00005A                     __parse_buffer_to_sector@file_number:
  3666                           	opt stack 0
  3667  00005A                     __parse_file_append@data:
  3668                           	opt stack 0
  3669  00005A                     __parse_file_modify@out_idx_ptr:
  3670                           	opt stack 0
  3671                           
  3672                           ; 2 bytes @ 0x59
  3673  00005A                     	ds	1
  3674  00005B                     ??__parse_file_resize:
  3675  00005B                     __parse_sector_to_buffer@file_number:
  3676                           	opt stack 0
  3677  00005B                     fat_copy_file@extension:
  3678                           	opt stack 0
  3679  00005B                     __parse_file_create@out_buffer:
  3680                           	opt stack 0
  3681  00005B                     __parse_buffer_to_sector@sector:
  3682                           	opt stack 0
  3683                           
  3684                           ; 2 bytes @ 0x5A
  3685  00005B                     	ds	1
  3686  00005C                     ??__parse_file_modify:
  3687  00005C                     ??_fat_read_from_file:
  3688  00005C                     bootloader_run@timeslot:
  3689                           	opt stack 0
  3690  00005C                     __parse_sector_to_buffer@return_value:
  3691                           	opt stack 0
  3692  00005C                     __parse_file_append@out_buffer:
  3693                           	opt stack 0
  3694                           
  3695                           ; 2 bytes @ 0x5B
  3696  00005C                     	ds	1
  3697  00005D                     ??__parse_file_copy:
  3698  00005D                     __parse_file_create@out_idx_ptr:
  3699                           	opt stack 0
  3700  00005D                     __parse_sector_to_buffer@sector:
  3701                           	opt stack 0
  3702                           
  3703                           ; 2 bytes @ 0x5C
  3704  00005D                     	ds	1
  3705  00005E                     fat_rename_file@cntr:
  3706                           	opt stack 0
  3707  00005E                     __parse_file_copy@return_value:
  3708                           	opt stack 0
  3709  00005E                     __parse_file_append@out_idx_ptr:
  3710                           	opt stack 0
  3711                           
  3712                           ; 2 bytes @ 0x5D
  3713  00005E                     	ds	1
  3714  00005F                     ??__parse_file_create:
  3715  00005F                     ??__parse_file_rename:
  3716  00005F                     __parse_file_copy@file_number:
  3717                           	opt stack 0
  3718                           
  3719                           ; 1 bytes @ 0x5E
  3720  00005F                     	ds	1
  3721  000060                     tblptru	equ	0xFF8
  3722                           tblptrh	equ	0xFF7
  3723                           tblptrl	equ	0xFF6
  3724                           tablat	equ	0xFF5
  3725                           postinc0	equ	0xFEE
  3726                           wreg	equ	0xFE8
  3727                           postdec1	equ	0xFE5
  3728                           fsr1h	equ	0xFE2
  3729                           fsr1l	equ	0xFE1
  3730                           
  3731                           ; 1 bytes @ 0x5F
  3732 ;;
  3733 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3734 ;;
  3735 ;; *************** function _main *****************
  3736 ;; Defined at:
  3737 ;;		line 54 in file "main.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  tx_buffer       2   99[BANK0 ] PTR unsigned char 
  3742 ;;		 -> _spi_external_tx_buffer(64), 
  3743 ;;  rx_buffer       2   97[BANK0 ] PTR unsigned char 
  3744 ;;		 -> _spi_external_rx_buffer(64), 
  3745 ;;  bytes_transm    2   95[BANK0 ] unsigned int 
  3746 ;;  tx_start_add    2   93[BANK0 ] unsigned int 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3757 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;Total ram usage:       10 bytes
  3761 ;; Hardware stack levels required when called:   13
  3762 ;; This function calls:
  3763 ;;		_APP_DeviceCustomHIDTasks
  3764 ;;		_APP_DeviceMSDTasks
  3765 ;;		_SYSTEM_Initialize
  3766 ;;		_USBDeviceInit
  3767 ;;		_USBDeviceTasks
  3768 ;;		__normal_mode
  3769 ;;		_api_parse
  3770 ;;		_api_prepare
  3771 ;;		_bootloader_run
  3772 ;;		_display_prepare
  3773 ;;		_display_update
  3774 ;;		_jump_to_main_program
  3775 ;;		_spi_get_external_rx_buffer
  3776 ;;		_spi_get_external_tx_buffer
  3777 ;;		_system_full_init
  3778 ;;		_system_minimal_init
  3779 ;;		_system_minimal_init_undo
  3780 ;;		_timer_pseudo_isr
  3781 ;;		_ui_get_status
  3782 ;;		_ui_run
  3783 ;; This function is called by:
  3784 ;;		Startup code after reset
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text0
  3789  003F24                     __ptext0:
  3790                           	opt stack 0
  3791  003F24                     _main:
  3792                           	opt stack 18
  3793                           
  3794                           ;incstack = 0
  3795  003F24  0004               	clrwdt		;# 
  3796                           
  3797                           ;main.c: 65: rx_buffer = spi_get_external_rx_buffer();
  3798  003F26  EC36  F04E         	call	_spi_get_external_rx_buffer	;wreg free
  3799  003F2A  C001  F0C1         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3800  003F2E  C002  F0C2         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3801                           
  3802                           ;main.c: 66: tx_buffer = spi_get_external_tx_buffer();
  3803  003F32  EC31  F04E         	call	_spi_get_external_tx_buffer	;wreg free
  3804  003F36  C001  F0C3         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3805  003F3A  C002  F0C4         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3806                           
  3807                           ;main.c: 67: tx_start_addr = (uint16_t) tx_buffer;
  3808  003F3E  C0C3  F0BD         	movff	main@tx_buffer,main@tx_start_addr
  3809  003F42  C0C4  F0BE         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3810                           
  3811                           ;main.c: 71: system_minimal_init();
  3812  003F46  ECB6  F04D         	call	_system_minimal_init	;wreg free
  3813                           
  3814                           ;main.c: 74: if(_normal_mode())
  3815  003F4A  ECE5  F044         	call	__normal_mode	;wreg free
  3816  003F4E  0900               	iorlw	0
  3817  003F50  B4D8               	btfsc	status,2,c
  3818  003F52  D004               	goto	l893
  3819                           
  3820                           ;main.c: 75: {;main.c: 77: system_minimal_init_undo();
  3821  003F54  EC05  F04E         	call	_system_minimal_init_undo	;wreg free
  3822                           
  3823                           ;main.c: 78: jump_to_main_program();
  3824  003F58  EC83  F04E         	call	_jump_to_main_program	;wreg free
  3825  003F5C                     l893:
  3826                           
  3827                           ;main.c: 79: };main.c: 83: system_full_init();
  3828  003F5C  EC14  F045         	call	_system_full_init	;wreg free
  3829                           
  3830                           ;main.c: 87: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3831  003F60  0E00               	movlw	0
  3832  003F62  EC4C  F047         	call	_SYSTEM_Initialize
  3833                           
  3834                           ;main.c: 88: USBDeviceInit();
  3835  003F66  EC7F  F026         	call	_USBDeviceInit	;wreg free
  3836  003F6A                     l894:
  3837  003F6A  0004               	clrwdt		;# 
  3838                           
  3839                           ;main.c: 101: USBDeviceTasks();
  3840  003F6C  EC14  F01E         	call	_USBDeviceTasks	;wreg free
  3841                           
  3842                           ;main.c: 102: APP_DeviceMSDTasks();
  3843  003F70  ECE1  F04D         	call	_APP_DeviceMSDTasks	;wreg free
  3844                           
  3845                           ;main.c: 103: APP_DeviceCustomHIDTasks();
  3846  003F74  EC2C  F03A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3847                           
  3848                           ;main.c: 107: timer_pseudo_isr();
  3849  003F78  EC67  F04A         	call	_timer_pseudo_isr	;wreg free
  3850                           
  3851                           ;main.c: 110: if(PORTDbits.RD2)
  3852  003F7C  A483               	btfss	3971,2,c	;volatile
  3853  003F7E  D03D               	goto	l896
  3854                           
  3855                           ;main.c: 111: {;main.c: 114: bytes_transmitted = TXADDRH;
  3856  003F80  CF6A F0BF          	movff	3946,main@bytes_transmitted	;volatile
  3857  003F84  0100               	movlb	0	; () banked
  3858  003F86  6BC0               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;main.c: 115: bytes_transmitted <<= 8;
  3862  003F88  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3863  003F8A  6FC0               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3864  003F8C  6BBF               	clrf	main@bytes_transmitted& (0+255),b
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;main.c: 116: bytes_transmitted |= TXADDRL;
  3868  003F8E  506B               	movf	3947,w,c	;volatile
  3869  003F90  13BF               	iorwf	main@bytes_transmitted& (0+255),f,b
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;main.c: 117: --bytes_transmitted;
  3873  003F92  07BF               	decf	main@bytes_transmitted& (0+255),f,b
  3874  003F94  A0D8               	btfss	status,0,c
  3875  003F96  07C0               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;main.c: 118: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3879  003F98  EC31  F04E         	call	_spi_get_external_tx_buffer	;wreg free
  3880  003F9C  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3881  003F9E  0100               	movlb	0	; () banked
  3882  003FA0  5FBF               	subwf	main@bytes_transmitted& (0+255),f,b
  3883  003FA2  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3884  003FA4  5BC0               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;main.c: 121: if(bytes_transmitted>0)
  3888  003FA6  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3889  003FA8  11C0               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3890  003FAA  B4D8               	btfsc	status,2,c
  3891  003FAC  D026               	goto	l896
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;main.c: 122: {;main.c: 124: DMACON1bits.DMAEN = 0;
  3895  003FAE  9088               	bcf	3976,0,c	;volatile
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;main.c: 127: api_prepare(rx_buffer, tx_buffer);
  3899  003FB0  C0C1  F0B2         	movff	main@rx_buffer,api_prepare@inBuffer
  3900  003FB4  C0C2  F0B3         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3901  003FB8  C0C3  F0B4         	movff	main@tx_buffer,api_prepare@outBuffer
  3902  003FBC  C0C4  F0B5         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3903  003FC0  EC0A  F021         	call	_api_prepare	;wreg free
  3904                           
  3905                           ;main.c: 128: api_parse(rx_buffer, (uint8_t) bytes_transmitted, tx_buffer);
  3906  003FC4  C0C1  F0A4         	movff	main@rx_buffer,api_parse@inBuffer
  3907  003FC8  C0C2  F0A5         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3908  003FCC  C0BF  F0A6         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3909  003FD0  C0C3  F0A7         	movff	main@tx_buffer,api_parse@outBuffer
  3910  003FD4  C0C4  F0A8         	movff	main@tx_buffer+1,api_parse@outBuffer+1
  3911  003FD8  EC01  F029         	call	_api_parse	;wreg free
  3912                           
  3913                           ;main.c: 131: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3914  003FDC  0100               	movlb	0	; () banked
  3915  003FDE  51C4               	movf	(main@tx_buffer+1)& (0+255),w,b
  3916  003FE0  6E6A               	movwf	3946,c	;volatile
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;main.c: 132: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3920  003FE2  C0C3  FF6B         	movff	main@tx_buffer,3947	;volatile
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;main.c: 135: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3924  003FE6  51C2               	movf	(main@rx_buffer+1)& (0+255),w,b
  3925  003FE8  6E68               	movwf	3944,c	;volatile
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;main.c: 136: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3929  003FEA  C0C1  FF69         	movff	main@rx_buffer,3945	;volatile
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;main.c: 139: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3933  003FEE  0E00               	movlw	0
  3934  003FF0  6E66               	movwf	3942,c	;volatile
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;main.c: 140: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3938  003FF2  0E3F               	movlw	63
  3939  003FF4  6E67               	movwf	3943,c	;volatile
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;main.c: 143: PIR3bits.SSP2IF = 0;
  3943  003FF6  9EA4               	bcf	4004,7,c	;volatile
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;main.c: 145: DMACON1bits.DMAEN = 1;
  3947  003FF8  8088               	bsf	3976,0,c	;volatile
  3948  003FFA                     l896:
  3949                           
  3950                           ;main.c: 146: };main.c: 147: };main.c: 151: if(!os.done)
  3951                           
  3952                           ; BSR set to: 0
  3953                           
  3954                           ; BSR set to: 0
  3955  003FFA  0100               	movlb	0	; () banked
  3956  003FFC  51C8               	movf	(_os+3)& (0+255),w,b	;volatile
  3957  003FFE  A4D8               	btfss	status,2,c
  3958  004000  D7B4               	goto	l894
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;main.c: 152: {;main.c: 154: ui_run();
  3962  004002  ECB4  F02B         	call	_ui_run	;wreg free
  3963                           
  3964                           ;main.c: 159: switch(os.timeSlot&0b00000111)
  3965  004006  D025               	goto	l898
  3966  004008                     
  3967                           ;main.c: 162: bootloader_run(0);
  3968  004008  0E00               	movlw	0
  3969  00400A  EC55  F043         	call	_bootloader_run
  3970                           
  3971                           ;main.c: 163: break;
  3972  00400E  D043               	goto	l900
  3973  004010                     
  3974                           ;main.c: 166: bootloader_run(1);
  3975  004010  0E01               	movlw	1
  3976  004012  EC55  F043         	call	_bootloader_run
  3977                           
  3978                           ;main.c: 167: break;
  3979  004016  D03F               	goto	l900
  3980  004018                     
  3981                           ;main.c: 170: bootloader_run(2);
  3982  004018  0E02               	movlw	2
  3983  00401A  EC55  F043         	call	_bootloader_run
  3984                           
  3985                           ;main.c: 171: break;
  3986  00401E  D03B               	goto	l900
  3987  004020                     
  3988                           ;main.c: 174: bootloader_run(3);
  3989  004020  0E03               	movlw	3
  3990  004022  EC55  F043         	call	_bootloader_run
  3991                           
  3992                           ;main.c: 175: break;
  3993  004026  D037               	goto	l900
  3994  004028                     
  3995                           ;main.c: 178: bootloader_run(4);
  3996  004028  0E04               	movlw	4
  3997  00402A  EC55  F043         	call	_bootloader_run
  3998                           
  3999                           ;main.c: 179: break;
  4000  00402E  D033               	goto	l900
  4001  004030                     
  4002                           ;main.c: 182: bootloader_run(5);
  4003  004030  0E05               	movlw	5
  4004  004032  EC55  F043         	call	_bootloader_run
  4005                           
  4006                           ;main.c: 183: break;
  4007  004036  D02F               	goto	l900
  4008  004038                     
  4009                           ;main.c: 186: display_prepare(os.display_mode);
  4010  004038  0100               	movlb	0	; () banked
  4011  00403A  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  4012  00403C  ECB9  F034         	call	_display_prepare
  4013                           
  4014                           ;main.c: 187: break;
  4015  004040  D02A               	goto	l900
  4016  004042                     
  4017                           ;main.c: 190: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4018  004042  EC8F  F04E         	call	_ui_get_status	;wreg free
  4019  004046  0A05               	xorlw	5
  4020  004048  A4D8               	btfss	status,2,c
  4021  00404A  D025               	goto	l900
  4022                           
  4023                           ;main.c: 191: {;main.c: 192: display_update();
  4024  00404C  EC20  F043         	call	_display_update	;wreg free
  4025                           
  4026                           ;main.c: 195: }
  4027                           
  4028                           ;main.c: 193: };main.c: 194: break;
  4029  004050  D022               	goto	l900
  4030  004052                     l898:
  4031  004052  0100               	movlb	0	; () banked
  4032  004054  51C7               	movf	(_os+2)& (0+255),w,b	;volatile
  4033  004056  0B07               	andlw	7
  4034  004058  6FBB               	movwf	??_main& (0+255),b
  4035  00405A  6BBC               	clrf	(??_main+1)& (0+255),b
  4036                           
  4037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4038                           ; Switch size 1, requested type "space"
  4039                           ; Number of cases is 1, Range of values is 0 to 0
  4040                           ; switch strategies available:
  4041                           ; Name         Instructions Cycles
  4042                           ; simple_byte            4     3 (average)
  4043                           ;	Chosen strategy is simple_byte
  4044  00405C  51BC               	movf	(??_main+1)& (0+255),w,b
  4045  00405E  0A00               	xorlw	0	; case 0
  4046  004060  A4D8               	btfss	status,2,c
  4047  004062  D019               	goto	l900
  4048                           
  4049                           ; BSR set to: 0
  4050                           ; Switch size 1, requested type "space"
  4051                           ; Number of cases is 8, Range of values is 0 to 7
  4052                           ; switch strategies available:
  4053                           ; Name         Instructions Cycles
  4054                           ; simple_byte           25    13 (average)
  4055                           ;	Chosen strategy is simple_byte
  4056  004064  51BB               	movf	??_main& (0+255),w,b
  4057  004066  0A00               	xorlw	0	; case 0
  4058  004068  B4D8               	btfsc	status,2,c
  4059  00406A  D7CE               	goto	l899
  4060  00406C  0A01               	xorlw	1	; case 1
  4061  00406E  B4D8               	btfsc	status,2,c
  4062  004070  D7CF               	goto	l901
  4063  004072  0A03               	xorlw	3	; case 2
  4064  004074  B4D8               	btfsc	status,2,c
  4065  004076  D7D0               	goto	l902
  4066  004078  0A01               	xorlw	1	; case 3
  4067  00407A  B4D8               	btfsc	status,2,c
  4068  00407C  D7D1               	goto	l903
  4069  00407E  0A07               	xorlw	7	; case 4
  4070  004080  B4D8               	btfsc	status,2,c
  4071  004082  D7D2               	goto	l904
  4072  004084  0A01               	xorlw	1	; case 5
  4073  004086  B4D8               	btfsc	status,2,c
  4074  004088  D7D3               	goto	l905
  4075  00408A  0A03               	xorlw	3	; case 6
  4076  00408C  B4D8               	btfsc	status,2,c
  4077  00408E  D7D4               	goto	l906
  4078  004090  0A01               	xorlw	1	; case 7
  4079  004092  B4D8               	btfsc	status,2,c
  4080  004094  D7D6               	goto	l907
  4081  004096                     l900:
  4082                           
  4083                           ;main.c: 196: os.done = 1;
  4084                           
  4085                           ; BSR set to: 0
  4086  004096  0E01               	movlw	1
  4087  004098  0100               	movlb	0	; () banked
  4088  00409A  6FC8               	movwf	(_os+3)& (0+255),b	;volatile
  4089                           
  4090                           ; BSR set to: 0
  4091                           
  4092                           ; BSR set to: 0
  4093  00409C  D766               	goto	l894
  4094  00409E                     __end_of_main:
  4095                           	opt stack 0
  4096                           tblptru	equ	0xFF8
  4097                           tblptrh	equ	0xFF7
  4098                           tblptrl	equ	0xFF6
  4099                           tablat	equ	0xFF5
  4100                           postinc0	equ	0xFEE
  4101                           wreg	equ	0xFE8
  4102                           postdec1	equ	0xFE5
  4103                           fsr1h	equ	0xFE2
  4104                           fsr1l	equ	0xFE1
  4105                           status	equ	0xFD8
  4106                           
  4107 ;; *************** function _ui_run *****************
  4108 ;; Defined at:
  4109 ;;		line 119 in file "ui.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4127 ;;Total ram usage:        0 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:    9
  4130 ;; This function calls:
  4131 ;;		__ui_encoder
  4132 ;;		_i2c_digipot_backlight
  4133 ;;		_i2c_digipot_reset_off
  4134 ;;		_i2c_digipot_reset_on
  4135 ;;		_i2c_display_send_init_sequence
  4136 ;;		_system_encoder_enable
  4137 ;;		_ui_init
  4138 ;; This function is called by:
  4139 ;;		_main
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text1
  4144  005768                     __ptext1:
  4145                           	opt stack 0
  4146  005768                     _ui_run:
  4147                           	opt stack 21
  4148                           
  4149                           ;ui.c: 121: switch(userInterfaceStatus)
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;incstack = 0
  4153  005768  D06D               	goto	l1321
  4154  00576A                     
  4155                           ;ui.c: 125: if (os.buttonCount!=0)
  4156  00576A  0100               	movlb	0	; () banked
  4157  00576C  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4158  00576E  B4D8               	btfsc	status,2,c
  4159  005770  0012               	return	
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;ui.c: 126: {;ui.c: 127: ui_init();
  4163  005772  ECD7  F04D         	call	_ui_init	;wreg free
  4164                           
  4165                           ;ui.c: 128: os.buttonCount = 0;
  4166  005776  0E00               	movlw	0
  4167  005778  0100               	movlb	0	; () banked
  4168  00577A  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;ui.c: 129: };ui.c: 130: break;
  4172  00577C  0012               	return	
  4173  00577E                     l1325:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;ui.c: 134: LATDbits.LD0 = 0;
  4177  00577E  908C               	bcf	3980,0,c	;volatile
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;ui.c: 136: system_ui_inactive_count = 0;
  4181  005780  0E00               	movlw	0
  4182  005782  0101               	movlb	1	; () banked
  4183  005784  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4184  005786  0E00               	movlw	0
  4185  005788  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4186                           
  4187                           ;ui.c: 137: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  4188  00578A  0E02               	movlw	2
  4189  00578C  0100               	movlb	0	; () banked
  4190  00578E  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  4191                           
  4192                           ;ui.c: 138: break;
  4193  005790  0012               	return	
  4194  005792                     
  4195                           ; BSR set to: 0
  4196                           ;ui.c: 142: i2c_digipot_reset_on();
  4197                           
  4198                           ; BSR set to: 0
  4199  005792  ECCF  F04C         	call	_i2c_digipot_reset_on	;wreg free
  4200                           
  4201                           ;ui.c: 144: system_ui_inactive_count = 0;
  4202  005796  0E00               	movlw	0
  4203  005798  0101               	movlb	1	; () banked
  4204  00579A  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4205  00579C  0E00               	movlw	0
  4206  00579E  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4207                           
  4208                           ; BSR set to: 1
  4209                           ;ui.c: 145: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  4210  0057A0  0E03               	movlw	3
  4211  0057A2  0100               	movlb	0	; () banked
  4212  0057A4  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  4213                           
  4214                           ;ui.c: 146: break;
  4215  0057A6  0012               	return	
  4216  0057A8                     
  4217                           ; BSR set to: 0
  4218                           ;ui.c: 149: ++system_ui_inactive_count;
  4219                           
  4220                           ; BSR set to: 0
  4221  0057A8  0101               	movlb	1	; () banked
  4222  0057AA  4B7C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4223  0057AC  2B7D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4224                           
  4225                           ; BSR set to: 1
  4226                           ;ui.c: 151: if (system_ui_inactive_count>3)
  4227  0057AE  517D               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  4228  0057B0  E104               	bnz	u13680
  4229  0057B2  0E04               	movlw	4
  4230  0057B4  5D7C               	subwf	_system_ui_inactive_count& (0+255),w,b
  4231  0057B6  A0D8               	btfss	status,0,c
  4232  0057B8  0012               	return	
  4233  0057BA                     u13680:
  4234                           
  4235                           ; BSR set to: 1
  4236                           ;ui.c: 152: {;ui.c: 153: i2c_digipot_reset_off();
  4237  0057BA  ECE0  F04C         	call	_i2c_digipot_reset_off	;wreg free
  4238                           
  4239                           ;ui.c: 154: system_ui_inactive_count = 0;
  4240  0057BE  0E00               	movlw	0
  4241  0057C0  0101               	movlb	1	; () banked
  4242  0057C2  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4243  0057C4  0E00               	movlw	0
  4244  0057C6  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4245                           
  4246                           ; BSR set to: 1
  4247                           ;ui.c: 155: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4248  0057C8  0E04               	movlw	4
  4249  0057CA  0100               	movlb	0	; () banked
  4250  0057CC  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;ui.c: 156: };ui.c: 157: break;
  4254  0057CE  0012               	return	
  4255  0057D0                     
  4256                           ; BSR set to: 0
  4257                           ;ui.c: 161: i2c_display_send_init_sequence();
  4258                           
  4259                           ; BSR set to: 0
  4260  0057D0  EC8F  F04B         	call	_i2c_display_send_init_sequence	;wreg free
  4261                           
  4262                           ;ui.c: 163: i2c_digipot_backlight(150);
  4263  0057D4  0E96               	movlw	150
  4264  0057D6  EC3A  F04C         	call	_i2c_digipot_backlight
  4265                           
  4266                           ;ui.c: 165: system_encoder_enable();
  4267  0057DA  ECFD  F04D         	call	_system_encoder_enable	;wreg free
  4268                           
  4269                           ;ui.c: 167: system_ui_inactive_count = 0;
  4270  0057DE  0E00               	movlw	0
  4271  0057E0  0101               	movlb	1	; () banked
  4272  0057E2  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4273  0057E4  0E00               	movlw	0
  4274  0057E6  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4275                           
  4276                           ; BSR set to: 1
  4277                           ;ui.c: 168: startup_timer = 0;
  4278  0057E8  0E00               	movlw	0
  4279  0057EA  6F7B               	movwf	(_startup_timer+1)& (0+255),b
  4280  0057EC  0E00               	movlw	0
  4281  0057EE  6F7A               	movwf	_startup_timer& (0+255),b
  4282                           
  4283                           ; BSR set to: 1
  4284                           ;ui.c: 169: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4285  0057F0  0E05               	movlw	5
  4286  0057F2  0100               	movlb	0	; () banked
  4287  0057F4  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  4288                           
  4289                           ;ui.c: 170: break;
  4290  0057F6  0012               	return	
  4291  0057F8                     
  4292                           ; BSR set to: 0
  4293                           ;ui.c: 173: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  4294                           
  4295                           ; BSR set to: 0
  4296  0057F8  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  4297  0057FA  A4D8               	btfss	status,2,c
  4298  0057FC  D00B               	goto	l1332
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;ui.c: 174: {;ui.c: 175: ++startup_timer;
  4302  0057FE  0101               	movlb	1	; () banked
  4303  005800  4B7A               	infsnz	_startup_timer& (0+255),f,b
  4304  005802  2B7B               	incf	(_startup_timer+1)& (0+255),f,b
  4305                           
  4306                           ; BSR set to: 1
  4307                           ;ui.c: 176: if(startup_timer==250)
  4308  005804  0EFA               	movlw	250
  4309  005806  197A               	xorwf	_startup_timer& (0+255),w,b
  4310  005808  117B               	iorwf	(_startup_timer+1)& (0+255),w,b
  4311  00580A  A4D8               	btfss	status,2,c
  4312  00580C  D003               	goto	l1332
  4313                           
  4314                           ; BSR set to: 1
  4315                           ;ui.c: 177: {;ui.c: 178: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  4316  00580E  0E10               	movlw	16
  4317  005810  0100               	movlb	0	; () banked
  4318  005812  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4319  005814                     l1332:
  4320                           
  4321                           ;ui.c: 179: };ui.c: 180: };ui.c: 181: if (os.encoderCount==0 && os.buttonCount==0)
  4322                           
  4323                           ; BSR set to: 0
  4324  005814  0100               	movlb	0	; () banked
  4325  005816  51C5               	movf	_os& (0+255),w,b	;volatile
  4326  005818  A4D8               	btfss	status,2,c
  4327  00581A  D00C               	goto	l1333
  4328                           
  4329                           ; BSR set to: 0
  4330  00581C  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4331  00581E  A4D8               	btfss	status,2,c
  4332  005820  D009               	goto	l1333
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;ui.c: 182: {;ui.c: 183: if(system_ui_inactive_count<0xFFFF)
  4336  005822  0101               	movlb	1	; () banked
  4337  005824  297C               	incf	_system_ui_inactive_count& (0+255),w,b
  4338  005826  E103               	bnz	u13730
  4339  005828  297D               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  4340  00582A  B4D8               	btfsc	status,2,c
  4341  00582C  0012               	return	
  4342  00582E                     u13730:
  4343                           
  4344                           ; BSR set to: 1
  4345                           ;ui.c: 184: ++system_ui_inactive_count;
  4346  00582E  4B7C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4347  005830  2B7D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4348                           
  4349                           ; BSR set to: 1
  4350                           ;ui.c: 185: }
  4351  005832  0012               	return	
  4352  005834                     l1333:
  4353                           
  4354                           ;ui.c: 186: else;ui.c: 187: {;ui.c: 188: system_ui_inactive_count = 0;
  4355                           
  4356                           ; BSR set to: 1
  4357  005834  0E00               	movlw	0
  4358  005836  0101               	movlb	1	; () banked
  4359  005838  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4360  00583A  0E00               	movlw	0
  4361  00583C  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4362                           
  4363                           ; BSR set to: 1
  4364                           ;ui.c: 189: _ui_encoder();
  4365  00583E  ECBC  F02D         	call	__ui_encoder	;wreg free
  4366                           
  4367                           ;ui.c: 192: }
  4368                           
  4369                           ;ui.c: 190: };ui.c: 191: break;
  4370  005842  0012               	return	
  4371  005844                     l1321:
  4372  005844  0100               	movlb	0	; () banked
  4373  005846  51E6               	movf	_userInterfaceStatus& (0+255),w,b
  4374                           
  4375                           ; Switch size 1, requested type "space"
  4376                           ; Number of cases is 6, Range of values is 0 to 5
  4377                           ; switch strategies available:
  4378                           ; Name         Instructions Cycles
  4379                           ; simple_byte           19    10 (average)
  4380                           ;	Chosen strategy is simple_byte
  4381  005848  0A00               	xorlw	0	; case 0
  4382  00584A  B4D8               	btfsc	status,2,c
  4383  00584C  D78E               	goto	l1322
  4384  00584E  0A01               	xorlw	1	; case 1
  4385  005850  B4D8               	btfsc	status,2,c
  4386  005852  D795               	goto	l1325
  4387  005854  0A03               	xorlw	3	; case 2
  4388  005856  B4D8               	btfsc	status,2,c
  4389  005858  D79C               	goto	l1326
  4390  00585A  0A01               	xorlw	1	; case 3
  4391  00585C  B4D8               	btfsc	status,2,c
  4392  00585E  D7A4               	goto	l1327
  4393  005860  0A07               	xorlw	7	; case 4
  4394  005862  B4D8               	btfsc	status,2,c
  4395  005864  D7B5               	goto	l1329
  4396  005866  0A01               	xorlw	1	; case 5
  4397  005868  A4D8               	btfss	status,2,c
  4398  00586A  0012               	return	
  4399  00586C  D7C5               	goto	l1330
  4400  00586E                     __end_of_ui_run:
  4401                           	opt stack 0
  4402                           tblptru	equ	0xFF8
  4403                           tblptrh	equ	0xFF7
  4404                           tblptrl	equ	0xFF6
  4405                           tablat	equ	0xFF5
  4406                           postinc0	equ	0xFEE
  4407                           wreg	equ	0xFE8
  4408                           postdec1	equ	0xFE5
  4409                           fsr1h	equ	0xFE2
  4410                           fsr1l	equ	0xFE1
  4411                           status	equ	0xFD8
  4412                           
  4413 ;; *************** function _system_encoder_enable *****************
  4414 ;; Defined at:
  4415 ;;		line 96 in file "os.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4433 ;;Total ram usage:        0 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_ui_run
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text2
  4443  009BFA                     __ptext2:
  4444                           	opt stack 0
  4445  009BFA                     _system_encoder_enable:
  4446                           	opt stack 29
  4447                           
  4448                           ;os.c: 99: INTCON3bits.INT2IF = 0;
  4449                           
  4450                           ;incstack = 0
  4451  009BFA  92F0               	bcf	intcon3,1,c	;volatile
  4452                           
  4453                           ;os.c: 100: INTCON3bits.INT3IF = 0;
  4454  009BFC  94F0               	bcf	intcon3,2,c	;volatile
  4455                           
  4456                           ;os.c: 103: os.encoderCount = 0;
  4457  009BFE  0E00               	movlw	0
  4458  009C00  0100               	movlb	0	; () banked
  4459  009C02  6FC5               	movwf	_os& (0+255),b	;volatile
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;os.c: 106: INTCON3bits.INT2IE = 1;
  4463  009C04  88F0               	bsf	intcon3,4,c	;volatile
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;os.c: 107: INTCON3bits.INT3IE = 1;
  4467  009C06  8AF0               	bsf	intcon3,5,c	;volatile
  4468                           
  4469                           ; BSR set to: 0
  4470  009C08  0012               	return		;funcret
  4471  009C0A                     __end_of_system_encoder_enable:
  4472                           	opt stack 0
  4473                           tblptru	equ	0xFF8
  4474                           tblptrh	equ	0xFF7
  4475                           tblptrl	equ	0xFF6
  4476                           tablat	equ	0xFF5
  4477                           intcon3	equ	0xFF0
  4478                           postinc0	equ	0xFEE
  4479                           wreg	equ	0xFE8
  4480                           postdec1	equ	0xFE5
  4481                           fsr1h	equ	0xFE2
  4482                           fsr1l	equ	0xFE1
  4483                           status	equ	0xFD8
  4484                           
  4485 ;; *************** function _i2c_display_send_init_sequence *****************
  4486 ;; Defined at:
  4487 ;;		line 207 in file "i2c.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;Total ram usage:        9 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    2
  4508 ;; This function calls:
  4509 ;;		__i2c_write
  4510 ;;		_i2c_set_frequency
  4511 ;; This function is called by:
  4512 ;;		_ui_run
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text3
  4517  00971E                     __ptext3:
  4518                           	opt stack 0
  4519  00971E                     _i2c_display_send_init_sequence:
  4520                           	opt stack 27
  4521                           
  4522                           ;i2c.c: 209: uint8_t init_sequence[9] = {;i2c.c: 210: 0x3A,;i2c.c: 212: 0b00011110,;i2c.
      +                          c: 213: 0x39,;i2c.c: 215: 0b00001100,;i2c.c: 216: 0x74,;i2c.c: 217: 0b1011100,;i2c.c: 21
      +                          8: 0x6d,;i2c.c: 219: 0x0c,;i2c.c: 220: 0x01;i2c.c: 221: };
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;incstack = 0
  4526  00971E  EE21  F0C7         	lfsr	2,i2c_display_send_init_sequence@F6810
  4527  009722  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4528  009726  0E08               	movlw	8
  4529  009728                     u12941:
  4530  009728  CFDB FFE3          	movff	plusw2,plusw1
  4531  00972C  06E8               	decf	wreg,f,c
  4532  00972E  E2FC               	bc	u12941
  4533                           
  4534                           ;i2c.c: 224: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4535  009730  0E00               	movlw	0
  4536  009732  ECD1  F04B         	call	_i2c_set_frequency
  4537                           
  4538                           ;i2c.c: 227: _i2c_write(0b01111000, &init_sequence[0], 9);
  4539  009736  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4540  009738  6E06               	movwf	__i2c_write@data,c
  4541  00973A  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4542  00973C  6E07               	movwf	__i2c_write@data+1,c
  4543  00973E  0E09               	movlw	9
  4544  009740  6E08               	movwf	__i2c_write@length,c
  4545  009742  0E78               	movlw	120
  4546  009744  EC65  F048         	call	__i2c_write
  4547  009748  0012               	return		;funcret
  4548  00974A                     __end_of_i2c_display_send_init_sequence:
  4549                           	opt stack 0
  4550                           tblptru	equ	0xFF8
  4551                           tblptrh	equ	0xFF7
  4552                           tblptrl	equ	0xFF6
  4553                           tablat	equ	0xFF5
  4554                           intcon3	equ	0xFF0
  4555                           postinc0	equ	0xFEE
  4556                           wreg	equ	0xFE8
  4557                           postdec1	equ	0xFE5
  4558                           plusw1	equ	0xFE3
  4559                           fsr1h	equ	0xFE2
  4560                           fsr1l	equ	0xFE1
  4561                           plusw2	equ	0xFDB
  4562                           status	equ	0xFD8
  4563                           
  4564 ;; *************** function _i2c_digipot_reset_on *****************
  4565 ;; Defined at:
  4566 ;;		line 310 in file "i2c.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;		None
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  1    wreg      void 
  4573 ;; Registers used:
  4574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4584 ;;Total ram usage:        2 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    2
  4587 ;; This function calls:
  4588 ;;		__i2c_write
  4589 ;;		_i2c_set_frequency
  4590 ;; This function is called by:
  4591 ;;		_ui_run
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text4
  4596  00999E                     __ptext4:
  4597                           	opt stack 0
  4598  00999E                     _i2c_digipot_reset_on:
  4599                           	opt stack 27
  4600                           
  4601                           ;i2c.c: 312: uint8_t data_array[2];;i2c.c: 313: data_array[0] = 0x10 | 0x00;
  4602                           
  4603                           ;incstack = 0
  4604  00999E  0E10               	movlw	16
  4605  0099A0  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4606                           
  4607                           ;i2c.c: 315: data_array[1] = 0x00;
  4608  0099A2  0E00               	movlw	0
  4609  0099A4  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4610                           
  4611                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4612  0099A6  0E02               	movlw	2
  4613  0099A8  ECD1  F04B         	call	_i2c_set_frequency
  4614                           
  4615                           ;i2c.c: 320: _i2c_write(0b01011100, &data_array[0], 2);
  4616  0099AC  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4617  0099AE  6E06               	movwf	__i2c_write@data,c
  4618  0099B0  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4619  0099B2  6E07               	movwf	__i2c_write@data+1,c
  4620  0099B4  0E02               	movlw	2
  4621  0099B6  6E08               	movwf	__i2c_write@length,c
  4622  0099B8  0E5C               	movlw	92
  4623  0099BA  EC65  F048         	call	__i2c_write
  4624  0099BE  0012               	return		;funcret
  4625  0099C0                     __end_of_i2c_digipot_reset_on:
  4626                           	opt stack 0
  4627                           tblptru	equ	0xFF8
  4628                           tblptrh	equ	0xFF7
  4629                           tblptrl	equ	0xFF6
  4630                           tablat	equ	0xFF5
  4631                           intcon3	equ	0xFF0
  4632                           postinc0	equ	0xFEE
  4633                           wreg	equ	0xFE8
  4634                           postdec1	equ	0xFE5
  4635                           plusw1	equ	0xFE3
  4636                           fsr1h	equ	0xFE2
  4637                           fsr1l	equ	0xFE1
  4638                           plusw2	equ	0xFDB
  4639                           status	equ	0xFD8
  4640                           
  4641 ;; *************** function _i2c_digipot_reset_off *****************
  4642 ;; Defined at:
  4643 ;;		line 323 in file "i2c.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;		None
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      void 
  4650 ;; Registers used:
  4651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4661 ;;Total ram usage:        2 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    2
  4664 ;; This function calls:
  4665 ;;		__i2c_write
  4666 ;;		_i2c_set_frequency
  4667 ;; This function is called by:
  4668 ;;		_ui_run
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text5
  4673  0099C0                     __ptext5:
  4674                           	opt stack 0
  4675  0099C0                     _i2c_digipot_reset_off:
  4676                           	opt stack 27
  4677                           
  4678                           ;i2c.c: 325: uint8_t data_array[2];;i2c.c: 326: data_array[0] = 0x10 | 0x00;
  4679                           
  4680                           ;incstack = 0
  4681  0099C0  0E10               	movlw	16
  4682  0099C2  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4683                           
  4684                           ;i2c.c: 327: data_array[1] = 0x80;
  4685  0099C4  0E80               	movlw	128
  4686  0099C6  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4687                           
  4688                           ;i2c.c: 330: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4689  0099C8  0E02               	movlw	2
  4690  0099CA  ECD1  F04B         	call	_i2c_set_frequency
  4691                           
  4692                           ;i2c.c: 332: _i2c_write(0b01011100, &data_array[0], 2);
  4693  0099CE  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4694  0099D0  6E06               	movwf	__i2c_write@data,c
  4695  0099D2  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4696  0099D4  6E07               	movwf	__i2c_write@data+1,c
  4697  0099D6  0E02               	movlw	2
  4698  0099D8  6E08               	movwf	__i2c_write@length,c
  4699  0099DA  0E5C               	movlw	92
  4700  0099DC  EC65  F048         	call	__i2c_write
  4701  0099E0  0012               	return		;funcret
  4702  0099E2                     __end_of_i2c_digipot_reset_off:
  4703                           	opt stack 0
  4704                           tblptru	equ	0xFF8
  4705                           tblptrh	equ	0xFF7
  4706                           tblptrl	equ	0xFF6
  4707                           tablat	equ	0xFF5
  4708                           intcon3	equ	0xFF0
  4709                           postinc0	equ	0xFEE
  4710                           wreg	equ	0xFE8
  4711                           postdec1	equ	0xFE5
  4712                           plusw1	equ	0xFE3
  4713                           fsr1h	equ	0xFE2
  4714                           fsr1l	equ	0xFE1
  4715                           plusw2	equ	0xFDB
  4716                           status	equ	0xFD8
  4717                           
  4718 ;; *************** function _i2c_digipot_backlight *****************
  4719 ;; Defined at:
  4720 ;;		line 335 in file "i2c.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  level           1    wreg     unsigned char 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  level           1   10[COMRAM] unsigned char 
  4725 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      void 
  4728 ;; Registers used:
  4729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4736 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;Total ram usage:        3 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; Hardware stack levels required when called:    2
  4742 ;; This function calls:
  4743 ;;		__i2c_write
  4744 ;;		_i2c_set_frequency
  4745 ;; This function is called by:
  4746 ;;		_ui_run
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text6
  4751  009874                     __ptext6:
  4752                           	opt stack 0
  4753  009874                     _i2c_digipot_backlight:
  4754                           	opt stack 27
  4755                           
  4756                           ;incstack = 0
  4757                           ;i2c_digipot_backlight@level stored from wreg
  4758  009874  6E0B               	movwf	i2c_digipot_backlight@level,c
  4759                           
  4760                           ;i2c.c: 337: uint8_t data_array[2];;i2c.c: 338: data_array[0] = 0x00 | 0x00;
  4761  009876  0E00               	movlw	0
  4762  009878  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4763                           
  4764                           ;i2c.c: 339: data_array[1] = level>>1;
  4765  00987A  90D8               	bcf	status,0,c
  4766  00987C  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4767  00987E  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4768                           
  4769                           ;i2c.c: 342: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4770  009880  0E02               	movlw	2
  4771  009882  ECD1  F04B         	call	_i2c_set_frequency
  4772                           
  4773                           ;i2c.c: 344: _i2c_write(0b01011100, &data_array[0], 2);
  4774  009886  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4775  009888  6E06               	movwf	__i2c_write@data,c
  4776  00988A  0E00               	movlw	high i2c_digipot_backlight@data_array
  4777  00988C  6E07               	movwf	__i2c_write@data+1,c
  4778  00988E  0E02               	movlw	2
  4779  009890  6E08               	movwf	__i2c_write@length,c
  4780  009892  0E5C               	movlw	92
  4781  009894  EC65  F048         	call	__i2c_write
  4782  009898  0012               	return		;funcret
  4783  00989A                     __end_of_i2c_digipot_backlight:
  4784                           	opt stack 0
  4785                           tblptru	equ	0xFF8
  4786                           tblptrh	equ	0xFF7
  4787                           tblptrl	equ	0xFF6
  4788                           tablat	equ	0xFF5
  4789                           intcon3	equ	0xFF0
  4790                           postinc0	equ	0xFEE
  4791                           wreg	equ	0xFE8
  4792                           postdec1	equ	0xFE5
  4793                           plusw1	equ	0xFE3
  4794                           fsr1h	equ	0xFE2
  4795                           fsr1l	equ	0xFE1
  4796                           plusw2	equ	0xFDB
  4797                           status	equ	0xFD8
  4798                           
  4799 ;; *************** function __ui_encoder *****************
  4800 ;; Defined at:
  4801 ;;		line 22 in file "ui.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;		None
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;		None
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      void 
  4808 ;; Registers used:
  4809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4819 ;;Total ram usage:        0 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    8
  4822 ;; This function calls:
  4823 ;;		_i2c_eeprom_writeByte
  4824 ;;		_reboot
  4825 ;;		_system_delay_ms
  4826 ;; This function is called by:
  4827 ;;		_ui_run
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text7
  4832  005B78                     __ptext7:
  4833                           	opt stack 0
  4834  005B78                     __ui_encoder:
  4835                           	opt stack 21
  4836                           
  4837                           ;ui.c: 24: switch(os.display_mode)
  4838                           
  4839                           ;incstack = 0
  4840  005B78  D061               	goto	l1292
  4841  005B7A                     
  4842                           ;ui.c: 27: if(os.buttonCount>0)
  4843  005B7A  0100               	movlb	0	; () banked
  4844  005B7C  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4845  005B7E  0A80               	xorlw	128
  4846  005B80  0F7F               	addlw	-129
  4847  005B82  A0D8               	btfss	status,0,c
  4848  005B84  0012               	return	
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;ui.c: 28: {;ui.c: 29: os.buttonCount = 0;
  4852  005B86  0E00               	movlw	0
  4853  005B88  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;ui.c: 30: };ui.c: 31: break;
  4857  005B8A  0012               	return	
  4858  005B8C                     
  4859                           ; BSR set to: 0
  4860                           ;ui.c: 34: if(os.buttonCount>0)
  4861                           
  4862                           ; BSR set to: 0
  4863  005B8C  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4864  005B8E  0A80               	xorlw	128
  4865  005B90  0F7F               	addlw	-129
  4866  005B92  A0D8               	btfss	status,0,c
  4867  005B94  0012               	return	
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;ui.c: 35: {;ui.c: 36: os.buttonCount = 0;
  4871  005B96  0E00               	movlw	0
  4872  005B98  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;ui.c: 37: };ui.c: 38: break;
  4876  005B9A  0012               	return	
  4877  005B9C                     
  4878                           ; BSR set to: 0
  4879                           ;ui.c: 41: if(os.buttonCount>0)
  4880                           
  4881                           ; BSR set to: 0
  4882  005B9C  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4883  005B9E  0A80               	xorlw	128
  4884  005BA0  0F7F               	addlw	-129
  4885  005BA2  A0D8               	btfss	status,0,c
  4886  005BA4  0012               	return	
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;ui.c: 42: {;ui.c: 43: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4890  005BA6  0E30               	movlw	48
  4891  005BA8  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  4892                           
  4893                           ;ui.c: 44: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4894  005BAA  0E30               	movlw	48
  4895  005BAC  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4896                           
  4897                           ;ui.c: 45: os.buttonCount = 0;
  4898  005BAE  0E00               	movlw	0
  4899  005BB0  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;ui.c: 46: };ui.c: 47: break;
  4903  005BB2  0012               	return	
  4904  005BB4                     
  4905                           ; BSR set to: 0
  4906                           ;ui.c: 50: if(os.buttonCount>0)
  4907                           
  4908                           ; BSR set to: 0
  4909  005BB4  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4910  005BB6  0A80               	xorlw	128
  4911  005BB8  0F7F               	addlw	-129
  4912  005BBA  A0D8               	btfss	status,0,c
  4913  005BBC  0012               	return	
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;ui.c: 51: {;ui.c: 52: os.buttonCount = 0;
  4917  005BBE  0E00               	movlw	0
  4918  005BC0  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;ui.c: 53: };ui.c: 54: break;
  4922  005BC2  0012               	return	
  4923  005BC4                     
  4924                           ; BSR set to: 0
  4925                           ;ui.c: 57: if(os.buttonCount>0)
  4926                           
  4927                           ; BSR set to: 0
  4928  005BC4  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4929  005BC6  0A80               	xorlw	128
  4930  005BC8  0F7F               	addlw	-129
  4931  005BCA  A0D8               	btfss	status,0,c
  4932  005BCC  0012               	return	
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;ui.c: 58: {;ui.c: 59: os.buttonCount = 0;
  4936  005BCE  0E00               	movlw	0
  4937  005BD0  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;ui.c: 60: };ui.c: 61: break;
  4941  005BD2  0012               	return	
  4942  005BD4                     
  4943                           ; BSR set to: 0
  4944                           ;ui.c: 64: if(os.buttonCount>0)
  4945                           
  4946                           ; BSR set to: 0
  4947  005BD4  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4948  005BD6  0A80               	xorlw	128
  4949  005BD8  0F7F               	addlw	-129
  4950  005BDA  A0D8               	btfss	status,0,c
  4951  005BDC  0012               	return	
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;ui.c: 65: {;ui.c: 66: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4955  005BDE  0E60               	movlw	96
  4956  005BE0  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  4957                           
  4958                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4959  005BE2  0E60               	movlw	96
  4960  005BE4  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4961                           
  4962                           ;ui.c: 68: os.buttonCount = 0;
  4963  005BE6  0E00               	movlw	0
  4964  005BE8  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;ui.c: 69: };ui.c: 70: break;
  4968  005BEA  0012               	return	
  4969  005BEC                     
  4970                           ; BSR set to: 0
  4971                           ;ui.c: 73: if(os.buttonCount>0)
  4972                           
  4973                           ; BSR set to: 0
  4974  005BEC  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4975  005BEE  0A80               	xorlw	128
  4976  005BF0  0F7F               	addlw	-129
  4977  005BF2  A0D8               	btfss	status,0,c
  4978  005BF4  0012               	return	
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;ui.c: 74: {;ui.c: 75: os.buttonCount = 0;
  4982  005BF6  0E00               	movlw	0
  4983  005BF8  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;ui.c: 76: };ui.c: 77: break;
  4987  005BFA  0012               	return	
  4988  005BFC                     
  4989                           ; BSR set to: 0
  4990                           ;ui.c: 80: if(os.buttonCount>0)
  4991                           
  4992                           ; BSR set to: 0
  4993  005BFC  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4994  005BFE  0A80               	xorlw	128
  4995  005C00  0F7F               	addlw	-129
  4996  005C02  A0D8               	btfss	status,0,c
  4997  005C04  0012               	return	
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;ui.c: 81: {;ui.c: 82: i2c_eeprom_writeByte(0x100, 0x78);
  5001  005C06  0E01               	movlw	1
  5002  005C08  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  5003  005C0A  0E00               	movlw	0
  5004  005C0C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  5005  005C0E  0E78               	movlw	120
  5006  005C10  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  5007  005C12  EC9B  F049         	call	_i2c_eeprom_writeByte	;wreg free
  5008                           
  5009                           ;ui.c: 83: system_delay_ms(10);
  5010  005C16  0E0A               	movlw	10
  5011  005C18  EC99  F04C         	call	_system_delay_ms
  5012                           
  5013                           ;ui.c: 84: reboot();
  5014  005C1C  EC85  F04D         	call	_reboot	;wreg free
  5015                           
  5016                           ;ui.c: 85: };ui.c: 86: break;
  5017  005C20  0012               	return	
  5018  005C22                     
  5019                           ;ui.c: 89: if(os.buttonCount>0)
  5020  005C22  0100               	movlb	0	; () banked
  5021  005C24  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  5022  005C26  0A80               	xorlw	128
  5023  005C28  0F7F               	addlw	-129
  5024  005C2A  A0D8               	btfss	status,0,c
  5025  005C2C  0012               	return	
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;ui.c: 90: {;ui.c: 91: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5029  005C2E  0E10               	movlw	16
  5030  005C30  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  5031                           
  5032                           ;ui.c: 92: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  5033  005C32  0E10               	movlw	16
  5034  005C34  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  5035                           
  5036                           ;ui.c: 93: os.buttonCount = 0;
  5037  005C36  0E00               	movlw	0
  5038  005C38  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;ui.c: 96: }
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;ui.c: 94: };ui.c: 95: break;
  5045  005C3A  0012               	return	
  5046  005C3C                     l1292:
  5047                           
  5048                           ; BSR set to: 0
  5049  005C3C  0100               	movlb	0	; () banked
  5050  005C3E  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  5051                           
  5052                           ; Switch size 1, requested type "space"
  5053                           ; Number of cases is 9, Range of values is 0 to 144
  5054                           ; switch strategies available:
  5055                           ; Name         Instructions Cycles
  5056                           ; simple_byte           28    15 (average)
  5057                           ;	Chosen strategy is simple_byte
  5058  005C40  0A00               	xorlw	0	; case 0
  5059  005C42  B4D8               	btfsc	status,2,c
  5060  005C44  D79A               	goto	l1293
  5061  005C46  0A10               	xorlw	16	; case 16
  5062  005C48  B4D8               	btfsc	status,2,c
  5063  005C4A  D7A0               	goto	l1296
  5064  005C4C  0A30               	xorlw	48	; case 32
  5065  005C4E  B4D8               	btfsc	status,2,c
  5066  005C50  D7A5               	goto	l1298
  5067  005C52  0A10               	xorlw	16	; case 48
  5068  005C54  B4D8               	btfsc	status,2,c
  5069  005C56  D7AE               	goto	l1300
  5070  005C58  0A70               	xorlw	112	; case 64
  5071  005C5A  B4D8               	btfsc	status,2,c
  5072  005C5C  D7BB               	goto	l1304
  5073  005C5E  0A10               	xorlw	16	; case 80
  5074  005C60  B4D8               	btfsc	status,2,c
  5075  005C62  D7B0               	goto	l1302
  5076  005C64  0A30               	xorlw	48	; case 96
  5077  005C66  B4D8               	btfsc	status,2,c
  5078  005C68  D7C1               	goto	l1306
  5079  005C6A  0A10               	xorlw	16	; case 112
  5080  005C6C  B4D8               	btfsc	status,2,c
  5081  005C6E  D7C6               	goto	l1308
  5082  005C70  0AE0               	xorlw	224	; case 144
  5083  005C72  A4D8               	btfss	status,2,c
  5084  005C74  0012               	return	
  5085  005C76  D7D5               	goto	l1310
  5086  005C78                     __end_of__ui_encoder:
  5087                           	opt stack 0
  5088                           tblptru	equ	0xFF8
  5089                           tblptrh	equ	0xFF7
  5090                           tblptrl	equ	0xFF6
  5091                           tablat	equ	0xFF5
  5092                           intcon3	equ	0xFF0
  5093                           postinc0	equ	0xFEE
  5094                           wreg	equ	0xFE8
  5095                           postdec1	equ	0xFE5
  5096                           plusw1	equ	0xFE3
  5097                           fsr1h	equ	0xFE2
  5098                           fsr1l	equ	0xFE1
  5099                           plusw2	equ	0xFDB
  5100                           status	equ	0xFD8
  5101                           
  5102 ;; *************** function _timer_pseudo_isr *****************
  5103 ;; Defined at:
  5104 ;;		line 19 in file "os.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;		None
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;		None
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      void 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5122 ;;Total ram usage:        0 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_main
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text8
  5132  0094CE                     __ptext8:
  5133                           	opt stack 0
  5134  0094CE                     _timer_pseudo_isr:
  5135                           	opt stack 30
  5136                           
  5137                           ;os.c: 22: if(INTCONbits.T0IF==0)
  5138                           
  5139                           ;incstack = 0
  5140  0094CE  A4F2               	btfss	intcon,2,c	;volatile
  5141  0094D0  0012               	return	
  5142                           
  5143                           ;os.c: 25: };os.c: 29: TMR0H = 0xD1;
  5144                           
  5145                           ;os.c: 23: {;os.c: 24: return;
  5146  0094D2  0ED1               	movlw	209
  5147  0094D4  6ED7               	movwf	4055,c	;volatile
  5148                           
  5149                           ;os.c: 30: TMR0L = 0x20;
  5150  0094D6  0E20               	movlw	32
  5151  0094D8  6ED6               	movwf	4054,c	;volatile
  5152                           
  5153                           ;os.c: 31: ++os.timeSlot;
  5154  0094DA  0100               	movlb	0	; () banked
  5155  0094DC  2BC7               	incf	(_os+2)& (0+255),f,b	;volatile
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;os.c: 33: os.done = 0;
  5159  0094DE  0E00               	movlw	0
  5160  0094E0  6FC8               	movwf	(_os+3)& (0+255),b	;volatile
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;os.c: 34: INTCONbits.T0IF = 0;
  5164  0094E2  94F2               	bcf	intcon,2,c	;volatile
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;os.c: 37: if(INTCON3bits.INT1IF)
  5168  0094E4  A0F0               	btfss	intcon3,0,c	;volatile
  5169  0094E6  D002               	goto	l1083
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;os.c: 38: {;os.c: 39: ++os.buttonCount;
  5173  0094E8  2BC6               	incf	(_os+1)& (0+255),f,b	;volatile
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;os.c: 40: INTCON3bits.INT1IF = 0;
  5177  0094EA  90F0               	bcf	intcon3,0,c	;volatile
  5178  0094EC                     l1083:
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;os.c: 41: };os.c: 44: if(INTCON3bits.INT2IF)
  5182                           
  5183                           ; BSR set to: 0
  5184  0094EC  A2F0               	btfss	intcon3,1,c	;volatile
  5185  0094EE  D003               	goto	l1084
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;os.c: 45: {;os.c: 46: if(!PORTBbits.RB6)
  5189  0094F0  AC81               	btfss	3969,6,c	;volatile
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;os.c: 47: {;os.c: 48: --os.encoderCount;
  5193  0094F2  07C5               	decf	_os& (0+255),f,b	;volatile
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;os.c: 49: };os.c: 50: INTCON3bits.INT2IF = 0;
  5197                           
  5198                           ; BSR set to: 0
  5199  0094F4  92F0               	bcf	intcon3,1,c	;volatile
  5200  0094F6                     l1084:
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;os.c: 51: };os.c: 52: if(INTCON3bits.INT3IF)
  5204                           
  5205                           ; BSR set to: 0
  5206  0094F6  A4F0               	btfss	intcon3,2,c	;volatile
  5207  0094F8  0012               	return	
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;os.c: 53: {;os.c: 54: if(!PORTBbits.RB7)
  5211  0094FA  AE81               	btfss	3969,7,c	;volatile
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;os.c: 55: {;os.c: 56: ++os.encoderCount;
  5215  0094FC  2BC5               	incf	_os& (0+255),f,b	;volatile
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;os.c: 57: };os.c: 58: INTCON3bits.INT3IF = 0;
  5219                           
  5220                           ; BSR set to: 0
  5221  0094FE  94F0               	bcf	intcon3,2,c	;volatile
  5222  009500  0012               	return	
  5223  009502                     __end_of_timer_pseudo_isr:
  5224                           	opt stack 0
  5225                           tblptru	equ	0xFF8
  5226                           tblptrh	equ	0xFF7
  5227                           tblptrl	equ	0xFF6
  5228                           tablat	equ	0xFF5
  5229                           intcon	equ	0xFF2
  5230                           intcon3	equ	0xFF0
  5231                           postinc0	equ	0xFEE
  5232                           wreg	equ	0xFE8
  5233                           postdec1	equ	0xFE5
  5234                           plusw1	equ	0xFE3
  5235                           fsr1h	equ	0xFE2
  5236                           fsr1l	equ	0xFE1
  5237                           plusw2	equ	0xFDB
  5238                           status	equ	0xFD8
  5239                           
  5240 ;; *************** function _system_minimal_init_undo *****************
  5241 ;; Defined at:
  5242 ;;		line 157 in file "os.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;		None
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5260 ;;Total ram usage:        0 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    1
  5263 ;; This function calls:
  5264 ;;		_i2c_reset
  5265 ;; This function is called by:
  5266 ;;		_main
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text9
  5271  009C0A                     __ptext9:
  5272                           	opt stack 0
  5273  009C0A                     _system_minimal_init_undo:
  5274                           	opt stack 29
  5275                           
  5276                           ;os.c: 160: i2c_reset();
  5277                           
  5278                           ;incstack = 0
  5279  009C0A  EC1D  F04E         	call	_i2c_reset	;wreg free
  5280                           
  5281                           ;os.c: 163: TRISAbits.TRISA0 = 1;
  5282  009C0E  8092               	bsf	3986,0,c	;volatile
  5283                           
  5284                           ;os.c: 164: ANCON0bits.PCFG0 = 0;
  5285  009C10  010F               	movlb	15	; () banked
  5286  009C12  9148               	bcf	72,0,b	;volatile
  5287                           
  5288                           ; BSR set to: 15
  5289                           ;os.c: 167: LATCbits.LC2 = 0;
  5290  009C14  948B               	bcf	3979,2,c	;volatile
  5291                           
  5292                           ; BSR set to: 15
  5293                           ;os.c: 168: TRISCbits.TRISC2 = 1;
  5294  009C16  8494               	bsf	3988,2,c	;volatile
  5295                           
  5296                           ; BSR set to: 15
  5297  009C18  0012               	return		;funcret
  5298  009C1A                     __end_of_system_minimal_init_undo:
  5299                           	opt stack 0
  5300                           tblptru	equ	0xFF8
  5301                           tblptrh	equ	0xFF7
  5302                           tblptrl	equ	0xFF6
  5303                           tablat	equ	0xFF5
  5304                           intcon	equ	0xFF2
  5305                           intcon3	equ	0xFF0
  5306                           postinc0	equ	0xFEE
  5307                           wreg	equ	0xFE8
  5308                           postdec1	equ	0xFE5
  5309                           plusw1	equ	0xFE3
  5310                           fsr1h	equ	0xFE2
  5311                           fsr1l	equ	0xFE1
  5312                           plusw2	equ	0xFDB
  5313                           status	equ	0xFD8
  5314                           
  5315 ;; *************** function _i2c_reset *****************
  5316 ;; Defined at:
  5317 ;;		line 110 in file "i2c.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;		None
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;		None
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      void 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5335 ;;Total ram usage:        0 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_system_minimal_init_undo
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text10
  5345  009C3A                     __ptext10:
  5346                           	opt stack 0
  5347  009C3A                     _i2c_reset:
  5348                           	opt stack 29
  5349                           
  5350                           ;i2c.c: 112: SSP1STATbits.SMP = 0;
  5351                           
  5352                           ; BSR set to: 15
  5353                           ;incstack = 0
  5354  009C3A  9EC7               	bcf	4039,7,c	;volatile
  5355                           
  5356                           ;i2c.c: 113: SSP1STATbits.CKE = 0;
  5357  009C3C  9CC7               	bcf	4039,6,c	;volatile
  5358                           
  5359                           ;i2c.c: 114: SSP1CON1 = 0x00;
  5360  009C3E  0E00               	movlw	0
  5361  009C40  6EC6               	movwf	4038,c	;volatile
  5362                           
  5363                           ;i2c.c: 115: SSP1ADD = 0x00;
  5364  009C42  0E00               	movlw	0
  5365  009C44  6EC8               	movwf	4040,c	;volatile
  5366  009C46  0012               	return		;funcret
  5367  009C48                     __end_of_i2c_reset:
  5368                           	opt stack 0
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           intcon	equ	0xFF2
  5374                           intcon3	equ	0xFF0
  5375                           postinc0	equ	0xFEE
  5376                           wreg	equ	0xFE8
  5377                           postdec1	equ	0xFE5
  5378                           plusw1	equ	0xFE3
  5379                           fsr1h	equ	0xFE2
  5380                           fsr1l	equ	0xFE1
  5381                           plusw2	equ	0xFDB
  5382                           status	equ	0xFD8
  5383                           
  5384 ;; *************** function _system_minimal_init *****************
  5385 ;; Defined at:
  5386 ;;		line 139 in file "os.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;		None
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2, status,0, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;Total ram usage:        0 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:    2
  5407 ;; This function calls:
  5408 ;;		_i2c_init
  5409 ;;		_system_delay_ms
  5410 ;; This function is called by:
  5411 ;;		_main
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           	psect	text11
  5416  009B6C                     __ptext11:
  5417                           	opt stack 0
  5418  009B6C                     _system_minimal_init:
  5419                           	opt stack 28
  5420                           
  5421                           ;os.c: 142: TRISCbits.TRISC2 = 0;
  5422                           
  5423                           ;incstack = 0
  5424  009B6C  9494               	bcf	3988,2,c	;volatile
  5425                           
  5426                           ;os.c: 143: LATCbits.LC2 = 1;
  5427  009B6E  848B               	bsf	3979,2,c	;volatile
  5428                           
  5429                           ;os.c: 146: TRISAbits.TRISA0 = 1;
  5430  009B70  8092               	bsf	3986,0,c	;volatile
  5431                           
  5432                           ;os.c: 147: ANCON0bits.PCFG0 = 1;
  5433  009B72  010F               	movlb	15	; () banked
  5434  009B74  8148               	bsf	72,0,b	;volatile
  5435                           
  5436                           ; BSR set to: 15
  5437                           ;os.c: 150: i2c_init();
  5438  009B76  EC2B  F04E         	call	_i2c_init	;wreg free
  5439                           
  5440                           ;os.c: 153: system_delay_ms(50);
  5441  009B7A  0E32               	movlw	50
  5442  009B7C  EC99  F04C         	call	_system_delay_ms
  5443  009B80  0012               	return		;funcret
  5444  009B82                     __end_of_system_minimal_init:
  5445                           	opt stack 0
  5446                           tblptru	equ	0xFF8
  5447                           tblptrh	equ	0xFF7
  5448                           tblptrl	equ	0xFF6
  5449                           tablat	equ	0xFF5
  5450                           intcon	equ	0xFF2
  5451                           intcon3	equ	0xFF0
  5452                           postinc0	equ	0xFEE
  5453                           wreg	equ	0xFE8
  5454                           postdec1	equ	0xFE5
  5455                           plusw1	equ	0xFE3
  5456                           fsr1h	equ	0xFE2
  5457                           fsr1l	equ	0xFE1
  5458                           plusw2	equ	0xFDB
  5459                           status	equ	0xFD8
  5460                           
  5461 ;; *************** function _i2c_init *****************
  5462 ;; Defined at:
  5463 ;;		line 102 in file "i2c.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;		None
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      void 
  5470 ;; Registers used:
  5471 ;;		wreg, status,2, status,0, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5481 ;;Total ram usage:        0 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    1
  5484 ;; This function calls:
  5485 ;;		__i2c_open_1
  5486 ;;		_i2c_set_frequency
  5487 ;; This function is called by:
  5488 ;;		_system_minimal_init
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text12
  5493  009C56                     __ptext12:
  5494                           	opt stack 0
  5495  009C56                     _i2c_init:
  5496                           	opt stack 28
  5497                           
  5498                           ;i2c.c: 105: _i2c_open_1();
  5499                           
  5500                           ;incstack = 0
  5501  009C56  EC92  F04D         	call	__i2c_open_1	;wreg free
  5502                           
  5503                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5504  009C5A  0E00               	movlw	0
  5505  009C5C  ECD1  F04B         	call	_i2c_set_frequency
  5506  009C60  0012               	return		;funcret
  5507  009C62                     __end_of_i2c_init:
  5508                           	opt stack 0
  5509                           tblptru	equ	0xFF8
  5510                           tblptrh	equ	0xFF7
  5511                           tblptrl	equ	0xFF6
  5512                           tablat	equ	0xFF5
  5513                           intcon	equ	0xFF2
  5514                           intcon3	equ	0xFF0
  5515                           postinc0	equ	0xFEE
  5516                           wreg	equ	0xFE8
  5517                           postdec1	equ	0xFE5
  5518                           plusw1	equ	0xFE3
  5519                           fsr1h	equ	0xFE2
  5520                           fsr1l	equ	0xFE1
  5521                           plusw2	equ	0xFDB
  5522                           status	equ	0xFD8
  5523                           
  5524 ;; *************** function __i2c_open_1 *****************
  5525 ;; Defined at:
  5526 ;;		line 36 in file "i2c.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;		None
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;		None
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      void 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5544 ;;Total ram usage:        0 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; This function calls:
  5547 ;;		Nothing
  5548 ;; This function is called by:
  5549 ;;		_i2c_init
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text13
  5554  009B24                     __ptext13:
  5555                           	opt stack 0
  5556  009B24                     __i2c_open_1:
  5557                           	opt stack 28
  5558                           
  5559                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  5560                           
  5561                           ;incstack = 0
  5562  009B24  9EC7               	bcf	4039,7,c	;volatile
  5563                           
  5564                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  5565  009B26  9CC7               	bcf	4039,6,c	;volatile
  5566                           
  5567                           ;i2c.c: 40: SSP1ADD = 29;
  5568  009B28  0E1D               	movlw	29
  5569  009B2A  6EC8               	movwf	4040,c	;volatile
  5570                           
  5571                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  5572  009B2C  9EC6               	bcf	4038,7,c	;volatile
  5573                           
  5574                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  5575  009B2E  9CC6               	bcf	4038,6,c	;volatile
  5576                           
  5577                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  5578  009B30  50C6               	movf	4038,w,c	;volatile
  5579  009B32  0BF0               	andlw	-16
  5580  009B34  0908               	iorlw	8
  5581  009B36  6EC6               	movwf	4038,c	;volatile
  5582                           
  5583                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  5584  009B38  8AC6               	bsf	4038,5,c	;volatile
  5585  009B3A  0012               	return		;funcret
  5586  009B3C                     __end_of__i2c_open_1:
  5587                           	opt stack 0
  5588                           tblptru	equ	0xFF8
  5589                           tblptrh	equ	0xFF7
  5590                           tblptrl	equ	0xFF6
  5591                           tablat	equ	0xFF5
  5592                           intcon	equ	0xFF2
  5593                           intcon3	equ	0xFF0
  5594                           postinc0	equ	0xFEE
  5595                           wreg	equ	0xFE8
  5596                           postdec1	equ	0xFE5
  5597                           plusw1	equ	0xFE3
  5598                           fsr1h	equ	0xFE2
  5599                           fsr1l	equ	0xFE1
  5600                           plusw2	equ	0xFDB
  5601                           status	equ	0xFD8
  5602                           
  5603 ;; *************** function _system_full_init *****************
  5604 ;; Defined at:
  5605 ;;		line 172 in file "os.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5623 ;;Total ram usage:        0 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    7
  5626 ;; This function calls:
  5627 ;;		__system_encoder_init
  5628 ;;		__system_timer0_init
  5629 ;;		_fat_init
  5630 ;;		_flash_init
  5631 ;;		_ui_init
  5632 ;; This function is called by:
  5633 ;;		_main
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text14
  5638  008A28                     __ptext14:
  5639                           	opt stack 0
  5640  008A28                     _system_full_init:
  5641                           	opt stack 23
  5642                           
  5643                           ;os.c: 179: TRISDbits.TRISD0 = 0;
  5644                           
  5645                           ;incstack = 0
  5646  008A28  9095               	bcf	3989,0,c	;volatile
  5647                           
  5648                           ;os.c: 180: LATDbits.LD0 = 0;
  5649  008A2A  908C               	bcf	3980,0,c	;volatile
  5650                           
  5651                           ;os.c: 183: TRISDbits.TRISD3 = 0;
  5652  008A2C  9695               	bcf	3989,3,c	;volatile
  5653                           
  5654                           ;os.c: 184: LATDbits.LD3 = 0;
  5655  008A2E  968C               	bcf	3980,3,c	;volatile
  5656                           
  5657                           ;os.c: 187: TRISDbits.TRISD1 = 0;
  5658  008A30  9295               	bcf	3989,1,c	;volatile
  5659                           
  5660                           ;os.c: 188: LATDbits.LD1 = 0;
  5661  008A32  928C               	bcf	3980,1,c	;volatile
  5662                           
  5663                           ;os.c: 191: TRISBbits.TRISB1 = 0;
  5664  008A34  9293               	bcf	3987,1,c	;volatile
  5665                           
  5666                           ;os.c: 192: LATBbits.LB1 = 0;
  5667  008A36  928A               	bcf	3978,1,c	;volatile
  5668                           
  5669                           ;os.c: 195: TRISBbits.TRISB2 = 0;
  5670  008A38  9493               	bcf	3987,2,c	;volatile
  5671                           
  5672                           ;os.c: 196: LATBbits.LB2 = 0;
  5673  008A3A  948A               	bcf	3978,2,c	;volatile
  5674                           
  5675                           ;os.c: 197: TRISBbits.TRISB3 = 0;
  5676  008A3C  9693               	bcf	3987,3,c	;volatile
  5677                           
  5678                           ;os.c: 198: LATBbits.LB3 = 0;
  5679  008A3E  968A               	bcf	3978,3,c	;volatile
  5680                           
  5681                           ;os.c: 201: TRISDbits.TRISD6 = 1;
  5682  008A40  8C95               	bsf	3989,6,c	;volatile
  5683                           
  5684                           ;os.c: 202: TRISDbits.TRISD4 = 0;
  5685  008A42  9895               	bcf	3989,4,c	;volatile
  5686                           
  5687                           ;os.c: 203: TRISDbits.TRISD5 = 0;
  5688  008A44  9A95               	bcf	3989,5,c	;volatile
  5689                           
  5690                           ;os.c: 204: TRISDbits.TRISD7 = 0;
  5691  008A46  9E95               	bcf	3989,7,c	;volatile
  5692                           
  5693                           ;os.c: 205: LATDbits.LD7 = 1;
  5694  008A48  8E8C               	bsf	3980,7,c	;volatile
  5695                           
  5696                           ;os.c: 206: TRISDbits.TRISD2 = 1;
  5697  008A4A  8495               	bsf	3989,2,c	;volatile
  5698                           
  5699                           ;os.c: 209: TRISCbits.TRISC7 = 0;
  5700  008A4C  9E94               	bcf	3988,7,c	;volatile
  5701                           
  5702                           ;os.c: 210: LATCbits.LC7 = 0;
  5703  008A4E  9E8B               	bcf	3979,7,c	;volatile
  5704                           
  5705                           ;os.c: 213: TRISEbits.TRISE2 = 0;
  5706  008A50  9496               	bcf	3990,2,c	;volatile
  5707                           
  5708                           ;os.c: 214: LATEbits.LE2 = 1;
  5709  008A52  848D               	bsf	3981,2,c	;volatile
  5710                           
  5711                           ;os.c: 215: TRISEbits.TRISE1 = 0;
  5712  008A54  9296               	bcf	3990,1,c	;volatile
  5713                           
  5714                           ;os.c: 216: LATEbits.LE1 = 1;
  5715  008A56  828D               	bsf	3981,1,c	;volatile
  5716                           
  5717                           ;os.c: 217: TRISEbits.TRISE0 = 0;
  5718  008A58  9096               	bcf	3990,0,c	;volatile
  5719                           
  5720                           ;os.c: 218: LATEbits.LE0 = 1;
  5721  008A5A  808D               	bsf	3981,0,c	;volatile
  5722                           
  5723                           ;os.c: 219: TRISAbits.TRISA5 = 0;
  5724  008A5C  9A92               	bcf	3986,5,c	;volatile
  5725                           
  5726                           ;os.c: 220: LATAbits.LA5 = 1;
  5727  008A5E  8A89               	bsf	3977,5,c	;volatile
  5728                           
  5729                           ;os.c: 223: TRISBbits.TRISB7 = 1;
  5730  008A60  8E93               	bsf	3987,7,c	;volatile
  5731                           
  5732                           ;os.c: 224: TRISBbits.TRISB6 = 1;
  5733  008A62  8C93               	bsf	3987,6,c	;volatile
  5734                           
  5735                           ;os.c: 227: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5736  008A64  0E10               	movlw	16
  5737  008A66  0100               	movlb	0	; () banked
  5738  008A68  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  5739                           
  5740                           ;os.c: 228: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5741  008A6A  0E00               	movlw	0
  5742  008A6C  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;os.c: 231: flash_init();
  5746  008A6E  EC6B  F04D         	call	_flash_init	;wreg free
  5747                           
  5748                           ;os.c: 234: fat_init();
  5749  008A72  EC0D  F04E         	call	_fat_init	;wreg free
  5750                           
  5751                           ;os.c: 237: _system_encoder_init();
  5752  008A76  ECF7  F049         	call	__system_encoder_init	;wreg free
  5753                           
  5754                           ;os.c: 240: ui_init();
  5755  008A7A  ECD7  F04D         	call	_ui_init	;wreg free
  5756                           
  5757                           ;os.c: 243: _system_timer0_init();
  5758  008A7E  EC02  F04D         	call	__system_timer0_init	;wreg free
  5759  008A82  0012               	return		;funcret
  5760  008A84                     __end_of_system_full_init:
  5761                           	opt stack 0
  5762                           tblptru	equ	0xFF8
  5763                           tblptrh	equ	0xFF7
  5764                           tblptrl	equ	0xFF6
  5765                           tablat	equ	0xFF5
  5766                           intcon	equ	0xFF2
  5767                           intcon3	equ	0xFF0
  5768                           postinc0	equ	0xFEE
  5769                           wreg	equ	0xFE8
  5770                           postdec1	equ	0xFE5
  5771                           plusw1	equ	0xFE3
  5772                           fsr1h	equ	0xFE2
  5773                           fsr1l	equ	0xFE1
  5774                           plusw2	equ	0xFDB
  5775                           status	equ	0xFD8
  5776                           
  5777 ;; *************** function _ui_init *****************
  5778 ;; Defined at:
  5779 ;;		line 110 in file "ui.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;		None
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5797 ;;Total ram usage:        0 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_system_full_init
  5803 ;;		_ui_run
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text15
  5808  009BAE                     __ptext15:
  5809                           	opt stack 0
  5810  009BAE                     _ui_init:
  5811                           	opt stack 29
  5812                           
  5813                           ;ui.c: 112: system_ui_inactive_count = 0;
  5814                           
  5815                           ;incstack = 0
  5816  009BAE  0E00               	movlw	0
  5817  009BB0  0101               	movlb	1	; () banked
  5818  009BB2  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5819  009BB4  0E00               	movlw	0
  5820  009BB6  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  5821                           
  5822                           ; BSR set to: 1
  5823                           ;ui.c: 114: LATCbits.LC2 = 1;
  5824  009BB8  848B               	bsf	3979,2,c	;volatile
  5825                           
  5826                           ;ui.c: 115: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5827  009BBA  0E01               	movlw	1
  5828  009BBC  0100               	movlb	0	; () banked
  5829  009BBE  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  5830                           
  5831                           ; BSR set to: 0
  5832  009BC0  0012               	return		;funcret
  5833  009BC2                     __end_of_ui_init:
  5834                           	opt stack 0
  5835                           tblptru	equ	0xFF8
  5836                           tblptrh	equ	0xFF7
  5837                           tblptrl	equ	0xFF6
  5838                           tablat	equ	0xFF5
  5839                           intcon	equ	0xFF2
  5840                           intcon3	equ	0xFF0
  5841                           postinc0	equ	0xFEE
  5842                           wreg	equ	0xFE8
  5843                           postdec1	equ	0xFE5
  5844                           plusw1	equ	0xFE3
  5845                           fsr1h	equ	0xFE2
  5846                           fsr1l	equ	0xFE1
  5847                           plusw2	equ	0xFDB
  5848                           status	equ	0xFD8
  5849                           
  5850 ;; *************** function _flash_init *****************
  5851 ;; Defined at:
  5852 ;;		line 360 in file "flash.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;		None
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;		None
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  1    wreg      void 
  5859 ;; Registers used:
  5860 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;Total ram usage:        0 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; Hardware stack levels required when called:    4
  5873 ;; This function calls:
  5874 ;;		__flash_set_page_size
  5875 ;;		_spi_init
  5876 ;;		_spi_set_configuration
  5877 ;; This function is called by:
  5878 ;;		_system_full_init
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text16
  5883  009AD6                     __ptext16:
  5884                           	opt stack 0
  5885  009AD6                     _flash_init:
  5886                           	opt stack 25
  5887                           
  5888                           ;flash.c: 363: spi_init(SPI_CONFIGURATION_INTERNAL);
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;incstack = 0
  5892  009AD6  0E00               	movlw	0
  5893  009AD8  ECBB  F049         	call	_spi_init
  5894                           
  5895                           ;flash.c: 364: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5896  009ADC  0E00               	movlw	0
  5897  009ADE  ECAB  F02A         	call	_spi_set_configuration
  5898                           
  5899                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5900  009AE2  0E00               	movlw	0
  5901  009AE4  EC1C  F041         	call	__flash_set_page_size
  5902                           
  5903                           ;flash.c: 370: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5904  009AE8  0E01               	movlw	1
  5905  009AEA  ECAB  F02A         	call	_spi_set_configuration
  5906  009AEE  0012               	return		;funcret
  5907  009AF0                     __end_of_flash_init:
  5908                           	opt stack 0
  5909                           tblptru	equ	0xFF8
  5910                           tblptrh	equ	0xFF7
  5911                           tblptrl	equ	0xFF6
  5912                           tablat	equ	0xFF5
  5913                           intcon	equ	0xFF2
  5914                           intcon3	equ	0xFF0
  5915                           postinc0	equ	0xFEE
  5916                           wreg	equ	0xFE8
  5917                           postdec1	equ	0xFE5
  5918                           plusw1	equ	0xFE3
  5919                           fsr1h	equ	0xFE2
  5920                           fsr1l	equ	0xFE1
  5921                           plusw2	equ	0xFDB
  5922                           status	equ	0xFD8
  5923                           
  5924 ;; *************** function _spi_init *****************
  5925 ;; Defined at:
  5926 ;;		line 122 in file "spi.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  configuratio    1    wreg     enum E6749
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  configuratio    1    3[COMRAM] enum E6749
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  1    wreg      void 
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5943 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5944 ;;Total ram usage:        1 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    1
  5947 ;; This function calls:
  5948 ;;		__spi_init
  5949 ;; This function is called by:
  5950 ;;		_flash_init
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text17
  5955  009376                     __ptext17:
  5956                           	opt stack 0
  5957  009376                     _spi_init:
  5958                           	opt stack 27
  5959                           
  5960                           ;incstack = 0
  5961                           ;spi_init@configuration stored from wreg
  5962  009376  6E04               	movwf	spi_init@configuration,c
  5963                           
  5964                           ;spi.c: 124: switch(configuration)
  5965  009378  D012               	goto	l3044
  5966  00937A                     
  5967                           ;spi.c: 127: _spi_init(config_internal);
  5968  00937A  C169  F001         	movff	_config_internal,__spi_init@details
  5969  00937E  C16A  F002         	movff	_config_internal+1,__spi_init@details+1
  5970  009382  C16B  F003         	movff	_config_internal+2,__spi_init@details+2
  5971  009386  EC14  F04A         	call	__spi_init	;wreg free
  5972                           
  5973                           ;spi.c: 128: break;
  5974  00938A  D010               	goto	l3046
  5975  00938C                     
  5976                           ;spi.c: 131: _spi_init(config_external);
  5977  00938C  C166  F001         	movff	_config_external,__spi_init@details
  5978  009390  C167  F002         	movff	_config_external+1,__spi_init@details+1
  5979  009394  C168  F003         	movff	_config_external+2,__spi_init@details+2
  5980  009398  EC14  F04A         	call	__spi_init	;wreg free
  5981                           
  5982                           ;spi.c: 133: }
  5983                           
  5984                           ;spi.c: 132: break;
  5985  00939C  D007               	goto	l3046
  5986  00939E                     l3044:
  5987  00939E  5004               	movf	spi_init@configuration,w,c
  5988                           
  5989                           ; Switch size 1, requested type "space"
  5990                           ; Number of cases is 2, Range of values is 0 to 1
  5991                           ; switch strategies available:
  5992                           ; Name         Instructions Cycles
  5993                           ; simple_byte            7     4 (average)
  5994                           ;	Chosen strategy is simple_byte
  5995  0093A0  0A00               	xorlw	0	; case 0
  5996  0093A2  B4D8               	btfsc	status,2,c
  5997  0093A4  D7EA               	goto	l3045
  5998  0093A6  0A01               	xorlw	1	; case 1
  5999  0093A8  B4D8               	btfsc	status,2,c
  6000  0093AA  D7F0               	goto	l3047
  6001  0093AC                     l3046:
  6002                           
  6003                           ;spi.c: 135: active_configuration = configuration;
  6004  0093AC  C004  F18A         	movff	spi_init@configuration,_active_configuration
  6005  0093B0  0012               	return		;funcret
  6006  0093B2                     __end_of_spi_init:
  6007                           	opt stack 0
  6008                           tblptru	equ	0xFF8
  6009                           tblptrh	equ	0xFF7
  6010                           tblptrl	equ	0xFF6
  6011                           tablat	equ	0xFF5
  6012                           intcon	equ	0xFF2
  6013                           intcon3	equ	0xFF0
  6014                           postinc0	equ	0xFEE
  6015                           wreg	equ	0xFE8
  6016                           postdec1	equ	0xFE5
  6017                           plusw1	equ	0xFE3
  6018                           fsr1h	equ	0xFE2
  6019                           fsr1l	equ	0xFE1
  6020                           plusw2	equ	0xFDB
  6021                           status	equ	0xFD8
  6022                           
  6023 ;; *************** function __spi_init *****************
  6024 ;; Defined at:
  6025 ;;		line 25 in file "spi.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  details         3    0[COMRAM] struct .
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  1    wreg      void 
  6032 ;; Registers used:
  6033 ;;		wreg, status,2
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6039 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6042 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6043 ;;Total ram usage:        3 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_spi_init
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           	psect	text18
  6053  009428                     __ptext18:
  6054                           	opt stack 0
  6055  009428                     __spi_init:
  6056                           	opt stack 27
  6057                           
  6058                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6059                           
  6060                           ;incstack = 0
  6061  009428  0E55               	movlw	85
  6062  00942A  6EA7               	movwf	4007,c	;volsfr
  6063  00942C  0EAA               	movlw	170
  6064  00942E  6EA7               	movwf	4007,c	;volsfr
  6065  009430  010E               	movlb	14	; () banked
  6066  009432  91BF               	bcf	191,0,b	;volatile
  6067                           
  6068                           ;spi.c: 32: RPINR21 = 23;
  6069  009434  0E17               	movlw	23
  6070  009436  6FFC               	movwf	252,b	;volatile
  6071                           
  6072                           ;spi.c: 33: RPOR21 = 10;
  6073  009438  0E0A               	movlw	10
  6074  00943A  6FD5               	movwf	213,b	;volatile
  6075                           
  6076                           ;spi.c: 35: RPOR22 = 11;
  6077  00943C  0E0B               	movlw	11
  6078  00943E  6FD6               	movwf	214,b	;volatile
  6079                           
  6080                           ;spi.c: 36: RPINR22 = 22;
  6081  009440  0E16               	movlw	22
  6082  009442  6FFD               	movwf	253,b	;volatile
  6083                           
  6084                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  6085  009444  0E55               	movlw	85
  6086  009446  6EA7               	movwf	4007,c	;volsfr
  6087  009448  0EAA               	movlw	170
  6088  00944A  6EA7               	movwf	4007,c	;volsfr
  6089                           
  6090                           ; BSR set to: 14
  6091  00944C  81BF               	bsf	191,0,b	;volatile
  6092                           
  6093                           ; BSR set to: 14
  6094                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  6095  00944E  8E73               	bsf	3955,7,c	;volatile
  6096                           
  6097                           ; BSR set to: 14
  6098                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  6099  009450  8C73               	bsf	3955,6,c	;volatile
  6100                           
  6101                           ; BSR set to: 14
  6102                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  6103  009452  9872               	bcf	3954,4,c	;volatile
  6104                           
  6105                           ; BSR set to: 14
  6106                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  6107  009454  9072               	bcf	3954,0,c	;volatile
  6108  009456  9272               	bcf	3954,1,c	;volatile
  6109  009458  9472               	bcf	3954,2,c	;volatile
  6110  00945A  9672               	bcf	3954,3,c	;volatile
  6111                           
  6112                           ; BSR set to: 14
  6113                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  6114  00945C  8A72               	bsf	3954,5,c	;volatile
  6115                           
  6116                           ; BSR set to: 14
  6117  00945E  0012               	return		;funcret
  6118  009460                     __end_of__spi_init:
  6119                           	opt stack 0
  6120                           tblptru	equ	0xFF8
  6121                           tblptrh	equ	0xFF7
  6122                           tblptrl	equ	0xFF6
  6123                           tablat	equ	0xFF5
  6124                           intcon	equ	0xFF2
  6125                           intcon3	equ	0xFF0
  6126                           postinc0	equ	0xFEE
  6127                           wreg	equ	0xFE8
  6128                           postdec1	equ	0xFE5
  6129                           plusw1	equ	0xFE3
  6130                           fsr1h	equ	0xFE2
  6131                           fsr1l	equ	0xFE1
  6132                           plusw2	equ	0xFDB
  6133                           status	equ	0xFD8
  6134                           
  6135 ;; *************** function __flash_set_page_size *****************
  6136 ;; Defined at:
  6137 ;;		line 98 in file "flash.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  size            1    wreg     enum E6900
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  size            1   23[COMRAM] enum E6900
  6142 ;;  command         4   19[COMRAM] unsigned char [4]
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      void 
  6145 ;; Registers used:
  6146 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6153 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6155 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6156 ;;Total ram usage:        5 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    3
  6159 ;; This function calls:
  6160 ;;		__flash_is_busy
  6161 ;;		_memcpy
  6162 ;;		_spi_tx
  6163 ;; This function is called by:
  6164 ;;		_flash_init
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text19
  6169  008238                     __ptext19:
  6170                           	opt stack 0
  6171  008238                     __flash_set_page_size:
  6172                           	opt stack 25
  6173                           
  6174                           ; BSR set to: 14
  6175                           ;incstack = 0
  6176                           ;__flash_set_page_size@size stored from wreg
  6177  008238  6E18               	movwf	__flash_set_page_size@size,c
  6178  00823A                     
  6179                           ;flash.c: 100: uint8_t command[4];;flash.c: 103: while(_flash_is_busy());
  6180  00823A  ECF1  F04C         	call	__flash_is_busy	;wreg free
  6181  00823E  0900               	iorlw	0
  6182  008240  A4D8               	btfss	status,2,c
  6183  008242  D7FB               	goto	l14784
  6184                           
  6185                           ;flash.c: 106: if(size==FLASH_PAGE_SIZE_512)
  6186  008244  5018               	movf	__flash_set_page_size@size,w,c
  6187  008246  A4D8               	btfss	status,2,c
  6188  008248  D013               	goto	l1769
  6189                           
  6190                           ;flash.c: 107: memcpy(command, flash_command_pagesize_512, 4);
  6191  00824A  0E14               	movlw	low __flash_set_page_size@command
  6192  00824C  6E01               	movwf	memcpy@d1,c
  6193  00824E  0E00               	movlw	high __flash_set_page_size@command
  6194  008250  6E02               	movwf	memcpy@d1+1,c
  6195  008252  0EC3               	movlw	low _flash_command_pagesize_512
  6196  008254  6E03               	movwf	memcpy@s1,c
  6197  008256  0EBF               	movlw	high _flash_command_pagesize_512
  6198  008258  6E04               	movwf	memcpy@s1+1,c
  6199  00825A  5003               	movf	memcpy@s1,w,c
  6200  00825C  1004               	iorwf	memcpy@s1+1,w,c
  6201  00825E  A4D8               	btfss	status,2,c
  6202  008260  0E00               	movlw	low (__mediumconst shr (0+16))
  6203  008262  6E05               	movwf	memcpy@s1+2,c
  6204  008264  0E00               	movlw	0
  6205  008266  6E07               	movwf	memcpy@n+1,c
  6206  008268  0E04               	movlw	4
  6207  00826A  6E06               	movwf	memcpy@n,c
  6208  00826C  ECEF  F043         	call	_memcpy	;wreg free
  6209  008270                     l1769:
  6210                           
  6211                           ;flash.c: 108: if(size==FLASH_PAGE_SIZE_528)
  6212  008270  0418               	decf	__flash_set_page_size@size,w,c
  6213  008272  A4D8               	btfss	status,2,c
  6214  008274  D013               	goto	l1770
  6215                           
  6216                           ;flash.c: 109: memcpy(command, flash_command_pagesize_528, 4);
  6217  008276  0E14               	movlw	low __flash_set_page_size@command
  6218  008278  6E01               	movwf	memcpy@d1,c
  6219  00827A  0E00               	movlw	high __flash_set_page_size@command
  6220  00827C  6E02               	movwf	memcpy@d1+1,c
  6221  00827E  0EBF               	movlw	low _flash_command_pagesize_528
  6222  008280  6E03               	movwf	memcpy@s1,c
  6223  008282  0EBF               	movlw	high _flash_command_pagesize_528
  6224  008284  6E04               	movwf	memcpy@s1+1,c
  6225  008286  5003               	movf	memcpy@s1,w,c
  6226  008288  1004               	iorwf	memcpy@s1+1,w,c
  6227  00828A  A4D8               	btfss	status,2,c
  6228  00828C  0E00               	movlw	low (__mediumconst shr (0+16))
  6229  00828E  6E05               	movwf	memcpy@s1+2,c
  6230  008290  0E00               	movlw	0
  6231  008292  6E07               	movwf	memcpy@n+1,c
  6232  008294  0E04               	movlw	4
  6233  008296  6E06               	movwf	memcpy@n,c
  6234  008298  ECEF  F043         	call	_memcpy	;wreg free
  6235  00829C                     l1770:
  6236                           
  6237                           ;flash.c: 112: spi_tx(command, 4);
  6238  00829C  0E14               	movlw	low __flash_set_page_size@command
  6239  00829E  6E01               	movwf	spi_tx@data,c
  6240  0082A0  0E00               	movlw	high __flash_set_page_size@command
  6241  0082A2  6E02               	movwf	spi_tx@data+1,c
  6242  0082A4  0E00               	movlw	0
  6243  0082A6  6E04               	movwf	spi_tx@length+1,c
  6244  0082A8  0E04               	movlw	4
  6245  0082AA  6E03               	movwf	spi_tx@length,c
  6246  0082AC  ECF3  F045         	call	_spi_tx	;wreg free
  6247  0082B0  0012               	return		;funcret
  6248  0082B2                     __end_of__flash_set_page_size:
  6249                           	opt stack 0
  6250                           tblptru	equ	0xFF8
  6251                           tblptrh	equ	0xFF7
  6252                           tblptrl	equ	0xFF6
  6253                           tablat	equ	0xFF5
  6254                           intcon	equ	0xFF2
  6255                           intcon3	equ	0xFF0
  6256                           postinc0	equ	0xFEE
  6257                           wreg	equ	0xFE8
  6258                           postdec1	equ	0xFE5
  6259                           plusw1	equ	0xFE3
  6260                           fsr1h	equ	0xFE2
  6261                           fsr1l	equ	0xFE1
  6262                           plusw2	equ	0xFDB
  6263                           status	equ	0xFD8
  6264                           
  6265 ;; *************** function _fat_init *****************
  6266 ;; Defined at:
  6267 ;;		line 1382 in file "fat16.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;		None
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;		None
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  1    wreg      void 
  6274 ;; Registers used:
  6275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6285 ;;Total ram usage:        0 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:    6
  6288 ;; This function calls:
  6289 ;;		_fat_format
  6290 ;;		_fat_get_format_status
  6291 ;; This function is called by:
  6292 ;;		_system_full_init
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text20
  6297  009C1A                     __ptext20:
  6298                           	opt stack 0
  6299  009C1A                     _fat_init:
  6300                           	opt stack 23
  6301                           
  6302                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6303                           
  6304                           ;incstack = 0
  6305  009C1A  EC85  F03B         	call	_fat_get_format_status	;wreg free
  6306  009C1E  0900               	iorlw	0
  6307  009C20  A4D8               	btfss	status,2,c
  6308  009C22  0012               	return	
  6309                           
  6310                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  6311  009C24  ECC0  F016         	call	_fat_format	;wreg free
  6312  009C28  0012               	return	
  6313  009C2A                     __end_of_fat_init:
  6314                           	opt stack 0
  6315                           tblptru	equ	0xFF8
  6316                           tblptrh	equ	0xFF7
  6317                           tblptrl	equ	0xFF6
  6318                           tablat	equ	0xFF5
  6319                           intcon	equ	0xFF2
  6320                           intcon3	equ	0xFF0
  6321                           postinc0	equ	0xFEE
  6322                           wreg	equ	0xFE8
  6323                           postdec1	equ	0xFE5
  6324                           plusw1	equ	0xFE3
  6325                           fsr1h	equ	0xFE2
  6326                           fsr1l	equ	0xFE1
  6327                           plusw2	equ	0xFDB
  6328                           status	equ	0xFD8
  6329                           
  6330 ;; *************** function _fat_get_format_status *****************
  6331 ;; Defined at:
  6332 ;;		line 1292 in file "fat16.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;		None
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  cntr            2   45[COMRAM] unsigned int 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      enum E6874
  6339 ;; Registers used:
  6340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6349 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;Total ram usage:        4 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:    5
  6353 ;; This function calls:
  6354 ;;		__get_fbr
  6355 ;;		__get_mbr
  6356 ;;		_flash_sector_read
  6357 ;; This function is called by:
  6358 ;;		_fat_init
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text21
  6363  00770A                     __ptext21:
  6364                           	opt stack 0
  6365  00770A                     _fat_get_format_status:
  6366                           	opt stack 23
  6367                           
  6368                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  6369                           
  6370                           ;incstack = 0
  6371  00770A  0E00               	movlw	0
  6372  00770C  6E29               	movwf	flash_sector_read@page+1,c
  6373  00770E  0E00               	movlw	0
  6374  007710  6E28               	movwf	flash_sector_read@page,c
  6375  007712  0EC0               	movlw	low _buffer
  6376  007714  6E2A               	movwf	flash_sector_read@data,c
  6377  007716  0E03               	movlw	high _buffer
  6378  007718  6E2B               	movwf	flash_sector_read@data+1,c
  6379  00771A  ECE7  F04A         	call	_flash_sector_read	;wreg free
  6380                           
  6381                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  6382  00771E  0E00               	movlw	0
  6383  007720  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6384  007722  0E00               	movlw	0
  6385  007724  6E2E               	movwf	fat_get_format_status@cntr,c
  6386  007726                     l14812:
  6387  007726  0E02               	movlw	2
  6388  007728  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6389  00772A  B0D8               	btfsc	status,0,c
  6390  00772C  D016               	goto	u12100
  6391                           
  6392                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  6393  00772E  0EC0               	movlw	low _buffer
  6394  007730  242E               	addwf	fat_get_format_status@cntr,w,c
  6395  007732  6ED9               	movwf	fsr2l,c
  6396  007734  0E03               	movlw	high _buffer
  6397  007736  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6398  007738  6EDA               	movwf	fsr2h,c
  6399  00773A  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6400  00773E  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6401  007742  ECFF  F035         	call	__get_mbr	;wreg free
  6402  007746  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6403  007748  50DE               	movf	postinc2,w,c
  6404  00774A  182D               	xorwf	??_fat_get_format_status+1,w,c
  6405  00774C  B4D8               	btfsc	status,2,c
  6406  00774E  D002               	goto	l2293
  6407                           
  6408                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  6409  007750  0E00               	movlw	0
  6410  007752  0012               	return	
  6411  007754                     l2293:
  6412  007754  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6413  007756  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6414  007758  D7E6               	goto	l14812
  6415  00775A                     u12100:
  6416                           
  6417                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  6418  00775A  0E00               	movlw	0
  6419  00775C  6E29               	movwf	flash_sector_read@page+1,c
  6420  00775E  0E01               	movlw	1
  6421  007760  6E28               	movwf	flash_sector_read@page,c
  6422  007762  0EC0               	movlw	low _buffer
  6423  007764  6E2A               	movwf	flash_sector_read@data,c
  6424  007766  0E03               	movlw	high _buffer
  6425  007768  6E2B               	movwf	flash_sector_read@data+1,c
  6426  00776A  ECE7  F04A         	call	_flash_sector_read	;wreg free
  6427                           
  6428                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  6429  00776E  0E00               	movlw	0
  6430  007770  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6431  007772  0E00               	movlw	0
  6432  007774  6E2E               	movwf	fat_get_format_status@cntr,c
  6433  007776                     l14830:
  6434  007776  0E02               	movlw	2
  6435  007778  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6436  00777A  B0D8               	btfsc	status,0,c
  6437  00777C  D016               	goto	u12130
  6438                           
  6439                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  6440  00777E  0EC0               	movlw	low _buffer
  6441  007780  242E               	addwf	fat_get_format_status@cntr,w,c
  6442  007782  6ED9               	movwf	fsr2l,c
  6443  007784  0E03               	movlw	high _buffer
  6444  007786  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6445  007788  6EDA               	movwf	fsr2h,c
  6446  00778A  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6447  00778E  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6448  007792  EC22  F010         	call	__get_fbr	;wreg free
  6449  007796  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6450  007798  50DE               	movf	postinc2,w,c
  6451  00779A  182D               	xorwf	??_fat_get_format_status+1,w,c
  6452  00779C  B4D8               	btfsc	status,2,c
  6453  00779E  D002               	goto	l2297
  6454                           
  6455                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  6456  0077A0  0E00               	movlw	0
  6457  0077A2  0012               	return	
  6458  0077A4                     l2297:
  6459  0077A4  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6460  0077A6  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6461  0077A8  D7E6               	goto	l14830
  6462  0077AA                     u12130:
  6463                           
  6464                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  6465  0077AA  0E01               	movlw	1
  6466  0077AC  0012               	return	
  6467  0077AE                     __end_of_fat_get_format_status:
  6468                           	opt stack 0
  6469                           tblptru	equ	0xFF8
  6470                           tblptrh	equ	0xFF7
  6471                           tblptrl	equ	0xFF6
  6472                           tablat	equ	0xFF5
  6473                           intcon	equ	0xFF2
  6474                           intcon3	equ	0xFF0
  6475                           postinc0	equ	0xFEE
  6476                           wreg	equ	0xFE8
  6477                           postdec1	equ	0xFE5
  6478                           plusw1	equ	0xFE3
  6479                           fsr1h	equ	0xFE2
  6480                           fsr1l	equ	0xFE1
  6481                           postinc2	equ	0xFDE
  6482                           plusw2	equ	0xFDB
  6483                           fsr2h	equ	0xFDA
  6484                           fsr2l	equ	0xFD9
  6485                           status	equ	0xFD8
  6486                           
  6487 ;; *************** function __system_timer0_init *****************
  6488 ;; Defined at:
  6489 ;;		line 112 in file "os.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;		None
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      void 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6507 ;;Total ram usage:        0 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_system_full_init
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text22
  6517  009A04                     __ptext22:
  6518                           	opt stack 0
  6519  009A04                     __system_timer0_init:
  6520                           	opt stack 29
  6521                           
  6522                           ;os.c: 115: T0CONbits.T0CS = 0;
  6523                           
  6524                           ;incstack = 0
  6525  009A04  9AD5               	bcf	4053,5,c	;volatile
  6526                           
  6527                           ;os.c: 117: T0CONbits.T08BIT = 0;
  6528  009A06  9CD5               	bcf	4053,6,c	;volatile
  6529                           
  6530                           ;os.c: 119: T0CONbits.T0PS2 = 0;
  6531  009A08  94D5               	bcf	4053,2,c	;volatile
  6532                           
  6533                           ;os.c: 120: T0CONbits.T0PS1 = 1;
  6534  009A0A  82D5               	bsf	4053,1,c	;volatile
  6535                           
  6536                           ;os.c: 121: T0CONbits.T0PS0 = 0;
  6537  009A0C  90D5               	bcf	4053,0,c	;volatile
  6538                           
  6539                           ;os.c: 123: T0CONbits.PSA = 0;
  6540  009A0E  96D5               	bcf	4053,3,c	;volatile
  6541                           
  6542                           ;os.c: 125: TMR0H = 0xD1;
  6543  009A10  0ED1               	movlw	209
  6544  009A12  6ED7               	movwf	4055,c	;volatile
  6545                           
  6546                           ;os.c: 126: TMR0L = 0x20;
  6547  009A14  0E20               	movlw	32
  6548  009A16  6ED6               	movwf	4054,c	;volatile
  6549                           
  6550                           ;os.c: 128: T0CONbits.TMR0ON = 1;
  6551  009A18  8ED5               	bsf	4053,7,c	;volatile
  6552                           
  6553                           ;os.c: 132: INTCONbits.TMR0IF = 0;
  6554  009A1A  94F2               	bcf	intcon,2,c	;volatile
  6555                           
  6556                           ;os.c: 135: os.timeSlot = 0;
  6557  009A1C  0E00               	movlw	0
  6558  009A1E  0100               	movlb	0	; () banked
  6559  009A20  6FC7               	movwf	(_os+2)& (0+255),b	;volatile
  6560                           
  6561                           ; BSR set to: 0
  6562  009A22  0012               	return		;funcret
  6563  009A24                     __end_of__system_timer0_init:
  6564                           	opt stack 0
  6565                           tblptru	equ	0xFF8
  6566                           tblptrh	equ	0xFF7
  6567                           tblptrl	equ	0xFF6
  6568                           tablat	equ	0xFF5
  6569                           intcon	equ	0xFF2
  6570                           intcon3	equ	0xFF0
  6571                           postinc0	equ	0xFEE
  6572                           wreg	equ	0xFE8
  6573                           postdec1	equ	0xFE5
  6574                           plusw1	equ	0xFE3
  6575                           fsr1h	equ	0xFE2
  6576                           fsr1l	equ	0xFE1
  6577                           postinc2	equ	0xFDE
  6578                           plusw2	equ	0xFDB
  6579                           fsr2h	equ	0xFDA
  6580                           fsr2l	equ	0xFD9
  6581                           status	equ	0xFD8
  6582                           
  6583 ;; *************** function __system_encoder_init *****************
  6584 ;; Defined at:
  6585 ;;		line 73 in file "os.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;		None
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  1    wreg      void 
  6592 ;; Registers used:
  6593 ;;		wreg, status,2
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6603 ;;Total ram usage:        0 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_system_full_init
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text23
  6613  0093EE                     __ptext23:
  6614                           	opt stack 0
  6615  0093EE                     __system_encoder_init:
  6616                           	opt stack 29
  6617                           
  6618                           ;os.c: 75: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;incstack = 0
  6622  0093EE  0E55               	movlw	85
  6623  0093F0  6EA7               	movwf	4007,c	;volsfr
  6624  0093F2  0EAA               	movlw	170
  6625  0093F4  6EA7               	movwf	4007,c	;volsfr
  6626  0093F6  010E               	movlb	14	; () banked
  6627  0093F8  91BF               	bcf	191,0,b	;volatile
  6628                           
  6629                           ;os.c: 76: RPINR1 = 0;
  6630  0093FA  0E00               	movlw	0
  6631  0093FC  6FE1               	movwf	225,b	;volatile
  6632                           
  6633                           ;os.c: 77: RPINR3 = 9;
  6634  0093FE  0E09               	movlw	9
  6635  009400  6FE3               	movwf	227,b	;volatile
  6636                           
  6637                           ;os.c: 78: RPINR2 = 10;
  6638  009402  0E0A               	movlw	10
  6639  009404  6FE2               	movwf	226,b	;volatile
  6640                           
  6641                           ;os.c: 79: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  6642  009406  0E55               	movlw	85
  6643  009408  6EA7               	movwf	4007,c	;volsfr
  6644  00940A  0EAA               	movlw	170
  6645  00940C  6EA7               	movwf	4007,c	;volsfr
  6646                           
  6647                           ; BSR set to: 14
  6648  00940E  91BF               	bcf	191,0,b	;volatile
  6649                           
  6650                           ; BSR set to: 14
  6651                           ;os.c: 82: INTCON2bits.INTEDG1 = 0;
  6652  009410  9AF1               	bcf	intcon2,5,c	;volatile
  6653                           
  6654                           ; BSR set to: 14
  6655                           ;os.c: 83: INTCON3bits.INT1IF = 0;
  6656  009412  90F0               	bcf	intcon3,0,c	;volatile
  6657                           
  6658                           ; BSR set to: 14
  6659                           ;os.c: 85: INTCON2bits.INTEDG2 = 1;
  6660  009414  88F1               	bsf	intcon2,4,c	;volatile
  6661                           
  6662                           ; BSR set to: 14
  6663                           ;os.c: 86: INTCON3bits.INT2IF = 0;
  6664  009416  92F0               	bcf	intcon3,1,c	;volatile
  6665                           
  6666                           ; BSR set to: 14
  6667                           ;os.c: 88: INTCON2bits.INTEDG3 = 1;
  6668  009418  86F1               	bsf	intcon2,3,c	;volatile
  6669                           
  6670                           ; BSR set to: 14
  6671                           ;os.c: 89: INTCON3bits.INT3IF = 0;
  6672  00941A  94F0               	bcf	intcon3,2,c	;volatile
  6673                           
  6674                           ;os.c: 91: os.encoderCount = 0;
  6675  00941C  0E00               	movlw	0
  6676  00941E  0100               	movlb	0	; () banked
  6677  009420  6FC5               	movwf	_os& (0+255),b	;volatile
  6678                           
  6679                           ;os.c: 92: os.buttonCount = 0;
  6680  009422  0E00               	movlw	0
  6681  009424  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  6682                           
  6683                           ; BSR set to: 0
  6684  009426  0012               	return		;funcret
  6685  009428                     __end_of__system_encoder_init:
  6686                           	opt stack 0
  6687                           tblptru	equ	0xFF8
  6688                           tblptrh	equ	0xFF7
  6689                           tblptrl	equ	0xFF6
  6690                           tablat	equ	0xFF5
  6691                           intcon	equ	0xFF2
  6692                           intcon2	equ	0xFF1
  6693                           intcon3	equ	0xFF0
  6694                           postinc0	equ	0xFEE
  6695                           wreg	equ	0xFE8
  6696                           postdec1	equ	0xFE5
  6697                           plusw1	equ	0xFE3
  6698                           fsr1h	equ	0xFE2
  6699                           fsr1l	equ	0xFE1
  6700                           postinc2	equ	0xFDE
  6701                           plusw2	equ	0xFDB
  6702                           fsr2h	equ	0xFDA
  6703                           fsr2l	equ	0xFD9
  6704                           status	equ	0xFD8
  6705                           
  6706 ;; *************** function _spi_get_external_tx_buffer *****************
  6707 ;; Defined at:
  6708 ;;		line 75 in file "spi.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;		None
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;		None
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  2    0[COMRAM] PTR unsigned char 
  6715 ;; Registers used:
  6716 ;;		wreg, status,2, status,0
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;Total ram usage:        2 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_main
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text24
  6736  009C62                     __ptext24:
  6737                           	opt stack 0
  6738  009C62                     _spi_get_external_tx_buffer:
  6739                           	opt stack 30
  6740                           
  6741                           ;spi.c: 77: return _spi_external_tx_buffer;
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;incstack = 0
  6745  009C62  0E40               	movlw	low __spi_external_tx_buffer
  6746  009C64  6E01               	movwf	?_spi_get_external_tx_buffer,c
  6747  009C66  0E03               	movlw	high __spi_external_tx_buffer
  6748  009C68  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  6749  009C6A  0012               	return	
  6750  009C6C                     __end_of_spi_get_external_tx_buffer:
  6751                           	opt stack 0
  6752                           tblptru	equ	0xFF8
  6753                           tblptrh	equ	0xFF7
  6754                           tblptrl	equ	0xFF6
  6755                           tablat	equ	0xFF5
  6756                           intcon	equ	0xFF2
  6757                           intcon2	equ	0xFF1
  6758                           intcon3	equ	0xFF0
  6759                           postinc0	equ	0xFEE
  6760                           wreg	equ	0xFE8
  6761                           postdec1	equ	0xFE5
  6762                           plusw1	equ	0xFE3
  6763                           fsr1h	equ	0xFE2
  6764                           fsr1l	equ	0xFE1
  6765                           postinc2	equ	0xFDE
  6766                           plusw2	equ	0xFDB
  6767                           fsr2h	equ	0xFDA
  6768                           fsr2l	equ	0xFD9
  6769                           status	equ	0xFD8
  6770                           
  6771 ;; *************** function _spi_get_external_rx_buffer *****************
  6772 ;; Defined at:
  6773 ;;		line 80 in file "spi.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;		None
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;		None
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  2    0[COMRAM] PTR unsigned char 
  6780 ;; Registers used:
  6781 ;;		wreg, status,2, status,0
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6791 ;;Total ram usage:        2 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_main
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text25
  6801  009C6C                     __ptext25:
  6802                           	opt stack 0
  6803  009C6C                     _spi_get_external_rx_buffer:
  6804                           	opt stack 30
  6805                           
  6806                           ;spi.c: 82: return _spi_external_rx_buffer;
  6807                           
  6808                           ;incstack = 0
  6809  009C6C  0E00               	movlw	low __spi_external_rx_buffer
  6810  009C6E  6E01               	movwf	?_spi_get_external_rx_buffer,c
  6811  009C70  0E03               	movlw	high __spi_external_rx_buffer
  6812  009C72  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  6813  009C74  0012               	return	
  6814  009C76                     __end_of_spi_get_external_rx_buffer:
  6815                           	opt stack 0
  6816                           tblptru	equ	0xFF8
  6817                           tblptrh	equ	0xFF7
  6818                           tblptrl	equ	0xFF6
  6819                           tablat	equ	0xFF5
  6820                           intcon	equ	0xFF2
  6821                           intcon2	equ	0xFF1
  6822                           intcon3	equ	0xFF0
  6823                           postinc0	equ	0xFEE
  6824                           wreg	equ	0xFE8
  6825                           postdec1	equ	0xFE5
  6826                           plusw1	equ	0xFE3
  6827                           fsr1h	equ	0xFE2
  6828                           fsr1l	equ	0xFE1
  6829                           postinc2	equ	0xFDE
  6830                           plusw2	equ	0xFDB
  6831                           fsr2h	equ	0xFDA
  6832                           fsr2l	equ	0xFD9
  6833                           status	equ	0xFD8
  6834                           
  6835 ;; *************** function _jump_to_main_program *****************
  6836 ;; Defined at:
  6837 ;;		line 251 in file "os.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;		None
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;		None
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  1    wreg      void 
  6844 ;; Registers used:
  6845 ;;		None
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6855 ;;Total ram usage:        0 bytes
  6856 ;; Hardware stack levels used:    1
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_main
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text26
  6865  009D06                     __ptext26:
  6866                           	opt stack 0
  6867  009D06                     _jump_to_main_program:
  6868                           	opt stack 30
  6869                           
  6870                           ;incstack = 0
  6871  009D06  EF00 F060          	goto	49152	; ;# 
  6872  009D0A  0012               	return		;funcret
  6873  009D0C                     __end_of_jump_to_main_program:
  6874                           	opt stack 0
  6875                           tblptru	equ	0xFF8
  6876                           tblptrh	equ	0xFF7
  6877                           tblptrl	equ	0xFF6
  6878                           tablat	equ	0xFF5
  6879                           intcon	equ	0xFF2
  6880                           intcon2	equ	0xFF1
  6881                           intcon3	equ	0xFF0
  6882                           postinc0	equ	0xFEE
  6883                           wreg	equ	0xFE8
  6884                           postdec1	equ	0xFE5
  6885                           plusw1	equ	0xFE3
  6886                           fsr1h	equ	0xFE2
  6887                           fsr1l	equ	0xFE1
  6888                           postinc2	equ	0xFDE
  6889                           plusw2	equ	0xFDB
  6890                           fsr2h	equ	0xFDA
  6891                           fsr2l	equ	0xFD9
  6892                           status	equ	0xFD8
  6893                           
  6894 ;; *************** function _bootloader_run *****************
  6895 ;; Defined at:
  6896 ;;		line 63 in file "bootloader.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  timeslot        1    wreg     unsigned char 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  timeslot        1   91[COMRAM] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;Total ram usage:        1 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    9
  6917 ;; This function calls:
  6918 ;;		__bootloader_find_file
  6919 ;;		__bootloader_program
  6920 ;;		__bootloader_verify_file
  6921 ;; This function is called by:
  6922 ;;		_main
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text27
  6927  0086AA                     __ptext27:
  6928                           	opt stack 0
  6929  0086AA                     _bootloader_run:
  6930                           	opt stack 21
  6931                           
  6932                           ;incstack = 0
  6933                           ;bootloader_run@timeslot stored from wreg
  6934  0086AA  6E5C               	movwf	bootloader_run@timeslot,c
  6935                           
  6936                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  6937  0086AC  0100               	movlb	0	; () banked
  6938  0086AE  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  6939  0086B0  B4D8               	btfsc	status,2,c
  6940  0086B2  0012               	return	
  6941  0086B4  D015               	goto	l2453
  6942  0086B6                     
  6943                           ; BSR set to: 0
  6944                           ;bootloader.c: 74: if(timeslot==0)
  6945                           
  6946                           ; BSR set to: 0
  6947  0086B6  505C               	movf	bootloader_run@timeslot,w,c
  6948  0086B8  A4D8               	btfss	status,2,c
  6949  0086BA  0012               	return	
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  6953  0086BC  ECD7  F03B         	call	__bootloader_find_file	;wreg free
  6954                           
  6955                           ;bootloader.c: 77: };bootloader.c: 78: break;
  6956  0086C0  0012               	return	
  6957  0086C2                     
  6958                           ;bootloader.c: 81: if(timeslot==0)
  6959  0086C2  505C               	movf	bootloader_run@timeslot,w,c
  6960  0086C4  A4D8               	btfss	status,2,c
  6961  0086C6  0012               	return	
  6962                           
  6963                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  6964  0086C8  ECD7  F03B         	call	__bootloader_find_file	;wreg free
  6965                           
  6966                           ;bootloader.c: 84: };bootloader.c: 85: break;
  6967  0086CC  0012               	return	
  6968  0086CE                     
  6969                           ;bootloader.c: 88: _bootloader_verify_file();
  6970  0086CE  ECCC  F007         	call	__bootloader_verify_file	;wreg free
  6971                           
  6972                           ;bootloader.c: 95: break;
  6973                           
  6974                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  6975                           
  6976                           ;bootloader.c: 92: break;
  6977                           
  6978                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  6979                           
  6980                           ;bootloader.c: 89: break;
  6981  0086D2  0012               	return	
  6982  0086D4                     
  6983                           ;bootloader.c: 98: if(timeslot==0)
  6984  0086D4  505C               	movf	bootloader_run@timeslot,w,c
  6985  0086D6  A4D8               	btfss	status,2,c
  6986  0086D8  0012               	return	
  6987                           
  6988                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  6989  0086DA  EC4E  F002         	call	__bootloader_program	;wreg free
  6990                           
  6991                           ;bootloader.c: 109: }
  6992                           
  6993                           ;bootloader.c: 108: break;
  6994                           
  6995                           ;bootloader.c: 107: case BOOTLOADER_MODE_SUSPENDED:
  6996                           
  6997                           ;bootloader.c: 105: break;
  6998                           
  6999                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  7000                           
  7001                           ;bootloader.c: 101: };bootloader.c: 102: break;
  7002  0086DE  0012               	return	
  7003  0086E0                     l2453:
  7004  0086E0  0100               	movlb	0	; () banked
  7005  0086E2  51C9               	movf	(_os+4)& (0+255),w,b	;volatile
  7006                           
  7007                           ; Switch size 1, requested type "space"
  7008                           ; Number of cases is 8, Range of values is 16 to 144
  7009                           ; switch strategies available:
  7010                           ; Name         Instructions Cycles
  7011                           ; simple_byte           25    13 (average)
  7012                           ;	Chosen strategy is simple_byte
  7013  0086E4  0A10               	xorlw	16	; case 16
  7014  0086E6  B4D8               	btfsc	status,2,c
  7015  0086E8  D7E6               	goto	l2454
  7016  0086EA  0A30               	xorlw	48	; case 32
  7017  0086EC  B4D8               	btfsc	status,2,c
  7018  0086EE  D7E9               	goto	l2457
  7019  0086F0  0A10               	xorlw	16	; case 48
  7020  0086F2  B4D8               	btfsc	status,2,c
  7021  0086F4  D7EC               	goto	l2459
  7022  0086F6  0A70               	xorlw	112	; case 64
  7023  0086F8  B4D8               	btfsc	status,2,c
  7024  0086FA  0012               	return	
  7025  0086FC  0A10               	xorlw	16	; case 80
  7026  0086FE  B4D8               	btfsc	status,2,c
  7027  008700  0012               	return	
  7028  008702  0A30               	xorlw	48	; case 96
  7029  008704  B4D8               	btfsc	status,2,c
  7030  008706  D7E6               	goto	l2462
  7031  008708  0A10               	xorlw	16	; case 112
  7032  00870A  B4D8               	btfsc	status,2,c
  7033  00870C  0012               	return	
  7034  00870E  0AE0               	xorlw	224	; case 144
  7035  008710  0012               	return	
  7036  008712                     __end_of_bootloader_run:
  7037                           	opt stack 0
  7038                           tblptru	equ	0xFF8
  7039                           tblptrh	equ	0xFF7
  7040                           tblptrl	equ	0xFF6
  7041                           tablat	equ	0xFF5
  7042                           intcon	equ	0xFF2
  7043                           intcon2	equ	0xFF1
  7044                           intcon3	equ	0xFF0
  7045                           postinc0	equ	0xFEE
  7046                           wreg	equ	0xFE8
  7047                           postdec1	equ	0xFE5
  7048                           plusw1	equ	0xFE3
  7049                           fsr1h	equ	0xFE2
  7050                           fsr1l	equ	0xFE1
  7051                           postinc2	equ	0xFDE
  7052                           plusw2	equ	0xFDB
  7053                           fsr2h	equ	0xFDA
  7054                           fsr2l	equ	0xFD9
  7055                           status	equ	0xFD8
  7056                           
  7057 ;; *************** function __bootloader_verify_file *****************
  7058 ;; Defined at:
  7059 ;;		line 185 in file "bootloader.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;		None
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  root           32   22[BANK0 ] struct .
  7064 ;;  address32       4   59[BANK0 ] unsigned long 
  7065 ;;  return_value    4   55[BANK0 ] unsigned long 
  7066 ;;  rec_counter     1   54[BANK0 ] unsigned char 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7077 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7078 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7079 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7080 ;;Total ram usage:       49 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; Hardware stack levels required when called:    8
  7083 ;; This function calls:
  7084 ;;		__bootloader_check_address
  7085 ;;		_fat_get_file_information
  7086 ;;		_fat_get_file_size
  7087 ;;		_fat_read_from_file_fast
  7088 ;;		_parseHexFileEntry
  7089 ;; This function is called by:
  7090 ;;		_bootloader_run
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           	psect	text28
  7095  000F98                     __ptext28:
  7096                           	opt stack 0
  7097  000F98                     __bootloader_verify_file:
  7098                           	opt stack 21
  7099                           
  7100                           ;bootloader.c: 187: uint8_t rec_counter;;bootloader.c: 188: uint32_t return_value = 0;
  7101                           
  7102                           ;incstack = 0
  7103  000F98  0E00               	movlw	0
  7104  000F9A  0100               	movlb	0	; () banked
  7105  000F9C  6F97               	movwf	__bootloader_verify_file@return_value& (0+255),b
  7106  000F9E  0E00               	movlw	0
  7107  000FA0  6F98               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  7108  000FA2  0E00               	movlw	0
  7109  000FA4  6F99               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  7110  000FA6  0E00               	movlw	0
  7111  000FA8  6F9A               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;bootloader.c: 189: uint32_t address32;;bootloader.c: 190: rootEntry_t root;;bootloader.
      +                          c: 192: if(hex_file_offset==0)
  7115  000FAA  51D7               	movf	_hex_file_offset& (0+255),w,b
  7116  000FAC  11D8               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7117  000FAE  11D9               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7118  000FB0  11DA               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7119  000FB2  A4D8               	btfss	status,2,c
  7120  000FB4  D010               	goto	l2485
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;bootloader.c: 193: {;bootloader.c: 195: fat_get_file_information(file_number, &root);
  7124  000FB6  0E76               	movlw	low __bootloader_verify_file@root
  7125  000FB8  6E30               	movwf	fat_get_file_information@data,c
  7126  000FBA  0E00               	movlw	high __bootloader_verify_file@root
  7127  000FBC  6E31               	movwf	fat_get_file_information@data+1,c
  7128  000FBE  51FF               	movf	_file_number& (0+255),w,b
  7129  000FC0  EC0A  F042         	call	_fat_get_file_information
  7130                           
  7131                           ;bootloader.c: 196: fast_read_cluster = root.firstCluster;
  7132  000FC4  C090  F0FB         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  7133  000FC8  C091  F0FC         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  7134                           
  7135                           ;bootloader.c: 197: fast_read_cluster_number = 0;
  7136  000FCC  0E00               	movlw	0
  7137  000FCE  0100               	movlb	0	; () banked
  7138  000FD0  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7139  000FD2  0E00               	movlw	0
  7140  000FD4  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  7141  000FD6                     l2485:
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;bootloader.c: 198: };bootloader.c: 201: hex_file_size = fat_get_file_size(file_number);
  7145                           
  7146                           ; BSR set to: 0
  7147  000FD6  51FF               	movf	_file_number& (0+255),w,b
  7148  000FD8  ECB3  F042         	call	_fat_get_file_size
  7149  000FDC  C036  F14A         	movff	?_fat_get_file_size,_hex_file_size
  7150  000FE0  C037  F14B         	movff	?_fat_get_file_size+1,_hex_file_size+1
  7151  000FE4  C038  F14C         	movff	?_fat_get_file_size+2,_hex_file_size+2
  7152  000FE8  C039  F14D         	movff	?_fat_get_file_size+3,_hex_file_size+3
  7153                           
  7154                           ;bootloader.c: 204: for(rec_counter=0; rec_counter<16; ++rec_counter)
  7155  000FEC  0E00               	movlw	0
  7156  000FEE  0100               	movlb	0	; () banked
  7157  000FF0  6F96               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  7158  000FF2                     l15862:
  7159                           
  7160                           ; BSR set to: 0
  7161  000FF2  0E0F               	movlw	15
  7162  000FF4  6596               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  7163  000FF6  D001               	goto	l2486
  7164  000FF8  0012               	return	
  7165  000FFA                     l2486:
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;bootloader.c: 205: {;bootloader.c: 207: if((hex_file_size-hex_file_offset)>=50)
  7169                           
  7170                           ; BSR set to: 0
  7171  000FFA  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  7172  000FFE  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  7173  001002  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  7174  001006  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  7175  00100A  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  7176  00100C  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  7177  00100E  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  7178  001010  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  7179  001012  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  7180  001014  0E00               	movlw	0
  7181  001016  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  7182  001018  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  7183  00101A  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  7184  00101C  0101               	movlb	1	; () banked
  7185  00101E  514A               	movf	_hex_file_size& (0+255),w,b
  7186  001020  0100               	movlb	0	; () banked
  7187  001022  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  7188  001024  6F72               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  7189  001026  0101               	movlb	1	; () banked
  7190  001028  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7191  00102A  0100               	movlb	0	; () banked
  7192  00102C  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  7193  00102E  6F73               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  7194  001030  0101               	movlb	1	; () banked
  7195  001032  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7196  001034  0100               	movlb	0	; () banked
  7197  001036  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  7198  001038  6F74               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  7199  00103A  0101               	movlb	1	; () banked
  7200  00103C  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7201  00103E  0100               	movlb	0	; () banked
  7202  001040  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  7203  001042  6F75               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  7204  001044  5175               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  7205  001046  1174               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  7206  001048  1173               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  7207  00104A  E104               	bnz	u13070
  7208  00104C  0E32               	movlw	50
  7209  00104E  5D72               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  7210  001050  A0D8               	btfss	status,0,c
  7211  001052  D01F               	goto	l2488
  7212  001054                     u13070:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;bootloader.c: 208: {;bootloader.c: 210: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7216  001054  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7217  001058  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7218  00105C  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7219  001060  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7220  001064  0E32               	movlw	50
  7221  001066  6E46               	movwf	fat_read_from_file_fast@length,c
  7222  001068  0E00               	movlw	0
  7223  00106A  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7224  00106C  0E00               	movlw	0
  7225  00106E  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7226  001070  0E00               	movlw	0
  7227  001072  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7228  001074  0E90               	movlw	low _file_buffer
  7229  001076  6E4A               	movwf	fat_read_from_file_fast@data,c
  7230  001078  0E02               	movlw	high _file_buffer
  7231  00107A  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7232  00107C  0EFB               	movlw	low _fast_read_cluster
  7233  00107E  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7234  001080  0E00               	movlw	high _fast_read_cluster
  7235  001082  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7236  001084  0EF9               	movlw	low _fast_read_cluster_number
  7237  001086  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7238  001088  0E00               	movlw	high _fast_read_cluster_number
  7239  00108A  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7240  00108C  EC9D  F013         	call	_fat_read_from_file_fast	;wreg free
  7241                           
  7242                           ;bootloader.c: 211: }
  7243  001090  D03C               	goto	l2489
  7244  001092                     l2488:
  7245                           
  7246                           ;bootloader.c: 212: else;bootloader.c: 213: {;bootloader.c: 215: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7247  001092  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7248  001096  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7249  00109A  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7250  00109E  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7251  0010A2  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  7252  0010A6  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  7253  0010AA  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  7254  0010AE  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  7255  0010B2  0100               	movlb	0	; () banked
  7256  0010B4  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  7257  0010B6  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  7258  0010B8  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  7259  0010BA  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  7260  0010BC  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  7261  0010BE  0E00               	movlw	0
  7262  0010C0  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  7263  0010C2  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  7264  0010C4  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  7265  0010C6  0101               	movlb	1	; () banked
  7266  0010C8  514A               	movf	_hex_file_size& (0+255),w,b
  7267  0010CA  0100               	movlb	0	; () banked
  7268  0010CC  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  7269  0010CE  6E46               	movwf	fat_read_from_file_fast@length,c
  7270  0010D0  0101               	movlb	1	; () banked
  7271  0010D2  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7272  0010D4  0100               	movlb	0	; () banked
  7273  0010D6  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  7274  0010D8  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7275  0010DA  0101               	movlb	1	; () banked
  7276  0010DC  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7277  0010DE  0100               	movlb	0	; () banked
  7278  0010E0  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  7279  0010E2  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7280  0010E4  0101               	movlb	1	; () banked
  7281  0010E6  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7282  0010E8  0100               	movlb	0	; () banked
  7283  0010EA  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  7284  0010EC  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7285  0010EE  0E90               	movlw	low _file_buffer
  7286  0010F0  6E4A               	movwf	fat_read_from_file_fast@data,c
  7287  0010F2  0E02               	movlw	high _file_buffer
  7288  0010F4  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7289  0010F6  0EFB               	movlw	low _fast_read_cluster
  7290  0010F8  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7291  0010FA  0E00               	movlw	high _fast_read_cluster
  7292  0010FC  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7293  0010FE  0EF9               	movlw	low _fast_read_cluster_number
  7294  001100  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7295  001102  0E00               	movlw	high _fast_read_cluster_number
  7296  001104  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7297  001106  EC9D  F013         	call	_fat_read_from_file_fast	;wreg free
  7298  00110A                     l2489:
  7299                           
  7300                           ;bootloader.c: 216: };bootloader.c: 219: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7301  00110A  0E90               	movlw	low _file_buffer
  7302  00110C  6E0C               	movwf	parseHexFileEntry@data,c
  7303  00110E  0E02               	movlw	high _file_buffer
  7304  001110  6E0D               	movwf	parseHexFileEntry@data+1,c
  7305  001112  0E00               	movlw	0
  7306  001114  6E0E               	movwf	parseHexFileEntry@offset,c
  7307  001116  0E00               	movlw	0
  7308  001118  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7309  00111A  0E00               	movlw	0
  7310  00111C  6E10               	movwf	parseHexFileEntry@offset+2,c
  7311  00111E  0E00               	movlw	0
  7312  001120  6E11               	movwf	parseHexFileEntry@offset+3,c
  7313  001122  0E93               	movlw	low _hex_file_entry
  7314  001124  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7315  001126  0E01               	movlw	high _hex_file_entry
  7316  001128  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7317  00112A  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7318  00112E  C00C  F097         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  7319  001132  C00D  F098         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  7320  001136  C00E  F099         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  7321  00113A  C00F  F09A         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  7322                           
  7323                           ;bootloader.c: 222: ++hex_file_entries;
  7324  00113E  0101               	movlb	1	; () banked
  7325  001140  4B78               	infsnz	_hex_file_entries& (0+255),f,b
  7326  001142  2B79               	incf	(_hex_file_entries+1)& (0+255),f,b
  7327                           
  7328                           ; BSR set to: 1
  7329                           ;bootloader.c: 225: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  7330  001144  0E04               	movlw	4
  7331  001146  1997               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  7332  001148  A4D8               	btfss	status,2,c
  7333  00114A  D01C               	goto	l2490
  7334                           
  7335                           ; BSR set to: 1
  7336                           ;bootloader.c: 226: {;bootloader.c: 227: extended_linear_address = hex_file_entry.data[0
      +                          ];
  7337  00114C  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  7338  00114E  6F46               	movwf	_extended_linear_address& (0+255),b
  7339  001150  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  7340  001152  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  7341  001154  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  7342                           
  7343                           ; BSR set to: 1
  7344                           ;bootloader.c: 228: extended_linear_address <<= 8;
  7345  001156  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7346  00115A  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7347  00115E  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7348  001162  6B46               	clrf	_extended_linear_address& (0+255),b
  7349                           
  7350                           ; BSR set to: 1
  7351                           ;bootloader.c: 229: extended_linear_address |= hex_file_entry.data[1];
  7352  001164  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  7353  001166  1346               	iorwf	_extended_linear_address& (0+255),f,b
  7354                           
  7355                           ; BSR set to: 1
  7356                           ;bootloader.c: 230: extended_linear_address <<= 8;
  7357  001168  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7358  00116C  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7359  001170  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7360  001174  6B46               	clrf	_extended_linear_address& (0+255),b
  7361                           
  7362                           ; BSR set to: 1
  7363                           ;bootloader.c: 231: extended_linear_address <<= 8;
  7364  001176  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7365  00117A  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7366  00117E  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7367  001182  6B46               	clrf	_extended_linear_address& (0+255),b
  7368  001184                     l2490:
  7369                           
  7370                           ; BSR set to: 1
  7371                           ;bootloader.c: 232: };bootloader.c: 235: if(hex_file_entry.recordType==RecordTypeData)
  7372                           
  7373                           ; BSR set to: 1
  7374  001184  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  7375  001186  A4D8               	btfss	status,2,c
  7376  001188  D05E               	goto	l2494
  7377                           
  7378                           ; BSR set to: 1
  7379                           ;bootloader.c: 236: {;bootloader.c: 238: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  7380  00118A  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  7381  00118C  2546               	addwf	_extended_linear_address& (0+255),w,b
  7382  00118E  0100               	movlb	0	; () banked
  7383  001190  6F9B               	movwf	__bootloader_verify_file@address32& (0+255),b
  7384  001192  0101               	movlb	1	; () banked
  7385  001194  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  7386  001196  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7387  001198  0100               	movlb	0	; () banked
  7388  00119A  6F9C               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  7389  00119C  0E00               	movlw	0
  7390  00119E  0101               	movlb	1	; () banked
  7391  0011A0  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7392  0011A2  0100               	movlb	0	; () banked
  7393  0011A4  6F9D               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  7394  0011A6  0E00               	movlw	0
  7395  0011A8  0101               	movlb	1	; () banked
  7396  0011AA  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7397  0011AC  0100               	movlb	0	; () banked
  7398  0011AE  6F9E               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  7399                           
  7400                           ;bootloader.c: 241: if(address32<file_minimum_address)
  7401  0011B0  0101               	movlb	1	; () banked
  7402  0011B2  5152               	movf	_file_minimum_address& (0+255),w,b
  7403  0011B4  0100               	movlb	0	; () banked
  7404  0011B6  5D9B               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  7405  0011B8  0101               	movlb	1	; () banked
  7406  0011BA  5153               	movf	(_file_minimum_address+1)& (0+255),w,b
  7407  0011BC  0100               	movlb	0	; () banked
  7408  0011BE  599C               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7409  0011C0  0101               	movlb	1	; () banked
  7410  0011C2  5154               	movf	(_file_minimum_address+2)& (0+255),w,b
  7411  0011C4  0100               	movlb	0	; () banked
  7412  0011C6  599D               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7413  0011C8  0101               	movlb	1	; () banked
  7414  0011CA  5155               	movf	(_file_minimum_address+3)& (0+255),w,b
  7415  0011CC  0100               	movlb	0	; () banked
  7416  0011CE  599E               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7417  0011D0  B0D8               	btfsc	status,0,c
  7418  0011D2  D008               	goto	l2492
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;bootloader.c: 242: {;bootloader.c: 243: file_minimum_address = address32;
  7422  0011D4  C09B  F152         	movff	__bootloader_verify_file@address32,_file_minimum_address
  7423  0011D8  C09C  F153         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  7424  0011DC  C09D  F154         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  7425  0011E0  C09E  F155         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  7426  0011E4                     l2492:
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;bootloader.c: 244: };bootloader.c: 245: if(address32>file_maximum_address)
  7430                           
  7431                           ; BSR set to: 0
  7432  0011E4  519B               	movf	__bootloader_verify_file@address32& (0+255),w,b
  7433  0011E6  0101               	movlb	1	; () banked
  7434  0011E8  5D4E               	subwf	_file_maximum_address& (0+255),w,b
  7435  0011EA  0100               	movlb	0	; () banked
  7436  0011EC  519C               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7437  0011EE  0101               	movlb	1	; () banked
  7438  0011F0  594F               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  7439  0011F2  0100               	movlb	0	; () banked
  7440  0011F4  519D               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7441  0011F6  0101               	movlb	1	; () banked
  7442  0011F8  5950               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  7443  0011FA  0100               	movlb	0	; () banked
  7444  0011FC  519E               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7445  0011FE  0101               	movlb	1	; () banked
  7446  001200  5951               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  7447  001202  B0D8               	btfsc	status,0,c
  7448  001204  D008               	goto	l2493
  7449                           
  7450                           ; BSR set to: 1
  7451                           ;bootloader.c: 246: {;bootloader.c: 247: file_maximum_address = address32;
  7452  001206  C09B  F14E         	movff	__bootloader_verify_file@address32,_file_maximum_address
  7453  00120A  C09C  F14F         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  7454  00120E  C09D  F150         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  7455  001212  C09E  F151         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  7456  001216                     l2493:
  7457                           
  7458                           ; BSR set to: 1
  7459                           ;bootloader.c: 248: };bootloader.c: 251: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  7460                           
  7461                           ; BSR set to: 1
  7462  001216  C09B  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  7463  00121A  C09C  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  7464  00121E  C09D  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  7465  001222  C09E  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  7466  001226  C193  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  7467  00122A  EC28  F035         	call	__bootloader_check_address	;wreg free
  7468  00122E  0AFF               	xorlw	255
  7469  001230  A4D8               	btfss	status,2,c
  7470  001232  D009               	goto	l2494
  7471                           
  7472                           ;bootloader.c: 252: {;bootloader.c: 254: last_error = ShortRecordErrorAddressRange;
  7473  001234  0E0B               	movlw	11
  7474  001236  0101               	movlb	1	; () banked
  7475  001238  6F8C               	movwf	_last_error& (0+255),b
  7476                           
  7477                           ;bootloader.c: 256: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7478  00123A  0E50               	movlw	80
  7479  00123C  0100               	movlb	0	; () banked
  7480  00123E  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7481                           
  7482                           ;bootloader.c: 257: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7483  001240  0E50               	movlw	80
  7484  001242  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7485                           
  7486                           ;bootloader.c: 258: break;
  7487  001244  0012               	return	
  7488  001246                     l2494:
  7489                           
  7490                           ;bootloader.c: 259: };bootloader.c: 260: };bootloader.c: 262: if(return_value==0)
  7491                           
  7492                           ; BSR set to: 0
  7493                           
  7494                           ; BSR set to: 0
  7495  001246  0100               	movlb	0	; () banked
  7496  001248  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7497  00124A  1198               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7498  00124C  1199               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7499  00124E  119A               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7500  001250  A4D8               	btfss	status,2,c
  7501  001252  D027               	goto	l2495
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;bootloader.c: 263: {;bootloader.c: 266: total_hex_file_entries = hex_file_entries;
  7505  001254  C178  F176         	movff	_hex_file_entries,_total_hex_file_entries
  7506  001258  C179  F177         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;bootloader.c: 267: hex_file_entries = 0;
  7510  00125C  0E00               	movlw	0
  7511  00125E  0101               	movlb	1	; () banked
  7512  001260  6F79               	movwf	(_hex_file_entries+1)& (0+255),b
  7513  001262  0E00               	movlw	0
  7514  001264  6F78               	movwf	_hex_file_entries& (0+255),b
  7515                           
  7516                           ;bootloader.c: 268: hex_file_offset = 0;
  7517  001266  0E00               	movlw	0
  7518  001268  0100               	movlb	0	; () banked
  7519  00126A  6FD7               	movwf	_hex_file_offset& (0+255),b
  7520  00126C  0E00               	movlw	0
  7521  00126E  6FD8               	movwf	(_hex_file_offset+1)& (0+255),b
  7522  001270  0E00               	movlw	0
  7523  001272  6FD9               	movwf	(_hex_file_offset+2)& (0+255),b
  7524  001274  0E00               	movlw	0
  7525  001276  6FDA               	movwf	(_hex_file_offset+3)& (0+255),b
  7526                           
  7527                           ;bootloader.c: 269: extended_linear_address = 0;
  7528  001278  0E00               	movlw	0
  7529  00127A  0101               	movlb	1	; () banked
  7530  00127C  6F46               	movwf	_extended_linear_address& (0+255),b
  7531  00127E  0E00               	movlw	0
  7532  001280  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
  7533  001282  0E00               	movlw	0
  7534  001284  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
  7535  001286  0E00               	movlw	0
  7536  001288  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
  7537                           
  7538                           ;bootloader.c: 270: flash_pages_written = 0;
  7539  00128A  0E00               	movlw	0
  7540  00128C  6F75               	movwf	(_flash_pages_written+1)& (0+255),b
  7541  00128E  0E00               	movlw	0
  7542  001290  6F74               	movwf	_flash_pages_written& (0+255),b
  7543                           
  7544                           ;bootloader.c: 271: start_from_byte_next = 0;
  7545  001292  0E00               	movlw	0
  7546  001294  6F8B               	movwf	_start_from_byte_next& (0+255),b
  7547                           
  7548                           ;bootloader.c: 273: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  7549  001296  0E40               	movlw	64
  7550  001298  0100               	movlb	0	; () banked
  7551  00129A  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7552                           
  7553                           ;bootloader.c: 274: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  7554  00129C  0E40               	movlw	64
  7555  00129E  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7556                           
  7557                           ;bootloader.c: 275: break;
  7558  0012A0  0012               	return	
  7559  0012A2                     l2495:
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;bootloader.c: 277: else if(return_value>0xFFFFFFF0)
  7563                           
  7564                           ; BSR set to: 0
  7565  0012A2  0EF1               	movlw	241
  7566  0012A4  5D97               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  7567  0012A6  0EFF               	movlw	255
  7568  0012A8  5998               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7569  0012AA  0EFF               	movlw	255
  7570  0012AC  5999               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7571  0012AE  0EFF               	movlw	255
  7572  0012B0  599A               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7573  0012B2  A0D8               	btfss	status,0,c
  7574  0012B4  D009               	goto	l2497
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;bootloader.c: 278: {;bootloader.c: 280: last_error = return_value & 0xF;
  7578  0012B6  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7579  0012B8  0B0F               	andlw	15
  7580  0012BA  0101               	movlb	1	; () banked
  7581  0012BC  6F8C               	movwf	_last_error& (0+255),b
  7582                           
  7583                           ; BSR set to: 1
  7584                           ;bootloader.c: 282: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7585  0012BE  0E50               	movlw	80
  7586  0012C0  0100               	movlb	0	; () banked
  7587  0012C2  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;bootloader.c: 283: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7591  0012C4  0E50               	movlw	80
  7592  0012C6  D7EB               	goto	L1
  7593  0012C8                     l2497:
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;bootloader.c: 286: else;bootloader.c: 287: {;bootloader.c: 289: hex_file_offset += retu
      +                          rn_value;
  7597                           
  7598                           ; BSR set to: 0
  7599  0012C8  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7600  0012CA  27D7               	addwf	_hex_file_offset& (0+255),f,b
  7601  0012CC  5198               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7602  0012CE  23D8               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7603  0012D0  5199               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7604  0012D2  23D9               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7605  0012D4  519A               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7606  0012D6  23DA               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7607                           
  7608                           ; BSR set to: 0
  7609                           
  7610                           ; BSR set to: 0
  7611                           
  7612                           ; BSR set to: 0
  7613  0012D8  2B96               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  7614  0012DA  D68B               	goto	l15862
  7615  0012DC                     __end_of__bootloader_verify_file:
  7616                           	opt stack 0
  7617                           tblptru	equ	0xFF8
  7618                           tblptrh	equ	0xFF7
  7619                           tblptrl	equ	0xFF6
  7620                           tablat	equ	0xFF5
  7621                           intcon	equ	0xFF2
  7622                           intcon2	equ	0xFF1
  7623                           intcon3	equ	0xFF0
  7624                           postinc0	equ	0xFEE
  7625                           wreg	equ	0xFE8
  7626                           postdec1	equ	0xFE5
  7627                           plusw1	equ	0xFE3
  7628                           fsr1h	equ	0xFE2
  7629                           fsr1l	equ	0xFE1
  7630                           postinc2	equ	0xFDE
  7631                           plusw2	equ	0xFDB
  7632                           fsr2h	equ	0xFDA
  7633                           fsr2l	equ	0xFD9
  7634                           status	equ	0xFD8
  7635                           
  7636 ;; *************** function __bootloader_program *****************
  7637 ;; Defined at:
  7638 ;;		line 294 in file "bootloader.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;		None
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;  root           32   28[BANK0 ] struct .
  7643 ;;  address32       4   64[BANK0 ] unsigned long 
  7644 ;;  return_value    4   60[BANK0 ] unsigned long 
  7645 ;;  page_to_writ    2   71[BANK0 ] unsigned int 
  7646 ;;  cntr            2   69[BANK0 ] unsigned int 
  7647 ;;  address_with    2   26[BANK0 ] unsigned int 
  7648 ;;  entry_page      2   24[BANK0 ] unsigned int 
  7649 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
  7650 ;;		 -> pageBuffer(1024), 
  7651 ;;  start_from_b    1   68[BANK0 ] unsigned char 
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  1    wreg      void 
  7654 ;; Registers used:
  7655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7662 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7663 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7664 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7665 ;;Total ram usage:       59 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    8
  7668 ;; This function calls:
  7669 ;;		__bootloader_check_address
  7670 ;;		_fat_get_file_information
  7671 ;;		_fat_read_from_file_fast
  7672 ;;		_internalFlash_addressWithinPage
  7673 ;;		_internalFlash_erasePage
  7674 ;;		_internalFlash_getBuffer
  7675 ;;		_internalFlash_pageFromAddress
  7676 ;;		_internalFlash_readPage
  7677 ;;		_internalFlash_writePage
  7678 ;;		_parseHexFileEntry
  7679 ;; This function is called by:
  7680 ;;		_bootloader_run
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           	psect	text29
  7685  00049C                     __ptext29:
  7686                           	opt stack 0
  7687  00049C                     __bootloader_program:
  7688                           	opt stack 21
  7689                           
  7690                           ;bootloader.c: 296: uint16_t cntr;;bootloader.c: 297: uint8_t* buffer;;bootloader.c: 298
      +                          : uint16_t entry_page;;bootloader.c: 299: uint16_t page_to_write = 0;
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;incstack = 0
  7694  00049C  0E00               	movlw	0
  7695  00049E  0100               	movlb	0	; () banked
  7696  0004A0  6FA8               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  7697  0004A2  0E00               	movlw	0
  7698  0004A4  6FA7               	movwf	__bootloader_program@page_to_write& (0+255),b
  7699                           
  7700                           ;bootloader.c: 300: uint8_t start_from_byte;;bootloader.c: 301: uint32_t address32;;boot
      +                          loader.c: 302: uint32_t return_value = 0;
  7701  0004A6  0E00               	movlw	0
  7702  0004A8  6F9C               	movwf	__bootloader_program@return_value& (0+255),b
  7703  0004AA  0E00               	movlw	0
  7704  0004AC  6F9D               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  7705  0004AE  0E00               	movlw	0
  7706  0004B0  6F9E               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  7707  0004B2  0E00               	movlw	0
  7708  0004B4  6F9F               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;bootloader.c: 303: uint16_t address_within_page;;bootloader.c: 304: rootEntry_t root;;b
      +                          ootloader.c: 306: if(hex_file_offset==0)
  7712  0004B6  51D7               	movf	_hex_file_offset& (0+255),w,b
  7713  0004B8  11D8               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7714  0004BA  11D9               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7715  0004BC  11DA               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7716  0004BE  A4D8               	btfss	status,2,c
  7717  0004C0  D010               	goto	l2502
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;bootloader.c: 307: {;bootloader.c: 309: fat_get_file_information(file_number, &root);
  7721  0004C2  0E7C               	movlw	low __bootloader_program@root
  7722  0004C4  6E30               	movwf	fat_get_file_information@data,c
  7723  0004C6  0E00               	movlw	high __bootloader_program@root
  7724  0004C8  6E31               	movwf	fat_get_file_information@data+1,c
  7725  0004CA  51FF               	movf	_file_number& (0+255),w,b
  7726  0004CC  EC0A  F042         	call	_fat_get_file_information
  7727                           
  7728                           ;bootloader.c: 310: fast_read_cluster = root.firstCluster;
  7729  0004D0  C096  F0FB         	movff	__bootloader_program@root+26,_fast_read_cluster
  7730  0004D4  C097  F0FC         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  7731                           
  7732                           ;bootloader.c: 311: fast_read_cluster_number = 0;
  7733  0004D8  0E00               	movlw	0
  7734  0004DA  0100               	movlb	0	; () banked
  7735  0004DC  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7736  0004DE  0E00               	movlw	0
  7737  0004E0  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  7738  0004E2                     l2502:
  7739                           
  7740                           ;bootloader.c: 316: {;bootloader.c: 321: if((hex_file_size-hex_file_offset)>=50)
  7741                           
  7742                           ; BSR set to: 0
  7743                           
  7744                           ;bootloader.c: 312: };bootloader.c: 315: while(1)
  7745                           
  7746                           ; BSR set to: 0
  7747  0004E2  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_program
  7748  0004E6  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7749  0004EA  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7750  0004EE  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7751  0004F2  0100               	movlb	0	; () banked
  7752  0004F4  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7753  0004F6  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7754  0004F8  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7755  0004FA  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7756  0004FC  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7757  0004FE  0E00               	movlw	0
  7758  000500  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7759  000502  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7760  000504  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7761  000506  0101               	movlb	1	; () banked
  7762  000508  514A               	movf	_hex_file_size& (0+255),w,b
  7763  00050A  0100               	movlb	0	; () banked
  7764  00050C  256E               	addwf	??__bootloader_program& (0+255),w,b
  7765  00050E  6F72               	movwf	(??__bootloader_program+4)& (0+255),b
  7766  000510  0101               	movlb	1	; () banked
  7767  000512  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7768  000514  0100               	movlb	0	; () banked
  7769  000516  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7770  000518  6F73               	movwf	(??__bootloader_program+5)& (0+255),b
  7771  00051A  0101               	movlb	1	; () banked
  7772  00051C  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7773  00051E  0100               	movlb	0	; () banked
  7774  000520  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7775  000522  6F74               	movwf	(??__bootloader_program+6)& (0+255),b
  7776  000524  0101               	movlb	1	; () banked
  7777  000526  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7778  000528  0100               	movlb	0	; () banked
  7779  00052A  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7780  00052C  6F75               	movwf	(??__bootloader_program+7)& (0+255),b
  7781  00052E  5175               	movf	(??__bootloader_program+7)& (0+255),w,b
  7782  000530  1174               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  7783  000532  1173               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  7784  000534  E104               	bnz	u13170
  7785  000536  0E32               	movlw	50
  7786  000538  5D72               	subwf	(??__bootloader_program+4)& (0+255),w,b
  7787  00053A  A0D8               	btfss	status,0,c
  7788  00053C  D01F               	goto	l2504
  7789  00053E                     u13170:
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;bootloader.c: 322: {;bootloader.c: 324: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7793  00053E  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7794  000542  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7795  000546  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7796  00054A  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7797  00054E  0E32               	movlw	50
  7798  000550  6E46               	movwf	fat_read_from_file_fast@length,c
  7799  000552  0E00               	movlw	0
  7800  000554  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7801  000556  0E00               	movlw	0
  7802  000558  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7803  00055A  0E00               	movlw	0
  7804  00055C  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7805  00055E  0E90               	movlw	low _file_buffer
  7806  000560  6E4A               	movwf	fat_read_from_file_fast@data,c
  7807  000562  0E02               	movlw	high _file_buffer
  7808  000564  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7809  000566  0EFB               	movlw	low _fast_read_cluster
  7810  000568  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7811  00056A  0E00               	movlw	high _fast_read_cluster
  7812  00056C  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7813  00056E  0EF9               	movlw	low _fast_read_cluster_number
  7814  000570  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7815  000572  0E00               	movlw	high _fast_read_cluster_number
  7816  000574  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7817  000576  EC9D  F013         	call	_fat_read_from_file_fast	;wreg free
  7818                           
  7819                           ;bootloader.c: 325: }
  7820  00057A  D03C               	goto	l2505
  7821  00057C                     l2504:
  7822                           
  7823                           ;bootloader.c: 326: else;bootloader.c: 327: {;bootloader.c: 329: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7824  00057C  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7825  000580  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7826  000584  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7827  000588  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7828  00058C  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_program
  7829  000590  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7830  000594  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7831  000598  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7832  00059C  0100               	movlb	0	; () banked
  7833  00059E  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7834  0005A0  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7835  0005A2  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7836  0005A4  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7837  0005A6  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7838  0005A8  0E00               	movlw	0
  7839  0005AA  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7840  0005AC  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7841  0005AE  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7842  0005B0  0101               	movlb	1	; () banked
  7843  0005B2  514A               	movf	_hex_file_size& (0+255),w,b
  7844  0005B4  0100               	movlb	0	; () banked
  7845  0005B6  256E               	addwf	??__bootloader_program& (0+255),w,b
  7846  0005B8  6E46               	movwf	fat_read_from_file_fast@length,c
  7847  0005BA  0101               	movlb	1	; () banked
  7848  0005BC  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7849  0005BE  0100               	movlb	0	; () banked
  7850  0005C0  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7851  0005C2  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7852  0005C4  0101               	movlb	1	; () banked
  7853  0005C6  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7854  0005C8  0100               	movlb	0	; () banked
  7855  0005CA  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7856  0005CC  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7857  0005CE  0101               	movlb	1	; () banked
  7858  0005D0  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7859  0005D2  0100               	movlb	0	; () banked
  7860  0005D4  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7861  0005D6  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7862  0005D8  0E90               	movlw	low _file_buffer
  7863  0005DA  6E4A               	movwf	fat_read_from_file_fast@data,c
  7864  0005DC  0E02               	movlw	high _file_buffer
  7865  0005DE  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7866  0005E0  0EFB               	movlw	low _fast_read_cluster
  7867  0005E2  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7868  0005E4  0E00               	movlw	high _fast_read_cluster
  7869  0005E6  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7870  0005E8  0EF9               	movlw	low _fast_read_cluster_number
  7871  0005EA  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7872  0005EC  0E00               	movlw	high _fast_read_cluster_number
  7873  0005EE  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7874  0005F0  EC9D  F013         	call	_fat_read_from_file_fast	;wreg free
  7875  0005F4                     l2505:
  7876                           
  7877                           ;bootloader.c: 330: };bootloader.c: 333: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7878  0005F4  0E90               	movlw	low _file_buffer
  7879  0005F6  6E0C               	movwf	parseHexFileEntry@data,c
  7880  0005F8  0E02               	movlw	high _file_buffer
  7881  0005FA  6E0D               	movwf	parseHexFileEntry@data+1,c
  7882  0005FC  0E00               	movlw	0
  7883  0005FE  6E0E               	movwf	parseHexFileEntry@offset,c
  7884  000600  0E00               	movlw	0
  7885  000602  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7886  000604  0E00               	movlw	0
  7887  000606  6E10               	movwf	parseHexFileEntry@offset+2,c
  7888  000608  0E00               	movlw	0
  7889  00060A  6E11               	movwf	parseHexFileEntry@offset+3,c
  7890  00060C  0E93               	movlw	low _hex_file_entry
  7891  00060E  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7892  000610  0E01               	movlw	high _hex_file_entry
  7893  000612  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7894  000614  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7895  000618  C00C  F09C         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  7896  00061C  C00D  F09D         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  7897  000620  C00E  F09E         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  7898  000624  C00F  F09F         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  7899                           
  7900                           ;bootloader.c: 336: ++hex_file_entries;
  7901  000628  0101               	movlb	1	; () banked
  7902  00062A  4B78               	infsnz	_hex_file_entries& (0+255),f,b
  7903  00062C  2B79               	incf	(_hex_file_entries+1)& (0+255),f,b
  7904                           
  7905                           ; BSR set to: 1
  7906                           ;bootloader.c: 339: if(return_value>RecordErrorNoError)
  7907  00062E  0EF1               	movlw	241
  7908  000630  0100               	movlb	0	; () banked
  7909  000632  5D9C               	subwf	__bootloader_program@return_value& (0+255),w,b
  7910  000634  0EFF               	movlw	255
  7911  000636  599D               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  7912  000638  0EFF               	movlw	255
  7913  00063A  599E               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  7914  00063C  0EFF               	movlw	255
  7915  00063E  599F               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  7916  000640  A0D8               	btfss	status,0,c
  7917  000642  D005               	goto	l2506
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;bootloader.c: 340: {;bootloader.c: 342: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  7921  000644  0E50               	movlw	80
  7922  000646  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7923                           
  7924                           ;bootloader.c: 343: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7925  000648  0E50               	movlw	80
  7926  00064A  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;bootloader.c: 344: return;
  7930  00064C  0012               	return	
  7931  00064E                     l2506:
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;bootloader.c: 346: else;bootloader.c: 347: {;bootloader.c: 349: hex_file_offset += retu
      +                          rn_value;
  7935                           
  7936                           ; BSR set to: 0
  7937  00064E  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  7938  000650  27D7               	addwf	_hex_file_offset& (0+255),f,b
  7939  000652  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7940  000654  23D8               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7941  000656  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7942  000658  23D9               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7943  00065A  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7944  00065C  23DA               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;bootloader.c: 350: };bootloader.c: 352: switch(hex_file_entry.recordType)
  7948  00065E  D0FA               	goto	l2509
  7949  000660                     
  7950                           ;bootloader.c: 358: extended_linear_address = hex_file_entry.data[0];
  7951                           
  7952                           ; BSR set to: 0
  7953  000660  0101               	movlb	1	; () banked
  7954  000662  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  7955  000664  6F46               	movwf	_extended_linear_address& (0+255),b
  7956  000666  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  7957  000668  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  7958  00066A  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  7959                           
  7960                           ; BSR set to: 1
  7961                           ;bootloader.c: 359: extended_linear_address <<= 8;
  7962  00066C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7963  000670  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7964  000674  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7965  000678  6B46               	clrf	_extended_linear_address& (0+255),b
  7966                           
  7967                           ; BSR set to: 1
  7968                           ;bootloader.c: 360: extended_linear_address |= hex_file_entry.data[1];
  7969  00067A  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  7970  00067C  1346               	iorwf	_extended_linear_address& (0+255),f,b
  7971                           
  7972                           ; BSR set to: 1
  7973                           ;bootloader.c: 361: extended_linear_address <<= 8;
  7974  00067E  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7975  000682  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7976  000686  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7977  00068A  6B46               	clrf	_extended_linear_address& (0+255),b
  7978                           
  7979                           ; BSR set to: 1
  7980                           ;bootloader.c: 362: extended_linear_address <<= 8;
  7981  00068C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7982  000690  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7983  000694  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7984  000698  6B46               	clrf	_extended_linear_address& (0+255),b
  7985                           
  7986                           ; BSR set to: 1
  7987                           ;bootloader.c: 364: break;
  7988                           
  7989                           ;bootloader.c: 363: continue;
  7990  00069A  D723               	goto	l2502
  7991  00069C                     l2513:
  7992                           
  7993                           ; BSR set to: 1
  7994                           ;bootloader.c: 369: start_from_byte = start_from_byte_next;
  7995  00069C  C18B  F0A4         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  7996                           
  7997                           ; BSR set to: 1
  7998                           ;bootloader.c: 371: start_from_byte_next = 0;
  7999  0006A0  0E00               	movlw	0
  8000  0006A2  6F8B               	movwf	_start_from_byte_next& (0+255),b
  8001                           
  8002                           ; BSR set to: 1
  8003                           ;bootloader.c: 374: address32 = extended_linear_address + hex_file_entry.address;
  8004  0006A4  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  8005  0006A6  2546               	addwf	_extended_linear_address& (0+255),w,b
  8006  0006A8  0100               	movlb	0	; () banked
  8007  0006AA  6FA0               	movwf	__bootloader_program@address32& (0+255),b
  8008  0006AC  0101               	movlb	1	; () banked
  8009  0006AE  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  8010  0006B0  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  8011  0006B2  0100               	movlb	0	; () banked
  8012  0006B4  6FA1               	movwf	(__bootloader_program@address32+1)& (0+255),b
  8013  0006B6  0E00               	movlw	0
  8014  0006B8  0101               	movlb	1	; () banked
  8015  0006BA  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  8016  0006BC  0100               	movlb	0	; () banked
  8017  0006BE  6FA2               	movwf	(__bootloader_program@address32+2)& (0+255),b
  8018  0006C0  0E00               	movlw	0
  8019  0006C2  0101               	movlb	1	; () banked
  8020  0006C4  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  8021  0006C6  0100               	movlb	0	; () banked
  8022  0006C8  6FA3               	movwf	(__bootloader_program@address32+3)& (0+255),b
  8023                           
  8024                           ; BSR set to: 0
  8025                           ;bootloader.c: 375: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  8026  0006CA  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  8027  0006CC  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8028  0006CE  6E01               	movwf	internalFlash_pageFromAddress@address,c
  8029  0006D0  0E00               	movlw	0
  8030  0006D2  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8031  0006D4  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  8032  0006D6  0E00               	movlw	0
  8033  0006D8  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8034  0006DA  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  8035  0006DC  0E00               	movlw	0
  8036  0006DE  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8037  0006E0  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  8038  0006E2  EC5D  F04D         	call	_internalFlash_pageFromAddress	;wreg free
  8039  0006E6  C001  F078         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  8040  0006EA  C002  F079         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  8041                           
  8042                           ;bootloader.c: 378: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  8043  0006EE  0100               	movlb	0	; () banked
  8044  0006F0  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  8045  0006F2  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8046  0006F4  6E01               	movwf	__bootloader_check_address@address,c
  8047  0006F6  0E00               	movlw	0
  8048  0006F8  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8049  0006FA  6E02               	movwf	__bootloader_check_address@address+1,c
  8050  0006FC  0E00               	movlw	0
  8051  0006FE  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8052  000700  6E03               	movwf	__bootloader_check_address@address+2,c
  8053  000702  0E00               	movlw	0
  8054  000704  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8055  000706  6E04               	movwf	__bootloader_check_address@address+3,c
  8056  000708  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  8057  00070A  0800               	sublw	0
  8058  00070C  0101               	movlb	1	; () banked
  8059  00070E  2593               	addwf	_hex_file_entry& (0+255),w,b
  8060  000710  6E05               	movwf	__bootloader_check_address@dataLength,c
  8061  000712  EC28  F035         	call	__bootloader_check_address	;wreg free
  8062  000716  0900               	iorlw	0
  8063  000718  A4D8               	btfss	status,2,c
  8064  00071A  D6E3               	goto	l2502
  8065                           
  8066                           ;bootloader.c: 381: };bootloader.c: 383: if(page_to_write==0)
  8067                           
  8068                           ;bootloader.c: 379: {;bootloader.c: 380: break;
  8069  00071C  0100               	movlb	0	; () banked
  8070  00071E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  8071  000720  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  8072  000722  A4D8               	btfss	status,2,c
  8073  000724  D010               	goto	l2515
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;bootloader.c: 384: {;bootloader.c: 388: page_to_write = entry_page;
  8077  000726  C078  F0A7         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  8078  00072A  C079  F0A8         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;bootloader.c: 389: internalFlash_readPage(page_to_write);
  8082  00072E  C0A7  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  8083  000732  C0A8  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  8084  000736  EC38  F049         	call	_internalFlash_readPage	;wreg free
  8085                           
  8086                           ;bootloader.c: 390: buffer = internalFlash_getBuffer();
  8087  00073A  EC3B  F04E         	call	_internalFlash_getBuffer	;wreg free
  8088  00073E  C001  F076         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  8089  000742  C002  F077         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  8090  000746                     l2515:
  8091                           
  8092                           ;bootloader.c: 391: };bootloader.c: 393: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  8093  000746  C0A4  F0A5         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  8094  00074A  0100               	movlb	0	; () banked
  8095  00074C  6BA6               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  8096  00074E  D05D               	goto	l2516
  8097  000750                     
  8098                           ; BSR set to: 0
  8099                           ;bootloader.c: 394: {;bootloader.c: 397: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  8100                           
  8101                           ; BSR set to: 0
  8102  000750  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  8103  000752  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8104  000754  6E01               	movwf	internalFlash_pageFromAddress@address,c
  8105  000756  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  8106  000758  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8107  00075A  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  8108  00075C  0E00               	movlw	0
  8109  00075E  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8110  000760  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  8111  000762  0E00               	movlw	0
  8112  000764  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8113  000766  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  8114  000768  EC5D  F04D         	call	_internalFlash_pageFromAddress	;wreg free
  8115  00076C  0100               	movlb	0	; () banked
  8116  00076E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  8117  000770  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  8118  000772  E12A               	bnz	l15994
  8119  000774  51A8               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  8120  000776  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  8121  000778  A4D8               	btfss	status,2,c
  8122  00077A  D026               	goto	l2518
  8123                           
  8124                           ; BSR set to: 0
  8125                           ;bootloader.c: 398: {;bootloader.c: 399: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  8126  00077C  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  8127  00077E  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8128  000780  6E09               	movwf	internalFlash_addressWithinPage@address,c
  8129  000782  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  8130  000784  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8131  000786  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  8132  000788  0E00               	movlw	0
  8133  00078A  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8134  00078C  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  8135  00078E  0E00               	movlw	0
  8136  000790  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8137  000792  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  8138  000794  C0A7  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  8139  000798  C0A8  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  8140  00079C  ECB5  F044         	call	_internalFlash_addressWithinPage	;wreg free
  8141  0007A0  C009  F07A         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  8142  0007A4  C00A  F07B         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  8143                           
  8144                           ;bootloader.c: 400: buffer[address_within_page] = hex_file_entry.data[cntr];
  8145  0007A8  0E98               	movlw	low (_hex_file_entry+5)
  8146  0007AA  0100               	movlb	0	; () banked
  8147  0007AC  25A5               	addwf	__bootloader_program@cntr& (0+255),w,b
  8148  0007AE  6ED9               	movwf	fsr2l,c
  8149  0007B0  0E01               	movlw	high (_hex_file_entry+5)
  8150  0007B2  21A6               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  8151  0007B4  6EDA               	movwf	fsr2h,c
  8152  0007B6  517A               	movf	__bootloader_program@address_within_page& (0+255),w,b
  8153  0007B8  2576               	addwf	__bootloader_program@buffer& (0+255),w,b
  8154  0007BA  6EE1               	movwf	fsr1l,c
  8155  0007BC  517B               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  8156  0007BE  2177               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  8157  0007C0  6EE2               	movwf	fsr1h,c
  8158  0007C2  CFDF FFE7          	movff	indf2,indf1
  8159                           
  8160                           ;bootloader.c: 401: }
  8161  0007C6  D01E               	goto	l2519
  8162  0007C8                     l2518:
  8163  0007C8                     l15994:
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;bootloader.c: 402: else;bootloader.c: 403: {;bootloader.c: 405: hex_file_offset -= retu
      +                          rn_value;
  8167  0007C8  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  8168  0007CA  5FD7               	subwf	_hex_file_offset& (0+255),f,b
  8169  0007CC  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  8170  0007CE  5BD8               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  8171  0007D0  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  8172  0007D2  5BD9               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  8173  0007D4  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  8174  0007D6  5BDA               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  8175                           
  8176                           ; BSR set to: 0
  8177                           ;bootloader.c: 406: --hex_file_entries;
  8178  0007D8  0101               	movlb	1	; () banked
  8179  0007DA  0778               	decf	_hex_file_entries& (0+255),f,b
  8180  0007DC  A0D8               	btfss	status,0,c
  8181  0007DE  0779               	decf	(_hex_file_entries+1)& (0+255),f,b
  8182                           
  8183                           ; BSR set to: 1
  8184                           ;bootloader.c: 408: start_from_byte_next = cntr;
  8185  0007E0  C0A5  F18B         	movff	__bootloader_program@cntr,_start_from_byte_next
  8186                           
  8187                           ; BSR set to: 1
  8188                           ;bootloader.c: 410: internalFlash_erasePage(page_to_write);
  8189  0007E4  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  8190  0007E8  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  8191  0007EC  ECEA  F042         	call	_internalFlash_erasePage	;wreg free
  8192                           
  8193                           ;bootloader.c: 411: internalFlash_writePage(page_to_write);
  8194  0007F0  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  8195  0007F4  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  8196  0007F8  EC1A  F039         	call	_internalFlash_writePage	;wreg free
  8197                           
  8198                           ;bootloader.c: 412: ++flash_pages_written;
  8199  0007FC  0101               	movlb	1	; () banked
  8200  0007FE  4B74               	infsnz	_flash_pages_written& (0+255),f,b
  8201  000800  2B75               	incf	(_flash_pages_written+1)& (0+255),f,b
  8202                           
  8203                           ; BSR set to: 1
  8204                           ;bootloader.c: 414: return;
  8205  000802  0012               	return	
  8206  000804                     l2519:
  8207                           
  8208                           ; BSR set to: 1
  8209  000804  0100               	movlb	0	; () banked
  8210  000806  4BA5               	infsnz	__bootloader_program@cntr& (0+255),f,b
  8211  000808  2BA6               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  8212  00080A                     l2516:
  8213                           
  8214                           ; BSR set to: 0
  8215                           
  8216                           ; BSR set to: 0
  8217  00080A  0101               	movlb	1	; () banked
  8218  00080C  5193               	movf	_hex_file_entry& (0+255),w,b
  8219  00080E  0100               	movlb	0	; () banked
  8220  000810  5DA5               	subwf	__bootloader_program@cntr& (0+255),w,b
  8221  000812  0101               	movlb	1	; () banked
  8222  000814  5194               	movf	(_hex_file_entry+1)& (0+255),w,b
  8223  000816  0100               	movlb	0	; () banked
  8224  000818  59A6               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  8225  00081A  B0D8               	btfsc	status,0,c
  8226  00081C  D662               	goto	l2502
  8227  00081E  D798               	goto	l2517
  8228  000820                     
  8229                           ;bootloader.c: 422: if(page_to_write!=0)
  8230                           
  8231                           ; BSR set to: 0
  8232  000820  0100               	movlb	0	; () banked
  8233  000822  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  8234  000824  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  8235  000826  B4D8               	btfsc	status,2,c
  8236  000828  0012               	return	
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;bootloader.c: 423: {;bootloader.c: 425: internalFlash_erasePage(page_to_write);
  8240  00082A  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  8241  00082E  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  8242  000832  ECEA  F042         	call	_internalFlash_erasePage	;wreg free
  8243                           
  8244                           ;bootloader.c: 426: internalFlash_writePage(page_to_write);
  8245  000836  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  8246  00083A  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  8247  00083E  EC1A  F039         	call	_internalFlash_writePage	;wreg free
  8248                           
  8249                           ;bootloader.c: 427: ++flash_pages_written;
  8250  000842  0101               	movlb	1	; () banked
  8251  000844  4B74               	infsnz	_flash_pages_written& (0+255),f,b
  8252  000846  2B75               	incf	(_flash_pages_written+1)& (0+255),f,b
  8253                           
  8254                           ; BSR set to: 1
  8255                           ;bootloader.c: 429: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  8256  000848  0E70               	movlw	112
  8257  00084A  0100               	movlb	0	; () banked
  8258  00084C  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;bootloader.c: 430: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  8262  00084E  0E70               	movlw	112
  8263  000850  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;bootloader.c: 431: };bootloader.c: 433: return;
  8267                           
  8268                           ; BSR set to: 0
  8269  000852  0012               	return	
  8270  000854                     l2509:
  8271                           
  8272                           ; BSR set to: 0
  8273                           
  8274                           ; BSR set to: 0
  8275  000854  0101               	movlb	1	; () banked
  8276  000856  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  8277                           
  8278                           ; Switch size 1, requested type "space"
  8279                           ; Number of cases is 3, Range of values is 0 to 4
  8280                           ; switch strategies available:
  8281                           ; Name         Instructions Cycles
  8282                           ; simple_byte           10     6 (average)
  8283                           ;	Chosen strategy is simple_byte
  8284  000858  0A00               	xorlw	0	; case 0
  8285  00085A  B4D8               	btfsc	status,2,c
  8286  00085C  D71F               	goto	l2513
  8287  00085E  0A01               	xorlw	1	; case 1
  8288  000860  B4D8               	btfsc	status,2,c
  8289  000862  D7DE               	goto	l2521
  8290  000864  0A05               	xorlw	5	; case 4
  8291  000866  B4D8               	btfsc	status,2,c
  8292  000868  D6FB               	goto	l2510
  8293                           
  8294                           ; BSR set to: 1
  8295                           
  8296                           ; BSR set to: 1
  8297  00086A  D63B               	goto	l2502
  8298  00086C                     __end_of__bootloader_program:
  8299                           	opt stack 0
  8300                           tblptru	equ	0xFF8
  8301                           tblptrh	equ	0xFF7
  8302                           tblptrl	equ	0xFF6
  8303                           tablat	equ	0xFF5
  8304                           intcon	equ	0xFF2
  8305                           intcon2	equ	0xFF1
  8306                           intcon3	equ	0xFF0
  8307                           postinc0	equ	0xFEE
  8308                           wreg	equ	0xFE8
  8309                           indf1	equ	0xFE7
  8310                           postdec1	equ	0xFE5
  8311                           plusw1	equ	0xFE3
  8312                           fsr1h	equ	0xFE2
  8313                           fsr1l	equ	0xFE1
  8314                           indf2	equ	0xFDF
  8315                           postinc2	equ	0xFDE
  8316                           plusw2	equ	0xFDB
  8317                           fsr2h	equ	0xFDA
  8318                           fsr2l	equ	0xFD9
  8319                           status	equ	0xFD8
  8320                           
  8321 ;; *************** function _parseHexFileEntry *****************
  8322 ;; Defined at:
  8323 ;;		line 59 in file "hex.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  data            2   11[COMRAM] PTR unsigned char 
  8326 ;;		 -> file_buffer(50), 
  8327 ;;  offset          4   13[COMRAM] unsigned long 
  8328 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  8329 ;;		 -> hex_file_entry(23), 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  i               1   27[COMRAM] unsigned char 
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  4   11[COMRAM] unsigned long 
  8334 ;; Registers used:
  8335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8341 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;Total ram usage:       17 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:    2
  8348 ;; This function calls:
  8349 ;;		_hexCharsToUint16
  8350 ;;		_hexCharsToUint8
  8351 ;; This function is called by:
  8352 ;;		__bootloader_verify_file
  8353 ;;		__bootloader_program
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text30
  8358  000020                     __ptext30:
  8359                           	opt stack 0
  8360  000020                     _parseHexFileEntry:
  8361                           	opt stack 26
  8362                           
  8363                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  8364                           
  8365                           ;incstack = 0
  8366  000020  500E               	movf	parseHexFileEntry@offset,w,c
  8367  000022  240C               	addwf	parseHexFileEntry@data,w,c
  8368  000024  6ED9               	movwf	fsr2l,c
  8369  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  8370  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8371  00002A  6EDA               	movwf	fsr2h,c
  8372  00002C  0E3A               	movlw	58
  8373  00002E  18DE               	xorwf	postinc2,w,c
  8374  000030  B4D8               	btfsc	status,2,c
  8375  000032  D005               	goto	l2363
  8376                           
  8377                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  8378  000034  680C               	setf	?_parseHexFileEntry,c
  8379  000036  680D               	setf	?_parseHexFileEntry+1,c
  8380  000038  680E               	setf	?_parseHexFileEntry+2,c
  8381  00003A  680F               	setf	?_parseHexFileEntry+3,c
  8382  00003C  0012               	return	
  8383  00003E                     l2363:
  8384                           
  8385                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  8386  00003E  0E02               	movlw	2
  8387  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  8388  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8389  000044  0E00               	movlw	0
  8390  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8391  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8392  00004A  5014               	movf	??_parseHexFileEntry,w,c
  8393  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  8394  00004E  6ED9               	movwf	fsr2l,c
  8395  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  8396  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8397  000054  6EDA               	movwf	fsr2h,c
  8398  000056  50DF               	movf	indf2,w,c
  8399  000058  6E03               	movwf	hexCharsToUint8@c2,c
  8400  00005A  0E01               	movlw	1
  8401  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  8402  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8403  000060  0E00               	movlw	0
  8404  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8405  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8406  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  8407  000068  240C               	addwf	parseHexFileEntry@data,w,c
  8408  00006A  6ED9               	movwf	fsr2l,c
  8409  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  8410  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8411  000070  6EDA               	movwf	fsr2h,c
  8412  000072  50DF               	movf	indf2,w,c
  8413  000074  EC4F  F04D         	call	_hexCharsToUint8
  8414  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8415  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  8416  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8417  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8418  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  8419  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  8420                           
  8421                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  8422  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8423  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8424  000094  0E01               	movlw	1
  8425  000096  50DB               	movf	plusw2,w,c
  8426  000098  E104               	bnz	u12150
  8427  00009A  0E11               	movlw	17
  8428  00009C  5CDE               	subwf	postinc2,w,c
  8429  00009E  A0D8               	btfss	status,0,c
  8430  0000A0  D009               	goto	l2365
  8431  0000A2                     u12150:
  8432                           
  8433                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  8434  0000A2  0EFC               	movlw	252
  8435  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  8436  0000A6  0EFF               	movlw	255
  8437  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  8438  0000AA  0EFF               	movlw	255
  8439  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  8440  0000AE  0EFF               	movlw	255
  8441  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  8442  0000B2  0012               	return	
  8443  0000B4                     l2365:
  8444                           
  8445                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  8446  0000B4  0E04               	movlw	4
  8447  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  8448  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8449  0000BA  0E00               	movlw	0
  8450  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8451  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8452  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  8453  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  8454  0000C4  6ED9               	movwf	fsr2l,c
  8455  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  8456  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8457  0000CA  6EDA               	movwf	fsr2h,c
  8458  0000CC  50DF               	movf	indf2,w,c
  8459  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  8460  0000D0  0E05               	movlw	5
  8461  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  8462  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8463  0000D6  0E00               	movlw	0
  8464  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8465  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8466  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  8467  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  8468  0000E0  6ED9               	movwf	fsr2l,c
  8469  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  8470  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8471  0000E6  6EDA               	movwf	fsr2h,c
  8472  0000E8  50DF               	movf	indf2,w,c
  8473  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  8474  0000EC  0E06               	movlw	6
  8475  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  8476  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8477  0000F2  0E00               	movlw	0
  8478  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8479  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8480  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  8481  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  8482  0000FC  6ED9               	movwf	fsr2l,c
  8483  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  8484  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8485  000102  6EDA               	movwf	fsr2h,c
  8486  000104  50DF               	movf	indf2,w,c
  8487  000106  6E05               	movwf	hexCharsToUint16@c4,c
  8488  000108  0E03               	movlw	3
  8489  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  8490  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  8491  00010E  0E00               	movlw	0
  8492  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8493  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  8494  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  8495  000116  240C               	addwf	parseHexFileEntry@data,w,c
  8496  000118  6ED9               	movwf	fsr2l,c
  8497  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  8498  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8499  00011E  6EDA               	movwf	fsr2h,c
  8500  000120  50DF               	movf	indf2,w,c
  8501  000122  EC43  F042         	call	_hexCharsToUint16
  8502  000126  EE20 F002          	lfsr	2,2
  8503  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8504  00012C  26D9               	addwf	fsr2l,f,c
  8505  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8506  000130  22DA               	addwfc	fsr2h,f,c
  8507  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  8508  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  8509                           
  8510                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  8511  00013A  EE20 F004          	lfsr	2,4
  8512  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8513  000140  26D9               	addwf	fsr2l,f,c
  8514  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8515  000144  22DA               	addwfc	fsr2h,f,c
  8516  000146  0E08               	movlw	8
  8517  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  8518  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8519  00014C  0E00               	movlw	0
  8520  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8521  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8522  000152  5014               	movf	??_parseHexFileEntry,w,c
  8523  000154  240C               	addwf	parseHexFileEntry@data,w,c
  8524  000156  6EE1               	movwf	fsr1l,c
  8525  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  8526  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8527  00015C  6EE2               	movwf	fsr1h,c
  8528  00015E  50E7               	movf	indf1,w,c
  8529  000160  6E03               	movwf	hexCharsToUint8@c2,c
  8530  000162  0E07               	movlw	7
  8531  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  8532  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8533  000168  0E00               	movlw	0
  8534  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8535  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8536  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  8537  000170  240C               	addwf	parseHexFileEntry@data,w,c
  8538  000172  6EE1               	movwf	fsr1l,c
  8539  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  8540  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8541  000178  6EE2               	movwf	fsr1h,c
  8542  00017A  50E7               	movf	indf1,w,c
  8543  00017C  EC4F  F04D         	call	_hexCharsToUint8
  8544  000180  6EDF               	movwf	indf2,c
  8545                           
  8546                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  8547  000182  0E00               	movlw	0
  8548  000184  6E1C               	movwf	parseHexFileEntry@i,c
  8549  000186  D03D               	goto	l2366
  8550  000188                     
  8551                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  8552  000188  501C               	movf	parseHexFileEntry@i,w,c
  8553  00018A  0D01               	mullw	1
  8554  00018C  0E05               	movlw	5
  8555  00018E  26F3               	addwf	prodl,f,c
  8556  000190  0E00               	movlw	0
  8557  000192  22F4               	addwfc	prodh,f,c
  8558  000194  50F3               	movf	prodl,w,c
  8559  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8560  000198  6ED9               	movwf	fsr2l,c
  8561  00019A  50F4               	movf	prodh,w,c
  8562  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8563  00019E  6EDA               	movwf	fsr2h,c
  8564  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  8565  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8566  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8567  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  8568  0001AA  0E00               	movlw	0
  8569  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8570  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  8571  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  8572  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  8573  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8574  0001B6  0E0A               	movlw	10
  8575  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  8576  0001BA  0E00               	movlw	0
  8577  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8578  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  8579  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  8580  0001C2  6EE1               	movwf	fsr1l,c
  8581  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  8582  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8583  0001C8  6EE2               	movwf	fsr1h,c
  8584  0001CA  50E7               	movf	indf1,w,c
  8585  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  8586  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  8587  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8588  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8589  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8590  0001D8  0E00               	movlw	0
  8591  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8592  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  8593  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  8594  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  8595  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8596  0001E4  0E09               	movlw	9
  8597  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8598  0001E8  0E00               	movlw	0
  8599  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8600  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  8601  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  8602  0001F0  6EE1               	movwf	fsr1l,c
  8603  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  8604  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8605  0001F6  6EE2               	movwf	fsr1h,c
  8606  0001F8  50E7               	movf	indf1,w,c
  8607  0001FA  EC4F  F04D         	call	_hexCharsToUint8
  8608  0001FE  6EDF               	movwf	indf2,c
  8609  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  8610  000202                     l2366:
  8611  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8612  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8613  00020A  501C               	movf	parseHexFileEntry@i,w,c
  8614  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8615  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8616  000210  50DE               	movf	postinc2,w,c
  8617  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8618  000214  50DE               	movf	postinc2,w,c
  8619  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8620  000218  A0D8               	btfss	status,0,c
  8621  00021A  D7B6               	goto	l2367
  8622                           
  8623                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  8624  00021C  EE20 F015          	lfsr	2,21
  8625  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8626  000222  26D9               	addwf	fsr2l,f,c
  8627  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8628  000226  22DA               	addwfc	fsr2h,f,c
  8629  000228  501C               	movf	parseHexFileEntry@i,w,c
  8630  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8631  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8632  000230  2614               	addwf	??_parseHexFileEntry,f,c
  8633  000232  0E00               	movlw	0
  8634  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8635  000236  500E               	movf	parseHexFileEntry@offset,w,c
  8636  000238  2614               	addwf	??_parseHexFileEntry,f,c
  8637  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8638  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8639  00023E  0E0A               	movlw	10
  8640  000240  2614               	addwf	??_parseHexFileEntry,f,c
  8641  000242  0E00               	movlw	0
  8642  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8643  000246  5014               	movf	??_parseHexFileEntry,w,c
  8644  000248  240C               	addwf	parseHexFileEntry@data,w,c
  8645  00024A  6EE1               	movwf	fsr1l,c
  8646  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  8647  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8648  000250  6EE2               	movwf	fsr1h,c
  8649  000252  50E7               	movf	indf1,w,c
  8650  000254  6E03               	movwf	hexCharsToUint8@c2,c
  8651  000256  501C               	movf	parseHexFileEntry@i,w,c
  8652  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8653  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8654  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8655  000260  0E00               	movlw	0
  8656  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8657  000264  500E               	movf	parseHexFileEntry@offset,w,c
  8658  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  8659  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  8660  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8661  00026C  0E09               	movlw	9
  8662  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8663  000270  0E00               	movlw	0
  8664  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8665  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  8666  000276  240C               	addwf	parseHexFileEntry@data,w,c
  8667  000278  6EE1               	movwf	fsr1l,c
  8668  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  8669  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8670  00027E  6EE2               	movwf	fsr1h,c
  8671  000280  50E7               	movf	indf1,w,c
  8672  000282  EC4F  F04D         	call	_hexCharsToUint8
  8673  000286  6EDF               	movwf	indf2,c
  8674                           
  8675                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  8676  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8677  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8678  000290  EE10 F016          	lfsr	1,22
  8679  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8680  000296  26E1               	addwf	fsr1l,f,c
  8681  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8682  00029A  22E2               	addwfc	fsr1h,f,c
  8683  00029C  CFDF FFE7          	movff	indf2,indf1
  8684                           
  8685                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  8686  0002A0  EE20 F002          	lfsr	2,2
  8687  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8688  0002A6  26D9               	addwf	fsr2l,f,c
  8689  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8690  0002AA  22DA               	addwfc	fsr2h,f,c
  8691  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  8692  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  8693  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  8694  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  8695  0002BA  EE20 F016          	lfsr	2,22
  8696  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8697  0002C0  26D9               	addwf	fsr2l,f,c
  8698  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8699  0002C4  22DA               	addwfc	fsr2h,f,c
  8700  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  8701  0002C8  26DF               	addwf	indf2,f,c
  8702                           
  8703                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  8704  0002CA  EE20 F002          	lfsr	2,2
  8705  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8706  0002D0  26D9               	addwf	fsr2l,f,c
  8707  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8708  0002D4  22DA               	addwfc	fsr2h,f,c
  8709  0002D6  50DF               	movf	indf2,w,c
  8710  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8711  0002DA  EE20 F016          	lfsr	2,22
  8712  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8713  0002E0  26D9               	addwf	fsr2l,f,c
  8714  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8715  0002E4  22DA               	addwfc	fsr2h,f,c
  8716  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  8717  0002E8  26DF               	addwf	indf2,f,c
  8718                           
  8719                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  8720  0002EA  EE20 F004          	lfsr	2,4
  8721  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8722  0002F0  26D9               	addwf	fsr2l,f,c
  8723  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8724  0002F4  22DA               	addwfc	fsr2h,f,c
  8725  0002F6  50DF               	movf	indf2,w,c
  8726  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8727  0002FA  EE20 F016          	lfsr	2,22
  8728  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8729  000300  26D9               	addwf	fsr2l,f,c
  8730  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8731  000304  22DA               	addwfc	fsr2h,f,c
  8732  000306  5014               	movf	??_parseHexFileEntry,w,c
  8733  000308  26DF               	addwf	indf2,f,c
  8734                           
  8735                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  8736  00030A  0E00               	movlw	0
  8737  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  8738  00030E  D017               	goto	l2369
  8739  000310                     
  8740                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  8741  000310  501C               	movf	parseHexFileEntry@i,w,c
  8742  000312  0D01               	mullw	1
  8743  000314  0E05               	movlw	5
  8744  000316  26F3               	addwf	prodl,f,c
  8745  000318  0E00               	movlw	0
  8746  00031A  22F4               	addwfc	prodh,f,c
  8747  00031C  50F3               	movf	prodl,w,c
  8748  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8749  000320  6ED9               	movwf	fsr2l,c
  8750  000322  50F4               	movf	prodh,w,c
  8751  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8752  000326  6EDA               	movwf	fsr2h,c
  8753  000328  50DF               	movf	indf2,w,c
  8754  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8755  00032C  EE20 F016          	lfsr	2,22
  8756  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8757  000332  26D9               	addwf	fsr2l,f,c
  8758  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8759  000336  22DA               	addwfc	fsr2h,f,c
  8760  000338  5014               	movf	??_parseHexFileEntry,w,c
  8761  00033A  26DF               	addwf	indf2,f,c
  8762  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  8763  00033E                     l2369:
  8764  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8765  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8766  000346  501C               	movf	parseHexFileEntry@i,w,c
  8767  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8768  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8769  00034C  50DE               	movf	postinc2,w,c
  8770  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8771  000350  50DE               	movf	postinc2,w,c
  8772  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8773  000354  A0D8               	btfss	status,0,c
  8774  000356  D7DC               	goto	l2370
  8775                           
  8776                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  8777  000358  EE20 F015          	lfsr	2,21
  8778  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8779  00035E  26D9               	addwf	fsr2l,f,c
  8780  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8781  000362  22DA               	addwfc	fsr2h,f,c
  8782  000364  50DF               	movf	indf2,w,c
  8783  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8784  000368  EE20 F016          	lfsr	2,22
  8785  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8786  00036E  26D9               	addwf	fsr2l,f,c
  8787  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8788  000372  22DA               	addwfc	fsr2h,f,c
  8789  000374  5014               	movf	??_parseHexFileEntry,w,c
  8790  000376  26DF               	addwf	indf2,f,c
  8791                           
  8792                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  8793  000378  EE20 F016          	lfsr	2,22
  8794  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8795  00037E  26D9               	addwf	fsr2l,f,c
  8796  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8797  000382  22DA               	addwfc	fsr2h,f,c
  8798  000384  50DF               	movf	indf2,w,c
  8799  000386  B4D8               	btfsc	status,2,c
  8800  000388  D009               	goto	l2372
  8801                           
  8802                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  8803  00038A  0EFE               	movlw	254
  8804  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  8805  00038E  0EFF               	movlw	255
  8806  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  8807  000392  0EFF               	movlw	255
  8808  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  8809  000396  0EFF               	movlw	255
  8810  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  8811  00039A  0012               	return	
  8812  00039C                     l2372:
  8813                           
  8814                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  8815  00039C  EE20 F004          	lfsr	2,4
  8816  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8817  0003A2  26D9               	addwf	fsr2l,f,c
  8818  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8819  0003A6  22DA               	addwfc	fsr2h,f,c
  8820  0003A8  04DE               	decf	postinc2,w,c
  8821  0003AA  A4D8               	btfss	status,2,c
  8822  0003AC  D009               	goto	l2373
  8823                           
  8824                           ;hex.c: 110: {;hex.c: 112: return 0;
  8825  0003AE  0E00               	movlw	0
  8826  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  8827  0003B2  0E00               	movlw	0
  8828  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  8829  0003B6  0E00               	movlw	0
  8830  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  8831  0003BA  0E00               	movlw	0
  8832  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  8833                           
  8834                           ;hex.c: 113: }
  8835  0003BE  0012               	return	
  8836  0003C0                     l2373:
  8837                           
  8838                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  8839  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  8840  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8841  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8842  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  8843  0003CA  0E00               	movlw	0
  8844  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8845  0003CE  0E0B               	movlw	11
  8846  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  8847  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8848  0003D4  0E00               	movlw	0
  8849  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  8850  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8851  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  8852  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  8853  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  8854  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  8855  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8856  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  8857  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  8858  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  8859  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8860  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  8861  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8862  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  8863  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8864                           
  8865                           ;hex.c: 117: if (data[++offset] == ':')
  8866  0003F4  0E01               	movlw	1
  8867  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  8868  0003F8  0E00               	movlw	0
  8869  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8870  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8871  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8872  000400  500E               	movf	parseHexFileEntry@offset,w,c
  8873  000402  240C               	addwf	parseHexFileEntry@data,w,c
  8874  000404  6ED9               	movwf	fsr2l,c
  8875  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  8876  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8877  00040A  6EDA               	movwf	fsr2h,c
  8878  00040C  0E3A               	movlw	58
  8879  00040E  18DE               	xorwf	postinc2,w,c
  8880  000410  A4D8               	btfss	status,2,c
  8881  000412  D009               	goto	l2375
  8882                           
  8883                           ;hex.c: 118: {;hex.c: 119: return offset;
  8884  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8885  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8886  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8887  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8888                           
  8889                           ;hex.c: 120: }
  8890  000424  0012               	return	
  8891  000426                     l2375:
  8892                           
  8893                           ;hex.c: 121: else if (data[++offset] == ':')
  8894  000426  0E01               	movlw	1
  8895  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  8896  00042A  0E00               	movlw	0
  8897  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8898  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8899  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8900  000432  500E               	movf	parseHexFileEntry@offset,w,c
  8901  000434  240C               	addwf	parseHexFileEntry@data,w,c
  8902  000436  6ED9               	movwf	fsr2l,c
  8903  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  8904  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8905  00043C  6EDA               	movwf	fsr2h,c
  8906  00043E  0E3A               	movlw	58
  8907  000440  18DE               	xorwf	postinc2,w,c
  8908  000442  A4D8               	btfss	status,2,c
  8909  000444  D009               	goto	l2377
  8910                           
  8911                           ;hex.c: 122: {;hex.c: 123: return offset;
  8912  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8913  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8914  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8915  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8916                           
  8917                           ;hex.c: 124: }
  8918  000456  0012               	return	
  8919  000458                     l2377:
  8920                           
  8921                           ;hex.c: 125: else if (data[++offset] == ':')
  8922  000458  0E01               	movlw	1
  8923  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  8924  00045C  0E00               	movlw	0
  8925  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8926  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8927  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8928  000464  500E               	movf	parseHexFileEntry@offset,w,c
  8929  000466  240C               	addwf	parseHexFileEntry@data,w,c
  8930  000468  6ED9               	movwf	fsr2l,c
  8931  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8932  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8933  00046E  6EDA               	movwf	fsr2h,c
  8934  000470  0E3A               	movlw	58
  8935  000472  18DE               	xorwf	postinc2,w,c
  8936  000474  A4D8               	btfss	status,2,c
  8937  000476  D009               	goto	l2379
  8938                           
  8939                           ;hex.c: 126: {;hex.c: 127: return offset;
  8940  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8941  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8942  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8943  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8944                           
  8945                           ;hex.c: 128: }
  8946  000488  0012               	return	
  8947  00048A                     l2379:
  8948                           
  8949                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  8950  00048A  0EFD               	movlw	253
  8951  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  8952  00048E  0EFF               	movlw	255
  8953  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  8954  000492  0EFF               	movlw	255
  8955  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  8956  000496  0EFF               	movlw	255
  8957  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  8958  00049A  0012               	return	
  8959  00049C                     __end_of_parseHexFileEntry:
  8960                           	opt stack 0
  8961                           tblptru	equ	0xFF8
  8962                           tblptrh	equ	0xFF7
  8963                           tblptrl	equ	0xFF6
  8964                           tablat	equ	0xFF5
  8965                           prodh	equ	0xFF4
  8966                           prodl	equ	0xFF3
  8967                           intcon	equ	0xFF2
  8968                           intcon2	equ	0xFF1
  8969                           intcon3	equ	0xFF0
  8970                           postinc0	equ	0xFEE
  8971                           wreg	equ	0xFE8
  8972                           indf1	equ	0xFE7
  8973                           postdec1	equ	0xFE5
  8974                           plusw1	equ	0xFE3
  8975                           fsr1h	equ	0xFE2
  8976                           fsr1l	equ	0xFE1
  8977                           indf2	equ	0xFDF
  8978                           postinc2	equ	0xFDE
  8979                           postdec2	equ	0xFDD
  8980                           plusw2	equ	0xFDB
  8981                           fsr2h	equ	0xFDA
  8982                           fsr2l	equ	0xFD9
  8983                           status	equ	0xFD8
  8984                           
  8985 ;; *************** function _hexCharsToUint8 *****************
  8986 ;; Defined at:
  8987 ;;		line 42 in file "hex.c"
  8988 ;; Parameters:    Size  Location     Type
  8989 ;;  c1              1    wreg     unsigned char 
  8990 ;;  c2              1    2[COMRAM] unsigned char 
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;  c1              1    4[COMRAM] unsigned char 
  8993 ;;  retVal          1    5[COMRAM] unsigned char 
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  1    wreg      unsigned char 
  8996 ;; Registers used:
  8997 ;;		wreg, status,2, status,0, cstack
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9003 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9004 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9006 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9007 ;;Total ram usage:        4 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:    1
  9010 ;; This function calls:
  9011 ;;		_hexCharToUint8
  9012 ;; This function is called by:
  9013 ;;		_parseHexFileEntry
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text31
  9018  009A9E                     __ptext31:
  9019                           	opt stack 0
  9020  009A9E                     _hexCharsToUint8:
  9021                           	opt stack 26
  9022                           
  9023                           ;incstack = 0
  9024                           ;hexCharsToUint8@c1 stored from wreg
  9025  009A9E  6E05               	movwf	hexCharsToUint8@c1,c
  9026                           
  9027                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  9028  009AA0  5005               	movf	hexCharsToUint8@c1,w,c
  9029  009AA2  ECA5  F04B         	call	_hexCharToUint8
  9030  009AA6  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  9031  009AA8  3804               	swapf	??_hexCharsToUint8,w,c
  9032  009AAA  0BF0               	andlw	240
  9033  009AAC  6E06               	movwf	hexCharsToUint8@retVal,c
  9034                           
  9035                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  9036  009AAE  5003               	movf	hexCharsToUint8@c2,w,c
  9037  009AB0  ECA5  F04B         	call	_hexCharToUint8
  9038  009AB4  1206               	iorwf	hexCharsToUint8@retVal,f,c
  9039                           
  9040                           ;hex.c: 46: return retVal;
  9041  009AB6  5006               	movf	hexCharsToUint8@retVal,w,c
  9042  009AB8  0012               	return	
  9043  009ABA                     __end_of_hexCharsToUint8:
  9044                           	opt stack 0
  9045                           tblptru	equ	0xFF8
  9046                           tblptrh	equ	0xFF7
  9047                           tblptrl	equ	0xFF6
  9048                           tablat	equ	0xFF5
  9049                           prodh	equ	0xFF4
  9050                           prodl	equ	0xFF3
  9051                           intcon	equ	0xFF2
  9052                           intcon2	equ	0xFF1
  9053                           intcon3	equ	0xFF0
  9054                           postinc0	equ	0xFEE
  9055                           wreg	equ	0xFE8
  9056                           indf1	equ	0xFE7
  9057                           postdec1	equ	0xFE5
  9058                           plusw1	equ	0xFE3
  9059                           fsr1h	equ	0xFE2
  9060                           fsr1l	equ	0xFE1
  9061                           indf2	equ	0xFDF
  9062                           postinc2	equ	0xFDE
  9063                           postdec2	equ	0xFDD
  9064                           plusw2	equ	0xFDB
  9065                           fsr2h	equ	0xFDA
  9066                           fsr2l	equ	0xFD9
  9067                           status	equ	0xFD8
  9068                           
  9069 ;; *************** function _hexCharsToUint16 *****************
  9070 ;; Defined at:
  9071 ;;		line 49 in file "hex.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  c1              1    wreg     unsigned char 
  9074 ;;  c2              1    2[COMRAM] unsigned char 
  9075 ;;  c3              1    3[COMRAM] unsigned char 
  9076 ;;  c4              1    4[COMRAM] unsigned char 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;  c1              1    8[COMRAM] unsigned char 
  9079 ;;  retVal          2    9[COMRAM] unsigned int 
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  2    2[COMRAM] unsigned int 
  9082 ;; Registers used:
  9083 ;;		wreg, status,2, status,0, cstack
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9089 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9090 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9091 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9092 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9093 ;;Total ram usage:        9 bytes
  9094 ;; Hardware stack levels used:    1
  9095 ;; Hardware stack levels required when called:    1
  9096 ;; This function calls:
  9097 ;;		_hexCharToUint8
  9098 ;; This function is called by:
  9099 ;;		_parseHexFileEntry
  9100 ;; This function uses a non-reentrant model
  9101 ;;
  9102                           
  9103                           	psect	text32
  9104  008486                     __ptext32:
  9105                           	opt stack 0
  9106  008486                     _hexCharsToUint16:
  9107                           	opt stack 26
  9108                           
  9109                           ;incstack = 0
  9110                           ;hexCharsToUint16@c1 stored from wreg
  9111  008486  6E09               	movwf	hexCharsToUint16@c1,c
  9112                           
  9113                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  9114  008488  5009               	movf	hexCharsToUint16@c1,w,c
  9115  00848A  ECA5  F04B         	call	_hexCharToUint8
  9116  00848E  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9117  008490  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  9118  008492  0E0C               	movlw	12
  9119  008494                     u11275:
  9120  008494  90D8               	bcf	status,0,c
  9121  008496  3606               	rlcf	??_hexCharsToUint16,f,c
  9122  008498  3607               	rlcf	??_hexCharsToUint16+1,f,c
  9123  00849A  2EE8               	decfsz	wreg,f,c
  9124  00849C  D7FB               	goto	u11275
  9125  00849E  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  9126  0084A2  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  9127                           
  9128                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  9129  0084A6  5003               	movf	hexCharsToUint16@c2,w,c
  9130  0084A8  ECA5  F04B         	call	_hexCharToUint8
  9131  0084AC  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9132  0084AE  5006               	movf	??_hexCharsToUint16,w,c
  9133  0084B0  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  9134  0084B2  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  9135  0084B4  5007               	movf	??_hexCharsToUint16+1,w,c
  9136  0084B6  120A               	iorwf	hexCharsToUint16@retVal,f,c
  9137  0084B8  5008               	movf	??_hexCharsToUint16+2,w,c
  9138  0084BA  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  9139                           
  9140                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  9141  0084BC  5004               	movf	hexCharsToUint16@c3,w,c
  9142  0084BE  ECA5  F04B         	call	_hexCharToUint8
  9143  0084C2  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9144  0084C4  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  9145  0084C6  3A06               	swapf	??_hexCharsToUint16,f,c
  9146  0084C8  3A07               	swapf	??_hexCharsToUint16+1,f,c
  9147  0084CA  0EF0               	movlw	240
  9148  0084CC  1607               	andwf	??_hexCharsToUint16+1,f,c
  9149  0084CE  5006               	movf	??_hexCharsToUint16,w,c
  9150  0084D0  0B0F               	andlw	15
  9151  0084D2  1207               	iorwf	??_hexCharsToUint16+1,f,c
  9152  0084D4  0EF0               	movlw	240
  9153  0084D6  1606               	andwf	??_hexCharsToUint16,f,c
  9154  0084D8  5006               	movf	??_hexCharsToUint16,w,c
  9155  0084DA  120A               	iorwf	hexCharsToUint16@retVal,f,c
  9156  0084DC  5007               	movf	??_hexCharsToUint16+1,w,c
  9157  0084DE  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  9158                           
  9159                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  9160  0084E0  5005               	movf	hexCharsToUint16@c4,w,c
  9161  0084E2  ECA5  F04B         	call	_hexCharToUint8
  9162  0084E6  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9163  0084E8  5006               	movf	??_hexCharsToUint16,w,c
  9164  0084EA  120A               	iorwf	hexCharsToUint16@retVal,f,c
  9165                           
  9166                           ;hex.c: 55: return retVal;
  9167  0084EC  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  9168  0084F0  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  9169  0084F4  0012               	return	
  9170  0084F6                     __end_of_hexCharsToUint16:
  9171                           	opt stack 0
  9172                           tblptru	equ	0xFF8
  9173                           tblptrh	equ	0xFF7
  9174                           tblptrl	equ	0xFF6
  9175                           tablat	equ	0xFF5
  9176                           prodh	equ	0xFF4
  9177                           prodl	equ	0xFF3
  9178                           intcon	equ	0xFF2
  9179                           intcon2	equ	0xFF1
  9180                           intcon3	equ	0xFF0
  9181                           postinc0	equ	0xFEE
  9182                           wreg	equ	0xFE8
  9183                           indf1	equ	0xFE7
  9184                           postdec1	equ	0xFE5
  9185                           plusw1	equ	0xFE3
  9186                           fsr1h	equ	0xFE2
  9187                           fsr1l	equ	0xFE1
  9188                           indf2	equ	0xFDF
  9189                           postinc2	equ	0xFDE
  9190                           postdec2	equ	0xFDD
  9191                           plusw2	equ	0xFDB
  9192                           fsr2h	equ	0xFDA
  9193                           fsr2l	equ	0xFD9
  9194                           status	equ	0xFD8
  9195                           
  9196 ;; *************** function _hexCharToUint8 *****************
  9197 ;; Defined at:
  9198 ;;		line 11 in file "hex.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;  c               1    wreg     unsigned char 
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;  c               1    0[COMRAM] unsigned char 
  9203 ;;  ascii           1    1[COMRAM] unsigned char 
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  1    wreg      unsigned char 
  9206 ;; Registers used:
  9207 ;;		wreg, status,2, status,0
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9217 ;;Total ram usage:        2 bytes
  9218 ;; Hardware stack levels used:    1
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		_hexCharsToUint8
  9223 ;;		_hexCharsToUint16
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227                           	psect	text33
  9228  00974A                     __ptext33:
  9229                           	opt stack 0
  9230  00974A                     _hexCharToUint8:
  9231                           	opt stack 26
  9232                           
  9233                           ;incstack = 0
  9234                           ;hexCharToUint8@c stored from wreg
  9235  00974A  6E01               	movwf	hexCharToUint8@c,c
  9236                           
  9237                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  9238  00974C  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  9239                           
  9240                           ;hex.c: 16: if (ascii >= 97)
  9241  009750  0E60               	movlw	96
  9242  009752  6402               	cpfsgt	hexCharToUint8@ascii,c
  9243  009754  D002               	goto	l2348
  9244                           
  9245                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  9246  009756  0E57               	movlw	87
  9247  009758  D006               	goto	L3
  9248  00975A                     l2348:
  9249                           
  9250                           ;hex.c: 21: else if (ascii >= 65)
  9251  00975A  0E40               	movlw	64
  9252  00975C  6402               	cpfsgt	hexCharToUint8@ascii,c
  9253  00975E  D002               	goto	l2350
  9254                           
  9255                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  9256  009760  0E37               	movlw	55
  9257  009762  D001               	goto	L3
  9258  009764                     l2350:
  9259                           
  9260                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  9261  009764  0E30               	movlw	48
  9262  009766                     L3:
  9263  009766  5E02               	subwf	hexCharToUint8@ascii,f,c
  9264                           
  9265                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  9266  009768  0E0F               	movlw	15
  9267  00976A  6402               	cpfsgt	hexCharToUint8@ascii,c
  9268  00976C  D002               	goto	l2352
  9269                           
  9270                           ;hex.c: 32: {;hex.c: 33: return 0;
  9271  00976E  0E00               	movlw	0
  9272                           
  9273                           ;hex.c: 34: }
  9274  009770  0012               	return	
  9275  009772                     l2352:
  9276                           
  9277                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  9278  009772  5002               	movf	hexCharToUint8@ascii,w,c
  9279  009774  0012               	return	
  9280  009776                     __end_of_hexCharToUint8:
  9281                           	opt stack 0
  9282                           tblptru	equ	0xFF8
  9283                           tblptrh	equ	0xFF7
  9284                           tblptrl	equ	0xFF6
  9285                           tablat	equ	0xFF5
  9286                           prodh	equ	0xFF4
  9287                           prodl	equ	0xFF3
  9288                           intcon	equ	0xFF2
  9289                           intcon2	equ	0xFF1
  9290                           intcon3	equ	0xFF0
  9291                           postinc0	equ	0xFEE
  9292                           wreg	equ	0xFE8
  9293                           indf1	equ	0xFE7
  9294                           postdec1	equ	0xFE5
  9295                           plusw1	equ	0xFE3
  9296                           fsr1h	equ	0xFE2
  9297                           fsr1l	equ	0xFE1
  9298                           indf2	equ	0xFDF
  9299                           postinc2	equ	0xFDE
  9300                           postdec2	equ	0xFDD
  9301                           plusw2	equ	0xFDB
  9302                           fsr2h	equ	0xFDA
  9303                           fsr2l	equ	0xFD9
  9304                           status	equ	0xFD8
  9305                           
  9306 ;; *************** function _internalFlash_writePage *****************
  9307 ;; Defined at:
  9308 ;;		line 65 in file "internal_flash.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  page            2    8[COMRAM] unsigned int 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  address         4   18[COMRAM] unsigned long 
  9313 ;;  cntr            2   14[COMRAM] unsigned int 
  9314 ;;  byte_cntr       1   17[COMRAM] unsigned char 
  9315 ;;  block_cntr      1   16[COMRAM] unsigned char 
  9316 ;;  i               1    0        unsigned char 
  9317 ;;  gie             1    0        unsigned char 
  9318 ;; Return value:  Size  Location     Type
  9319 ;;                  1    wreg      void 
  9320 ;; Registers used:
  9321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9322 ;; Tracked objects:
  9323 ;;		On entry : 0/0
  9324 ;;		On exit  : 0/0
  9325 ;;		Unchanged: 0/0
  9326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9328 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9329 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9330 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9331 ;;Total ram usage:       14 bytes
  9332 ;; Hardware stack levels used:    1
  9333 ;; Hardware stack levels required when called:    1
  9334 ;; This function calls:
  9335 ;;		__internalFlash_unlockAndActivate
  9336 ;;		_internalFlash_addressFromPage
  9337 ;; This function is called by:
  9338 ;;		__bootloader_program
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342                           	psect	text34
  9343  007234                     __ptext34:
  9344                           	opt stack 0
  9345  007234                     _internalFlash_writePage:
  9346                           	opt stack 27
  9347                           
  9348                           ;internal_flash.c: 67: uint32_t address;;internal_flash.c: 68: uint8_t gie;;internal_fla
      +                          sh.c: 69: uint16_t cntr;;internal_flash.c: 70: uint8_t i;;internal_flash.c: 71: uint8_t 
      +                          block_cntr;;internal_flash.c: 72: uint8_t byte_cntr;;internal_flash.c: 75: address = int
      +                          ernalFlash_addressFromPage(page);
  9349                           
  9350                           ;incstack = 0
  9351  007234  C009  F001         	movff	internalFlash_writePage@page,internalFlash_addressFromPage@page
  9352  007238  C00A  F002         	movff	internalFlash_writePage@page+1,internalFlash_addressFromPage@page+1
  9353  00723C  EC4A  F04B         	call	_internalFlash_addressFromPage	;wreg free
  9354  007240  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_writePage@address
  9355  007244  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_writePage@address+1
  9356  007248  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_writePage@address+2
  9357  00724C  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_writePage@address+3
  9358                           
  9359                           ;internal_flash.c: 76: TBLPTR = address;
  9360  007250  C013  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  9361  007254  C014  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  9362  007258  C015  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  9363                           
  9364                           ;internal_flash.c: 79: if((address<0xC000) || (address+1023>=0x1FFFF))
  9365  00725C  5016               	movf	internalFlash_writePage@address+3,w,c
  9366  00725E  1015               	iorwf	internalFlash_writePage@address+2,w,c
  9367  007260  E104               	bnz	u12330
  9368  007262  0EC0               	movlw	192
  9369  007264  5C14               	subwf	internalFlash_writePage@address+1,w,c
  9370  007266  A0D8               	btfss	status,0,c
  9371  007268  0012               	return	
  9372  00726A                     u12330:
  9373  00726A  0EFF               	movlw	255
  9374  00726C  2413               	addwf	internalFlash_writePage@address,w,c
  9375  00726E  6E0B               	movwf	??_internalFlash_writePage& (0+255),c
  9376  007270  0E03               	movlw	3
  9377  007272  2014               	addwfc	internalFlash_writePage@address+1,w,c
  9378  007274  6E0C               	movwf	(??_internalFlash_writePage+1)& (0+255),c
  9379  007276  0E00               	movlw	0
  9380  007278  2015               	addwfc	internalFlash_writePage@address+2,w,c
  9381  00727A  6E0D               	movwf	(??_internalFlash_writePage+2)& (0+255),c
  9382  00727C  0E00               	movlw	0
  9383  00727E  2016               	addwfc	internalFlash_writePage@address+3,w,c
  9384  007280  6E0E               	movwf	(??_internalFlash_writePage+3)& (0+255),c
  9385  007282  500E               	movf	??_internalFlash_writePage+3,w,c
  9386  007284  E132               	bnz	l2607
  9387  007286  280B               	incf	??_internalFlash_writePage,w,c
  9388  007288  0EFF               	movlw	255
  9389  00728A  580C               	subwfb	??_internalFlash_writePage+1,w,c
  9390  00728C  0E01               	movlw	1
  9391  00728E  580D               	subwfb	??_internalFlash_writePage+2,w,c
  9392  007290  B0D8               	btfsc	status,0,c
  9393  007292  0012               	return	
  9394                           
  9395                           ;internal_flash.c: 82: };internal_flash.c: 85: cntr = 0;
  9396                           
  9397                           ;internal_flash.c: 80: {;internal_flash.c: 81: return;
  9398  007294  0E00               	movlw	0
  9399  007296  6E10               	movwf	internalFlash_writePage@cntr+1,c
  9400  007298  0E00               	movlw	0
  9401  00729A  6E0F               	movwf	internalFlash_writePage@cntr,c
  9402                           
  9403                           ;internal_flash.c: 86: for(block_cntr=0; block_cntr<16; ++block_cntr)
  9404  00729C  0E00               	movlw	0
  9405  00729E  6E11               	movwf	internalFlash_writePage@block_cntr,c
  9406  0072A0                     l15002:
  9407  0072A0  0E0F               	movlw	15
  9408  0072A2  6411               	cpfsgt	internalFlash_writePage@block_cntr,c
  9409  0072A4  D001               	goto	l2608
  9410  0072A6  0012               	return	
  9411  0072A8                     l2608:
  9412                           
  9413                           ;internal_flash.c: 87: {;internal_flash.c: 90: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  9414  0072A8  0E00               	movlw	0
  9415  0072AA  6E12               	movwf	internalFlash_writePage@byte_cntr,c
  9416  0072AC                     l15008:
  9417  0072AC  0E3F               	movlw	63
  9418  0072AE  6412               	cpfsgt	internalFlash_writePage@byte_cntr,c
  9419  0072B0  D001               	goto	l2610
  9420  0072B2  D00D               	goto	u12370
  9421  0072B4                     l2610:
  9422                           
  9423                           ;internal_flash.c: 91: {;internal_flash.c: 93: TABLAT = pageBuffer[cntr];
  9424  0072B4  0E00               	movlw	low _pageBuffer
  9425  0072B6  240F               	addwf	internalFlash_writePage@cntr,w,c
  9426  0072B8  6ED9               	movwf	fsr2l,c
  9427  0072BA  0E08               	movlw	high _pageBuffer
  9428  0072BC  2010               	addwfc	internalFlash_writePage@cntr+1,w,c
  9429  0072BE  6EDA               	movwf	fsr2h,c
  9430  0072C0  50DF               	movf	indf2,w,c
  9431  0072C2  6EF5               	movwf	tablat,c	;volatile
  9432  0072C4  000D               	tblwt		*+	;# 
  9433                           
  9434                           ;internal_flash.c: 97: ++cntr;
  9435  0072C6  4A0F               	infsnz	internalFlash_writePage@cntr,f,c
  9436  0072C8  2A10               	incf	internalFlash_writePage@cntr+1,f,c
  9437  0072CA  2A12               	incf	internalFlash_writePage@byte_cntr,f,c
  9438  0072CC  D7EF               	goto	l15008
  9439  0072CE                     u12370:
  9440  0072CE  000A               	tblrd		*-	;# 
  9441                           
  9442                           ;internal_flash.c: 104: EECON1 = 0x84;
  9443  0072D0  0E84               	movlw	132
  9444  0072D2  6EA6               	movwf	4006,c	;volsfr
  9445                           
  9446                           ;internal_flash.c: 105: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9447  0072D4  0EB5               	movlw	181
  9448  0072D6  EC12  F04C         	call	__internalFlash_unlockAndActivate
  9449                           
  9450                           ;internal_flash.c: 106: TBLPTR++;
  9451  0072DA  0E01               	movlw	1
  9452  0072DC  26F6               	addwf	tblptrl,f,c	;volatile
  9453  0072DE  0E00               	movlw	0
  9454  0072E0  22F7               	addwfc	tblptrh,f,c	;volatile
  9455  0072E2  0E00               	movlw	0
  9456  0072E4  22F8               	addwfc	tblptru,f,c	;volatile
  9457  0072E6  2A11               	incf	internalFlash_writePage@block_cntr,f,c
  9458  0072E8  D7DB               	goto	l15002
  9459  0072EA                     l2607:
  9460  0072EA  0012               	return		;funcret
  9461  0072EC                     __end_of_internalFlash_writePage:
  9462                           	opt stack 0
  9463                           tblptru	equ	0xFF8
  9464                           tblptrh	equ	0xFF7
  9465                           tblptrl	equ	0xFF6
  9466                           tablat	equ	0xFF5
  9467                           prodh	equ	0xFF4
  9468                           prodl	equ	0xFF3
  9469                           intcon	equ	0xFF2
  9470                           intcon2	equ	0xFF1
  9471                           intcon3	equ	0xFF0
  9472                           postinc0	equ	0xFEE
  9473                           wreg	equ	0xFE8
  9474                           indf1	equ	0xFE7
  9475                           postdec1	equ	0xFE5
  9476                           plusw1	equ	0xFE3
  9477                           fsr1h	equ	0xFE2
  9478                           fsr1l	equ	0xFE1
  9479                           indf2	equ	0xFDF
  9480                           postinc2	equ	0xFDE
  9481                           postdec2	equ	0xFDD
  9482                           plusw2	equ	0xFDB
  9483                           fsr2h	equ	0xFDA
  9484                           fsr2l	equ	0xFD9
  9485                           status	equ	0xFD8
  9486                           
  9487 ;; *************** function _internalFlash_readPage *****************
  9488 ;; Defined at:
  9489 ;;		line 37 in file "internal_flash.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;  page            2   21[COMRAM] unsigned int 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;  address         4   23[COMRAM] unsigned long 
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      void 
  9496 ;; Registers used:
  9497 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9504 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9506 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9507 ;;Total ram usage:        6 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    2
  9510 ;; This function calls:
  9511 ;;		_internalFlash_addressFromPage
  9512 ;;		_internalFlash_read
  9513 ;; This function is called by:
  9514 ;;		__bootloader_program
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text35
  9519  009270                     __ptext35:
  9520                           	opt stack 0
  9521  009270                     _internalFlash_readPage:
  9522                           	opt stack 26
  9523                           
  9524                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  9525                           
  9526                           ;incstack = 0
  9527  009270  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  9528  009274  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  9529  009278  EC4A  F04B         	call	_internalFlash_addressFromPage	;wreg free
  9530  00927C  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  9531  009280  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  9532  009284  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  9533  009288  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  9534                           
  9535                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  9536  00928C  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  9537  009290  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  9538  009294  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  9539  009298  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  9540  00929C  0E04               	movlw	4
  9541  00929E  6E13               	movwf	internalFlash_read@data_length+1,c
  9542  0092A0  0E00               	movlw	0
  9543  0092A2  6E12               	movwf	internalFlash_read@data_length,c
  9544  0092A4  0E00               	movlw	low _pageBuffer
  9545  0092A6  6E14               	movwf	internalFlash_read@buffer,c
  9546  0092A8  0E08               	movlw	high _pageBuffer
  9547  0092AA  6E15               	movwf	internalFlash_read@buffer+1,c
  9548  0092AC  EC4C  F04A         	call	_internalFlash_read	;wreg free
  9549  0092B0  0012               	return		;funcret
  9550  0092B2                     __end_of_internalFlash_readPage:
  9551                           	opt stack 0
  9552                           tblptru	equ	0xFF8
  9553                           tblptrh	equ	0xFF7
  9554                           tblptrl	equ	0xFF6
  9555                           tablat	equ	0xFF5
  9556                           prodh	equ	0xFF4
  9557                           prodl	equ	0xFF3
  9558                           intcon	equ	0xFF2
  9559                           intcon2	equ	0xFF1
  9560                           intcon3	equ	0xFF0
  9561                           postinc0	equ	0xFEE
  9562                           wreg	equ	0xFE8
  9563                           indf1	equ	0xFE7
  9564                           postdec1	equ	0xFE5
  9565                           plusw1	equ	0xFE3
  9566                           fsr1h	equ	0xFE2
  9567                           fsr1l	equ	0xFE1
  9568                           indf2	equ	0xFDF
  9569                           postinc2	equ	0xFDE
  9570                           postdec2	equ	0xFDD
  9571                           plusw2	equ	0xFDB
  9572                           fsr2h	equ	0xFDA
  9573                           fsr2l	equ	0xFD9
  9574                           status	equ	0xFD8
  9575                           
  9576 ;; *************** function _internalFlash_read *****************
  9577 ;; Defined at:
  9578 ;;		line 150 in file "internal_flash.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  address         4   13[COMRAM] unsigned long 
  9581 ;;  data_length     2   17[COMRAM] unsigned int 
  9582 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  9583 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;		None
  9586 ;; Return value:  Size  Location     Type
  9587 ;;                  1    wreg      unsigned char 
  9588 ;; Registers used:
  9589 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9590 ;; Tracked objects:
  9591 ;;		On entry : 0/0
  9592 ;;		On exit  : 0/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9595 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9598 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9599 ;;Total ram usage:        8 bytes
  9600 ;; Hardware stack levels used:    1
  9601 ;; Hardware stack levels required when called:    1
  9602 ;; This function calls:
  9603 ;;		_memcpy
  9604 ;; This function is called by:
  9605 ;;		_internalFlash_readPage
  9606 ;;		__bootloader_verify_program_memory
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           	psect	text36
  9611  009498                     __ptext36:
  9612                           	opt stack 0
  9613  009498                     _internalFlash_read:
  9614                           	opt stack 26
  9615                           
  9616                           ;internal_flash.c: 155: if(address >= 0x1FFFF)
  9617                           
  9618                           ;incstack = 0
  9619  009498  5011               	movf	internalFlash_read@address+3,w,c
  9620  00949A  E118               	bnz	l2623
  9621  00949C  280E               	incf	internalFlash_read@address,w,c
  9622  00949E  0EFF               	movlw	255
  9623  0094A0  580F               	subwfb	internalFlash_read@address+1,w,c
  9624  0094A2  0E01               	movlw	1
  9625  0094A4  5810               	subwfb	internalFlash_read@address+2,w,c
  9626  0094A6  B0D8               	btfsc	status,0,c
  9627  0094A8  0012               	return	
  9628                           
  9629                           ;internal_flash.c: 158: };internal_flash.c: 161: memcpy;internal_flash.c: 162: (;interna
      +                          l_flash.c: 163: (void*)buffer,;internal_flash.c: 164: (const void*)(address),;internal_f
      +                          lash.c: 165: data_length;internal_flash.c: 166: );
  9630                           
  9631                           ;internal_flash.c: 156: {;internal_flash.c: 157: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  9632  0094AA  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  9633  0094AE  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  9634  0094B2  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  9635  0094B6  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  9636  0094BA  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  9637  0094BE  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  9638  0094C2  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  9639  0094C6  ECEF  F043         	call	_memcpy	;wreg free
  9640  0094CA  0012               	return	
  9641  0094CC                     l2623:
  9642  0094CC  0012               	return		;funcret
  9643  0094CE                     __end_of_internalFlash_read:
  9644                           	opt stack 0
  9645                           tblptru	equ	0xFF8
  9646                           tblptrh	equ	0xFF7
  9647                           tblptrl	equ	0xFF6
  9648                           tablat	equ	0xFF5
  9649                           prodh	equ	0xFF4
  9650                           prodl	equ	0xFF3
  9651                           intcon	equ	0xFF2
  9652                           intcon2	equ	0xFF1
  9653                           intcon3	equ	0xFF0
  9654                           postinc0	equ	0xFEE
  9655                           wreg	equ	0xFE8
  9656                           indf1	equ	0xFE7
  9657                           postdec1	equ	0xFE5
  9658                           plusw1	equ	0xFE3
  9659                           fsr1h	equ	0xFE2
  9660                           fsr1l	equ	0xFE1
  9661                           indf2	equ	0xFDF
  9662                           postinc2	equ	0xFDE
  9663                           postdec2	equ	0xFDD
  9664                           plusw2	equ	0xFDB
  9665                           fsr2h	equ	0xFDA
  9666                           fsr2l	equ	0xFD9
  9667                           status	equ	0xFD8
  9668                           
  9669 ;; *************** function _internalFlash_pageFromAddress *****************
  9670 ;; Defined at:
  9671 ;;		line 171 in file "internal_flash.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;  address         4    0[COMRAM] unsigned long 
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;		None
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  2    0[COMRAM] unsigned int 
  9678 ;; Registers used:
  9679 ;;		wreg, status,2, status,0
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9688 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9689 ;;Total ram usage:        5 bytes
  9690 ;; Hardware stack levels used:    1
  9691 ;; This function calls:
  9692 ;;		Nothing
  9693 ;; This function is called by:
  9694 ;;		__bootloader_program
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text37
  9699  009ABA                     __ptext37:
  9700                           	opt stack 0
  9701  009ABA                     _internalFlash_pageFromAddress:
  9702                           	opt stack 28
  9703                           
  9704                           ;internal_flash.c: 173: address >>= 10;
  9705                           
  9706                           ;incstack = 0
  9707  009ABA  0E0A               	movlw	10
  9708  009ABC  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  9709  009ABE                     u12305:
  9710  009ABE  90D8               	bcf	status,0,c
  9711  009AC0  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  9712  009AC2  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  9713  009AC4  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  9714  009AC6  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  9715  009AC8  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  9716  009ACA  D7F9               	goto	u12305
  9717                           
  9718                           ;internal_flash.c: 174: return (uint16_t) address;
  9719  009ACC  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  9720  009AD0  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  9721  009AD4  0012               	return	
  9722  009AD6                     __end_of_internalFlash_pageFromAddress:
  9723                           	opt stack 0
  9724                           tblptru	equ	0xFF8
  9725                           tblptrh	equ	0xFF7
  9726                           tblptrl	equ	0xFF6
  9727                           tablat	equ	0xFF5
  9728                           prodh	equ	0xFF4
  9729                           prodl	equ	0xFF3
  9730                           intcon	equ	0xFF2
  9731                           intcon2	equ	0xFF1
  9732                           intcon3	equ	0xFF0
  9733                           postinc0	equ	0xFEE
  9734                           wreg	equ	0xFE8
  9735                           indf1	equ	0xFE7
  9736                           postdec1	equ	0xFE5
  9737                           plusw1	equ	0xFE3
  9738                           fsr1h	equ	0xFE2
  9739                           fsr1l	equ	0xFE1
  9740                           indf2	equ	0xFDF
  9741                           postinc2	equ	0xFDE
  9742                           postdec2	equ	0xFDD
  9743                           plusw2	equ	0xFDB
  9744                           fsr2h	equ	0xFDA
  9745                           fsr2l	equ	0xFD9
  9746                           status	equ	0xFD8
  9747                           
  9748 ;; *************** function _internalFlash_getBuffer *****************
  9749 ;; Defined at:
  9750 ;;		line 32 in file "internal_flash.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;		None
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;		None
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  2    0[COMRAM] PTR unsigned char 
  9757 ;; Registers used:
  9758 ;;		wreg, status,2, status,0
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9768 ;;Total ram usage:        2 bytes
  9769 ;; Hardware stack levels used:    1
  9770 ;; This function calls:
  9771 ;;		Nothing
  9772 ;; This function is called by:
  9773 ;;		__bootloader_program
  9774 ;; This function uses a non-reentrant model
  9775 ;;
  9776                           
  9777                           	psect	text38
  9778  009C76                     __ptext38:
  9779                           	opt stack 0
  9780  009C76                     _internalFlash_getBuffer:
  9781                           	opt stack 28
  9782                           
  9783                           ;internal_flash.c: 34: return pageBuffer;
  9784                           
  9785                           ;incstack = 0
  9786  009C76  0E00               	movlw	low _pageBuffer
  9787  009C78  6E01               	movwf	?_internalFlash_getBuffer,c
  9788  009C7A  0E08               	movlw	high _pageBuffer
  9789  009C7C  6E02               	movwf	?_internalFlash_getBuffer+1,c
  9790  009C7E  0012               	return	
  9791  009C80                     __end_of_internalFlash_getBuffer:
  9792                           	opt stack 0
  9793                           tblptru	equ	0xFF8
  9794                           tblptrh	equ	0xFF7
  9795                           tblptrl	equ	0xFF6
  9796                           tablat	equ	0xFF5
  9797                           prodh	equ	0xFF4
  9798                           prodl	equ	0xFF3
  9799                           intcon	equ	0xFF2
  9800                           intcon2	equ	0xFF1
  9801                           intcon3	equ	0xFF0
  9802                           postinc0	equ	0xFEE
  9803                           wreg	equ	0xFE8
  9804                           indf1	equ	0xFE7
  9805                           postdec1	equ	0xFE5
  9806                           plusw1	equ	0xFE3
  9807                           fsr1h	equ	0xFE2
  9808                           fsr1l	equ	0xFE1
  9809                           indf2	equ	0xFDF
  9810                           postinc2	equ	0xFDE
  9811                           postdec2	equ	0xFDD
  9812                           plusw2	equ	0xFDB
  9813                           fsr2h	equ	0xFDA
  9814                           fsr2l	equ	0xFD9
  9815                           status	equ	0xFD8
  9816                           
  9817 ;; *************** function _internalFlash_erasePage *****************
  9818 ;; Defined at:
  9819 ;;		line 44 in file "internal_flash.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;  page            2    8[COMRAM] unsigned int 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  address         4   14[COMRAM] unsigned long 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      void 
  9826 ;; Registers used:
  9827 ;;		wreg, status,2, status,0, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9834 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9835 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9836 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9837 ;;Total ram usage:       10 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; Hardware stack levels required when called:    1
  9840 ;; This function calls:
  9841 ;;		__internalFlash_unlockAndActivate
  9842 ;;		_internalFlash_addressFromPage
  9843 ;; This function is called by:
  9844 ;;		__bootloader_program
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text39
  9849  0085D4                     __ptext39:
  9850                           	opt stack 0
  9851  0085D4                     _internalFlash_erasePage:
  9852                           	opt stack 27
  9853                           
  9854                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = internalFlash_a
      +                          ddressFromPage(page);
  9855                           
  9856                           ;incstack = 0
  9857  0085D4  C009  F001         	movff	internalFlash_erasePage@page,internalFlash_addressFromPage@page
  9858  0085D8  C00A  F002         	movff	internalFlash_erasePage@page+1,internalFlash_addressFromPage@page+1
  9859  0085DC  EC4A  F04B         	call	_internalFlash_addressFromPage	;wreg free
  9860  0085E0  C001  F00F         	movff	?_internalFlash_addressFromPage,internalFlash_erasePage@address
  9861  0085E4  C002  F010         	movff	?_internalFlash_addressFromPage+1,internalFlash_erasePage@address+1
  9862  0085E8  C003  F011         	movff	?_internalFlash_addressFromPage+2,internalFlash_erasePage@address+2
  9863  0085EC  C004  F012         	movff	?_internalFlash_addressFromPage+3,internalFlash_erasePage@address+3
  9864                           
  9865                           ;internal_flash.c: 50: TBLPTR = address;
  9866  0085F0  C00F  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  9867  0085F4  C010  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  9868  0085F8  C011  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  9869                           
  9870                           ;internal_flash.c: 53: if((address<0xC000) || (address+1023>=0x1FFFF))
  9871  0085FC  5012               	movf	internalFlash_erasePage@address+3,w,c
  9872  0085FE  1011               	iorwf	internalFlash_erasePage@address+2,w,c
  9873  008600  E104               	bnz	u12310
  9874  008602  0EC0               	movlw	192
  9875  008604  5C10               	subwf	internalFlash_erasePage@address+1,w,c
  9876  008606  A0D8               	btfss	status,0,c
  9877  008608  0012               	return	
  9878  00860A                     u12310:
  9879  00860A  0EFF               	movlw	255
  9880  00860C  240F               	addwf	internalFlash_erasePage@address,w,c
  9881  00860E  6E0B               	movwf	??_internalFlash_erasePage& (0+255),c
  9882  008610  0E03               	movlw	3
  9883  008612  2010               	addwfc	internalFlash_erasePage@address+1,w,c
  9884  008614  6E0C               	movwf	(??_internalFlash_erasePage+1)& (0+255),c
  9885  008616  0E00               	movlw	0
  9886  008618  2011               	addwfc	internalFlash_erasePage@address+2,w,c
  9887  00861A  6E0D               	movwf	(??_internalFlash_erasePage+2)& (0+255),c
  9888  00861C  0E00               	movlw	0
  9889  00861E  2012               	addwfc	internalFlash_erasePage@address+3,w,c
  9890  008620  6E0E               	movwf	(??_internalFlash_erasePage+3)& (0+255),c
  9891  008622  500E               	movf	??_internalFlash_erasePage+3,w,c
  9892  008624  E10C               	bnz	l2601
  9893  008626  280B               	incf	??_internalFlash_erasePage,w,c
  9894  008628  0EFF               	movlw	255
  9895  00862A  580C               	subwfb	??_internalFlash_erasePage+1,w,c
  9896  00862C  0E01               	movlw	1
  9897  00862E  580D               	subwfb	??_internalFlash_erasePage+2,w,c
  9898  008630  B0D8               	btfsc	status,0,c
  9899  008632  0012               	return	
  9900                           
  9901                           ;internal_flash.c: 56: };internal_flash.c: 59: EECON1bits.WREN = 1;
  9902                           
  9903                           ;internal_flash.c: 54: {;internal_flash.c: 55: return;
  9904  008634  84A6               	bsf	4006,2,c	;volsfr
  9905                           
  9906                           ;internal_flash.c: 60: EECON1bits.FREE = 1;
  9907  008636  88A6               	bsf	4006,4,c	;volsfr
  9908                           
  9909                           ;internal_flash.c: 62: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9910  008638  0EB5               	movlw	181
  9911  00863A  EC12  F04C         	call	__internalFlash_unlockAndActivate
  9912  00863E                     l2601:
  9913  00863E  0012               	return		;funcret
  9914  008640                     __end_of_internalFlash_erasePage:
  9915                           	opt stack 0
  9916                           tblptru	equ	0xFF8
  9917                           tblptrh	equ	0xFF7
  9918                           tblptrl	equ	0xFF6
  9919                           tablat	equ	0xFF5
  9920                           prodh	equ	0xFF4
  9921                           prodl	equ	0xFF3
  9922                           intcon	equ	0xFF2
  9923                           intcon2	equ	0xFF1
  9924                           intcon3	equ	0xFF0
  9925                           postinc0	equ	0xFEE
  9926                           wreg	equ	0xFE8
  9927                           indf1	equ	0xFE7
  9928                           postdec1	equ	0xFE5
  9929                           plusw1	equ	0xFE3
  9930                           fsr1h	equ	0xFE2
  9931                           fsr1l	equ	0xFE1
  9932                           indf2	equ	0xFDF
  9933                           postinc2	equ	0xFDE
  9934                           postdec2	equ	0xFDD
  9935                           plusw2	equ	0xFDB
  9936                           fsr2h	equ	0xFDA
  9937                           fsr2l	equ	0xFD9
  9938                           status	equ	0xFD8
  9939                           
  9940 ;; *************** function __internalFlash_unlockAndActivate *****************
  9941 ;; Defined at:
  9942 ;;		line 112 in file "internal_flash.c"
  9943 ;; Parameters:    Size  Location     Type
  9944 ;;  UnlockKey       1    wreg     unsigned char 
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  9947 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  9948 ;; Return value:  Size  Location     Type
  9949 ;;                  1    wreg      void 
  9950 ;; Registers used:
  9951 ;;		wreg, status,2, status,0
  9952 ;; Tracked objects:
  9953 ;;		On entry : 0/0
  9954 ;;		On exit  : 0/0
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9958 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9961 ;;Total ram usage:        2 bytes
  9962 ;; Hardware stack levels used:    1
  9963 ;; This function calls:
  9964 ;;		Nothing
  9965 ;; This function is called by:
  9966 ;;		_internalFlash_erasePage
  9967 ;;		_internalFlash_writePage
  9968 ;;		_EraseBlock
  9969 ;; This function uses a non-reentrant model
  9970 ;;
  9971                           
  9972                           	psect	text40
  9973  009824                     __ptext40:
  9974                           	opt stack 0
  9975  009824                     __internalFlash_unlockAndActivate:
  9976                           	opt stack 27
  9977                           
  9978                           ;incstack = 0
  9979                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  9980  009824  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  9981                           
  9982                           ;internal_flash.c: 114: uint8_t InterruptEnableSave;;internal_flash.c: 121: if(UnlockKey
      +                           != (uint8_t)0xB5)
  9983  009826  0EB5               	movlw	181
  9984  009828  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  9985  00982A  B4D8               	btfsc	status,2,c
  9986  00982C  D002               	goto	l2614
  9987                           
  9988                           ;internal_flash.c: 122: {;internal_flash.c: 123: EECON1bits.WREN = 0;
  9989  00982E  94A6               	bcf	4006,2,c	;volsfr
  9990                           
  9991                           ;internal_flash.c: 124: return;
  9992  009830  0012               	return	
  9993  009832                     l2614:
  9994                           
  9995                           ;internal_flash.c: 125: };internal_flash.c: 127: InterruptEnableSave = INTCON;
  9996  009832  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
  9997                           
  9998                           ;internal_flash.c: 128: INTCONbits.GIEH = 0;
  9999  009836  9EF2               	bcf	intcon,7,c	;volatile
 10000                           
 10001                           ;internal_flash.c: 129: EECON2 = 0x55;
 10002  009838  0E55               	movlw	85
 10003  00983A  6EA7               	movwf	4007,c	;volsfr
 10004                           
 10005                           ;internal_flash.c: 130: EECON2 = 0xAA;
 10006  00983C  0EAA               	movlw	170
 10007  00983E  6EA7               	movwf	4007,c	;volsfr
 10008                           
 10009                           ;internal_flash.c: 131: EECON1bits.WR = 1;
 10010  009840  82A6               	bsf	4006,1,c	;volsfr
 10011                           
 10012                           ;internal_flash.c: 132: EECON1bits.WREN = 0;
 10013  009842  94A6               	bcf	4006,2,c	;volsfr
 10014                           
 10015                           ;internal_flash.c: 134: if(InterruptEnableSave & 0x80)
 10016  009844  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 10017  009846  0012               	return	
 10018                           
 10019                           ;internal_flash.c: 135: {;internal_flash.c: 136: INTCONbits.GIEH = 1;
 10020  009848  8EF2               	bsf	intcon,7,c	;volatile
 10021  00984A  0012               	return	
 10022  00984C                     __end_of__internalFlash_unlockAndActivate:
 10023                           	opt stack 0
 10024                           tblptru	equ	0xFF8
 10025                           tblptrh	equ	0xFF7
 10026                           tblptrl	equ	0xFF6
 10027                           tablat	equ	0xFF5
 10028                           prodh	equ	0xFF4
 10029                           prodl	equ	0xFF3
 10030                           intcon	equ	0xFF2
 10031                           intcon2	equ	0xFF1
 10032                           intcon3	equ	0xFF0
 10033                           postinc0	equ	0xFEE
 10034                           wreg	equ	0xFE8
 10035                           indf1	equ	0xFE7
 10036                           postdec1	equ	0xFE5
 10037                           plusw1	equ	0xFE3
 10038                           fsr1h	equ	0xFE2
 10039                           fsr1l	equ	0xFE1
 10040                           indf2	equ	0xFDF
 10041                           postinc2	equ	0xFDE
 10042                           postdec2	equ	0xFDD
 10043                           plusw2	equ	0xFDB
 10044                           fsr2h	equ	0xFDA
 10045                           fsr2l	equ	0xFD9
 10046                           status	equ	0xFD8
 10047                           
 10048 ;; *************** function _internalFlash_addressWithinPage *****************
 10049 ;; Defined at:
 10050 ;;		line 185 in file "internal_flash.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  address         4    8[COMRAM] unsigned long 
 10053 ;;  page            2   12[COMRAM] unsigned int 
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;  page_start_a    4   18[COMRAM] unsigned long 
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  2    8[COMRAM] unsigned int 
 10058 ;; Registers used:
 10059 ;;		wreg, status,2, status,0, cstack
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10065 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10066 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10067 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10068 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10069 ;;Total ram usage:       14 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; Hardware stack levels required when called:    1
 10072 ;; This function calls:
 10073 ;;		_internalFlash_addressFromPage
 10074 ;; This function is called by:
 10075 ;;		__bootloader_program
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079                           	psect	text41
 10080  00896A                     __ptext41:
 10081                           	opt stack 0
 10082  00896A                     _internalFlash_addressWithinPage:
 10083                           	opt stack 27
 10084                           
 10085                           ;internal_flash.c: 187: uint32_t page_start_address;;internal_flash.c: 188: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 10086                           
 10087                           ;incstack = 0
 10088  00896A  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 10089  00896E  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 10090  008972  EC4A  F04B         	call	_internalFlash_addressFromPage	;wreg free
 10091  008976  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 10092  00897A  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 10093  00897E  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 10094  008982  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 10095                           
 10096                           ;internal_flash.c: 189: address = address - page_start_address;
 10097  008986  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 10098  00898A  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 10099  00898E  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 10100  008992  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 10101  008996  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 10102  008998  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 10103  00899A  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 10104  00899C  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 10105  00899E  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 10106  0089A0  0E00               	movlw	0
 10107  0089A2  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 10108  0089A4  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 10109  0089A6  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 10110  0089A8  5009               	movf	internalFlash_addressWithinPage@address,w,c
 10111  0089AA  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 10112  0089AC  6E09               	movwf	internalFlash_addressWithinPage@address,c
 10113  0089AE  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 10114  0089B0  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 10115  0089B2  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 10116  0089B4  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 10117  0089B6  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 10118  0089B8  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 10119  0089BA  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 10120  0089BC  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 10121  0089BE  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 10122                           
 10123                           ;internal_flash.c: 190: return (uint16_t) address;
 10124  0089C0  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 10125  0089C4  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 10126  0089C8  0012               	return	
 10127  0089CA                     __end_of_internalFlash_addressWithinPage:
 10128                           	opt stack 0
 10129                           tblptru	equ	0xFF8
 10130                           tblptrh	equ	0xFF7
 10131                           tblptrl	equ	0xFF6
 10132                           tablat	equ	0xFF5
 10133                           prodh	equ	0xFF4
 10134                           prodl	equ	0xFF3
 10135                           intcon	equ	0xFF2
 10136                           intcon2	equ	0xFF1
 10137                           intcon3	equ	0xFF0
 10138                           postinc0	equ	0xFEE
 10139                           wreg	equ	0xFE8
 10140                           indf1	equ	0xFE7
 10141                           postdec1	equ	0xFE5
 10142                           plusw1	equ	0xFE3
 10143                           fsr1h	equ	0xFE2
 10144                           fsr1l	equ	0xFE1
 10145                           indf2	equ	0xFDF
 10146                           postinc2	equ	0xFDE
 10147                           postdec2	equ	0xFDD
 10148                           plusw2	equ	0xFDB
 10149                           fsr2h	equ	0xFDA
 10150                           fsr2l	equ	0xFD9
 10151                           status	equ	0xFD8
 10152                           
 10153 ;; *************** function _internalFlash_addressFromPage *****************
 10154 ;; Defined at:
 10155 ;;		line 177 in file "internal_flash.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;  page            2    0[COMRAM] unsigned int 
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;  address         4    4[COMRAM] unsigned long 
 10160 ;; Return value:  Size  Location     Type
 10161 ;;                  4    0[COMRAM] unsigned long 
 10162 ;; Registers used:
 10163 ;;		wreg, status,2, status,0
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10170 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10172 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10173 ;;Total ram usage:        8 bytes
 10174 ;; Hardware stack levels used:    1
 10175 ;; This function calls:
 10176 ;;		Nothing
 10177 ;; This function is called by:
 10178 ;;		_internalFlash_readPage
 10179 ;;		_internalFlash_erasePage
 10180 ;;		_internalFlash_writePage
 10181 ;;		_internalFlash_addressWithinPage
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           	psect	text42
 10186  009694                     __ptext42:
 10187                           	opt stack 0
 10188  009694                     _internalFlash_addressFromPage:
 10189                           	opt stack 27
 10190                           
 10191                           ;internal_flash.c: 179: uint32_t address;;internal_flash.c: 180: address = (uint32_t) pa
      +                          ge;
 10192                           
 10193                           ;incstack = 0
 10194  009694  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 10195  009698  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 10196  00969C  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 10197  00969E  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 10198                           
 10199                           ;internal_flash.c: 181: address <<= 10;
 10200  0096A0  0E0A               	movlw	10
 10201  0096A2                     u11295:
 10202  0096A2  90D8               	bcf	status,0,c
 10203  0096A4  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 10204  0096A6  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 10205  0096A8  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 10206  0096AA  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 10207  0096AC  2EE8               	decfsz	wreg,f,c
 10208  0096AE  D7F9               	goto	u11295
 10209                           
 10210                           ;internal_flash.c: 182: return address;
 10211  0096B0  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 10212  0096B4  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 10213  0096B8  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 10214  0096BC  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 10215  0096C0  0012               	return	
 10216  0096C2                     __end_of_internalFlash_addressFromPage:
 10217                           	opt stack 0
 10218                           tblptru	equ	0xFF8
 10219                           tblptrh	equ	0xFF7
 10220                           tblptrl	equ	0xFF6
 10221                           tablat	equ	0xFF5
 10222                           prodh	equ	0xFF4
 10223                           prodl	equ	0xFF3
 10224                           intcon	equ	0xFF2
 10225                           intcon2	equ	0xFF1
 10226                           intcon3	equ	0xFF0
 10227                           postinc0	equ	0xFEE
 10228                           wreg	equ	0xFE8
 10229                           indf1	equ	0xFE7
 10230                           postdec1	equ	0xFE5
 10231                           plusw1	equ	0xFE3
 10232                           fsr1h	equ	0xFE2
 10233                           fsr1l	equ	0xFE1
 10234                           indf2	equ	0xFDF
 10235                           postinc2	equ	0xFDE
 10236                           postdec2	equ	0xFDD
 10237                           plusw2	equ	0xFDB
 10238                           fsr2h	equ	0xFDA
 10239                           fsr2l	equ	0xFD9
 10240                           status	equ	0xFD8
 10241                           
 10242 ;; *************** function __bootloader_check_address *****************
 10243 ;; Defined at:
 10244 ;;		line 112 in file "bootloader.c"
 10245 ;; Parameters:    Size  Location     Type
 10246 ;;  address         4    0[COMRAM] unsigned long 
 10247 ;;  dataLength      1    4[COMRAM] unsigned char 
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;  cntr            1   11[COMRAM] unsigned char 
 10250 ;;  byte_status     1   10[COMRAM] enum E6965
 10251 ;;  worst_case      1    9[COMRAM] enum E6965
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1    wreg      enum E6965
 10254 ;; Registers used:
 10255 ;;		wreg, status,2, status,0
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10261 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10262 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10263 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10264 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10265 ;;Total ram usage:       12 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; This function calls:
 10268 ;;		Nothing
 10269 ;; This function is called by:
 10270 ;;		__bootloader_verify_file
 10271 ;;		__bootloader_program
 10272 ;; This function uses a non-reentrant model
 10273 ;;
 10274                           
 10275                           	psect	text43
 10276  006A50                     __ptext43:
 10277                           	opt stack 0
 10278  006A50                     __bootloader_check_address:
 10279                           	opt stack 28
 10280                           
 10281                           ;bootloader.c: 114: addressCheckResult_t byte_status;;bootloader.c: 115: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 116: uint8_t cntr;;bootloader.c: 118: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 10282                           
 10283                           ;incstack = 0
 10284  006A50  0E00               	movlw	0
 10285  006A52  6E0A               	movwf	__bootloader_check_address@worst_case,c
 10286                           
 10287                           ;bootloader.c: 121: for(cntr=0; cntr<dataLength; ++cntr)
 10288  006A54  0E00               	movlw	0
 10289  006A56  6E0C               	movwf	__bootloader_check_address@cntr,c
 10290  006A58  D062               	goto	l2468
 10291  006A5A                     
 10292                           ;bootloader.c: 122: {;bootloader.c: 124: if(((address+cntr)>=0x0A000) && ((address+cntr)
      +                          <=0x1FFF7))
 10293  006A5A  500C               	movf	__bootloader_check_address@cntr,w,c
 10294  006A5C  2401               	addwf	__bootloader_check_address@address,w,c
 10295  006A5E  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10296  006A60  0E00               	movlw	0
 10297  006A62  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10298  006A64  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10299  006A66  0E00               	movlw	0
 10300  006A68  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10301  006A6A  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10302  006A6C  0E00               	movlw	0
 10303  006A6E  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10304  006A70  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10305  006A72  5009               	movf	??__bootloader_check_address+3,w,c
 10306  006A74  1008               	iorwf	??__bootloader_check_address+2,w,c
 10307  006A76  E104               	bnz	u12230
 10308  006A78  0EA0               	movlw	160
 10309  006A7A  5C07               	subwf	??__bootloader_check_address+1,w,c
 10310  006A7C  A0D8               	btfss	status,0,c
 10311  006A7E  D018               	goto	l2470
 10312  006A80                     u12230:
 10313  006A80  500C               	movf	__bootloader_check_address@cntr,w,c
 10314  006A82  2401               	addwf	__bootloader_check_address@address,w,c
 10315  006A84  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10316  006A86  0E00               	movlw	0
 10317  006A88  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10318  006A8A  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10319  006A8C  0E00               	movlw	0
 10320  006A8E  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10321  006A90  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10322  006A92  0E00               	movlw	0
 10323  006A94  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10324  006A96  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10325  006A98  5009               	movf	??__bootloader_check_address+3,w,c
 10326  006A9A  E10A               	bnz	l14936
 10327  006A9C  0EF8               	movlw	248
 10328  006A9E  5C06               	subwf	??__bootloader_check_address,w,c
 10329  006AA0  0EFF               	movlw	255
 10330  006AA2  5807               	subwfb	??__bootloader_check_address+1,w,c
 10331  006AA4  0E01               	movlw	1
 10332  006AA6  5808               	subwfb	??__bootloader_check_address+2,w,c
 10333  006AA8  B0D8               	btfsc	status,0,c
 10334  006AAA  D002               	goto	l2470
 10335                           
 10336                           ;bootloader.c: 125: {;bootloader.c: 126: byte_status = ADDRESS_CHECK_RESULT_OK;
 10337  006AAC  0E00               	movlw	0
 10338  006AAE  D029               	goto	L4
 10339  006AB0                     l2470:
 10340  006AB0                     l14936:
 10341                           
 10342                           ;bootloader.c: 130: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 10343  006AB0  500C               	movf	__bootloader_check_address@cntr,w,c
 10344  006AB2  2401               	addwf	__bootloader_check_address@address,w,c
 10345  006AB4  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10346  006AB6  0E00               	movlw	0
 10347  006AB8  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10348  006ABA  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10349  006ABC  0E00               	movlw	0
 10350  006ABE  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10351  006AC0  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10352  006AC2  0E00               	movlw	0
 10353  006AC4  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10354  006AC6  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10355  006AC8  5009               	movf	??__bootloader_check_address+3,w,c
 10356  006ACA  E108               	bnz	u12250
 10357  006ACC  0EF8               	movlw	248
 10358  006ACE  5C06               	subwf	??__bootloader_check_address,w,c
 10359  006AD0  0EFF               	movlw	255
 10360  006AD2  5807               	subwfb	??__bootloader_check_address+1,w,c
 10361  006AD4  0E01               	movlw	1
 10362  006AD6  5808               	subwfb	??__bootloader_check_address+2,w,c
 10363  006AD8  A0D8               	btfss	status,0,c
 10364  006ADA  D015               	goto	l2472
 10365  006ADC                     u12250:
 10366  006ADC  500C               	movf	__bootloader_check_address@cntr,w,c
 10367  006ADE  2401               	addwf	__bootloader_check_address@address,w,c
 10368  006AE0  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10369  006AE2  0E00               	movlw	0
 10370  006AE4  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10371  006AE6  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10372  006AE8  0E00               	movlw	0
 10373  006AEA  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10374  006AEC  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10375  006AEE  0E00               	movlw	0
 10376  006AF0  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10377  006AF2  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10378  006AF4  5009               	movf	??__bootloader_check_address+3,w,c
 10379  006AF6  E107               	bnz	l2472
 10380  006AF8  0E02               	movlw	2
 10381  006AFA  5C08               	subwf	??__bootloader_check_address+2,w,c
 10382  006AFC  B0D8               	btfsc	status,0,c
 10383  006AFE  D003               	goto	l2472
 10384                           
 10385                           ;bootloader.c: 131: {;bootloader.c: 132: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 10386  006B00  0E01               	movlw	1
 10387  006B02                     L4:
 10388  006B02  6E0B               	movwf	__bootloader_check_address@byte_status,c
 10389                           
 10390                           ;bootloader.c: 133: }
 10391  006B04  D001               	goto	l2473
 10392  006B06                     l2472:
 10393                           
 10394                           ;bootloader.c: 134: else;bootloader.c: 135: {;bootloader.c: 136: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 10395  006B06  680B               	setf	__bootloader_check_address@byte_status,c
 10396  006B08                     l2473:
 10397                           
 10398                           ;bootloader.c: 137: };bootloader.c: 140: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 10399  006B08  280B               	incf	__bootloader_check_address@byte_status,w,c
 10400  006B0A  A4D8               	btfss	status,2,c
 10401  006B0C  D002               	goto	l2474
 10402                           
 10403                           ;bootloader.c: 141: {;bootloader.c: 142: return ADDRESS_CHECK_RESULT_ERROR;
 10404  006B0E  0EFF               	movlw	255
 10405  006B10  0012               	return	
 10406  006B12                     l2474:
 10407                           
 10408                           ;bootloader.c: 143: };bootloader.c: 146: if(byte_status > worst_case)
 10409  006B12  500B               	movf	__bootloader_check_address@byte_status,w,c
 10410  006B14  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 10411  006B16  A0D8               	btfss	status,0,c
 10412                           
 10413                           ;bootloader.c: 147: {;bootloader.c: 148: worst_case = byte_status;
 10414  006B18  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 10415  006B1C  2A0C               	incf	__bootloader_check_address@cntr,f,c
 10416  006B1E                     l2468:
 10417  006B1E  5005               	movf	__bootloader_check_address@dataLength,w,c
 10418  006B20  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 10419  006B22  A0D8               	btfss	status,0,c
 10420  006B24  D79A               	goto	l2469
 10421                           
 10422                           ;bootloader.c: 149: };bootloader.c: 150: };bootloader.c: 152: return worst_case;
 10423  006B26  500A               	movf	__bootloader_check_address@worst_case,w,c
 10424  006B28  0012               	return	
 10425  006B2A                     __end_of__bootloader_check_address:
 10426                           	opt stack 0
 10427                           tblptru	equ	0xFF8
 10428                           tblptrh	equ	0xFF7
 10429                           tblptrl	equ	0xFF6
 10430                           tablat	equ	0xFF5
 10431                           prodh	equ	0xFF4
 10432                           prodl	equ	0xFF3
 10433                           intcon	equ	0xFF2
 10434                           intcon2	equ	0xFF1
 10435                           intcon3	equ	0xFF0
 10436                           postinc0	equ	0xFEE
 10437                           wreg	equ	0xFE8
 10438                           indf1	equ	0xFE7
 10439                           postdec1	equ	0xFE5
 10440                           plusw1	equ	0xFE3
 10441                           fsr1h	equ	0xFE2
 10442                           fsr1l	equ	0xFE1
 10443                           indf2	equ	0xFDF
 10444                           postinc2	equ	0xFDE
 10445                           postdec2	equ	0xFDD
 10446                           plusw2	equ	0xFDB
 10447                           fsr2h	equ	0xFDA
 10448                           fsr2l	equ	0xFD9
 10449                           status	equ	0xFD8
 10450                           
 10451 ;; *************** function __bootloader_find_file *****************
 10452 ;; Defined at:
 10453 ;;		line 155 in file "bootloader.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;		None
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;		None
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  1    wreg      void 
 10460 ;; Registers used:
 10461 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10462 ;; Tracked objects:
 10463 ;;		On entry : 0/0
 10464 ;;		On exit  : 0/0
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10471 ;;Total ram usage:        0 bytes
 10472 ;; Hardware stack levels used:    1
 10473 ;; Hardware stack levels required when called:    7
 10474 ;; This function calls:
 10475 ;;		_fat_find_file
 10476 ;;		_fat_get_file_size
 10477 ;; This function is called by:
 10478 ;;		_bootloader_run
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482                           	psect	text44
 10483  0077AE                     __ptext44:
 10484                           	opt stack 0
 10485  0077AE                     __bootloader_find_file:
 10486                           	opt stack 22
 10487                           
 10488                           ;bootloader.c: 158: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 10489                           
 10490                           ;incstack = 0
 10491  0077AE  0EB6               	movlw	low _bootloader_filename
 10492  0077B0  6E2C               	movwf	fat_find_file@name,c
 10493  0077B2  0EBF               	movlw	high _bootloader_filename
 10494  0077B4  6E2D               	movwf	fat_find_file@name+1,c
 10495  0077B6  0EC7               	movlw	low _bootloader_extension
 10496  0077B8  6E2E               	movwf	fat_find_file@extension,c
 10497  0077BA  0EBF               	movlw	high _bootloader_extension
 10498  0077BC  6E2F               	movwf	fat_find_file@extension+1,c
 10499  0077BE  EC49  F034         	call	_fat_find_file	;wreg free
 10500  0077C2  0100               	movlb	0	; () banked
 10501  0077C4  6FFF               	movwf	_file_number& (0+255),b
 10502                           
 10503                           ; BSR set to: 0
 10504                           ;bootloader.c: 161: if(file_number!=0xFF)
 10505  0077C6  29FF               	incf	_file_number& (0+255),w,b
 10506  0077C8  B4D8               	btfsc	status,2,c
 10507  0077CA  D034               	goto	l2480
 10508                           
 10509                           ; BSR set to: 0
 10510                           ;bootloader.c: 162: {;bootloader.c: 164: hex_file_size = fat_get_file_size(file_number);
 10511  0077CC  51FF               	movf	_file_number& (0+255),w,b
 10512  0077CE  ECB3  F042         	call	_fat_get_file_size
 10513  0077D2  C036  F14A         	movff	?_fat_get_file_size,_hex_file_size
 10514  0077D6  C037  F14B         	movff	?_fat_get_file_size+1,_hex_file_size+1
 10515  0077DA  C038  F14C         	movff	?_fat_get_file_size+2,_hex_file_size+2
 10516  0077DE  C039  F14D         	movff	?_fat_get_file_size+3,_hex_file_size+3
 10517                           
 10518                           ;bootloader.c: 166: hex_file_entries = 0;
 10519  0077E2  0E00               	movlw	0
 10520  0077E4  0101               	movlb	1	; () banked
 10521  0077E6  6F79               	movwf	(_hex_file_entries+1)& (0+255),b
 10522  0077E8  0E00               	movlw	0
 10523  0077EA  6F78               	movwf	_hex_file_entries& (0+255),b
 10524                           
 10525                           ; BSR set to: 1
 10526                           ;bootloader.c: 167: hex_file_offset = 0;
 10527  0077EC  0E00               	movlw	0
 10528  0077EE  0100               	movlb	0	; () banked
 10529  0077F0  6FD7               	movwf	_hex_file_offset& (0+255),b
 10530  0077F2  0E00               	movlw	0
 10531  0077F4  6FD8               	movwf	(_hex_file_offset+1)& (0+255),b
 10532  0077F6  0E00               	movlw	0
 10533  0077F8  6FD9               	movwf	(_hex_file_offset+2)& (0+255),b
 10534  0077FA  0E00               	movlw	0
 10535  0077FC  6FDA               	movwf	(_hex_file_offset+3)& (0+255),b
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;bootloader.c: 168: file_minimum_address = 0xFFFFFFFF;
 10539  0077FE  0101               	movlb	1	; () banked
 10540  007800  6952               	setf	_file_minimum_address& (0+255),b
 10541  007802  6953               	setf	(_file_minimum_address+1)& (0+255),b
 10542  007804  6954               	setf	(_file_minimum_address+2)& (0+255),b
 10543  007806  6955               	setf	(_file_minimum_address+3)& (0+255),b
 10544                           
 10545                           ; BSR set to: 1
 10546                           ;bootloader.c: 169: file_maximum_address = 0x00000000;
 10547  007808  0E00               	movlw	0
 10548  00780A  6F4E               	movwf	_file_maximum_address& (0+255),b
 10549  00780C  0E00               	movlw	0
 10550  00780E  6F4F               	movwf	(_file_maximum_address+1)& (0+255),b
 10551  007810  0E00               	movlw	0
 10552  007812  6F50               	movwf	(_file_maximum_address+2)& (0+255),b
 10553  007814  0E00               	movlw	0
 10554  007816  6F51               	movwf	(_file_maximum_address+3)& (0+255),b
 10555                           
 10556                           ; BSR set to: 1
 10557                           ;bootloader.c: 170: extended_linear_address = 0x00000000;
 10558  007818  0E00               	movlw	0
 10559  00781A  6F46               	movwf	_extended_linear_address& (0+255),b
 10560  00781C  0E00               	movlw	0
 10561  00781E  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
 10562  007820  0E00               	movlw	0
 10563  007822  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
 10564  007824  0E00               	movlw	0
 10565  007826  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
 10566                           
 10567                           ; BSR set to: 1
 10568                           ;bootloader.c: 171: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 10569  007828  0E20               	movlw	32
 10570  00782A  0100               	movlb	0	; () banked
 10571  00782C  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
 10572                           
 10573                           ; BSR set to: 0
 10574                           ;bootloader.c: 172: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 10575  00782E  0E20               	movlw	32
 10576  007830  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 10577                           
 10578                           ;bootloader.c: 173: }
 10579  007832  0012               	return	
 10580  007834                     l2480:
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;bootloader.c: 175: else;bootloader.c: 176: {;bootloader.c: 178: hex_file_size = 0;
 10584                           
 10585                           ; BSR set to: 0
 10586  007834  0E00               	movlw	0
 10587  007836  0101               	movlb	1	; () banked
 10588  007838  6F4A               	movwf	_hex_file_size& (0+255),b
 10589  00783A  0E00               	movlw	0
 10590  00783C  6F4B               	movwf	(_hex_file_size+1)& (0+255),b
 10591  00783E  0E00               	movlw	0
 10592  007840  6F4C               	movwf	(_hex_file_size+2)& (0+255),b
 10593  007842  0E00               	movlw	0
 10594  007844  6F4D               	movwf	(_hex_file_size+3)& (0+255),b
 10595                           
 10596                           ;bootloader.c: 180: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 10597  007846  0E10               	movlw	16
 10598  007848  0100               	movlb	0	; () banked
 10599  00784A  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
 10600                           
 10601                           ;bootloader.c: 181: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 10602  00784C  0E10               	movlw	16
 10603  00784E  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 10604  007850  0012               	return	
 10605  007852                     __end_of__bootloader_find_file:
 10606                           	opt stack 0
 10607                           tblptru	equ	0xFF8
 10608                           tblptrh	equ	0xFF7
 10609                           tblptrl	equ	0xFF6
 10610                           tablat	equ	0xFF5
 10611                           prodh	equ	0xFF4
 10612                           prodl	equ	0xFF3
 10613                           intcon	equ	0xFF2
 10614                           intcon2	equ	0xFF1
 10615                           intcon3	equ	0xFF0
 10616                           postinc0	equ	0xFEE
 10617                           wreg	equ	0xFE8
 10618                           indf1	equ	0xFE7
 10619                           postdec1	equ	0xFE5
 10620                           plusw1	equ	0xFE3
 10621                           fsr1h	equ	0xFE2
 10622                           fsr1l	equ	0xFE1
 10623                           indf2	equ	0xFDF
 10624                           postinc2	equ	0xFDE
 10625                           postdec2	equ	0xFDD
 10626                           plusw2	equ	0xFDB
 10627                           fsr2h	equ	0xFDA
 10628                           fsr2l	equ	0xFD9
 10629                           status	equ	0xFD8
 10630                           
 10631 ;; *************** function __normal_mode *****************
 10632 ;; Defined at:
 10633 ;;		line 208 in file "main.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;		None
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;		None
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  1    wreg      unsigned char 
 10640 ;; Registers used:
 10641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10651 ;;Total ram usage:        0 bytes
 10652 ;; Hardware stack levels used:    1
 10653 ;; Hardware stack levels required when called:    3
 10654 ;; This function calls:
 10655 ;;		_i2c_eeprom_readByte
 10656 ;;		_i2c_eeprom_writeByte
 10657 ;; This function is called by:
 10658 ;;		_main
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           	psect	text45
 10663  0089CA                     __ptext45:
 10664                           	opt stack 0
 10665  0089CA                     __normal_mode:
 10666                           	opt stack 27
 10667                           
 10668                           ;main.c: 210: if(i2c_eeprom_readByte(0x100)==0x94)
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;incstack = 0
 10672  0089CA  0E01               	movlw	1
 10673  0089CC  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10674  0089CE  0E00               	movlw	0
 10675  0089D0  6E12               	movwf	i2c_eeprom_readByte@address,c
 10676  0089D2  ECC9  F047         	call	_i2c_eeprom_readByte	;wreg free
 10677  0089D6  0A94               	xorlw	148
 10678  0089D8  A4D8               	btfss	status,2,c
 10679  0089DA  D00A               	goto	l914
 10680                           
 10681                           ;main.c: 211: {;main.c: 213: i2c_eeprom_writeByte(0x100, 0x00);
 10682  0089DC  0E01               	movlw	1
 10683  0089DE  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10684  0089E0  0E00               	movlw	0
 10685  0089E2  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10686  0089E4  0E00               	movlw	0
 10687  0089E6  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10688  0089E8  EC9B  F049         	call	_i2c_eeprom_writeByte	;wreg free
 10689                           
 10690                           ;main.c: 215: return 0;
 10691  0089EC  0E00               	movlw	0
 10692  0089EE  0012               	return	
 10693  0089F0                     l914:
 10694                           
 10695                           ;main.c: 217: else if(i2c_eeprom_readByte(0x100)==0x78)
 10696  0089F0  0E01               	movlw	1
 10697  0089F2  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10698  0089F4  0E00               	movlw	0
 10699  0089F6  6E12               	movwf	i2c_eeprom_readByte@address,c
 10700  0089F8  ECC9  F047         	call	_i2c_eeprom_readByte	;wreg free
 10701  0089FC  0A78               	xorlw	120
 10702  0089FE  A4D8               	btfss	status,2,c
 10703  008A00  D00A               	goto	l917
 10704                           
 10705                           ;main.c: 218: {;main.c: 220: i2c_eeprom_writeByte(0x100, 0x00);
 10706  008A02  0E01               	movlw	1
 10707  008A04  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10708  008A06  0E00               	movlw	0
 10709  008A08  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10710  008A0A  0E00               	movlw	0
 10711  008A0C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10712  008A0E  EC9B  F049         	call	_i2c_eeprom_writeByte	;wreg free
 10713                           
 10714                           ;main.c: 222: return 1;
 10715  008A12  0E01               	movlw	1
 10716  008A14  0012               	return	
 10717  008A16                     l917:
 10718                           
 10719                           ;main.c: 223: };main.c: 229: LATAbits.LA0 = 1;
 10720  008A16  8089               	bsf	3977,0,c	;volatile
 10721                           
 10722                           ;main.c: 230: TRISAbits.TRISA0 = 0;
 10723  008A18  9092               	bcf	3986,0,c	;volatile
 10724                           
 10725                           ;main.c: 231: TRISAbits.TRISA0 = 1;
 10726  008A1A  8092               	bsf	3986,0,c	;volatile
 10727                           
 10728                           ;main.c: 233: if(!PORTAbits.RA0)
 10729  008A1C  B080               	btfsc	3968,0,c	;volatile
 10730  008A1E  D002               	goto	l918
 10731                           
 10732                           ;main.c: 234: {;main.c: 236: return 0;
 10733  008A20  0E00               	movlw	0
 10734                           
 10735                           ;main.c: 237: }
 10736  008A22  0012               	return	
 10737  008A24                     l918:
 10738                           
 10739                           ;main.c: 238: else;main.c: 239: {;main.c: 241: return 1;
 10740  008A24  0E01               	movlw	1
 10741  008A26  0012               	return	
 10742  008A28                     __end_of__normal_mode:
 10743                           	opt stack 0
 10744                           tblptru	equ	0xFF8
 10745                           tblptrh	equ	0xFF7
 10746                           tblptrl	equ	0xFF6
 10747                           tablat	equ	0xFF5
 10748                           prodh	equ	0xFF4
 10749                           prodl	equ	0xFF3
 10750                           intcon	equ	0xFF2
 10751                           intcon2	equ	0xFF1
 10752                           intcon3	equ	0xFF0
 10753                           postinc0	equ	0xFEE
 10754                           wreg	equ	0xFE8
 10755                           indf1	equ	0xFE7
 10756                           postdec1	equ	0xFE5
 10757                           plusw1	equ	0xFE3
 10758                           fsr1h	equ	0xFE2
 10759                           fsr1l	equ	0xFE1
 10760                           indf2	equ	0xFDF
 10761                           postinc2	equ	0xFDE
 10762                           postdec2	equ	0xFDD
 10763                           plusw2	equ	0xFDB
 10764                           fsr2h	equ	0xFDA
 10765                           fsr2l	equ	0xFD9
 10766                           status	equ	0xFD8
 10767                           
 10768 ;; *************** function _i2c_eeprom_readByte *****************
 10769 ;; Defined at:
 10770 ;;		line 367 in file "i2c.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  address         2   17[COMRAM] unsigned int 
 10773 ;; Auto vars:     Size  Location     Type
 10774 ;;  addr            1   23[COMRAM] unsigned char 
 10775 ;;  slave_addres    1   22[COMRAM] unsigned char 
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  1    wreg      unsigned char 
 10778 ;; Registers used:
 10779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10787 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10788 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;Total ram usage:        7 bytes
 10790 ;; Hardware stack levels used:    1
 10791 ;; Hardware stack levels required when called:    2
 10792 ;; This function calls:
 10793 ;;		__i2c_read
 10794 ;;		__i2c_write
 10795 ;;		_i2c_set_frequency
 10796 ;; This function is called by:
 10797 ;;		__normal_mode
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801                           	psect	text46
 10802  008F92                     __ptext46:
 10803                           	opt stack 0
 10804  008F92                     _i2c_eeprom_readByte:
 10805                           	opt stack 27
 10806                           
 10807                           ;i2c.c: 369: uint8_t slave_address;;i2c.c: 370: uint8_t addr;;i2c.c: 371: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 10808                           
 10809                           ;incstack = 0
 10810  008F92  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 10811  008F96  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 10812  008F9A  0E07               	movlw	7
 10813  008F9C  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 10814  008F9E                     u12925:
 10815  008F9E  90D8               	bcf	status,0,c
 10816  008FA0  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 10817  008FA2  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 10818  008FA4  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 10819  008FA6  D7FB               	goto	u12925
 10820  008FA8  5014               	movf	??_i2c_eeprom_readByte,w,c
 10821  008FAA  0B0E               	andlw	14
 10822  008FAC  09A0               	iorlw	160
 10823  008FAE  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 10824                           
 10825                           ;i2c.c: 372: addr = address & 0xFF;
 10826  008FB0  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 10827                           
 10828                           ;i2c.c: 375: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10829  008FB4  0E02               	movlw	2
 10830  008FB6  ECD1  F04B         	call	_i2c_set_frequency
 10831                           
 10832                           ;i2c.c: 377: _i2c_write(slave_address, &addr, 1);
 10833  008FBA  0E18               	movlw	low i2c_eeprom_readByte@addr
 10834  008FBC  6E06               	movwf	__i2c_write@data,c
 10835  008FBE  0E00               	movlw	high i2c_eeprom_readByte@addr
 10836  008FC0  6E07               	movwf	__i2c_write@data+1,c
 10837  008FC2  0E01               	movlw	1
 10838  008FC4  6E08               	movwf	__i2c_write@length,c
 10839  008FC6  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10840  008FC8  EC65  F048         	call	__i2c_write
 10841                           
 10842                           ;i2c.c: 378: _i2c_read(slave_address, &addr, 1);
 10843  008FCC  0E18               	movlw	low i2c_eeprom_readByte@addr
 10844  008FCE  6E06               	movwf	__i2c_read@data,c
 10845  008FD0  0E00               	movlw	high i2c_eeprom_readByte@addr
 10846  008FD2  6E07               	movwf	__i2c_read@data+1,c
 10847  008FD4  0E01               	movlw	1
 10848  008FD6  6E08               	movwf	__i2c_read@length,c
 10849  008FD8  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10850  008FDA  ECCE  F03F         	call	__i2c_read
 10851                           
 10852                           ;i2c.c: 379: return addr;
 10853  008FDE  5018               	movf	i2c_eeprom_readByte@addr,w,c
 10854  008FE0  0012               	return	
 10855  008FE2                     __end_of_i2c_eeprom_readByte:
 10856                           	opt stack 0
 10857                           tblptru	equ	0xFF8
 10858                           tblptrh	equ	0xFF7
 10859                           tblptrl	equ	0xFF6
 10860                           tablat	equ	0xFF5
 10861                           prodh	equ	0xFF4
 10862                           prodl	equ	0xFF3
 10863                           intcon	equ	0xFF2
 10864                           intcon2	equ	0xFF1
 10865                           intcon3	equ	0xFF0
 10866                           postinc0	equ	0xFEE
 10867                           wreg	equ	0xFE8
 10868                           indf1	equ	0xFE7
 10869                           postdec1	equ	0xFE5
 10870                           plusw1	equ	0xFE3
 10871                           fsr1h	equ	0xFE2
 10872                           fsr1l	equ	0xFE1
 10873                           indf2	equ	0xFDF
 10874                           postinc2	equ	0xFDE
 10875                           postdec2	equ	0xFDD
 10876                           plusw2	equ	0xFDB
 10877                           fsr2h	equ	0xFDA
 10878                           fsr2l	equ	0xFD9
 10879                           status	equ	0xFD8
 10880                           
 10881 ;; *************** function __i2c_read *****************
 10882 ;; Defined at:
 10883 ;;		line 161 in file "i2c.c"
 10884 ;; Parameters:    Size  Location     Type
 10885 ;;  slave_addres    1    wreg     unsigned char 
 10886 ;;  data            2    5[COMRAM] PTR unsigned char 
 10887 ;;		 -> i2c_eeprom_readByte@addr(1), 
 10888 ;;  length          1    7[COMRAM] unsigned char 
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  slave_addres    1   15[COMRAM] unsigned char 
 10891 ;;  cntr            1   16[COMRAM] unsigned char 
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  1    wreg      void 
 10894 ;; Registers used:
 10895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10901 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10903 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10904 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10905 ;;Total ram usage:       12 bytes
 10906 ;; Hardware stack levels used:    1
 10907 ;; Hardware stack levels required when called:    1
 10908 ;; This function calls:
 10909 ;;		__i2c_acknowledge
 10910 ;;		__i2c_get
 10911 ;;		__i2c_not_acknowledge
 10912 ;;		__i2c_send
 10913 ;;		__i2c_start
 10914 ;;		__i2c_stop
 10915 ;;		__i2c_wait_idle
 10916 ;; This function is called by:
 10917 ;;		_i2c_eeprom_readByte
 10918 ;;		_i2c_eeprom_read
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           	psect	text47
 10923  007F9C                     __ptext47:
 10924                           	opt stack 0
 10925  007F9C                     __i2c_read:
 10926                           	opt stack 27
 10927                           
 10928                           ;incstack = 0
 10929                           ;__i2c_read@slave_address stored from wreg
 10930  007F9C  6E10               	movwf	__i2c_read@slave_address,c
 10931                           
 10932                           ;i2c.c: 163: uint8_t cntr;;i2c.c: 165: _i2c_wait_idle();
 10933  007F9E  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 10934                           
 10935                           ;i2c.c: 166: _i2c_start();
 10936  007FA2  EC7B  F04E         	call	__i2c_start	;wreg free
 10937                           
 10938                           ;i2c.c: 167: _i2c_wait_idle();
 10939  007FA6  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 10940                           
 10941                           ;i2c.c: 168: _i2c_send(slave_address | 0x01);
 10942  007FAA  5010               	movf	__i2c_read@slave_address,w,c
 10943  007FAC  0901               	iorlw	1
 10944  007FAE  EC7F  F04E         	call	__i2c_send
 10945                           
 10946                           ;i2c.c: 169: _i2c_wait_idle();
 10947  007FB2  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 10948                           
 10949                           ;i2c.c: 171: for(cntr=0; cntr<length-1; ++cntr)
 10950  007FB6  0E00               	movlw	0
 10951  007FB8  6E11               	movwf	__i2c_read@cntr,c
 10952  007FBA  D00E               	goto	l1209
 10953  007FBC                     
 10954                           ;i2c.c: 172: {;i2c.c: 173: data[cntr] = _i2c_get();
 10955  007FBC  5011               	movf	__i2c_read@cntr,w,c
 10956  007FBE  0D01               	mullw	1
 10957  007FC0  50F3               	movf	prodl,w,c
 10958  007FC2  2406               	addwf	__i2c_read@data,w,c
 10959  007FC4  6ED9               	movwf	fsr2l,c
 10960  007FC6  50F4               	movf	prodh,w,c
 10961  007FC8  2007               	addwfc	__i2c_read@data+1,w,c
 10962  007FCA  6EDA               	movwf	fsr2h,c
 10963  007FCC  EC45  F04E         	call	__i2c_get	;wreg free
 10964  007FD0  6EDF               	movwf	indf2,c
 10965                           
 10966                           ;i2c.c: 174: _i2c_acknowledge();
 10967  007FD2  EC4A  F04E         	call	__i2c_acknowledge	;wreg free
 10968  007FD6  2A11               	incf	__i2c_read@cntr,f,c
 10969  007FD8                     l1209:
 10970  007FD8  0EFF               	movlw	255
 10971  007FDA  6E09               	movwf	??__i2c_read& (0+255),c
 10972  007FDC  0EFF               	movlw	255
 10973  007FDE  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 10974  007FE0  5008               	movf	__i2c_read@length,w,c
 10975  007FE2  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 10976  007FE4  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 10977  007FE6  5009               	movf	??__i2c_read,w,c
 10978  007FE8  260B               	addwf	??__i2c_read+2,f,c
 10979  007FEA  500A               	movf	??__i2c_read+1,w,c
 10980  007FEC  220C               	addwfc	??__i2c_read+3,f,c
 10981  007FEE  5011               	movf	__i2c_read@cntr,w,c
 10982  007FF0  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 10983  007FF2  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 10984  007FF4  500B               	movf	??__i2c_read+2,w,c
 10985  007FF6  5C0D               	subwf	??__i2c_read+4,w,c
 10986  007FF8  500E               	movf	??__i2c_read+5,w,c
 10987  007FFA  0A80               	xorlw	128
 10988  007FFC  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 10989  007FFE  500C               	movf	??__i2c_read+3,w,c
 10990  008000  0A80               	xorlw	128
 10991  008002  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 10992  008004  A0D8               	btfss	status,0,c
 10993  008006  D7DA               	goto	l1210
 10994                           
 10995                           ;i2c.c: 175: };i2c.c: 176: data[cntr] = _i2c_get();
 10996  008008  5011               	movf	__i2c_read@cntr,w,c
 10997  00800A  0D01               	mullw	1
 10998  00800C  50F3               	movf	prodl,w,c
 10999  00800E  2406               	addwf	__i2c_read@data,w,c
 11000  008010  6ED9               	movwf	fsr2l,c
 11001  008012  50F4               	movf	prodh,w,c
 11002  008014  2007               	addwfc	__i2c_read@data+1,w,c
 11003  008016  6EDA               	movwf	fsr2h,c
 11004  008018  EC45  F04E         	call	__i2c_get	;wreg free
 11005  00801C  6EDF               	movwf	indf2,c
 11006                           
 11007                           ;i2c.c: 177: _i2c_not_acknowledge();
 11008  00801E  EC40  F04E         	call	__i2c_not_acknowledge	;wreg free
 11009                           
 11010                           ;i2c.c: 179: _i2c_stop();
 11011  008022  EC77  F04E         	call	__i2c_stop	;wreg free
 11012  008026  0012               	return		;funcret
 11013  008028                     __end_of__i2c_read:
 11014                           	opt stack 0
 11015                           tblptru	equ	0xFF8
 11016                           tblptrh	equ	0xFF7
 11017                           tblptrl	equ	0xFF6
 11018                           tablat	equ	0xFF5
 11019                           prodh	equ	0xFF4
 11020                           prodl	equ	0xFF3
 11021                           intcon	equ	0xFF2
 11022                           intcon2	equ	0xFF1
 11023                           intcon3	equ	0xFF0
 11024                           postinc0	equ	0xFEE
 11025                           wreg	equ	0xFE8
 11026                           indf1	equ	0xFE7
 11027                           postdec1	equ	0xFE5
 11028                           plusw1	equ	0xFE3
 11029                           fsr1h	equ	0xFE2
 11030                           fsr1l	equ	0xFE1
 11031                           indf2	equ	0xFDF
 11032                           postinc2	equ	0xFDE
 11033                           postdec2	equ	0xFDD
 11034                           plusw2	equ	0xFDB
 11035                           fsr2h	equ	0xFDA
 11036                           fsr2l	equ	0xFD9
 11037                           status	equ	0xFD8
 11038                           
 11039 ;; *************** function __i2c_not_acknowledge *****************
 11040 ;; Defined at:
 11041 ;;		line 90 in file "i2c.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		None
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11059 ;;Total ram usage:        0 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; This function calls:
 11062 ;;		Nothing
 11063 ;; This function is called by:
 11064 ;;		__i2c_read
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           	psect	text48
 11069  009C80                     __ptext48:
 11070                           	opt stack 0
 11071  009C80                     __i2c_not_acknowledge:
 11072                           	opt stack 27
 11073                           
 11074                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 11075                           
 11076                           ;incstack = 0
 11077  009C80  8AC5               	bsf	4037,5,c	;volatile
 11078                           
 11079                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 11080  009C82  88C5               	bsf	4037,4,c	;volatile
 11081  009C84  A8C5               	btfss	4037,4,c	;volatile
 11082  009C86  0012               	return	
 11083  009C88  D7FD               	goto	l1181
 11084  009C8A                     __end_of__i2c_not_acknowledge:
 11085                           	opt stack 0
 11086                           tblptru	equ	0xFF8
 11087                           tblptrh	equ	0xFF7
 11088                           tblptrl	equ	0xFF6
 11089                           tablat	equ	0xFF5
 11090                           prodh	equ	0xFF4
 11091                           prodl	equ	0xFF3
 11092                           intcon	equ	0xFF2
 11093                           intcon2	equ	0xFF1
 11094                           intcon3	equ	0xFF0
 11095                           postinc0	equ	0xFEE
 11096                           wreg	equ	0xFE8
 11097                           indf1	equ	0xFE7
 11098                           postdec1	equ	0xFE5
 11099                           plusw1	equ	0xFE3
 11100                           fsr1h	equ	0xFE2
 11101                           fsr1l	equ	0xFE1
 11102                           indf2	equ	0xFDF
 11103                           postinc2	equ	0xFDE
 11104                           postdec2	equ	0xFDD
 11105                           plusw2	equ	0xFDB
 11106                           fsr2h	equ	0xFDA
 11107                           fsr2l	equ	0xFD9
 11108                           status	equ	0xFD8
 11109                           
 11110 ;; *************** function __i2c_get *****************
 11111 ;; Defined at:
 11112 ;;		line 67 in file "i2c.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;		None
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;		None
 11117 ;; Return value:  Size  Location     Type
 11118 ;;                  1    wreg      unsigned char 
 11119 ;; Registers used:
 11120 ;;		wreg, status,2
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/0
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11130 ;;Total ram usage:        0 bytes
 11131 ;; Hardware stack levels used:    1
 11132 ;; This function calls:
 11133 ;;		Nothing
 11134 ;; This function is called by:
 11135 ;;		__i2c_read
 11136 ;; This function uses a non-reentrant model
 11137 ;;
 11138                           
 11139                           	psect	text49
 11140  009C8A                     __ptext49:
 11141                           	opt stack 0
 11142  009C8A                     __i2c_get:
 11143                           	opt stack 27
 11144                           
 11145                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 11146                           
 11147                           ;incstack = 0
 11148  009C8A  86C5               	bsf	4037,3,c	;volatile
 11149  009C8C  B6C5               	btfsc	4037,3,c	;volatile
 11150  009C8E  D7FE               	goto	l1163
 11151                           
 11152                           ;i2c.c: 71: return SSP1BUF;
 11153  009C90  50C9               	movf	4041,w,c	;volatile
 11154  009C92  0012               	return	
 11155  009C94                     __end_of__i2c_get:
 11156                           	opt stack 0
 11157                           tblptru	equ	0xFF8
 11158                           tblptrh	equ	0xFF7
 11159                           tblptrl	equ	0xFF6
 11160                           tablat	equ	0xFF5
 11161                           prodh	equ	0xFF4
 11162                           prodl	equ	0xFF3
 11163                           intcon	equ	0xFF2
 11164                           intcon2	equ	0xFF1
 11165                           intcon3	equ	0xFF0
 11166                           postinc0	equ	0xFEE
 11167                           wreg	equ	0xFE8
 11168                           indf1	equ	0xFE7
 11169                           postdec1	equ	0xFE5
 11170                           plusw1	equ	0xFE3
 11171                           fsr1h	equ	0xFE2
 11172                           fsr1l	equ	0xFE1
 11173                           indf2	equ	0xFDF
 11174                           postinc2	equ	0xFDE
 11175                           postdec2	equ	0xFDD
 11176                           plusw2	equ	0xFDB
 11177                           fsr2h	equ	0xFDA
 11178                           fsr2l	equ	0xFD9
 11179                           status	equ	0xFD8
 11180                           
 11181 ;; *************** function __i2c_acknowledge *****************
 11182 ;; Defined at:
 11183 ;;		line 82 in file "i2c.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;		None
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;		None
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  1    wreg      void 
 11190 ;; Registers used:
 11191 ;;		None
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11201 ;;Total ram usage:        0 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; This function calls:
 11204 ;;		Nothing
 11205 ;; This function is called by:
 11206 ;;		__i2c_read
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           	psect	text50
 11211  009C94                     __ptext50:
 11212                           	opt stack 0
 11213  009C94                     __i2c_acknowledge:
 11214                           	opt stack 27
 11215                           
 11216                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 11217                           
 11218                           ;incstack = 0
 11219  009C94  9AC5               	bcf	4037,5,c	;volatile
 11220                           
 11221                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 11222  009C96  88C5               	bsf	4037,4,c	;volatile
 11223  009C98  A8C5               	btfss	4037,4,c	;volatile
 11224  009C9A  0012               	return	
 11225  009C9C  D7FD               	goto	l1175
 11226  009C9E                     __end_of__i2c_acknowledge:
 11227                           	opt stack 0
 11228                           tblptru	equ	0xFF8
 11229                           tblptrh	equ	0xFF7
 11230                           tblptrl	equ	0xFF6
 11231                           tablat	equ	0xFF5
 11232                           prodh	equ	0xFF4
 11233                           prodl	equ	0xFF3
 11234                           intcon	equ	0xFF2
 11235                           intcon2	equ	0xFF1
 11236                           intcon3	equ	0xFF0
 11237                           postinc0	equ	0xFEE
 11238                           wreg	equ	0xFE8
 11239                           indf1	equ	0xFE7
 11240                           postdec1	equ	0xFE5
 11241                           plusw1	equ	0xFE3
 11242                           fsr1h	equ	0xFE2
 11243                           fsr1l	equ	0xFE1
 11244                           indf2	equ	0xFDF
 11245                           postinc2	equ	0xFDE
 11246                           postdec2	equ	0xFDD
 11247                           plusw2	equ	0xFDB
 11248                           fsr2h	equ	0xFDA
 11249                           fsr2l	equ	0xFD9
 11250                           status	equ	0xFD8
 11251                           
 11252 ;; *************** function _USBDeviceTasks *****************
 11253 ;; Defined at:
 11254 ;;		line 477 in file "usb_device.c"
 11255 ;; Parameters:    Size  Location     Type
 11256 ;;		None
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;  i               1   31[COMRAM] unsigned char 
 11259 ;; Return value:  Size  Location     Type
 11260 ;;                  1    wreg      void 
 11261 ;; Registers used:
 11262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/0
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11272 ;;Total ram usage:        1 bytes
 11273 ;; Hardware stack levels used:    1
 11274 ;; Hardware stack levels required when called:    8
 11275 ;; This function calls:
 11276 ;;		_USBCtrlEPAllowStatusStage
 11277 ;;		_USBCtrlEPService
 11278 ;;		_USBDeviceInit
 11279 ;;		_USBIncrement1msInternalTimers
 11280 ;;		_USBStallHandler
 11281 ;;		_USBSuspend
 11282 ;;		_USBWakeFromSuspend
 11283 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11284 ;; This function is called by:
 11285 ;;		_main
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text51
 11290  003C28                     __ptext51:
 11291                           	opt stack 0
 11292  003C28                     _USBDeviceTasks:
 11293                           	opt stack 22
 11294                           
 11295                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 11296                           
 11297                           ; BSR set to: 0
 11298                           
 11299                           ; BSR set to: 0
 11300                           ;usb_device.c: 543: return;
 11301                           
 11302                           ; BSR set to: 0
 11303                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 11304                           
 11305                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 11306                           
 11307                           ;usb_device.c: 511: UIE = 0;
 11308                           
 11309                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 11310                           
 11311                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 11312                           
 11313                           ;incstack = 0
 11314  003C28  0100               	movlb	0	; () banked
 11315  003C2A  51F8               	movf	_USBDeviceState& (0+255),w,b
 11316  003C2C  A4D8               	btfss	status,2,c
 11317  003C2E  D012               	goto	l150
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 11321  003C30  0E00               	movlw	0
 11322  003C32  6E65               	movwf	3941,c	;volatile
 11323                           
 11324                           ;usb_device.c: 572: UIE = 0;
 11325  003C34  0E00               	movlw	0
 11326  003C36  010F               	movlb	15	; () banked
 11327  003C38  6F36               	movwf	54,b	;volatile
 11328                           
 11329                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11330  003C3A  0E16               	movlw	22
 11331  003C3C  6F39               	movwf	57,b	;volatile
 11332  003C3E  0E9F               	movlw	159
 11333  003C40  6F37               	movwf	55,b	;volatile
 11334  003C42  0E7B               	movlw	123
 11335  003C44  6F36               	movwf	54,b	;volatile
 11336                           
 11337                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 11338  003C46  D001               	goto	l151
 11339  003C48                     l152:
 11340  003C48  8665               	bsf	3941,3,c	;volatile
 11341  003C4A                     l151:
 11342  003C4A  A665               	btfss	3941,3,c	;volatile
 11343  003C4C  D7FD               	goto	l152
 11344                           
 11345                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 11346  003C4E  0E01               	movlw	1
 11347  003C50  0100               	movlb	0	; () banked
 11348  003C52  6FF8               	movwf	_USBDeviceState& (0+255),b
 11349  003C54                     l150:
 11350                           
 11351                           ; BSR set to: 0
 11352                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 11353                           
 11354                           ; BSR set to: 0
 11355  003C54  05F8               	decf	_USBDeviceState& (0+255),w,b
 11356  003C56  B4D8               	btfsc	status,2,c
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 11360  003C58  BA65               	btfsc	3941,5,c	;volatile
 11361  003C5A  D00A               	goto	l155
 11362                           
 11363                           ; BSR set to: 0
 11364                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 11365  003C5C  0E00               	movlw	0
 11366  003C5E  6E62               	movwf	3938,c	;volatile
 11367                           
 11368                           ;usb_device.c: 612: UIE=0;
 11369  003C60  0E00               	movlw	0
 11370  003C62  010F               	movlb	15	; () banked
 11371  003C64  6F36               	movwf	54,b	;volatile
 11372                           
 11373                           ; BSR set to: 15
 11374                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 11375  003C66  8136               	bsf	54,0,b	;volatile
 11376                           
 11377                           ; BSR set to: 15
 11378                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 11379  003C68  8936               	bsf	54,4,b	;volatile
 11380                           
 11381                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 11382  003C6A  0E02               	movlw	2
 11383  003C6C  0100               	movlb	0	; () banked
 11384  003C6E  6FF8               	movwf	_USBDeviceState& (0+255),b
 11385  003C70                     l155:
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 11389                           
 11390                           ; BSR set to: 0
 11391                           
 11392                           ; BSR set to: 0
 11393  003C70  A462               	btfss	3938,2,c	;volatile
 11394  003C72  D006               	goto	l156
 11395                           
 11396                           ; BSR set to: 0
 11397  003C74  010F               	movlb	15	; () banked
 11398  003C76  A536               	btfss	54,2,b	;volatile
 11399  003C78  D003               	goto	l156
 11400                           
 11401                           ; BSR set to: 15
 11402                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 11403  003C7A  9462               	bcf	3938,2,c	;volatile
 11404                           
 11405                           ; BSR set to: 15
 11406                           ;usb_device.c: 640: USBWakeFromSuspend();
 11407  003C7C  EC30  F04A         	call	_USBWakeFromSuspend	;wreg free
 11408  003C80                     l156:
 11409                           
 11410                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 11411  003C80  A265               	btfss	3941,1,c	;volatile
 11412  003C82  D002               	goto	l157
 11413                           
 11414                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 11415  003C84  98A1               	bcf	4001,4,c	;volatile
 11416                           
 11417                           ;usb_device.c: 650: return;
 11418  003C86  0012               	return	
 11419  003C88                     l157:
 11420                           
 11421                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 11422  003C88  A062               	btfss	3938,0,c	;volatile
 11423  003C8A  D009               	goto	l158
 11424  003C8C  010F               	movlb	15	; () banked
 11425  003C8E  A136               	btfss	54,0,b	;volatile
 11426  003C90  D006               	goto	l158
 11427                           
 11428                           ; BSR set to: 15
 11429                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 11430  003C92  EC7F  F026         	call	_USBDeviceInit	;wreg free
 11431                           
 11432                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 11433  003C96  0E04               	movlw	4
 11434  003C98  0100               	movlb	0	; () banked
 11435  003C9A  6FF8               	movwf	_USBDeviceState& (0+255),b
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;usb_device.c: 681: (UIR &= 0xFE);
 11439  003C9C  9062               	bcf	3938,0,c	;volatile
 11440  003C9E                     l158:
 11441                           
 11442                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11443                           
 11444                           ; BSR set to: 0
 11445  003C9E  A862               	btfss	3938,4,c	;volatile
 11446  003CA0  D004               	goto	l159
 11447  003CA2  010F               	movlb	15	; () banked
 11448  003CA4  B936               	btfsc	54,4,b	;volatile
 11449                           
 11450                           ; BSR set to: 15
 11451                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 11452  003CA6  EC32  F04B         	call	_USBSuspend	;wreg free
 11453  003CAA                     l159:
 11454                           
 11455                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 11456  003CAA  AC62               	btfss	3938,6,c	;volatile
 11457  003CAC  D01C               	goto	l163
 11458                           
 11459                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 11460  003CAE  010F               	movlb	15	; () banked
 11461  003CB0  AD36               	btfss	54,6,b	;volatile
 11462  003CB2  D00E               	goto	l161
 11463                           
 11464                           ; BSR set to: 15
 11465                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11466  003CB4  0E00               	movlw	0
 11467  003CB6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11468  003CB8  0E73               	movlw	115
 11469  003CBA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11470  003CBC  0E00               	movlw	0
 11471  003CBE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11472  003CC0  0E00               	movlw	0
 11473  003CC2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11474  003CC4  0E00               	movlw	0
 11475  003CC6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11476  003CC8  0E01               	movlw	1
 11477  003CCA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11478  003CCC  EC5A  F040         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11479  003CD0                     l161:
 11480                           
 11481                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 11482  003CD0  9C62               	bcf	3938,6,c	;volatile
 11483                           
 11484                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 11485  003CD2  EC12  F04D         	call	_USBIncrement1msInternalTimers	;wreg free
 11486                           
 11487                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 11488  003CD6  0100               	movlb	0	; () banked
 11489  003CD8  51F3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11490  003CDA  A4D8               	btfss	status,2,c
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 11494  003CDC  07F3               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 11495                           
 11496                           ; BSR set to: 0
 11497                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 11498                           
 11499                           ; BSR set to: 0
 11500  003CDE  51F3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11501  003CE0  B4D8               	btfsc	status,2,c
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 11505  003CE2  EC66  F036         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11506  003CE6                     l163:
 11507                           
 11508                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 11509  003CE6  AA62               	btfss	3938,5,c	;volatile
 11510  003CE8  D004               	goto	l164
 11511  003CEA  010F               	movlb	15	; () banked
 11512  003CEC  BB36               	btfsc	54,5,b	;volatile
 11513                           
 11514                           ; BSR set to: 15
 11515                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 11516  003CEE  ECF4  F048         	call	_USBStallHandler	;wreg free
 11517  003CF2                     l164:
 11518                           
 11519                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11520  003CF2  A262               	btfss	3938,1,c	;volatile
 11521  003CF4  D012               	goto	l165
 11522  003CF6  010F               	movlb	15	; () banked
 11523  003CF8  A336               	btfss	54,1,b	;volatile
 11524  003CFA  D00F               	goto	l165
 11525                           
 11526                           ; BSR set to: 15
 11527                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 11528  003CFC  0E7F               	movlw	127
 11529  003CFE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11530  003D00  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11531  003D02  0E00               	movlw	0
 11532  003D04  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11533  003D06  0E00               	movlw	0
 11534  003D08  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11535  003D0A  0E00               	movlw	0
 11536  003D0C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11537  003D0E  0E01               	movlw	1
 11538  003D10  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11539  003D12  EC5A  F040         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11540                           
 11541                           ;usb_device.c: 759: {UEIR = 0;};
 11542  003D16  0E00               	movlw	0
 11543  003D18  6E63               	movwf	3939,c	;volatile
 11544  003D1A                     l165:
 11545                           
 11546                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11547  003D1A  0E04               	movlw	4
 11548  003D1C  0100               	movlb	0	; () banked
 11549  003D1E  61F8               	cpfslt	_USBDeviceState& (0+255),b
 11550  003D20  D002               	goto	l166
 11551                           
 11552                           ; BSR set to: 0
 11553                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11554  003D22  98A1               	bcf	4001,4,c	;volatile
 11555                           
 11556                           ;usb_device.c: 777: return;
 11557  003D24  0012               	return	
 11558  003D26                     l166:
 11559                           
 11560                           ; BSR set to: 0
 11561                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 11562  003D26  010F               	movlb	15	; () banked
 11563  003D28  A736               	btfss	54,3,b	;volatile
 11564  003D2A  D03C               	goto	u13490
 11565                           
 11566                           ; BSR set to: 15
 11567                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11568  003D2C  0E00               	movlw	0
 11569  003D2E  6E20               	movwf	USBDeviceTasks@i,c
 11570  003D30                     l16120:
 11571                           
 11572                           ; BSR set to: 15
 11573  003D30  0E03               	movlw	3
 11574  003D32  6420               	cpfsgt	USBDeviceTasks@i,c
 11575  003D34  D001               	goto	l168
 11576  003D36  D036               	goto	u13490
 11577  003D38                     l168:
 11578                           
 11579                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 11580  003D38  A662               	btfss	3938,3,c	;volatile
 11581  003D3A  D034               	goto	u13490
 11582                           
 11583                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 11584  003D3C  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 11585                           
 11586                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11587  003D40  0100               	movlb	0	; () banked
 11588  003D42  31FD               	rrcf	_USTATcopy& (0+255),w,b
 11589  003D44  32E8               	rrcf	wreg,f,c
 11590  003D46  32E8               	rrcf	wreg,f,c
 11591  003D48  0B0F               	andlw	15
 11592  003D4A  6FF4               	movwf	_endpoint_number& (0+255),b
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;usb_device.c: 793: (UIR &= 0xF7);
 11596  003D4C  9662               	bcf	3938,3,c	;volatile
 11597                           
 11598                           ; BSR set to: 0
 11599                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11600  003D4E  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 11601  003D50  D007               	goto	l171
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 11605  003D52  51F4               	movf	_endpoint_number& (0+255),w,b
 11606  003D54  0D01               	mullw	1
 11607  003D56  0E6C               	movlw	low _ep_data_out
 11608  003D58  24F3               	addwf	prodl,w,c
 11609  003D5A  6ED9               	movwf	fsr2l,c
 11610  003D5C  0E01               	movlw	high _ep_data_out
 11611  003D5E  D007               	goto	L5
 11612  003D60                     l171:
 11613                           
 11614                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 11615                           
 11616                           ; BSR set to: 1
 11617  003D60  0100               	movlb	0	; () banked
 11618  003D62  51F4               	movf	_endpoint_number& (0+255),w,b
 11619  003D64  0D01               	mullw	1
 11620  003D66  0E6F               	movlw	low _ep_data_in
 11621  003D68  24F3               	addwf	prodl,w,c
 11622  003D6A  6ED9               	movwf	fsr2l,c
 11623  003D6C  0E01               	movlw	high _ep_data_in
 11624  003D6E                     L5:
 11625  003D6E  20F4               	addwfc	prodh,w,c
 11626  003D70  6EDA               	movwf	fsr2h,c
 11627  003D72  0101               	movlb	1	; () banked
 11628  003D74  70DF               	btg	indf2,0,c
 11629                           
 11630                           ; BSR set to: 1
 11631                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 11632                           
 11633                           ; BSR set to: 1
 11634  003D76  0100               	movlb	0	; () banked
 11635  003D78  51F4               	movf	_endpoint_number& (0+255),w,b
 11636  003D7A  A4D8               	btfss	status,2,c
 11637  003D7C  D003               	goto	l173
 11638                           
 11639                           ; BSR set to: 0
 11640                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 11641  003D7E  EC85  F03A         	call	_USBCtrlEPService	;wreg free
 11642                           
 11643                           ;usb_device.c: 813: }
 11644  003D82  D00E               	goto	l175
 11645  003D84                     l173:
 11646                           
 11647                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 11648  003D84  0E00               	movlw	0
 11649  003D86  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11650  003D88  0E72               	movlw	114
 11651  003D8A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11652  003D8C  0EFD               	movlw	low _USTATcopy
 11653  003D8E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11654  003D90  0E00               	movlw	high _USTATcopy
 11655  003D92  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11656  003D94  0E00               	movlw	0
 11657  003D96  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11658  003D98  0E00               	movlw	0
 11659  003D9A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11660  003D9C  EC5A  F040         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11661  003DA0                     l175:
 11662  003DA0  2A20               	incf	USBDeviceTasks@i,f,c
 11663  003DA2  D7C6               	goto	l16120
 11664  003DA4                     u13490:
 11665                           
 11666                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 11667  003DA4  98A1               	bcf	4001,4,c	;volatile
 11668  003DA6  0012               	return		;funcret
 11669  003DA8                     __end_of_USBDeviceTasks:
 11670                           	opt stack 0
 11671                           tblptru	equ	0xFF8
 11672                           tblptrh	equ	0xFF7
 11673                           tblptrl	equ	0xFF6
 11674                           tablat	equ	0xFF5
 11675                           prodh	equ	0xFF4
 11676                           prodl	equ	0xFF3
 11677                           intcon	equ	0xFF2
 11678                           intcon2	equ	0xFF1
 11679                           intcon3	equ	0xFF0
 11680                           postinc0	equ	0xFEE
 11681                           wreg	equ	0xFE8
 11682                           indf1	equ	0xFE7
 11683                           postdec1	equ	0xFE5
 11684                           plusw1	equ	0xFE3
 11685                           fsr1h	equ	0xFE2
 11686                           fsr1l	equ	0xFE1
 11687                           indf2	equ	0xFDF
 11688                           postinc2	equ	0xFDE
 11689                           postdec2	equ	0xFDD
 11690                           plusw2	equ	0xFDB
 11691                           fsr2h	equ	0xFDA
 11692                           fsr2l	equ	0xFD9
 11693                           status	equ	0xFD8
 11694                           
 11695 ;; *************** function _USBWakeFromSuspend *****************
 11696 ;; Defined at:
 11697 ;;		line 2305 in file "usb_device.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;		None
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;		None
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1    wreg      void 
 11704 ;; Registers used:
 11705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11706 ;; Tracked objects:
 11707 ;;		On entry : 0/0
 11708 ;;		On exit  : 0/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11715 ;;Total ram usage:        0 bytes
 11716 ;; Hardware stack levels used:    1
 11717 ;; Hardware stack levels required when called:    4
 11718 ;; This function calls:
 11719 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11720 ;; This function is called by:
 11721 ;;		_USBDeviceTasks
 11722 ;; This function uses a non-reentrant model
 11723 ;;
 11724                           
 11725                           	psect	text52
 11726  009460                     __ptext52:
 11727                           	opt stack 0
 11728  009460                     _USBWakeFromSuspend:
 11729                           	opt stack 25
 11730                           
 11731                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 11732                           
 11733                           ;incstack = 0
 11734  009460  0E00               	movlw	0
 11735  009462  0101               	movlb	1	; () banked
 11736  009464  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11737                           
 11738                           ; BSR set to: 1
 11739                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 11740  009466  0E00               	movlw	0
 11741  009468  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11742  00946A  0E74               	movlw	116
 11743  00946C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11744  00946E  0E00               	movlw	0
 11745  009470  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11746  009472  0E00               	movlw	0
 11747  009474  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11748  009476  0E00               	movlw	0
 11749  009478  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11750  00947A  0E00               	movlw	0
 11751  00947C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11752  00947E  EC5A  F040         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11753                           
 11754                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 11755  009482  9265               	bcf	3941,1,c	;volatile
 11756                           
 11757                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 11758  009484  010F               	movlb	15	; () banked
 11759  009486  9536               	bcf	54,2,b	;volatile
 11760                           
 11761                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 11762  009488  D001               	goto	l303
 11763  00948A                     
 11764                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 11765                           
 11766                           ; BSR set to: 15
 11767  00948A  9462               	bcf	3938,2,c	;volatile
 11768  00948C                     l303:
 11769  00948C  B462               	btfsc	3938,2,c	;volatile
 11770  00948E  D7FD               	goto	l304
 11771                           
 11772                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 11773  009490  0E00               	movlw	0
 11774  009492  0101               	movlb	1	; () banked
 11775  009494  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11776                           
 11777                           ; BSR set to: 1
 11778  009496  0012               	return		;funcret
 11779  009498                     __end_of_USBWakeFromSuspend:
 11780                           	opt stack 0
 11781                           tblptru	equ	0xFF8
 11782                           tblptrh	equ	0xFF7
 11783                           tblptrl	equ	0xFF6
 11784                           tablat	equ	0xFF5
 11785                           prodh	equ	0xFF4
 11786                           prodl	equ	0xFF3
 11787                           intcon	equ	0xFF2
 11788                           intcon2	equ	0xFF1
 11789                           intcon3	equ	0xFF0
 11790                           postinc0	equ	0xFEE
 11791                           wreg	equ	0xFE8
 11792                           indf1	equ	0xFE7
 11793                           postdec1	equ	0xFE5
 11794                           plusw1	equ	0xFE3
 11795                           fsr1h	equ	0xFE2
 11796                           fsr1l	equ	0xFE1
 11797                           indf2	equ	0xFDF
 11798                           postinc2	equ	0xFDE
 11799                           postdec2	equ	0xFDD
 11800                           plusw2	equ	0xFDB
 11801                           fsr2h	equ	0xFDA
 11802                           fsr2l	equ	0xFD9
 11803                           status	equ	0xFD8
 11804                           
 11805 ;; *************** function _USBSuspend *****************
 11806 ;; Defined at:
 11807 ;;		line 2247 in file "usb_device.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;		None
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;		None
 11812 ;; Return value:  Size  Location     Type
 11813 ;;                  1    wreg      void 
 11814 ;; Registers used:
 11815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11816 ;; Tracked objects:
 11817 ;;		On entry : 0/0
 11818 ;;		On exit  : 0/0
 11819 ;;		Unchanged: 0/0
 11820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11825 ;;Total ram usage:        0 bytes
 11826 ;; Hardware stack levels used:    1
 11827 ;; Hardware stack levels required when called:    4
 11828 ;; This function calls:
 11829 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11830 ;; This function is called by:
 11831 ;;		_USBDeviceTasks
 11832 ;; This function uses a non-reentrant model
 11833 ;;
 11834                           
 11835                           	psect	text53
 11836  009664                     __ptext53:
 11837                           	opt stack 0
 11838  009664                     _USBSuspend:
 11839                           	opt stack 25
 11840                           
 11841                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 11842                           
 11843                           ; BSR set to: 1
 11844                           ;incstack = 0
 11845  009664  010F               	movlb	15	; () banked
 11846  009666  8536               	bsf	54,2,b	;volatile
 11847                           
 11848                           ; BSR set to: 15
 11849                           ;usb_device.c: 2273: (UIR &= 0xEF);
 11850  009668  9862               	bcf	3938,4,c	;volatile
 11851                           
 11852                           ; BSR set to: 15
 11853                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 11854  00966A  8265               	bsf	3941,1,c	;volatile
 11855                           
 11856                           ; BSR set to: 15
 11857                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 11858  00966C  0E01               	movlw	1
 11859  00966E  0101               	movlb	1	; () banked
 11860  009670  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11861                           
 11862                           ; BSR set to: 1
 11863                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 11864  009672  0E00               	movlw	0
 11865  009674  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11866                           
 11867                           ; BSR set to: 1
 11868                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 11869  009676  0E00               	movlw	0
 11870  009678  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11871  00967A  0E75               	movlw	117
 11872  00967C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11873  00967E  0E00               	movlw	0
 11874  009680  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11875  009682  0E00               	movlw	0
 11876  009684  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11877  009686  0E00               	movlw	0
 11878  009688  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11879  00968A  0E00               	movlw	0
 11880  00968C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11881  00968E  EC5A  F040         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11882  009692  0012               	return		;funcret
 11883  009694                     __end_of_USBSuspend:
 11884                           	opt stack 0
 11885                           tblptru	equ	0xFF8
 11886                           tblptrh	equ	0xFF7
 11887                           tblptrl	equ	0xFF6
 11888                           tablat	equ	0xFF5
 11889                           prodh	equ	0xFF4
 11890                           prodl	equ	0xFF3
 11891                           intcon	equ	0xFF2
 11892                           intcon2	equ	0xFF1
 11893                           intcon3	equ	0xFF0
 11894                           postinc0	equ	0xFEE
 11895                           wreg	equ	0xFE8
 11896                           indf1	equ	0xFE7
 11897                           postdec1	equ	0xFE5
 11898                           plusw1	equ	0xFE3
 11899                           fsr1h	equ	0xFE2
 11900                           fsr1l	equ	0xFE1
 11901                           indf2	equ	0xFDF
 11902                           postinc2	equ	0xFDE
 11903                           postdec2	equ	0xFDD
 11904                           plusw2	equ	0xFDB
 11905                           fsr2h	equ	0xFDA
 11906                           fsr2l	equ	0xFD9
 11907                           status	equ	0xFD8
 11908                           
 11909 ;; *************** function _USBStallHandler *****************
 11910 ;; Defined at:
 11911 ;;		line 2204 in file "usb_device.c"
 11912 ;; Parameters:    Size  Location     Type
 11913 ;;		None
 11914 ;; Auto vars:     Size  Location     Type
 11915 ;;		None
 11916 ;; Return value:  Size  Location     Type
 11917 ;;                  1    wreg      void 
 11918 ;; Registers used:
 11919 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11920 ;; Tracked objects:
 11921 ;;		On entry : 0/0
 11922 ;;		On exit  : 0/0
 11923 ;;		Unchanged: 0/0
 11924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11929 ;;Total ram usage:        1 bytes
 11930 ;; Hardware stack levels used:    1
 11931 ;; This function calls:
 11932 ;;		Nothing
 11933 ;; This function is called by:
 11934 ;;		_USBDeviceTasks
 11935 ;; This function uses a non-reentrant model
 11936 ;;
 11937                           
 11938                           	psect	text54
 11939  0091E8                     __ptext54:
 11940                           	opt stack 0
 11941  0091E8                     _USBStallHandler:
 11942                           	opt stack 29
 11943                           
 11944                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 11945                           
 11946                           ;incstack = 0
 11947  0091E8  010F               	movlb	15	; () banked
 11948  0091EA  A126               	btfss	38,0,b	;volatile
 11949  0091EC  D01D               	goto	l295
 11950                           
 11951                           ; BSR set to: 15
 11952                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 11953  0091EE  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11954  0091F2  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11955  0091F6  0E80               	movlw	128
 11956  0091F8  18DE               	xorwf	postinc2,w,c
 11957  0091FA  A4D8               	btfss	status,2,c
 11958  0091FC  D014               	goto	l296
 11959                           
 11960                           ; BSR set to: 15
 11961  0091FE  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 11962  009202  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11963  009206  0E84               	movlw	132
 11964  009208  18DE               	xorwf	postinc2,w,c
 11965  00920A  A4D8               	btfss	status,2,c
 11966  00920C  D00C               	goto	l296
 11967                           
 11968                           ; BSR set to: 15
 11969                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 11970  00920E  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11971  009212  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11972  009216  0E0C               	movlw	12
 11973  009218  6EDF               	movwf	indf2,c
 11974                           
 11975                           ; BSR set to: 15
 11976                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11977  00921A  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11978  00921E  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11979  009222  0E00               	movlw	0
 11980  009224  8EDB               	bsf	plusw2,7,c
 11981  009226                     l296:
 11982                           
 11983                           ; BSR set to: 15
 11984                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 11985                           
 11986                           ; BSR set to: 15
 11987  009226  9126               	bcf	38,0,b	;volatile
 11988  009228                     l295:
 11989                           
 11990                           ; BSR set to: 15
 11991                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 11992  009228  9A62               	bcf	3938,5,c	;volatile
 11993                           
 11994                           ; BSR set to: 15
 11995  00922A  0012               	return		;funcret
 11996  00922C                     __end_of_USBStallHandler:
 11997                           	opt stack 0
 11998                           tblptru	equ	0xFF8
 11999                           tblptrh	equ	0xFF7
 12000                           tblptrl	equ	0xFF6
 12001                           tablat	equ	0xFF5
 12002                           prodh	equ	0xFF4
 12003                           prodl	equ	0xFF3
 12004                           intcon	equ	0xFF2
 12005                           intcon2	equ	0xFF1
 12006                           intcon3	equ	0xFF0
 12007                           postinc0	equ	0xFEE
 12008                           wreg	equ	0xFE8
 12009                           indf1	equ	0xFE7
 12010                           postdec1	equ	0xFE5
 12011                           plusw1	equ	0xFE3
 12012                           fsr1h	equ	0xFE2
 12013                           fsr1l	equ	0xFE1
 12014                           indf2	equ	0xFDF
 12015                           postinc2	equ	0xFDE
 12016                           postdec2	equ	0xFDD
 12017                           plusw2	equ	0xFDB
 12018                           fsr2h	equ	0xFDA
 12019                           fsr2l	equ	0xFD9
 12020                           status	equ	0xFD8
 12021                           
 12022 ;; *************** function _USBIncrement1msInternalTimers *****************
 12023 ;; Defined at:
 12024 ;;		line 3027 in file "usb_device.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12042 ;;Total ram usage:        0 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; This function calls:
 12045 ;;		Nothing
 12046 ;; This function is called by:
 12047 ;;		_USBDeviceTasks
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text55
 12052  009A24                     __ptext55:
 12053                           	opt stack 0
 12054  009A24                     _USBIncrement1msInternalTimers:
 12055                           	opt stack 29
 12056                           
 12057                           ;usb_device.c: 3035: USB1msTickCount++;
 12058                           
 12059                           ; BSR set to: 15
 12060                           ;incstack = 0
 12061  009A24  0E01               	movlw	1
 12062  009A26  0101               	movlb	1	; () banked
 12063  009A28  2762               	addwf	_USB1msTickCount& (0+255),f,b
 12064  009A2A  0E00               	movlw	0
 12065  009A2C  2363               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 12066  009A2E  2364               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 12067  009A30  2365               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 12068                           
 12069                           ; BSR set to: 1
 12070                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 12071  009A32  5192               	movf	_USBBusIsSuspended& (0+255),w,b
 12072  009A34  A4D8               	btfss	status,2,c
 12073  009A36  0012               	return	
 12074                           
 12075                           ; BSR set to: 1
 12076                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 12077  009A38  2B90               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 12078                           
 12079                           ; BSR set to: 1
 12080                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 12081  009A3A  5190               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 12082  009A3C  A4D8               	btfss	status,2,c
 12083  009A3E  0012               	return	
 12084                           
 12085                           ; BSR set to: 1
 12086                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 12087  009A40  6990               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 12088                           
 12089                           ; BSR set to: 1
 12090  009A42  0012               	return	
 12091  009A44                     __end_of_USBIncrement1msInternalTimers:
 12092                           	opt stack 0
 12093                           tblptru	equ	0xFF8
 12094                           tblptrh	equ	0xFF7
 12095                           tblptrl	equ	0xFF6
 12096                           tablat	equ	0xFF5
 12097                           prodh	equ	0xFF4
 12098                           prodl	equ	0xFF3
 12099                           intcon	equ	0xFF2
 12100                           intcon2	equ	0xFF1
 12101                           intcon3	equ	0xFF0
 12102                           postinc0	equ	0xFEE
 12103                           wreg	equ	0xFE8
 12104                           indf1	equ	0xFE7
 12105                           postdec1	equ	0xFE5
 12106                           plusw1	equ	0xFE3
 12107                           fsr1h	equ	0xFE2
 12108                           fsr1l	equ	0xFE1
 12109                           indf2	equ	0xFDF
 12110                           postinc2	equ	0xFDE
 12111                           postdec2	equ	0xFDD
 12112                           plusw2	equ	0xFDB
 12113                           fsr2h	equ	0xFDA
 12114                           fsr2l	equ	0xFD9
 12115                           status	equ	0xFD8
 12116                           
 12117 ;; *************** function _USBDeviceInit *****************
 12118 ;; Defined at:
 12119 ;;		line 277 in file "usb_device.c"
 12120 ;; Parameters:    Size  Location     Type
 12121 ;;		None
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;  i               1    8[COMRAM] unsigned char 
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  1    wreg      void 
 12126 ;; Registers used:
 12127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12137 ;;Total ram usage:        1 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; Hardware stack levels required when called:    1
 12140 ;; This function calls:
 12141 ;;		_memset
 12142 ;; This function is called by:
 12143 ;;		_USBDeviceTasks
 12144 ;;		_main
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           	psect	text56
 12149  004CFE                     __ptext56:
 12150                           	opt stack 0
 12151  004CFE                     _USBDeviceInit:
 12152                           	opt stack 28
 12153                           
 12154                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 12155                           
 12156                           ; BSR set to: 1
 12157                           ;incstack = 0
 12158  004CFE  98A0               	bcf	4000,4,c	;volatile
 12159                           
 12160                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 12161  004D00  0E00               	movlw	0
 12162  004D02  6E63               	movwf	3939,c	;volatile
 12163                           
 12164                           ;usb_device.c: 291: {UIR = 0;};
 12165  004D04  0E00               	movlw	0
 12166  004D06  6E62               	movwf	3938,c	;volatile
 12167                           
 12168                           ;usb_device.c: 294: UEP0 = 0;
 12169  004D08  0E00               	movlw	0
 12170  004D0A  010F               	movlb	15	; () banked
 12171  004D0C  6F26               	movwf	38,b	;volatile
 12172                           
 12173                           ; BSR set to: 15
 12174                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 12175  004D0E  0E27               	movlw	39
 12176  004D10  6E01               	movwf	memset@p1,c
 12177  004D12  0E0F               	movlw	15
 12178  004D14  6E02               	movwf	memset@p1+1,c
 12179  004D16  0E00               	movlw	0
 12180  004D18  6E04               	movwf	memset@c+1,c
 12181  004D1A  0E00               	movlw	0
 12182  004D1C  6E03               	movwf	memset@c,c
 12183  004D1E  0E00               	movlw	0
 12184  004D20  6E06               	movwf	memset@n+1,c
 12185  004D22  0E02               	movlw	2
 12186  004D24  6E05               	movwf	memset@n,c
 12187  004D26  ECBB  F04B         	call	_memset	;wreg free
 12188                           
 12189                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12190  004D2A  0E16               	movlw	22
 12191  004D2C  010F               	movlb	15	; () banked
 12192  004D2E  6F39               	movwf	57,b	;volatile
 12193                           
 12194                           ; BSR set to: 15
 12195  004D30  0E9F               	movlw	159
 12196  004D32  6F37               	movwf	55,b	;volatile
 12197                           
 12198                           ; BSR set to: 15
 12199  004D34  0E7B               	movlw	123
 12200  004D36  6F36               	movwf	54,b	;volatile
 12201                           
 12202                           ; BSR set to: 15
 12203                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 12204  004D38  0E00               	movlw	0
 12205  004D3A  6E09               	movwf	USBDeviceInit@i,c
 12206  004D3C                     l15366:
 12207                           
 12208                           ; BSR set to: 15
 12209  004D3C  0E0B               	movlw	11
 12210  004D3E  6409               	cpfsgt	USBDeviceInit@i,c
 12211  004D40  D001               	goto	l139
 12212  004D42  D00E               	goto	u12510
 12213  004D44                     l139:
 12214                           
 12215                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 12216                           
 12217                           ; BSR set to: 15
 12218  004D44  5009               	movf	USBDeviceInit@i,w,c
 12219  004D46  0D04               	mullw	4
 12220  004D48  0E00               	movlw	0
 12221  004D4A  24F3               	addwf	prodl,w,c
 12222  004D4C  6ED9               	movwf	fsr2l,c
 12223  004D4E  0E0D               	movlw	13
 12224  004D50  20F4               	addwfc	prodh,w,c
 12225  004D52  6EDA               	movwf	fsr2h,c
 12226  004D54  6ADE               	clrf	postinc2,c
 12227  004D56  6ADE               	clrf	postinc2,c
 12228  004D58  6ADE               	clrf	postinc2,c
 12229  004D5A  6ADD               	clrf	postdec2,c
 12230  004D5C  2A09               	incf	USBDeviceInit@i,f,c
 12231  004D5E  D7EE               	goto	l15366
 12232  004D60                     u12510:
 12233                           
 12234                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 12235  004D60  8C65               	bsf	3941,6,c	;volatile
 12236                           
 12237                           ;usb_device.c: 316: UADDR = 0x00;
 12238  004D62  0E00               	movlw	0
 12239  004D64  010F               	movlb	15	; () banked
 12240  004D66  6F38               	movwf	56,b	;volatile
 12241                           
 12242                           ; BSR set to: 15
 12243                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 12244  004D68  9865               	bcf	3941,4,c	;volatile
 12245                           
 12246                           ; BSR set to: 15
 12247                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 12248  004D6A  9C65               	bcf	3941,6,c	;volatile
 12249  004D6C                     
 12250                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 12251                           
 12252                           ; BSR set to: 15
 12253  004D6C  9662               	bcf	3938,3,c	;volatile
 12254                           
 12255                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 12256  004D6E  0E00               	movlw	0
 12257  004D70  0100               	movlb	0	; () banked
 12258  004D72  6FCE               	movwf	(_inPipes+3)& (0+255),b
 12259                           
 12260                           ; BSR set to: 0
 12261                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 12262  004D74  0E00               	movlw	0
 12263  004D76  0101               	movlb	1	; () banked
 12264  004D78  6F34               	movwf	(_outPipes+3)& (0+255),b
 12265                           
 12266                           ; BSR set to: 1
 12267                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 12268  004D7A  0E00               	movlw	0
 12269  004D7C  6F36               	movwf	(_outPipes+5)& (0+255),b
 12270  004D7E  0E00               	movlw	0
 12271  004D80  6F35               	movwf	(_outPipes+4)& (0+255),b
 12272                           
 12273                           ; BSR set to: 1
 12274                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 12275  004D82  B662               	btfsc	3938,3,c	;volatile
 12276  004D84  D7F3               	goto	l141
 12277                           
 12278                           ; BSR set to: 1
 12279                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 12280                           
 12281                           ; BSR set to: 1
 12282  004D86  0E01               	movlw	1
 12283  004D88  0100               	movlb	0	; () banked
 12284  004D8A  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12285                           
 12286                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 12287  004D8C  0E01               	movlw	1
 12288  004D8E  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12289                           
 12290                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 12291  004D90  0E00               	movlw	0
 12292  004D92  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12293                           
 12294                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 12295  004D94  0E00               	movlw	0
 12296  004D96  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12297                           
 12298                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 12299  004D98  0E00               	movlw	0
 12300  004D9A  0101               	movlb	1	; () banked
 12301  004D9C  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 12302                           
 12303                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 12304  004D9E  0E00               	movlw	0
 12305  004DA0  6E09               	movwf	USBDeviceInit@i,c
 12306  004DA2                     l15394:
 12307                           
 12308                           ; BSR set to: 1
 12309  004DA2  0E02               	movlw	2
 12310  004DA4  6409               	cpfsgt	USBDeviceInit@i,c
 12311  004DA6  D001               	goto	l143
 12312  004DA8  D02E               	goto	u12540
 12313  004DAA                     l143:
 12314                           
 12315                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 12316                           
 12317                           ; BSR set to: 1
 12318  004DAA  5009               	movf	USBDeviceInit@i,w,c
 12319  004DAC  0D02               	mullw	2
 12320  004DAE  0ED1               	movlw	low _pBDTEntryIn
 12321  004DB0  24F3               	addwf	prodl,w,c
 12322  004DB2  6ED9               	movwf	fsr2l,c
 12323  004DB4  0E00               	movlw	high _pBDTEntryIn
 12324  004DB6  20F4               	addwfc	prodh,w,c
 12325  004DB8  6EDA               	movwf	fsr2h,c
 12326  004DBA  0E00               	movlw	0
 12327  004DBC  6EDE               	movwf	postinc2,c
 12328  004DBE  0E00               	movlw	0
 12329  004DC0  6EDD               	movwf	postdec2,c
 12330                           
 12331                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 12332  004DC2  5009               	movf	USBDeviceInit@i,w,c
 12333  004DC4  0D02               	mullw	2
 12334  004DC6  0E40               	movlw	low _pBDTEntryOut
 12335  004DC8  24F3               	addwf	prodl,w,c
 12336  004DCA  6ED9               	movwf	fsr2l,c
 12337  004DCC  0E01               	movlw	high _pBDTEntryOut
 12338  004DCE  20F4               	addwfc	prodh,w,c
 12339  004DD0  6EDA               	movwf	fsr2h,c
 12340  004DD2  0E00               	movlw	0
 12341  004DD4  6EDE               	movwf	postinc2,c
 12342  004DD6  0E00               	movlw	0
 12343  004DD8  6EDD               	movwf	postdec2,c
 12344                           
 12345                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 12346  004DDA  5009               	movf	USBDeviceInit@i,w,c
 12347  004DDC  0D01               	mullw	1
 12348  004DDE  0E6F               	movlw	low _ep_data_in
 12349  004DE0  24F3               	addwf	prodl,w,c
 12350  004DE2  6ED9               	movwf	fsr2l,c
 12351  004DE4  0E01               	movlw	high _ep_data_in
 12352  004DE6  20F4               	addwfc	prodh,w,c
 12353  004DE8  6EDA               	movwf	fsr2h,c
 12354  004DEA  0E00               	movlw	0
 12355  004DEC  6EDF               	movwf	indf2,c
 12356                           
 12357                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 12358  004DEE  5009               	movf	USBDeviceInit@i,w,c
 12359  004DF0  0D01               	mullw	1
 12360  004DF2  0E6C               	movlw	low _ep_data_out
 12361  004DF4  24F3               	addwf	prodl,w,c
 12362  004DF6  6ED9               	movwf	fsr2l,c
 12363  004DF8  0E01               	movlw	high _ep_data_out
 12364  004DFA  20F4               	addwfc	prodh,w,c
 12365  004DFC  6EDA               	movwf	fsr2h,c
 12366  004DFE  0E00               	movlw	0
 12367  004E00  6EDF               	movwf	indf2,c
 12368  004E02  2A09               	incf	USBDeviceInit@i,f,c
 12369  004E04  D7CE               	goto	l15394
 12370  004E06                     u12540:
 12371                           
 12372                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12373  004E06  0E08               	movlw	8
 12374  004E08  0100               	movlb	0	; () banked
 12375  004E0A  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12376  004E0C  0E0D               	movlw	13
 12377  004E0E  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 12381  004E10  0E16               	movlw	22
 12382  004E12  010F               	movlb	15	; () banked
 12383  004E14  6F26               	movwf	38,b	;volatile
 12384                           
 12385                           ; BSR set to: 15
 12386                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12387  004E16  0E0D               	movlw	13
 12388  004E18  010D               	movlb	13	; () banked
 12389  004E1A  6F03               	movwf	3,b	;volatile
 12390  004E1C  0E30               	movlw	48
 12391  004E1E  6F02               	movwf	2,b	;volatile
 12392                           
 12393                           ; BSR set to: 13
 12394                           ;usb_device.c: 359: BDT[0].CNT = 8;
 12395  004E20  0E08               	movlw	8
 12396  004E22  6F01               	movwf	1,b	;volatile
 12397                           
 12398                           ; BSR set to: 13
 12399                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 12400  004E24  0E04               	movlw	4
 12401  004E26  6F00               	movwf	0,b	;volatile
 12402                           
 12403                           ; BSR set to: 13
 12404                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 12405  004E28  8F00               	bsf	0,7,b	;volatile
 12406                           
 12407                           ; BSR set to: 13
 12408                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 12409  004E2A  0E00               	movlw	0
 12410  004E2C  0100               	movlb	0	; () banked
 12411  004E2E  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 12412                           
 12413                           ; BSR set to: 0
 12414                           ;usb_device.c: 366: USB1msTickCount = 0;
 12415  004E30  0E00               	movlw	0
 12416  004E32  0101               	movlb	1	; () banked
 12417  004E34  6F62               	movwf	_USB1msTickCount& (0+255),b
 12418  004E36  0E00               	movlw	0
 12419  004E38  6F63               	movwf	(_USB1msTickCount+1)& (0+255),b
 12420  004E3A  0E00               	movlw	0
 12421  004E3C  6F64               	movwf	(_USB1msTickCount+2)& (0+255),b
 12422  004E3E  0E00               	movlw	0
 12423  004E40  6F65               	movwf	(_USB1msTickCount+3)& (0+255),b
 12424                           
 12425                           ; BSR set to: 1
 12426                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 12427  004E42  0E00               	movlw	0
 12428  004E44  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12429                           
 12430                           ; BSR set to: 1
 12431                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 12432  004E46  0E00               	movlw	0
 12433  004E48  0100               	movlb	0	; () banked
 12434  004E4A  6FF8               	movwf	_USBDeviceState& (0+255),b
 12435                           
 12436                           ; BSR set to: 0
 12437  004E4C  0012               	return		;funcret
 12438  004E4E                     __end_of_USBDeviceInit:
 12439                           	opt stack 0
 12440                           tblptru	equ	0xFF8
 12441                           tblptrh	equ	0xFF7
 12442                           tblptrl	equ	0xFF6
 12443                           tablat	equ	0xFF5
 12444                           prodh	equ	0xFF4
 12445                           prodl	equ	0xFF3
 12446                           intcon	equ	0xFF2
 12447                           intcon2	equ	0xFF1
 12448                           intcon3	equ	0xFF0
 12449                           postinc0	equ	0xFEE
 12450                           wreg	equ	0xFE8
 12451                           indf1	equ	0xFE7
 12452                           postdec1	equ	0xFE5
 12453                           plusw1	equ	0xFE3
 12454                           fsr1h	equ	0xFE2
 12455                           fsr1l	equ	0xFE1
 12456                           indf2	equ	0xFDF
 12457                           postinc2	equ	0xFDE
 12458                           postdec2	equ	0xFDD
 12459                           plusw2	equ	0xFDB
 12460                           fsr2h	equ	0xFDA
 12461                           fsr2l	equ	0xFD9
 12462                           status	equ	0xFD8
 12463                           
 12464 ;; *************** function _USBCtrlEPService *****************
 12465 ;; Defined at:
 12466 ;;		line 2374 in file "usb_device.c"
 12467 ;; Parameters:    Size  Location     Type
 12468 ;;		None
 12469 ;; Auto vars:     Size  Location     Type
 12470 ;;		None
 12471 ;; Return value:  Size  Location     Type
 12472 ;;                  1    wreg      void 
 12473 ;; Registers used:
 12474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12475 ;; Tracked objects:
 12476 ;;		On entry : 0/0
 12477 ;;		On exit  : 0/0
 12478 ;;		Unchanged: 0/0
 12479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12484 ;;Total ram usage:        2 bytes
 12485 ;; Hardware stack levels used:    1
 12486 ;; Hardware stack levels required when called:    7
 12487 ;; This function calls:
 12488 ;;		_USBCtrlTrfInHandler
 12489 ;;		_USBCtrlTrfOutHandler
 12490 ;;		_USBCtrlTrfSetupHandler
 12491 ;;		_memcpy
 12492 ;; This function is called by:
 12493 ;;		_USBDeviceTasks
 12494 ;; This function uses a non-reentrant model
 12495 ;;
 12496                           
 12497                           	psect	text57
 12498  00750A                     __ptext57:
 12499                           	opt stack 0
 12500  00750A                     _USBCtrlEPService:
 12501                           	opt stack 22
 12502                           
 12503                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 12504                           
 12505                           ; BSR set to: 0
 12506                           ;incstack = 0
 12507  00750A  0E2D               	movlw	45
 12508  00750C  0100               	movlb	0	; () banked
 12509  00750E  6FF3               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 12510                           
 12511                           ; BSR set to: 0
 12512                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 12513  007510  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12514  007514  0EFD               	movlw	253
 12515  007516  161E               	andwf	??_USBCtrlEPService,f,c
 12516  007518  A4D8               	btfss	status,2,c
 12517  00751A  D044               	goto	l309
 12518                           
 12519                           ; BSR set to: 0
 12520                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 12521  00751C  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12522  007520  90D8               	bcf	status,0,c
 12523  007522  321E               	rrcf	??_USBCtrlEPService,f,c
 12524  007524  0E3F               	movlw	63
 12525  007526  161E               	andwf	??_USBCtrlEPService,f,c
 12526  007528  501E               	movf	??_USBCtrlEPService,w,c
 12527  00752A  0D04               	mullw	4
 12528  00752C  0E00               	movlw	0
 12529  00752E  24F3               	addwf	prodl,w,c
 12530  007530  6FE3               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 12531  007532  0E0D               	movlw	13
 12532  007534  20F4               	addwfc	prodh,w,c
 12533  007536  6FE4               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12537  007538  C0E3  F0E1         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 12538  00753C  C0E4  F0E2         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12539                           
 12540                           ; BSR set to: 0
 12541                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 12542  007540  0E04               	movlw	4
 12543  007542  19E1               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 12544  007544  6FE1               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 12545  007546  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12546  007548  6FE2               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 12547                           
 12548                           ; BSR set to: 0
 12549                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12550  00754A  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12551  00754E  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12552  007552  30DF               	rrcf	223,w,c
 12553  007554  32E8               	rrcf	wreg,f,c
 12554  007556  0B0F               	andlw	15
 12555  007558  0A0D               	xorlw	13
 12556  00755A  A4D8               	btfss	status,2,c
 12557  00755C  D020               	goto	l310
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 12561  00755E  0E30               	movlw	48
 12562  007560  6E01               	movwf	memcpy@d1,c
 12563  007562  0E0D               	movlw	13
 12564  007564  6E02               	movwf	memcpy@d1+1,c
 12565  007566  EE20 F002          	lfsr	2,2
 12566  00756A  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12567  00756C  26D9               	addwf	fsr2l,f,c
 12568  00756E  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12569  007570  22DA               	addwfc	fsr2h,f,c
 12570  007572  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 12571  007576  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 12572  00757A  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 12573  00757E  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 12574  007582  5003               	movf	memcpy@s1,w,c
 12575  007584  1004               	iorwf	memcpy@s1+1,w,c
 12576  007586  A4D8               	btfss	status,2,c
 12577  007588  0E20               	movlw	32
 12578  00758A  6E05               	movwf	memcpy@s1+2,c
 12579  00758C  0E00               	movlw	0
 12580  00758E  6E07               	movwf	memcpy@n+1,c
 12581  007590  0E08               	movlw	8
 12582  007592  6E06               	movwf	memcpy@n,c
 12583  007594  ECEF  F043         	call	_memcpy	;wreg free
 12584                           
 12585                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 12586  007598  ECA7  F03E         	call	_USBCtrlTrfSetupHandler	;wreg free
 12587                           
 12588                           ;usb_device.c: 2411: }
 12589  00759C  0012               	return	
 12590  00759E                     l310:
 12591                           
 12592                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 12593  00759E  EC89  F043         	call	_USBCtrlTrfOutHandler	;wreg free
 12594                           
 12595                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 12596  0075A2  0012               	return	
 12597  0075A4                     l309:
 12598                           
 12599                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 12600  0075A4  0100               	movlb	0	; () banked
 12601  0075A6  51FD               	movf	_USTATcopy& (0+255),w,b
 12602  0075A8  0BFD               	andlw	253
 12603  0075AA  0A04               	xorlw	4
 12604  0075AC  A4D8               	btfss	status,2,c
 12605  0075AE  0012               	return	
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 12609  0075B0  ECCC  F036         	call	_USBCtrlTrfInHandler	;wreg free
 12610  0075B4  0012               	return	
 12611  0075B6                     __end_of_USBCtrlEPService:
 12612                           	opt stack 0
 12613                           tblptru	equ	0xFF8
 12614                           tblptrh	equ	0xFF7
 12615                           tblptrl	equ	0xFF6
 12616                           tablat	equ	0xFF5
 12617                           prodh	equ	0xFF4
 12618                           prodl	equ	0xFF3
 12619                           intcon	equ	0xFF2
 12620                           intcon2	equ	0xFF1
 12621                           intcon3	equ	0xFF0
 12622                           postinc0	equ	0xFEE
 12623                           wreg	equ	0xFE8
 12624                           indf1	equ	0xFE7
 12625                           postdec1	equ	0xFE5
 12626                           plusw1	equ	0xFE3
 12627                           fsr1h	equ	0xFE2
 12628                           fsr1l	equ	0xFE1
 12629                           indf2	equ	0xFDF
 12630                           postinc2	equ	0xFDE
 12631                           postdec2	equ	0xFDD
 12632                           plusw2	equ	0xFDB
 12633                           fsr2h	equ	0xFDA
 12634                           fsr2l	equ	0xFD9
 12635                           status	equ	0xFD8
 12636                           
 12637 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12638 ;; Defined at:
 12639 ;;		line 2467 in file "usb_device.c"
 12640 ;; Parameters:    Size  Location     Type
 12641 ;;		None
 12642 ;; Auto vars:     Size  Location     Type
 12643 ;;		None
 12644 ;; Return value:  Size  Location     Type
 12645 ;;                  1    wreg      void 
 12646 ;; Registers used:
 12647 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12648 ;; Tracked objects:
 12649 ;;		On entry : 0/0
 12650 ;;		On exit  : 0/0
 12651 ;;		Unchanged: 0/0
 12652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12657 ;;Total ram usage:        0 bytes
 12658 ;; Hardware stack levels used:    1
 12659 ;; Hardware stack levels required when called:    6
 12660 ;; This function calls:
 12661 ;;		_USBCheckStdRequest
 12662 ;;		_USBCtrlEPServiceComplete
 12663 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12664 ;; This function is called by:
 12665 ;;		_USBCtrlEPService
 12666 ;; This function uses a non-reentrant model
 12667 ;;
 12668                           
 12669                           	psect	text58
 12670  007D4E                     __ptext58:
 12671                           	opt stack 0
 12672  007D4E                     _USBCtrlTrfSetupHandler:
 12673                           	opt stack 22
 12674                           
 12675                           ;usb_device.c: 2472: shortPacketStatus = 0;
 12676                           
 12677                           ;incstack = 0
 12678  007D4E  0E00               	movlw	0
 12679  007D50  0100               	movlb	0	; () banked
 12680  007D52  6FF7               	movwf	_shortPacketStatus& (0+255),b
 12681                           
 12682                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 12683  007D54  0E00               	movlw	0
 12684  007D56  6FF2               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 12685                           
 12686                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 12687  007D58  0E00               	movlw	0
 12688  007D5A  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12689                           
 12690                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 12691  007D5C  0E00               	movlw	0
 12692  007D5E  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12693                           
 12694                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 12695  007D60  0E00               	movlw	0
 12696  007D62  0101               	movlb	1	; () banked
 12697  007D64  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12698                           
 12699                           ;usb_device.c: 2477: controlTransferState = 0;
 12700  007D66  0E00               	movlw	0
 12701  007D68  0100               	movlb	0	; () banked
 12702  007D6A  6FF6               	movwf	_controlTransferState& (0+255),b
 12703                           
 12704                           ; BSR set to: 0
 12705                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12706  007D6C  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12707  007D70  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12708  007D74  0E7F               	movlw	127
 12709  007D76  16DF               	andwf	indf2,f,c
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12713  007D78  0E04               	movlw	4
 12714  007D7A  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 12715  007D7C  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12716  007D7E  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12717  007D80  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12721  007D82  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12722  007D86  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12723  007D8A  0E7F               	movlw	127
 12724  007D8C  16DF               	andwf	indf2,f,c
 12725                           
 12726                           ; BSR set to: 0
 12727                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12728  007D8E  0E04               	movlw	4
 12729  007D90  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 12730  007D92  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12731  007D94  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12732  007D96  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12733                           
 12734                           ; BSR set to: 0
 12735                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12736  007D98  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12737  007D9C  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12738  007DA0  0E7F               	movlw	127
 12739  007DA2  16DF               	andwf	indf2,f,c
 12740                           
 12741                           ; BSR set to: 0
 12742                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 12743  007DA4  0E00               	movlw	0
 12744  007DA6  6FCE               	movwf	(_inPipes+3)& (0+255),b
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 12748  007DA8  0E00               	movlw	0
 12749  007DAA  6FD0               	movwf	(_inPipes+5)& (0+255),b
 12750  007DAC  0E00               	movlw	0
 12751  007DAE  6FCF               	movwf	(_inPipes+4)& (0+255),b
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 12755  007DB0  0E00               	movlw	0
 12756  007DB2  0101               	movlb	1	; () banked
 12757  007DB4  6F34               	movwf	(_outPipes+3)& (0+255),b
 12758                           
 12759                           ; BSR set to: 1
 12760                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 12761  007DB6  0E00               	movlw	0
 12762  007DB8  6F36               	movwf	(_outPipes+5)& (0+255),b
 12763  007DBA  0E00               	movlw	0
 12764  007DBC  6F35               	movwf	(_outPipes+4)& (0+255),b
 12765                           
 12766                           ; BSR set to: 1
 12767                           ;usb_device.c: 2502: USBCheckStdRequest();
 12768  007DBE  ECA4  F031         	call	_USBCheckStdRequest	;wreg free
 12769                           
 12770                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12771  007DC2  0E00               	movlw	0
 12772  007DC4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12773  007DC6  0E03               	movlw	3
 12774  007DC8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12775  007DCA  0E00               	movlw	0
 12776  007DCC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12777  007DCE  0E00               	movlw	0
 12778  007DD0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12779  007DD2  0E00               	movlw	0
 12780  007DD4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12781  007DD6  0E00               	movlw	0
 12782  007DD8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12783  007DDA  EC5A  F040         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12784                           
 12785                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 12786  007DDE  EC3C  F02E         	call	_USBCtrlEPServiceComplete	;wreg free
 12787  007DE2  0012               	return		;funcret
 12788  007DE4                     __end_of_USBCtrlTrfSetupHandler:
 12789                           	opt stack 0
 12790                           tblptru	equ	0xFF8
 12791                           tblptrh	equ	0xFF7
 12792                           tblptrl	equ	0xFF6
 12793                           tablat	equ	0xFF5
 12794                           prodh	equ	0xFF4
 12795                           prodl	equ	0xFF3
 12796                           intcon	equ	0xFF2
 12797                           intcon2	equ	0xFF1
 12798                           intcon3	equ	0xFF0
 12799                           postinc0	equ	0xFEE
 12800                           wreg	equ	0xFE8
 12801                           indf1	equ	0xFE7
 12802                           postdec1	equ	0xFE5
 12803                           plusw1	equ	0xFE3
 12804                           fsr1h	equ	0xFE2
 12805                           fsr1l	equ	0xFE1
 12806                           indf2	equ	0xFDF
 12807                           postinc2	equ	0xFDE
 12808                           postdec2	equ	0xFDD
 12809                           plusw2	equ	0xFDB
 12810                           fsr2h	equ	0xFDA
 12811                           fsr2l	equ	0xFD9
 12812                           status	equ	0xFD8
 12813                           
 12814 ;; *************** function _USBCtrlEPServiceComplete *****************
 12815 ;; Defined at:
 12816 ;;		line 1618 in file "usb_device.c"
 12817 ;; Parameters:    Size  Location     Type
 12818 ;;		None
 12819 ;; Auto vars:     Size  Location     Type
 12820 ;;		None
 12821 ;; Return value:  Size  Location     Type
 12822 ;;                  1    wreg      void 
 12823 ;; Registers used:
 12824 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12825 ;; Tracked objects:
 12826 ;;		On entry : 0/0
 12827 ;;		On exit  : 0/0
 12828 ;;		Unchanged: 0/0
 12829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12834 ;;Total ram usage:        0 bytes
 12835 ;; Hardware stack levels used:    1
 12836 ;; Hardware stack levels required when called:    2
 12837 ;; This function calls:
 12838 ;;		_USBCtrlEPAllowDataStage
 12839 ;;		_USBCtrlEPAllowStatusStage
 12840 ;; This function is called by:
 12841 ;;		_USBCtrlTrfSetupHandler
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           	psect	text59
 12846  005C78                     __ptext59:
 12847                           	opt stack 0
 12848  005C78                     _USBCtrlEPServiceComplete:
 12849                           	opt stack 25
 12850                           
 12851                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 12852                           
 12853                           ;incstack = 0
 12854  005C78  9865               	bcf	3941,4,c	;volatile
 12855                           
 12856                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 12857  005C7A  0100               	movlb	0	; () banked
 12858  005C7C  BFCE               	btfsc	(_inPipes+3)& (0+255),7,b
 12859  005C7E  D03C               	goto	l219
 12860                           
 12861                           ; BSR set to: 0
 12862                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 12863  005C80  0101               	movlb	1	; () banked
 12864  005C82  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 12865  005C84  D00D               	goto	l220
 12866                           
 12867                           ; BSR set to: 1
 12868                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 12869  005C86  0E02               	movlw	2
 12870  005C88  0100               	movlb	0	; () banked
 12871  005C8A  6FF6               	movwf	_controlTransferState& (0+255),b
 12872                           
 12873                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 12874  005C8C  51EE               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 12875  005C8E  B4D8               	btfsc	status,2,c
 12876                           
 12877                           ; BSR set to: 0
 12878                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 12879  005C90  EC1D  F03D         	call	_USBCtrlEPAllowDataStage	;wreg free
 12880                           
 12881                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 12882  005C94  0E00               	movlw	0
 12883  005C96  0100               	movlb	0	; () banked
 12884  005C98  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 12888  005C9A  0E00               	movlw	0
 12889  005C9C  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12890                           
 12891                           ;usb_device.c: 1654: }
 12892  005C9E  0012               	return	
 12893  005CA0                     l220:
 12894                           
 12895                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 12896                           
 12897                           ; BSR set to: 0
 12898  005CA0  0100               	movlb	0	; () banked
 12899  005CA2  EE20 F001          	lfsr	2,1
 12900  005CA6  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12901  005CA8  26D9               	addwf	fsr2l,f,c
 12902  005CAA  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12903  005CAC  22DA               	addwfc	fsr2h,f,c
 12904  005CAE  0E08               	movlw	8
 12905  005CB0  6EDF               	movwf	indf2,c
 12906                           
 12907                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12908  005CB2  EE20 F002          	lfsr	2,2
 12909  005CB6  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12910  005CB8  26D9               	addwf	fsr2l,f,c
 12911  005CBA  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12912  005CBC  22DA               	addwfc	fsr2h,f,c
 12913  005CBE  0E30               	movlw	48
 12914  005CC0  6EDE               	movwf	postinc2,c
 12915  005CC2  0E0D               	movlw	13
 12916  005CC4  6EDD               	movwf	postdec2,c
 12917                           
 12918                           ; BSR set to: 0
 12919                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12920  005CC6  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12921  005CCA  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12922  005CCE  0E0C               	movlw	12
 12923  005CD0  6EDF               	movwf	indf2,c
 12924                           
 12925                           ; BSR set to: 0
 12926                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12927  005CD2  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12928  005CD6  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12929  005CDA  0E00               	movlw	0
 12930  005CDC  8EDB               	bsf	plusw2,7,c
 12931                           
 12932                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 12933  005CDE  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12934  005CE2  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12935  005CE6  0E04               	movlw	4
 12936  005CE8  6EDF               	movwf	indf2,c
 12937                           
 12938                           ; BSR set to: 0
 12939                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12940  005CEA  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12941  005CEE  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12942  005CF2  0E00               	movlw	0
 12943  005CF4  8EDB               	bsf	plusw2,7,c
 12944                           
 12945                           ; BSR set to: 0
 12946                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 12947  005CF6  0012               	return	
 12948  005CF8                     l219:
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 12952  005CF8  010D               	movlb	13	; () banked
 12953  005CFA  AF30               	btfss	48,7,b	;volatile
 12954  005CFC  D012               	goto	l224
 12955                           
 12956                           ; BSR set to: 13
 12957                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 12958  005CFE  0E01               	movlw	1
 12959  005D00  0100               	movlb	0	; () banked
 12960  005D02  6FF6               	movwf	_controlTransferState& (0+255),b
 12961                           
 12962                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 12963  005D04  51EF               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 12964  005D06  B4D8               	btfsc	status,2,c
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 12968  005D08  EC1D  F03D         	call	_USBCtrlEPAllowDataStage	;wreg free
 12969                           
 12970                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 12971  005D0C  0E00               	movlw	0
 12972  005D0E  0100               	movlb	0	; () banked
 12973  005D10  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 12977  005D12  0E00               	movlw	0
 12978  005D14  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12979                           
 12980                           ; BSR set to: 0
 12981                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 12982  005D16  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12983  005D18  A4D8               	btfss	status,2,c
 12984  005D1A  0012               	return	
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 12988  005D1C  EC66  F036         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12989                           
 12990                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 12991  005D20  0012               	return	
 12992  005D22                     l224:
 12993                           
 12994                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 12995  005D22  0E02               	movlw	2
 12996  005D24  0100               	movlb	0	; () banked
 12997  005D26  6FF6               	movwf	_controlTransferState& (0+255),b
 12998                           
 12999                           ; BSR set to: 0
 13000                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 13001  005D28  EE20 F001          	lfsr	2,1
 13002  005D2C  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13003  005D2E  26D9               	addwf	fsr2l,f,c
 13004  005D30  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13005  005D32  22DA               	addwfc	fsr2h,f,c
 13006  005D34  0E08               	movlw	8
 13007  005D36  6EDF               	movwf	indf2,c
 13008                           
 13009                           ; BSR set to: 0
 13010                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13011  005D38  EE20 F002          	lfsr	2,2
 13012  005D3C  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13013  005D3E  26D9               	addwf	fsr2l,f,c
 13014  005D40  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13015  005D42  22DA               	addwfc	fsr2h,f,c
 13016  005D44  0E30               	movlw	48
 13017  005D46  6EDE               	movwf	postinc2,c
 13018  005D48  0E0D               	movlw	13
 13019  005D4A  6EDD               	movwf	postdec2,c
 13020                           
 13021                           ; BSR set to: 0
 13022                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13023  005D4C  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13024  005D50  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13025  005D54  0E04               	movlw	4
 13026  005D56  6EDF               	movwf	indf2,c
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13030  005D58  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13031  005D5C  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13032  005D60  0E00               	movlw	0
 13033  005D62  8EDB               	bsf	plusw2,7,c
 13034                           
 13035                           ; BSR set to: 0
 13036                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 13037  005D64  0E00               	movlw	0
 13038  005D66  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 13042  005D68  0E00               	movlw	0
 13043  005D6A  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 13047  005D6C  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13048  005D6E  A4D8               	btfss	status,2,c
 13049  005D70  0012               	return	
 13050                           
 13051                           ; BSR set to: 0
 13052                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 13053  005D72  EC66  F036         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13054  005D76  0012               	return	
 13055  005D78                     __end_of_USBCtrlEPServiceComplete:
 13056                           	opt stack 0
 13057                           tblptru	equ	0xFF8
 13058                           tblptrh	equ	0xFF7
 13059                           tblptrl	equ	0xFF6
 13060                           tablat	equ	0xFF5
 13061                           prodh	equ	0xFF4
 13062                           prodl	equ	0xFF3
 13063                           intcon	equ	0xFF2
 13064                           intcon2	equ	0xFF1
 13065                           intcon3	equ	0xFF0
 13066                           postinc0	equ	0xFEE
 13067                           wreg	equ	0xFE8
 13068                           indf1	equ	0xFE7
 13069                           postdec1	equ	0xFE5
 13070                           plusw1	equ	0xFE3
 13071                           fsr1h	equ	0xFE2
 13072                           fsr1l	equ	0xFE1
 13073                           indf2	equ	0xFDF
 13074                           postinc2	equ	0xFDE
 13075                           postdec2	equ	0xFDD
 13076                           plusw2	equ	0xFDB
 13077                           fsr2h	equ	0xFDA
 13078                           fsr2l	equ	0xFD9
 13079                           status	equ	0xFD8
 13080                           
 13081 ;; *************** function _USBCtrlEPAllowDataStage *****************
 13082 ;; Defined at:
 13083 ;;		line 1490 in file "usb_device.c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;		None
 13086 ;; Auto vars:     Size  Location     Type
 13087 ;;		None
 13088 ;; Return value:  Size  Location     Type
 13089 ;;                  1    wreg      void 
 13090 ;; Registers used:
 13091 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13092 ;; Tracked objects:
 13093 ;;		On entry : 0/0
 13094 ;;		On exit  : 0/0
 13095 ;;		Unchanged: 0/0
 13096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13101 ;;Total ram usage:        0 bytes
 13102 ;; Hardware stack levels used:    1
 13103 ;; Hardware stack levels required when called:    1
 13104 ;; This function calls:
 13105 ;;		_USBCtrlTrfTxService
 13106 ;; This function is called by:
 13107 ;;		_USBCtrlEPServiceComplete
 13108 ;; This function uses a non-reentrant model
 13109 ;;
 13110                           
 13111                           	psect	text60
 13112  007A3A                     __ptext60:
 13113                           	opt stack 0
 13114  007A3A                     _USBCtrlEPAllowDataStage:
 13115                           	opt stack 25
 13116                           
 13117                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 13118                           
 13119                           ;incstack = 0
 13120  007A3A  0E00               	movlw	0
 13121  007A3C  0100               	movlb	0	; () banked
 13122  007A3E  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13123                           
 13124                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 13125  007A40  0E00               	movlw	0
 13126  007A42  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;usb_device.c: 1495: if(controlTransferState == 2)
 13130  007A44  0E02               	movlw	2
 13131  007A46  19F6               	xorwf	_controlTransferState& (0+255),w,b
 13132  007A48  A4D8               	btfss	status,2,c
 13133  007A4A  D01F               	goto	l208
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 13137  007A4C  EE20 F001          	lfsr	2,1
 13138  007A50  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13139  007A52  26D9               	addwf	fsr2l,f,c
 13140  007A54  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13141  007A56  22DA               	addwfc	fsr2h,f,c
 13142  007A58  0E08               	movlw	8
 13143  007A5A  6EDF               	movwf	indf2,c
 13144                           
 13145                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 13146  007A5C  EE20 F002          	lfsr	2,2
 13147  007A60  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13148  007A62  26D9               	addwf	fsr2l,f,c
 13149  007A64  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13150  007A66  22DA               	addwfc	fsr2h,f,c
 13151  007A68  0E38               	movlw	56
 13152  007A6A  6EDE               	movwf	postinc2,c
 13153  007A6C  0E0D               	movlw	13
 13154  007A6E  6EDD               	movwf	postdec2,c
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13158  007A70  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13159  007A74  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13160  007A78  0E48               	movlw	72
 13161  007A7A  6EDF               	movwf	indf2,c
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13165  007A7C  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13166  007A80  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13167  007A84  0E00               	movlw	0
 13168  007A86  8EDB               	bsf	plusw2,7,c
 13169                           
 13170                           ;usb_device.c: 1502: }
 13171  007A88  0012               	return	
 13172  007A8A                     l208:
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 13176                           
 13177                           ; BSR set to: 0
 13178  007A8A  51CF               	movf	(_inPipes+4)& (0+255),w,b
 13179  007A8C  010D               	movlb	13	; () banked
 13180  007A8E  5D36               	subwf	54,w,b	;volatile
 13181  007A90  0100               	movlb	0	; () banked
 13182  007A92  51D0               	movf	(_inPipes+5)& (0+255),w,b
 13183  007A94  010D               	movlb	13	; () banked
 13184  007A96  5937               	subwfb	55,w,b	;volatile
 13185  007A98  B0D8               	btfsc	status,0,c
 13186  007A9A  D004               	goto	l210
 13187                           
 13188                           ; BSR set to: 13
 13189                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 13190  007A9C  CD36 F0CF          	movff	3382,_inPipes+4	;volatile
 13191  007AA0  CD37 F0D0          	movff	3383,_inPipes+5	;volatile
 13192  007AA4                     l210:
 13193                           
 13194                           ; BSR set to: 13
 13195                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 13196                           
 13197                           ; BSR set to: 13
 13198  007AA4  EC95  F035         	call	_USBCtrlTrfTxService	;wreg free
 13199                           
 13200                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 13201  007AA8  0100               	movlb	0	; () banked
 13202  007AAA  EE20 F002          	lfsr	2,2
 13203  007AAE  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 13204  007AB0  26D9               	addwf	fsr2l,f,c
 13205  007AB2  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13206  007AB4  22DA               	addwfc	fsr2h,f,c
 13207  007AB6  0E38               	movlw	56
 13208  007AB8  6EDE               	movwf	postinc2,c
 13209  007ABA  0E0D               	movlw	13
 13210  007ABC  6EDD               	movwf	postdec2,c
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13214  007ABE  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 13215  007AC2  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13216  007AC6  0E48               	movlw	72
 13217  007AC8  6EDF               	movwf	indf2,c
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13221  007ACA  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 13222  007ACE  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13223  007AD2  0E00               	movlw	0
 13224  007AD4  8EDB               	bsf	plusw2,7,c
 13225  007AD6  0012               	return	
 13226  007AD8                     __end_of_USBCtrlEPAllowDataStage:
 13227                           	opt stack 0
 13228                           tblptru	equ	0xFF8
 13229                           tblptrh	equ	0xFF7
 13230                           tblptrl	equ	0xFF6
 13231                           tablat	equ	0xFF5
 13232                           prodh	equ	0xFF4
 13233                           prodl	equ	0xFF3
 13234                           intcon	equ	0xFF2
 13235                           intcon2	equ	0xFF1
 13236                           intcon3	equ	0xFF0
 13237                           postinc0	equ	0xFEE
 13238                           wreg	equ	0xFE8
 13239                           indf1	equ	0xFE7
 13240                           postdec1	equ	0xFE5
 13241                           plusw1	equ	0xFE3
 13242                           fsr1h	equ	0xFE2
 13243                           fsr1l	equ	0xFE1
 13244                           indf2	equ	0xFDF
 13245                           postinc2	equ	0xFDE
 13246                           postdec2	equ	0xFDD
 13247                           plusw2	equ	0xFDB
 13248                           fsr2h	equ	0xFDA
 13249                           fsr2l	equ	0xFD9
 13250                           status	equ	0xFD8
 13251                           
 13252 ;; *************** function _USBCheckStdRequest *****************
 13253 ;; Defined at:
 13254 ;;		line 2688 in file "usb_device.c"
 13255 ;; Parameters:    Size  Location     Type
 13256 ;;		None
 13257 ;; Auto vars:     Size  Location     Type
 13258 ;;		None
 13259 ;; Return value:  Size  Location     Type
 13260 ;;                  1    wreg      void 
 13261 ;; Registers used:
 13262 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13263 ;; Tracked objects:
 13264 ;;		On entry : 0/0
 13265 ;;		On exit  : 0/0
 13266 ;;		Unchanged: 0/0
 13267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13272 ;;Total ram usage:        0 bytes
 13273 ;; Hardware stack levels used:    1
 13274 ;; Hardware stack levels required when called:    5
 13275 ;; This function calls:
 13276 ;;		_USBStdFeatureReqHandler
 13277 ;;		_USBStdGetDscHandler
 13278 ;;		_USBStdGetStatusHandler
 13279 ;;		_USBStdSetCfgHandler
 13280 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13281 ;; This function is called by:
 13282 ;;		_USBCtrlTrfSetupHandler
 13283 ;; This function uses a non-reentrant model
 13284 ;;
 13285                           
 13286                           	psect	text61
 13287  006348                     __ptext61:
 13288                           	opt stack 0
 13289  006348                     _USBCheckStdRequest:
 13290                           	opt stack 22
 13291                           
 13292                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 13293                           
 13294                           ; BSR set to: 0
 13295                           ;incstack = 0
 13296  006348  010D               	movlb	13	; () banked
 13297  00634A  3930               	swapf	48,w,b	;volatile
 13298  00634C  32E8               	rrcf	wreg,f,c
 13299  00634E  0B03               	andlw	3
 13300  006350  0900               	iorlw	0
 13301  006352  A4D8               	btfss	status,2,c
 13302  006354  0012               	return	
 13303  006356  D047               	goto	l343
 13304  006358                     l344:
 13305                           
 13306                           ; BSR set to: 13
 13307                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 13308  006358  0100               	movlb	0	; () banked
 13309  00635A  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13310                           
 13311                           ; BSR set to: 0
 13312                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 13313  00635C  0E08               	movlw	8
 13314  00635E  6FF8               	movwf	_USBDeviceState& (0+255),b
 13315                           
 13316                           ;usb_device.c: 2698: break;
 13317  006360  0012               	return	
 13318  006362                     
 13319                           ;usb_device.c: 2700: USBStdGetDscHandler();
 13320                           
 13321                           ; BSR set to: 0
 13322  006362  ECCE  F027         	call	_USBStdGetDscHandler	;wreg free
 13323                           
 13324                           ;usb_device.c: 2701: break;
 13325  006366  0012               	return	
 13326  006368                     
 13327                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 13328  006368  EC15  F032         	call	_USBStdSetCfgHandler	;wreg free
 13329                           
 13330                           ;usb_device.c: 2704: break;
 13331  00636C  0012               	return	
 13332  00636E                     
 13333                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 13334  00636E  0EFE               	movlw	low _USBActiveConfiguration
 13335  006370  0100               	movlb	0	; () banked
 13336  006372  6FCB               	movwf	_inPipes& (0+255),b
 13337  006374  0E00               	movlw	high _USBActiveConfiguration
 13338  006376  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13339                           
 13340                           ; BSR set to: 0
 13341                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13342  006378  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 13346  00637A  0E01               	movlw	1
 13347  00637C  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13348                           
 13349                           ; BSR set to: 0
 13350                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 13351  00637E  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13352                           
 13353                           ;usb_device.c: 2710: break;
 13354  006380  0012               	return	
 13355  006382                     
 13356                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 13357                           
 13358                           ; BSR set to: 0
 13359  006382  ECDB  F03A         	call	_USBStdGetStatusHandler	;wreg free
 13360                           
 13361                           ;usb_device.c: 2713: break;
 13362  006386  0012               	return	
 13363  006388                     
 13364                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 13365  006388  ECA4  F00D         	call	_USBStdFeatureReqHandler	;wreg free
 13366                           
 13367                           ;usb_device.c: 2717: break;
 13368  00638C  0012               	return	
 13369  00638E                     
 13370                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 13371  00638E  010D               	movlb	13	; () banked
 13372  006390  5134               	movf	52,w,b	;volatile
 13373  006392  0D01               	mullw	1
 13374  006394  0EAF               	movlw	low _USBAlternateInterface
 13375  006396  24F3               	addwf	prodl,w,c
 13376  006398  0100               	movlb	0	; () banked
 13377  00639A  6FCB               	movwf	_inPipes& (0+255),b
 13378  00639C  0E01               	movlw	high _USBAlternateInterface
 13379  00639E  20F4               	addwfc	prodh,w,c
 13380  0063A0  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13381                           
 13382                           ; BSR set to: 0
 13383                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13384  0063A2  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 13385                           
 13386                           ; BSR set to: 0
 13387                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 13388  0063A4  0E01               	movlw	1
 13389  0063A6  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13390                           
 13391                           ; BSR set to: 0
 13392                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 13393  0063A8  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13394                           
 13395                           ;usb_device.c: 2723: break;
 13396  0063AA  0012               	return	
 13397  0063AC                     l353:
 13398                           
 13399                           ; BSR set to: 13
 13400                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 13401  0063AC  0100               	movlb	0	; () banked
 13402  0063AE  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13403                           
 13404                           ; BSR set to: 0
 13405                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 13406  0063B0  010D               	movlb	13	; () banked
 13407  0063B2  5134               	movf	52,w,b	;volatile
 13408  0063B4  0D01               	mullw	1
 13409  0063B6  0EAF               	movlw	low _USBAlternateInterface
 13410  0063B8  24F3               	addwf	prodl,w,c
 13411  0063BA  6ED9               	movwf	fsr2l,c
 13412  0063BC  0E01               	movlw	high _USBAlternateInterface
 13413  0063BE  20F4               	addwfc	prodh,w,c
 13414  0063C0  6EDA               	movwf	fsr2h,c
 13415  0063C2  CD32 FFDF          	movff	3378,indf2	;volatile
 13416                           
 13417                           ;usb_device.c: 2727: break;
 13418  0063C6  0012               	return	
 13419  0063C8                     
 13420                           ; BSR set to: 13
 13421                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 13422                           
 13423                           ; BSR set to: 13
 13424  0063C8  0E00               	movlw	0
 13425  0063CA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13426  0063CC  0E02               	movlw	2
 13427  0063CE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13428  0063D0  0E00               	movlw	0
 13429  0063D2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13430  0063D4  0E00               	movlw	0
 13431  0063D6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13432  0063D8  0E00               	movlw	0
 13433  0063DA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13434  0063DC  0E00               	movlw	0
 13435  0063DE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13436  0063E0  EC5A  F040         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13437                           
 13438                           ;usb_device.c: 2734: }
 13439                           
 13440                           ;usb_device.c: 2733: break;
 13441                           
 13442                           ;usb_device.c: 2732: default:
 13443                           
 13444                           ;usb_device.c: 2731: case 12:
 13445                           
 13446                           ;usb_device.c: 2730: break;
 13447  0063E4  0012               	return	
 13448  0063E6                     l343:
 13449  0063E6  010D               	movlb	13	; () banked
 13450  0063E8  5131               	movf	49,w,b	;volatile
 13451                           
 13452                           ; Switch size 1, requested type "space"
 13453                           ; Number of cases is 11, Range of values is 0 to 12
 13454                           ; switch strategies available:
 13455                           ; Name         Instructions Cycles
 13456                           ; simple_byte           34    18 (average)
 13457                           ;	Chosen strategy is simple_byte
 13458  0063EA  0A00               	xorlw	0	; case 0
 13459  0063EC  B4D8               	btfsc	status,2,c
 13460  0063EE  D7C9               	goto	l349
 13461  0063F0  0A01               	xorlw	1	; case 1
 13462  0063F2  B4D8               	btfsc	status,2,c
 13463  0063F4  D7C9               	goto	l350
 13464  0063F6  0A02               	xorlw	2	; case 3
 13465  0063F8  B4D8               	btfsc	status,2,c
 13466  0063FA  D7C6               	goto	l350
 13467  0063FC  0A06               	xorlw	6	; case 5
 13468  0063FE  B4D8               	btfsc	status,2,c
 13469  006400  D7AB               	goto	l344
 13470  006402  0A03               	xorlw	3	; case 6
 13471  006404  B4D8               	btfsc	status,2,c
 13472  006406  D7AD               	goto	l346
 13473  006408  0A01               	xorlw	1	; case 7
 13474  00640A  B4D8               	btfsc	status,2,c
 13475  00640C  D7DD               	goto	l354
 13476  00640E  0A0F               	xorlw	15	; case 8
 13477  006410  B4D8               	btfsc	status,2,c
 13478  006412  D7AD               	goto	l348
 13479  006414  0A01               	xorlw	1	; case 9
 13480  006416  B4D8               	btfsc	status,2,c
 13481  006418  D7A7               	goto	l347
 13482  00641A  0A03               	xorlw	3	; case 10
 13483  00641C  B4D8               	btfsc	status,2,c
 13484  00641E  D7B7               	goto	l352
 13485  006420  0A01               	xorlw	1	; case 11
 13486  006422  B4D8               	btfsc	status,2,c
 13487  006424  D7C3               	goto	l353
 13488  006426  0A07               	xorlw	7	; case 12
 13489  006428  0012               	return	
 13490  00642A                     __end_of_USBCheckStdRequest:
 13491                           	opt stack 0
 13492                           tblptru	equ	0xFF8
 13493                           tblptrh	equ	0xFF7
 13494                           tblptrl	equ	0xFF6
 13495                           tablat	equ	0xFF5
 13496                           prodh	equ	0xFF4
 13497                           prodl	equ	0xFF3
 13498                           intcon	equ	0xFF2
 13499                           intcon2	equ	0xFF1
 13500                           intcon3	equ	0xFF0
 13501                           postinc0	equ	0xFEE
 13502                           wreg	equ	0xFE8
 13503                           indf1	equ	0xFE7
 13504                           postdec1	equ	0xFE5
 13505                           plusw1	equ	0xFE3
 13506                           fsr1h	equ	0xFE2
 13507                           fsr1l	equ	0xFE1
 13508                           indf2	equ	0xFDF
 13509                           postinc2	equ	0xFDE
 13510                           postdec2	equ	0xFDD
 13511                           plusw2	equ	0xFDB
 13512                           fsr2h	equ	0xFDA
 13513                           fsr2l	equ	0xFD9
 13514                           status	equ	0xFD8
 13515                           
 13516 ;; *************** function _USBStdSetCfgHandler *****************
 13517 ;; Defined at:
 13518 ;;		line 1970 in file "usb_device.c"
 13519 ;; Parameters:    Size  Location     Type
 13520 ;;		None
 13521 ;; Auto vars:     Size  Location     Type
 13522 ;;  i               1   23[COMRAM] unsigned char 
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  1    wreg      void 
 13525 ;; Registers used:
 13526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13527 ;; Tracked objects:
 13528 ;;		On entry : 0/0
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13536 ;;Total ram usage:        1 bytes
 13537 ;; Hardware stack levels used:    1
 13538 ;; Hardware stack levels required when called:    4
 13539 ;; This function calls:
 13540 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13541 ;;		_memset
 13542 ;; This function is called by:
 13543 ;;		_USBCheckStdRequest
 13544 ;; This function uses a non-reentrant model
 13545 ;;
 13546                           
 13547                           	psect	text62
 13548  00642A                     __ptext62:
 13549                           	opt stack 0
 13550  00642A                     _USBStdSetCfgHandler:
 13551                           	opt stack 22
 13552                           
 13553                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 13554                           
 13555                           ;incstack = 0
 13556  00642A  0100               	movlb	0	; () banked
 13557  00642C  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13558                           
 13559                           ; BSR set to: 0
 13560                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 13561  00642E  0E27               	movlw	39
 13562  006430  6E01               	movwf	memset@p1,c
 13563  006432  0E0F               	movlw	15
 13564  006434  6E02               	movwf	memset@p1+1,c
 13565  006436  0E00               	movlw	0
 13566  006438  6E04               	movwf	memset@c+1,c
 13567  00643A  0E00               	movlw	0
 13568  00643C  6E03               	movwf	memset@c,c
 13569  00643E  0E00               	movlw	0
 13570  006440  6E06               	movwf	memset@n+1,c
 13571  006442  0E02               	movlw	2
 13572  006444  6E05               	movwf	memset@n,c
 13573  006446  ECBB  F04B         	call	_memset	;wreg free
 13574                           
 13575                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13576  00644A  0E00               	movlw	0
 13577  00644C  6E01               	movwf	memset@p1,c
 13578  00644E  0E0D               	movlw	13
 13579  006450  6E02               	movwf	memset@p1+1,c
 13580  006452  0E00               	movlw	0
 13581  006454  6E04               	movwf	memset@c+1,c
 13582  006456  0E00               	movlw	0
 13583  006458  6E03               	movwf	memset@c,c
 13584  00645A  0E00               	movlw	0
 13585  00645C  6E06               	movwf	memset@n+1,c
 13586  00645E  0E30               	movlw	48
 13587  006460  6E05               	movwf	memset@n,c
 13588  006462  ECBB  F04B         	call	_memset	;wreg free
 13589                           
 13590                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 13591  006466  8C65               	bsf	3941,6,c	;volatile
 13592                           
 13593                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 13594  006468  0E00               	movlw	0
 13595  00646A  6E18               	movwf	USBStdSetCfgHandler@i,c
 13596  00646C                     l13324:
 13597  00646C  0E02               	movlw	2
 13598  00646E  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 13599  006470  D001               	goto	l260
 13600  006472  D016               	goto	u10080
 13601  006474                     l260:
 13602                           
 13603                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 13604  006474  5018               	movf	USBStdSetCfgHandler@i,w,c
 13605  006476  0D01               	mullw	1
 13606  006478  0E6F               	movlw	low _ep_data_in
 13607  00647A  24F3               	addwf	prodl,w,c
 13608  00647C  6ED9               	movwf	fsr2l,c
 13609  00647E  0E01               	movlw	high _ep_data_in
 13610  006480  20F4               	addwfc	prodh,w,c
 13611  006482  6EDA               	movwf	fsr2h,c
 13612  006484  0E00               	movlw	0
 13613  006486  6EDF               	movwf	indf2,c
 13614                           
 13615                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 13616  006488  5018               	movf	USBStdSetCfgHandler@i,w,c
 13617  00648A  0D01               	mullw	1
 13618  00648C  0E6C               	movlw	low _ep_data_out
 13619  00648E  24F3               	addwf	prodl,w,c
 13620  006490  6ED9               	movwf	fsr2l,c
 13621  006492  0E01               	movlw	high _ep_data_out
 13622  006494  20F4               	addwfc	prodh,w,c
 13623  006496  6EDA               	movwf	fsr2h,c
 13624  006498  0E00               	movlw	0
 13625  00649A  6EDF               	movwf	indf2,c
 13626  00649C  2A18               	incf	USBStdSetCfgHandler@i,f,c
 13627  00649E  D7E6               	goto	l13324
 13628  0064A0                     u10080:
 13629                           
 13630                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 13631  0064A0  0EAF               	movlw	low _USBAlternateInterface
 13632  0064A2  6E01               	movwf	memset@p1,c
 13633  0064A4  0E01               	movlw	high _USBAlternateInterface
 13634  0064A6  6E02               	movwf	memset@p1+1,c
 13635  0064A8  0E00               	movlw	0
 13636  0064AA  6E04               	movwf	memset@c+1,c
 13637  0064AC  0E00               	movlw	0
 13638  0064AE  6E03               	movwf	memset@c,c
 13639  0064B0  0E00               	movlw	0
 13640  0064B2  6E06               	movwf	memset@n+1,c
 13641  0064B4  0E02               	movlw	2
 13642  0064B6  6E05               	movwf	memset@n,c
 13643  0064B8  ECBB  F04B         	call	_memset	;wreg free
 13644                           
 13645                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 13646  0064BC  9C65               	bcf	3941,6,c	;volatile
 13647                           
 13648                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13649  0064BE  0E08               	movlw	8
 13650  0064C0  0100               	movlb	0	; () banked
 13651  0064C2  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 13652  0064C4  0E0D               	movlw	13
 13653  0064C6  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13657  0064C8  0E00               	movlw	0
 13658  0064CA  6FE3               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13659  0064CC  0E0D               	movlw	13
 13660  0064CE  6FE4               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13664  0064D0  C0E3  F0E1         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13665  0064D4  C0E4  F0E2         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13669  0064D8  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 13673  0064DC  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 13674  0064DE  A4D8               	btfss	status,2,c
 13675  0064E0  D003               	goto	l262
 13676                           
 13677                           ; BSR set to: 0
 13678                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 13679  0064E2  0E10               	movlw	16
 13680  0064E4  6FF8               	movwf	_USBDeviceState& (0+255),b
 13681                           
 13682                           ;usb_device.c: 2015: }
 13683  0064E6  0012               	return	
 13684  0064E8                     l262:
 13685                           
 13686                           ; BSR set to: 0
 13687                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 13688                           
 13689                           ; BSR set to: 0
 13690  0064E8  0E00               	movlw	0
 13691  0064EA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13692  0064EC  0E01               	movlw	1
 13693  0064EE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13694  0064F0  0EFE               	movlw	low _USBActiveConfiguration
 13695  0064F2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13696  0064F4  0E00               	movlw	high _USBActiveConfiguration
 13697  0064F6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13698  0064F8  0E00               	movlw	0
 13699  0064FA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13700  0064FC  0E01               	movlw	1
 13701  0064FE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13702  006500  EC5A  F040         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13703                           
 13704                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 13705  006504  0E20               	movlw	32
 13706  006506  0100               	movlb	0	; () banked
 13707  006508  6FF8               	movwf	_USBDeviceState& (0+255),b
 13708  00650A  0012               	return	
 13709  00650C                     __end_of_USBStdSetCfgHandler:
 13710                           	opt stack 0
 13711                           tblptru	equ	0xFF8
 13712                           tblptrh	equ	0xFF7
 13713                           tblptrl	equ	0xFF6
 13714                           tablat	equ	0xFF5
 13715                           prodh	equ	0xFF4
 13716                           prodl	equ	0xFF3
 13717                           intcon	equ	0xFF2
 13718                           intcon2	equ	0xFF1
 13719                           intcon3	equ	0xFF0
 13720                           postinc0	equ	0xFEE
 13721                           wreg	equ	0xFE8
 13722                           indf1	equ	0xFE7
 13723                           postdec1	equ	0xFE5
 13724                           plusw1	equ	0xFE3
 13725                           fsr1h	equ	0xFE2
 13726                           fsr1l	equ	0xFE1
 13727                           indf2	equ	0xFDF
 13728                           postinc2	equ	0xFDE
 13729                           postdec2	equ	0xFDD
 13730                           plusw2	equ	0xFDB
 13731                           fsr2h	equ	0xFDA
 13732                           fsr2l	equ	0xFD9
 13733                           status	equ	0xFD8
 13734                           
 13735 ;; *************** function _memset *****************
 13736 ;; Defined at:
 13737 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 13738 ;; Parameters:    Size  Location     Type
 13739 ;;  p1              2    0[COMRAM] PTR void 
 13740 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13741 ;;  c               2    2[COMRAM] int 
 13742 ;;  n               2    4[COMRAM] unsigned int 
 13743 ;; Auto vars:     Size  Location     Type
 13744 ;;  p               2    6[COMRAM] PTR unsigned char 
 13745 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13746 ;; Return value:  Size  Location     Type
 13747 ;;                  2    0[COMRAM] PTR void 
 13748 ;; Registers used:
 13749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13750 ;; Tracked objects:
 13751 ;;		On entry : 0/0
 13752 ;;		On exit  : 0/0
 13753 ;;		Unchanged: 0/0
 13754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13755 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13758 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13759 ;;Total ram usage:        8 bytes
 13760 ;; Hardware stack levels used:    1
 13761 ;; This function calls:
 13762 ;;		Nothing
 13763 ;; This function is called by:
 13764 ;;		_USBDeviceInit
 13765 ;;		_USBStdSetCfgHandler
 13766 ;; This function uses a non-reentrant model
 13767 ;;
 13768                           
 13769                           	psect	text63
 13770  009776                     __ptext63:
 13771                           	opt stack 0
 13772  009776                     _memset:
 13773                           	opt stack 28
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;incstack = 0
 13777  009776  C001  F007         	movff	memset@p1,memset@p
 13778  00977A  C002  F008         	movff	memset@p1+1,memset@p+1
 13779  00977E  D008               	goto	l3770
 13780  009780                     l11904:
 13781  009780  C007  FFD9         	movff	memset@p,fsr2l
 13782  009784  C008  FFDA         	movff	memset@p+1,fsr2h
 13783  009788  C003  FFDF         	movff	memset@c,indf2
 13784  00978C  4A07               	infsnz	memset@p,f,c
 13785  00978E  2A08               	incf	memset@p+1,f,c
 13786  009790                     l3770:
 13787  009790  0605               	decf	memset@n,f,c
 13788  009792  A0D8               	btfss	status,0,c
 13789  009794  0606               	decf	memset@n+1,f,c
 13790  009796  2805               	incf	memset@n,w,c
 13791  009798  E1F3               	bnz	l11904
 13792  00979A  2806               	incf	memset@n+1,w,c
 13793  00979C  B4D8               	btfsc	status,2,c
 13794  00979E  0012               	return	
 13795  0097A0  D7EF               	goto	l3771
 13796  0097A2                     __end_of_memset:
 13797                           	opt stack 0
 13798                           tblptru	equ	0xFF8
 13799                           tblptrh	equ	0xFF7
 13800                           tblptrl	equ	0xFF6
 13801                           tablat	equ	0xFF5
 13802                           prodh	equ	0xFF4
 13803                           prodl	equ	0xFF3
 13804                           intcon	equ	0xFF2
 13805                           intcon2	equ	0xFF1
 13806                           intcon3	equ	0xFF0
 13807                           postinc0	equ	0xFEE
 13808                           wreg	equ	0xFE8
 13809                           indf1	equ	0xFE7
 13810                           postdec1	equ	0xFE5
 13811                           plusw1	equ	0xFE3
 13812                           fsr1h	equ	0xFE2
 13813                           fsr1l	equ	0xFE1
 13814                           indf2	equ	0xFDF
 13815                           postinc2	equ	0xFDE
 13816                           postdec2	equ	0xFDD
 13817                           plusw2	equ	0xFDB
 13818                           fsr2h	equ	0xFDA
 13819                           fsr2l	equ	0xFD9
 13820                           status	equ	0xFD8
 13821                           
 13822 ;; *************** function _USBStdGetStatusHandler *****************
 13823 ;; Defined at:
 13824 ;;		line 2131 in file "usb_device.c"
 13825 ;; Parameters:    Size  Location     Type
 13826 ;;		None
 13827 ;; Auto vars:     Size  Location     Type
 13828 ;;  p               2    1[COMRAM] PTR struct __BDT
 13829 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13830 ;; Return value:  Size  Location     Type
 13831 ;;                  1    wreg      void 
 13832 ;; Registers used:
 13833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13834 ;; Tracked objects:
 13835 ;;		On entry : 0/0
 13836 ;;		On exit  : 0/0
 13837 ;;		Unchanged: 0/0
 13838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13843 ;;Total ram usage:        3 bytes
 13844 ;; Hardware stack levels used:    1
 13845 ;; This function calls:
 13846 ;;		Nothing
 13847 ;; This function is called by:
 13848 ;;		_USBCheckStdRequest
 13849 ;; This function uses a non-reentrant model
 13850 ;;
 13851                           
 13852                           	psect	text64
 13853  0075B6                     __ptext64:
 13854                           	opt stack 0
 13855  0075B6                     _USBStdGetStatusHandler:
 13856                           	opt stack 26
 13857                           
 13858                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 13859                           
 13860                           ;incstack = 0
 13861  0075B6  0E00               	movlw	0
 13862  0075B8  010D               	movlb	13	; () banked
 13863  0075BA  6F38               	movwf	56,b	;volatile
 13864                           
 13865                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 13866  0075BC  0E00               	movlw	0
 13867  0075BE  6F39               	movwf	57,b	;volatile
 13868                           
 13869                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 13870  0075C0  D039               	goto	l281
 13871  0075C2                     l282:
 13872                           
 13873                           ; BSR set to: 13
 13874                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 13875  0075C2  0100               	movlb	0	; () banked
 13876  0075C4  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13877                           
 13878                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 13879                           
 13880                           ; BSR set to: 13
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 13884                           
 13885                           ;usb_device.c: 2144: if(0 == 1)
 13886  0075C6  0100               	movlb	0	; () banked
 13887  0075C8  05F5               	decf	_RemoteWakeup& (0+255),w,b
 13888  0075CA  A4D8               	btfss	status,2,c
 13889  0075CC  D03E               	goto	l285
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 13893  0075CE  010D               	movlb	13	; () banked
 13894  0075D0  8338               	bsf	56,1,b	;volatile
 13895                           
 13896                           ; BSR set to: 13
 13897                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 13898  0075D2  D03B               	goto	l285
 13899  0075D4                     l286:
 13900                           
 13901                           ; BSR set to: 13
 13902                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 13903  0075D4  0100               	movlb	0	; () banked
 13904  0075D6  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13905                           
 13906                           ;usb_device.c: 2156: break;
 13907  0075D8  D038               	goto	l285
 13908  0075DA                     l287:
 13909                           
 13910                           ; BSR set to: 13
 13911                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 13912  0075DA  0100               	movlb	0	; () banked
 13913  0075DC  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13914                           
 13915                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 13916  0075DE  010D               	movlb	13	; () banked
 13917  0075E0  BF34               	btfsc	52,7,b	;volatile
 13918  0075E2  D00A               	goto	l288
 13919                           
 13920                           ; BSR set to: 13
 13921                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13922  0075E4  5134               	movf	52,w,b	;volatile
 13923  0075E6  0B0F               	andlw	15
 13924  0075E8  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13925  0075EA  5001               	movf	??_USBStdGetStatusHandler,w,c
 13926  0075EC  0D02               	mullw	2
 13927  0075EE  0E40               	movlw	low _pBDTEntryOut
 13928  0075F0  24F3               	addwf	prodl,w,c
 13929  0075F2  6ED9               	movwf	fsr2l,c
 13930  0075F4  0E01               	movlw	high _pBDTEntryOut
 13931  0075F6  D009               	goto	L6
 13932  0075F8                     l288:
 13933                           
 13934                           ; BSR set to: 13
 13935                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 13936                           
 13937                           ; BSR set to: 13
 13938  0075F8  5134               	movf	52,w,b	;volatile
 13939  0075FA  0B0F               	andlw	15
 13940  0075FC  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13941  0075FE  5001               	movf	??_USBStdGetStatusHandler,w,c
 13942  007600  0D02               	mullw	2
 13943  007602  0ED1               	movlw	low _pBDTEntryIn
 13944  007604  24F3               	addwf	prodl,w,c
 13945  007606  6ED9               	movwf	fsr2l,c
 13946  007608  0E00               	movlw	high _pBDTEntryIn
 13947  00760A                     L6:
 13948  00760A  20F4               	addwfc	prodh,w,c
 13949  00760C  6EDA               	movwf	fsr2h,c
 13950  00760E  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 13951  007612  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 13952                           
 13953                           ; BSR set to: 13
 13954                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 13955                           
 13956                           ; BSR set to: 13
 13957  007616  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13958  00761A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13959  00761E  AEDF               	btfss	indf2,7,c
 13960  007620  D014               	goto	l285
 13961                           
 13962                           ; BSR set to: 13
 13963  007622  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13964  007626  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13965  00762A  A4DF               	btfss	indf2,2,c
 13966  00762C  D00E               	goto	l285
 13967                           
 13968                           ; BSR set to: 13
 13969                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 13970  00762E  0E01               	movlw	1
 13971  007630  6F38               	movwf	56,b	;volatile
 13972                           
 13973                           ; BSR set to: 13
 13974                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 13975                           
 13976                           ; BSR set to: 13
 13977                           ;usb_device.c: 2176: break;
 13978  007632  D00B               	goto	l285
 13979  007634                     l281:
 13980                           
 13981                           ; BSR set to: 13
 13982                           
 13983                           ; BSR set to: 13
 13984  007634  5130               	movf	48,w,b	;volatile
 13985  007636  0B1F               	andlw	31
 13986                           
 13987                           ; Switch size 1, requested type "space"
 13988                           ; Number of cases is 3, Range of values is 0 to 2
 13989                           ; switch strategies available:
 13990                           ; Name         Instructions Cycles
 13991                           ; simple_byte           10     6 (average)
 13992                           ;	Chosen strategy is simple_byte
 13993  007638  0A00               	xorlw	0	; case 0
 13994  00763A  B4D8               	btfsc	status,2,c
 13995  00763C  D7C2               	goto	l282
 13996  00763E  0A01               	xorlw	1	; case 1
 13997  007640  B4D8               	btfsc	status,2,c
 13998  007642  D7C8               	goto	l286
 13999  007644  0A03               	xorlw	3	; case 2
 14000  007646  B4D8               	btfsc	status,2,c
 14001  007648  D7C8               	goto	l287
 14002  00764A                     l285:
 14003                           
 14004                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 14005  00764A  0100               	movlb	0	; () banked
 14006  00764C  AFCE               	btfss	(_inPipes+3)& (0+255),7,b
 14007  00764E  0012               	return	
 14008                           
 14009                           ; BSR set to: 0
 14010                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 14011  007650  0E38               	movlw	56
 14012  007652  6FCB               	movwf	_inPipes& (0+255),b
 14013  007654  0E0D               	movlw	13
 14014  007656  6FCC               	movwf	(_inPipes+1)& (0+255),b
 14015                           
 14016                           ; BSR set to: 0
 14017                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14018  007658  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 14019                           
 14020                           ; BSR set to: 0
 14021                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 14022  00765A  0E02               	movlw	2
 14023  00765C  6FCF               	movwf	(_inPipes+4)& (0+255),b
 14024  00765E  0012               	return	
 14025  007660                     __end_of_USBStdGetStatusHandler:
 14026                           	opt stack 0
 14027                           tblptru	equ	0xFF8
 14028                           tblptrh	equ	0xFF7
 14029                           tblptrl	equ	0xFF6
 14030                           tablat	equ	0xFF5
 14031                           prodh	equ	0xFF4
 14032                           prodl	equ	0xFF3
 14033                           intcon	equ	0xFF2
 14034                           intcon2	equ	0xFF1
 14035                           intcon3	equ	0xFF0
 14036                           postinc0	equ	0xFEE
 14037                           wreg	equ	0xFE8
 14038                           indf1	equ	0xFE7
 14039                           postdec1	equ	0xFE5
 14040                           plusw1	equ	0xFE3
 14041                           fsr1h	equ	0xFE2
 14042                           fsr1l	equ	0xFE1
 14043                           indf2	equ	0xFDF
 14044                           postinc2	equ	0xFDE
 14045                           postdec2	equ	0xFDD
 14046                           plusw2	equ	0xFDB
 14047                           fsr2h	equ	0xFDA
 14048                           fsr2l	equ	0xFD9
 14049                           status	equ	0xFD8
 14050                           
 14051 ;; *************** function _USBStdGetDscHandler *****************
 14052 ;; Defined at:
 14053 ;;		line 2045 in file "usb_device.c"
 14054 ;; Parameters:    Size  Location     Type
 14055 ;;		None
 14056 ;; Auto vars:     Size  Location     Type
 14057 ;;		None
 14058 ;; Return value:  Size  Location     Type
 14059 ;;                  1    wreg      void 
 14060 ;; Registers used:
 14061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14062 ;; Tracked objects:
 14063 ;;		On entry : 0/0
 14064 ;;		On exit  : 0/0
 14065 ;;		Unchanged: 0/0
 14066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14071 ;;Total ram usage:        2 bytes
 14072 ;; Hardware stack levels used:    1
 14073 ;; This function calls:
 14074 ;;		Nothing
 14075 ;; This function is called by:
 14076 ;;		_USBCheckStdRequest
 14077 ;; This function uses a non-reentrant model
 14078 ;;
 14079                           
 14080                           	psect	text65
 14081  004F9C                     __ptext65:
 14082                           	opt stack 0
 14083  004F9C                     _USBStdGetDscHandler:
 14084                           	opt stack 26
 14085                           
 14086                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;incstack = 0
 14090  004F9C  0E80               	movlw	128
 14091  004F9E  010D               	movlb	13	; () banked
 14092  004FA0  1930               	xorwf	48,w,b	;volatile
 14093  004FA2  A4D8               	btfss	status,2,c
 14094  004FA4  0012               	return	
 14095                           
 14096                           ; BSR set to: 13
 14097                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 14098  004FA6  0EC0               	movlw	192
 14099  004FA8  0100               	movlb	0	; () banked
 14100  004FAA  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14101                           
 14102                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 14103  004FAC  D088               	goto	l268
 14104  004FAE                     
 14105                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 14106                           
 14107                           ; BSR set to: 0
 14108  004FAE  0EA4               	movlw	low _device_dsc
 14109  004FB0  0100               	movlb	0	; () banked
 14110  004FB2  6FCB               	movwf	_inPipes& (0+255),b
 14111  004FB4  0EBF               	movlw	high _device_dsc
 14112  004FB6  6FCC               	movwf	(_inPipes+1)& (0+255),b
 14113                           
 14114                           ; BSR set to: 0
 14115                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 14116  004FB8  0E00               	movlw	0
 14117  004FBA  6FD0               	movwf	(_inPipes+5)& (0+255),b
 14118  004FBC  0E12               	movlw	18
 14119  004FBE  6FCF               	movwf	(_inPipes+4)& (0+255),b
 14120                           
 14121                           ;usb_device.c: 2060: break;
 14122  004FC0  0012               	return	
 14123  004FC2                     
 14124                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 14125                           
 14126                           ; BSR set to: 0
 14127  004FC2  010D               	movlb	13	; () banked
 14128  004FC4  5132               	movf	50,w,b	;volatile
 14129  004FC6  A4D8               	btfss	status,2,c
 14130  004FC8  D043               	goto	l272
 14131                           
 14132                           ; BSR set to: 13
 14133                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 14134  004FCA  5132               	movf	50,w,b	;volatile
 14135  004FCC  0D02               	mullw	2
 14136  004FCE  0EA3               	movlw	low _USB_CD_Ptr
 14137  004FD0  24F3               	addwf	prodl,w,c
 14138  004FD2  6EF6               	movwf	tblptrl,c
 14139  004FD4  0EBE               	movlw	high _USB_CD_Ptr
 14140  004FD6  20F4               	addwfc	prodh,w,c
 14141  004FD8  6EF7               	movwf	tblptrh,c
 14142  004FDA                     	if	1	;There are 3 active tblptr bytes
 14143  004FDA  6AF8               	clrf	tblptru,c
 14144  004FDC  0E00               	movlw	low (__mediumconst shr (0+16))
 14145  004FDE  22F8               	addwfc	tblptru,f,c
 14146  004FE0                     	endif
 14147  004FE0  0009               	tblrd		*+
 14148  004FE2  CFF5 F0CB          	movff	tablat,_inPipes
 14149  004FE6  000A               	tblrd		*-
 14150  004FE8  CFF5 F0CC          	movff	tablat,_inPipes+1
 14151                           
 14152                           ; BSR set to: 13
 14153                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 14154  004FEC  0E02               	movlw	2
 14155  004FEE  0100               	movlb	0	; () banked
 14156  004FF0  25CB               	addwf	_inPipes& (0+255),w,b
 14157  004FF2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14158  004FF4  0E00               	movlw	0
 14159  004FF6  21CC               	addwfc	(_inPipes+1)& (0+255),w,b
 14160  004FF8  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14161  004FFA  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14162  004FFE  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14163  005002  6AF8               	clrf	tblptru,c
 14164  005004  0E0E               	movlw	(high __ramtop+-1)
 14165  005006  64F7               	cpfsgt	tblptrh,c
 14166  005008  D003               	bra	u10127
 14167  00500A  0008               	tblrd		*
 14168  00500C  50F5               	movf	tablat,w,c
 14169  00500E  D005               	bra	u10120
 14170  005010                     u10127:
 14171  005010  CFF6 FFE9          	movff	tblptrl,fsr0l
 14172  005014  CFF7 FFEA          	movff	tblptrh,fsr0h
 14173  005018  50EF               	movf	indf0,w,c
 14174  00501A                     u10120:
 14175  00501A  0100               	movlb	0	; () banked
 14176  00501C  6FCF               	movwf	(_inPipes+4)& (0+255),b
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 14180  00501E  0E03               	movlw	3
 14181  005020  25CB               	addwf	_inPipes& (0+255),w,b
 14182  005022  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14183  005024  0E00               	movlw	0
 14184  005026  21CC               	addwfc	(_inPipes+1)& (0+255),w,b
 14185  005028  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14186  00502A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14187  00502E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14188  005032  6AF8               	clrf	tblptru,c
 14189  005034  0E0E               	movlw	(high __ramtop+-1)
 14190  005036  64F7               	cpfsgt	tblptrh,c
 14191  005038  D003               	bra	u10137
 14192  00503A  0008               	tblrd		*
 14193  00503C  50F5               	movf	tablat,w,c
 14194  00503E  D005               	bra	u10130
 14195  005040                     u10137:
 14196  005040  CFF6 FFE9          	movff	tblptrl,fsr0l
 14197  005044  CFF7 FFEA          	movff	tblptrh,fsr0h
 14198  005048  50EF               	movf	indf0,w,c
 14199  00504A                     u10130:
 14200  00504A  0100               	movlb	0	; () banked
 14201  00504C  6FD0               	movwf	(_inPipes+5)& (0+255),b
 14202                           
 14203                           ;usb_device.c: 2078: }
 14204  00504E  0012               	return	
 14205  005050                     l272:
 14206                           
 14207                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 14208                           
 14209                           ; BSR set to: 0
 14210  005050  0E00               	movlw	0
 14211  005052  0100               	movlb	0	; () banked
 14212  005054  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14213                           
 14214                           ; BSR set to: 0
 14215                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 14216  005056  0012               	return	
 14217  005058                     
 14218                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 14219                           
 14220                           ; BSR set to: 0
 14221  005058  0E04               	movlw	4
 14222  00505A  010D               	movlb	13	; () banked
 14223  00505C  6132               	cpfslt	50,b	;volatile
 14224  00505E  D027               	goto	l275
 14225                           
 14226                           ; BSR set to: 13
 14227                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 14228  005060  5132               	movf	50,w,b	;volatile
 14229  005062  0D02               	mullw	2
 14230  005064  0E79               	movlw	low _USB_SD_Ptr
 14231  005066  24F3               	addwf	prodl,w,c
 14232  005068  6EF6               	movwf	tblptrl,c
 14233  00506A  0EBE               	movlw	high _USB_SD_Ptr
 14234  00506C  20F4               	addwfc	prodh,w,c
 14235  00506E  6EF7               	movwf	tblptrh,c
 14236  005070                     	if	1	;There are 3 active tblptr bytes
 14237  005070  6AF8               	clrf	tblptru,c
 14238  005072  0E00               	movlw	low (__mediumconst shr (0+16))
 14239  005074  22F8               	addwfc	tblptru,f,c
 14240  005076                     	endif
 14241  005076  0009               	tblrd		*+
 14242  005078  CFF5 F0CB          	movff	tablat,_inPipes
 14243  00507C  000A               	tblrd		*-
 14244  00507E  CFF5 F0CC          	movff	tablat,_inPipes+1
 14245                           
 14246                           ; BSR set to: 13
 14247                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 14248  005082  C0CB  FFF6         	movff	_inPipes,tblptrl
 14249  005086  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 14250  00508A  6AF8               	clrf	tblptru,c
 14251  00508C  0E0E               	movlw	(high __ramtop+-1)
 14252  00508E  64F7               	cpfsgt	tblptrh,c
 14253  005090  D003               	bra	u10157
 14254  005092  0008               	tblrd		*
 14255  005094  50F5               	movf	tablat,w,c
 14256  005096  D005               	bra	u10150
 14257  005098                     u10157:
 14258  005098  CFF6 FFE9          	movff	tblptrl,fsr0l
 14259  00509C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14260  0050A0  50EF               	movf	indf0,w,c
 14261  0050A2                     u10150:
 14262  0050A2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14263  0050A4  5001               	movf	??_USBStdGetDscHandler,w,c
 14264  0050A6  0100               	movlb	0	; () banked
 14265  0050A8  6FCF               	movwf	(_inPipes+4)& (0+255),b
 14266  0050AA  6BD0               	clrf	(_inPipes+5)& (0+255),b
 14267                           
 14268                           ;usb_device.c: 2094: }
 14269  0050AC  0012               	return	
 14270  0050AE                     l275:
 14271                           
 14272                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 14273                           
 14274                           ; BSR set to: 0
 14275  0050AE  0E00               	movlw	0
 14276  0050B0  0100               	movlb	0	; () banked
 14277  0050B2  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14278                           
 14279                           ; BSR set to: 0
 14280                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 14281  0050B4  0012               	return	
 14282  0050B6                     
 14283                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 14284                           
 14285                           ; BSR set to: 0
 14286  0050B6  0E00               	movlw	0
 14287  0050B8  0100               	movlb	0	; () banked
 14288  0050BA  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;usb_device.c: 2112: }
 14292                           
 14293                           ;usb_device.c: 2111: break;
 14294  0050BC  0012               	return	
 14295  0050BE                     l268:
 14296                           
 14297                           ; BSR set to: 0
 14298                           
 14299                           ; BSR set to: 0
 14300  0050BE  010D               	movlb	13	; () banked
 14301  0050C0  5133               	movf	51,w,b	;volatile
 14302                           
 14303                           ; Switch size 1, requested type "space"
 14304                           ; Number of cases is 3, Range of values is 1 to 3
 14305                           ; switch strategies available:
 14306                           ; Name         Instructions Cycles
 14307                           ; simple_byte           10     6 (average)
 14308                           ;	Chosen strategy is simple_byte
 14309  0050C2  0A01               	xorlw	1	; case 1
 14310  0050C4  B4D8               	btfsc	status,2,c
 14311  0050C6  D773               	goto	l269
 14312  0050C8  0A03               	xorlw	3	; case 2
 14313  0050CA  B4D8               	btfsc	status,2,c
 14314  0050CC  D77A               	goto	l271
 14315  0050CE  0A01               	xorlw	1	; case 3
 14316  0050D0  B4D8               	btfsc	status,2,c
 14317  0050D2  D7C2               	goto	l274
 14318  0050D4  D7F0               	goto	l277
 14319  0050D6                     __end_of_USBStdGetDscHandler:
 14320                           	opt stack 0
 14321                           tblptru	equ	0xFF8
 14322                           tblptrh	equ	0xFF7
 14323                           tblptrl	equ	0xFF6
 14324                           tablat	equ	0xFF5
 14325                           prodh	equ	0xFF4
 14326                           prodl	equ	0xFF3
 14327                           intcon	equ	0xFF2
 14328                           intcon2	equ	0xFF1
 14329                           intcon3	equ	0xFF0
 14330                           indf0	equ	0xFEF
 14331                           postinc0	equ	0xFEE
 14332                           fsr0h	equ	0xFEA
 14333                           fsr0l	equ	0xFE9
 14334                           wreg	equ	0xFE8
 14335                           indf1	equ	0xFE7
 14336                           postdec1	equ	0xFE5
 14337                           plusw1	equ	0xFE3
 14338                           fsr1h	equ	0xFE2
 14339                           fsr1l	equ	0xFE1
 14340                           indf2	equ	0xFDF
 14341                           postinc2	equ	0xFDE
 14342                           postdec2	equ	0xFDD
 14343                           plusw2	equ	0xFDB
 14344                           fsr2h	equ	0xFDA
 14345                           fsr2l	equ	0xFD9
 14346                           status	equ	0xFD8
 14347                           
 14348 ;; *************** function _USBStdFeatureReqHandler *****************
 14349 ;; Defined at:
 14350 ;;		line 2756 in file "usb_device.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;		None
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;  p               2   27[COMRAM] PTR struct __BDT
 14355 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14356 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 14357 ;;		 -> UEP0(1), 
 14358 ;;  current_ep_d    1   26[COMRAM] struct .
 14359 ;; Return value:  Size  Location     Type
 14360 ;;                  1    wreg      void 
 14361 ;; Registers used:
 14362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14363 ;; Tracked objects:
 14364 ;;		On entry : 0/0
 14365 ;;		On exit  : 0/0
 14366 ;;		Unchanged: 0/0
 14367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14369 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14371 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14372 ;;Total ram usage:        6 bytes
 14373 ;; Hardware stack levels used:    1
 14374 ;; Hardware stack levels required when called:    4
 14375 ;; This function calls:
 14376 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14377 ;; This function is called by:
 14378 ;;		_USBCheckStdRequest
 14379 ;; This function uses a non-reentrant model
 14380 ;;
 14381                           
 14382                           	psect	text66
 14383  001B48                     __ptext66:
 14384                           	opt stack 0
 14385  001B48                     _USBStdFeatureReqHandler:
 14386                           	opt stack 22
 14387                           
 14388                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 14389                           
 14390                           ;incstack = 0
 14391  001B48  010D               	movlb	13	; () banked
 14392  001B4A  0532               	decf	50,w,b	;volatile
 14393  001B4C  A4D8               	btfss	status,2,c
 14394  001B4E  D011               	goto	l361
 14395                           
 14396                           ; BSR set to: 13
 14397  001B50  5130               	movf	48,w,b	;volatile
 14398  001B52  0B1F               	andlw	31
 14399  001B54  0900               	iorlw	0
 14400  001B56  A4D8               	btfss	status,2,c
 14401  001B58  D00C               	goto	l361
 14402                           
 14403                           ; BSR set to: 13
 14404                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 14405  001B5A  0100               	movlb	0	; () banked
 14406  001B5C  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 14407                           
 14408                           ; BSR set to: 0
 14409                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 14410  001B5E  0E03               	movlw	3
 14411  001B60  010D               	movlb	13	; () banked
 14412  001B62  1931               	xorwf	49,w,b	;volatile
 14413  001B64  A4D8               	btfss	status,2,c
 14414  001B66  D002               	goto	l360
 14415                           
 14416                           ; BSR set to: 13
 14417                           ;usb_device.c: 2806: RemoteWakeup = 1;
 14418  001B68  0E01               	movlw	1
 14419  001B6A  D001               	goto	L7
 14420  001B6C                     l360:
 14421                           
 14422                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 14423                           
 14424                           ; BSR set to: 0
 14425  001B6C  0E00               	movlw	0
 14426  001B6E                     L7:
 14427  001B6E  0100               	movlb	0	; () banked
 14428  001B70  6FF5               	movwf	_RemoteWakeup& (0+255),b
 14429  001B72                     l361:
 14430                           
 14431                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 14432                           
 14433                           ; BSR set to: 0
 14434  001B72  010D               	movlb	13	; () banked
 14435  001B74  5132               	movf	50,w,b	;volatile
 14436  001B76  A4D8               	btfss	status,2,c
 14437  001B78  0012               	return	
 14438                           
 14439                           ; BSR set to: 13
 14440  001B7A  5130               	movf	48,w,b	;volatile
 14441  001B7C  0B1F               	andlw	31
 14442  001B7E  0A02               	xorlw	2
 14443  001B80  A4D8               	btfss	status,2,c
 14444  001B82  0012               	return	
 14445                           
 14446                           ; BSR set to: 13
 14447  001B84  5134               	movf	52,w,b	;volatile
 14448  001B86  0B0F               	andlw	15
 14449  001B88  0900               	iorlw	0
 14450  001B8A  B4D8               	btfsc	status,2,c
 14451  001B8C  0012               	return	
 14452                           
 14453                           ; BSR set to: 13
 14454  001B8E  5134               	movf	52,w,b	;volatile
 14455  001B90  0B0F               	andlw	15
 14456  001B92  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14457  001B94  0E03               	movlw	3
 14458  001B96  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 14459  001B98  0012               	return	
 14460                           
 14461                           ; BSR set to: 13
 14462  001B9A  0E20               	movlw	32
 14463  001B9C  0100               	movlb	0	; () banked
 14464  001B9E  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 14465  001BA0  A4D8               	btfss	status,2,c
 14466  001BA2  0012               	return	
 14467                           
 14468                           ; BSR set to: 0
 14469                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 14470  001BA4  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 14471                           
 14472                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 14473  001BA6  010D               	movlb	13	; () banked
 14474  001BA8  BF34               	btfsc	52,7,b	;volatile
 14475  001BAA  D019               	goto	l363
 14476                           
 14477                           ; BSR set to: 13
 14478                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14479  001BAC  5134               	movf	52,w,b	;volatile
 14480  001BAE  0B0F               	andlw	15
 14481  001BB0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14482  001BB2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14483  001BB4  0D02               	mullw	2
 14484  001BB6  0E40               	movlw	low _pBDTEntryOut
 14485  001BB8  24F3               	addwf	prodl,w,c
 14486  001BBA  6ED9               	movwf	fsr2l,c
 14487  001BBC  0E01               	movlw	high _pBDTEntryOut
 14488  001BBE  20F4               	addwfc	prodh,w,c
 14489  001BC0  6EDA               	movwf	fsr2h,c
 14490  001BC2  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14491  001BC6  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14492                           
 14493                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 14494  001BCA  5134               	movf	52,w,b	;volatile
 14495  001BCC  0B0F               	andlw	15
 14496  001BCE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14497  001BD0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14498  001BD2  0D01               	mullw	1
 14499  001BD4  0E6C               	movlw	low _ep_data_out
 14500  001BD6  24F3               	addwf	prodl,w,c
 14501  001BD8  6ED9               	movwf	fsr2l,c
 14502  001BDA  0E01               	movlw	high _ep_data_out
 14503  001BDC  D018               	goto	L8
 14504  001BDE                     l363:
 14505                           
 14506                           ; BSR set to: 13
 14507                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14508                           
 14509                           ; BSR set to: 13
 14510  001BDE  5134               	movf	52,w,b	;volatile
 14511  001BE0  0B0F               	andlw	15
 14512  001BE2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14513  001BE4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14514  001BE6  0D02               	mullw	2
 14515  001BE8  0ED1               	movlw	low _pBDTEntryIn
 14516  001BEA  24F3               	addwf	prodl,w,c
 14517  001BEC  6ED9               	movwf	fsr2l,c
 14518  001BEE  0E00               	movlw	high _pBDTEntryIn
 14519  001BF0  20F4               	addwfc	prodh,w,c
 14520  001BF2  6EDA               	movwf	fsr2h,c
 14521  001BF4  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14522  001BF8  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14523                           
 14524                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 14525  001BFC  5134               	movf	52,w,b	;volatile
 14526  001BFE  0B0F               	andlw	15
 14527  001C00  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14528  001C02  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14529  001C04  0D01               	mullw	1
 14530  001C06  0E6F               	movlw	low _ep_data_in
 14531  001C08  24F3               	addwf	prodl,w,c
 14532  001C0A  6ED9               	movwf	fsr2l,c
 14533  001C0C  0E01               	movlw	high _ep_data_in
 14534  001C0E                     L8:
 14535  001C0E  20F4               	addwfc	prodh,w,c
 14536  001C10  6EDA               	movwf	fsr2h,c
 14537  001C12  50DF               	movf	indf2,w,c
 14538  001C14  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 14539                           
 14540                           ; BSR set to: 13
 14541                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 14542                           
 14543                           ; BSR set to: 13
 14544  001C16  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14545  001C18  D006               	goto	l365
 14546                           
 14547                           ; BSR set to: 13
 14548                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 14549  001C1A  0EFB               	movlw	251
 14550  001C1C  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 14551  001C1E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14552  001C20  0EFF               	movlw	255
 14553  001C22  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 14554  001C24  D004               	goto	L9
 14555  001C26                     l365:
 14556                           
 14557                           ; BSR set to: 13
 14558                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 14559                           
 14560                           ; BSR set to: 13
 14561  001C26  0E04               	movlw	4
 14562  001C28  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 14563  001C2A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14564  001C2C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14565  001C2E                     L9:
 14566  001C2E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14567                           
 14568                           ; BSR set to: 13
 14569                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 14570                           
 14571                           ; BSR set to: 13
 14572  001C30  BF34               	btfsc	52,7,b	;volatile
 14573  001C32  D00A               	goto	l367
 14574                           
 14575                           ; BSR set to: 13
 14576                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 14577  001C34  5134               	movf	52,w,b	;volatile
 14578  001C36  0B0F               	andlw	15
 14579  001C38  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14580  001C3A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14581  001C3C  0D02               	mullw	2
 14582  001C3E  0E40               	movlw	low _pBDTEntryOut
 14583  001C40  24F3               	addwf	prodl,w,c
 14584  001C42  6ED9               	movwf	fsr2l,c
 14585  001C44  0E01               	movlw	high _pBDTEntryOut
 14586  001C46  D009               	goto	L10
 14587  001C48                     l367:
 14588                           
 14589                           ; BSR set to: 13
 14590                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 14591                           
 14592                           ; BSR set to: 13
 14593  001C48  5134               	movf	52,w,b	;volatile
 14594  001C4A  0B0F               	andlw	15
 14595  001C4C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14596  001C4E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14597  001C50  0D02               	mullw	2
 14598  001C52  0ED1               	movlw	low _pBDTEntryIn
 14599  001C54  24F3               	addwf	prodl,w,c
 14600  001C56  6ED9               	movwf	fsr2l,c
 14601  001C58  0E00               	movlw	high _pBDTEntryIn
 14602  001C5A                     L10:
 14603  001C5A  20F4               	addwfc	prodh,w,c
 14604  001C5C  6EDA               	movwf	fsr2h,c
 14605  001C5E  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14606  001C62  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14607                           
 14608                           ; BSR set to: 13
 14609                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 14610                           
 14611                           ; BSR set to: 13
 14612  001C66  0E03               	movlw	3
 14613  001C68  1931               	xorwf	49,w,b	;volatile
 14614  001C6A  A4D8               	btfss	status,2,c
 14615  001C6C  D02D               	goto	l369
 14616                           
 14617                           ; BSR set to: 13
 14618                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 14619  001C6E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14620  001C72  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14621  001C76  AEDF               	btfss	indf2,7,c
 14622  001C78  D01A               	goto	l372
 14623                           
 14624                           ; BSR set to: 13
 14625                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 14626  001C7A  BF34               	btfsc	52,7,b	;volatile
 14627  001C7C  D00A               	goto	l371
 14628                           
 14629                           ; BSR set to: 13
 14630                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 14631  001C7E  5134               	movf	52,w,b	;volatile
 14632  001C80  0B0F               	andlw	15
 14633  001C82  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14634  001C84  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14635  001C86  0D01               	mullw	1
 14636  001C88  0E6C               	movlw	low _ep_data_out
 14637  001C8A  24F3               	addwf	prodl,w,c
 14638  001C8C  6ED9               	movwf	fsr2l,c
 14639  001C8E  0E01               	movlw	high _ep_data_out
 14640  001C90  D00A               	goto	L11
 14641  001C92                     l371:
 14642                           
 14643                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 14644                           
 14645                           ; BSR set to: 1
 14646  001C92  010D               	movlb	13	; () banked
 14647  001C94  5134               	movf	52,w,b	;volatile
 14648  001C96  0B0F               	andlw	15
 14649  001C98  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14650  001C9A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14651  001C9C  0D01               	mullw	1
 14652  001C9E  0E6F               	movlw	low _ep_data_in
 14653  001CA0  24F3               	addwf	prodl,w,c
 14654  001CA2  6ED9               	movwf	fsr2l,c
 14655  001CA4  0E01               	movlw	high _ep_data_in
 14656  001CA6                     L11:
 14657  001CA6  20F4               	addwfc	prodh,w,c
 14658  001CA8  6EDA               	movwf	fsr2h,c
 14659  001CAA  0101               	movlb	1	; () banked
 14660  001CAC  82DF               	bsf	indf2,1,c
 14661  001CAE                     l372:
 14662                           
 14663                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 14664                           
 14665                           ; BSR set to: 1
 14666                           
 14667                           ; BSR set to: 1
 14668  001CAE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14669  001CB2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14670  001CB6  0E00               	movlw	0
 14671  001CB8  84DB               	bsf	plusw2,2,c
 14672                           
 14673                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 14674  001CBA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14675  001CBE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14676  001CC2  0E00               	movlw	0
 14677  001CC4  8EDB               	bsf	plusw2,7,c
 14678                           
 14679                           ;usb_device.c: 2878: }
 14680  001CC6  0012               	return	
 14681  001CC8                     l369:
 14682                           
 14683                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 14684  001CC8  0E04               	movlw	4
 14685  001CCA  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14686  001CCC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14687  001CCE  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14688  001CD0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14689                           
 14690                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 14691  001CD2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14692  001CD6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14693  001CDA  AEDF               	btfss	indf2,7,c
 14694  001CDC  D01B               	goto	l374
 14695                           
 14696                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 14697  001CDE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14698  001CE2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14699  001CE6  0E7F               	movlw	127
 14700  001CE8  16DF               	andwf	indf2,f,c
 14701                           
 14702                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 14703  001CEA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14704  001CEE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14705  001CF2  0E00               	movlw	0
 14706  001CF4  8CDB               	bsf	plusw2,6,c
 14707                           
 14708                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14709  001CF6  0E00               	movlw	0
 14710  001CF8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14711  001CFA  0E05               	movlw	5
 14712  001CFC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14713  001CFE  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14714  001D02  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14715  001D06  0E00               	movlw	0
 14716  001D08  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14717  001D0A  0E02               	movlw	2
 14718  001D0C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14719  001D0E  EC5A  F040         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14720                           
 14721                           ;usb_device.c: 2893: }
 14722  001D12  D006               	goto	l375
 14723  001D14                     l374:
 14724                           
 14725                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 14726  001D14  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14727  001D18  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14728  001D1C  0E00               	movlw	0
 14729  001D1E  8CDB               	bsf	plusw2,6,c
 14730  001D20                     l375:
 14731                           
 14732                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 14733  001D20  0E04               	movlw	4
 14734  001D22  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14735  001D24  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14736  001D26  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14737  001D28  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14738                           
 14739                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14740  001D2A  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14741  001D2C  D006               	goto	u10370
 14742  001D2E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14743  001D32  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14744  001D36  AEDF               	btfss	indf2,7,c
 14745  001D38  D030               	goto	l376
 14746  001D3A                     u10370:
 14747                           
 14748                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 14749  001D3A  010D               	movlb	13	; () banked
 14750  001D3C  BF34               	btfsc	52,7,b	;volatile
 14751  001D3E  D00A               	goto	l379
 14752                           
 14753                           ; BSR set to: 13
 14754                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 14755  001D40  5134               	movf	52,w,b	;volatile
 14756  001D42  0B0F               	andlw	15
 14757  001D44  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14758  001D46  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14759  001D48  0D01               	mullw	1
 14760  001D4A  0E6C               	movlw	low _ep_data_out
 14761  001D4C  24F3               	addwf	prodl,w,c
 14762  001D4E  6ED9               	movwf	fsr2l,c
 14763  001D50  0E01               	movlw	high _ep_data_out
 14764  001D52  D00A               	goto	L12
 14765  001D54                     l379:
 14766                           
 14767                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 14768                           
 14769                           ; BSR set to: 1
 14770  001D54  010D               	movlb	13	; () banked
 14771  001D56  5134               	movf	52,w,b	;volatile
 14772  001D58  0B0F               	andlw	15
 14773  001D5A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14774  001D5C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14775  001D5E  0D01               	mullw	1
 14776  001D60  0E6F               	movlw	low _ep_data_in
 14777  001D62  24F3               	addwf	prodl,w,c
 14778  001D64  6ED9               	movwf	fsr2l,c
 14779  001D66  0E01               	movlw	high _ep_data_in
 14780  001D68                     L12:
 14781  001D68  20F4               	addwfc	prodh,w,c
 14782  001D6A  6EDA               	movwf	fsr2h,c
 14783  001D6C  0101               	movlb	1	; () banked
 14784  001D6E  92DF               	bcf	indf2,1,c
 14785                           
 14786                           ; BSR set to: 1
 14787                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 14788                           
 14789                           ; BSR set to: 1
 14790  001D70  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14791  001D74  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14792  001D78  0E3B               	movlw	59
 14793  001D7A  16DF               	andwf	indf2,f,c
 14794                           
 14795                           ; BSR set to: 1
 14796                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14797  001D7C  0E00               	movlw	0
 14798  001D7E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14799  001D80  0E05               	movlw	5
 14800  001D82  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14801  001D84  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14802  001D88  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14803  001D8C  0E00               	movlw	0
 14804  001D8E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14805  001D90  0E02               	movlw	2
 14806  001D92  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14807  001D94  EC5A  F040         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14808                           
 14809                           ;usb_device.c: 2923: }
 14810  001D98  D006               	goto	l381
 14811  001D9A                     l376:
 14812                           
 14813                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 14814  001D9A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14815  001D9E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14816  001DA2  0E3B               	movlw	59
 14817  001DA4  16DF               	andwf	indf2,f,c
 14818  001DA6                     l381:
 14819                           
 14820                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 14821  001DA6  010D               	movlb	13	; () banked
 14822  001DA8  5134               	movf	52,w,b	;volatile
 14823  001DAA  0B0F               	andlw	15
 14824  001DAC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14825  001DAE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14826  001DB0  0D01               	mullw	1
 14827  001DB2  0E26               	movlw	38
 14828  001DB4  24F3               	addwf	prodl,w,c
 14829  001DB6  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 14830  001DB8  0E0F               	movlw	15
 14831  001DBA  20F4               	addwfc	prodh,w,c
 14832  001DBC  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 14833                           
 14834                           ; BSR set to: 13
 14835                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 14836  001DBE  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 14837  001DC2  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 14838  001DC6  0EFE               	movlw	254
 14839  001DC8  16DF               	andwf	indf2,f,c
 14840                           
 14841                           ; BSR set to: 13
 14842  001DCA  0012               	return	
 14843  001DCC                     __end_of_USBStdFeatureReqHandler:
 14844                           	opt stack 0
 14845                           tblptru	equ	0xFF8
 14846                           tblptrh	equ	0xFF7
 14847                           tblptrl	equ	0xFF6
 14848                           tablat	equ	0xFF5
 14849                           prodh	equ	0xFF4
 14850                           prodl	equ	0xFF3
 14851                           intcon	equ	0xFF2
 14852                           intcon2	equ	0xFF1
 14853                           intcon3	equ	0xFF0
 14854                           indf0	equ	0xFEF
 14855                           postinc0	equ	0xFEE
 14856                           fsr0h	equ	0xFEA
 14857                           fsr0l	equ	0xFE9
 14858                           wreg	equ	0xFE8
 14859                           indf1	equ	0xFE7
 14860                           postdec1	equ	0xFE5
 14861                           plusw1	equ	0xFE3
 14862                           fsr1h	equ	0xFE2
 14863                           fsr1l	equ	0xFE1
 14864                           indf2	equ	0xFDF
 14865                           postinc2	equ	0xFDE
 14866                           postdec2	equ	0xFDD
 14867                           plusw2	equ	0xFDB
 14868                           fsr2h	equ	0xFDA
 14869                           fsr2l	equ	0xFD9
 14870                           status	equ	0xFD8
 14871                           
 14872 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 14873 ;; Defined at:
 14874 ;;		line 54 in file "usb_events.c"
 14875 ;; Parameters:    Size  Location     Type
 14876 ;;  event           2   15[COMRAM] enum E6832
 14877 ;;  pdata           2   17[COMRAM] PTR void 
 14878 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 14879 ;;		 -> BDT(48), 
 14880 ;;  size            2   19[COMRAM] unsigned int 
 14881 ;; Auto vars:     Size  Location     Type
 14882 ;;		None
 14883 ;; Return value:  Size  Location     Type
 14884 ;;                  1    wreg      unsigned char 
 14885 ;; Registers used:
 14886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14887 ;; Tracked objects:
 14888 ;;		On entry : 0/0
 14889 ;;		On exit  : 0/0
 14890 ;;		Unchanged: 0/0
 14891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14892 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14895 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14896 ;;Total ram usage:        8 bytes
 14897 ;; Hardware stack levels used:    1
 14898 ;; Hardware stack levels required when called:    3
 14899 ;; This function calls:
 14900 ;;		_APP_DeviceCustomHIDInitialize
 14901 ;;		_APP_DeviceMSDInitialize
 14902 ;;		_MSDTransferTerminated
 14903 ;;		_SYSTEM_Initialize
 14904 ;;		_USBCheckHIDRequest
 14905 ;;		_USBCheckMSDRequest
 14906 ;; This function is called by:
 14907 ;;		_USBDeviceTasks
 14908 ;;		_USBStdSetCfgHandler
 14909 ;;		_USBSuspend
 14910 ;;		_USBWakeFromSuspend
 14911 ;;		_USBCtrlTrfSetupHandler
 14912 ;;		_USBCheckStdRequest
 14913 ;;		_USBStdFeatureReqHandler
 14914 ;; This function uses a non-reentrant model
 14915 ;;
 14916                           
 14917                           	psect	text67
 14918  0080B4                     __ptext67:
 14919                           	opt stack 0
 14920  0080B4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 14921                           	opt stack 26
 14922                           
 14923                           ;usb_events.c: 56: switch((int)event)
 14924                           
 14925                           ;incstack = 0
 14926  0080B4  D019               	goto	l800
 14927  0080B6                     
 14928                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 14929  0080B6  0E01               	movlw	1
 14930  0080B8  EC4C  F047         	call	_SYSTEM_Initialize
 14931                           
 14932                           ;usb_events.c: 79: break;
 14933  0080BC  0012               	return	
 14934  0080BE                     
 14935                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 14936  0080BE  0E02               	movlw	2
 14937  0080C0  EC4C  F047         	call	_SYSTEM_Initialize
 14938                           
 14939                           ;usb_events.c: 90: break;
 14940  0080C4  0012               	return	
 14941  0080C6                     
 14942                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 14943  0080C6  EC81  F04A         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 14944                           
 14945                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 14946  0080CA  EC15  F04E         	call	_APP_DeviceMSDInitialize	;wreg free
 14947                           
 14948                           ;usb_events.c: 100: break;
 14949                           
 14950                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 14951                           
 14952                           ;usb_events.c: 97: break;
 14953  0080CE  0012               	return	
 14954  0080D0                     
 14955                           ;usb_events.c: 105: USBCheckHIDRequest();
 14956  0080D0  EC86  F032         	call	_USBCheckHIDRequest	;wreg free
 14957                           
 14958                           ;usb_events.c: 108: USBCheckMSDRequest();
 14959  0080D4  EC93  F037         	call	_USBCheckMSDRequest	;wreg free
 14960                           
 14961                           ;usb_events.c: 112: break;
 14962                           
 14963                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 14964                           
 14965                           ;usb_events.c: 109: break;
 14966  0080D8  0012               	return	
 14967  0080DA                     
 14968                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 14969  0080DA  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 14970  0080DE  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 14971  0080E2  EC1F  F046         	call	_MSDTransferTerminated	;wreg free
 14972                           
 14973                           ;usb_events.c: 129: }
 14974                           
 14975                           ;usb_events.c: 128: break;
 14976                           
 14977                           ;usb_events.c: 127: default:
 14978                           
 14979                           ;usb_events.c: 125: break;
 14980  0080E6  0012               	return	
 14981  0080E8                     l800:
 14982  0080E8  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 14983  0080EC  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 14984                           
 14985                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14986                           ; Switch size 1, requested type "space"
 14987                           ; Number of cases is 2, Range of values is 0 to 127
 14988                           ; switch strategies available:
 14989                           ; Name         Instructions Cycles
 14990                           ; simple_byte            7     4 (average)
 14991                           ;	Chosen strategy is simple_byte
 14992  0080F0  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 14993  0080F2  0A00               	xorlw	0	; case 0
 14994  0080F4  B4D8               	btfsc	status,2,c
 14995  0080F6  D004               	goto	l16856
 14996  0080F8  0A7F               	xorlw	127	; case 127
 14997  0080FA  A4D8               	btfss	status,2,c
 14998  0080FC  0012               	return	
 14999  0080FE  D01A               	goto	l16858
 15000  008100                     l16856:
 15001                           
 15002                           ; Switch size 1, requested type "space"
 15003                           ; Number of cases is 8, Range of values is 1 to 117
 15004                           ; switch strategies available:
 15005                           ; Name         Instructions Cycles
 15006                           ; simple_byte           25    13 (average)
 15007                           ;	Chosen strategy is simple_byte
 15008  008100  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15009  008102  0A01               	xorlw	1	; case 1
 15010  008104  B4D8               	btfsc	status,2,c
 15011  008106  D7DF               	goto	l806
 15012  008108  0A03               	xorlw	3	; case 2
 15013  00810A  B4D8               	btfsc	status,2,c
 15014  00810C  0012               	return	
 15015  00810E  0A01               	xorlw	1	; case 3
 15016  008110  B4D8               	btfsc	status,2,c
 15017  008112  D7DE               	goto	l808
 15018  008114  0A06               	xorlw	6	; case 5
 15019  008116  B4D8               	btfsc	status,2,c
 15020  008118  D7E0               	goto	l810
 15021  00811A  0A77               	xorlw	119	; case 114
 15022  00811C  B4D8               	btfsc	status,2,c
 15023  00811E  0012               	return	
 15024  008120  0A01               	xorlw	1	; case 115
 15025  008122  B4D8               	btfsc	status,2,c
 15026  008124  0012               	return	
 15027  008126  0A07               	xorlw	7	; case 116
 15028  008128  B4D8               	btfsc	status,2,c
 15029  00812A  D7C9               	goto	l805
 15030  00812C  0A01               	xorlw	1	; case 117
 15031  00812E  A4D8               	btfss	status,2,c
 15032  008130  0012               	return	
 15033  008132  D7C1               	goto	l804
 15034  008134                     l16858:
 15035                           
 15036                           ; Switch size 1, requested type "space"
 15037                           ; Number of cases is 1, Range of values is 255 to 255
 15038                           ; switch strategies available:
 15039                           ; Name         Instructions Cycles
 15040                           ; simple_byte            4     3 (average)
 15041                           ;	Chosen strategy is simple_byte
 15042  008134  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15043  008136  0AFF               	xorlw	255	; case 255
 15044  008138  0012               	return	
 15045  00813A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 15046                           	opt stack 0
 15047                           tblptru	equ	0xFF8
 15048                           tblptrh	equ	0xFF7
 15049                           tblptrl	equ	0xFF6
 15050                           tablat	equ	0xFF5
 15051                           prodh	equ	0xFF4
 15052                           prodl	equ	0xFF3
 15053                           intcon	equ	0xFF2
 15054                           intcon2	equ	0xFF1
 15055                           intcon3	equ	0xFF0
 15056                           indf0	equ	0xFEF
 15057                           postinc0	equ	0xFEE
 15058                           fsr0h	equ	0xFEA
 15059                           fsr0l	equ	0xFE9
 15060                           wreg	equ	0xFE8
 15061                           indf1	equ	0xFE7
 15062                           postdec1	equ	0xFE5
 15063                           plusw1	equ	0xFE3
 15064                           fsr1h	equ	0xFE2
 15065                           fsr1l	equ	0xFE1
 15066                           indf2	equ	0xFDF
 15067                           postinc2	equ	0xFDE
 15068                           postdec2	equ	0xFDD
 15069                           plusw2	equ	0xFDB
 15070                           fsr2h	equ	0xFDA
 15071                           fsr2l	equ	0xFD9
 15072                           status	equ	0xFD8
 15073                           
 15074 ;; *************** function _USBCheckMSDRequest *****************
 15075 ;; Defined at:
 15076 ;;		line 218 in file "usb_device_msd.c"
 15077 ;; Parameters:    Size  Location     Type
 15078 ;;		None
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;		None
 15081 ;; Return value:  Size  Location     Type
 15082 ;;                  1    wreg      void 
 15083 ;; Registers used:
 15084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15085 ;; Tracked objects:
 15086 ;;		On entry : 0/0
 15087 ;;		On exit  : 0/0
 15088 ;;		Unchanged: 0/0
 15089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15091 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15093 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15094 ;;Total ram usage:        4 bytes
 15095 ;; Hardware stack levels used:    1
 15096 ;; Hardware stack levels required when called:    1
 15097 ;; This function calls:
 15098 ;;		_USBTransferOnePacket
 15099 ;; This function is called by:
 15100 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15101 ;; This function uses a non-reentrant model
 15102 ;;
 15103                           
 15104                           	psect	text68
 15105  006F26                     __ptext68:
 15106                           	opt stack 0
 15107  006F26                     _USBCheckMSDRequest:
 15108                           	opt stack 27
 15109                           
 15110                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 15111                           
 15112                           ;incstack = 0
 15113  006F26  010D               	movlb	13	; () banked
 15114  006F28  5130               	movf	48,w,b	;volatile
 15115  006F2A  0B1F               	andlw	31
 15116  006F2C  06E8               	decf	wreg,f,c
 15117  006F2E  A4D8               	btfss	status,2,c
 15118  006F30  0012               	return	
 15119                           
 15120                           ; BSR set to: 13
 15121                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 15122                           
 15123                           ; BSR set to: 13
 15124                           
 15125                           ; BSR set to: 13
 15126                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 15127  006F32  5134               	movf	52,w,b	;volatile
 15128  006F34  A4D8               	btfss	status,2,c
 15129  006F36  0012               	return	
 15130  006F38  D04F               	goto	l529
 15131  006F3A                     
 15132                           ; BSR set to: 13
 15133                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 15134                           
 15135                           ; BSR set to: 13
 15136  006F3A  5132               	movf	50,w,b	;volatile
 15137  006F3C  1133               	iorwf	51,w,b	;volatile
 15138  006F3E  A4D8               	btfss	status,2,c
 15139  006F40  0012               	return	
 15140                           
 15141                           ; BSR set to: 13
 15142  006F42  5136               	movf	54,w,b	;volatile
 15143  006F44  1137               	iorwf	55,w,b	;volatile
 15144  006F46  A4D8               	btfss	status,2,c
 15145  006F48  0012               	return	
 15146                           
 15147                           ; BSR set to: 13
 15148                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 15149                           
 15150                           ; BSR set to: 13
 15151                           
 15152                           ; BSR set to: 13
 15153                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 15154  006F4A  0E00               	movlw	0
 15155  006F4C  0100               	movlb	0	; () banked
 15156  006F4E  6FED               	movwf	_MSD_State& (0+255),b
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 15160  006F50  69EC               	setf	_MSDCommandState& (0+255),b
 15161                           
 15162                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 15163  006F52  0E00               	movlw	0
 15164  006F54  6FEB               	movwf	_MSDReadState& (0+255),b
 15165                           
 15166                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 15167  006F56  0E00               	movlw	0
 15168  006F58  6FEA               	movwf	_MSDWriteState& (0+255),b
 15169                           
 15170                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 15171  006F5A  0E01               	movlw	1
 15172  006F5C  0101               	movlb	1	; () banked
 15173  006F5E  6F8E               	movwf	_MSDCBWValid& (0+255),b
 15174                           
 15175                           ; BSR set to: 1
 15176                           
 15177                           ; BSR set to: 1
 15178                           
 15179                           ; BSR set to: 1
 15180                           
 15181                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 15182  006F60  C144  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 15183  006F64  C145  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 15184                           
 15185                           ; BSR set to: 1
 15186  006F68  500C               	movf	_USBCheckMSDRequest$2319,w,c
 15187  006F6A  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 15188  006F6C  B4D8               	btfsc	status,2,c
 15189  006F6E  D00A               	goto	u8150
 15190                           
 15191                           ; BSR set to: 1
 15192                           
 15193                           ; BSR set to: 1
 15194                           
 15195                           ; BSR set to: 1
 15196                           
 15197                           ; BSR set to: 1
 15198  006F70  C144  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 15199  006F74  C145  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 15200                           
 15201                           ; BSR set to: 1
 15202                           
 15203                           ; BSR set to: 1
 15204  006F78  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 15205  006F7C  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 15206  006F80  BEDF               	btfsc	indf2,7,c
 15207  006F82  D00F               	goto	l534
 15208  006F84                     u8150:
 15209                           
 15210                           ; BSR set to: 1
 15211                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 15212                           
 15213                           ; BSR set to: 1
 15214  006F84  0E00               	movlw	0
 15215  006F86  6E01               	movwf	USBTransferOnePacket@dir,c
 15216  006F88  0E40               	movlw	64
 15217  006F8A  6E02               	movwf	USBTransferOnePacket@data,c
 15218  006F8C  0E0D               	movlw	13
 15219  006F8E  6E03               	movwf	USBTransferOnePacket@data+1,c
 15220  006F90  0E40               	movlw	64
 15221  006F92  6E04               	movwf	USBTransferOnePacket@len,c
 15222  006F94  0E02               	movlw	2
 15223  006F96  EC3B  F02D         	call	_USBTransferOnePacket
 15224  006F9A  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15225  006F9E  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15226  006FA2                     l534:
 15227                           
 15228                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 15229  006FA2  0E80               	movlw	128
 15230  006FA4  0100               	movlb	0	; () banked
 15231  006FA6  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15232                           
 15233                           ;usb_device_msd.c: 263: break;
 15234  006FA8  0012               	return	
 15235  006FAA                     
 15236                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 15237                           
 15238                           ; BSR set to: 0
 15239  006FAA  010D               	movlb	13	; () banked
 15240  006FAC  5132               	movf	50,w,b	;volatile
 15241  006FAE  1133               	iorwf	51,w,b	;volatile
 15242  006FB0  A4D8               	btfss	status,2,c
 15243  006FB2  0012               	return	
 15244                           
 15245                           ; BSR set to: 13
 15246  006FB4  0536               	decf	54,w,b	;volatile
 15247  006FB6  1137               	iorwf	55,w,b	;volatile
 15248  006FB8  A4D8               	btfss	status,2,c
 15249  006FBA  0012               	return	
 15250                           
 15251                           ; BSR set to: 13
 15252                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 15253                           
 15254                           ; BSR set to: 13
 15255                           
 15256                           ; BSR set to: 13
 15257                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 15258  006FBC  0E00               	movlw	0
 15259  006FBE  6F38               	movwf	56,b	;volatile
 15260                           
 15261                           ; BSR set to: 13
 15262                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15263  006FC0  0E38               	movlw	56
 15264  006FC2  0100               	movlb	0	; () banked
 15265  006FC4  6FCB               	movwf	_inPipes& (0+255),b
 15266  006FC6  0E0D               	movlw	13
 15267  006FC8  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15268                           
 15269                           ; BSR set to: 0
 15270  006FCA  0E00               	movlw	0
 15271  006FCC  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15272  006FCE  0E01               	movlw	1
 15273  006FD0  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15274                           
 15275                           ; BSR set to: 0
 15276  006FD2  0EC1               	movlw	193
 15277  006FD4  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15278                           
 15279                           ; BSR set to: 0
 15280                           ;usb_device_msd.c: 278: }
 15281                           
 15282                           ;usb_device_msd.c: 277: break;
 15283  006FD6  0012               	return	
 15284  006FD8                     l529:
 15285                           
 15286                           ; BSR set to: 0
 15287  006FD8  010D               	movlb	13	; () banked
 15288  006FDA  5131               	movf	49,w,b	;volatile
 15289                           
 15290                           ; Switch size 1, requested type "space"
 15291                           ; Number of cases is 2, Range of values is 254 to 255
 15292                           ; switch strategies available:
 15293                           ; Name         Instructions Cycles
 15294                           ; simple_byte            7     4 (average)
 15295                           ;	Chosen strategy is simple_byte
 15296  006FDC  0AFE               	xorlw	254	; case 254
 15297  006FDE  B4D8               	btfsc	status,2,c
 15298  006FE0  D7E4               	goto	l546
 15299  006FE2  0A01               	xorlw	1	; case 255
 15300  006FE4  A4D8               	btfss	status,2,c
 15301  006FE6  0012               	return	
 15302  006FE8  D7A8               	goto	l530
 15303  006FEA                     __end_of_USBCheckMSDRequest:
 15304                           	opt stack 0
 15305                           tblptru	equ	0xFF8
 15306                           tblptrh	equ	0xFF7
 15307                           tblptrl	equ	0xFF6
 15308                           tablat	equ	0xFF5
 15309                           prodh	equ	0xFF4
 15310                           prodl	equ	0xFF3
 15311                           intcon	equ	0xFF2
 15312                           intcon2	equ	0xFF1
 15313                           intcon3	equ	0xFF0
 15314                           indf0	equ	0xFEF
 15315                           postinc0	equ	0xFEE
 15316                           fsr0h	equ	0xFEA
 15317                           fsr0l	equ	0xFE9
 15318                           wreg	equ	0xFE8
 15319                           indf1	equ	0xFE7
 15320                           postdec1	equ	0xFE5
 15321                           plusw1	equ	0xFE3
 15322                           fsr1h	equ	0xFE2
 15323                           fsr1l	equ	0xFE1
 15324                           indf2	equ	0xFDF
 15325                           postinc2	equ	0xFDE
 15326                           postdec2	equ	0xFDD
 15327                           plusw2	equ	0xFDB
 15328                           fsr2h	equ	0xFDA
 15329                           fsr2l	equ	0xFD9
 15330                           status	equ	0xFD8
 15331                           
 15332 ;; *************** function _USBCheckHIDRequest *****************
 15333 ;; Defined at:
 15334 ;;		line 153 in file "usb_device_hid.c"
 15335 ;; Parameters:    Size  Location     Type
 15336 ;;		None
 15337 ;; Auto vars:     Size  Location     Type
 15338 ;;		None
 15339 ;; Return value:  Size  Location     Type
 15340 ;;                  1    wreg      void 
 15341 ;; Registers used:
 15342 ;;		wreg, status,2, status,0
 15343 ;; Tracked objects:
 15344 ;;		On entry : 0/0
 15345 ;;		On exit  : 0/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15352 ;;Total ram usage:        0 bytes
 15353 ;; Hardware stack levels used:    1
 15354 ;; This function calls:
 15355 ;;		Nothing
 15356 ;; This function is called by:
 15357 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15358 ;; This function uses a non-reentrant model
 15359 ;;
 15360                           
 15361                           	psect	text69
 15362  00650C                     __ptext69:
 15363                           	opt stack 0
 15364  00650C                     _USBCheckHIDRequest:
 15365                           	opt stack 28
 15366                           
 15367                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 15368                           
 15369                           ;incstack = 0
 15370  00650C  010D               	movlb	13	; () banked
 15371  00650E  5130               	movf	48,w,b	;volatile
 15372  006510  0B1F               	andlw	31
 15373  006512  06E8               	decf	wreg,f,c
 15374  006514  A4D8               	btfss	status,2,c
 15375  006516  0012               	return	
 15376                           
 15377                           ; BSR set to: 13
 15378                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 15379                           
 15380                           ; BSR set to: 13
 15381                           
 15382                           ; BSR set to: 13
 15383  006518  5134               	movf	52,w,b	;volatile
 15384  00651A  A4D8               	btfss	status,2,c
 15385  00651C  0012               	return	
 15386                           
 15387                           ; BSR set to: 13
 15388                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 15389                           
 15390                           ; BSR set to: 13
 15391                           
 15392                           ; BSR set to: 13
 15393  00651E  0E06               	movlw	6
 15394  006520  1931               	xorwf	49,w,b	;volatile
 15395  006522  B4D8               	btfsc	status,2,c
 15396  006524  D01A               	goto	l411
 15397  006526  D022               	goto	l414
 15398  006528                     
 15399                           ; BSR set to: 13
 15400                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 15401                           
 15402                           ; BSR set to: 13
 15403  006528  0100               	movlb	0	; () banked
 15404  00652A  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 15405  00652C  A4D8               	btfss	status,2,c
 15406  00652E  D01E               	goto	l414
 15407                           
 15408                           ; BSR set to: 0
 15409                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 15410  006530  0EB9               	movlw	low (_configDescriptor1+18)
 15411  006532  6FCB               	movwf	_inPipes& (0+255),b
 15412  006534  0EBE               	movlw	high (_configDescriptor1+18)
 15413  006536  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15414                           
 15415                           ; BSR set to: 0
 15416  006538  0E00               	movlw	0
 15417  00653A  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15418  00653C  0E09               	movlw	9
 15419  00653E  D00B               	goto	L13
 15420  006540                     l11338:
 15421                           
 15422                           ; BSR set to: 0
 15423  006540  0EC0               	movlw	192
 15424  006542  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15425                           
 15426                           ; BSR set to: 0
 15427                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 15428  006544  D013               	goto	l414
 15429  006546                     
 15430                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 15431                           
 15432                           ; BSR set to: 0
 15433  006546  0E6D               	movlw	low _hid_rpt01
 15434  006548  0100               	movlb	0	; () banked
 15435  00654A  6FCB               	movwf	_inPipes& (0+255),b
 15436  00654C  0EBF               	movlw	high _hid_rpt01
 15437  00654E  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15438                           
 15439                           ; BSR set to: 0
 15440  006550  0E00               	movlw	0
 15441  006552  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15442  006554  0E1D               	movlw	29
 15443  006556                     L13:
 15444  006556  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15445  006558  D7F3               	goto	l11338
 15446  00655A                     l411:
 15447                           
 15448                           ; BSR set to: 0
 15449  00655A  010D               	movlb	13	; () banked
 15450  00655C  5133               	movf	51,w,b	;volatile
 15451                           
 15452                           ; Switch size 1, requested type "space"
 15453                           ; Number of cases is 3, Range of values is 33 to 35
 15454                           ; switch strategies available:
 15455                           ; Name         Instructions Cycles
 15456                           ; simple_byte           10     6 (average)
 15457                           ;	Chosen strategy is simple_byte
 15458  00655E  0A21               	xorlw	33	; case 33
 15459  006560  B4D8               	btfsc	status,2,c
 15460  006562  D7E2               	goto	l412
 15461  006564  0A03               	xorlw	3	; case 34
 15462  006566  B4D8               	btfsc	status,2,c
 15463  006568  D7EE               	goto	l415
 15464  00656A  0A01               	xorlw	1	; case 35
 15465  00656C                     l414:
 15466                           
 15467                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 15468                           
 15469                           ; BSR set to: 13
 15470                           
 15471                           ; BSR set to: 13
 15472  00656C  010D               	movlb	13	; () banked
 15473  00656E  3930               	swapf	48,w,b	;volatile
 15474  006570  32E8               	rrcf	wreg,f,c
 15475  006572  0B03               	andlw	3
 15476  006574  06E8               	decf	wreg,f,c
 15477  006576  A4D8               	btfss	status,2,c
 15478  006578  0012               	return	
 15479  00657A  D024               	goto	l418
 15480  00657C                     
 15481                           ; BSR set to: 13
 15482                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15483                           
 15484                           ; BSR set to: 13
 15485  00657C  0EB2               	movlw	low _idle_rate
 15486  00657E  0100               	movlb	0	; () banked
 15487  006580  6FCB               	movwf	_inPipes& (0+255),b
 15488  006582  0E01               	movlw	high _idle_rate
 15489  006584  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15490                           
 15491                           ; BSR set to: 0
 15492  006586  0E00               	movlw	0
 15493  006588  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15494  00658A  0E01               	movlw	1
 15495  00658C  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15496                           
 15497                           ; BSR set to: 0
 15498  00658E  0EC1               	movlw	193
 15499  006590  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15500                           
 15501                           ;usb_device_hid.c: 223: break;
 15502  006592  0012               	return	
 15503  006594                     
 15504                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 15505                           
 15506                           ; BSR set to: 0
 15507  006594  0E80               	movlw	128
 15508  006596  0100               	movlb	0	; () banked
 15509  006598  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15510                           
 15511                           ; BSR set to: 0
 15512                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 15513  00659A  CD33 F1B2          	movff	3379,_idle_rate	;volatile
 15514                           
 15515                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 15516  00659E  0012               	return	
 15517  0065A0                     
 15518                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 15519                           
 15520                           ; BSR set to: 0
 15521  0065A0  0EB1               	movlw	low _active_protocol
 15522  0065A2  0100               	movlb	0	; () banked
 15523  0065A4  6FCB               	movwf	_inPipes& (0+255),b
 15524  0065A6  0E01               	movlw	high _active_protocol
 15525  0065A8  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15526                           
 15527                           ; BSR set to: 0
 15528  0065AA  0E00               	movlw	0
 15529  0065AC  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15530  0065AE  0E01               	movlw	1
 15531  0065B0  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15532                           
 15533                           ; BSR set to: 0
 15534  0065B2  0E81               	movlw	129
 15535  0065B4  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15536                           
 15537                           ;usb_device_hid.c: 234: break;
 15538  0065B6  0012               	return	
 15539  0065B8                     
 15540                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 15541                           
 15542                           ; BSR set to: 0
 15543  0065B8  0E80               	movlw	128
 15544  0065BA  0100               	movlb	0	; () banked
 15545  0065BC  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15546                           
 15547                           ; BSR set to: 0
 15548                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 15549  0065BE  CD32 F1B1          	movff	3378,_active_protocol	;volatile
 15550                           
 15551                           ; BSR set to: 0
 15552                           ;usb_device_hid.c: 239: }
 15553                           
 15554                           ;usb_device_hid.c: 238: break;
 15555  0065C2  0012               	return	
 15556  0065C4                     l418:
 15557                           
 15558                           ; BSR set to: 0
 15559  0065C4  010D               	movlb	13	; () banked
 15560  0065C6  5131               	movf	49,w,b	;volatile
 15561                           
 15562                           ; Switch size 1, requested type "space"
 15563                           ; Number of cases is 6, Range of values is 1 to 11
 15564                           ; switch strategies available:
 15565                           ; Name         Instructions Cycles
 15566                           ; simple_byte           19    10 (average)
 15567                           ;	Chosen strategy is simple_byte
 15568  0065C8  0A01               	xorlw	1	; case 1
 15569  0065CA  B4D8               	btfsc	status,2,c
 15570  0065CC  0012               	return	
 15571  0065CE  0A03               	xorlw	3	; case 2
 15572  0065D0  B4D8               	btfsc	status,2,c
 15573  0065D2  D7D4               	goto	l422
 15574  0065D4  0A01               	xorlw	1	; case 3
 15575  0065D6  B4D8               	btfsc	status,2,c
 15576  0065D8  D7E3               	goto	l424
 15577  0065DA  0A0A               	xorlw	10	; case 9
 15578  0065DC  B4D8               	btfsc	status,2,c
 15579  0065DE  0012               	return	
 15580  0065E0  0A03               	xorlw	3	; case 10
 15581  0065E2  B4D8               	btfsc	status,2,c
 15582  0065E4  D7D7               	goto	l423
 15583  0065E6  0A01               	xorlw	1	; case 11
 15584  0065E8  A4D8               	btfss	status,2,c
 15585  0065EA  0012               	return	
 15586  0065EC  D7E5               	goto	l425
 15587  0065EE                     __end_of_USBCheckHIDRequest:
 15588                           	opt stack 0
 15589                           tblptru	equ	0xFF8
 15590                           tblptrh	equ	0xFF7
 15591                           tblptrl	equ	0xFF6
 15592                           tablat	equ	0xFF5
 15593                           prodh	equ	0xFF4
 15594                           prodl	equ	0xFF3
 15595                           intcon	equ	0xFF2
 15596                           intcon2	equ	0xFF1
 15597                           intcon3	equ	0xFF0
 15598                           indf0	equ	0xFEF
 15599                           postinc0	equ	0xFEE
 15600                           fsr0h	equ	0xFEA
 15601                           fsr0l	equ	0xFE9
 15602                           wreg	equ	0xFE8
 15603                           indf1	equ	0xFE7
 15604                           postdec1	equ	0xFE5
 15605                           plusw1	equ	0xFE3
 15606                           fsr1h	equ	0xFE2
 15607                           fsr1l	equ	0xFE1
 15608                           indf2	equ	0xFDF
 15609                           postinc2	equ	0xFDE
 15610                           postdec2	equ	0xFDD
 15611                           plusw2	equ	0xFDB
 15612                           fsr2h	equ	0xFDA
 15613                           fsr2l	equ	0xFD9
 15614                           status	equ	0xFD8
 15615                           
 15616 ;; *************** function _SYSTEM_Initialize *****************
 15617 ;; Defined at:
 15618 ;;		line 80 in file "system.c"
 15619 ;; Parameters:    Size  Location     Type
 15620 ;;  state           1    wreg     enum E6623
 15621 ;; Auto vars:     Size  Location     Type
 15622 ;;  state           1    4[COMRAM] enum E6623
 15623 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 15624 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 15625 ;; Return value:  Size  Location     Type
 15626 ;;                  1    wreg      void 
 15627 ;; Registers used:
 15628 ;;		wreg, status,2, status,0
 15629 ;; Tracked objects:
 15630 ;;		On entry : 0/0
 15631 ;;		On exit  : 0/0
 15632 ;;		Unchanged: 0/0
 15633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15635 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15637 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15638 ;;Total ram usage:        5 bytes
 15639 ;; Hardware stack levels used:    1
 15640 ;; This function calls:
 15641 ;;		Nothing
 15642 ;; This function is called by:
 15643 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15644 ;;		_main
 15645 ;; This function uses a non-reentrant model
 15646 ;;
 15647                           
 15648                           	psect	text70
 15649  008E98                     __ptext70:
 15650                           	opt stack 0
 15651  008E98                     _SYSTEM_Initialize:
 15652                           	opt stack 28
 15653                           
 15654                           ;incstack = 0
 15655                           ;SYSTEM_Initialize@state stored from wreg
 15656  008E98  6E05               	movwf	SYSTEM_Initialize@state,c
 15657                           
 15658                           ;system.c: 82: switch(state)
 15659  008E9A  D01D               	goto	l926
 15660  008E9C                     
 15661                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 15662  008E9C  0E02               	movlw	2
 15663  008E9E  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 15664  008EA0  0E58               	movlw	88
 15665  008EA2  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 15666                           
 15667                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 15668  008EA4  8C9B               	bsf	3995,6,c	;volatile
 15669  008EA6                     l11524:
 15670  008EA6  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 15671  008EA8  A0D8               	btfss	status,0,c
 15672  008EAA  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 15673  008EAC  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 15674  008EAE  E1FB               	bnz	l11524
 15675  008EB0  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 15676  008EB2  B4D8               	btfsc	status,2,c
 15677  008EB4  0012               	return	
 15678  008EB6  D7F7               	goto	l929
 15679  008EB8                     
 15680                           ;system.c: 119: OSCCON = 0x70;
 15681  008EB8  0E70               	movlw	112
 15682  008EBA  6ED3               	movwf	4051,c	;volatile
 15683                           
 15684                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 15685  008EBC  0E03               	movlw	3
 15686  008EBE  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3116+1,c
 15687  008EC0  0E20               	movlw	32
 15688  008EC2  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3116,c
 15689  008EC4                     l11528:
 15690  008EC4  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3116,f,c
 15691  008EC6  A0D8               	btfss	status,0,c
 15692  008EC8  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3116+1,f,c
 15693  008ECA  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3116,w,c
 15694  008ECC  E1FB               	bnz	l11528
 15695  008ECE  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3116+1,w,c
 15696  008ED0  B4D8               	btfsc	status,2,c
 15697  008ED2  0012               	return	
 15698  008ED4  D7F7               	goto	l935
 15699  008ED6                     l926:
 15700  008ED6  5005               	movf	SYSTEM_Initialize@state,w,c
 15701                           
 15702                           ; Switch size 1, requested type "space"
 15703                           ; Number of cases is 3, Range of values is 0 to 2
 15704                           ; switch strategies available:
 15705                           ; Name         Instructions Cycles
 15706                           ; simple_byte           10     6 (average)
 15707                           ;	Chosen strategy is simple_byte
 15708  008ED8  0A00               	xorlw	0	; case 0
 15709  008EDA  B4D8               	btfsc	status,2,c
 15710  008EDC  D7DF               	goto	l927
 15711  008EDE  0A01               	xorlw	1	; case 1
 15712  008EE0  B4D8               	btfsc	status,2,c
 15713  008EE2  0012               	return	
 15714  008EE4  0A03               	xorlw	3	; case 2
 15715  008EE6  A4D8               	btfss	status,2,c
 15716  008EE8  0012               	return	
 15717  008EEA  D7E6               	goto	l933
 15718  008EEC                     __end_of_SYSTEM_Initialize:
 15719                           	opt stack 0
 15720                           tblptru	equ	0xFF8
 15721                           tblptrh	equ	0xFF7
 15722                           tblptrl	equ	0xFF6
 15723                           tablat	equ	0xFF5
 15724                           prodh	equ	0xFF4
 15725                           prodl	equ	0xFF3
 15726                           intcon	equ	0xFF2
 15727                           intcon2	equ	0xFF1
 15728                           intcon3	equ	0xFF0
 15729                           indf0	equ	0xFEF
 15730                           postinc0	equ	0xFEE
 15731                           fsr0h	equ	0xFEA
 15732                           fsr0l	equ	0xFE9
 15733                           wreg	equ	0xFE8
 15734                           indf1	equ	0xFE7
 15735                           postdec1	equ	0xFE5
 15736                           plusw1	equ	0xFE3
 15737                           fsr1h	equ	0xFE2
 15738                           fsr1l	equ	0xFE1
 15739                           indf2	equ	0xFDF
 15740                           postinc2	equ	0xFDE
 15741                           postdec2	equ	0xFDD
 15742                           plusw2	equ	0xFDB
 15743                           fsr2h	equ	0xFDA
 15744                           fsr2l	equ	0xFD9
 15745                           status	equ	0xFD8
 15746                           
 15747 ;; *************** function _MSDTransferTerminated *****************
 15748 ;; Defined at:
 15749 ;;		line 1674 in file "usb_device_msd.c"
 15750 ;; Parameters:    Size  Location     Type
 15751 ;;  handle          2   11[COMRAM] PTR void 
 15752 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15753 ;;		 -> BDT(48), 
 15754 ;; Auto vars:     Size  Location     Type
 15755 ;;		None
 15756 ;; Return value:  Size  Location     Type
 15757 ;;                  1    wreg      void 
 15758 ;; Registers used:
 15759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15760 ;; Tracked objects:
 15761 ;;		On entry : 0/0
 15762 ;;		On exit  : 0/0
 15763 ;;		Unchanged: 0/0
 15764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15768 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15769 ;;Total ram usage:        4 bytes
 15770 ;; Hardware stack levels used:    1
 15771 ;; Hardware stack levels required when called:    1
 15772 ;; This function calls:
 15773 ;;		_USBStallEndpoint
 15774 ;;		_USBTransferOnePacket
 15775 ;; This function is called by:
 15776 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15777 ;; This function uses a non-reentrant model
 15778 ;;
 15779                           
 15780                           	psect	text71
 15781  008C3E                     __ptext71:
 15782                           	opt stack 0
 15783  008C3E                     _MSDTransferTerminated:
 15784                           	opt stack 27
 15785                           
 15786                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 15787                           
 15788                           ;incstack = 0
 15789  008C3E  0101               	movlb	1	; () banked
 15790  008C40  518E               	movf	_MSDCBWValid& (0+255),w,b
 15791  008C42  A4D8               	btfss	status,2,c
 15792  008C44  D00B               	goto	l764
 15793                           
 15794                           ; BSR set to: 1
 15795                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 15796  008C46  0E01               	movlw	1
 15797  008C48  6E01               	movwf	USBStallEndpoint@dir,c
 15798  008C4A  0E02               	movlw	2
 15799  008C4C  EC30  F02B         	call	_USBStallEndpoint
 15800                           
 15801                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 15802  008C50  0E00               	movlw	0
 15803  008C52  6E01               	movwf	USBStallEndpoint@dir,c
 15804  008C54  0E02               	movlw	2
 15805  008C56  EC30  F02B         	call	_USBStallEndpoint
 15806                           
 15807                           ;usb_device_msd.c: 1681: }
 15808  008C5A  0012               	return	
 15809  008C5C                     l764:
 15810  008C5C  C144  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 15811  008C60  C145  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 15812  008C64  500E               	movf	_MSDTransferTerminated$2407,w,c
 15813  008C66  180C               	xorwf	MSDTransferTerminated@handle,w,c
 15814  008C68  E114               	bnz	l767
 15815  008C6A  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 15816  008C6C  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 15817  008C6E  A4D8               	btfss	status,2,c
 15818  008C70  0012               	return	
 15819                           
 15820                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 15821  008C72  0E00               	movlw	0
 15822  008C74  6E01               	movwf	USBTransferOnePacket@dir,c
 15823  008C76  0E40               	movlw	64
 15824  008C78  6E02               	movwf	USBTransferOnePacket@data,c
 15825  008C7A  0E0D               	movlw	13
 15826  008C7C  6E03               	movwf	USBTransferOnePacket@data+1,c
 15827  008C7E  0E40               	movlw	64
 15828  008C80  6E04               	movwf	USBTransferOnePacket@len,c
 15829  008C82  0E02               	movlw	2
 15830  008C84  EC3B  F02D         	call	_USBTransferOnePacket
 15831  008C88  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15832  008C8C  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15833  008C90  0012               	return	
 15834  008C92                     l767:
 15835  008C92  0012               	return		;funcret
 15836  008C94                     __end_of_MSDTransferTerminated:
 15837                           	opt stack 0
 15838                           tblptru	equ	0xFF8
 15839                           tblptrh	equ	0xFF7
 15840                           tblptrl	equ	0xFF6
 15841                           tablat	equ	0xFF5
 15842                           prodh	equ	0xFF4
 15843                           prodl	equ	0xFF3
 15844                           intcon	equ	0xFF2
 15845                           intcon2	equ	0xFF1
 15846                           intcon3	equ	0xFF0
 15847                           indf0	equ	0xFEF
 15848                           postinc0	equ	0xFEE
 15849                           fsr0h	equ	0xFEA
 15850                           fsr0l	equ	0xFE9
 15851                           wreg	equ	0xFE8
 15852                           indf1	equ	0xFE7
 15853                           postdec1	equ	0xFE5
 15854                           plusw1	equ	0xFE3
 15855                           fsr1h	equ	0xFE2
 15856                           fsr1l	equ	0xFE1
 15857                           indf2	equ	0xFDF
 15858                           postinc2	equ	0xFDE
 15859                           postdec2	equ	0xFDD
 15860                           plusw2	equ	0xFDB
 15861                           fsr2h	equ	0xFDA
 15862                           fsr2l	equ	0xFD9
 15863                           status	equ	0xFD8
 15864                           
 15865 ;; *************** function _APP_DeviceMSDInitialize *****************
 15866 ;; Defined at:
 15867 ;;		line 84 in file "app_device_msd.c"
 15868 ;; Parameters:    Size  Location     Type
 15869 ;;		None
 15870 ;; Auto vars:     Size  Location     Type
 15871 ;;		None
 15872 ;; Return value:  Size  Location     Type
 15873 ;;                  1    wreg      void 
 15874 ;; Registers used:
 15875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15876 ;; Tracked objects:
 15877 ;;		On entry : 0/0
 15878 ;;		On exit  : 0/0
 15879 ;;		Unchanged: 0/0
 15880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15885 ;;Total ram usage:        0 bytes
 15886 ;; Hardware stack levels used:    1
 15887 ;; Hardware stack levels required when called:    2
 15888 ;; This function calls:
 15889 ;;		_USBEnableEndpoint
 15890 ;;		_USBMSDInit
 15891 ;; This function is called by:
 15892 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15893 ;; This function uses a non-reentrant model
 15894 ;;
 15895                           
 15896                           	psect	text72
 15897  009C2A                     __ptext72:
 15898                           	opt stack 0
 15899  009C2A                     _APP_DeviceMSDInitialize:
 15900                           	opt stack 26
 15901                           
 15902                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 15903                           
 15904                           ;incstack = 0
 15905  009C2A  0E1E               	movlw	30
 15906  009C2C  6E09               	movwf	USBEnableEndpoint@options,c
 15907  009C2E  0E02               	movlw	2
 15908  009C30  ECD9  F049         	call	_USBEnableEndpoint
 15909                           
 15910                           ;app_device_msd.c: 93: USBMSDInit();
 15911  009C34  ECBA  F02C         	call	_USBMSDInit	;wreg free
 15912  009C38  0012               	return		;funcret
 15913  009C3A                     __end_of_APP_DeviceMSDInitialize:
 15914                           	opt stack 0
 15915                           tblptru	equ	0xFF8
 15916                           tblptrh	equ	0xFF7
 15917                           tblptrl	equ	0xFF6
 15918                           tablat	equ	0xFF5
 15919                           prodh	equ	0xFF4
 15920                           prodl	equ	0xFF3
 15921                           intcon	equ	0xFF2
 15922                           intcon2	equ	0xFF1
 15923                           intcon3	equ	0xFF0
 15924                           indf0	equ	0xFEF
 15925                           postinc0	equ	0xFEE
 15926                           fsr0h	equ	0xFEA
 15927                           fsr0l	equ	0xFE9
 15928                           wreg	equ	0xFE8
 15929                           indf1	equ	0xFE7
 15930                           postdec1	equ	0xFE5
 15931                           plusw1	equ	0xFE3
 15932                           fsr1h	equ	0xFE2
 15933                           fsr1l	equ	0xFE1
 15934                           indf2	equ	0xFDF
 15935                           postinc2	equ	0xFDE
 15936                           postdec2	equ	0xFDD
 15937                           plusw2	equ	0xFDB
 15938                           fsr2h	equ	0xFDA
 15939                           fsr2l	equ	0xFD9
 15940                           status	equ	0xFD8
 15941                           
 15942 ;; *************** function _USBMSDInit *****************
 15943 ;; Defined at:
 15944 ;;		line 142 in file "usb_device_msd.c"
 15945 ;; Parameters:    Size  Location     Type
 15946 ;;		None
 15947 ;; Auto vars:     Size  Location     Type
 15948 ;;		None
 15949 ;; Return value:  Size  Location     Type
 15950 ;;                  1    wreg      void 
 15951 ;; Registers used:
 15952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15953 ;; Tracked objects:
 15954 ;;		On entry : 0/0
 15955 ;;		On exit  : 0/0
 15956 ;;		Unchanged: 0/0
 15957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15960 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15961 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15962 ;;Total ram usage:        3 bytes
 15963 ;; Hardware stack levels used:    1
 15964 ;; Hardware stack levels required when called:    1
 15965 ;; This function calls:
 15966 ;;		_ExternalFlash_MediaDetect
 15967 ;;		_ExternalFlash_MediaInitialize
 15968 ;;		_ResetSenseData
 15969 ;;		_USBTransferOnePacket
 15970 ;; This function is called by:
 15971 ;;		_APP_DeviceMSDInitialize
 15972 ;; This function uses a non-reentrant model
 15973 ;;
 15974                           
 15975                           	psect	text73
 15976  005974                     __ptext73:
 15977                           	opt stack 0
 15978  005974                     _USBMSDInit:
 15979                           	opt stack 26
 15980                           
 15981                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 15982                           
 15983                           ;incstack = 0
 15984  005974  0E00               	movlw	0
 15985  005976  6E01               	movwf	USBTransferOnePacket@dir,c
 15986  005978  0E40               	movlw	64
 15987  00597A  6E02               	movwf	USBTransferOnePacket@data,c
 15988  00597C  0E0D               	movlw	13
 15989  00597E  6E03               	movwf	USBTransferOnePacket@data+1,c
 15990  005980  0E40               	movlw	64
 15991  005982  6E04               	movwf	USBTransferOnePacket@len,c
 15992  005984  0E02               	movlw	2
 15993  005986  EC3B  F02D         	call	_USBTransferOnePacket
 15994  00598A  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15995  00598E  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15996  005992  C0D5  F0DD         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 15997  005996  C0D6  F0DE         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 15998                           
 15999                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 16000  00599A  0E00               	movlw	0
 16001  00599C  0100               	movlb	0	; () banked
 16002  00599E  6FED               	movwf	_MSD_State& (0+255),b
 16003                           
 16004                           ; BSR set to: 0
 16005                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 16006  0059A0  69EC               	setf	_MSDCommandState& (0+255),b
 16007                           
 16008                           ; BSR set to: 0
 16009                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 16010  0059A2  0E00               	movlw	0
 16011  0059A4  6FEB               	movwf	_MSDReadState& (0+255),b
 16012                           
 16013                           ; BSR set to: 0
 16014                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 16015  0059A6  0E00               	movlw	0
 16016  0059A8  6FEA               	movwf	_MSDWriteState& (0+255),b
 16017                           
 16018                           ; BSR set to: 0
 16019                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 16020  0059AA  0E00               	movlw	0
 16021  0059AC  6FE7               	movwf	_MSDHostNoData& (0+255),b
 16022                           
 16023                           ; BSR set to: 0
 16024                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 16025  0059AE  0E00               	movlw	0
 16026  0059B0  0101               	movlb	1	; () banked
 16027  0059B2  6F5A               	movwf	_gblNumBLKS& (0+255),b
 16028  0059B4  0E00               	movlw	0
 16029  0059B6  6F5B               	movwf	(_gblNumBLKS+1)& (0+255),b
 16030  0059B8  0E00               	movlw	0
 16031  0059BA  6F5C               	movwf	(_gblNumBLKS+2)& (0+255),b
 16032  0059BC  0E00               	movlw	0
 16033  0059BE  6F5D               	movwf	(_gblNumBLKS+3)& (0+255),b
 16034                           
 16035                           ; BSR set to: 1
 16036                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 16037  0059C0  0E00               	movlw	0
 16038  0059C2  6F56               	movwf	_gblBLKLen& (0+255),b
 16039  0059C4  0E00               	movlw	0
 16040  0059C6  6F57               	movwf	(_gblBLKLen+1)& (0+255),b
 16041  0059C8  0E00               	movlw	0
 16042  0059CA  6F58               	movwf	(_gblBLKLen+2)& (0+255),b
 16043  0059CC  0E00               	movlw	0
 16044  0059CE  6F59               	movwf	(_gblBLKLen+3)& (0+255),b
 16045                           
 16046                           ; BSR set to: 1
 16047                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 16048  0059D0  0E01               	movlw	1
 16049  0059D2  6F8E               	movwf	_MSDCBWValid& (0+255),b
 16050                           
 16051                           ; BSR set to: 1
 16052                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 16053  0059D4  0E00               	movlw	0
 16054  0059D6  6F83               	movwf	(_gblMediaPresent+1)& (0+255),b
 16055  0059D8  0E00               	movlw	0
 16056  0059DA  6F82               	movwf	_gblMediaPresent& (0+255),b
 16057                           
 16058                           ; BSR set to: 1
 16059                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 16060  0059DC  0E00               	movlw	0
 16061  0059DE  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 16062  0059E0  D046               	goto	l518
 16063  0059E2                     
 16064                           ; BSR set to: 1
 16065                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 16066                           
 16067                           ; BSR set to: 1
 16068  0059E2  510D               	movf	(_gblCBW+13)& (0+255),w,b
 16069  0059E4  0D01               	mullw	1
 16070  0059E6  0EE8               	movlw	low _SoftDetach
 16071  0059E8  24F3               	addwf	prodl,w,c
 16072  0059EA  6ED9               	movwf	fsr2l,c
 16073  0059EC  0E00               	movlw	high _SoftDetach
 16074  0059EE  20F4               	addwfc	prodh,w,c
 16075  0059F0  6EDA               	movwf	fsr2h,c
 16076  0059F2  0E00               	movlw	0
 16077  0059F4  6EDF               	movwf	indf2,c
 16078                           
 16079                           ; BSR set to: 1
 16080                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 16081  0059F6  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 16082  0059FA  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 16083  0059FE  D801               	call	u7638
 16084  005A00  D009               	goto	u7639
 16085  005A02                     u7638:
 16086  005A02  0005               	push	
 16087  005A04  6EFA               	movwf	pclath,c
 16088  005A06  51B9               	movf	(_LUN+6)& (0+255),w,b
 16089  005A08  6EFD               	movwf	tosl,c
 16090  005A0A  51BA               	movf	(_LUN+7)& (0+255),w,b
 16091  005A0C  6EFE               	movwf	tosh,c
 16092  005A0E  6AFF               	clrf	tosu,c
 16093  005A10  50FA               	movf	pclath,w,c
 16094  005A12  0012               	return		;indir
 16095  005A14                     u7639:
 16096  005A14  0900               	iorlw	0
 16097  005A16  B4D8               	btfsc	status,2,c
 16098  005A18  D026               	goto	l521
 16099                           
 16100                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 16101  005A1A  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 16102  005A1E  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 16103  005A22  D801               	call	u7658
 16104  005A24  D00A               	goto	u7659
 16105  005A26                     u7658:
 16106  005A26  0005               	push	
 16107  005A28  6EFA               	movwf	pclath,c
 16108  005A2A  0101               	movlb	1	; () banked
 16109  005A2C  51B3               	movf	_LUN& (0+255),w,b
 16110  005A2E  6EFD               	movwf	tosl,c
 16111  005A30  51B4               	movf	(_LUN+1)& (0+255),w,b
 16112  005A32  6EFE               	movwf	tosh,c
 16113  005A34  6AFF               	clrf	tosu,c
 16114  005A36  50FA               	movf	pclath,w,c
 16115  005A38  0012               	return		;indir
 16116  005A3A                     u7659:
 16117  005A3A  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 16118  005A3C  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 16119  005A3E  B4D8               	btfsc	status,2,c
 16120  005A40  D012               	goto	l521
 16121                           
 16122                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 16123  005A42  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 16124  005A46  0E01               	movlw	1
 16125  005A48  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 16126  005A4A  0E00               	movlw	0
 16127  005A4C  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 16128  005A4E  2A0C               	incf	??_USBMSDInit,f,c
 16129  005A50  D003               	goto	u7674
 16130  005A52                     u7675:
 16131  005A52  90D8               	bcf	status,0,c
 16132  005A54  360D               	rlcf	??_USBMSDInit+1,f,c
 16133  005A56  360E               	rlcf	??_USBMSDInit+2,f,c
 16134  005A58                     u7674:
 16135  005A58  2E0C               	decfsz	??_USBMSDInit,f,c
 16136  005A5A  D7FB               	goto	u7675
 16137  005A5C  500D               	movf	??_USBMSDInit+1,w,c
 16138  005A5E  0101               	movlb	1	; () banked
 16139  005A60  1382               	iorwf	_gblMediaPresent& (0+255),f,b
 16140  005A62  500E               	movf	??_USBMSDInit+2,w,c
 16141  005A64  1383               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 16142  005A66                     l521:
 16143                           
 16144                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 16145                           
 16146                           ; BSR set to: 1
 16147                           
 16148                           ; BSR set to: 1
 16149  005A66  EC53  F044         	call	_ResetSenseData	;wreg free
 16150  005A6A  0101               	movlb	1	; () banked
 16151  005A6C  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 16152  005A6E                     l518:
 16153                           
 16154                           ; BSR set to: 1
 16155                           
 16156                           ; BSR set to: 1
 16157  005A6E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 16158  005A70  A4D8               	btfss	status,2,c
 16159  005A72  0012               	return	
 16160  005A74  D7B6               	goto	l519
 16161  005A76                     __end_of_USBMSDInit:
 16162                           	opt stack 0
 16163                           tosu	equ	0xFFF
 16164                           tosh	equ	0xFFE
 16165                           tosl	equ	0xFFD
 16166                           pclath	equ	0xFFA
 16167                           tblptru	equ	0xFF8
 16168                           tblptrh	equ	0xFF7
 16169                           tblptrl	equ	0xFF6
 16170                           tablat	equ	0xFF5
 16171                           prodh	equ	0xFF4
 16172                           prodl	equ	0xFF3
 16173                           intcon	equ	0xFF2
 16174                           intcon2	equ	0xFF1
 16175                           intcon3	equ	0xFF0
 16176                           indf0	equ	0xFEF
 16177                           postinc0	equ	0xFEE
 16178                           fsr0h	equ	0xFEA
 16179                           fsr0l	equ	0xFE9
 16180                           wreg	equ	0xFE8
 16181                           indf1	equ	0xFE7
 16182                           postdec1	equ	0xFE5
 16183                           plusw1	equ	0xFE3
 16184                           fsr1h	equ	0xFE2
 16185                           fsr1l	equ	0xFE1
 16186                           indf2	equ	0xFDF
 16187                           postinc2	equ	0xFDE
 16188                           postdec2	equ	0xFDD
 16189                           plusw2	equ	0xFDB
 16190                           fsr2h	equ	0xFDA
 16191                           fsr2l	equ	0xFD9
 16192                           status	equ	0xFD8
 16193                           
 16194 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 16195 ;; Defined at:
 16196 ;;		line 47 in file "app_device_custom_hid.c"
 16197 ;; Parameters:    Size  Location     Type
 16198 ;;		None
 16199 ;; Auto vars:     Size  Location     Type
 16200 ;;		None
 16201 ;; Return value:  Size  Location     Type
 16202 ;;                  1    wreg      void 
 16203 ;; Registers used:
 16204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16205 ;; Tracked objects:
 16206 ;;		On entry : 0/0
 16207 ;;		On exit  : 0/0
 16208 ;;		Unchanged: 0/0
 16209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16214 ;;Total ram usage:        0 bytes
 16215 ;; Hardware stack levels used:    1
 16216 ;; Hardware stack levels required when called:    2
 16217 ;; This function calls:
 16218 ;;		_USBEnableEndpoint
 16219 ;;		_USBTransferOnePacket
 16220 ;; This function is called by:
 16221 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16222 ;; This function uses a non-reentrant model
 16223 ;;
 16224                           
 16225                           	psect	text74
 16226  009502                     __ptext74:
 16227                           	opt stack 0
 16228  009502                     _APP_DeviceCustomHIDInitialize:
 16229                           	opt stack 26
 16230                           
 16231                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 16232                           
 16233                           ; BSR set to: 1
 16234                           ;incstack = 0
 16235  009502  0E00               	movlw	0
 16236  009504  0101               	movlb	1	; () banked
 16237  009506  6F7E               	movwf	_USBInHandle& (0+255),b
 16238  009508  0E00               	movlw	0
 16239  00950A  6F7F               	movwf	(_USBInHandle+1)& (0+255),b
 16240                           
 16241                           ; BSR set to: 1
 16242                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 16243  00950C  0E1E               	movlw	30
 16244  00950E  6E09               	movwf	USBEnableEndpoint@options,c
 16245  009510  0E01               	movlw	1
 16246  009512  ECD9  F049         	call	_USBEnableEndpoint
 16247                           
 16248                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 16249  009516  0E00               	movlw	0
 16250  009518  6E01               	movwf	USBTransferOnePacket@dir,c
 16251  00951A  0E50               	movlw	low _ReceivedDataBuffer
 16252  00951C  6E02               	movwf	USBTransferOnePacket@data,c
 16253  00951E  0E02               	movlw	high _ReceivedDataBuffer
 16254  009520  6E03               	movwf	USBTransferOnePacket@data+1,c
 16255  009522  0E40               	movlw	64
 16256  009524  6E04               	movwf	USBTransferOnePacket@len,c
 16257  009526  0E01               	movlw	1
 16258  009528  EC3B  F02D         	call	_USBTransferOnePacket
 16259  00952C  C001  F180         	movff	?_USBTransferOnePacket,_USBOutHandle
 16260  009530  C002  F181         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 16261  009534  0012               	return		;funcret
 16262  009536                     __end_of_APP_DeviceCustomHIDInitialize:
 16263                           	opt stack 0
 16264                           tosu	equ	0xFFF
 16265                           tosh	equ	0xFFE
 16266                           tosl	equ	0xFFD
 16267                           pclath	equ	0xFFA
 16268                           tblptru	equ	0xFF8
 16269                           tblptrh	equ	0xFF7
 16270                           tblptrl	equ	0xFF6
 16271                           tablat	equ	0xFF5
 16272                           prodh	equ	0xFF4
 16273                           prodl	equ	0xFF3
 16274                           intcon	equ	0xFF2
 16275                           intcon2	equ	0xFF1
 16276                           intcon3	equ	0xFF0
 16277                           indf0	equ	0xFEF
 16278                           postinc0	equ	0xFEE
 16279                           fsr0h	equ	0xFEA
 16280                           fsr0l	equ	0xFE9
 16281                           wreg	equ	0xFE8
 16282                           indf1	equ	0xFE7
 16283                           postdec1	equ	0xFE5
 16284                           plusw1	equ	0xFE3
 16285                           fsr1h	equ	0xFE2
 16286                           fsr1l	equ	0xFE1
 16287                           indf2	equ	0xFDF
 16288                           postinc2	equ	0xFDE
 16289                           postdec2	equ	0xFDD
 16290                           plusw2	equ	0xFDB
 16291                           fsr2h	equ	0xFDA
 16292                           fsr2l	equ	0xFD9
 16293                           status	equ	0xFD8
 16294                           
 16295 ;; *************** function _USBEnableEndpoint *****************
 16296 ;; Defined at:
 16297 ;;		line 878 in file "usb_device.c"
 16298 ;; Parameters:    Size  Location     Type
 16299 ;;  ep              1    wreg     unsigned char 
 16300 ;;  options         1    8[COMRAM] unsigned char 
 16301 ;; Auto vars:     Size  Location     Type
 16302 ;;  ep              1   11[COMRAM] unsigned char 
 16303 ;;  p               2    9[COMRAM] PTR unsigned char 
 16304 ;;		 -> UEP0(1), 
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  1    wreg      void 
 16307 ;; Registers used:
 16308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16309 ;; Tracked objects:
 16310 ;;		On entry : 0/0
 16311 ;;		On exit  : 0/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16314 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16315 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16317 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16318 ;;Total ram usage:        4 bytes
 16319 ;; Hardware stack levels used:    1
 16320 ;; Hardware stack levels required when called:    1
 16321 ;; This function calls:
 16322 ;;		_USBConfigureEndpoint
 16323 ;; This function is called by:
 16324 ;;		_APP_DeviceCustomHIDInitialize
 16325 ;;		_APP_DeviceMSDInitialize
 16326 ;; This function uses a non-reentrant model
 16327 ;;
 16328                           
 16329                           	psect	text75
 16330  0093B2                     __ptext75:
 16331                           	opt stack 0
 16332  0093B2                     _USBEnableEndpoint:
 16333                           	opt stack 26
 16334                           
 16335                           ;incstack = 0
 16336                           ;USBEnableEndpoint@ep stored from wreg
 16337  0093B2  6E0C               	movwf	USBEnableEndpoint@ep,c
 16338                           
 16339                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 16340  0093B4  A409               	btfss	USBEnableEndpoint@options,2,c
 16341  0093B6  D005               	goto	l178
 16342                           
 16343                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 16344  0093B8  0E00               	movlw	0
 16345  0093BA  6E01               	movwf	USBConfigureEndpoint@direction,c
 16346  0093BC  500C               	movf	USBEnableEndpoint@ep,w,c
 16347  0093BE  ECF2  F03E         	call	_USBConfigureEndpoint
 16348  0093C2                     l178:
 16349                           
 16350                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 16351  0093C2  A209               	btfss	USBEnableEndpoint@options,1,c
 16352  0093C4  D005               	goto	l179
 16353                           
 16354                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 16355  0093C6  0E01               	movlw	1
 16356  0093C8  6E01               	movwf	USBConfigureEndpoint@direction,c
 16357  0093CA  500C               	movf	USBEnableEndpoint@ep,w,c
 16358  0093CC  ECF2  F03E         	call	_USBConfigureEndpoint
 16359  0093D0                     l179:
 16360                           
 16361                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 16362  0093D0  500C               	movf	USBEnableEndpoint@ep,w,c
 16363  0093D2  0D01               	mullw	1
 16364  0093D4  0E26               	movlw	38
 16365  0093D6  24F3               	addwf	prodl,w,c
 16366  0093D8  6E0A               	movwf	USBEnableEndpoint@p,c
 16367  0093DA  0E0F               	movlw	15
 16368  0093DC  20F4               	addwfc	prodh,w,c
 16369  0093DE  6E0B               	movwf	USBEnableEndpoint@p+1,c
 16370                           
 16371                           ;usb_device.c: 901: *p = options;
 16372  0093E0  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 16373  0093E4  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 16374  0093E8  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 16375  0093EC  0012               	return		;funcret
 16376  0093EE                     __end_of_USBEnableEndpoint:
 16377                           	opt stack 0
 16378                           tosu	equ	0xFFF
 16379                           tosh	equ	0xFFE
 16380                           tosl	equ	0xFFD
 16381                           pclath	equ	0xFFA
 16382                           tblptru	equ	0xFF8
 16383                           tblptrh	equ	0xFF7
 16384                           tblptrl	equ	0xFF6
 16385                           tablat	equ	0xFF5
 16386                           prodh	equ	0xFF4
 16387                           prodl	equ	0xFF3
 16388                           intcon	equ	0xFF2
 16389                           intcon2	equ	0xFF1
 16390                           intcon3	equ	0xFF0
 16391                           indf0	equ	0xFEF
 16392                           postinc0	equ	0xFEE
 16393                           fsr0h	equ	0xFEA
 16394                           fsr0l	equ	0xFE9
 16395                           wreg	equ	0xFE8
 16396                           indf1	equ	0xFE7
 16397                           postdec1	equ	0xFE5
 16398                           plusw1	equ	0xFE3
 16399                           fsr1h	equ	0xFE2
 16400                           fsr1l	equ	0xFE1
 16401                           indf2	equ	0xFDF
 16402                           postinc2	equ	0xFDE
 16403                           postdec2	equ	0xFDD
 16404                           plusw2	equ	0xFDB
 16405                           fsr2h	equ	0xFDA
 16406                           fsr2l	equ	0xFD9
 16407                           status	equ	0xFD8
 16408                           
 16409 ;; *************** function _USBConfigureEndpoint *****************
 16410 ;; Defined at:
 16411 ;;		line 1545 in file "usb_device.c"
 16412 ;; Parameters:    Size  Location     Type
 16413 ;;  EPNum           1    wreg     unsigned char 
 16414 ;;  direction       1    0[COMRAM] unsigned char 
 16415 ;; Auto vars:     Size  Location     Type
 16416 ;;  EPNum           1    5[COMRAM] unsigned char 
 16417 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 16418 ;;		 -> BDT(48), 
 16419 ;; Return value:  Size  Location     Type
 16420 ;;                  1    wreg      void 
 16421 ;; Registers used:
 16422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16423 ;; Tracked objects:
 16424 ;;		On entry : 0/0
 16425 ;;		On exit  : 0/0
 16426 ;;		Unchanged: 0/0
 16427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16428 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16429 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16430 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16431 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16432 ;;Total ram usage:        8 bytes
 16433 ;; Hardware stack levels used:    1
 16434 ;; This function calls:
 16435 ;;		Nothing
 16436 ;; This function is called by:
 16437 ;;		_USBEnableEndpoint
 16438 ;; This function uses a non-reentrant model
 16439 ;;
 16440                           
 16441                           	psect	text76
 16442  007DE4                     __ptext76:
 16443                           	opt stack 0
 16444  007DE4                     _USBConfigureEndpoint:
 16445                           	opt stack 26
 16446                           
 16447                           ;incstack = 0
 16448                           ;USBConfigureEndpoint@EPNum stored from wreg
 16449  007DE4  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 16450                           
 16451                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 16452  007DE6  0E00               	movlw	0
 16453  007DE8  6E07               	movwf	USBConfigureEndpoint@handle,c
 16454  007DEA  0E0D               	movlw	13
 16455  007DEC  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 16456                           
 16457                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 16458  007DEE  5001               	movf	USBConfigureEndpoint@direction,w,c
 16459  007DF0  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 16460  007DF2  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 16461  007DF4  90D8               	bcf	status,0,c
 16462  007DF6  3602               	rlcf	??_USBConfigureEndpoint,f,c
 16463  007DF8  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 16464  007DFA  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16465  007DFC  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 16466  007DFE  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 16467  007E00  90D8               	bcf	status,0,c
 16468  007E02  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16469  007E04  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16470  007E06  90D8               	bcf	status,0,c
 16471  007E08  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16472  007E0A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16473  007E0C  5002               	movf	??_USBConfigureEndpoint,w,c
 16474  007E0E  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 16475  007E10  5003               	movf	??_USBConfigureEndpoint+1,w,c
 16476  007E12  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 16477  007E14  90D8               	bcf	status,0,c
 16478  007E16  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16479  007E18  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16480  007E1A  90D8               	bcf	status,0,c
 16481  007E1C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16482  007E1E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16483  007E20  5004               	movf	??_USBConfigureEndpoint+2,w,c
 16484  007E22  2607               	addwf	USBConfigureEndpoint@handle,f,c
 16485  007E24  5005               	movf	??_USBConfigureEndpoint+3,w,c
 16486  007E26  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 16487                           
 16488                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 16489  007E28  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16490  007E2C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16491  007E30  9EDF               	bcf	indf2,7,c
 16492                           
 16493                           ;usb_device.c: 1559: if(direction == 0)
 16494  007E32  5001               	movf	USBConfigureEndpoint@direction,w,c
 16495  007E34  A4D8               	btfss	status,2,c
 16496  007E36  D007               	goto	l214
 16497                           
 16498                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 16499  007E38  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16500  007E3A  0D02               	mullw	2
 16501  007E3C  0E40               	movlw	low _pBDTEntryOut
 16502  007E3E  24F3               	addwf	prodl,w,c
 16503  007E40  6ED9               	movwf	fsr2l,c
 16504  007E42  0E01               	movlw	high _pBDTEntryOut
 16505  007E44  D006               	goto	L14
 16506  007E46                     l214:
 16507                           
 16508                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 16509  007E46  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16510  007E48  0D02               	mullw	2
 16511  007E4A  0ED1               	movlw	low _pBDTEntryIn
 16512  007E4C  24F3               	addwf	prodl,w,c
 16513  007E4E  6ED9               	movwf	fsr2l,c
 16514  007E50  0E00               	movlw	high _pBDTEntryIn
 16515  007E52                     L14:
 16516  007E52  20F4               	addwfc	prodh,w,c
 16517  007E54  6EDA               	movwf	fsr2h,c
 16518  007E56  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 16519  007E5A  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 16520                           
 16521                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 16522  007E5E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16523  007E62  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16524  007E66  9CDF               	bcf	indf2,6,c
 16525                           
 16526                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 16527  007E68  EE20 F004          	lfsr	2,4
 16528  007E6C  5007               	movf	USBConfigureEndpoint@handle,w,c
 16529  007E6E  26D9               	addwf	fsr2l,f,c
 16530  007E70  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 16531  007E72  22DA               	addwfc	fsr2h,f,c
 16532  007E74  8CDF               	bsf	indf2,6,c
 16533  007E76  0012               	return		;funcret
 16534  007E78                     __end_of_USBConfigureEndpoint:
 16535                           	opt stack 0
 16536                           tosu	equ	0xFFF
 16537                           tosh	equ	0xFFE
 16538                           tosl	equ	0xFFD
 16539                           pclath	equ	0xFFA
 16540                           tblptru	equ	0xFF8
 16541                           tblptrh	equ	0xFF7
 16542                           tblptrl	equ	0xFF6
 16543                           tablat	equ	0xFF5
 16544                           prodh	equ	0xFF4
 16545                           prodl	equ	0xFF3
 16546                           intcon	equ	0xFF2
 16547                           intcon2	equ	0xFF1
 16548                           intcon3	equ	0xFF0
 16549                           indf0	equ	0xFEF
 16550                           postinc0	equ	0xFEE
 16551                           fsr0h	equ	0xFEA
 16552                           fsr0l	equ	0xFE9
 16553                           wreg	equ	0xFE8
 16554                           indf1	equ	0xFE7
 16555                           postdec1	equ	0xFE5
 16556                           plusw1	equ	0xFE3
 16557                           fsr1h	equ	0xFE2
 16558                           fsr1l	equ	0xFE1
 16559                           indf2	equ	0xFDF
 16560                           postinc2	equ	0xFDE
 16561                           postdec2	equ	0xFDD
 16562                           plusw2	equ	0xFDB
 16563                           fsr2h	equ	0xFDA
 16564                           fsr2l	equ	0xFD9
 16565                           status	equ	0xFD8
 16566                           
 16567 ;; *************** function _USBCtrlTrfOutHandler *****************
 16568 ;; Defined at:
 16569 ;;		line 2540 in file "usb_device.c"
 16570 ;; Parameters:    Size  Location     Type
 16571 ;;		None
 16572 ;; Auto vars:     Size  Location     Type
 16573 ;;		None
 16574 ;; Return value:  Size  Location     Type
 16575 ;;                  1    wreg      void 
 16576 ;; Registers used:
 16577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16578 ;; Tracked objects:
 16579 ;;		On entry : 0/0
 16580 ;;		On exit  : 0/0
 16581 ;;		Unchanged: 0/0
 16582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16587 ;;Total ram usage:        0 bytes
 16588 ;; Hardware stack levels used:    1
 16589 ;; Hardware stack levels required when called:    2
 16590 ;; This function calls:
 16591 ;;		_USBCtrlTrfRxService
 16592 ;; This function is called by:
 16593 ;;		_USBCtrlEPService
 16594 ;; This function uses a non-reentrant model
 16595 ;;
 16596                           
 16597                           	psect	text77
 16598  008712                     __ptext77:
 16599                           	opt stack 0
 16600  008712                     _USBCtrlTrfOutHandler:
 16601                           	opt stack 26
 16602                           
 16603                           ;usb_device.c: 2542: if(controlTransferState == 2)
 16604                           
 16605                           ;incstack = 0
 16606  008712  0E02               	movlw	2
 16607  008714  0100               	movlb	0	; () banked
 16608  008716  19F6               	xorwf	_controlTransferState& (0+255),w,b
 16609  008718  A4D8               	btfss	status,2,c
 16610  00871A  D003               	goto	l320
 16611                           
 16612                           ; BSR set to: 0
 16613                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 16614  00871C  EC96  F029         	call	_USBCtrlTrfRxService	;wreg free
 16615                           
 16616                           ;usb_device.c: 2545: }
 16617  008720  0012               	return	
 16618  008722                     l320:
 16619                           
 16620                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 16621  008722  0E00               	movlw	0
 16622  008724  0100               	movlb	0	; () banked
 16623  008726  6FF6               	movwf	_controlTransferState& (0+255),b
 16624                           
 16625                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 16626  008728  0101               	movlb	1	; () banked
 16627  00872A  5191               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 16628  00872C  A4D8               	btfss	status,2,c
 16629  00872E  D020               	goto	l322
 16630                           
 16631                           ; BSR set to: 1
 16632                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 16633  008730  0100               	movlb	0	; () banked
 16634  008732  EE20 F001          	lfsr	2,1
 16635  008736  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16636  008738  26D9               	addwf	fsr2l,f,c
 16637  00873A  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16638  00873C  22DA               	addwfc	fsr2h,f,c
 16639  00873E  0E08               	movlw	8
 16640  008740  6EDF               	movwf	indf2,c
 16641                           
 16642                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16643  008742  EE20 F002          	lfsr	2,2
 16644  008746  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16645  008748  26D9               	addwf	fsr2l,f,c
 16646  00874A  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16647  00874C  22DA               	addwfc	fsr2h,f,c
 16648  00874E  0E30               	movlw	48
 16649  008750  6EDE               	movwf	postinc2,c
 16650  008752  0E0D               	movlw	13
 16651  008754  6EDD               	movwf	postdec2,c
 16652                           
 16653                           ; BSR set to: 0
 16654                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16655  008756  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16656  00875A  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16657  00875E  0E0C               	movlw	12
 16658  008760  6EDF               	movwf	indf2,c
 16659                           
 16660                           ; BSR set to: 0
 16661                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16662  008762  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16663  008766  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16664  00876A  0E00               	movlw	0
 16665  00876C  8EDB               	bsf	plusw2,7,c
 16666                           
 16667                           ;usb_device.c: 2563: }
 16668  00876E  0012               	return	
 16669  008770                     l322:
 16670                           
 16671                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 16672                           
 16673                           ; BSR set to: 0
 16674  008770  0E00               	movlw	0
 16675  008772  0101               	movlb	1	; () banked
 16676  008774  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16677                           
 16678                           ; BSR set to: 1
 16679  008776  0012               	return	
 16680  008778                     __end_of_USBCtrlTrfOutHandler:
 16681                           	opt stack 0
 16682                           tosu	equ	0xFFF
 16683                           tosh	equ	0xFFE
 16684                           tosl	equ	0xFFD
 16685                           pclath	equ	0xFFA
 16686                           tblptru	equ	0xFF8
 16687                           tblptrh	equ	0xFF7
 16688                           tblptrl	equ	0xFF6
 16689                           tablat	equ	0xFF5
 16690                           prodh	equ	0xFF4
 16691                           prodl	equ	0xFF3
 16692                           intcon	equ	0xFF2
 16693                           intcon2	equ	0xFF1
 16694                           intcon3	equ	0xFF0
 16695                           indf0	equ	0xFEF
 16696                           postinc0	equ	0xFEE
 16697                           fsr0h	equ	0xFEA
 16698                           fsr0l	equ	0xFE9
 16699                           wreg	equ	0xFE8
 16700                           indf1	equ	0xFE7
 16701                           postdec1	equ	0xFE5
 16702                           plusw1	equ	0xFE3
 16703                           fsr1h	equ	0xFE2
 16704                           fsr1l	equ	0xFE1
 16705                           indf2	equ	0xFDF
 16706                           postinc2	equ	0xFDE
 16707                           postdec2	equ	0xFDD
 16708                           plusw2	equ	0xFDB
 16709                           fsr2h	equ	0xFDA
 16710                           fsr2l	equ	0xFD9
 16711                           status	equ	0xFD8
 16712                           
 16713 ;; *************** function _USBCtrlTrfRxService *****************
 16714 ;; Defined at:
 16715 ;;		line 1854 in file "usb_device.c"
 16716 ;; Parameters:    Size  Location     Type
 16717 ;;		None
 16718 ;; Auto vars:     Size  Location     Type
 16719 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16720 ;;  i               1    0[COMRAM] unsigned char 
 16721 ;; Return value:  Size  Location     Type
 16722 ;;                  1    wreg      void 
 16723 ;; Registers used:
 16724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16725 ;; Tracked objects:
 16726 ;;		On entry : 0/0
 16727 ;;		On exit  : 0/0
 16728 ;;		Unchanged: 0/0
 16729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16734 ;;Total ram usage:        2 bytes
 16735 ;; Hardware stack levels used:    1
 16736 ;; Hardware stack levels required when called:    1
 16737 ;; This function calls:
 16738 ;;		_USBCtrlEPAllowStatusStage
 16739 ;; This function is called by:
 16740 ;;		_USBCtrlTrfOutHandler
 16741 ;; This function uses a non-reentrant model
 16742 ;;
 16743                           
 16744                           	psect	text78
 16745  00532C                     __ptext78:
 16746                           	opt stack 0
 16747  00532C                     _USBCtrlTrfRxService:
 16748                           	opt stack 26
 16749                           
 16750                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16751                           
 16752                           ;incstack = 0
 16753  00532C  0100               	movlb	0	; () banked
 16754  00532E  EE20 F001          	lfsr	2,1
 16755  005332  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16756  005334  26D9               	addwf	fsr2l,f,c
 16757  005336  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16758  005338  22DA               	addwfc	fsr2h,f,c
 16759  00533A  50DF               	movf	indf2,w,c
 16760  00533C  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 16761                           
 16762                           ; BSR set to: 0
 16763                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 16764  00533E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16765  005340  0101               	movlb	1	; () banked
 16766  005342  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 16767  005344  0E00               	movlw	0
 16768  005346  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 16769  005348  A0D8               	btfss	status,0,c
 16770                           
 16771                           ; BSR set to: 1
 16772                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 16773  00534A  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 16774                           
 16775                           ; BSR set to: 1
 16776                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 16777                           
 16778                           ; BSR set to: 1
 16779  00534E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16780  005350  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 16781  005352  0E00               	movlw	0
 16782  005354  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 16783                           
 16784                           ; BSR set to: 1
 16785                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 16786  005356  0E00               	movlw	0
 16787  005358  6E01               	movwf	USBCtrlTrfRxService@i,c
 16788  00535A  D011               	goto	l248
 16789  00535C                     
 16790                           ; BSR set to: 1
 16791                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16792                           
 16793                           ; BSR set to: 1
 16794  00535C  5001               	movf	USBCtrlTrfRxService@i,w,c
 16795  00535E  0D01               	mullw	1
 16796  005360  0E38               	movlw	56
 16797  005362  24F3               	addwf	prodl,w,c
 16798  005364  6ED9               	movwf	fsr2l,c
 16799  005366  0E0D               	movlw	13
 16800  005368  20F4               	addwfc	prodh,w,c
 16801  00536A  6EDA               	movwf	fsr2h,c
 16802  00536C  C131  FFE1         	movff	_outPipes,fsr1l
 16803  005370  C132  FFE2         	movff	_outPipes+1,fsr1h
 16804  005374  CFDF FFE7          	movff	indf2,indf1
 16805                           
 16806                           ; BSR set to: 1
 16807  005378  4B31               	infsnz	_outPipes& (0+255),f,b
 16808  00537A  2B32               	incf	(_outPipes+1)& (0+255),f,b
 16809                           
 16810                           ; BSR set to: 1
 16811  00537C  2A01               	incf	USBCtrlTrfRxService@i,f,c
 16812  00537E                     l248:
 16813                           
 16814                           ; BSR set to: 1
 16815                           
 16816                           ; BSR set to: 1
 16817  00537E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16818  005380  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 16819  005382  A0D8               	btfss	status,0,c
 16820  005384  D7EB               	goto	l249
 16821                           
 16822                           ; BSR set to: 1
 16823                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 16824                           
 16825                           ; BSR set to: 1
 16826  005386  5135               	movf	(_outPipes+4)& (0+255),w,b
 16827  005388  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 16828  00538A  B4D8               	btfsc	status,2,c
 16829  00538C  D033               	goto	l251
 16830                           
 16831                           ; BSR set to: 1
 16832                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 16833  00538E  0100               	movlb	0	; () banked
 16834  005390  EE20 F001          	lfsr	2,1
 16835  005394  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16836  005396  26D9               	addwf	fsr2l,f,c
 16837  005398  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16838  00539A  22DA               	addwfc	fsr2h,f,c
 16839  00539C  0E08               	movlw	8
 16840  00539E  6EDF               	movwf	indf2,c
 16841                           
 16842                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16843  0053A0  EE20 F002          	lfsr	2,2
 16844  0053A4  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16845  0053A6  26D9               	addwf	fsr2l,f,c
 16846  0053A8  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16847  0053AA  22DA               	addwfc	fsr2h,f,c
 16848  0053AC  0E38               	movlw	56
 16849  0053AE  6EDE               	movwf	postinc2,c
 16850  0053B0  0E0D               	movlw	13
 16851  0053B2  6EDD               	movwf	postdec2,c
 16852                           
 16853                           ; BSR set to: 0
 16854                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16855  0053B4  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16856  0053B8  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16857  0053BC  BCDF               	btfsc	indf2,6,c
 16858  0053BE  D00D               	goto	l252
 16859                           
 16860                           ; BSR set to: 0
 16861                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 16862  0053C0  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16863  0053C4  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16864  0053C8  0E48               	movlw	72
 16865  0053CA  6EDF               	movwf	indf2,c
 16866                           
 16867                           ; BSR set to: 0
 16868                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16869  0053CC  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16870  0053D0  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16871  0053D4  0E00               	movlw	0
 16872  0053D6  8EDB               	bsf	plusw2,7,c
 16873                           
 16874                           ;usb_device.c: 1891: }
 16875  0053D8  0012               	return	
 16876  0053DA                     l252:
 16877                           
 16878                           ; BSR set to: 0
 16879                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 16880                           
 16881                           ; BSR set to: 0
 16882  0053DA  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16883  0053DE  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16884  0053E2  0E08               	movlw	8
 16885  0053E4  6EDF               	movwf	indf2,c
 16886                           
 16887                           ; BSR set to: 0
 16888                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16889  0053E6  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16890  0053EA  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16891  0053EE  0E00               	movlw	0
 16892  0053F0  8EDB               	bsf	plusw2,7,c
 16893                           
 16894                           ; BSR set to: 0
 16895                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 16896  0053F2  0012               	return	
 16897  0053F4                     l251:
 16898                           
 16899                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 16900                           
 16901                           ; BSR set to: 0
 16902  0053F4  0100               	movlb	0	; () banked
 16903  0053F6  EE20 F001          	lfsr	2,1
 16904  0053FA  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16905  0053FC  26D9               	addwf	fsr2l,f,c
 16906  0053FE  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16907  005400  22DA               	addwfc	fsr2h,f,c
 16908  005402  0E08               	movlw	8
 16909  005404  6EDF               	movwf	indf2,c
 16910                           
 16911                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16912  005406  EE20 F002          	lfsr	2,2
 16913  00540A  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16914  00540C  26D9               	addwf	fsr2l,f,c
 16915  00540E  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16916  005410  22DA               	addwfc	fsr2h,f,c
 16917  005412  0E30               	movlw	48
 16918  005414  6EDE               	movwf	postinc2,c
 16919  005416  0E0D               	movlw	13
 16920  005418  6EDD               	movwf	postdec2,c
 16921                           
 16922                           ; BSR set to: 0
 16923                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16924  00541A  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16925  00541E  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16926  005422  0E04               	movlw	4
 16927  005424  6EDF               	movwf	indf2,c
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16931  005426  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16932  00542A  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16933  00542E  0E00               	movlw	0
 16934  005430  8EDB               	bsf	plusw2,7,c
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 16938                           
 16939                           ; BSR set to: 0
 16940  005432  0101               	movlb	1	; () banked
 16941  005434  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 16942                           
 16943                           ; BSR set to: 1
 16944                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 16945  005436  0100               	movlb	0	; () banked
 16946  005438  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 16947  00543A  A4D8               	btfss	status,2,c
 16948  00543C  0012               	return	
 16949                           
 16950                           ; BSR set to: 0
 16951                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 16952  00543E  EC66  F036         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16953  005442  0012               	return	
 16954  005444                     __end_of_USBCtrlTrfRxService:
 16955                           	opt stack 0
 16956                           tosu	equ	0xFFF
 16957                           tosh	equ	0xFFE
 16958                           tosl	equ	0xFFD
 16959                           pclath	equ	0xFFA
 16960                           tblptru	equ	0xFF8
 16961                           tblptrh	equ	0xFF7
 16962                           tblptrl	equ	0xFF6
 16963                           tablat	equ	0xFF5
 16964                           prodh	equ	0xFF4
 16965                           prodl	equ	0xFF3
 16966                           intcon	equ	0xFF2
 16967                           intcon2	equ	0xFF1
 16968                           intcon3	equ	0xFF0
 16969                           indf0	equ	0xFEF
 16970                           postinc0	equ	0xFEE
 16971                           fsr0h	equ	0xFEA
 16972                           fsr0l	equ	0xFE9
 16973                           wreg	equ	0xFE8
 16974                           indf1	equ	0xFE7
 16975                           postdec1	equ	0xFE5
 16976                           plusw1	equ	0xFE3
 16977                           fsr1h	equ	0xFE2
 16978                           fsr1l	equ	0xFE1
 16979                           indf2	equ	0xFDF
 16980                           postinc2	equ	0xFDE
 16981                           postdec2	equ	0xFDD
 16982                           plusw2	equ	0xFDB
 16983                           fsr2h	equ	0xFDA
 16984                           fsr2l	equ	0xFD9
 16985                           status	equ	0xFD8
 16986                           
 16987 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16988 ;; Defined at:
 16989 ;;		line 1418 in file "usb_device.c"
 16990 ;; Parameters:    Size  Location     Type
 16991 ;;		None
 16992 ;; Auto vars:     Size  Location     Type
 16993 ;;		None
 16994 ;; Return value:  Size  Location     Type
 16995 ;;                  1    wreg      void 
 16996 ;; Registers used:
 16997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16998 ;; Tracked objects:
 16999 ;;		On entry : 0/0
 17000 ;;		On exit  : 0/0
 17001 ;;		Unchanged: 0/0
 17002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17007 ;;Total ram usage:        0 bytes
 17008 ;; Hardware stack levels used:    1
 17009 ;; This function calls:
 17010 ;;		Nothing
 17011 ;; This function is called by:
 17012 ;;		_USBDeviceTasks
 17013 ;;		_USBCtrlEPServiceComplete
 17014 ;;		_USBCtrlTrfRxService
 17015 ;; This function uses a non-reentrant model
 17016 ;;
 17017                           
 17018                           	psect	text79
 17019  006CCC                     __ptext79:
 17020                           	opt stack 0
 17021  006CCC                     _USBCtrlEPAllowStatusStage:
 17022                           	opt stack 26
 17023                           
 17024                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 17025                           
 17026                           ;incstack = 0
 17027  006CCC  0100               	movlb	0	; () banked
 17028  006CCE  51F1               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 17029  006CD0  A4D8               	btfss	status,2,c
 17030  006CD2  0012               	return	
 17031                           
 17032                           ; BSR set to: 0
 17033                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 17034  006CD4  0E01               	movlw	1
 17035  006CD6  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17036                           
 17037                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 17038  006CD8  51F0               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 17039  006CDA  A4D8               	btfss	status,2,c
 17040  006CDC  0012               	return	
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 17044  006CDE  0E01               	movlw	1
 17045  006CE0  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17046                           
 17047                           ; BSR set to: 0
 17048                           ;usb_device.c: 1434: if(controlTransferState == 2)
 17049  006CE2  0E02               	movlw	2
 17050  006CE4  19F6               	xorwf	_controlTransferState& (0+255),w,b
 17051  006CE6  A4D8               	btfss	status,2,c
 17052  006CE8  D015               	goto	l202
 17053                           
 17054                           ; BSR set to: 0
 17055                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 17056  006CEA  EE20 F001          	lfsr	2,1
 17057  006CEE  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 17058  006CF0  26D9               	addwf	fsr2l,f,c
 17059  006CF2  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17060  006CF4  22DA               	addwfc	fsr2h,f,c
 17061  006CF6  0E00               	movlw	0
 17062  006CF8  6EDF               	movwf	indf2,c
 17063                           
 17064                           ; BSR set to: 0
 17065                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17066  006CFA  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17067  006CFE  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17068  006D02  0E48               	movlw	72
 17069  006D04  6EDF               	movwf	indf2,c
 17070                           
 17071                           ; BSR set to: 0
 17072                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17073  006D06  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17074  006D0A  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17075  006D0E  0E00               	movlw	0
 17076  006D10  8EDB               	bsf	plusw2,7,c
 17077                           
 17078                           ;usb_device.c: 1439: }
 17079  006D12  0012               	return	
 17080  006D14                     l202:
 17081                           
 17082                           ; BSR set to: 0
 17083                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 17084                           
 17085                           ; BSR set to: 0
 17086  006D14  05F6               	decf	_controlTransferState& (0+255),w,b
 17087  006D16  A4D8               	btfss	status,2,c
 17088  006D18  0012               	return	
 17089                           
 17090                           ; BSR set to: 0
 17091                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 17092  006D1A  0E00               	movlw	0
 17093  006D1C  0101               	movlb	1	; () banked
 17094  006D1E  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17095                           
 17096                           ; BSR set to: 1
 17097                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 17098  006D20  0100               	movlb	0	; () banked
 17099  006D22  EE20 F001          	lfsr	2,1
 17100  006D26  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17101  006D28  26D9               	addwf	fsr2l,f,c
 17102  006D2A  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17103  006D2C  22DA               	addwfc	fsr2h,f,c
 17104  006D2E  0E08               	movlw	8
 17105  006D30  6EDF               	movwf	indf2,c
 17106                           
 17107                           ; BSR set to: 0
 17108                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 17109  006D32  EE20 F002          	lfsr	2,2
 17110  006D36  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17111  006D38  26D9               	addwf	fsr2l,f,c
 17112  006D3A  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17113  006D3C  22DA               	addwfc	fsr2h,f,c
 17114  006D3E  0E30               	movlw	48
 17115  006D40  6EDE               	movwf	postinc2,c
 17116  006D42  0E0D               	movlw	13
 17117  006D44  6EDD               	movwf	postdec2,c
 17118                           
 17119                           ; BSR set to: 0
 17120                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 17121  006D46  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17122  006D4A  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17123  006D4E  0E04               	movlw	4
 17124  006D50  6EDF               	movwf	indf2,c
 17125                           
 17126                           ; BSR set to: 0
 17127                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 17128  006D52  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17129  006D56  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17130  006D5A  0E00               	movlw	0
 17131  006D5C  8EDB               	bsf	plusw2,7,c
 17132                           
 17133                           ; BSR set to: 0
 17134                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 17135  006D5E  0E01               	movlw	1
 17136  006D60  0101               	movlb	1	; () banked
 17137  006D62  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17138                           
 17139                           ; BSR set to: 1
 17140                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 17141  006D64  0100               	movlb	0	; () banked
 17142  006D66  EE20 F001          	lfsr	2,1
 17143  006D6A  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17144  006D6C  26D9               	addwf	fsr2l,f,c
 17145  006D6E  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17146  006D70  22DA               	addwfc	fsr2h,f,c
 17147  006D72  0E08               	movlw	8
 17148  006D74  6EDF               	movwf	indf2,c
 17149                           
 17150                           ; BSR set to: 0
 17151                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17152  006D76  EE20 F002          	lfsr	2,2
 17153  006D7A  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17154  006D7C  26D9               	addwf	fsr2l,f,c
 17155  006D7E  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17156  006D80  22DA               	addwfc	fsr2h,f,c
 17157  006D82  0E30               	movlw	48
 17158  006D84  6EDE               	movwf	postinc2,c
 17159  006D86  0E0D               	movlw	13
 17160  006D88  6EDD               	movwf	postdec2,c
 17161                           
 17162                           ; BSR set to: 0
 17163                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 17164  006D8A  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17165  006D8E  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17166  006D92  0E80               	movlw	128
 17167  006D94  6EDF               	movwf	indf2,c
 17168                           
 17169                           ; BSR set to: 0
 17170                           
 17171                           ; BSR set to: 0
 17172                           
 17173                           ; BSR set to: 0
 17174  006D96  0012               	return	
 17175  006D98                     __end_of_USBCtrlEPAllowStatusStage:
 17176                           	opt stack 0
 17177                           tosu	equ	0xFFF
 17178                           tosh	equ	0xFFE
 17179                           tosl	equ	0xFFD
 17180                           pclath	equ	0xFFA
 17181                           tblptru	equ	0xFF8
 17182                           tblptrh	equ	0xFF7
 17183                           tblptrl	equ	0xFF6
 17184                           tablat	equ	0xFF5
 17185                           prodh	equ	0xFF4
 17186                           prodl	equ	0xFF3
 17187                           intcon	equ	0xFF2
 17188                           intcon2	equ	0xFF1
 17189                           intcon3	equ	0xFF0
 17190                           indf0	equ	0xFEF
 17191                           postinc0	equ	0xFEE
 17192                           fsr0h	equ	0xFEA
 17193                           fsr0l	equ	0xFE9
 17194                           wreg	equ	0xFE8
 17195                           indf1	equ	0xFE7
 17196                           postdec1	equ	0xFE5
 17197                           plusw1	equ	0xFE3
 17198                           fsr1h	equ	0xFE2
 17199                           fsr1l	equ	0xFE1
 17200                           indf2	equ	0xFDF
 17201                           postinc2	equ	0xFDE
 17202                           postdec2	equ	0xFDD
 17203                           plusw2	equ	0xFDB
 17204                           fsr2h	equ	0xFDA
 17205                           fsr2l	equ	0xFD9
 17206                           status	equ	0xFD8
 17207                           
 17208 ;; *************** function _USBCtrlTrfInHandler *****************
 17209 ;; Defined at:
 17210 ;;		line 2594 in file "usb_device.c"
 17211 ;; Parameters:    Size  Location     Type
 17212 ;;		None
 17213 ;; Auto vars:     Size  Location     Type
 17214 ;;  lastDTS         1    1[COMRAM] unsigned char 
 17215 ;; Return value:  Size  Location     Type
 17216 ;;                  1    wreg      void 
 17217 ;; Registers used:
 17218 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17219 ;; Tracked objects:
 17220 ;;		On entry : 0/0
 17221 ;;		On exit  : 0/0
 17222 ;;		Unchanged: 0/0
 17223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17228 ;;Total ram usage:        1 bytes
 17229 ;; Hardware stack levels used:    1
 17230 ;; Hardware stack levels required when called:    1
 17231 ;; This function calls:
 17232 ;;		_USBCtrlTrfTxService
 17233 ;; This function is called by:
 17234 ;;		_USBCtrlEPService
 17235 ;; This function uses a non-reentrant model
 17236 ;;
 17237                           
 17238                           	psect	text80
 17239  006D98                     __ptext80:
 17240                           	opt stack 0
 17241  006D98                     _USBCtrlTrfInHandler:
 17242                           	opt stack 27
 17243                           
 17244                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 17245                           
 17246                           ; BSR set to: 0
 17247                           ;incstack = 0
 17248  006D98  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17249  006D9C  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17250  006DA0  0100               	movlb	0	; () banked
 17251  006DA2  0E00               	movlw	0
 17252  006DA4  BCDF               	btfsc	indf2,6,c
 17253  006DA6  0E01               	movlw	1
 17254  006DA8  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 17255                           
 17256                           ; BSR set to: 0
 17257                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17258  006DAA  0E04               	movlw	4
 17259  006DAC  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 17260  006DAE  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 17261  006DB0  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17262  006DB2  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17263                           
 17264                           ; BSR set to: 0
 17265                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 17266  006DB4  0E08               	movlw	8
 17267  006DB6  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 17268  006DB8  A4D8               	btfss	status,2,c
 17269  006DBA  D00D               	goto	l329
 17270                           
 17271                           ; BSR set to: 0
 17272                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 17273  006DBC  010D               	movlb	13	; () banked
 17274  006DBE  5132               	movf	50,w,b	;volatile
 17275  006DC0  0B7F               	andlw	127
 17276  006DC2  010F               	movlb	15	; () banked
 17277  006DC4  6F38               	movwf	56,b	;volatile
 17278                           
 17279                           ; BSR set to: 15
 17280                           ;usb_device.c: 2609: if(UADDR != 0u)
 17281  006DC6  5138               	movf	56,w,b	;volatile
 17282  006DC8  B4D8               	btfsc	status,2,c
 17283  006DCA  D002               	goto	l328
 17284                           
 17285                           ; BSR set to: 15
 17286                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 17287  006DCC  0E10               	movlw	16
 17288  006DCE  D001               	goto	L15
 17289  006DD0                     l328:
 17290                           
 17291                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 17292                           
 17293                           ; BSR set to: 0
 17294  006DD0  0E04               	movlw	4
 17295  006DD2                     L15:
 17296  006DD2  0100               	movlb	0	; () banked
 17297  006DD4  6FF8               	movwf	_USBDeviceState& (0+255),b
 17298  006DD6                     l329:
 17299                           
 17300                           ; BSR set to: 0
 17301                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 17302                           
 17303                           ; BSR set to: 0
 17304                           
 17305                           ; BSR set to: 0
 17306  006DD6  05F6               	decf	_controlTransferState& (0+255),w,b
 17307  006DD8  A4D8               	btfss	status,2,c
 17308  006DDA  D03B               	goto	l330
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 17312  006DDC  EE20 F002          	lfsr	2,2
 17313  006DE0  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 17314  006DE2  26D9               	addwf	fsr2l,f,c
 17315  006DE4  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17316  006DE6  22DA               	addwfc	fsr2h,f,c
 17317  006DE8  0E38               	movlw	56
 17318  006DEA  6EDE               	movwf	postinc2,c
 17319  006DEC  0E0D               	movlw	13
 17320  006DEE  6EDD               	movwf	postdec2,c
 17321                           
 17322                           ; BSR set to: 0
 17323                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 17324  006DF0  EC95  F035         	call	_USBCtrlTrfTxService	;wreg free
 17325                           
 17326                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 17327  006DF4  0E02               	movlw	2
 17328  006DF6  0100               	movlb	0	; () banked
 17329  006DF8  19F7               	xorwf	_shortPacketStatus& (0+255),w,b
 17330  006DFA  A4D8               	btfss	status,2,c
 17331  006DFC  D00D               	goto	l331
 17332                           
 17333                           ; BSR set to: 0
 17334                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 17335  006DFE  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17336  006E02  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17337  006E06  0E04               	movlw	4
 17338  006E08  6EDF               	movwf	indf2,c
 17339                           
 17340                           ; BSR set to: 0
 17341                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17342  006E0A  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17343  006E0E  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17344  006E12  0E00               	movlw	0
 17345  006E14  8EDB               	bsf	plusw2,7,c
 17346                           
 17347                           ;usb_device.c: 2635: }
 17348  006E16  0012               	return	
 17349  006E18                     l331:
 17350                           
 17351                           ; BSR set to: 0
 17352                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 17353                           
 17354                           ; BSR set to: 0
 17355  006E18  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 17356  006E1A  A4D8               	btfss	status,2,c
 17357  006E1C  D00D               	goto	l333
 17358                           
 17359                           ; BSR set to: 0
 17360                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 17361  006E1E  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17362  006E22  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17363  006E26  0E48               	movlw	72
 17364  006E28  6EDF               	movwf	indf2,c
 17365                           
 17366                           ; BSR set to: 0
 17367                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17368  006E2A  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17369  006E2E  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17370  006E32  0E00               	movlw	0
 17371  006E34  8EDB               	bsf	plusw2,7,c
 17372                           
 17373                           ;usb_device.c: 2642: }
 17374  006E36  0012               	return	
 17375  006E38                     l333:
 17376                           
 17377                           ; BSR set to: 0
 17378                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 17379                           
 17380                           ; BSR set to: 0
 17381  006E38  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17382  006E3C  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17383  006E40  0E08               	movlw	8
 17384  006E42  6EDF               	movwf	indf2,c
 17385                           
 17386                           ; BSR set to: 0
 17387                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17388  006E44  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17389  006E48  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17390  006E4C  0E00               	movlw	0
 17391  006E4E  8EDB               	bsf	plusw2,7,c
 17392                           
 17393                           ; BSR set to: 0
 17394                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 17395                           
 17396                           ; BSR set to: 0
 17397  006E50  0012               	return	
 17398  006E52                     l330:
 17399                           
 17400                           ; BSR set to: 0
 17401                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 17402  006E52  0101               	movlb	1	; () banked
 17403  006E54  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 17404                           
 17405                           ; BSR set to: 1
 17406                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 17407                           
 17408                           ; BSR set to: 1
 17409  006E56  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17410                           
 17411                           ; BSR set to: 1
 17412                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 17413                           
 17414                           ; BSR set to: 1
 17415  006E58  0E00               	movlw	0
 17416  006E5A  0100               	movlb	0	; () banked
 17417  006E5C  6FF6               	movwf	_controlTransferState& (0+255),b
 17418  006E5E  0012               	return	
 17419  006E60                     __end_of_USBCtrlTrfInHandler:
 17420                           	opt stack 0
 17421                           tosu	equ	0xFFF
 17422                           tosh	equ	0xFFE
 17423                           tosl	equ	0xFFD
 17424                           pclath	equ	0xFFA
 17425                           tblptru	equ	0xFF8
 17426                           tblptrh	equ	0xFF7
 17427                           tblptrl	equ	0xFF6
 17428                           tablat	equ	0xFF5
 17429                           prodh	equ	0xFF4
 17430                           prodl	equ	0xFF3
 17431                           intcon	equ	0xFF2
 17432                           intcon2	equ	0xFF1
 17433                           intcon3	equ	0xFF0
 17434                           indf0	equ	0xFEF
 17435                           postinc0	equ	0xFEE
 17436                           fsr0h	equ	0xFEA
 17437                           fsr0l	equ	0xFE9
 17438                           wreg	equ	0xFE8
 17439                           indf1	equ	0xFE7
 17440                           postdec1	equ	0xFE5
 17441                           plusw1	equ	0xFE3
 17442                           fsr1h	equ	0xFE2
 17443                           fsr1l	equ	0xFE1
 17444                           indf2	equ	0xFDF
 17445                           postinc2	equ	0xFDE
 17446                           postdec2	equ	0xFDD
 17447                           plusw2	equ	0xFDB
 17448                           fsr2h	equ	0xFDA
 17449                           fsr2l	equ	0xFD9
 17450                           status	equ	0xFD8
 17451                           
 17452 ;; *************** function _USBCtrlTrfTxService *****************
 17453 ;; Defined at:
 17454 ;;		line 1773 in file "usb_device.c"
 17455 ;; Parameters:    Size  Location     Type
 17456 ;;		None
 17457 ;; Auto vars:     Size  Location     Type
 17458 ;;  byteToSend      1    0[COMRAM] unsigned char 
 17459 ;; Return value:  Size  Location     Type
 17460 ;;                  1    wreg      void 
 17461 ;; Registers used:
 17462 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17463 ;; Tracked objects:
 17464 ;;		On entry : 0/0
 17465 ;;		On exit  : 0/0
 17466 ;;		Unchanged: 0/0
 17467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17472 ;;Total ram usage:        1 bytes
 17473 ;; Hardware stack levels used:    1
 17474 ;; This function calls:
 17475 ;;		Nothing
 17476 ;; This function is called by:
 17477 ;;		_USBCtrlEPAllowDataStage
 17478 ;;		_USBCtrlTrfInHandler
 17479 ;; This function uses a non-reentrant model
 17480 ;;
 17481                           
 17482                           	psect	text81
 17483  006B2A                     __ptext81:
 17484                           	opt stack 0
 17485  006B2A                     _USBCtrlTrfTxService:
 17486                           	opt stack 25
 17487                           
 17488                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 17489                           
 17490                           ; BSR set to: 0
 17491                           ;incstack = 0
 17492  006B2A  0E08               	movlw	8
 17493  006B2C  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 17494                           
 17495                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 17496  006B2E  0100               	movlb	0	; () banked
 17497  006B30  51D0               	movf	(_inPipes+5)& (0+255),w,b
 17498  006B32  E110               	bnz	l11952
 17499  006B34  0E08               	movlw	8
 17500  006B36  5DCF               	subwf	(_inPipes+4)& (0+255),w,b
 17501  006B38  B0D8               	btfsc	status,0,c
 17502  006B3A  D00C               	goto	l235
 17503                           
 17504                           ; BSR set to: 0
 17505                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 17506  006B3C  C0CF  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 17507                           
 17508                           ; BSR set to: 0
 17509                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 17510  006B40  51F7               	movf	_shortPacketStatus& (0+255),w,b
 17511  006B42  A4D8               	btfss	status,2,c
 17512  006B44  D002               	goto	l233
 17513                           
 17514                           ; BSR set to: 0
 17515                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 17516  006B46  0E01               	movlw	1
 17517  006B48  D004               	goto	L16
 17518  006B4A                     l233:
 17519                           
 17520                           ; BSR set to: 0
 17521                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 17522                           
 17523                           ; BSR set to: 0
 17524  006B4A  05F7               	decf	_shortPacketStatus& (0+255),w,b
 17525  006B4C  A4D8               	btfss	status,2,c
 17526  006B4E  D002               	goto	l235
 17527                           
 17528                           ; BSR set to: 0
 17529                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 17530  006B50  0E02               	movlw	2
 17531  006B52                     L16:
 17532  006B52  6FF7               	movwf	_shortPacketStatus& (0+255),b
 17533  006B54                     l235:
 17534  006B54                     l11952:
 17535                           
 17536                           ; BSR set to: 0
 17537                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 17538  006B54  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17539  006B56  5FCF               	subwf	(_inPipes+4)& (0+255),f,b
 17540  006B58  0E00               	movlw	0
 17541  006B5A  5BD0               	subwfb	(_inPipes+5)& (0+255),f,b
 17542                           
 17543                           ; BSR set to: 0
 17544                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 17545  006B5C  EE20 F001          	lfsr	2,1
 17546  006B60  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 17547  006B62  26D9               	addwf	fsr2l,f,c
 17548  006B64  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17549  006B66  22DA               	addwfc	fsr2h,f,c
 17550  006B68  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 17551                           
 17552                           ; BSR set to: 0
 17553                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 17554  006B6C  0E38               	movlw	56
 17555  006B6E  0101               	movlb	1	; () banked
 17556  006B70  6F88               	movwf	_pDst& (0+255),b
 17557  006B72  0E0D               	movlw	13
 17558  006B74  6F89               	movwf	(_pDst+1)& (0+255),b
 17559                           
 17560                           ; BSR set to: 1
 17561                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17562  006B76  0100               	movlb	0	; () banked
 17563  006B78  A1CE               	btfss	(_inPipes+3)& (0+255),0,b
 17564  006B7A  D01D               	goto	l237
 17565  006B7C  D03C               	goto	l241
 17566  006B7E                     
 17567                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 17568                           
 17569                           ; BSR set to: 0
 17570  006B7E  C0CB  FFF6         	movff	_inPipes,tblptrl
 17571  006B82  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 17572  006B86  6AF8               	clrf	tblptru,c
 17573  006B88  C188  FFD9         	movff	_pDst,fsr2l
 17574  006B8C  C189  FFDA         	movff	_pDst+1,fsr2h
 17575  006B90  0E0E               	movlw	(high __ramtop+-1)
 17576  006B92  64F7               	cpfsgt	tblptrh,c
 17577  006B94  D003               	bra	u8877
 17578  006B96  0008               	tblrd		*
 17579  006B98  50F5               	movf	tablat,w,c
 17580  006B9A  D005               	bra	u8870
 17581  006B9C                     u8877:
 17582  006B9C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17583  006BA0  CFF7 FFEA          	movff	tblptrh,fsr0h
 17584  006BA4  50EF               	movf	indf0,w,c
 17585  006BA6                     u8870:
 17586  006BA6  6EDF               	movwf	indf2,c
 17587  006BA8  0100               	movlb	0	; () banked
 17588  006BAA  4BCB               	infsnz	_inPipes& (0+255),f,b
 17589  006BAC  2BCC               	incf	(_inPipes+1)& (0+255),f,b
 17590                           
 17591                           ; BSR set to: 0
 17592  006BAE  0101               	movlb	1	; () banked
 17593  006BB0  4B88               	infsnz	_pDst& (0+255),f,b
 17594  006BB2  2B89               	incf	(_pDst+1)& (0+255),f,b
 17595                           
 17596                           ; BSR set to: 1
 17597                           ;usb_device.c: 1816: byteToSend--;
 17598  006BB4  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17599  006BB6                     l237:
 17600                           
 17601                           ; BSR set to: 1
 17602  006BB6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17603  006BB8  B4D8               	btfsc	status,2,c
 17604  006BBA  0012               	return	
 17605  006BBC  D7E0               	goto	l238
 17606  006BBE                     
 17607                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 17608  006BBE  C0CB  FFF6         	movff	_inPipes,tblptrl
 17609  006BC2  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 17610  006BC6  6AF8               	clrf	tblptru,c
 17611  006BC8  C188  FFD9         	movff	_pDst,fsr2l
 17612  006BCC  C189  FFDA         	movff	_pDst+1,fsr2h
 17613  006BD0  0E0E               	movlw	(high __ramtop+-1)
 17614  006BD2  64F7               	cpfsgt	tblptrh,c
 17615  006BD4  D003               	bra	u8897
 17616  006BD6  0008               	tblrd		*
 17617  006BD8  50F5               	movf	tablat,w,c
 17618  006BDA  D005               	bra	u8890
 17619  006BDC                     u8897:
 17620  006BDC  CFF6 FFE9          	movff	tblptrl,fsr0l
 17621  006BE0  CFF7 FFEA          	movff	tblptrh,fsr0h
 17622  006BE4  50EF               	movf	indf0,w,c
 17623  006BE6                     u8890:
 17624  006BE6  6EDF               	movwf	indf2,c
 17625  006BE8  0100               	movlb	0	; () banked
 17626  006BEA  4BCB               	infsnz	_inPipes& (0+255),f,b
 17627  006BEC  2BCC               	incf	(_inPipes+1)& (0+255),f,b
 17628                           
 17629                           ; BSR set to: 0
 17630  006BEE  0101               	movlb	1	; () banked
 17631  006BF0  4B88               	infsnz	_pDst& (0+255),f,b
 17632  006BF2  2B89               	incf	(_pDst+1)& (0+255),f,b
 17633                           
 17634                           ; BSR set to: 1
 17635                           ;usb_device.c: 1824: byteToSend--;
 17636  006BF4  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17637  006BF6                     l241:
 17638                           
 17639                           ; BSR set to: 1
 17640  006BF6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17641  006BF8  B4D8               	btfsc	status,2,c
 17642  006BFA  0012               	return	
 17643  006BFC  D7E0               	goto	l242
 17644  006BFE                     __end_of_USBCtrlTrfTxService:
 17645                           	opt stack 0
 17646                           tosu	equ	0xFFF
 17647                           tosh	equ	0xFFE
 17648                           tosl	equ	0xFFD
 17649                           pclath	equ	0xFFA
 17650                           tblptru	equ	0xFF8
 17651                           tblptrh	equ	0xFF7
 17652                           tblptrl	equ	0xFF6
 17653                           tablat	equ	0xFF5
 17654                           prodh	equ	0xFF4
 17655                           prodl	equ	0xFF3
 17656                           intcon	equ	0xFF2
 17657                           intcon2	equ	0xFF1
 17658                           intcon3	equ	0xFF0
 17659                           indf0	equ	0xFEF
 17660                           postinc0	equ	0xFEE
 17661                           fsr0h	equ	0xFEA
 17662                           fsr0l	equ	0xFE9
 17663                           wreg	equ	0xFE8
 17664                           indf1	equ	0xFE7
 17665                           postdec1	equ	0xFE5
 17666                           plusw1	equ	0xFE3
 17667                           fsr1h	equ	0xFE2
 17668                           fsr1l	equ	0xFE1
 17669                           indf2	equ	0xFDF
 17670                           postinc2	equ	0xFDE
 17671                           postdec2	equ	0xFDD
 17672                           plusw2	equ	0xFDB
 17673                           fsr2h	equ	0xFDA
 17674                           fsr2l	equ	0xFD9
 17675                           status	equ	0xFD8
 17676                           
 17677 ;; *************** function _APP_DeviceMSDTasks *****************
 17678 ;; Defined at:
 17679 ;;		line 110 in file "app_device_msd.c"
 17680 ;; Parameters:    Size  Location     Type
 17681 ;;		None
 17682 ;; Auto vars:     Size  Location     Type
 17683 ;;		None
 17684 ;; Return value:  Size  Location     Type
 17685 ;;                  1    wreg      void 
 17686 ;; Registers used:
 17687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17688 ;; Tracked objects:
 17689 ;;		On entry : 0/0
 17690 ;;		On exit  : 0/0
 17691 ;;		Unchanged: 0/0
 17692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17697 ;;Total ram usage:        0 bytes
 17698 ;; Hardware stack levels used:    1
 17699 ;; Hardware stack levels required when called:   11
 17700 ;; This function calls:
 17701 ;;		_MSDTasks
 17702 ;; This function is called by:
 17703 ;;		_main
 17704 ;; This function uses a non-reentrant model
 17705 ;;
 17706                           
 17707                           	psect	text82
 17708  009BC2                     __ptext82:
 17709                           	opt stack 0
 17710  009BC2                     _APP_DeviceMSDTasks:
 17711                           	opt stack 19
 17712                           
 17713                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 17714                           
 17715                           ;incstack = 0
 17716  009BC2  0E20               	movlw	32
 17717  009BC4  0100               	movlb	0	; () banked
 17718  009BC6  61F8               	cpfslt	_USBDeviceState& (0+255),b
 17719  009BC8  D001               	goto	l1008
 17720  009BCA  0012               	return	
 17721  009BCC                     l1008:
 17722                           
 17723                           ; BSR set to: 0
 17724                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 17725  009BCC  B265               	btfsc	3941,1,c	;volatile
 17726  009BCE  0012               	return	
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 17730                           
 17731                           ; BSR set to: 0
 17732                           
 17733                           ; BSR set to: 0
 17734                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 17735  009BD0  EC54  F011         	call	_MSDTasks	;wreg free
 17736  009BD4  0012               	return		;funcret
 17737  009BD6                     __end_of_APP_DeviceMSDTasks:
 17738                           	opt stack 0
 17739                           tosu	equ	0xFFF
 17740                           tosh	equ	0xFFE
 17741                           tosl	equ	0xFFD
 17742                           pclath	equ	0xFFA
 17743                           tblptru	equ	0xFF8
 17744                           tblptrh	equ	0xFF7
 17745                           tblptrl	equ	0xFF6
 17746                           tablat	equ	0xFF5
 17747                           prodh	equ	0xFF4
 17748                           prodl	equ	0xFF3
 17749                           intcon	equ	0xFF2
 17750                           intcon2	equ	0xFF1
 17751                           intcon3	equ	0xFF0
 17752                           indf0	equ	0xFEF
 17753                           postinc0	equ	0xFEE
 17754                           fsr0h	equ	0xFEA
 17755                           fsr0l	equ	0xFE9
 17756                           wreg	equ	0xFE8
 17757                           indf1	equ	0xFE7
 17758                           postdec1	equ	0xFE5
 17759                           plusw1	equ	0xFE3
 17760                           fsr1h	equ	0xFE2
 17761                           fsr1l	equ	0xFE1
 17762                           indf2	equ	0xFDF
 17763                           postinc2	equ	0xFDE
 17764                           postdec2	equ	0xFDD
 17765                           plusw2	equ	0xFDB
 17766                           fsr2h	equ	0xFDA
 17767                           fsr2l	equ	0xFD9
 17768                           status	equ	0xFD8
 17769                           
 17770 ;; *************** function _MSDTasks *****************
 17771 ;; Defined at:
 17772 ;;		line 335 in file "usb_device_msd.c"
 17773 ;; Parameters:    Size  Location     Type
 17774 ;;		None
 17775 ;; Auto vars:     Size  Location     Type
 17776 ;;  i               1   81[COMRAM] unsigned char 
 17777 ;; Return value:  Size  Location     Type
 17778 ;;                  1    wreg      unsigned char 
 17779 ;; Registers used:
 17780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17781 ;; Tracked objects:
 17782 ;;		On entry : 0/0
 17783 ;;		On exit  : 0/0
 17784 ;;		Unchanged: 0/0
 17785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17787 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17789 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17790 ;;Total ram usage:        6 bytes
 17791 ;; Hardware stack levels used:    1
 17792 ;; Hardware stack levels required when called:   10
 17793 ;; This function calls:
 17794 ;;		_MSDProcessCommand
 17795 ;;		_USBStallEndpoint
 17796 ;;		_USBTransferOnePacket
 17797 ;; This function is called by:
 17798 ;;		_APP_DeviceMSDTasks
 17799 ;; This function uses a non-reentrant model
 17800 ;;
 17801                           
 17802                           	psect	text83
 17803  0022A8                     __ptext83:
 17804                           	opt stack 0
 17805  0022A8                     _MSDTasks:
 17806                           	opt stack 19
 17807                           
 17808                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 17809                           
 17810                           ;incstack = 0
 17811  0022A8  0E20               	movlw	32
 17812  0022AA  0100               	movlb	0	; () banked
 17813  0022AC  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 17814  0022AE  A4D8               	btfss	status,2,c
 17815  0022B0  0012               	return	
 17816  0022B2  D115               	goto	l554
 17817  0022B4                     
 17818                           ; BSR set to: 0
 17819                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 17820                           
 17821                           ; BSR set to: 0
 17822  0022B4  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17823  0022B6  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17824  0022B8  B4D8               	btfsc	status,2,c
 17825  0022BA  D006               	goto	u12660
 17826                           
 17827                           ; BSR set to: 0
 17828  0022BC  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17829  0022C0  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17830  0022C4  BEDF               	btfsc	indf2,7,c
 17831  0022C6  0012               	return	
 17832  0022C8                     u12660:
 17833                           
 17834                           ; BSR set to: 0
 17835                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 17836                           
 17837                           ; BSR set to: 0
 17838  0022C8  0E00               	movlw	0
 17839  0022CA  6E52               	movwf	MSDTasks@i,c
 17840  0022CC                     l15504:
 17841                           
 17842                           ; BSR set to: 0
 17843  0022CC  0E1E               	movlw	30
 17844  0022CE  6452               	cpfsgt	MSDTasks@i,c
 17845  0022D0  D001               	goto	l559
 17846  0022D2  D014               	goto	u12680
 17847  0022D4                     l559:
 17848                           
 17849                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 17850                           
 17851                           ; BSR set to: 0
 17852  0022D4  5052               	movf	MSDTasks@i,w,c
 17853  0022D6  0D01               	mullw	1
 17854  0022D8  0E40               	movlw	64
 17855  0022DA  24F3               	addwf	prodl,w,c
 17856  0022DC  6ED9               	movwf	fsr2l,c
 17857  0022DE  0E0D               	movlw	13
 17858  0022E0  20F4               	addwfc	prodh,w,c
 17859  0022E2  6EDA               	movwf	fsr2h,c
 17860  0022E4  5052               	movf	MSDTasks@i,w,c
 17861  0022E6  0D01               	mullw	1
 17862  0022E8  0E00               	movlw	low _gblCBW
 17863  0022EA  24F3               	addwf	prodl,w,c
 17864  0022EC  6EE1               	movwf	fsr1l,c
 17865  0022EE  0E01               	movlw	high _gblCBW
 17866  0022F0  20F4               	addwfc	prodh,w,c
 17867  0022F2  6EE2               	movwf	fsr1h,c
 17868  0022F4  CFDF FFE7          	movff	indf2,indf1
 17869  0022F8  2A52               	incf	MSDTasks@i,f,c
 17870  0022FA  D7E8               	goto	l15504
 17871  0022FC                     u12680:
 17872                           
 17873                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 17874  0022FC  0100               	movlb	0	; () banked
 17875  0022FE  EE20 F001          	lfsr	2,1
 17876  002302  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17877  002304  26D9               	addwf	fsr2l,f,c
 17878  002306  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 17879  002308  22DA               	addwfc	fsr2h,f,c
 17880  00230A  0E1F               	movlw	31
 17881  00230C  18DE               	xorwf	postinc2,w,c
 17882  00230E  A4D8               	btfss	status,2,c
 17883  002310  D070               	goto	l561
 17884                           
 17885                           ; BSR set to: 0
 17886  002312  0E55               	movlw	85
 17887  002314  0101               	movlb	1	; () banked
 17888  002316  1900               	xorwf	_gblCBW& (0+255),w,b
 17889  002318  E16C               	bnz	l561
 17890  00231A  0E53               	movlw	83
 17891  00231C  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 17892  00231E  E169               	bnz	l561
 17893  002320  0E42               	movlw	66
 17894  002322  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 17895  002324  E166               	bnz	l15554
 17896  002326  0E43               	movlw	67
 17897  002328  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 17898  00232A  A4D8               	btfss	status,2,c
 17899  00232C  D062               	goto	l561
 17900                           
 17901                           ; BSR set to: 1
 17902                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 17903  00232E  0E01               	movlw	1
 17904  002330  6F8E               	movwf	_MSDCBWValid& (0+255),b
 17905                           
 17906                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 17907  002332  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17908  002334  A4D8               	btfss	status,2,c
 17909  002336  D052               	goto	l562
 17910                           
 17911                           ; BSR set to: 1
 17912  002338  0E11               	movlw	17
 17913  00233A  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 17914  00233C  D04F               	goto	l562
 17915                           
 17916                           ; BSR set to: 1
 17917  00233E  510E               	movf	(_gblCBW+14)& (0+255),w,b
 17918  002340  B4D8               	btfsc	status,2,c
 17919  002342  D04C               	goto	l562
 17920                           
 17921                           ; BSR set to: 1
 17922  002344  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 17923  002348  0E3F               	movlw	63
 17924  00234A  164D               	andwf	??_MSDTasks,f,c
 17925  00234C  A4D8               	btfss	status,2,c
 17926  00234E  D046               	goto	l562
 17927                           
 17928                           ; BSR set to: 1
 17929                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 17930  002350  0E55               	movlw	85
 17931  002352  010D               	movlb	13	; () banked
 17932  002354  6F80               	movwf	128,b	;volatile
 17933  002356  0E53               	movlw	83
 17934  002358  6F81               	movwf	129,b	;volatile
 17935  00235A  0E42               	movlw	66
 17936  00235C  6F82               	movwf	130,b	;volatile
 17937  00235E  0E53               	movlw	83
 17938  002360  6F83               	movwf	131,b	;volatile
 17939                           
 17940                           ; BSR set to: 13
 17941                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 17942  002362  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 17943  002366  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 17944  00236A  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 17945  00236E  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 17946                           
 17947                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 17948  002372  0E00               	movlw	0
 17949  002374  6F88               	movwf	136,b	;volatile
 17950  002376  0E00               	movlw	0
 17951  002378  6F89               	movwf	137,b	;volatile
 17952  00237A  0E00               	movlw	0
 17953  00237C  6F8A               	movwf	138,b	;volatile
 17954  00237E  0E00               	movlw	0
 17955  002380  6F8B               	movwf	139,b	;volatile
 17956                           
 17957                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 17958  002382  0E00               	movlw	0
 17959  002384  6F8C               	movwf	140,b	;volatile
 17960                           
 17961                           ; BSR set to: 13
 17962                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 17963  002386  0100               	movlb	0	; () banked
 17964  002388  69EC               	setf	_MSDCommandState& (0+255),b
 17965                           
 17966                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 17967  00238A  0E00               	movlw	0
 17968  00238C  6FEB               	movwf	_MSDReadState& (0+255),b
 17969                           
 17970                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 17971  00238E  0E00               	movlw	0
 17972  002390  6FEA               	movwf	_MSDWriteState& (0+255),b
 17973                           
 17974                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 17975  002392  0E00               	movlw	0
 17976  002394  6FE9               	movwf	_MSDRetryAttempt& (0+255),b
 17977                           
 17978                           ; BSR set to: 0
 17979                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 17980  002396  0E03               	movlw	3
 17981  002398  0101               	movlb	1	; () banked
 17982  00239A  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 17983  00239C  B4D8               	btfsc	status,2,c
 17984  00239E  D008               	goto	l563
 17985                           
 17986                           ; BSR set to: 1
 17987                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 17988  0023A0  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 17989  0023A2  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 17990  0023A4  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 17991  0023A6  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 17992                           
 17993                           ; BSR set to: 1
 17994                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 17995  0023A8  0E00               	movlw	0
 17996  0023AA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 17997                           
 17998                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 17999  0023AC  0E00               	movlw	0
 18000  0023AE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18001  0023B0                     l563:
 18002                           
 18003                           ; BSR set to: 1
 18004                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 18005                           
 18006                           ; BSR set to: 1
 18007  0023B0  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 18008  0023B2  D002               	goto	l564
 18009                           
 18010                           ; BSR set to: 1
 18011                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 18012  0023B4  0E01               	movlw	1
 18013  0023B6  D001               	goto	L17
 18014  0023B8                     l564:
 18015                           
 18016                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 18017                           
 18018                           ; BSR set to: 0
 18019  0023B8  0E02               	movlw	2
 18020  0023BA                     L17:
 18021  0023BA  0100               	movlb	0	; () banked
 18022  0023BC  6FED               	movwf	_MSD_State& (0+255),b
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 18026                           
 18027                           ; BSR set to: 0
 18028  0023BE  0101               	movlb	1	; () banked
 18029  0023C0  5108               	movf	(_gblCBW+8)& (0+255),w,b
 18030  0023C2  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18031  0023C4  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18032  0023C6  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 18033  0023C8  B4D8               	btfsc	status,2,c
 18034  0023CA  D002               	goto	l566
 18035                           
 18036                           ; BSR set to: 1
 18037                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 18038  0023CC  0E00               	movlw	0
 18039  0023CE  D001               	goto	L18
 18040  0023D0                     l566:
 18041                           
 18042                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 18043                           
 18044                           ; BSR set to: 0
 18045  0023D0  0E01               	movlw	1
 18046  0023D2                     L18:
 18047  0023D2  0100               	movlb	0	; () banked
 18048  0023D4  6FE7               	movwf	_MSDHostNoData& (0+255),b
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 18052                           
 18053                           ; BSR set to: 0
 18054  0023D6  C10F  F0EC         	movff	_gblCBW+15,_MSDCommandState
 18055                           
 18056                           ;usb_device_msd.c: 454: }
 18057  0023DA  0012               	return	
 18058  0023DC                     l562:
 18059                           
 18060                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 18061                           
 18062                           ; BSR set to: 0
 18063  0023DC  0E01               	movlw	1
 18064  0023DE  6E01               	movwf	USBStallEndpoint@dir,c
 18065  0023E0  0E02               	movlw	2
 18066  0023E2  EC30  F02B         	call	_USBStallEndpoint
 18067                           
 18068                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 18069  0023E6  0E00               	movlw	0
 18070  0023E8  6E01               	movwf	USBStallEndpoint@dir,c
 18071  0023EA  0E02               	movlw	2
 18072  0023EC  EC30  F02B         	call	_USBStallEndpoint
 18073                           
 18074                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 18075  0023F0  0012               	return	
 18076  0023F2                     l561:
 18077  0023F2                     l15554:
 18078                           
 18079                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 18080  0023F2  0E01               	movlw	1
 18081  0023F4  6E01               	movwf	USBStallEndpoint@dir,c
 18082  0023F6  0E02               	movlw	2
 18083  0023F8  EC30  F02B         	call	_USBStallEndpoint
 18084                           
 18085                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 18086  0023FC  0E00               	movlw	0
 18087  0023FE  6E01               	movwf	USBStallEndpoint@dir,c
 18088  002400  0E02               	movlw	2
 18089  002402  EC30  F02B         	call	_USBStallEndpoint
 18090                           
 18091                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 18092  002406  0E00               	movlw	0
 18093  002408  0101               	movlb	1	; () banked
 18094  00240A  6F8E               	movwf	_MSDCBWValid& (0+255),b
 18095                           
 18096                           ; BSR set to: 1
 18097                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 18098                           
 18099                           ; BSR set to: 1
 18100  00240C  0012               	return	
 18101  00240E                     
 18102                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 18103                           
 18104                           ; BSR set to: 1
 18105  00240E  EC22  F02A         	call	_MSDProcessCommand	;wreg free
 18106  002412  0AFF               	xorlw	255
 18107  002414  A4D8               	btfss	status,2,c
 18108  002416  0012               	return	
 18109                           
 18110                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 18111  002418  0E03               	movlw	3
 18112  00241A  0100               	movlb	0	; () banked
 18113  00241C  6FED               	movwf	_MSD_State& (0+255),b
 18114                           
 18115                           ; BSR set to: 0
 18116                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 18117  00241E  0012               	return	
 18118  002420                     
 18119                           ; BSR set to: 0
 18120                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 18121                           
 18122                           ; BSR set to: 0
 18123  002420  EC22  F02A         	call	_MSDProcessCommand	;wreg free
 18124  002424  0AFF               	xorlw	255
 18125  002426  A4D8               	btfss	status,2,c
 18126  002428  0012               	return	
 18127                           
 18128                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 18129  00242A  010D               	movlb	13	; () banked
 18130  00242C  518C               	movf	140,w,b	;volatile
 18131  00242E  A4D8               	btfss	status,2,c
 18132  002430  D008               	goto	l575
 18133                           
 18134                           ; BSR set to: 13
 18135  002432  5188               	movf	136,w,b	;volatile
 18136  002434  1189               	iorwf	137,w,b	;volatile
 18137  002436  118A               	iorwf	138,w,b	;volatile
 18138  002438  118B               	iorwf	139,w,b	;volatile
 18139  00243A  B4D8               	btfsc	status,2,c
 18140  00243C  D002               	goto	l575
 18141                           
 18142                           ; BSR set to: 13
 18143                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 18144  00243E  0E02               	movlw	2
 18145  002440  6F8C               	movwf	140,b	;volatile
 18146  002442                     l575:
 18147                           
 18148                           ; BSR set to: 13
 18149                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 18150  002442  0E03               	movlw	3
 18151  002444  0100               	movlb	0	; () banked
 18152  002446  6FED               	movwf	_MSD_State& (0+255),b
 18153                           
 18154                           ; BSR set to: 0
 18155                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 18156  002448  0012               	return	
 18157  00244A                     
 18158                           ; BSR set to: 0
 18159                           
 18160                           ; BSR set to: 0
 18161  00244A  C0D5  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 18162  00244E  C0D6  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 18163                           
 18164                           ; BSR set to: 0
 18165                           
 18166                           ; BSR set to: 0
 18167                           
 18168                           ; BSR set to: 0
 18169  002452  504E               	movf	_MSDTasks$2372,w,c
 18170  002454  104F               	iorwf	_MSDTasks$2372+1,w,c
 18171  002456  B4D8               	btfsc	status,2,c
 18172  002458  D00A               	goto	l577
 18173                           
 18174                           ; BSR set to: 0
 18175  00245A  C0D5  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 18176  00245E  C0D6  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 18177                           
 18178                           ; BSR set to: 0
 18179                           
 18180                           ; BSR set to: 0
 18181                           
 18182                           ; BSR set to: 0
 18183                           
 18184                           ; BSR set to: 0
 18185  002462  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 18186  002466  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 18187  00246A  BEDF               	btfsc	indf2,7,c
 18188  00246C  0012               	return	
 18189  00246E                     l577:
 18190                           
 18191                           ; BSR set to: 0
 18192                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 18193                           
 18194                           ; BSR set to: 0
 18195  00246E  0E01               	movlw	1
 18196  002470  6E01               	movwf	USBTransferOnePacket@dir,c
 18197  002472  0E80               	movlw	128
 18198  002474  6E02               	movwf	USBTransferOnePacket@data,c
 18199  002476  0E0D               	movlw	13
 18200  002478  6E03               	movwf	USBTransferOnePacket@data+1,c
 18201  00247A  0E0D               	movlw	13
 18202  00247C  6E04               	movwf	USBTransferOnePacket@len,c
 18203  00247E  0E02               	movlw	2
 18204  002480  EC3B  F02D         	call	_USBTransferOnePacket
 18205  002484  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 18206  002488  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 18207                           
 18208                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 18209  00248C  0100               	movlb	0	; () banked
 18210  00248E  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 18211  002490  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 18212  002492  B4D8               	btfsc	status,2,c
 18213  002494  D006               	goto	u12850
 18214                           
 18215                           ; BSR set to: 0
 18216  002496  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 18217  00249A  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 18218  00249E  BEDF               	btfsc	indf2,7,c
 18219  0024A0  D00F               	goto	l586
 18220  0024A2                     u12850:
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 18224                           
 18225                           ; BSR set to: 0
 18226  0024A2  0E00               	movlw	0
 18227  0024A4  6E01               	movwf	USBTransferOnePacket@dir,c
 18228  0024A6  0E40               	movlw	64
 18229  0024A8  6E02               	movwf	USBTransferOnePacket@data,c
 18230  0024AA  0E0D               	movlw	13
 18231  0024AC  6E03               	movwf	USBTransferOnePacket@data+1,c
 18232  0024AE  0E40               	movlw	64
 18233  0024B0  6E04               	movwf	USBTransferOnePacket@len,c
 18234  0024B2  0E02               	movlw	2
 18235  0024B4  EC3B  F02D         	call	_USBTransferOnePacket
 18236  0024B8  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 18237  0024BC  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 18238  0024C0                     l586:
 18239                           
 18240                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 18241  0024C0  0E00               	movlw	0
 18242  0024C2  0100               	movlb	0	; () banked
 18243  0024C4  6FED               	movwf	_MSD_State& (0+255),b
 18244                           
 18245                           ;usb_device_msd.c: 513: break;
 18246  0024C6  0012               	return	
 18247  0024C8                     
 18248                           ; BSR set to: 0
 18249                           ;usb_device_msd.c: 518: MSD_State=0x00;
 18250                           
 18251                           ; BSR set to: 0
 18252  0024C8  0E00               	movlw	0
 18253  0024CA  6FED               	movwf	_MSD_State& (0+255),b
 18254                           
 18255                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 18256  0024CC  0E02               	movlw	2
 18257  0024CE  010D               	movlb	13	; () banked
 18258  0024D0  6F8C               	movwf	140,b	;volatile
 18259                           
 18260                           ; BSR set to: 13
 18261                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 18262  0024D2  0E00               	movlw	0
 18263  0024D4  6E01               	movwf	USBStallEndpoint@dir,c
 18264  0024D6  0E02               	movlw	2
 18265  0024D8  EC30  F02B         	call	_USBStallEndpoint
 18266                           
 18267                           ;usb_device_msd.c: 521: }
 18268  0024DC  0012               	return	
 18269  0024DE                     l554:
 18270  0024DE  0100               	movlb	0	; () banked
 18271  0024E0  51ED               	movf	_MSD_State& (0+255),w,b
 18272                           
 18273                           ; Switch size 1, requested type "space"
 18274                           ; Number of cases is 4, Range of values is 0 to 3
 18275                           ; switch strategies available:
 18276                           ; Name         Instructions Cycles
 18277                           ; simple_byte           13     7 (average)
 18278                           ;	Chosen strategy is simple_byte
 18279  0024E2  0A00               	xorlw	0	; case 0
 18280  0024E4  B4D8               	btfsc	status,2,c
 18281  0024E6  D6E6               	goto	l555
 18282  0024E8  0A01               	xorlw	1	; case 1
 18283  0024EA  B4D8               	btfsc	status,2,c
 18284  0024EC  D790               	goto	l571
 18285  0024EE  0A03               	xorlw	3	; case 2
 18286  0024F0  B4D8               	btfsc	status,2,c
 18287  0024F2  D796               	goto	l573
 18288  0024F4  0A01               	xorlw	1	; case 3
 18289  0024F6  B4D8               	btfsc	status,2,c
 18290  0024F8  D7A8               	goto	l576
 18291  0024FA  D7E6               	goto	l589
 18292  0024FC                     __end_of_MSDTasks:
 18293                           	opt stack 0
 18294                           tosu	equ	0xFFF
 18295                           tosh	equ	0xFFE
 18296                           tosl	equ	0xFFD
 18297                           pclath	equ	0xFFA
 18298                           tblptru	equ	0xFF8
 18299                           tblptrh	equ	0xFF7
 18300                           tblptrl	equ	0xFF6
 18301                           tablat	equ	0xFF5
 18302                           prodh	equ	0xFF4
 18303                           prodl	equ	0xFF3
 18304                           intcon	equ	0xFF2
 18305                           intcon2	equ	0xFF1
 18306                           intcon3	equ	0xFF0
 18307                           indf0	equ	0xFEF
 18308                           postinc0	equ	0xFEE
 18309                           fsr0h	equ	0xFEA
 18310                           fsr0l	equ	0xFE9
 18311                           wreg	equ	0xFE8
 18312                           indf1	equ	0xFE7
 18313                           postdec1	equ	0xFE5
 18314                           plusw1	equ	0xFE3
 18315                           fsr1h	equ	0xFE2
 18316                           fsr1l	equ	0xFE1
 18317                           indf2	equ	0xFDF
 18318                           postinc2	equ	0xFDE
 18319                           postdec2	equ	0xFDD
 18320                           plusw2	equ	0xFDB
 18321                           fsr2h	equ	0xFDA
 18322                           fsr2l	equ	0xFD9
 18323                           status	equ	0xFD8
 18324                           
 18325 ;; *************** function _MSDProcessCommand *****************
 18326 ;; Defined at:
 18327 ;;		line 553 in file "usb_device_msd.c"
 18328 ;; Parameters:    Size  Location     Type
 18329 ;;		None
 18330 ;; Auto vars:     Size  Location     Type
 18331 ;;		None
 18332 ;; Return value:  Size  Location     Type
 18333 ;;                  1    wreg      unsigned char 
 18334 ;; Registers used:
 18335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18336 ;; Tracked objects:
 18337 ;;		On entry : 0/0
 18338 ;;		On exit  : 0/0
 18339 ;;		Unchanged: 0/0
 18340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18343 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18344 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18345 ;;Total ram usage:        5 bytes
 18346 ;; Hardware stack levels used:    1
 18347 ;; Hardware stack levels required when called:    9
 18348 ;; This function calls:
 18349 ;;		_ExternalFlash_MediaDetect
 18350 ;;		_ExternalFlash_MediaInitialize
 18351 ;;		_MSDProcessCommandMediaAbsent
 18352 ;;		_MSDProcessCommandMediaPresent
 18353 ;; This function is called by:
 18354 ;;		_MSDTasks
 18355 ;; This function uses a non-reentrant model
 18356 ;;
 18357                           
 18358                           	psect	text84
 18359  005444                     __ptext84:
 18360                           	opt stack 0
 18361  005444                     _MSDProcessCommand:
 18362                           	opt stack 19
 18363                           
 18364                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 18365                           
 18366                           ;incstack = 0
 18367  005444  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 18368  005448  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 18369  00544C  D801               	call	u11958
 18370  00544E  D00A               	goto	u11959
 18371  005450                     u11958:
 18372  005450  0005               	push	
 18373  005452  6EFA               	movwf	pclath,c
 18374  005454  0101               	movlb	1	; () banked
 18375  005456  51B9               	movf	(_LUN+6)& (0+255),w,b
 18376  005458  6EFD               	movwf	tosl,c
 18377  00545A  51BA               	movf	(_LUN+7)& (0+255),w,b
 18378  00545C  6EFE               	movwf	tosh,c
 18379  00545E  6AFF               	clrf	tosu,c
 18380  005460  50FA               	movf	pclath,w,c
 18381  005462  0012               	return		;indir
 18382  005464                     u11959:
 18383  005464  0900               	iorlw	0
 18384  005466  B4D8               	btfsc	status,2,c
 18385  005468  D00C               	goto	u11970
 18386  00546A  0101               	movlb	1	; () banked
 18387  00546C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18388  00546E  0D01               	mullw	1
 18389  005470  0EE8               	movlw	low _SoftDetach
 18390  005472  24F3               	addwf	prodl,w,c
 18391  005474  6ED9               	movwf	fsr2l,c
 18392  005476  0E00               	movlw	high _SoftDetach
 18393  005478  20F4               	addwfc	prodh,w,c
 18394  00547A  6EDA               	movwf	fsr2h,c
 18395  00547C  04DE               	decf	postinc2,w,c
 18396  00547E  A4D8               	btfss	status,2,c
 18397  005480  D019               	goto	l592
 18398  005482                     u11970:
 18399                           
 18400                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 18401                           
 18402                           ; BSR set to: 1
 18403  005482  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18404  005486  0E01               	movlw	1
 18405  005488  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18406  00548A  0E00               	movlw	0
 18407  00548C  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18408  00548E  2A48               	incf	??_MSDProcessCommand,f,c
 18409  005490  D003               	goto	u11984
 18410  005492                     u11985:
 18411  005492  90D8               	bcf	status,0,c
 18412  005494  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18413  005496  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18414  005498                     u11984:
 18415  005498  2E48               	decfsz	??_MSDProcessCommand,f,c
 18416  00549A  D7FB               	goto	u11985
 18417  00549C  1C49               	comf	??_MSDProcessCommand+1,w,c
 18418  00549E  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 18419  0054A0  1C4A               	comf	??_MSDProcessCommand+2,w,c
 18420  0054A2  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 18421  0054A4  504B               	movf	??_MSDProcessCommand+3,w,c
 18422  0054A6  0101               	movlb	1	; () banked
 18423  0054A8  1782               	andwf	_gblMediaPresent& (0+255),f,b
 18424  0054AA  504C               	movf	??_MSDProcessCommand+4,w,c
 18425  0054AC  1783               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 18426                           
 18427                           ; BSR set to: 1
 18428                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 18429  0054AE  EC22  F044         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18430                           
 18431                           ;usb_device_msd.c: 563: }
 18432  0054B2  D04E               	goto	l599
 18433  0054B4                     l592:
 18434                           
 18435                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 18436  0054B4  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18437  0054B8  0E01               	movlw	1
 18438  0054BA  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18439  0054BC  0E00               	movlw	0
 18440  0054BE  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18441  0054C0  2A48               	incf	??_MSDProcessCommand,f,c
 18442  0054C2  D003               	goto	u11994
 18443  0054C4                     u11995:
 18444  0054C4  90D8               	bcf	status,0,c
 18445  0054C6  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18446  0054C8  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18447  0054CA                     u11994:
 18448  0054CA  2E48               	decfsz	??_MSDProcessCommand,f,c
 18449  0054CC  D7FB               	goto	u11995
 18450  0054CE  0101               	movlb	1	; () banked
 18451  0054D0  5182               	movf	_gblMediaPresent& (0+255),w,b
 18452  0054D2  1649               	andwf	??_MSDProcessCommand+1,f,c
 18453  0054D4  5183               	movf	(_gblMediaPresent+1)& (0+255),w,b
 18454  0054D6  164A               	andwf	??_MSDProcessCommand+2,f,c
 18455  0054D8  5049               	movf	??_MSDProcessCommand+1,w,c
 18456  0054DA  104A               	iorwf	??_MSDProcessCommand+2,w,c
 18457  0054DC  A4D8               	btfss	status,2,c
 18458  0054DE  D036               	goto	l596
 18459                           
 18460                           ; BSR set to: 1
 18461                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 18462  0054E0  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 18463  0054E4  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 18464  0054E8  D801               	call	u12018
 18465  0054EA  D009               	goto	u12019
 18466  0054EC                     u12018:
 18467  0054EC  0005               	push	
 18468  0054EE  6EFA               	movwf	pclath,c
 18469  0054F0  51B3               	movf	_LUN& (0+255),w,b
 18470  0054F2  6EFD               	movwf	tosl,c
 18471  0054F4  51B4               	movf	(_LUN+1)& (0+255),w,b
 18472  0054F6  6EFE               	movwf	tosh,c
 18473  0054F8  6AFF               	clrf	tosu,c
 18474  0054FA  50FA               	movf	pclath,w,c
 18475  0054FC  0012               	return		;indir
 18476  0054FE                     u12019:
 18477  0054FE  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 18478  005500  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 18479  005502  B4D8               	btfsc	status,2,c
 18480  005504  D020               	goto	l597
 18481                           
 18482                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 18483  005506  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18484  00550A  0E01               	movlw	1
 18485  00550C  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18486  00550E  0E00               	movlw	0
 18487  005510  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18488  005512  2A48               	incf	??_MSDProcessCommand,f,c
 18489  005514  D003               	goto	u12034
 18490  005516                     u12035:
 18491  005516  90D8               	bcf	status,0,c
 18492  005518  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18493  00551A  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18494  00551C                     u12034:
 18495  00551C  2E48               	decfsz	??_MSDProcessCommand,f,c
 18496  00551E  D7FB               	goto	u12035
 18497  005520  5049               	movf	??_MSDProcessCommand+1,w,c
 18498  005522  0101               	movlb	1	; () banked
 18499  005524  1382               	iorwf	_gblMediaPresent& (0+255),f,b
 18500  005526  504A               	movf	??_MSDProcessCommand+2,w,c
 18501  005528  1383               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 18502                           
 18503                           ; BSR set to: 1
 18504                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 18505  00552A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18506  00552C  0BF0               	andlw	-16
 18507  00552E  0906               	iorlw	6
 18508  005530  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18509                           
 18510                           ; BSR set to: 1
 18511                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 18512  005532  0E28               	movlw	40
 18513  005534  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18514                           
 18515                           ; BSR set to: 1
 18516                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 18517  005536  0E00               	movlw	0
 18518  005538  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18519                           
 18520                           ; BSR set to: 1
 18521                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 18522  00553A  0E01               	movlw	1
 18523  00553C  010D               	movlb	13	; () banked
 18524  00553E  6F8C               	movwf	140,b	;volatile
 18525                           
 18526                           ; BSR set to: 13
 18527                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 18528  005540  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18529                           
 18530                           ;usb_device_msd.c: 589: }
 18531  005544  D005               	goto	l599
 18532  005546                     l597:
 18533                           
 18534                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 18535  005546  EC22  F044         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18536                           
 18537                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 18538  00554A  D002               	goto	l599
 18539  00554C                     l596:
 18540                           
 18541                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 18542  00554C  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18543  005550                     l599:
 18544                           
 18545                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 18546  005550  0100               	movlb	0	; () banked
 18547  005552  51EC               	movf	_MSDCommandState& (0+255),w,b
 18548  005554  0012               	return	
 18549  005556                     __end_of_MSDProcessCommand:
 18550                           	opt stack 0
 18551                           tosu	equ	0xFFF
 18552                           tosh	equ	0xFFE
 18553                           tosl	equ	0xFFD
 18554                           pclath	equ	0xFFA
 18555                           tblptru	equ	0xFF8
 18556                           tblptrh	equ	0xFF7
 18557                           tblptrl	equ	0xFF6
 18558                           tablat	equ	0xFF5
 18559                           prodh	equ	0xFF4
 18560                           prodl	equ	0xFF3
 18561                           intcon	equ	0xFF2
 18562                           intcon2	equ	0xFF1
 18563                           intcon3	equ	0xFF0
 18564                           indf0	equ	0xFEF
 18565                           postinc0	equ	0xFEE
 18566                           fsr0h	equ	0xFEA
 18567                           fsr0l	equ	0xFE9
 18568                           wreg	equ	0xFE8
 18569                           indf1	equ	0xFE7
 18570                           postdec1	equ	0xFE5
 18571                           plusw1	equ	0xFE3
 18572                           fsr1h	equ	0xFE2
 18573                           fsr1l	equ	0xFE1
 18574                           indf2	equ	0xFDF
 18575                           postinc2	equ	0xFDE
 18576                           postdec2	equ	0xFDD
 18577                           plusw2	equ	0xFDB
 18578                           fsr2h	equ	0xFDA
 18579                           fsr2l	equ	0xFD9
 18580                           status	equ	0xFD8
 18581                           
 18582 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 18583 ;; Defined at:
 18584 ;;		line 635 in file "usb_device_msd.c"
 18585 ;; Parameters:    Size  Location     Type
 18586 ;;		None
 18587 ;; Auto vars:     Size  Location     Type
 18588 ;;		None
 18589 ;; Return value:  Size  Location     Type
 18590 ;;                  1    wreg      void 
 18591 ;; Registers used:
 18592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18593 ;; Tracked objects:
 18594 ;;		On entry : 0/0
 18595 ;;		On exit  : 0/0
 18596 ;;		Unchanged: 0/0
 18597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18602 ;;Total ram usage:        0 bytes
 18603 ;; Hardware stack levels used:    1
 18604 ;; Hardware stack levels required when called:    8
 18605 ;; This function calls:
 18606 ;;		_MSDErrorHandler
 18607 ;;		_MSDProcessCommandMediaPresent
 18608 ;;		_ResetSenseData
 18609 ;; This function is called by:
 18610 ;;		_MSDProcessCommand
 18611 ;; This function uses a non-reentrant model
 18612 ;;
 18613                           
 18614                           	psect	text85
 18615  008844                     __ptext85:
 18616                           	opt stack 0
 18617  008844                     _MSDProcessCommandMediaAbsent:
 18618                           	opt stack 19
 18619                           
 18620                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 18621                           
 18622                           ; BSR set to: 0
 18623                           ;incstack = 0
 18624  008844  D01E               	goto	l603
 18625  008846                     
 18626                           ;usb_device_msd.c: 646: ResetSenseData();
 18627  008846  EC53  F044         	call	_ResetSenseData	;wreg free
 18628                           
 18629                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 18630  00884A  0101               	movlb	1	; () banked
 18631  00884C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18632  00884E  0BF0               	andlw	-16
 18633  008850  0902               	iorlw	2
 18634  008852  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18635                           
 18636                           ; BSR set to: 1
 18637                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 18638  008854  0E3A               	movlw	58
 18639  008856  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18640                           
 18641                           ; BSR set to: 1
 18642                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 18643  008858  0E00               	movlw	0
 18644  00885A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18645                           
 18646                           ; BSR set to: 1
 18647                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 18648  00885C  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18649                           
 18650                           ;usb_device_msd.c: 655: break;
 18651  008860  0012               	return	
 18652  008862                     
 18653                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 18654  008862  0E01               	movlw	1
 18655  008864  010D               	movlb	13	; () banked
 18656  008866  6F8C               	movwf	140,b	;volatile
 18657                           
 18658                           ; BSR set to: 13
 18659                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 18660  008868  0100               	movlb	0	; () banked
 18661  00886A  69EC               	setf	_MSDCommandState& (0+255),b
 18662                           
 18663                           ;usb_device_msd.c: 665: break;
 18664  00886C  0012               	return	
 18665  00886E                     
 18666                           ; BSR set to: 0
 18667                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 18668                           
 18669                           ; BSR set to: 0
 18670  00886E  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18671                           
 18672                           ;usb_device_msd.c: 671: break;
 18673  008872  0012               	return	
 18674  008874                     
 18675                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 18676  008874  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18677                           
 18678                           ;usb_device_msd.c: 677: break;
 18679  008878  0012               	return	
 18680  00887A                     
 18681                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 18682  00887A  0E7F               	movlw	127
 18683  00887C  EC37  F02C         	call	_MSDErrorHandler
 18684                           
 18685                           ;usb_device_msd.c: 685: }
 18686                           
 18687                           ;usb_device_msd.c: 684: break;
 18688  008880  0012               	return	
 18689  008882                     l603:
 18690  008882  0100               	movlb	0	; () banked
 18691  008884  51EC               	movf	_MSDCommandState& (0+255),w,b
 18692                           
 18693                           ; Switch size 1, requested type "space"
 18694                           ; Number of cases is 5, Range of values is 0 to 253
 18695                           ; switch strategies available:
 18696                           ; Name         Instructions Cycles
 18697                           ; simple_byte           16     9 (average)
 18698                           ;	Chosen strategy is simple_byte
 18699  008886  0A00               	xorlw	0	; case 0
 18700  008888  B4D8               	btfsc	status,2,c
 18701  00888A  D7EB               	goto	l606
 18702  00888C  0A03               	xorlw	3	; case 3
 18703  00888E  B4D8               	btfsc	status,2,c
 18704  008890  D7DA               	goto	l604
 18705  008892  0A11               	xorlw	17	; case 18
 18706  008894  B4D8               	btfsc	status,2,c
 18707  008896  D7EB               	goto	l608
 18708  008898  0A0C               	xorlw	12	; case 30
 18709  00889A  B4D8               	btfsc	status,2,c
 18710  00889C  D7E2               	goto	l606
 18711  00889E  0AE3               	xorlw	227	; case 253
 18712  0088A0  B4D8               	btfsc	status,2,c
 18713  0088A2  D7E8               	goto	l609
 18714  0088A4  D7EA               	goto	l610
 18715  0088A6                     __end_of_MSDProcessCommandMediaAbsent:
 18716                           	opt stack 0
 18717                           tosu	equ	0xFFF
 18718                           tosh	equ	0xFFE
 18719                           tosl	equ	0xFFD
 18720                           pclath	equ	0xFFA
 18721                           tblptru	equ	0xFF8
 18722                           tblptrh	equ	0xFF7
 18723                           tblptrl	equ	0xFF6
 18724                           tablat	equ	0xFF5
 18725                           prodh	equ	0xFF4
 18726                           prodl	equ	0xFF3
 18727                           intcon	equ	0xFF2
 18728                           intcon2	equ	0xFF1
 18729                           intcon3	equ	0xFF0
 18730                           indf0	equ	0xFEF
 18731                           postinc0	equ	0xFEE
 18732                           fsr0h	equ	0xFEA
 18733                           fsr0l	equ	0xFE9
 18734                           wreg	equ	0xFE8
 18735                           indf1	equ	0xFE7
 18736                           postdec1	equ	0xFE5
 18737                           plusw1	equ	0xFE3
 18738                           fsr1h	equ	0xFE2
 18739                           fsr1l	equ	0xFE1
 18740                           indf2	equ	0xFDF
 18741                           postinc2	equ	0xFDE
 18742                           postdec2	equ	0xFDD
 18743                           plusw2	equ	0xFDB
 18744                           fsr2h	equ	0xFDA
 18745                           fsr2l	equ	0xFD9
 18746                           status	equ	0xFD8
 18747                           
 18748 ;; *************** function _MSDProcessCommandMediaPresent *****************
 18749 ;; Defined at:
 18750 ;;		line 712 in file "usb_device_msd.c"
 18751 ;; Parameters:    Size  Location     Type
 18752 ;;		None
 18753 ;; Auto vars:     Size  Location     Type
 18754 ;;  capacity        4   66[COMRAM] struct .
 18755 ;;  sectorSize      4   62[COMRAM] struct .
 18756 ;;  i               1   70[COMRAM] unsigned char 
 18757 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 18758 ;; Return value:  Size  Location     Type
 18759 ;;                  1    wreg      void 
 18760 ;; Registers used:
 18761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18762 ;; Tracked objects:
 18763 ;;		On entry : 0/0
 18764 ;;		On exit  : 0/0
 18765 ;;		Unchanged: 0/0
 18766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18768 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18769 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18770 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18771 ;;Total ram usage:       14 bytes
 18772 ;; Hardware stack levels used:    1
 18773 ;; Hardware stack levels required when called:    7
 18774 ;; This function calls:
 18775 ;;		_ExternalFlash_CapacityRead
 18776 ;;		_ExternalFlash_SectorSizeRead
 18777 ;;		_ExternalFlash_WriteProtectStateGet
 18778 ;;		_MSDCheckForErrorCases
 18779 ;;		_MSDComputeDeviceInAndResidue
 18780 ;;		_MSDErrorHandler
 18781 ;;		_MSDReadHandler
 18782 ;;		_MSDWriteHandler
 18783 ;;		_ResetSenseData
 18784 ;;		_USBTransferOnePacket
 18785 ;;		_memcpy
 18786 ;; This function is called by:
 18787 ;;		_MSDProcessCommand
 18788 ;;		_MSDProcessCommandMediaAbsent
 18789 ;; This function uses a non-reentrant model
 18790 ;;
 18791                           
 18792                           	psect	text86
 18793  00086C                     __ptext86:
 18794                           	opt stack 0
 18795  00086C                     _MSDProcessCommandMediaPresent:
 18796                           	opt stack 20
 18797                           
 18798                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 18799                           
 18800                           ;incstack = 0
 18801  00086C  D1B9               	goto	l614
 18802  00086E                     
 18803                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 18804  00086E  EC9E  F01A         	call	_MSDReadHandler	;wreg free
 18805  000872  0900               	iorlw	0
 18806  000874  A4D8               	btfss	status,2,c
 18807  000876  0012               	return	
 18808                           
 18809                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 18810  000878  0100               	movlb	0	; () banked
 18811  00087A  69EC               	setf	_MSDCommandState& (0+255),b
 18812                           
 18813                           ; BSR set to: 0
 18814                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 18815  00087C  0012               	return	
 18816  00087E                     
 18817                           ; BSR set to: 0
 18818                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 18819                           
 18820                           ; BSR set to: 0
 18821  00087E  EC48  F00C         	call	_MSDWriteHandler	;wreg free
 18822  000882  0900               	iorlw	0
 18823  000884  A4D8               	btfss	status,2,c
 18824  000886  0012               	return	
 18825                           
 18826                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 18827  000888  0100               	movlb	0	; () banked
 18828  00088A  69EC               	setf	_MSDCommandState& (0+255),b
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 18832  00088C  0012               	return	
 18833  00088E                     
 18834                           ; BSR set to: 0
 18835                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 18836                           
 18837                           ; BSR set to: 0
 18838  00088E  05E7               	decf	_MSDHostNoData& (0+255),w,b
 18839  000890  A4D8               	btfss	status,2,c
 18840  000892  D002               	goto	l621
 18841                           
 18842                           ; BSR set to: 0
 18843                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 18844  000894  69EC               	setf	_MSDCommandState& (0+255),b
 18845                           
 18846                           ;usb_device_msd.c: 751: break;
 18847  000896  0012               	return	
 18848  000898                     l621:
 18849                           
 18850                           ; BSR set to: 0
 18851                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 18852  000898  C112  F0DC         	movff	_gblCBW+18,_TransferLength+1
 18853                           
 18854                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 18855  00089C  C113  F0DB         	movff	_gblCBW+19,_TransferLength
 18856                           
 18857                           ; BSR set to: 0
 18858                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 18859  0008A0  C0DB  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 18860  0008A4  C0DC  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 18861  0008A8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 18862  0008AA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 18863  0008AC  ECF7  F032         	call	_MSDCheckForErrorCases	;wreg free
 18864  0008B0  0900               	iorlw	0
 18865  0008B2  A4D8               	btfss	status,2,c
 18866  0008B4  0012               	return	
 18867                           
 18868                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 18869                           
 18870                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 18871  0008B6  0E00               	movlw	0
 18872  0008B8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18873  0008BA  0E24               	movlw	36
 18874  0008BC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18875  0008BE  EC59  F03E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18876                           
 18877                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 18878  0008C2  0E00               	movlw	0
 18879  0008C4  6E01               	movwf	memcpy@d1,c
 18880  0008C6  0E06               	movlw	6
 18881  0008C8  6E02               	movwf	memcpy@d1+1,c
 18882  0008CA  0E49               	movlw	low _inq_resp
 18883  0008CC  6E03               	movwf	memcpy@s1,c
 18884  0008CE  0EBF               	movlw	high _inq_resp
 18885  0008D0  6E04               	movwf	memcpy@s1+1,c
 18886  0008D2  5003               	movf	memcpy@s1,w,c
 18887  0008D4  1004               	iorwf	memcpy@s1+1,w,c
 18888  0008D6  A4D8               	btfss	status,2,c
 18889  0008D8  0E00               	movlw	low (__mediumconst shr (0+16))
 18890  0008DA  6E05               	movwf	memcpy@s1+2,c
 18891  0008DC  0E00               	movlw	0
 18892  0008DE  6E07               	movwf	memcpy@n+1,c
 18893  0008E0  0E24               	movlw	36
 18894  0008E2  6E06               	movwf	memcpy@n,c
 18895  0008E4  ECEF  F043         	call	_memcpy	;wreg free
 18896                           
 18897                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 18898  0008E8  0EFD               	movlw	253
 18899  0008EA  0100               	movlb	0	; () banked
 18900  0008EC  6FEC               	movwf	_MSDCommandState& (0+255),b
 18901                           
 18902                           ;usb_device_msd.c: 773: break;
 18903  0008EE  0012               	return	
 18904  0008F0                     
 18905                           ; BSR set to: 0
 18906                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 18907                           
 18908                           ; BSR set to: 0
 18909  0008F0  C1C1  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 18910  0008F4  C1C2  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 18911  0008F8  D801               	call	u10438
 18912  0008FA  D00A               	goto	u10439
 18913  0008FC                     u10438:
 18914  0008FC  0005               	push	
 18915  0008FE  6EFA               	movwf	pclath,c
 18916  000900  0101               	movlb	1	; () banked
 18917  000902  51B5               	movf	(_LUN+2)& (0+255),w,b
 18918  000904  6EFD               	movwf	tosl,c
 18919  000906  51B6               	movf	(_LUN+3)& (0+255),w,b
 18920  000908  6EFE               	movwf	tosh,c
 18921  00090A  6AFF               	clrf	tosu,c
 18922  00090C  50FA               	movf	pclath,w,c
 18923  00090E  0012               	return		;indir
 18924  000910                     u10439:
 18925  000910  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 18926  000914  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 18927  000918  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 18928  00091C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 18929                           
 18930                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 18931  000920  C1C1  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 18932  000924  C1C2  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 18933  000928  D801               	call	u10448
 18934  00092A  D00A               	goto	u10449
 18935  00092C                     u10448:
 18936  00092C  0005               	push	
 18937  00092E  6EFA               	movwf	pclath,c
 18938  000930  0101               	movlb	1	; () banked
 18939  000932  51B7               	movf	(_LUN+4)& (0+255),w,b
 18940  000934  6EFD               	movwf	tosl,c
 18941  000936  51B8               	movf	(_LUN+5)& (0+255),w,b
 18942  000938  6EFE               	movwf	tosh,c
 18943  00093A  6AFF               	clrf	tosu,c
 18944  00093C  50FA               	movf	pclath,w,c
 18945  00093E  0012               	return		;indir
 18946  000940                     u10449:
 18947  000940  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 18948  000944  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 18949  000948  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 18950  00094A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 18951                           
 18952                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 18953  00094C  EE26 F000          	lfsr	2,1536
 18954  000950  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 18955                           
 18956                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 18957  000954  EE26 F001          	lfsr	2,1537	;volatile
 18958  000958  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 18959                           
 18960                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 18961  00095C  EE26 F002          	lfsr	2,1538	;volatile
 18962  000960  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 18963                           
 18964                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 18965  000964  EE26 F003          	lfsr	2,1539	;volatile
 18966  000968  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 18967                           
 18968                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 18969  00096C  EE26 F004          	lfsr	2,1540	;volatile
 18970  000970  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 18971                           
 18972                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 18973  000974  EE26 F005          	lfsr	2,1541	;volatile
 18974  000978  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 18975                           
 18976                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 18977  00097C  EE26 F006          	lfsr	2,1542	;volatile
 18978  000980  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 18979                           
 18980                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 18981  000984  EE26 F007          	lfsr	2,1543	;volatile
 18982  000988  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 18983                           
 18984                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 18985  00098C  0E00               	movlw	0
 18986  00098E  0100               	movlb	0	; () banked
 18987  000990  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18988  000992  0E08               	movlw	8
 18989  000994  6FDB               	movwf	_TransferLength& (0+255),b
 18990                           
 18991                           ; BSR set to: 0
 18992                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 18993  000996  0E00               	movlw	0
 18994  000998  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18995  00099A  0E08               	movlw	8
 18996  00099C  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18997  00099E  EC59  F03E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18998                           
 18999                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 19000  0009A2  0EFD               	movlw	253
 19001  0009A4  0100               	movlb	0	; () banked
 19002  0009A6  6FEC               	movwf	_MSDCommandState& (0+255),b
 19003                           
 19004                           ;usb_device_msd.c: 802: break;
 19005  0009A8  0012               	return	
 19006  0009AA                     
 19007                           ; BSR set to: 0
 19008                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 19009                           
 19010                           ; BSR set to: 0
 19011  0009AA  05E7               	decf	_MSDHostNoData& (0+255),w,b
 19012  0009AC  A4D8               	btfss	status,2,c
 19013  0009AE  D002               	goto	l625
 19014                           
 19015                           ; BSR set to: 0
 19016                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 19017  0009B0  69EC               	setf	_MSDCommandState& (0+255),b
 19018                           
 19019                           ;usb_device_msd.c: 814: break;
 19020  0009B2  0012               	return	
 19021  0009B4                     l625:
 19022                           
 19023                           ; BSR set to: 0
 19024                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 19025                           
 19026                           ; BSR set to: 0
 19027  0009B4  0E00               	movlw	0
 19028  0009B6  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 19029  0009B8  0E12               	movlw	18
 19030  0009BA  6FDB               	movwf	_TransferLength& (0+255),b
 19031                           
 19032                           ; BSR set to: 0
 19033                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 19034  0009BC  0E00               	movlw	0
 19035  0009BE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19036  0009C0  0E12               	movlw	18
 19037  0009C2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19038  0009C4  EC59  F03E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19039                           
 19040                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 19041  0009C8  0E00               	movlw	0
 19042  0009CA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19043  0009CC                     l13556:
 19044  0009CC  0E11               	movlw	17
 19045  0009CE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 19046  0009D0  D001               	goto	l626
 19047  0009D2  D014               	goto	u10470
 19048  0009D4                     l626:
 19049                           
 19050                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 19051  0009D4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19052  0009D6  0D01               	mullw	1
 19053  0009D8  0E1F               	movlw	low _gblSenseData
 19054  0009DA  24F3               	addwf	prodl,w,c
 19055  0009DC  6ED9               	movwf	fsr2l,c
 19056  0009DE  0E01               	movlw	high _gblSenseData
 19057  0009E0  20F4               	addwfc	prodh,w,c
 19058  0009E2  6EDA               	movwf	fsr2h,c
 19059  0009E4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19060  0009E6  0D01               	mullw	1
 19061  0009E8  0E00               	movlw	0
 19062  0009EA  24F3               	addwf	prodl,w,c
 19063  0009EC  6EE1               	movwf	fsr1l,c
 19064  0009EE  0E06               	movlw	6
 19065  0009F0  20F4               	addwfc	prodh,w,c
 19066  0009F2  6EE2               	movwf	fsr1h,c
 19067  0009F4  CFDF FFE7          	movff	indf2,indf1
 19068  0009F8  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 19069  0009FA  D7E8               	goto	l13556
 19070  0009FC                     u10470:
 19071                           
 19072                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 19073  0009FC  0EFD               	movlw	253
 19074  0009FE  0100               	movlb	0	; () banked
 19075  000A00  6FEC               	movwf	_MSDCommandState& (0+255),b
 19076                           
 19077                           ;usb_device_msd.c: 827: break;
 19078  000A02  0012               	return	
 19079  000A04                     l628:
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 19083  000A04  0E03               	movlw	3
 19084  000A06  CFE8 F600          	movff	wreg,1536
 19085                           
 19086                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 19087  000A0A  0E00               	movlw	0
 19088  000A0C  CFE8 F601          	movff	wreg,1537	;volatile
 19089                           
 19090                           ; BSR set to: 0
 19091                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 19092  000A10  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19093  000A14  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19094  000A18  D801               	call	u10488
 19095  000A1A  D00A               	goto	u10489
 19096  000A1C                     u10488:
 19097  000A1C  0005               	push	
 19098  000A1E  6EFA               	movwf	pclath,c
 19099  000A20  0101               	movlb	1	; () banked
 19100  000A22  51BD               	movf	(_LUN+10)& (0+255),w,b
 19101  000A24  6EFD               	movwf	tosl,c
 19102  000A26  51BE               	movf	(_LUN+11)& (0+255),w,b
 19103  000A28  6EFE               	movwf	tosh,c
 19104  000A2A  6AFF               	clrf	tosu,c
 19105  000A2C  50FA               	movf	pclath,w,c
 19106  000A2E  0012               	return		;indir
 19107  000A30                     u10489:
 19108  000A30  0900               	iorlw	0
 19109  000A32  A4D8               	btfss	status,2,c
 19110  000A34  D004               	goto	l630
 19111  000A36  0E00               	movlw	0
 19112  000A38  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 19113  000A3A  0E00               	movlw	0
 19114  000A3C  D003               	goto	L19
 19115  000A3E                     l630:
 19116  000A3E  0E00               	movlw	0
 19117  000A40  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 19118  000A42  0E80               	movlw	128
 19119  000A44                     L19:
 19120  000A44  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 19121  000A46  EE26 F002          	lfsr	2,1538	;volatile
 19122  000A4A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 19123                           
 19124                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 19125  000A4E  0E00               	movlw	0
 19126  000A50  CFE8 F603          	movff	wreg,1539	;volatile
 19127                           
 19128                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 19129  000A54  0E00               	movlw	0
 19130  000A56  0100               	movlb	0	; () banked
 19131  000A58  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 19132  000A5A  0E04               	movlw	4
 19133  000A5C  6FDB               	movwf	_TransferLength& (0+255),b
 19134                           
 19135                           ; BSR set to: 0
 19136                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 19137  000A5E  0E00               	movlw	0
 19138  000A60  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19139  000A62  0E04               	movlw	4
 19140  000A64  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19141  000A66  EC59  F03E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19142                           
 19143                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 19144  000A6A  0EFD               	movlw	253
 19145  000A6C  0100               	movlb	0	; () banked
 19146  000A6E  6FEC               	movwf	_MSDCommandState& (0+255),b
 19147                           
 19148                           ;usb_device_msd.c: 839: break;
 19149  000A70  0012               	return	
 19150  000A72                     
 19151                           ; BSR set to: 0
 19152                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 19153                           
 19154                           ; BSR set to: 0
 19155  000A72  0101               	movlb	1	; () banked
 19156  000A74  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19157  000A76  0BF0               	andlw	-16
 19158  000A78  0905               	iorlw	5
 19159  000A7A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19160                           
 19161                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 19162  000A7C  0E20               	movlw	32
 19163  000A7E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19164                           
 19165                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 19166  000A80  0E00               	movlw	0
 19167  000A82  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19168                           
 19169                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 19170  000A84  0E01               	movlw	1
 19171  000A86  010D               	movlb	13	; () banked
 19172  000A88  6F8C               	movwf	140,b	;volatile
 19173                           
 19174                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 19175  000A8A  0E00               	movlw	0
 19176  000A8C  6F88               	movwf	136,b	;volatile
 19177  000A8E  0E00               	movlw	0
 19178  000A90  6F89               	movwf	137,b	;volatile
 19179  000A92  0E00               	movlw	0
 19180  000A94  6F8A               	movwf	138,b	;volatile
 19181  000A96  0E00               	movlw	0
 19182  000A98  6F8B               	movwf	139,b	;volatile
 19183                           
 19184                           ; BSR set to: 13
 19185                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 19186  000A9A  0100               	movlb	0	; () banked
 19187  000A9C  69EC               	setf	_MSDCommandState& (0+255),b
 19188                           
 19189                           ;usb_device_msd.c: 848: break;
 19190  000A9E  0012               	return	
 19191  000AA0                     
 19192                           ; BSR set to: 0
 19193                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 19194                           
 19195                           ; BSR set to: 0
 19196  000AA0  0E00               	movlw	0
 19197  000AA2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 19198  000AA4  0E00               	movlw	0
 19199  000AA6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 19200  000AA8  0E00               	movlw	0
 19201  000AAA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 19202  000AAC  0E00               	movlw	0
 19203  000AAE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 19204  000AB0  ECF7  F032         	call	_MSDCheckForErrorCases	;wreg free
 19205  000AB4  0900               	iorlw	0
 19206  000AB6  A4D8               	btfss	status,2,c
 19207  000AB8  0012               	return	
 19208                           
 19209                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 19210                           
 19211                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 19212  000ABA  0101               	movlb	1	; () banked
 19213  000ABC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19214  000ABE  0B0F               	andlw	15
 19215  000AC0  0A06               	xorlw	6
 19216  000AC2  A4D8               	btfss	status,2,c
 19217  000AC4  D007               	goto	l636
 19218                           
 19219                           ; BSR set to: 1
 19220  000AC6  010D               	movlb	13	; () banked
 19221  000AC8  058C               	decf	140,w,b	;volatile
 19222  000ACA  A4D8               	btfss	status,2,c
 19223  000ACC  D003               	goto	l636
 19224                           
 19225                           ; BSR set to: 13
 19226                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 19227  000ACE  0100               	movlb	0	; () banked
 19228  000AD0  69EC               	setf	_MSDCommandState& (0+255),b
 19229                           
 19230                           ;usb_device_msd.c: 870: }
 19231  000AD2  0012               	return	
 19232  000AD4                     l636:
 19233                           
 19234                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 19235                           
 19236                           ; BSR set to: 0
 19237  000AD4  EC53  F044         	call	_ResetSenseData	;wreg free
 19238                           
 19239                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 19240  000AD8  0E00               	movlw	0
 19241  000ADA  010D               	movlb	13	; () banked
 19242  000ADC  6F88               	movwf	136,b	;volatile
 19243  000ADE  0E00               	movlw	0
 19244  000AE0  6F89               	movwf	137,b	;volatile
 19245  000AE2  0E00               	movlw	0
 19246  000AE4  6F8A               	movwf	138,b	;volatile
 19247  000AE6  0E00               	movlw	0
 19248  000AE8  6F8B               	movwf	139,b	;volatile
 19249                           
 19250                           ; BSR set to: 13
 19251                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 19252  000AEA  0100               	movlb	0	; () banked
 19253  000AEC  69EC               	setf	_MSDCommandState& (0+255),b
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 19257  000AEE  0012               	return	
 19258  000AF0                     
 19259                           ; BSR set to: 0
 19260                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 19261                           
 19262                           ; BSR set to: 0
 19263                           
 19264                           ; BSR set to: 0
 19265  000AF0  0E00               	movlw	0
 19266  000AF2  010D               	movlb	13	; () banked
 19267  000AF4  6F88               	movwf	136,b	;volatile
 19268  000AF6  0E00               	movlw	0
 19269  000AF8  6F89               	movwf	137,b	;volatile
 19270  000AFA  0E00               	movlw	0
 19271  000AFC  6F8A               	movwf	138,b	;volatile
 19272  000AFE  0E00               	movlw	0
 19273  000B00  6F8B               	movwf	139,b	;volatile
 19274                           
 19275                           ; BSR set to: 13
 19276                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 19277  000B02  0100               	movlb	0	; () banked
 19278  000B04  69EC               	setf	_MSDCommandState& (0+255),b
 19279                           
 19280                           ;usb_device_msd.c: 885: break;
 19281  000B06  0012               	return	
 19282  000B08                     
 19283                           ; BSR set to: 0
 19284                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 19285                           
 19286                           ; BSR set to: 0
 19287  000B08  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 19288  000B0A  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 19289  000B0C  B4D8               	btfsc	status,2,c
 19290  000B0E  D006               	goto	u10540
 19291                           
 19292                           ; BSR set to: 0
 19293  000B10  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 19294  000B14  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 19295  000B18  BEDF               	btfsc	indf2,7,c
 19296  000B1A  0012               	return	
 19297  000B1C                     u10540:
 19298                           
 19299                           ; BSR set to: 0
 19300                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 19301                           
 19302                           ; BSR set to: 0
 19303  000B1C  0101               	movlb	1	; () banked
 19304  000B1E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 19305  000B20  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19306  000B22  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19307  000B24  E104               	bnz	u10550
 19308  000B26  0E40               	movlw	64
 19309  000B28  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 19310  000B2A  A0D8               	btfss	status,0,c
 19311  000B2C  D009               	goto	l644
 19312  000B2E                     u10550:
 19313                           
 19314                           ; BSR set to: 1
 19315                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 19316  000B2E  0E40               	movlw	64
 19317  000B30  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 19318                           
 19319                           ; BSR set to: 1
 19320                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 19321  000B32  0E40               	movlw	64
 19322  000B34  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19323  000B36  0E00               	movlw	0
 19324  000B38  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19325  000B3A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19326  000B3C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19327                           
 19328                           ;usb_device_msd.c: 900: }
 19329  000B3E  D00A               	goto	l645
 19330  000B40                     l644:
 19331                           
 19332                           ; BSR set to: 1
 19333                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 19334  000B40  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 19335                           
 19336                           ; BSR set to: 1
 19337                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 19338  000B44  0E00               	movlw	0
 19339  000B46  6F08               	movwf	(_gblCBW+8)& (0+255),b
 19340  000B48  0E00               	movlw	0
 19341  000B4A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 19342  000B4C  0E00               	movlw	0
 19343  000B4E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 19344  000B50  0E00               	movlw	0
 19345  000B52  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 19346  000B54                     l645:
 19347                           
 19348                           ; BSR set to: 1
 19349                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 19350                           
 19351                           ; BSR set to: 1
 19352  000B54  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19353  000B56  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 19354  000B58  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 19355  000B5A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 19356  000B5C  0100               	movlb	0	; () banked
 19357  000B5E  5DDB               	subwf	_TransferLength& (0+255),w,b
 19358  000B60  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 19359  000B62  59DC               	subwfb	(_TransferLength+1)& (0+255),w,b
 19360  000B64  A0D8               	btfss	status,0,c
 19361  000B66  D005               	goto	l646
 19362                           
 19363                           ; BSR set to: 0
 19364                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 19365  000B68  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19366  000B6A  5FDB               	subwf	_TransferLength& (0+255),f,b
 19367  000B6C  0E00               	movlw	0
 19368  000B6E  5BDC               	subwfb	(_TransferLength+1)& (0+255),f,b
 19369                           
 19370                           ;usb_device_msd.c: 918: }
 19371  000B70  D01A               	goto	u10580
 19372  000B72                     l646:
 19373                           
 19374                           ; BSR set to: 0
 19375                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 19376                           
 19377                           ; BSR set to: 0
 19378  000B72  0E00               	movlw	0
 19379  000B74  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19380  000B76  D013               	goto	l648
 19381  000B78                     
 19382                           ; BSR set to: 0
 19383                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 19384                           
 19385                           ; BSR set to: 0
 19386  000B78  51DB               	movf	_TransferLength& (0+255),w,b
 19387  000B7A  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 19388  000B7C  B4D8               	btfsc	status,2,c
 19389  000B7E  D004               	goto	l650
 19390                           
 19391                           ; BSR set to: 0
 19392                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 19393  000B80  07DB               	decf	_TransferLength& (0+255),f,b
 19394  000B82  A0D8               	btfss	status,0,c
 19395  000B84  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 19396                           
 19397                           ;usb_device_msd.c: 932: }
 19398  000B86  D00A               	goto	l651
 19399  000B88                     l650:
 19400                           
 19401                           ; BSR set to: 0
 19402                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 19403                           
 19404                           ; BSR set to: 0
 19405  000B88  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19406  000B8A  0D01               	mullw	1
 19407  000B8C  0E00               	movlw	0
 19408  000B8E  24F3               	addwf	prodl,w,c
 19409  000B90  6ED9               	movwf	fsr2l,c
 19410  000B92  0E06               	movlw	6
 19411  000B94  20F4               	addwfc	prodh,w,c
 19412  000B96  6EDA               	movwf	fsr2h,c
 19413  000B98  0E00               	movlw	0
 19414  000B9A  6EDF               	movwf	indf2,c
 19415  000B9C                     l651:
 19416                           
 19417                           ; BSR set to: 0
 19418                           
 19419                           ; BSR set to: 0
 19420  000B9C  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 19421  000B9E                     l648:
 19422                           
 19423                           ; BSR set to: 0
 19424                           
 19425                           ; BSR set to: 0
 19426  000B9E  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19427  000BA0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 19428  000BA2  A0D8               	btfss	status,0,c
 19429  000BA4  D7E9               	goto	l649
 19430  000BA6                     u10580:
 19431                           
 19432                           ; BSR set to: 0
 19433                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 19434                           
 19435                           ; BSR set to: 0
 19436                           
 19437                           ; BSR set to: 0
 19438  000BA6  0E01               	movlw	1
 19439  000BA8  6E01               	movwf	USBTransferOnePacket@dir,c
 19440  000BAA  0E00               	movlw	0
 19441  000BAC  6E02               	movwf	USBTransferOnePacket@data,c
 19442  000BAE  0E06               	movlw	6
 19443  000BB0  6E03               	movwf	USBTransferOnePacket@data+1,c
 19444  000BB2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 19445  000BB6  0E02               	movlw	2
 19446  000BB8  EC3B  F02D         	call	_USBTransferOnePacket
 19447  000BBC  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19448  000BC0  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19449                           
 19450                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 19451  000BC4  0101               	movlb	1	; () banked
 19452  000BC6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 19453  000BC8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19454  000BCA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19455  000BCC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 19456  000BCE  A4D8               	btfss	status,2,c
 19457  000BD0  0012               	return	
 19458                           
 19459                           ; BSR set to: 1
 19460                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 19461  000BD2  0100               	movlb	0	; () banked
 19462  000BD4  69EC               	setf	_MSDCommandState& (0+255),b
 19463                           
 19464                           ; BSR set to: 0
 19465                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 19466                           
 19467                           ; BSR set to: 0
 19468                           
 19469                           ;usb_device_msd.c: 949: break;
 19470  000BD6  0012               	return	
 19471  000BD8                     
 19472                           ; BSR set to: 0
 19473                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 19474                           
 19475                           ; BSR set to: 0
 19476                           
 19477                           ;usb_device_msd.c: 954: default:
 19478                           
 19479                           ; BSR set to: 0
 19480  000BD8  0E7F               	movlw	127
 19481  000BDA  EC37  F02C         	call	_MSDErrorHandler
 19482                           
 19483                           ;usb_device_msd.c: 960: }
 19484                           
 19485                           ;usb_device_msd.c: 959: break;
 19486  000BDE  0012               	return	
 19487  000BE0                     l614:
 19488  000BE0  0100               	movlb	0	; () banked
 19489  000BE2  51EC               	movf	_MSDCommandState& (0+255),w,b
 19490                           
 19491                           ; Switch size 1, requested type "space"
 19492                           ; Number of cases is 12, Range of values is 0 to 254
 19493                           ; switch strategies available:
 19494                           ; Name         Instructions Cycles
 19495                           ; simple_byte           37    19 (average)
 19496                           ;	Chosen strategy is simple_byte
 19497  000BE4  0A00               	xorlw	0	; case 0
 19498  000BE6  B4D8               	btfsc	status,2,c
 19499  000BE8  D75B               	goto	l634
 19500  000BEA  0A03               	xorlw	3	; case 3
 19501  000BEC  B4D8               	btfsc	status,2,c
 19502  000BEE  D6DD               	goto	l624
 19503  000BF0  0A11               	xorlw	17	; case 18
 19504  000BF2  B4D8               	btfsc	status,2,c
 19505  000BF4  D64C               	goto	l620
 19506  000BF6  0A08               	xorlw	8	; case 26
 19507  000BF8  B4D8               	btfsc	status,2,c
 19508  000BFA  D704               	goto	l628
 19509  000BFC  0A01               	xorlw	1	; case 27
 19510  000BFE  B4D8               	btfsc	status,2,c
 19511  000C00  D777               	goto	l638
 19512  000C02  0A05               	xorlw	5	; case 30
 19513  000C04  B4D8               	btfsc	status,2,c
 19514  000C06  D735               	goto	l633
 19515  000C08  0A3B               	xorlw	59	; case 37
 19516  000C0A  B4D8               	btfsc	status,2,c
 19517  000C0C  D671               	goto	l623
 19518  000C0E  0A0D               	xorlw	13	; case 40
 19519  000C10  B4D8               	btfsc	status,2,c
 19520  000C12  D62D               	goto	l615
 19521  000C14  0A02               	xorlw	2	; case 42
 19522  000C16  B4D8               	btfsc	status,2,c
 19523  000C18  D632               	goto	l618
 19524  000C1A  0A05               	xorlw	5	; case 47
 19525  000C1C  B4D8               	btfsc	status,2,c
 19526  000C1E  D768               	goto	l638
 19527  000C20  0AD2               	xorlw	210	; case 253
 19528  000C22  B4D8               	btfsc	status,2,c
 19529  000C24  D771               	goto	l640
 19530  000C26  0A03               	xorlw	3	; case 254
 19531  000C28  D7D7               	goto	l654
 19532  000C2A                     __end_of_MSDProcessCommandMediaPresent:
 19533                           	opt stack 0
 19534                           tosu	equ	0xFFF
 19535                           tosh	equ	0xFFE
 19536                           tosl	equ	0xFFD
 19537                           pclath	equ	0xFFA
 19538                           tblptru	equ	0xFF8
 19539                           tblptrh	equ	0xFF7
 19540                           tblptrl	equ	0xFF6
 19541                           tablat	equ	0xFF5
 19542                           prodh	equ	0xFF4
 19543                           prodl	equ	0xFF3
 19544                           intcon	equ	0xFF2
 19545                           intcon2	equ	0xFF1
 19546                           intcon3	equ	0xFF0
 19547                           indf0	equ	0xFEF
 19548                           postinc0	equ	0xFEE
 19549                           fsr0h	equ	0xFEA
 19550                           fsr0l	equ	0xFE9
 19551                           wreg	equ	0xFE8
 19552                           indf1	equ	0xFE7
 19553                           postdec1	equ	0xFE5
 19554                           plusw1	equ	0xFE3
 19555                           fsr1h	equ	0xFE2
 19556                           fsr1l	equ	0xFE1
 19557                           indf2	equ	0xFDF
 19558                           postinc2	equ	0xFDE
 19559                           postdec2	equ	0xFDD
 19560                           plusw2	equ	0xFDB
 19561                           fsr2h	equ	0xFDA
 19562                           fsr2l	equ	0xFD9
 19563                           status	equ	0xFD8
 19564                           
 19565 ;; *************** function _MSDWriteHandler *****************
 19566 ;; Defined at:
 19567 ;;		line 1188 in file "usb_device_msd.c"
 19568 ;; Parameters:    Size  Location     Type
 19569 ;;		None
 19570 ;; Auto vars:     Size  Location     Type
 19571 ;;		None
 19572 ;; Return value:  Size  Location     Type
 19573 ;;                  1    wreg      unsigned char 
 19574 ;; Registers used:
 19575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19576 ;; Tracked objects:
 19577 ;;		On entry : 0/0
 19578 ;;		On exit  : 0/0
 19579 ;;		Unchanged: 0/0
 19580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19583 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19584 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19585 ;;Total ram usage:        5 bytes
 19586 ;; Hardware stack levels used:    1
 19587 ;; Hardware stack levels required when called:    6
 19588 ;; This function calls:
 19589 ;;		_ExternalFlash_SectorWrite
 19590 ;;		_ExternalFlash_WriteProtectStateGet
 19591 ;;		_MSDCheckForErrorCases
 19592 ;;		_USBStallEndpoint
 19593 ;;		_USBTransferOnePacket
 19594 ;; This function is called by:
 19595 ;;		_MSDProcessCommandMediaPresent
 19596 ;; This function uses a non-reentrant model
 19597 ;;
 19598                           
 19599                           	psect	text87
 19600  001890                     __ptext87:
 19601                           	opt stack 0
 19602  001890                     _MSDWriteHandler:
 19603                           	opt stack 20
 19604                           
 19605                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 19606                           
 19607                           ;incstack = 0
 19608  001890  D146               	goto	l684
 19609  001892                     l685:
 19610                           
 19611                           ; BSR set to: 0
 19612                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 19613  001892  C111  F161         	movff	_gblCBW+17,_LBA+3
 19614                           
 19615                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 19616  001896  C112  F160         	movff	_gblCBW+18,_LBA+2
 19617                           
 19618                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 19619  00189A  C113  F15F         	movff	_gblCBW+19,_LBA+1
 19620                           
 19621                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 19622  00189E  C114  F15E         	movff	_gblCBW+20,_LBA
 19623                           
 19624                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 19625  0018A2  C116  F0DC         	movff	_gblCBW+22,_TransferLength+1
 19626                           
 19627                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 19628  0018A6  C117  F0DB         	movff	_gblCBW+23,_TransferLength
 19629                           
 19630                           ; BSR set to: 0
 19631                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19632  0018AA  51DB               	movf	_TransferLength& (0+255),w,b
 19633  0018AC  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19634  0018AE  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 19635  0018B0  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 19636  0018B2  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19637  0018B4  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19638  0018B6  0E09               	movlw	9
 19639  0018B8                     u9025:
 19640  0018B8  90D8               	bcf	status,0,c
 19641  0018BA  3630               	rlcf	??_MSDWriteHandler,f,c
 19642  0018BC  3631               	rlcf	??_MSDWriteHandler+1,f,c
 19643  0018BE  3632               	rlcf	??_MSDWriteHandler+2,f,c
 19644  0018C0  3633               	rlcf	??_MSDWriteHandler+3,f,c
 19645  0018C2  2EE8               	decfsz	wreg,f,c
 19646  0018C4  D7F9               	goto	u9025
 19647  0018C6  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 19648  0018CA  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19649  0018CE  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19650  0018D2  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19651  0018D6  ECF7  F032         	call	_MSDCheckForErrorCases	;wreg free
 19652  0018DA  0900               	iorlw	0
 19653  0018DC  A4D8               	btfss	status,2,c
 19654  0018DE  D131               	goto	l687
 19655                           
 19656                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 19657                           
 19658                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 19659  0018E0  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19660  0018E4  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19661  0018E8  D801               	call	u9048
 19662  0018EA  D00A               	goto	u9049
 19663  0018EC                     u9048:
 19664  0018EC  0005               	push	
 19665  0018EE  6EFA               	movwf	pclath,c
 19666  0018F0  0101               	movlb	1	; () banked
 19667  0018F2  51BD               	movf	(_LUN+10)& (0+255),w,b
 19668  0018F4  6EFD               	movwf	tosl,c
 19669  0018F6  51BE               	movf	(_LUN+11)& (0+255),w,b
 19670  0018F8  6EFE               	movwf	tosh,c
 19671  0018FA  6AFF               	clrf	tosu,c
 19672  0018FC  50FA               	movf	pclath,w,c
 19673  0018FE  0012               	return		;indir
 19674  001900                     u9049:
 19675  001900  0900               	iorlw	0
 19676  001902  B4D8               	btfsc	status,2,c
 19677  001904  D016               	goto	l688
 19678                           
 19679                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 19680  001906  0E01               	movlw	1
 19681  001908  010D               	movlb	13	; () banked
 19682  00190A  6F8C               	movwf	140,b	;volatile
 19683                           
 19684                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 19685  00190C  0101               	movlb	1	; () banked
 19686  00190E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19687  001910  0BF0               	andlw	-16
 19688  001912  0907               	iorlw	7
 19689  001914  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19690                           
 19691                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 19692  001916  0E27               	movlw	39
 19693  001918  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19694                           
 19695                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 19696  00191A  0E00               	movlw	0
 19697  00191C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19698                           
 19699                           ; BSR set to: 1
 19700                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 19701  00191E  0E00               	movlw	0
 19702  001920  6E01               	movwf	USBStallEndpoint@dir,c
 19703  001922  0E02               	movlw	2
 19704  001924  EC30  F02B         	call	_USBStallEndpoint
 19705                           
 19706                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 19707  001928  0E00               	movlw	0
 19708  00192A  0100               	movlb	0	; () banked
 19709  00192C  6FEA               	movwf	_MSDWriteState& (0+255),b
 19710                           
 19711                           ; BSR set to: 0
 19712                           ;usb_device_msd.c: 1228: return MSDWriteState;
 19713  00192E  51EA               	movf	_MSDWriteState& (0+255),w,b
 19714                           
 19715                           ; BSR set to: 0
 19716  001930  0012               	return	
 19717  001932                     l688:
 19718                           
 19719                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 19720                           
 19721                           ; BSR set to: 0
 19722  001932  0E01               	movlw	1
 19723  001934  0100               	movlb	0	; () banked
 19724  001936  6FED               	movwf	_MSD_State& (0+255),b
 19725  001938                     
 19726                           ; BSR set to: 0
 19727                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 19728                           
 19729                           ; BSR set to: 0
 19730  001938  51DB               	movf	_TransferLength& (0+255),w,b
 19731  00193A  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 19732  00193C  A4D8               	btfss	status,2,c
 19733  00193E  D002               	goto	l691
 19734                           
 19735                           ; BSR set to: 0
 19736                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 19737  001940  0E00               	movlw	0
 19738  001942  D056               	goto	L20
 19739  001944                     l691:
 19740                           
 19741                           ; BSR set to: 0
 19742                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 19743                           
 19744                           ; BSR set to: 0
 19745  001944  0E03               	movlw	3
 19746  001946  6FEA               	movwf	_MSDWriteState& (0+255),b
 19747                           
 19748                           ; BSR set to: 0
 19749                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 19750  001948  0E00               	movlw	0
 19751  00194A  0101               	movlb	1	; () banked
 19752  00194C  6F86               	movwf	_ptrNextData& (0+255),b
 19753  00194E  0E06               	movlw	6
 19754  001950  6F87               	movwf	(_ptrNextData+1)& (0+255),b
 19755                           
 19756                           ; BSR set to: 1
 19757                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 19758  001952  0E00               	movlw	0
 19759  001954  010D               	movlb	13	; () banked
 19760  001956  6F88               	movwf	136,b	;volatile
 19761  001958  0E02               	movlw	2
 19762  00195A  6F89               	movwf	137,b	;volatile
 19763  00195C  0E00               	movlw	0
 19764  00195E  6F8A               	movwf	138,b	;volatile
 19765  001960  0E00               	movlw	0
 19766  001962  6F8B               	movwf	139,b	;volatile
 19767  001964                     l692:
 19768                           
 19769                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 19770  001964  010D               	movlb	13	; () banked
 19771  001966  5188               	movf	136,w,b	;volatile
 19772  001968  1189               	iorwf	137,w,b	;volatile
 19773  00196A  118A               	iorwf	138,w,b	;volatile
 19774  00196C  118B               	iorwf	139,w,b	;volatile
 19775  00196E  B4D8               	btfsc	status,2,c
 19776  001970  D01E               	goto	l693
 19777                           
 19778                           ; BSR set to: 13
 19779                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 19780  001972  0100               	movlb	0	; () banked
 19781  001974  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19782  001976  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19783  001978  B4D8               	btfsc	status,2,c
 19784  00197A  D006               	goto	l694
 19785                           
 19786                           ; BSR set to: 0
 19787  00197C  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19788  001980  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19789  001984  BEDF               	btfsc	indf2,7,c
 19790  001986  D0DD               	goto	l687
 19791  001988                     l694:
 19792                           
 19793                           ; BSR set to: 0
 19794                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 19795                           
 19796                           ; BSR set to: 0
 19797  001988  0E00               	movlw	0
 19798  00198A  6E01               	movwf	USBTransferOnePacket@dir,c
 19799  00198C  C186  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 19800  001990  C187  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 19801  001994  0E40               	movlw	64
 19802  001996  6E04               	movwf	USBTransferOnePacket@len,c
 19803  001998  0E02               	movlw	2
 19804  00199A  EC3B  F02D         	call	_USBTransferOnePacket
 19805  00199E  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19806  0019A2  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19807                           
 19808                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 19809  0019A6  0E04               	movlw	4
 19810  0019A8  0100               	movlb	0	; () banked
 19811  0019AA  6FEA               	movwf	_MSDWriteState& (0+255),b
 19812                           
 19813                           ;usb_device_msd.c: 1260: }
 19814  0019AC  D023               	goto	l695
 19815  0019AE                     l693:
 19816                           
 19817                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 19818                           
 19819                           ; BSR set to: 0
 19820  0019AE  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19821  0019B2  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19822  0019B6  D801               	call	u9108
 19823  0019B8  D00A               	goto	u9109
 19824  0019BA                     u9108:
 19825  0019BA  0005               	push	
 19826  0019BC  6EFA               	movwf	pclath,c
 19827  0019BE  0101               	movlb	1	; () banked
 19828  0019C0  51BD               	movf	(_LUN+10)& (0+255),w,b
 19829  0019C2  6EFD               	movwf	tosl,c
 19830  0019C4  51BE               	movf	(_LUN+11)& (0+255),w,b
 19831  0019C6  6EFE               	movwf	tosh,c
 19832  0019C8  6AFF               	clrf	tosu,c
 19833  0019CA  50FA               	movf	pclath,w,c
 19834  0019CC  0012               	return		;indir
 19835  0019CE                     u9109:
 19836  0019CE  0900               	iorlw	0
 19837  0019D0  B4D8               	btfsc	status,2,c
 19838  0019D2  D00C               	goto	l696
 19839                           
 19840                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 19841  0019D4  0E01               	movlw	1
 19842  0019D6  010D               	movlb	13	; () banked
 19843  0019D8  6F8C               	movwf	140,b	;volatile
 19844                           
 19845                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 19846  0019DA  0101               	movlb	1	; () banked
 19847  0019DC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19848  0019DE  0BF0               	andlw	-16
 19849  0019E0  0902               	iorlw	2
 19850  0019E2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19851                           
 19852                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 19853  0019E4  0E27               	movlw	39
 19854  0019E6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19855                           
 19856                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 19857  0019E8  0E00               	movlw	0
 19858  0019EA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19859  0019EC                     l696:
 19860                           
 19861                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 19862  0019EC  0E02               	movlw	2
 19863  0019EE  D095               	goto	L22
 19864  0019F0                     L20:
 19865  0019F0  6FEA               	movwf	_MSDWriteState& (0+255),b
 19866                           
 19867                           ;usb_device_msd.c: 1280: break;
 19868  0019F2  D0A7               	goto	l687
 19869  0019F4                     l695:
 19870                           
 19871                           ; BSR set to: 0
 19872                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 19873                           
 19874                           ; BSR set to: 0
 19875                           
 19876                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 19877                           
 19878                           ; BSR set to: 0
 19879  0019F4  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19880  0019F6  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19881  0019F8  B4D8               	btfsc	status,2,c
 19882  0019FA  D006               	goto	l698
 19883                           
 19884                           ; BSR set to: 0
 19885  0019FC  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19886  001A00  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19887  001A04  BEDF               	btfsc	indf2,7,c
 19888  001A06  D09D               	goto	l687
 19889  001A08                     l698:
 19890                           
 19891                           ; BSR set to: 0
 19892                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 19893                           
 19894                           ; BSR set to: 0
 19895  001A08  EE20 F001          	lfsr	2,1
 19896  001A0C  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19897  001A0E  26D9               	addwf	fsr2l,f,c
 19898  001A10  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19899  001A12  22DA               	addwfc	fsr2h,f,c
 19900  001A14  50DF               	movf	indf2,w,c
 19901  001A16  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19902  001A18  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19903  001A1C  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19904  001A1E  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19905  001A20  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19906  001A22  5031               	movf	??_MSDWriteHandler+1,w,c
 19907  001A24  0101               	movlb	1	; () banked
 19908  001A26  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19909  001A28  5032               	movf	??_MSDWriteHandler+2,w,c
 19910  001A2A  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19911  001A2C  5033               	movf	??_MSDWriteHandler+3,w,c
 19912  001A2E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19913  001A30  5034               	movf	??_MSDWriteHandler+4,w,c
 19914  001A32  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19915                           
 19916                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 19917  001A34  0100               	movlb	0	; () banked
 19918  001A36  EE20 F001          	lfsr	2,1
 19919  001A3A  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19920  001A3C  26D9               	addwf	fsr2l,f,c
 19921  001A3E  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19922  001A40  22DA               	addwfc	fsr2h,f,c
 19923  001A42  50DF               	movf	indf2,w,c
 19924  001A44  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19925  001A46  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19926  001A4A  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19927  001A4C  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19928  001A4E  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19929  001A50  5031               	movf	??_MSDWriteHandler+1,w,c
 19930  001A52  010D               	movlb	13	; () banked
 19931  001A54  5F88               	subwf	136,f,b	;volatile
 19932  001A56  5032               	movf	??_MSDWriteHandler+2,w,c
 19933  001A58  5B89               	subwfb	137,f,b	;volatile
 19934  001A5A  5033               	movf	??_MSDWriteHandler+3,w,c
 19935  001A5C  5B8A               	subwfb	138,f,b	;volatile
 19936  001A5E  5034               	movf	??_MSDWriteHandler+4,w,c
 19937  001A60  5B8B               	subwfb	139,f,b	;volatile
 19938                           
 19939                           ; BSR set to: 13
 19940                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 19941  001A62  0E40               	movlw	64
 19942  001A64  0101               	movlb	1	; () banked
 19943  001A66  2786               	addwf	_ptrNextData& (0+255),f,b
 19944  001A68  0E00               	movlw	0
 19945  001A6A  2387               	addwfc	(_ptrNextData+1)& (0+255),f,b
 19946                           
 19947                           ; BSR set to: 1
 19948                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 19949  001A6C  0E03               	movlw	3
 19950  001A6E  D055               	goto	L22
 19951  001A70                     
 19952                           ; BSR set to: 0
 19953                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 19954                           
 19955                           ; BSR set to: 0
 19956  001A70  010D               	movlb	13	; () banked
 19957  001A72  518C               	movf	140,w,b	;volatile
 19958  001A74  A4D8               	btfss	status,2,c
 19959  001A76  D03B               	goto	l703
 19960                           
 19961                           ; BSR set to: 13
 19962                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 19963  001A78  C1C1  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 19964  001A7C  C1C2  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 19965  001A80  C15E  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 19966  001A84  C15F  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 19967  001A88  C160  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 19968  001A8C  C161  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 19969  001A90  0E00               	movlw	0
 19970  001A92  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 19971  001A94  0E06               	movlw	6
 19972  001A96  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 19973  001A98  0101               	movlb	1	; () banked
 19974  001A9A  515E               	movf	_LBA& (0+255),w,b
 19975  001A9C  115F               	iorwf	(_LBA+1)& (0+255),w,b
 19976  001A9E  1160               	iorwf	(_LBA+2)& (0+255),w,b
 19977  001AA0  1161               	iorwf	(_LBA+3)& (0+255),w,b
 19978  001AA2  A4D8               	btfss	status,2,c
 19979  001AA4  D002               	goto	u9150
 19980  001AA6  0E01               	movlw	1
 19981  001AA8  D001               	goto	u9160
 19982  001AAA                     u9150:
 19983  001AAA  0E00               	movlw	0
 19984  001AAC                     u9160:
 19985  001AAC  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 19986  001AAE  D801               	call	u9178
 19987  001AB0  D009               	goto	u9179
 19988  001AB2                     u9178:
 19989  001AB2  0005               	push	
 19990  001AB4  6EFA               	movwf	pclath,c
 19991  001AB6  51BF               	movf	(_LUN+12)& (0+255),w,b
 19992  001AB8  6EFD               	movwf	tosl,c
 19993  001ABA  51C0               	movf	(_LUN+13)& (0+255),w,b
 19994  001ABC  6EFE               	movwf	tosh,c
 19995  001ABE  6AFF               	clrf	tosu,c
 19996  001AC0  50FA               	movf	pclath,w,c
 19997  001AC2  0012               	return		;indir
 19998  001AC4                     u9179:
 19999  001AC4  06E8               	decf	wreg,f,c
 20000  001AC6  B4D8               	btfsc	status,2,c
 20001  001AC8  D012               	goto	l703
 20002                           
 20003                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 20004  001ACA  0E64               	movlw	100
 20005  001ACC  0100               	movlb	0	; () banked
 20006  001ACE  61E9               	cpfslt	_MSDRetryAttempt& (0+255),b
 20007  001AD0  D002               	goto	l702
 20008                           
 20009                           ; BSR set to: 0
 20010                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 20011  001AD2  2BE9               	incf	_MSDRetryAttempt& (0+255),f,b
 20012                           
 20013                           ;usb_device_msd.c: 1314: break;
 20014  001AD4  D036               	goto	l687
 20015  001AD6                     l702:
 20016                           
 20017                           ; BSR set to: 0
 20018                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 20019                           
 20020                           ; BSR set to: 0
 20021  001AD6  0E01               	movlw	1
 20022  001AD8  010D               	movlb	13	; () banked
 20023  001ADA  6F8C               	movwf	140,b	;volatile
 20024                           
 20025                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 20026  001ADC  0101               	movlb	1	; () banked
 20027  001ADE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20028  001AE0  0BF0               	andlw	-16
 20029  001AE2  0903               	iorlw	3
 20030  001AE4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20031                           
 20032                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 20033  001AE6  0E00               	movlw	0
 20034  001AE8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20035                           
 20036                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 20037  001AEA  0E00               	movlw	0
 20038  001AEC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20039  001AEE                     l703:
 20040                           
 20041                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 20042                           
 20043                           ; BSR set to: 1
 20044                           
 20045                           ; BSR set to: 1
 20046                           
 20047                           ; BSR set to: 1
 20048  001AEE  0E01               	movlw	1
 20049  001AF0  0101               	movlb	1	; () banked
 20050  001AF2  275E               	addwf	_LBA& (0+255),f,b
 20051  001AF4  0E00               	movlw	0
 20052  001AF6  235F               	addwfc	(_LBA+1)& (0+255),f,b
 20053  001AF8  2360               	addwfc	(_LBA+2)& (0+255),f,b
 20054  001AFA  2361               	addwfc	(_LBA+3)& (0+255),f,b
 20055                           
 20056                           ; BSR set to: 1
 20057                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 20058  001AFC  0100               	movlb	0	; () banked
 20059  001AFE  07DB               	decf	_TransferLength& (0+255),f,b
 20060  001B00  A0D8               	btfss	status,0,c
 20061  001B02  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 20062                           
 20063                           ; BSR set to: 0
 20064                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 20065  001B04  0E01               	movlw	1
 20066  001B06  D774               	goto	L20
 20067  001B08                     
 20068                           ; BSR set to: 0
 20069                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 20070                           
 20071                           ; BSR set to: 0
 20072  001B08  0E02               	movlw	2
 20073  001B0A  010D               	movlb	13	; () banked
 20074  001B0C  6F8C               	movwf	140,b	;volatile
 20075                           
 20076                           ; BSR set to: 13
 20077                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 20078  001B0E  0E00               	movlw	0
 20079  001B10  6E01               	movwf	USBStallEndpoint@dir,c
 20080  001B12  0E02               	movlw	2
 20081  001B14  EC30  F02B         	call	_USBStallEndpoint
 20082                           
 20083                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 20084  001B18  0E00               	movlw	0
 20085  001B1A                     L22:
 20086  001B1A  0100               	movlb	0	; () banked
 20087  001B1C  D769               	goto	L20
 20088  001B1E                     l684:
 20089                           
 20090                           ; BSR set to: 0
 20091  001B1E  0100               	movlb	0	; () banked
 20092  001B20  51EA               	movf	_MSDWriteState& (0+255),w,b
 20093                           
 20094                           ; Switch size 1, requested type "space"
 20095                           ; Number of cases is 5, Range of values is 0 to 4
 20096                           ; switch strategies available:
 20097                           ; Name         Instructions Cycles
 20098                           ; simple_byte           16     9 (average)
 20099                           ;	Chosen strategy is simple_byte
 20100  001B22  0A00               	xorlw	0	; case 0
 20101  001B24  B4D8               	btfsc	status,2,c
 20102  001B26  D6B5               	goto	l685
 20103  001B28  0A01               	xorlw	1	; case 1
 20104  001B2A  B4D8               	btfsc	status,2,c
 20105  001B2C  D705               	goto	l690
 20106  001B2E  0A03               	xorlw	3	; case 2
 20107  001B30  B4D8               	btfsc	status,2,c
 20108  001B32  D79E               	goto	l699
 20109  001B34  0A01               	xorlw	1	; case 3
 20110  001B36  B4D8               	btfsc	status,2,c
 20111  001B38  D715               	goto	l692
 20112  001B3A  0A07               	xorlw	7	; case 4
 20113  001B3C  B4D8               	btfsc	status,2,c
 20114  001B3E  D75A               	goto	l695
 20115  001B40  D7E3               	goto	l704
 20116  001B42                     l687:
 20117                           
 20118                           ;usb_device_msd.c: 1347: return MSDWriteState;
 20119                           
 20120                           ; BSR set to: 0
 20121  001B42  0100               	movlb	0	; () banked
 20122  001B44  51EA               	movf	_MSDWriteState& (0+255),w,b
 20123  001B46  0012               	return	
 20124  001B48                     __end_of_MSDWriteHandler:
 20125                           	opt stack 0
 20126                           tosu	equ	0xFFF
 20127                           tosh	equ	0xFFE
 20128                           tosl	equ	0xFFD
 20129                           pclath	equ	0xFFA
 20130                           tblptru	equ	0xFF8
 20131                           tblptrh	equ	0xFF7
 20132                           tblptrl	equ	0xFF6
 20133                           tablat	equ	0xFF5
 20134                           prodh	equ	0xFF4
 20135                           prodl	equ	0xFF3
 20136                           intcon	equ	0xFF2
 20137                           intcon2	equ	0xFF1
 20138                           intcon3	equ	0xFF0
 20139                           indf0	equ	0xFEF
 20140                           postinc0	equ	0xFEE
 20141                           fsr0h	equ	0xFEA
 20142                           fsr0l	equ	0xFE9
 20143                           wreg	equ	0xFE8
 20144                           indf1	equ	0xFE7
 20145                           postdec1	equ	0xFE5
 20146                           plusw1	equ	0xFE3
 20147                           fsr1h	equ	0xFE2
 20148                           fsr1l	equ	0xFE1
 20149                           indf2	equ	0xFDF
 20150                           postinc2	equ	0xFDE
 20151                           postdec2	equ	0xFDD
 20152                           plusw2	equ	0xFDB
 20153                           fsr2h	equ	0xFDA
 20154                           fsr2l	equ	0xFD9
 20155                           status	equ	0xFD8
 20156                           
 20157 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 20158 ;; Defined at:
 20159 ;;		line 34 in file "external_flash.c"
 20160 ;; Parameters:    Size  Location     Type
 20161 ;;  config          2    0[COMRAM] PTR void 
 20162 ;;		 -> NULL(0), 
 20163 ;; Auto vars:     Size  Location     Type
 20164 ;;		None
 20165 ;; Return value:  Size  Location     Type
 20166 ;;                  1    wreg      unsigned char 
 20167 ;; Registers used:
 20168 ;;		wreg
 20169 ;; Tracked objects:
 20170 ;;		On entry : 0/0
 20171 ;;		On exit  : 0/0
 20172 ;;		Unchanged: 0/0
 20173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20178 ;;Total ram usage:        2 bytes
 20179 ;; Hardware stack levels used:    1
 20180 ;; This function calls:
 20181 ;;		Nothing
 20182 ;; This function is called by:
 20183 ;;		_MSDWriteHandler
 20184 ;;		_MSDProcessCommandMediaPresent
 20185 ;; This function uses a non-reentrant model
 20186 ;;
 20187                           
 20188                           	psect	text88
 20189  009D2A                     __ptext88:
 20190                           	opt stack 0
 20191  009D2A                     _ExternalFlash_WriteProtectStateGet:
 20192                           	opt stack 25
 20193                           
 20194                           ;external_flash.c: 37: return 0;
 20195                           
 20196                           ; BSR set to: 0
 20197                           ;incstack = 0
 20198  009D2A  0E00               	movlw	0
 20199  009D2C  0012               	return	
 20200  009D2E                     __end_of_ExternalFlash_WriteProtectStateGet:
 20201                           	opt stack 0
 20202                           tosu	equ	0xFFF
 20203                           tosh	equ	0xFFE
 20204                           tosl	equ	0xFFD
 20205                           pclath	equ	0xFFA
 20206                           tblptru	equ	0xFF8
 20207                           tblptrh	equ	0xFF7
 20208                           tblptrl	equ	0xFF6
 20209                           tablat	equ	0xFF5
 20210                           prodh	equ	0xFF4
 20211                           prodl	equ	0xFF3
 20212                           intcon	equ	0xFF2
 20213                           intcon2	equ	0xFF1
 20214                           intcon3	equ	0xFF0
 20215                           indf0	equ	0xFEF
 20216                           postinc0	equ	0xFEE
 20217                           fsr0h	equ	0xFEA
 20218                           fsr0l	equ	0xFE9
 20219                           wreg	equ	0xFE8
 20220                           indf1	equ	0xFE7
 20221                           postdec1	equ	0xFE5
 20222                           plusw1	equ	0xFE3
 20223                           fsr1h	equ	0xFE2
 20224                           fsr1l	equ	0xFE1
 20225                           indf2	equ	0xFDF
 20226                           postinc2	equ	0xFDE
 20227                           postdec2	equ	0xFDD
 20228                           plusw2	equ	0xFDB
 20229                           fsr2h	equ	0xFDA
 20230                           fsr2l	equ	0xFD9
 20231                           status	equ	0xFD8
 20232                           
 20233 ;; *************** function _ExternalFlash_SectorWrite *****************
 20234 ;; Defined at:
 20235 ;;		line 56 in file "external_flash.c"
 20236 ;; Parameters:    Size  Location     Type
 20237 ;;  config          2   36[COMRAM] PTR void 
 20238 ;;		 -> NULL(0), 
 20239 ;;  sector_addr     4   38[COMRAM] unsigned long 
 20240 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 20241 ;;		 -> msd_buffer(512), 
 20242 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 20243 ;; Auto vars:     Size  Location     Type
 20244 ;;  page            2   45[COMRAM] unsigned int 
 20245 ;; Return value:  Size  Location     Type
 20246 ;;                  1    wreg      unsigned char 
 20247 ;; Registers used:
 20248 ;;		wreg, status,2, status,0, cstack
 20249 ;; Tracked objects:
 20250 ;;		On entry : 0/0
 20251 ;;		On exit  : 0/0
 20252 ;;		Unchanged: 0/0
 20253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20254 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20257 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20258 ;;Total ram usage:       11 bytes
 20259 ;; Hardware stack levels used:    1
 20260 ;; Hardware stack levels required when called:    5
 20261 ;; This function calls:
 20262 ;;		_flash_sector_write
 20263 ;; This function is called by:
 20264 ;;		_MSDWriteHandler
 20265 ;; This function uses a non-reentrant model
 20266 ;;
 20267                           
 20268                           	psect	text89
 20269  00956A                     __ptext89:
 20270                           	opt stack 0
 20271  00956A                     _ExternalFlash_SectorWrite:
 20272                           	opt stack 20
 20273                           
 20274                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 20275                           
 20276                           ;incstack = 0
 20277  00956A  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 20278  00956E  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 20279                           
 20280                           ;external_flash.c: 61: if(sector_addr >= 8192)
 20281  009572  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 20282  009574  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 20283  009576  E104               	bnz	u8460
 20284  009578  0E20               	movlw	32
 20285  00957A  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 20286  00957C  A0D8               	btfss	status,0,c
 20287  00957E  D002               	goto	l1928
 20288  009580                     u8460:
 20289                           
 20290                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 20291  009580  0E00               	movlw	0
 20292  009582  0012               	return	
 20293  009584                     l1928:
 20294                           
 20295                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 20296  009584  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 20297  009588  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 20298  00958C  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 20299  009590  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 20300  009594  ECCB  F046         	call	_flash_sector_write	;wreg free
 20301                           
 20302                           ;external_flash.c: 69: return 1;
 20303  009598  0E01               	movlw	1
 20304  00959A  0012               	return	
 20305  00959C                     __end_of_ExternalFlash_SectorWrite:
 20306                           	opt stack 0
 20307                           tosu	equ	0xFFF
 20308                           tosh	equ	0xFFE
 20309                           tosl	equ	0xFFD
 20310                           pclath	equ	0xFFA
 20311                           tblptru	equ	0xFF8
 20312                           tblptrh	equ	0xFF7
 20313                           tblptrl	equ	0xFF6
 20314                           tablat	equ	0xFF5
 20315                           prodh	equ	0xFF4
 20316                           prodl	equ	0xFF3
 20317                           intcon	equ	0xFF2
 20318                           intcon2	equ	0xFF1
 20319                           intcon3	equ	0xFF0
 20320                           indf0	equ	0xFEF
 20321                           postinc0	equ	0xFEE
 20322                           fsr0h	equ	0xFEA
 20323                           fsr0l	equ	0xFE9
 20324                           wreg	equ	0xFE8
 20325                           indf1	equ	0xFE7
 20326                           postdec1	equ	0xFE5
 20327                           plusw1	equ	0xFE3
 20328                           fsr1h	equ	0xFE2
 20329                           fsr1l	equ	0xFE1
 20330                           indf2	equ	0xFDF
 20331                           postinc2	equ	0xFDE
 20332                           postdec2	equ	0xFDD
 20333                           plusw2	equ	0xFDB
 20334                           fsr2h	equ	0xFDA
 20335                           fsr2l	equ	0xFD9
 20336                           status	equ	0xFD8
 20337                           
 20338 ;; *************** function _MSDReadHandler *****************
 20339 ;; Defined at:
 20340 ;;		line 1038 in file "usb_device_msd.c"
 20341 ;; Parameters:    Size  Location     Type
 20342 ;;		None
 20343 ;; Auto vars:     Size  Location     Type
 20344 ;;		None
 20345 ;; Return value:  Size  Location     Type
 20346 ;;                  1    wreg      unsigned char 
 20347 ;; Registers used:
 20348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20349 ;; Tracked objects:
 20350 ;;		On entry : 0/0
 20351 ;;		On exit  : 0/0
 20352 ;;		Unchanged: 0/0
 20353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20356 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20358 ;;Total ram usage:        4 bytes
 20359 ;; Hardware stack levels used:    1
 20360 ;; Hardware stack levels required when called:    6
 20361 ;; This function calls:
 20362 ;;		_ExternalFlash_SectorRead
 20363 ;;		_MSDCheckForErrorCases
 20364 ;;		_USBStallEndpoint
 20365 ;;		_USBTransferOnePacket
 20366 ;; This function is called by:
 20367 ;;		_MSDProcessCommandMediaPresent
 20368 ;; This function uses a non-reentrant model
 20369 ;;
 20370                           
 20371                           	psect	text90
 20372  00353C                     __ptext90:
 20373                           	opt stack 0
 20374  00353C                     _MSDReadHandler:
 20375                           	opt stack 20
 20376                           
 20377                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 20378                           
 20379                           ;incstack = 0
 20380  00353C  D0D7               	goto	l665
 20381  00353E                     l666:
 20382                           
 20383                           ; BSR set to: 0
 20384                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 20385  00353E  C111  F161         	movff	_gblCBW+17,_LBA+3
 20386                           
 20387                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 20388  003542  C112  F160         	movff	_gblCBW+18,_LBA+2
 20389                           
 20390                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 20391  003546  C113  F15F         	movff	_gblCBW+19,_LBA+1
 20392                           
 20393                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 20394  00354A  C114  F15E         	movff	_gblCBW+20,_LBA
 20395                           
 20396                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 20397  00354E  C116  F0DC         	movff	_gblCBW+22,_TransferLength+1
 20398                           
 20399                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 20400  003552  C117  F0DB         	movff	_gblCBW+23,_TransferLength
 20401                           
 20402                           ; BSR set to: 0
 20403                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20404  003556  51DB               	movf	_TransferLength& (0+255),w,b
 20405  003558  6E36               	movwf	??_MSDReadHandler& (0+255),c
 20406  00355A  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 20407  00355C  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 20408  00355E  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 20409  003560  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 20410  003562  0E09               	movlw	9
 20411  003564                     u8915:
 20412  003564  90D8               	bcf	status,0,c
 20413  003566  3636               	rlcf	??_MSDReadHandler,f,c
 20414  003568  3637               	rlcf	??_MSDReadHandler+1,f,c
 20415  00356A  3638               	rlcf	??_MSDReadHandler+2,f,c
 20416  00356C  3639               	rlcf	??_MSDReadHandler+3,f,c
 20417  00356E  2EE8               	decfsz	wreg,f,c
 20418  003570  D7F9               	goto	u8915
 20419  003572  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 20420  003576  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20421  00357A  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20422  00357E  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20423  003582  ECF7  F032         	call	_MSDCheckForErrorCases	;wreg free
 20424  003586  0900               	iorlw	0
 20425  003588  A4D8               	btfss	status,2,c
 20426  00358A  D0C2               	goto	l668
 20427                           
 20428                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 20429                           
 20430                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 20431  00358C  0E01               	movlw	1
 20432  00358E  0100               	movlb	0	; () banked
 20433  003590  6FEB               	movwf	_MSDReadState& (0+255),b
 20434  003592                     
 20435                           ; BSR set to: 0
 20436                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 20437                           
 20438                           ; BSR set to: 0
 20439  003592  51DB               	movf	_TransferLength& (0+255),w,b
 20440  003594  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 20441  003596  A4D8               	btfss	status,2,c
 20442  003598  D002               	goto	l670
 20443                           
 20444                           ; BSR set to: 0
 20445                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 20446  00359A  0E00               	movlw	0
 20447  00359C  D046               	goto	L23
 20448  00359E                     l670:
 20449                           
 20450                           ; BSR set to: 0
 20451                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 20452                           
 20453                           ; BSR set to: 0
 20454  00359E  07DB               	decf	_TransferLength& (0+255),f,b
 20455  0035A0  A0D8               	btfss	status,0,c
 20456  0035A2  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 20457                           
 20458                           ; BSR set to: 0
 20459                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 20460  0035A4  0E02               	movlw	2
 20461  0035A6  6FEB               	movwf	_MSDReadState& (0+255),b
 20462  0035A8                     
 20463                           ; BSR set to: 0
 20464                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 20465                           
 20466                           ; BSR set to: 0
 20467  0035A8  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20468  0035AA  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20469  0035AC  B4D8               	btfsc	status,2,c
 20470  0035AE  D006               	goto	l672
 20471                           
 20472                           ; BSR set to: 0
 20473  0035B0  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20474  0035B4  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20475  0035B8  BEDF               	btfsc	indf2,7,c
 20476  0035BA  D0AA               	goto	l668
 20477  0035BC                     l672:
 20478                           
 20479                           ; BSR set to: 0
 20480                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 20481                           
 20482                           ; BSR set to: 0
 20483  0035BC  C1C1  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 20484  0035C0  C1C2  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 20485  0035C4  C15E  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 20486  0035C8  C15F  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 20487  0035CC  C160  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 20488  0035D0  C161  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 20489  0035D4  0E00               	movlw	0
 20490  0035D6  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 20491  0035D8  0E06               	movlw	6
 20492  0035DA  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 20493  0035DC  D801               	call	u8968
 20494  0035DE  D00A               	goto	u8969
 20495  0035E0                     u8968:
 20496  0035E0  0005               	push	
 20497  0035E2  6EFA               	movwf	pclath,c
 20498  0035E4  0101               	movlb	1	; () banked
 20499  0035E6  51BB               	movf	(_LUN+8)& (0+255),w,b
 20500  0035E8  6EFD               	movwf	tosl,c
 20501  0035EA  51BC               	movf	(_LUN+9)& (0+255),w,b
 20502  0035EC  6EFE               	movwf	tosh,c
 20503  0035EE  6AFF               	clrf	tosu,c
 20504  0035F0  50FA               	movf	pclath,w,c
 20505  0035F2  0012               	return		;indir
 20506  0035F4                     u8969:
 20507  0035F4  06E8               	decf	wreg,f,c
 20508  0035F6  B4D8               	btfsc	status,2,c
 20509  0035F8  D01A               	goto	l675
 20510                           
 20511                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 20512  0035FA  0E64               	movlw	100
 20513  0035FC  0100               	movlb	0	; () banked
 20514  0035FE  61E9               	cpfslt	_MSDRetryAttempt& (0+255),b
 20515  003600  D002               	goto	l674
 20516                           
 20517                           ; BSR set to: 0
 20518                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 20519  003602  2BE9               	incf	_MSDRetryAttempt& (0+255),f,b
 20520                           
 20521                           ;usb_device_msd.c: 1088: break;
 20522  003604  D085               	goto	l668
 20523  003606                     l674:
 20524                           
 20525                           ; BSR set to: 0
 20526                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 20527                           
 20528                           ; BSR set to: 0
 20529  003606  0E02               	movlw	2
 20530  003608  010D               	movlb	13	; () banked
 20531  00360A  6F8C               	movwf	140,b	;volatile
 20532                           
 20533                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 20534  00360C  0101               	movlb	1	; () banked
 20535  00360E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20536  003610  0BF0               	andlw	-16
 20537  003612  0903               	iorlw	3
 20538  003614  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20539                           
 20540                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 20541  003616  0E00               	movlw	0
 20542  003618  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20543                           
 20544                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 20545  00361A  0E00               	movlw	0
 20546  00361C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20547                           
 20548                           ; BSR set to: 1
 20549                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 20550  00361E  0E01               	movlw	1
 20551  003620  6E01               	movwf	USBStallEndpoint@dir,c
 20552  003622  0E02               	movlw	2
 20553  003624  EC30  F02B         	call	_USBStallEndpoint
 20554  003628  D05E               	goto	l12050
 20555  00362A                     L23:
 20556  00362A  6FEB               	movwf	_MSDReadState& (0+255),b
 20557                           
 20558                           ;usb_device_msd.c: 1109: break;
 20559  00362C  D071               	goto	l668
 20560  00362E                     l675:
 20561                           
 20562                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 20563                           
 20564                           ; BSR set to: 0
 20565                           
 20566                           ; BSR set to: 0
 20567  00362E  0E01               	movlw	1
 20568  003630  0101               	movlb	1	; () banked
 20569  003632  275E               	addwf	_LBA& (0+255),f,b
 20570  003634  0E00               	movlw	0
 20571  003636  235F               	addwfc	(_LBA+1)& (0+255),f,b
 20572  003638  2360               	addwfc	(_LBA+2)& (0+255),f,b
 20573  00363A  2361               	addwfc	(_LBA+3)& (0+255),f,b
 20574                           
 20575                           ; BSR set to: 1
 20576                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 20577  00363C  0E00               	movlw	0
 20578  00363E  010D               	movlb	13	; () banked
 20579  003640  6F88               	movwf	136,b	;volatile
 20580  003642  0E02               	movlw	2
 20581  003644  6F89               	movwf	137,b	;volatile
 20582  003646  0E00               	movlw	0
 20583  003648  6F8A               	movwf	138,b	;volatile
 20584  00364A  0E00               	movlw	0
 20585  00364C  6F8B               	movwf	139,b	;volatile
 20586                           
 20587                           ; BSR set to: 13
 20588                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 20589  00364E  0E00               	movlw	0
 20590  003650  0101               	movlb	1	; () banked
 20591  003652  6F86               	movwf	_ptrNextData& (0+255),b
 20592  003654  0E06               	movlw	6
 20593  003656  6F87               	movwf	(_ptrNextData+1)& (0+255),b
 20594                           
 20595                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 20596  003658  0E03               	movlw	3
 20597  00365A  0100               	movlb	0	; () banked
 20598  00365C  6FEB               	movwf	_MSDReadState& (0+255),b
 20599  00365E                     
 20600                           ; BSR set to: 0
 20601                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 20602                           
 20603                           ; BSR set to: 0
 20604  00365E  010D               	movlb	13	; () banked
 20605  003660  5188               	movf	136,w,b	;volatile
 20606  003662  1189               	iorwf	137,w,b	;volatile
 20607  003664  118A               	iorwf	138,w,b	;volatile
 20608  003666  118B               	iorwf	139,w,b	;volatile
 20609  003668  A4D8               	btfss	status,2,c
 20610  00366A  D002               	goto	l677
 20611                           
 20612                           ; BSR set to: 13
 20613                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 20614  00366C  0E01               	movlw	1
 20615  00366E  D03C               	goto	L25
 20616  003670                     l677:
 20617                           
 20618                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 20619                           
 20620                           ; BSR set to: 0
 20621  003670  0E04               	movlw	4
 20622  003672  0100               	movlb	0	; () banked
 20623  003674  6FEB               	movwf	_MSDReadState& (0+255),b
 20624  003676                     
 20625                           ; BSR set to: 0
 20626                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 20627                           
 20628                           ; BSR set to: 0
 20629  003676  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20630  003678  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20631  00367A  B4D8               	btfsc	status,2,c
 20632  00367C  D006               	goto	l679
 20633                           
 20634                           ; BSR set to: 0
 20635  00367E  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20636  003682  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20637  003686  BEDF               	btfsc	indf2,7,c
 20638  003688  D043               	goto	l668
 20639  00368A                     l679:
 20640                           
 20641                           ; BSR set to: 0
 20642                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 20643                           
 20644                           ; BSR set to: 0
 20645  00368A  0E01               	movlw	1
 20646  00368C  6E01               	movwf	USBTransferOnePacket@dir,c
 20647  00368E  C186  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20648  003692  C187  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20649  003696  0E40               	movlw	64
 20650  003698  6E04               	movwf	USBTransferOnePacket@len,c
 20651  00369A  0E02               	movlw	2
 20652  00369C  EC3B  F02D         	call	_USBTransferOnePacket
 20653  0036A0  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20654  0036A4  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20655                           
 20656                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 20657  0036A8  0E03               	movlw	3
 20658  0036AA  0100               	movlb	0	; () banked
 20659  0036AC  6FEB               	movwf	_MSDReadState& (0+255),b
 20660                           
 20661                           ; BSR set to: 0
 20662                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 20663  0036AE  0E40               	movlw	64
 20664  0036B0  0101               	movlb	1	; () banked
 20665  0036B2  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20666  0036B4  0E00               	movlw	0
 20667  0036B6  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20668  0036B8  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20669  0036BA  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20670                           
 20671                           ; BSR set to: 1
 20672                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 20673  0036BC  0E40               	movlw	64
 20674  0036BE  010D               	movlb	13	; () banked
 20675  0036C0  5F88               	subwf	136,f,b	;volatile
 20676  0036C2  0E00               	movlw	0
 20677  0036C4  5B89               	subwfb	137,f,b	;volatile
 20678  0036C6  5B8A               	subwfb	138,f,b	;volatile
 20679  0036C8  5B8B               	subwfb	139,f,b	;volatile
 20680                           
 20681                           ; BSR set to: 13
 20682                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 20683  0036CA  0E40               	movlw	64
 20684  0036CC  0101               	movlb	1	; () banked
 20685  0036CE  2786               	addwf	_ptrNextData& (0+255),f,b
 20686  0036D0  0E00               	movlw	0
 20687  0036D2  2387               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20688                           
 20689                           ;usb_device_msd.c: 1149: break;
 20690  0036D4  D01D               	goto	l668
 20691  0036D6                     
 20692                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 20693                           
 20694                           ; BSR set to: 1
 20695  0036D6  0E02               	movlw	2
 20696  0036D8  010D               	movlb	13	; () banked
 20697  0036DA  6F8C               	movwf	140,b	;volatile
 20698                           
 20699                           ; BSR set to: 13
 20700                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 20701  0036DC  0E01               	movlw	1
 20702  0036DE  6E01               	movwf	USBStallEndpoint@dir,c
 20703  0036E0  0E02               	movlw	2
 20704  0036E2  EC30  F02B         	call	_USBStallEndpoint
 20705  0036E6                     l12050:
 20706                           
 20707                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 20708  0036E6  0E00               	movlw	0
 20709  0036E8                     L25:
 20710  0036E8  0100               	movlb	0	; () banked
 20711  0036EA  D79F               	goto	L23
 20712  0036EC                     l665:
 20713                           
 20714                           ; BSR set to: 0
 20715  0036EC  0100               	movlb	0	; () banked
 20716  0036EE  51EB               	movf	_MSDReadState& (0+255),w,b
 20717                           
 20718                           ; Switch size 1, requested type "space"
 20719                           ; Number of cases is 5, Range of values is 0 to 4
 20720                           ; switch strategies available:
 20721                           ; Name         Instructions Cycles
 20722                           ; simple_byte           16     9 (average)
 20723                           ;	Chosen strategy is simple_byte
 20724  0036F0  0A00               	xorlw	0	; case 0
 20725  0036F2  B4D8               	btfsc	status,2,c
 20726  0036F4  D724               	goto	l666
 20727  0036F6  0A01               	xorlw	1	; case 1
 20728  0036F8  B4D8               	btfsc	status,2,c
 20729  0036FA  D74B               	goto	l669
 20730  0036FC  0A03               	xorlw	3	; case 2
 20731  0036FE  B4D8               	btfsc	status,2,c
 20732  003700  D753               	goto	l671
 20733  003702  0A01               	xorlw	1	; case 3
 20734  003704  B4D8               	btfsc	status,2,c
 20735  003706  D7AB               	goto	l676
 20736  003708  0A07               	xorlw	7	; case 4
 20737  00370A  B4D8               	btfsc	status,2,c
 20738  00370C  D7B4               	goto	l678
 20739  00370E  D7E3               	goto	l680
 20740  003710                     l668:
 20741                           
 20742                           ;usb_device_msd.c: 1161: return MSDReadState;
 20743                           
 20744                           ; BSR set to: 0
 20745  003710  0100               	movlb	0	; () banked
 20746  003712  51EB               	movf	_MSDReadState& (0+255),w,b
 20747  003714  0012               	return	
 20748  003716                     __end_of_MSDReadHandler:
 20749                           	opt stack 0
 20750                           tosu	equ	0xFFF
 20751                           tosh	equ	0xFFE
 20752                           tosl	equ	0xFFD
 20753                           pclath	equ	0xFFA
 20754                           tblptru	equ	0xFF8
 20755                           tblptrh	equ	0xFF7
 20756                           tblptrl	equ	0xFF6
 20757                           tablat	equ	0xFF5
 20758                           prodh	equ	0xFF4
 20759                           prodl	equ	0xFF3
 20760                           intcon	equ	0xFF2
 20761                           intcon2	equ	0xFF1
 20762                           intcon3	equ	0xFF0
 20763                           indf0	equ	0xFEF
 20764                           postinc0	equ	0xFEE
 20765                           fsr0h	equ	0xFEA
 20766                           fsr0l	equ	0xFE9
 20767                           wreg	equ	0xFE8
 20768                           indf1	equ	0xFE7
 20769                           postdec1	equ	0xFE5
 20770                           plusw1	equ	0xFE3
 20771                           fsr1h	equ	0xFE2
 20772                           fsr1l	equ	0xFE1
 20773                           indf2	equ	0xFDF
 20774                           postinc2	equ	0xFDE
 20775                           postdec2	equ	0xFDD
 20776                           plusw2	equ	0xFDB
 20777                           fsr2h	equ	0xFDA
 20778                           fsr2l	equ	0xFD9
 20779                           status	equ	0xFD8
 20780                           
 20781 ;; *************** function _MSDCheckForErrorCases *****************
 20782 ;; Defined at:
 20783 ;;		line 1434 in file "usb_device_msd.c"
 20784 ;; Parameters:    Size  Location     Type
 20785 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 20786 ;; Auto vars:     Size  Location     Type
 20787 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 20788 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 20789 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 20790 ;; Return value:  Size  Location     Type
 20791 ;;                  1    wreg      unsigned char 
 20792 ;; Registers used:
 20793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20794 ;; Tracked objects:
 20795 ;;		On entry : 0/0
 20796 ;;		On exit  : 0/0
 20797 ;;		Unchanged: 0/0
 20798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20800 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20802 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20803 ;;Total ram usage:        7 bytes
 20804 ;; Hardware stack levels used:    1
 20805 ;; Hardware stack levels required when called:    2
 20806 ;; This function calls:
 20807 ;;		_MSDErrorHandler
 20808 ;; This function is called by:
 20809 ;;		_MSDProcessCommandMediaPresent
 20810 ;;		_MSDReadHandler
 20811 ;;		_MSDWriteHandler
 20812 ;; This function uses a non-reentrant model
 20813 ;;
 20814                           
 20815                           	psect	text91
 20816  0065EE                     __ptext91:
 20817                           	opt stack 0
 20818  0065EE                     _MSDCheckForErrorCases:
 20819                           	opt stack 23
 20820                           
 20821                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 20822                           
 20823                           ; BSR set to: 0
 20824                           ;incstack = 0
 20825  0065EE  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20826  0065F0  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20827  0065F2  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20828  0065F4  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20829  0065F6  A4D8               	btfss	status,2,c
 20830  0065F8  D002               	goto	l710
 20831                           
 20832                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 20833  0065FA  0E01               	movlw	1
 20834  0065FC  D001               	goto	L26
 20835  0065FE                     l710:
 20836                           
 20837                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 20838  0065FE  0E00               	movlw	0
 20839  006600                     L26:
 20840  006600  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 20841                           
 20842                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 20843  006602  0100               	movlb	0	; () banked
 20844  006604  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20845  006606  A4D8               	btfss	status,2,c
 20846  006608  D005               	goto	l712
 20847                           
 20848                           ; BSR set to: 0
 20849  00660A  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20850  00660C  A4D8               	btfss	status,2,c
 20851  00660E  D002               	goto	l712
 20852                           
 20853                           ; BSR set to: 0
 20854                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 20855  006610  0E00               	movlw	0
 20856                           
 20857                           ; BSR set to: 0
 20858  006612  0012               	return	
 20859  006614                     l712:
 20860                           
 20861                           ; BSR set to: 0
 20862                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 20863                           
 20864                           ; BSR set to: 0
 20865  006614  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20866  006616  0101               	movlb	1	; () banked
 20867  006618  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 20868  00661A  E11A               	bnz	l11456
 20869  00661C  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20870  00661E  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 20871  006620  E117               	bnz	l11456
 20872  006622  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20873  006624  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 20874  006626  E114               	bnz	l11456
 20875  006628  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20876  00662A  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 20877  00662C  A4D8               	btfss	status,2,c
 20878  00662E  D010               	goto	l718
 20879                           
 20880                           ; BSR set to: 1
 20881                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 20882  006630  0100               	movlb	0	; () banked
 20883  006632  05ED               	decf	_MSD_State& (0+255),w,b
 20884  006634  A4D8               	btfss	status,2,c
 20885  006636  D006               	goto	l715
 20886                           
 20887                           ; BSR set to: 0
 20888                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 20889  006638  0E2A               	movlw	42
 20890  00663A  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20891  00663C  B4D8               	btfsc	status,2,c
 20892  00663E  D008               	goto	l718
 20893                           
 20894                           ; BSR set to: 0
 20895                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 20896  006640  0E00               	movlw	0
 20897                           
 20898                           ; BSR set to: 0
 20899  006642  0012               	return	
 20900  006644                     l715:
 20901                           
 20902                           ; BSR set to: 0
 20903                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 20904                           
 20905                           ; BSR set to: 0
 20906  006644  0E2A               	movlw	42
 20907  006646  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20908  006648  A4D8               	btfss	status,2,c
 20909  00664A  D002               	goto	l718
 20910                           
 20911                           ; BSR set to: 0
 20912                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 20913  00664C  0E00               	movlw	0
 20914                           
 20915                           ; BSR set to: 0
 20916  00664E  0012               	return	
 20917  006650                     l718:
 20918  006650                     l11456:
 20919                           
 20920                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 20921  006650  0101               	movlb	1	; () banked
 20922  006652  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20923  006654  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 20924  006656  5109               	movf	(_gblCBW+9)& (0+255),w,b
 20925  006658  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20926  00665A  510A               	movf	(_gblCBW+10)& (0+255),w,b
 20927  00665C  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20928  00665E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20929  006660  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20930  006662  B0D8               	btfsc	status,0,c
 20931  006664  D002               	goto	l719
 20932                           
 20933                           ; BSR set to: 1
 20934                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 20935  006666  0E01               	movlw	1
 20936  006668  D001               	goto	L27
 20937  00666A                     l719:
 20938                           
 20939                           ; BSR set to: 1
 20940                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 20941                           
 20942                           ; BSR set to: 1
 20943  00666A  0E00               	movlw	0
 20944  00666C                     L27:
 20945  00666C  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 20946                           
 20947                           ; BSR set to: 1
 20948                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 20949                           
 20950                           ; BSR set to: 1
 20951  00666E  0E02               	movlw	2
 20952  006670  0100               	movlb	0	; () banked
 20953  006672  19ED               	xorwf	_MSD_State& (0+255),w,b
 20954  006674  A4D8               	btfss	status,2,c
 20955  006676  D014               	goto	l721
 20956                           
 20957                           ; BSR set to: 0
 20958                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 20959  006678  0E2A               	movlw	42
 20960  00667A  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20961  00667C  B4D8               	btfsc	status,2,c
 20962  00667E  D005               	goto	l722
 20963                           
 20964                           ; BSR set to: 0
 20965  006680  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 20966  006682  A4D8               	btfss	status,2,c
 20967  006684  D002               	goto	l722
 20968  006686                     u8280:
 20969                           
 20970                           ; BSR set to: 0
 20971                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 20972  006686  0E05               	movlw	5
 20973  006688  D01D               	goto	L30
 20974  00668A                     l722:
 20975                           
 20976                           ; BSR set to: 0
 20977                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 20978                           
 20979                           ; BSR set to: 0
 20980  00668A  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20981  00668C  B4D8               	btfsc	status,2,c
 20982  00668E  D00F               	goto	u8330
 20983                           
 20984                           ; BSR set to: 0
 20985                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 20986                           
 20987                           ; BSR set to: 0
 20988                           
 20989                           ; BSR set to: 0
 20990                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 20991  006690  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20992  006692  B4D8               	btfsc	status,2,c
 20993  006694  D003               	goto	u8310
 20994                           
 20995                           ; BSR set to: 0
 20996                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 20997                           
 20998                           ; BSR set to: 0
 20999                           
 21000                           ; BSR set to: 0
 21001                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 21002  006696  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 21003  006698  A4D8               	btfss	status,2,c
 21004  00669A  D7F5               	goto	u8280
 21005  00669C                     u8310:
 21006                           
 21007                           ; BSR set to: 0
 21008                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 21009  00669C  0E04               	movlw	4
 21010  00669E  D012               	goto	L30
 21011  0066A0                     l721:
 21012                           
 21013                           ; BSR set to: 0
 21014                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 21015                           
 21016                           ; BSR set to: 0
 21017  0066A0  0E2A               	movlw	42
 21018  0066A2  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 21019  0066A4  B4D8               	btfsc	status,2,c
 21020  0066A6  D00D               	goto	l737
 21021                           
 21022                           ; BSR set to: 0
 21023                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 21024                           
 21025                           ; BSR set to: 0
 21026                           
 21027                           ; BSR set to: 0
 21028                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 21029  0066A8  05E7               	decf	_MSDHostNoData& (0+255),w,b
 21030  0066AA  A4D8               	btfss	status,2,c
 21031  0066AC  D002               	goto	l733
 21032  0066AE                     u8330:
 21033                           
 21034                           ; BSR set to: 0
 21035                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 21036  0066AE  0E01               	movlw	1
 21037  0066B0  D009               	goto	L30
 21038  0066B2                     l733:
 21039                           
 21040                           ; BSR set to: 0
 21041                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 21042                           
 21043                           ; BSR set to: 0
 21044  0066B2  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 21045  0066B4  B4D8               	btfsc	status,2,c
 21046  0066B6  D003               	goto	u8350
 21047                           
 21048                           ; BSR set to: 0
 21049                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 21050                           
 21051                           ; BSR set to: 0
 21052                           
 21053                           ; BSR set to: 0
 21054                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 21055  0066B8  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 21056  0066BA  A4D8               	btfss	status,2,c
 21057  0066BC  D002               	goto	l737
 21058  0066BE                     u8350:
 21059                           
 21060                           ; BSR set to: 0
 21061                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 21062  0066BE  0E02               	movlw	2
 21063  0066C0  D001               	goto	L30
 21064  0066C2                     l737:
 21065                           
 21066                           ; BSR set to: 0
 21067                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 21068                           
 21069                           ; BSR set to: 0
 21070  0066C2  0E03               	movlw	3
 21071  0066C4                     L30:
 21072  0066C4  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 21073                           
 21074                           ; BSR set to: 0
 21075                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 21076                           
 21077                           ; BSR set to: 0
 21078                           
 21079                           ; BSR set to: 0
 21080                           
 21081                           ; BSR set to: 0
 21082                           
 21083                           ; BSR set to: 0
 21084                           
 21085                           ; BSR set to: 0
 21086  0066C6  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 21087  0066C8  EC37  F02C         	call	_MSDErrorHandler
 21088                           
 21089                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 21090  0066CC  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 21091  0066CE  0012               	return	
 21092  0066D0                     __end_of_MSDCheckForErrorCases:
 21093                           	opt stack 0
 21094                           tosu	equ	0xFFF
 21095                           tosh	equ	0xFFE
 21096                           tosl	equ	0xFFD
 21097                           pclath	equ	0xFFA
 21098                           tblptru	equ	0xFF8
 21099                           tblptrh	equ	0xFF7
 21100                           tblptrl	equ	0xFF6
 21101                           tablat	equ	0xFF5
 21102                           prodh	equ	0xFF4
 21103                           prodl	equ	0xFF3
 21104                           intcon	equ	0xFF2
 21105                           intcon2	equ	0xFF1
 21106                           intcon3	equ	0xFF0
 21107                           indf0	equ	0xFEF
 21108                           postinc0	equ	0xFEE
 21109                           fsr0h	equ	0xFEA
 21110                           fsr0l	equ	0xFE9
 21111                           wreg	equ	0xFE8
 21112                           indf1	equ	0xFE7
 21113                           postdec1	equ	0xFE5
 21114                           plusw1	equ	0xFE3
 21115                           fsr1h	equ	0xFE2
 21116                           fsr1l	equ	0xFE1
 21117                           indf2	equ	0xFDF
 21118                           postinc2	equ	0xFDE
 21119                           postdec2	equ	0xFDD
 21120                           plusw2	equ	0xFDB
 21121                           fsr2h	equ	0xFDA
 21122                           fsr2l	equ	0xFD9
 21123                           status	equ	0xFD8
 21124                           
 21125 ;; *************** function _MSDErrorHandler *****************
 21126 ;; Defined at:
 21127 ;;		line 1577 in file "usb_device_msd.c"
 21128 ;; Parameters:    Size  Location     Type
 21129 ;;  ErrorCase       1    wreg     unsigned char 
 21130 ;; Auto vars:     Size  Location     Type
 21131 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 21132 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 21133 ;; Return value:  Size  Location     Type
 21134 ;;                  1    wreg      void 
 21135 ;; Registers used:
 21136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21137 ;; Tracked objects:
 21138 ;;		On entry : 0/0
 21139 ;;		On exit  : 0/0
 21140 ;;		Unchanged: 0/0
 21141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21146 ;;Total ram usage:        2 bytes
 21147 ;; Hardware stack levels used:    1
 21148 ;; Hardware stack levels required when called:    1
 21149 ;; This function calls:
 21150 ;;		_ResetSenseData
 21151 ;;		_USBStallEndpoint
 21152 ;; This function is called by:
 21153 ;;		_MSDProcessCommandMediaAbsent
 21154 ;;		_MSDProcessCommandMediaPresent
 21155 ;;		_MSDCheckForErrorCases
 21156 ;; This function uses a non-reentrant model
 21157 ;;
 21158                           
 21159                           	psect	text92
 21160  00586E                     __ptext92:
 21161                           	opt stack 0
 21162  00586E                     _MSDErrorHandler:
 21163                           	opt stack 23
 21164                           
 21165                           ;incstack = 0
 21166                           ;MSDErrorHandler@ErrorCase stored from wreg
 21167  00586E  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 21168                           
 21169                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 21170  005870  0100               	movlb	0	; () banked
 21171  005872  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 21172  005874  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21173  005876  B4D8               	btfsc	status,2,c
 21174  005878  D006               	goto	u7700
 21175                           
 21176                           ; BSR set to: 0
 21177  00587A  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 21178  00587E  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21179  005882  BEDF               	btfsc	indf2,7,c
 21180  005884  0012               	return	
 21181  005886                     u7700:
 21182                           
 21183                           ; BSR set to: 0
 21184                           
 21185                           ; BSR set to: 0
 21186  005886  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 21187  005888  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 21188  00588A  B4D8               	btfsc	status,2,c
 21189  00588C  D006               	goto	l741
 21190                           
 21191                           ; BSR set to: 0
 21192  00588E  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 21193  005892  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 21194  005896  BEDF               	btfsc	indf2,7,c
 21195  005898  0012               	return	
 21196  00589A                     l741:
 21197                           
 21198                           ; BSR set to: 0
 21199                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 21200  00589A  C0ED  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 21201                           
 21202                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 21203  00589E  69EC               	setf	_MSDCommandState& (0+255),b
 21204                           
 21205                           ; BSR set to: 0
 21206                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 21207  0058A0  0E00               	movlw	0
 21208  0058A2  6FEB               	movwf	_MSDReadState& (0+255),b
 21209                           
 21210                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 21211  0058A4  0E00               	movlw	0
 21212  0058A6  6FEA               	movwf	_MSDWriteState& (0+255),b
 21213                           
 21214                           ; BSR set to: 0
 21215                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 21216  0058A8  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 21217  0058AC  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 21218  0058B0  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 21219  0058B4  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 21220                           
 21221                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 21222  0058B8  0E01               	movlw	1
 21223  0058BA  010D               	movlb	13	; () banked
 21224  0058BC  6F8C               	movwf	140,b	;volatile
 21225                           
 21226                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 21227  0058BE  0E03               	movlw	3
 21228  0058C0  0100               	movlb	0	; () banked
 21229  0058C2  6FED               	movwf	_MSD_State& (0+255),b
 21230                           
 21231                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 21232  0058C4  D043               	goto	l747
 21233  0058C6                     
 21234                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 21235                           
 21236                           ; BSR set to: 0
 21237  0058C6  0E02               	movlw	2
 21238  0058C8  010D               	movlb	13	; () banked
 21239  0058CA  6F8C               	movwf	140,b	;volatile
 21240                           
 21241                           ;usb_device_msd.c: 1607: break;
 21242  0058CC  0012               	return	
 21243  0058CE                     
 21244                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 21245                           
 21246                           ; BSR set to: 13
 21247  0058CE  0E01               	movlw	1
 21248  0058D0  6E01               	movwf	USBStallEndpoint@dir,c
 21249  0058D2  0E02               	movlw	2
 21250  0058D4  EC30  F02B         	call	_USBStallEndpoint
 21251                           
 21252                           ;usb_device_msd.c: 1611: break;
 21253  0058D8  0012               	return	
 21254  0058DA                     
 21255                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 21256  0058DA  0E02               	movlw	2
 21257  0058DC  010D               	movlb	13	; () banked
 21258  0058DE  6F8C               	movwf	140,b	;volatile
 21259                           
 21260                           ; BSR set to: 13
 21261                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 21262  0058E0  0E01               	movlw	1
 21263  0058E2  6E01               	movwf	USBStallEndpoint@dir,c
 21264  0058E4  0E02               	movlw	2
 21265  0058E6  EC30  F02B         	call	_USBStallEndpoint
 21266                           
 21267                           ;usb_device_msd.c: 1616: break;
 21268  0058EA  0012               	return	
 21269  0058EC                     
 21270                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 21271  0058EC  0E00               	movlw	0
 21272  0058EE  6E01               	movwf	USBStallEndpoint@dir,c
 21273  0058F0  0E02               	movlw	2
 21274  0058F2  EC30  F02B         	call	_USBStallEndpoint
 21275                           
 21276                           ;usb_device_msd.c: 1620: break;
 21277  0058F6  0012               	return	
 21278  0058F8                     
 21279                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 21280  0058F8  0E02               	movlw	2
 21281  0058FA  010D               	movlb	13	; () banked
 21282  0058FC  6F8C               	movwf	140,b	;volatile
 21283                           
 21284                           ; BSR set to: 13
 21285                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 21286  0058FE  0E00               	movlw	0
 21287  005900  6E01               	movwf	USBStallEndpoint@dir,c
 21288  005902  0E02               	movlw	2
 21289  005904  EC30  F02B         	call	_USBStallEndpoint
 21290                           
 21291                           ;usb_device_msd.c: 1625: break;
 21292  005908  0012               	return	
 21293  00590A                     
 21294                           ;usb_device_msd.c: 1628: ResetSenseData();
 21295  00590A  EC53  F044         	call	_ResetSenseData	;wreg free
 21296                           
 21297                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 21298  00590E  0101               	movlb	1	; () banked
 21299  005910  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21300  005912  0BF0               	andlw	-16
 21301  005914  0905               	iorlw	5
 21302  005916  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21303                           
 21304                           ; BSR set to: 1
 21305                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 21306  005918  0E20               	movlw	32
 21307  00591A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21308                           
 21309                           ; BSR set to: 1
 21310                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 21311  00591C  0E00               	movlw	0
 21312  00591E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21313                           
 21314                           ; BSR set to: 1
 21315                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 21316  005920  0E02               	movlw	2
 21317  005922  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 21318  005924  A4D8               	btfss	status,2,c
 21319  005926  D00C               	goto	l755
 21320                           
 21321                           ; BSR set to: 1
 21322  005928  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21323  00592A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 21324  00592C  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 21325  00592E  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 21326  005930  B4D8               	btfsc	status,2,c
 21327  005932  D006               	goto	l755
 21328                           
 21329                           ; BSR set to: 1
 21330                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 21331  005934  0E00               	movlw	0
 21332  005936  6E01               	movwf	USBStallEndpoint@dir,c
 21333  005938  0E02               	movlw	2
 21334  00593A  EC30  F02B         	call	_USBStallEndpoint
 21335                           
 21336                           ;usb_device_msd.c: 1636: }
 21337  00593E  0012               	return	
 21338  005940                     l755:
 21339                           
 21340                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 21341  005940  0E01               	movlw	1
 21342  005942  6E01               	movwf	USBStallEndpoint@dir,c
 21343  005944  0E02               	movlw	2
 21344  005946  EC30  F02B         	call	_USBStallEndpoint
 21345                           
 21346                           ;usb_device_msd.c: 1644: }
 21347                           
 21348                           ;usb_device_msd.c: 1643: break;
 21349                           
 21350                           ;usb_device_msd.c: 1642: default:
 21351                           
 21352                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 21353  00594A  0012               	return	
 21354  00594C                     l747:
 21355  00594C  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 21356                           
 21357                           ; Switch size 1, requested type "space"
 21358                           ; Number of cases is 6, Range of values is 1 to 127
 21359                           ; switch strategies available:
 21360                           ; Name         Instructions Cycles
 21361                           ; simple_byte           19    10 (average)
 21362                           ;	Chosen strategy is simple_byte
 21363  00594E  0A01               	xorlw	1	; case 1
 21364  005950  B4D8               	btfsc	status,2,c
 21365  005952  D7B9               	goto	l748
 21366  005954  0A03               	xorlw	3	; case 2
 21367  005956  B4D8               	btfsc	status,2,c
 21368  005958  D7BA               	goto	l750
 21369  00595A  0A01               	xorlw	1	; case 3
 21370  00595C  B4D8               	btfsc	status,2,c
 21371  00595E  D7BD               	goto	l751
 21372  005960  0A07               	xorlw	7	; case 4
 21373  005962  B4D8               	btfsc	status,2,c
 21374  005964  D7C3               	goto	l752
 21375  005966  0A01               	xorlw	1	; case 5
 21376  005968  B4D8               	btfsc	status,2,c
 21377  00596A  D7C6               	goto	l753
 21378  00596C  0A7A               	xorlw	122	; case 127
 21379  00596E  A4D8               	btfss	status,2,c
 21380  005970  0012               	return	
 21381  005972  D7CB               	goto	l754
 21382  005974                     __end_of_MSDErrorHandler:
 21383                           	opt stack 0
 21384                           tosu	equ	0xFFF
 21385                           tosh	equ	0xFFE
 21386                           tosl	equ	0xFFD
 21387                           pclath	equ	0xFFA
 21388                           tblptru	equ	0xFF8
 21389                           tblptrh	equ	0xFF7
 21390                           tblptrl	equ	0xFF6
 21391                           tablat	equ	0xFF5
 21392                           prodh	equ	0xFF4
 21393                           prodl	equ	0xFF3
 21394                           intcon	equ	0xFF2
 21395                           intcon2	equ	0xFF1
 21396                           intcon3	equ	0xFF0
 21397                           indf0	equ	0xFEF
 21398                           postinc0	equ	0xFEE
 21399                           fsr0h	equ	0xFEA
 21400                           fsr0l	equ	0xFE9
 21401                           wreg	equ	0xFE8
 21402                           indf1	equ	0xFE7
 21403                           postdec1	equ	0xFE5
 21404                           plusw1	equ	0xFE3
 21405                           fsr1h	equ	0xFE2
 21406                           fsr1l	equ	0xFE1
 21407                           indf2	equ	0xFDF
 21408                           postinc2	equ	0xFDE
 21409                           postdec2	equ	0xFDD
 21410                           plusw2	equ	0xFDB
 21411                           fsr2h	equ	0xFDA
 21412                           fsr2l	equ	0xFD9
 21413                           status	equ	0xFD8
 21414                           
 21415 ;; *************** function _USBStallEndpoint *****************
 21416 ;; Defined at:
 21417 ;;		line 1073 in file "usb_device.c"
 21418 ;; Parameters:    Size  Location     Type
 21419 ;;  ep              1    wreg     unsigned char 
 21420 ;;  dir             1    0[COMRAM] unsigned char 
 21421 ;; Auto vars:     Size  Location     Type
 21422 ;;  ep              1    5[COMRAM] unsigned char 
 21423 ;;  p               2    6[COMRAM] PTR struct __BDT
 21424 ;;		 -> BDT(48), 
 21425 ;; Return value:  Size  Location     Type
 21426 ;;                  1    wreg      void 
 21427 ;; Registers used:
 21428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21429 ;; Tracked objects:
 21430 ;;		On entry : 0/0
 21431 ;;		On exit  : 0/0
 21432 ;;		Unchanged: 0/0
 21433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21434 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21435 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21436 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21437 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21438 ;;Total ram usage:        8 bytes
 21439 ;; Hardware stack levels used:    1
 21440 ;; This function calls:
 21441 ;;		Nothing
 21442 ;; This function is called by:
 21443 ;;		_MSDTasks
 21444 ;;		_MSDReadHandler
 21445 ;;		_MSDWriteHandler
 21446 ;;		_MSDErrorHandler
 21447 ;;		_MSDTransferTerminated
 21448 ;; This function uses a non-reentrant model
 21449 ;;
 21450                           
 21451                           	psect	text93
 21452  005660                     __ptext93:
 21453                           	opt stack 0
 21454  005660                     _USBStallEndpoint:
 21455                           	opt stack 27
 21456                           
 21457                           ;incstack = 0
 21458                           ;USBStallEndpoint@ep stored from wreg
 21459  005660  6E06               	movwf	USBStallEndpoint@ep,c
 21460                           
 21461                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 21462  005662  5006               	movf	USBStallEndpoint@ep,w,c
 21463  005664  A4D8               	btfss	status,2,c
 21464  005666  D02C               	goto	l191
 21465                           
 21466                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 21467  005668  0100               	movlb	0	; () banked
 21468  00566A  EE20 F001          	lfsr	2,1
 21469  00566E  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21470  005670  26D9               	addwf	fsr2l,f,c
 21471  005672  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21472  005674  22DA               	addwfc	fsr2h,f,c
 21473  005676  0E08               	movlw	8
 21474  005678  6EDF               	movwf	indf2,c
 21475                           
 21476                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21477  00567A  EE20 F002          	lfsr	2,2
 21478  00567E  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21479  005680  26D9               	addwf	fsr2l,f,c
 21480  005682  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21481  005684  22DA               	addwfc	fsr2h,f,c
 21482  005686  0E30               	movlw	48
 21483  005688  6EDE               	movwf	postinc2,c
 21484  00568A  0E0D               	movlw	13
 21485  00568C  6EDD               	movwf	postdec2,c
 21486                           
 21487                           ; BSR set to: 0
 21488                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21489  00568E  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21490  005692  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21491  005696  0E0C               	movlw	12
 21492  005698  6EDF               	movwf	indf2,c
 21493                           
 21494                           ; BSR set to: 0
 21495                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21496  00569A  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21497  00569E  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21498  0056A2  0E00               	movlw	0
 21499  0056A4  8EDB               	bsf	plusw2,7,c
 21500                           
 21501                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 21502  0056A6  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 21503  0056AA  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21504  0056AE  0E04               	movlw	4
 21505  0056B0  6EDF               	movwf	indf2,c
 21506                           
 21507                           ; BSR set to: 0
 21508                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21509  0056B2  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 21510  0056B6  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21511  0056BA  0E00               	movlw	0
 21512  0056BC  8EDB               	bsf	plusw2,7,c
 21513                           
 21514                           ;usb_device.c: 1089: }
 21515  0056BE  0012               	return	
 21516  0056C0                     l191:
 21517                           
 21518                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 21519                           
 21520                           ; BSR set to: 0
 21521  0056C0  5001               	movf	USBStallEndpoint@dir,w,c
 21522  0056C2  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 21523  0056C4  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 21524  0056C6  90D8               	bcf	status,0,c
 21525  0056C8  3602               	rlcf	??_USBStallEndpoint,f,c
 21526  0056CA  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21527  0056CC  5006               	movf	USBStallEndpoint@ep,w,c
 21528  0056CE  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 21529  0056D0  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 21530  0056D2  90D8               	bcf	status,0,c
 21531  0056D4  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21532  0056D6  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21533  0056D8  90D8               	bcf	status,0,c
 21534  0056DA  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21535  0056DC  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21536  0056DE  5002               	movf	??_USBStallEndpoint,w,c
 21537  0056E0  2604               	addwf	??_USBStallEndpoint+2,f,c
 21538  0056E2  5003               	movf	??_USBStallEndpoint+1,w,c
 21539  0056E4  2205               	addwfc	??_USBStallEndpoint+3,f,c
 21540  0056E6  90D8               	bcf	status,0,c
 21541  0056E8  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21542  0056EA  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21543  0056EC  90D8               	bcf	status,0,c
 21544  0056EE  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21545  0056F0  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21546  0056F2  0E00               	movlw	0
 21547  0056F4  2404               	addwf	??_USBStallEndpoint+2,w,c
 21548  0056F6  6E07               	movwf	USBStallEndpoint@p,c
 21549  0056F8  0E0D               	movlw	13
 21550  0056FA  2005               	addwfc	??_USBStallEndpoint+3,w,c
 21551  0056FC  6E08               	movwf	USBStallEndpoint@p+1,c
 21552                           
 21553                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 21554  0056FE  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21555  005702  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21556  005706  0E00               	movlw	0
 21557  005708  84DB               	bsf	plusw2,2,c
 21558                           
 21559                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 21560  00570A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21561  00570E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21562  005712  0E00               	movlw	0
 21563  005714  8EDB               	bsf	plusw2,7,c
 21564                           
 21565                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 21566  005716  5006               	movf	USBStallEndpoint@ep,w,c
 21567  005718  0D04               	mullw	4
 21568  00571A  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 21569  00571E  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 21570  005722  5001               	movf	USBStallEndpoint@dir,w,c
 21571  005724  0D02               	mullw	2
 21572  005726  50F3               	movf	prodl,w,c
 21573  005728  2602               	addwf	??_USBStallEndpoint,f,c
 21574  00572A  50F4               	movf	prodh,w,c
 21575  00572C  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21576  00572E  90D8               	bcf	status,0,c
 21577  005730  3602               	rlcf	??_USBStallEndpoint,f,c
 21578  005732  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21579  005734  90D8               	bcf	status,0,c
 21580  005736  3602               	rlcf	??_USBStallEndpoint,f,c
 21581  005738  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21582  00573A  0E04               	movlw	4
 21583  00573C  2602               	addwf	??_USBStallEndpoint,f,c
 21584  00573E  0E00               	movlw	0
 21585  005740  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21586  005742  0E00               	movlw	0
 21587  005744  2402               	addwf	??_USBStallEndpoint,w,c
 21588  005746  6E07               	movwf	USBStallEndpoint@p,c
 21589  005748  0E0D               	movlw	13
 21590  00574A  2003               	addwfc	??_USBStallEndpoint+1,w,c
 21591  00574C  6E08               	movwf	USBStallEndpoint@p+1,c
 21592                           
 21593                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 21594  00574E  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21595  005752  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21596  005756  0E00               	movlw	0
 21597  005758  84DB               	bsf	plusw2,2,c
 21598                           
 21599                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 21600  00575A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21601  00575E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21602  005762  0E00               	movlw	0
 21603  005764  8EDB               	bsf	plusw2,7,c
 21604  005766  0012               	return	
 21605  005768                     __end_of_USBStallEndpoint:
 21606                           	opt stack 0
 21607                           tosu	equ	0xFFF
 21608                           tosh	equ	0xFFE
 21609                           tosl	equ	0xFFD
 21610                           pclath	equ	0xFFA
 21611                           tblptru	equ	0xFF8
 21612                           tblptrh	equ	0xFF7
 21613                           tblptrl	equ	0xFF6
 21614                           tablat	equ	0xFF5
 21615                           prodh	equ	0xFF4
 21616                           prodl	equ	0xFF3
 21617                           intcon	equ	0xFF2
 21618                           intcon2	equ	0xFF1
 21619                           intcon3	equ	0xFF0
 21620                           indf0	equ	0xFEF
 21621                           postinc0	equ	0xFEE
 21622                           fsr0h	equ	0xFEA
 21623                           fsr0l	equ	0xFE9
 21624                           wreg	equ	0xFE8
 21625                           indf1	equ	0xFE7
 21626                           postdec1	equ	0xFE5
 21627                           plusw1	equ	0xFE3
 21628                           fsr1h	equ	0xFE2
 21629                           fsr1l	equ	0xFE1
 21630                           indf2	equ	0xFDF
 21631                           postinc2	equ	0xFDE
 21632                           postdec2	equ	0xFDD
 21633                           plusw2	equ	0xFDB
 21634                           fsr2h	equ	0xFDA
 21635                           fsr2l	equ	0xFD9
 21636                           status	equ	0xFD8
 21637                           
 21638 ;; *************** function _ResetSenseData *****************
 21639 ;; Defined at:
 21640 ;;		line 1373 in file "usb_device_msd.c"
 21641 ;; Parameters:    Size  Location     Type
 21642 ;;		None
 21643 ;; Auto vars:     Size  Location     Type
 21644 ;;		None
 21645 ;; Return value:  Size  Location     Type
 21646 ;;                  1    wreg      void 
 21647 ;; Registers used:
 21648 ;;		wreg, status,2
 21649 ;; Tracked objects:
 21650 ;;		On entry : 0/0
 21651 ;;		On exit  : 0/0
 21652 ;;		Unchanged: 0/0
 21653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21658 ;;Total ram usage:        0 bytes
 21659 ;; Hardware stack levels used:    1
 21660 ;; This function calls:
 21661 ;;		Nothing
 21662 ;; This function is called by:
 21663 ;;		_USBMSDInit
 21664 ;;		_MSDProcessCommandMediaAbsent
 21665 ;;		_MSDProcessCommandMediaPresent
 21666 ;;		_MSDErrorHandler
 21667 ;; This function uses a non-reentrant model
 21668 ;;
 21669                           
 21670                           	psect	text94
 21671  0088A6                     __ptext94:
 21672                           	opt stack 0
 21673  0088A6                     _ResetSenseData:
 21674                           	opt stack 26
 21675                           
 21676                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 21677                           
 21678                           ;incstack = 0
 21679  0088A6  0101               	movlb	1	; () banked
 21680  0088A8  911F               	bcf	_gblSenseData& (0+255),0,b
 21681  0088AA  931F               	bcf	_gblSenseData& (0+255),1,b
 21682  0088AC  951F               	bcf	_gblSenseData& (0+255),2,b
 21683  0088AE  971F               	bcf	_gblSenseData& (0+255),3,b
 21684  0088B0  891F               	bsf	_gblSenseData& (0+255),4,b
 21685  0088B2  8B1F               	bsf	_gblSenseData& (0+255),5,b
 21686  0088B4  8D1F               	bsf	_gblSenseData& (0+255),6,b
 21687                           
 21688                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 21689  0088B6  9F1F               	bcf	_gblSenseData& (0+255),7,b
 21690                           
 21691                           ; BSR set to: 1
 21692                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 21693  0088B8  0E00               	movlw	0
 21694  0088BA  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 21695                           
 21696                           ; BSR set to: 1
 21697                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 21698  0088BC  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 21699  0088BE  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 21700  0088C0  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 21701  0088C2  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 21702                           
 21703                           ; BSR set to: 1
 21704                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 21705  0088C4  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 21706                           
 21707                           ; BSR set to: 1
 21708                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 21709  0088C6  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 21710                           
 21711                           ; BSR set to: 1
 21712                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 21713  0088C8  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 21714                           
 21715                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 21716  0088CA  0E00               	movlw	0
 21717  0088CC  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 21718                           
 21719                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 21720  0088CE  0E00               	movlw	0
 21721  0088D0  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 21722                           
 21723                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 21724  0088D2  0E00               	movlw	0
 21725  0088D4  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 21726                           
 21727                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 21728  0088D6  0E00               	movlw	0
 21729  0088D8  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 21730                           
 21731                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 21732  0088DA  0E0A               	movlw	10
 21733  0088DC  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 21734                           
 21735                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 21736  0088DE  0E00               	movlw	0
 21737  0088E0  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 21738  0088E2  0E00               	movlw	0
 21739  0088E4  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 21740  0088E6  0E00               	movlw	0
 21741  0088E8  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 21742  0088EA  0E00               	movlw	0
 21743  0088EC  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 21744                           
 21745                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 21746  0088EE  0E00               	movlw	0
 21747  0088F0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21748                           
 21749                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 21750  0088F2  0E00               	movlw	0
 21751  0088F4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21752                           
 21753                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 21754  0088F6  0E00               	movlw	0
 21755  0088F8  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 21756                           
 21757                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 21758  0088FA  0E00               	movlw	0
 21759  0088FC  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 21760                           
 21761                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 21762  0088FE  0E00               	movlw	0
 21763  008900  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 21764                           
 21765                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 21766  008902  0E00               	movlw	0
 21767  008904  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 21768                           
 21769                           ; BSR set to: 1
 21770  008906  0012               	return		;funcret
 21771  008908                     __end_of_ResetSenseData:
 21772                           	opt stack 0
 21773                           tosu	equ	0xFFF
 21774                           tosh	equ	0xFFE
 21775                           tosl	equ	0xFFD
 21776                           pclath	equ	0xFFA
 21777                           tblptru	equ	0xFF8
 21778                           tblptrh	equ	0xFF7
 21779                           tblptrl	equ	0xFF6
 21780                           tablat	equ	0xFF5
 21781                           prodh	equ	0xFF4
 21782                           prodl	equ	0xFF3
 21783                           intcon	equ	0xFF2
 21784                           intcon2	equ	0xFF1
 21785                           intcon3	equ	0xFF0
 21786                           indf0	equ	0xFEF
 21787                           postinc0	equ	0xFEE
 21788                           fsr0h	equ	0xFEA
 21789                           fsr0l	equ	0xFE9
 21790                           wreg	equ	0xFE8
 21791                           indf1	equ	0xFE7
 21792                           postdec1	equ	0xFE5
 21793                           plusw1	equ	0xFE3
 21794                           fsr1h	equ	0xFE2
 21795                           fsr1l	equ	0xFE1
 21796                           indf2	equ	0xFDF
 21797                           postinc2	equ	0xFDE
 21798                           postdec2	equ	0xFDD
 21799                           plusw2	equ	0xFDB
 21800                           fsr2h	equ	0xFDA
 21801                           fsr2l	equ	0xFD9
 21802                           status	equ	0xFD8
 21803                           
 21804 ;; *************** function _ExternalFlash_SectorRead *****************
 21805 ;; Defined at:
 21806 ;;		line 40 in file "external_flash.c"
 21807 ;; Parameters:    Size  Location     Type
 21808 ;;  config          2   43[COMRAM] PTR void 
 21809 ;;		 -> NULL(0), 
 21810 ;;  sector_addr     4   45[COMRAM] unsigned long 
 21811 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 21812 ;;		 -> msd_buffer(512), 
 21813 ;; Auto vars:     Size  Location     Type
 21814 ;;  page            2   51[COMRAM] unsigned int 
 21815 ;; Return value:  Size  Location     Type
 21816 ;;                  1    wreg      unsigned char 
 21817 ;; Registers used:
 21818 ;;		wreg, status,2, status,0, cstack
 21819 ;; Tracked objects:
 21820 ;;		On entry : 0/0
 21821 ;;		On exit  : 0/0
 21822 ;;		Unchanged: 0/0
 21823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21824 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21827 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21828 ;;Total ram usage:       10 bytes
 21829 ;; Hardware stack levels used:    1
 21830 ;; Hardware stack levels required when called:    5
 21831 ;; This function calls:
 21832 ;;		_flash_sector_read
 21833 ;; This function is called by:
 21834 ;;		_MSDReadHandler
 21835 ;; This function uses a non-reentrant model
 21836 ;;
 21837                           
 21838                           	psect	text95
 21839  00959C                     __ptext95:
 21840                           	opt stack 0
 21841  00959C                     _ExternalFlash_SectorRead:
 21842                           	opt stack 20
 21843                           
 21844                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 21845                           
 21846                           ; BSR set to: 1
 21847                           ;incstack = 0
 21848  00959C  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 21849  0095A0  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 21850                           
 21851                           ;external_flash.c: 45: if(sector_addr >= 8192)
 21852  0095A4  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 21853  0095A6  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 21854  0095A8  E104               	bnz	u8450
 21855  0095AA  0E20               	movlw	32
 21856  0095AC  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 21857  0095AE  A0D8               	btfss	status,0,c
 21858  0095B0  D002               	goto	l1924
 21859  0095B2                     u8450:
 21860                           
 21861                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 21862  0095B2  0E00               	movlw	0
 21863  0095B4  0012               	return	
 21864  0095B6                     l1924:
 21865                           
 21866                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 21867  0095B6  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 21868  0095BA  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 21869  0095BE  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 21870  0095C2  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 21871  0095C6  ECE7  F04A         	call	_flash_sector_read	;wreg free
 21872                           
 21873                           ;external_flash.c: 53: return 1;
 21874  0095CA  0E01               	movlw	1
 21875  0095CC  0012               	return	
 21876  0095CE                     __end_of_ExternalFlash_SectorRead:
 21877                           	opt stack 0
 21878                           tosu	equ	0xFFF
 21879                           tosh	equ	0xFFE
 21880                           tosl	equ	0xFFD
 21881                           pclath	equ	0xFFA
 21882                           tblptru	equ	0xFF8
 21883                           tblptrh	equ	0xFF7
 21884                           tblptrl	equ	0xFF6
 21885                           tablat	equ	0xFF5
 21886                           prodh	equ	0xFF4
 21887                           prodl	equ	0xFF3
 21888                           intcon	equ	0xFF2
 21889                           intcon2	equ	0xFF1
 21890                           intcon3	equ	0xFF0
 21891                           indf0	equ	0xFEF
 21892                           postinc0	equ	0xFEE
 21893                           fsr0h	equ	0xFEA
 21894                           fsr0l	equ	0xFE9
 21895                           wreg	equ	0xFE8
 21896                           indf1	equ	0xFE7
 21897                           postdec1	equ	0xFE5
 21898                           plusw1	equ	0xFE3
 21899                           fsr1h	equ	0xFE2
 21900                           fsr1l	equ	0xFE1
 21901                           indf2	equ	0xFDF
 21902                           postinc2	equ	0xFDE
 21903                           postdec2	equ	0xFDD
 21904                           plusw2	equ	0xFDB
 21905                           fsr2h	equ	0xFDA
 21906                           fsr2l	equ	0xFD9
 21907                           status	equ	0xFD8
 21908                           
 21909 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 21910 ;; Defined at:
 21911 ;;		line 993 in file "usb_device_msd.c"
 21912 ;; Parameters:    Size  Location     Type
 21913 ;;  DiExpected      2    0[COMRAM] unsigned int 
 21914 ;; Auto vars:     Size  Location     Type
 21915 ;;		None
 21916 ;; Return value:  Size  Location     Type
 21917 ;;                  1    wreg      void 
 21918 ;; Registers used:
 21919 ;;		wreg, status,2, status,0
 21920 ;; Tracked objects:
 21921 ;;		On entry : 0/0
 21922 ;;		On exit  : 0/0
 21923 ;;		Unchanged: 0/0
 21924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21928 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21929 ;;Total ram usage:        6 bytes
 21930 ;; Hardware stack levels used:    1
 21931 ;; This function calls:
 21932 ;;		Nothing
 21933 ;; This function is called by:
 21934 ;;		_MSDProcessCommandMediaPresent
 21935 ;; This function uses a non-reentrant model
 21936 ;;
 21937                           
 21938                           	psect	text96
 21939  007CB2                     __ptext96:
 21940                           	opt stack 0
 21941  007CB2                     _MSDComputeDeviceInAndResidue:
 21942                           	opt stack 26
 21943                           
 21944                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 21945                           
 21946                           ;incstack = 0
 21947  007CB2  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21948  007CB4  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21949  007CB6  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21950  007CB8  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21951  007CBA  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21952  007CBC  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21953  007CBE  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 21954  007CC0  0101               	movlb	1	; () banked
 21955  007CC2  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 21956  007CC4  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 21957  007CC6  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 21958  007CC8  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 21959  007CCA  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 21960  007CCC  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 21961  007CCE  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 21962  007CD0  B0D8               	btfsc	status,0,c
 21963  007CD2  D00E               	goto	l659
 21964                           
 21965                           ; BSR set to: 1
 21966                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 21967  007CD4  0E00               	movlw	0
 21968  007CD6  010D               	movlb	13	; () banked
 21969  007CD8  6F88               	movwf	136,b	;volatile
 21970  007CDA  0E00               	movlw	0
 21971  007CDC  6F89               	movwf	137,b	;volatile
 21972  007CDE  0E00               	movlw	0
 21973  007CE0  6F8A               	movwf	138,b	;volatile
 21974  007CE2  0E00               	movlw	0
 21975  007CE4  6F8B               	movwf	139,b	;volatile
 21976                           
 21977                           ; BSR set to: 13
 21978                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 21979  007CE6  C108  F0DB         	movff	_gblCBW+8,_TransferLength
 21980  007CEA  C109  F0DC         	movff	_gblCBW+9,_TransferLength+1
 21981                           
 21982                           ;usb_device_msd.c: 1002: }
 21983  007CEE  0012               	return	
 21984  007CF0                     l659:
 21985                           
 21986                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 21987                           
 21988                           ; BSR set to: 13
 21989  007CF0  0100               	movlb	0	; () banked
 21990  007CF2  51DB               	movf	_TransferLength& (0+255),w,b
 21991  007CF4  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21992  007CF6  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 21993  007CF8  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21994  007CFA  B0D8               	btfsc	status,0,c
 21995  007CFC  D004               	goto	l661
 21996                           
 21997                           ; BSR set to: 0
 21998                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 21999  007CFE  C001  F0DB         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 22000  007D02  C002  F0DC         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 22001  007D06                     l661:
 22002                           
 22003                           ; BSR set to: 0
 22004                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 22005                           
 22006                           ; BSR set to: 0
 22007  007D06  51DB               	movf	_TransferLength& (0+255),w,b
 22008  007D08  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 22009  007D0A  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 22010  007D0C  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 22011  007D0E  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 22012  007D10  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 22013  007D12  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 22014  007D14  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 22015  007D16  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 22016  007D18  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 22017  007D1A  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 22018  007D1C  0E00               	movlw	0
 22019  007D1E  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 22020  007D20  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 22021  007D22  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 22022  007D24  0101               	movlb	1	; () banked
 22023  007D26  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22024  007D28  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 22025  007D2A  010D               	movlb	13	; () banked
 22026  007D2C  6F88               	movwf	136,b	;volatile
 22027  007D2E  0101               	movlb	1	; () banked
 22028  007D30  5109               	movf	(_gblCBW+9)& (0+255),w,b
 22029  007D32  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 22030  007D34  010D               	movlb	13	; () banked
 22031  007D36  6F89               	movwf	137,b	;volatile
 22032  007D38  0101               	movlb	1	; () banked
 22033  007D3A  510A               	movf	(_gblCBW+10)& (0+255),w,b
 22034  007D3C  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 22035  007D3E  010D               	movlb	13	; () banked
 22036  007D40  6F8A               	movwf	138,b	;volatile
 22037  007D42  0101               	movlb	1	; () banked
 22038  007D44  510B               	movf	(_gblCBW+11)& (0+255),w,b
 22039  007D46  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 22040  007D48  010D               	movlb	13	; () banked
 22041  007D4A  6F8B               	movwf	139,b	;volatile
 22042  007D4C  0012               	return	
 22043  007D4E                     __end_of_MSDComputeDeviceInAndResidue:
 22044                           	opt stack 0
 22045                           tosu	equ	0xFFF
 22046                           tosh	equ	0xFFE
 22047                           tosl	equ	0xFFD
 22048                           pclath	equ	0xFFA
 22049                           tblptru	equ	0xFF8
 22050                           tblptrh	equ	0xFF7
 22051                           tblptrl	equ	0xFF6
 22052                           tablat	equ	0xFF5
 22053                           prodh	equ	0xFF4
 22054                           prodl	equ	0xFF3
 22055                           intcon	equ	0xFF2
 22056                           intcon2	equ	0xFF1
 22057                           intcon3	equ	0xFF0
 22058                           indf0	equ	0xFEF
 22059                           postinc0	equ	0xFEE
 22060                           fsr0h	equ	0xFEA
 22061                           fsr0l	equ	0xFE9
 22062                           wreg	equ	0xFE8
 22063                           indf1	equ	0xFE7
 22064                           postdec1	equ	0xFE5
 22065                           plusw1	equ	0xFE3
 22066                           fsr1h	equ	0xFE2
 22067                           fsr1l	equ	0xFE1
 22068                           indf2	equ	0xFDF
 22069                           postinc2	equ	0xFDE
 22070                           postdec2	equ	0xFDD
 22071                           plusw2	equ	0xFDB
 22072                           fsr2h	equ	0xFDA
 22073                           fsr2l	equ	0xFD9
 22074                           status	equ	0xFD8
 22075                           
 22076 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 22077 ;; Defined at:
 22078 ;;		line 18 in file "external_flash.c"
 22079 ;; Parameters:    Size  Location     Type
 22080 ;;  config          2    0[COMRAM] PTR void 
 22081 ;;		 -> NULL(0), 
 22082 ;; Auto vars:     Size  Location     Type
 22083 ;;		None
 22084 ;; Return value:  Size  Location     Type
 22085 ;;                  2    0[COMRAM] unsigned int 
 22086 ;; Registers used:
 22087 ;;		wreg, status,2
 22088 ;; Tracked objects:
 22089 ;;		On entry : 0/0
 22090 ;;		On exit  : 0/0
 22091 ;;		Unchanged: 0/0
 22092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22097 ;;Total ram usage:        2 bytes
 22098 ;; Hardware stack levels used:    1
 22099 ;; This function calls:
 22100 ;;		Nothing
 22101 ;; This function is called by:
 22102 ;;		_MSDProcessCommandMediaPresent
 22103 ;; This function uses a non-reentrant model
 22104 ;;
 22105                           
 22106                           	psect	text97
 22107  009C9E                     __ptext97:
 22108                           	opt stack 0
 22109  009C9E                     _ExternalFlash_SectorSizeRead:
 22110                           	opt stack 26
 22111                           
 22112                           ;external_flash.c: 20: return 512;
 22113                           
 22114                           ; BSR set to: 13
 22115                           ;incstack = 0
 22116  009C9E  0E02               	movlw	2
 22117  009CA0  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 22118  009CA2  0E00               	movlw	0
 22119  009CA4  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 22120  009CA6  0012               	return	
 22121  009CA8                     __end_of_ExternalFlash_SectorSizeRead:
 22122                           	opt stack 0
 22123                           tosu	equ	0xFFF
 22124                           tosh	equ	0xFFE
 22125                           tosl	equ	0xFFD
 22126                           pclath	equ	0xFFA
 22127                           tblptru	equ	0xFF8
 22128                           tblptrh	equ	0xFF7
 22129                           tblptrl	equ	0xFF6
 22130                           tablat	equ	0xFF5
 22131                           prodh	equ	0xFF4
 22132                           prodl	equ	0xFF3
 22133                           intcon	equ	0xFF2
 22134                           intcon2	equ	0xFF1
 22135                           intcon3	equ	0xFF0
 22136                           indf0	equ	0xFEF
 22137                           postinc0	equ	0xFEE
 22138                           fsr0h	equ	0xFEA
 22139                           fsr0l	equ	0xFE9
 22140                           wreg	equ	0xFE8
 22141                           indf1	equ	0xFE7
 22142                           postdec1	equ	0xFE5
 22143                           plusw1	equ	0xFE3
 22144                           fsr1h	equ	0xFE2
 22145                           fsr1l	equ	0xFE1
 22146                           indf2	equ	0xFDF
 22147                           postinc2	equ	0xFDE
 22148                           postdec2	equ	0xFDD
 22149                           plusw2	equ	0xFDB
 22150                           fsr2h	equ	0xFDA
 22151                           fsr2l	equ	0xFD9
 22152                           status	equ	0xFD8
 22153                           
 22154 ;; *************** function _ExternalFlash_CapacityRead *****************
 22155 ;; Defined at:
 22156 ;;		line 23 in file "external_flash.c"
 22157 ;; Parameters:    Size  Location     Type
 22158 ;;  config          2    0[COMRAM] PTR void 
 22159 ;;		 -> NULL(0), 
 22160 ;; Auto vars:     Size  Location     Type
 22161 ;;		None
 22162 ;; Return value:  Size  Location     Type
 22163 ;;                  4    0[COMRAM] unsigned long 
 22164 ;; Registers used:
 22165 ;;		wreg, status,2
 22166 ;; Tracked objects:
 22167 ;;		On entry : 0/0
 22168 ;;		On exit  : 0/0
 22169 ;;		Unchanged: 0/0
 22170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22171 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22174 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22175 ;;Total ram usage:        4 bytes
 22176 ;; Hardware stack levels used:    1
 22177 ;; This function calls:
 22178 ;;		Nothing
 22179 ;; This function is called by:
 22180 ;;		_MSDProcessCommandMediaPresent
 22181 ;; This function uses a non-reentrant model
 22182 ;;
 22183                           
 22184                           	psect	text98
 22185  009BD6                     __ptext98:
 22186                           	opt stack 0
 22187  009BD6                     _ExternalFlash_CapacityRead:
 22188                           	opt stack 26
 22189                           
 22190                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 22191                           
 22192                           ;incstack = 0
 22193  009BD6  0EFF               	movlw	255
 22194  009BD8  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 22195  009BDA  0E1F               	movlw	31
 22196  009BDC  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 22197  009BDE  0E00               	movlw	0
 22198  009BE0  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 22199  009BE2  0E00               	movlw	0
 22200  009BE4  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 22201  009BE6  0012               	return	
 22202  009BE8                     __end_of_ExternalFlash_CapacityRead:
 22203                           	opt stack 0
 22204                           tosu	equ	0xFFF
 22205                           tosh	equ	0xFFE
 22206                           tosl	equ	0xFFD
 22207                           pclath	equ	0xFFA
 22208                           tblptru	equ	0xFF8
 22209                           tblptrh	equ	0xFF7
 22210                           tblptrl	equ	0xFF6
 22211                           tablat	equ	0xFF5
 22212                           prodh	equ	0xFF4
 22213                           prodl	equ	0xFF3
 22214                           intcon	equ	0xFF2
 22215                           intcon2	equ	0xFF1
 22216                           intcon3	equ	0xFF0
 22217                           indf0	equ	0xFEF
 22218                           postinc0	equ	0xFEE
 22219                           fsr0h	equ	0xFEA
 22220                           fsr0l	equ	0xFE9
 22221                           wreg	equ	0xFE8
 22222                           indf1	equ	0xFE7
 22223                           postdec1	equ	0xFE5
 22224                           plusw1	equ	0xFE3
 22225                           fsr1h	equ	0xFE2
 22226                           fsr1l	equ	0xFE1
 22227                           indf2	equ	0xFDF
 22228                           postinc2	equ	0xFDE
 22229                           postdec2	equ	0xFDD
 22230                           plusw2	equ	0xFDB
 22231                           fsr2h	equ	0xFDA
 22232                           fsr2l	equ	0xFD9
 22233                           status	equ	0xFD8
 22234                           
 22235 ;; *************** function _ExternalFlash_MediaInitialize *****************
 22236 ;; Defined at:
 22237 ;;		line 10 in file "external_flash.c"
 22238 ;; Parameters:    Size  Location     Type
 22239 ;;  config          2    0[COMRAM] PTR void 
 22240 ;;		 -> NULL(0), 
 22241 ;; Auto vars:     Size  Location     Type
 22242 ;;		None
 22243 ;; Return value:  Size  Location     Type
 22244 ;;                  2    0[COMRAM] PTR struct .
 22245 ;; Registers used:
 22246 ;;		wreg, status,2, status,0
 22247 ;; Tracked objects:
 22248 ;;		On entry : 0/0
 22249 ;;		On exit  : 0/0
 22250 ;;		Unchanged: 0/0
 22251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22256 ;;Total ram usage:        2 bytes
 22257 ;; Hardware stack levels used:    1
 22258 ;; This function calls:
 22259 ;;		Nothing
 22260 ;; This function is called by:
 22261 ;;		_USBMSDInit
 22262 ;;		_MSDProcessCommand
 22263 ;; This function uses a non-reentrant model
 22264 ;;
 22265                           
 22266                           	psect	text99
 22267  009AF0                     __ptext99:
 22268                           	opt stack 0
 22269  009AF0                     _ExternalFlash_MediaInitialize:
 22270                           	opt stack 26
 22271                           
 22272                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 22273                           
 22274                           ;incstack = 0
 22275  009AF0  0101               	movlb	1	; () banked
 22276  009AF2  81AB               	bsf	(_mediaInformation+1)& (0+255),0,b
 22277                           
 22278                           ; BSR set to: 1
 22279                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 22280  009AF4  0E02               	movlw	2
 22281  009AF6  6FAD               	movwf	(_mediaInformation+3)& (0+255),b
 22282  009AF8  0E00               	movlw	0
 22283  009AFA  6FAC               	movwf	(_mediaInformation+2)& (0+255),b
 22284                           
 22285                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 22286  009AFC  0E00               	movlw	0
 22287  009AFE  6FAA               	movwf	_mediaInformation& (0+255),b
 22288                           
 22289                           ; BSR set to: 1
 22290                           ;external_flash.c: 15: return &mediaInformation;
 22291  009B00  0EAA               	movlw	low _mediaInformation
 22292  009B02  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 22293  009B04  0E01               	movlw	high _mediaInformation
 22294  009B06  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 22295  009B08  0012               	return	
 22296  009B0A                     __end_of_ExternalFlash_MediaInitialize:
 22297                           	opt stack 0
 22298                           tosu	equ	0xFFF
 22299                           tosh	equ	0xFFE
 22300                           tosl	equ	0xFFD
 22301                           pclath	equ	0xFFA
 22302                           tblptru	equ	0xFF8
 22303                           tblptrh	equ	0xFF7
 22304                           tblptrl	equ	0xFF6
 22305                           tablat	equ	0xFF5
 22306                           prodh	equ	0xFF4
 22307                           prodl	equ	0xFF3
 22308                           intcon	equ	0xFF2
 22309                           intcon2	equ	0xFF1
 22310                           intcon3	equ	0xFF0
 22311                           indf0	equ	0xFEF
 22312                           postinc0	equ	0xFEE
 22313                           fsr0h	equ	0xFEA
 22314                           fsr0l	equ	0xFE9
 22315                           wreg	equ	0xFE8
 22316                           indf1	equ	0xFE7
 22317                           postdec1	equ	0xFE5
 22318                           plusw1	equ	0xFE3
 22319                           fsr1h	equ	0xFE2
 22320                           fsr1l	equ	0xFE1
 22321                           indf2	equ	0xFDF
 22322                           postinc2	equ	0xFDE
 22323                           postdec2	equ	0xFDD
 22324                           plusw2	equ	0xFDB
 22325                           fsr2h	equ	0xFDA
 22326                           fsr2l	equ	0xFD9
 22327                           status	equ	0xFD8
 22328                           
 22329 ;; *************** function _ExternalFlash_MediaDetect *****************
 22330 ;; Defined at:
 22331 ;;		line 29 in file "external_flash.c"
 22332 ;; Parameters:    Size  Location     Type
 22333 ;;  config          2    0[COMRAM] PTR void 
 22334 ;;		 -> NULL(0), 
 22335 ;; Auto vars:     Size  Location     Type
 22336 ;;		None
 22337 ;; Return value:  Size  Location     Type
 22338 ;;                  1    wreg      unsigned char 
 22339 ;; Registers used:
 22340 ;;		wreg
 22341 ;; Tracked objects:
 22342 ;;		On entry : 0/0
 22343 ;;		On exit  : 0/0
 22344 ;;		Unchanged: 0/0
 22345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22350 ;;Total ram usage:        2 bytes
 22351 ;; Hardware stack levels used:    1
 22352 ;; This function calls:
 22353 ;;		Nothing
 22354 ;; This function is called by:
 22355 ;;		_USBMSDInit
 22356 ;;		_MSDProcessCommand
 22357 ;; This function uses a non-reentrant model
 22358 ;;
 22359                           
 22360                           	psect	text100
 22361  009D2E                     __ptext100:
 22362                           	opt stack 0
 22363  009D2E                     _ExternalFlash_MediaDetect:
 22364                           	opt stack 26
 22365                           
 22366                           ;external_flash.c: 31: return 1;
 22367                           
 22368                           ; BSR set to: 1
 22369                           ;incstack = 0
 22370  009D2E  0E01               	movlw	1
 22371  009D30  0012               	return	
 22372  009D32                     __end_of_ExternalFlash_MediaDetect:
 22373                           	opt stack 0
 22374                           tosu	equ	0xFFF
 22375                           tosh	equ	0xFFE
 22376                           tosl	equ	0xFFD
 22377                           pclath	equ	0xFFA
 22378                           tblptru	equ	0xFF8
 22379                           tblptrh	equ	0xFF7
 22380                           tblptrl	equ	0xFF6
 22381                           tablat	equ	0xFF5
 22382                           prodh	equ	0xFF4
 22383                           prodl	equ	0xFF3
 22384                           intcon	equ	0xFF2
 22385                           intcon2	equ	0xFF1
 22386                           intcon3	equ	0xFF0
 22387                           indf0	equ	0xFEF
 22388                           postinc0	equ	0xFEE
 22389                           fsr0h	equ	0xFEA
 22390                           fsr0l	equ	0xFE9
 22391                           wreg	equ	0xFE8
 22392                           indf1	equ	0xFE7
 22393                           postdec1	equ	0xFE5
 22394                           plusw1	equ	0xFE3
 22395                           fsr1h	equ	0xFE2
 22396                           fsr1l	equ	0xFE1
 22397                           indf2	equ	0xFDF
 22398                           postinc2	equ	0xFDE
 22399                           postdec2	equ	0xFDD
 22400                           plusw2	equ	0xFDB
 22401                           fsr2h	equ	0xFDA
 22402                           fsr2l	equ	0xFD9
 22403                           status	equ	0xFD8
 22404                           
 22405 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 22406 ;; Defined at:
 22407 ;;		line 74 in file "app_device_custom_hid.c"
 22408 ;; Parameters:    Size  Location     Type
 22409 ;;		None
 22410 ;; Auto vars:     Size  Location     Type
 22411 ;;  idx             1    0        unsigned char 
 22412 ;; Return value:  Size  Location     Type
 22413 ;;                  1    wreg      void 
 22414 ;; Registers used:
 22415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22416 ;; Tracked objects:
 22417 ;;		On entry : 0/0
 22418 ;;		On exit  : 0/0
 22419 ;;		Unchanged: 0/0
 22420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22423 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22424 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22425 ;;Total ram usage:        4 bytes
 22426 ;; Hardware stack levels used:    1
 22427 ;; Hardware stack levels required when called:   12
 22428 ;; This function calls:
 22429 ;;		_USBTransferOnePacket
 22430 ;;		_api_parse
 22431 ;;		_api_prepare
 22432 ;; This function is called by:
 22433 ;;		_main
 22434 ;; This function uses a non-reentrant model
 22435 ;;
 22436                           
 22437                           	psect	text101
 22438  007458                     __ptext101:
 22439                           	opt stack 0
 22440  007458                     _APP_DeviceCustomHIDTasks:
 22441                           	opt stack 18
 22442                           
 22443                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 22444                           
 22445                           ;incstack = 0
 22446  007458  0E20               	movlw	32
 22447  00745A  0100               	movlb	0	; () banked
 22448  00745C  61F8               	cpfslt	_USBDeviceState& (0+255),b
 22449  00745E  D001               	goto	l966
 22450  007460  0012               	return	
 22451  007462                     l966:
 22452                           
 22453                           ; BSR set to: 0
 22454                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 22455  007462  B265               	btfsc	3941,1,c	;volatile
 22456  007464  0012               	return	
 22457                           
 22458                           ; BSR set to: 0
 22459                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 22460                           
 22461                           ; BSR set to: 0
 22462                           
 22463                           ; BSR set to: 0
 22464                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 22465  007466  0101               	movlb	1	; () banked
 22466  007468  5180               	movf	_USBOutHandle& (0+255),w,b
 22467  00746A  1181               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 22468  00746C  B4D8               	btfsc	status,2,c
 22469  00746E  D006               	goto	u13580
 22470                           
 22471                           ; BSR set to: 1
 22472  007470  C180  FFD9         	movff	_USBOutHandle,fsr2l
 22473  007474  C181  FFDA         	movff	_USBOutHandle+1,fsr2h
 22474  007478  BEDF               	btfsc	indf2,7,c
 22475  00747A  0012               	return	
 22476  00747C                     u13580:
 22477                           
 22478                           ; BSR set to: 1
 22479                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 22480                           
 22481                           ; BSR set to: 1
 22482  00747C  517E               	movf	_USBInHandle& (0+255),w,b
 22483  00747E  117F               	iorwf	(_USBInHandle+1)& (0+255),w,b
 22484  007480  B4D8               	btfsc	status,2,c
 22485  007482  D006               	goto	u13600
 22486                           
 22487                           ; BSR set to: 1
 22488  007484  C17E  FFD9         	movff	_USBInHandle,fsr2l
 22489  007488  C17F  FFDA         	movff	_USBInHandle+1,fsr2h
 22490  00748C  BEDF               	btfsc	indf2,7,c
 22491  00748E  D020               	goto	l972
 22492  007490                     u13600:
 22493                           
 22494                           ; BSR set to: 1
 22495                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 22496                           
 22497                           ; BSR set to: 1
 22498  007490  0E50               	movlw	_ReceivedDataBuffer& (0+255)
 22499  007492  0100               	movlb	0	; () banked
 22500  007494  6FB7               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 22501  007496  6BB8               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 22502  007498  C0B7  F0B2         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 22503  00749C  C0B8  F0B3         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 22504  0074A0  0E80               	movlw	_ToSendDataBuffer& (0+255)
 22505  0074A2  6FB9               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 22506  0074A4  6BBA               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 22507  0074A6  C0B9  F0B4         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 22508  0074AA  C0BA  F0B5         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 22509  0074AE  EC0A  F021         	call	_api_prepare	;wreg free
 22510                           
 22511                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 22512  0074B2  0E01               	movlw	1
 22513  0074B4  6E01               	movwf	USBTransferOnePacket@dir,c
 22514  0074B6  0E80               	movlw	low _ToSendDataBuffer
 22515  0074B8  6E02               	movwf	USBTransferOnePacket@data,c
 22516  0074BA  0E03               	movlw	high _ToSendDataBuffer
 22517  0074BC  6E03               	movwf	USBTransferOnePacket@data+1,c
 22518  0074BE  0E40               	movlw	64
 22519  0074C0  6E04               	movwf	USBTransferOnePacket@len,c
 22520  0074C2  0E01               	movlw	1
 22521  0074C4  EC3B  F02D         	call	_USBTransferOnePacket
 22522  0074C8  C001  F17E         	movff	?_USBTransferOnePacket,_USBInHandle
 22523  0074CC  C002  F17F         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 22524  0074D0                     l972:
 22525                           
 22526                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 22527  0074D0  0E50               	movlw	low _ReceivedDataBuffer
 22528  0074D2  0100               	movlb	0	; () banked
 22529  0074D4  6FA4               	movwf	api_parse@inBuffer& (0+255),b
 22530  0074D6  0E02               	movlw	high _ReceivedDataBuffer
 22531  0074D8  6FA5               	movwf	(api_parse@inBuffer+1)& (0+255),b
 22532  0074DA  0E40               	movlw	64
 22533  0074DC  6FA6               	movwf	api_parse@receivedDataLength& (0+255),b
 22534  0074DE  0E80               	movlw	low _ToSendDataBuffer
 22535  0074E0  6FA7               	movwf	api_parse@outBuffer& (0+255),b
 22536  0074E2  0E03               	movlw	high _ToSendDataBuffer
 22537  0074E4  6FA8               	movwf	(api_parse@outBuffer+1)& (0+255),b
 22538  0074E6  EC01  F029         	call	_api_parse	;wreg free
 22539                           
 22540                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 22541  0074EA  0E00               	movlw	0
 22542  0074EC  6E01               	movwf	USBTransferOnePacket@dir,c
 22543  0074EE  0E50               	movlw	low _ReceivedDataBuffer
 22544  0074F0  6E02               	movwf	USBTransferOnePacket@data,c
 22545  0074F2  0E02               	movlw	high _ReceivedDataBuffer
 22546  0074F4  6E03               	movwf	USBTransferOnePacket@data+1,c
 22547  0074F6  0E40               	movlw	64
 22548  0074F8  6E04               	movwf	USBTransferOnePacket@len,c
 22549  0074FA  0E01               	movlw	1
 22550  0074FC  EC3B  F02D         	call	_USBTransferOnePacket
 22551  007500  C001  F180         	movff	?_USBTransferOnePacket,_USBOutHandle
 22552  007504  C002  F181         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 22553  007508  0012               	return	
 22554  00750A                     __end_of_APP_DeviceCustomHIDTasks:
 22555                           	opt stack 0
 22556                           tosu	equ	0xFFF
 22557                           tosh	equ	0xFFE
 22558                           tosl	equ	0xFFD
 22559                           pclath	equ	0xFFA
 22560                           tblptru	equ	0xFF8
 22561                           tblptrh	equ	0xFF7
 22562                           tblptrl	equ	0xFF6
 22563                           tablat	equ	0xFF5
 22564                           prodh	equ	0xFF4
 22565                           prodl	equ	0xFF3
 22566                           intcon	equ	0xFF2
 22567                           intcon2	equ	0xFF1
 22568                           intcon3	equ	0xFF0
 22569                           indf0	equ	0xFEF
 22570                           postinc0	equ	0xFEE
 22571                           fsr0h	equ	0xFEA
 22572                           fsr0l	equ	0xFE9
 22573                           wreg	equ	0xFE8
 22574                           indf1	equ	0xFE7
 22575                           postdec1	equ	0xFE5
 22576                           plusw1	equ	0xFE3
 22577                           fsr1h	equ	0xFE2
 22578                           fsr1l	equ	0xFE1
 22579                           indf2	equ	0xFDF
 22580                           postinc2	equ	0xFDE
 22581                           postdec2	equ	0xFDD
 22582                           plusw2	equ	0xFDB
 22583                           fsr2h	equ	0xFDA
 22584                           fsr2l	equ	0xFD9
 22585                           status	equ	0xFD8
 22586                           
 22587 ;; *************** function _api_prepare *****************
 22588 ;; Defined at:
 22589 ;;		line 58 in file "api.c"
 22590 ;; Parameters:    Size  Location     Type
 22591 ;;  inBuffer        2   82[BANK0 ] PTR unsigned char 
 22592 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22593 ;;  outBuffer       2   84[BANK0 ] PTR unsigned char 
 22594 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22595 ;; Auto vars:     Size  Location     Type
 22596 ;;  command         1   86[BANK0 ] enum E6715
 22597 ;; Return value:  Size  Location     Type
 22598 ;;                  1    wreg      void 
 22599 ;; Registers used:
 22600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22601 ;; Tracked objects:
 22602 ;;		On entry : 0/0
 22603 ;;		On exit  : 0/0
 22604 ;;		Unchanged: 0/0
 22605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22606 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22609 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22610 ;;Total ram usage:        5 bytes
 22611 ;; Hardware stack levels used:    1
 22612 ;; Hardware stack levels required when called:   10
 22613 ;; This function calls:
 22614 ;;		__fill_buffer_find_file
 22615 ;;		__fill_buffer_get_bootloader_details
 22616 ;;		__fill_buffer_get_configuration
 22617 ;;		__fill_buffer_get_display
 22618 ;;		__fill_buffer_get_file_details
 22619 ;;		__fill_buffer_get_status
 22620 ;;		__fill_buffer_read_buffer
 22621 ;;		__fill_buffer_read_file
 22622 ;;		_memcpy
 22623 ;; This function is called by:
 22624 ;;		_main
 22625 ;;		_APP_DeviceCustomHIDTasks
 22626 ;; This function uses a non-reentrant model
 22627 ;;
 22628                           
 22629                           	psect	text102
 22630  004214                     __ptext102:
 22631                           	opt stack 0
 22632  004214                     _api_prepare:
 22633                           	opt stack 20
 22634                           
 22635                           ;api.c: 60: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 22636                           
 22637                           ;incstack = 0
 22638  004214  C0B2  FFD9         	movff	api_prepare@inBuffer,fsr2l
 22639  004218  C0B3  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 22640  00421C  50DF               	movf	indf2,w,c
 22641  00421E  0100               	movlb	0	; () banked
 22642  004220  6FB6               	movwf	api_prepare@command& (0+255),b
 22643                           
 22644                           ; BSR set to: 0
 22645                           ;api.c: 62: if(command>0x7F)
 22646  004222  0E7F               	movlw	127
 22647  004224  65B6               	cpfsgt	api_prepare@command& (0+255),b
 22648  004226  D096               	goto	l2762
 22649  004228  D03C               	goto	l2754
 22650  00422A                     
 22651                           ; BSR set to: 0
 22652                           ;api.c: 77: _fill_buffer_get_file_details(inBuffer, outBuffer);
 22653                           
 22654                           ; BSR set to: 0
 22655  00422A  C0B2  F038         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 22656  00422E  C0B3  F039         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 22657  004232  C0B4  F03A         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 22658  004236  C0B5  F03B         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 22659  00423A  ECD1  F041         	call	__fill_buffer_get_file_details	;wreg free
 22660                           
 22661                           ;api.c: 78: break;
 22662  00423E  0012               	return	
 22663  004240                     
 22664                           ;api.c: 82: _fill_buffer_find_file(inBuffer, outBuffer);
 22665  004240  C0B2  F037         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 22666  004244  C0B3  F038         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 22667  004248  C0B4  F039         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 22668  00424C  C0B5  F03A         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 22669  004250  EC7B  F03C         	call	__fill_buffer_find_file	;wreg free
 22670                           
 22671                           ;api.c: 83: break;
 22672  004254  0012               	return	
 22673  004256                     
 22674                           ;api.c: 87: _fill_buffer_read_file(inBuffer, outBuffer);
 22675  004256  C0B2  F09E         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 22676  00425A  C0B3  F09F         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 22677  00425E  C0B4  F0A0         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 22678  004262  C0B5  F0A1         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 22679  004266  ECB0  F014         	call	__fill_buffer_read_file	;wreg free
 22680                           
 22681                           ;api.c: 88: break;
 22682  00426A  0012               	return	
 22683  00426C                     
 22684                           ;api.c: 92: _fill_buffer_read_buffer(inBuffer, outBuffer);
 22685  00426C  C0B2  F02B         	movff	api_prepare@inBuffer,__fill_buffer_read_buffer@inBuffer
 22686  004270  C0B3  F02C         	movff	api_prepare@inBuffer+1,__fill_buffer_read_buffer@inBuffer+1
 22687  004274  C0B4  F02D         	movff	api_prepare@outBuffer,__fill_buffer_read_buffer@outBuffer
 22688  004278  C0B5  F02E         	movff	api_prepare@outBuffer+1,__fill_buffer_read_buffer@outBuffer+1
 22689  00427C  EC39  F030         	call	__fill_buffer_read_buffer	;wreg free
 22690                           
 22691                           ;api.c: 93: break;
 22692  004280  0012               	return	
 22693  004282                     
 22694                           ;api.c: 96: outBuffer[0] = 0x99;
 22695  004282  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22696  004286  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22697  00428A  0E99               	movlw	153
 22698  00428C  6EDF               	movwf	indf2,c
 22699                           
 22700                           ;api.c: 97: outBuffer[1] = 0x99;
 22701  00428E  0100               	movlb	0	; () banked
 22702  004290  EE20 F001          	lfsr	2,1
 22703  004294  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22704  004296  26D9               	addwf	fsr2l,f,c
 22705  004298  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22706  00429A  22DA               	addwfc	fsr2h,f,c
 22707  00429C  0E99               	movlw	153
 22708  00429E  6EDF               	movwf	indf2,c
 22709                           
 22710                           ;api.c: 98: }
 22711  0042A0  0012               	return	
 22712  0042A2                     l2754:
 22713                           
 22714                           ; BSR set to: 0
 22715                           
 22716                           ; BSR set to: 0
 22717  0042A2  51B6               	movf	api_prepare@command& (0+255),w,b
 22718                           
 22719                           ; Switch size 1, requested type "space"
 22720                           ; Number of cases is 4, Range of values is 128 to 131
 22721                           ; switch strategies available:
 22722                           ; Name         Instructions Cycles
 22723                           ; simple_byte           13     7 (average)
 22724                           ;	Chosen strategy is simple_byte
 22725  0042A4  0A80               	xorlw	128	; case 128
 22726  0042A6  B4D8               	btfsc	status,2,c
 22727  0042A8  D7C0               	goto	l2755
 22728  0042AA  0A01               	xorlw	1	; case 129
 22729  0042AC  B4D8               	btfsc	status,2,c
 22730  0042AE  D7C8               	goto	l2757
 22731  0042B0  0A03               	xorlw	3	; case 130
 22732  0042B2  B4D8               	btfsc	status,2,c
 22733  0042B4  D7D0               	goto	l2758
 22734  0042B6  0A01               	xorlw	1	; case 131
 22735  0042B8  B4D8               	btfsc	status,2,c
 22736  0042BA  D7D8               	goto	l2759
 22737  0042BC  D7E2               	goto	l2760
 22738  0042BE                     
 22739                           ; BSR set to: 0
 22740                           ;api.c: 111: _fill_buffer_get_status(outBuffer);
 22741                           
 22742                           ; BSR set to: 0
 22743  0042BE  C0B4  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 22744  0042C2  C0B5  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 22745  0042C6  EC68  F033         	call	__fill_buffer_get_status	;wreg free
 22746                           
 22747                           ;api.c: 112: break;
 22748  0042CA  0012               	return	
 22749  0042CC                     
 22750                           ;api.c: 116: _fill_buffer_get_display(outBuffer, 0);
 22751  0042CC  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22752  0042D0  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22753  0042D4  0E00               	movlw	0
 22754  0042D6  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22755  0042D8  ECD2  F039         	call	__fill_buffer_get_display	;wreg free
 22756                           
 22757                           ;api.c: 117: break;
 22758  0042DC  0012               	return	
 22759  0042DE                     
 22760                           ;api.c: 121: _fill_buffer_get_display(outBuffer, 1);
 22761  0042DE  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22762  0042E2  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22763  0042E6  0E01               	movlw	1
 22764  0042E8  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22765  0042EA  ECD2  F039         	call	__fill_buffer_get_display	;wreg free
 22766                           
 22767                           ;api.c: 122: break;
 22768  0042EE  0012               	return	
 22769  0042F0                     
 22770                           ;api.c: 126: _fill_buffer_get_bootloader_details(outBuffer);
 22771  0042F0  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 22772  0042F4  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 22773  0042F8  ECB8  F018         	call	__fill_buffer_get_bootloader_details	;wreg free
 22774                           
 22775                           ;api.c: 127: break;
 22776  0042FC  0012               	return	
 22777  0042FE                     
 22778                           ;api.c: 131: _fill_buffer_get_configuration(outBuffer);
 22779  0042FE  C0B4  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 22780  004302  C0B5  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 22781  004306  EC6C  F03D         	call	__fill_buffer_get_configuration	;wreg free
 22782                           
 22783                           ;api.c: 132: break;
 22784  00430A  0012               	return	
 22785  00430C                     
 22786                           ;api.c: 136: memcpy(outBuffer, inBuffer, 64);
 22787  00430C  C0B4  F001         	movff	api_prepare@outBuffer,memcpy@d1
 22788  004310  C0B5  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 22789  004314  C0B2  F003         	movff	api_prepare@inBuffer,memcpy@s1
 22790  004318  C0B3  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 22791  00431C  5003               	movf	memcpy@s1,w,c
 22792  00431E  1004               	iorwf	memcpy@s1+1,w,c
 22793  004320  A4D8               	btfss	status,2,c
 22794  004322  0E20               	movlw	32
 22795  004324  6E05               	movwf	memcpy@s1+2,c
 22796  004326  0E00               	movlw	0
 22797  004328  6E07               	movwf	memcpy@n+1,c
 22798  00432A  0E40               	movlw	64
 22799  00432C  6E06               	movwf	memcpy@n,c
 22800  00432E  ECEF  F043         	call	_memcpy	;wreg free
 22801                           
 22802                           ;api.c: 137: break;
 22803  004332  0012               	return	
 22804  004334                     
 22805                           ;api.c: 140: outBuffer[0] = 0x99;
 22806  004334  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22807  004338  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22808  00433C  0E99               	movlw	153
 22809  00433E  6EDF               	movwf	indf2,c
 22810                           
 22811                           ;api.c: 141: outBuffer[1] = 0x99;
 22812  004340  0100               	movlb	0	; () banked
 22813  004342  EE20 F001          	lfsr	2,1
 22814  004346  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22815  004348  26D9               	addwf	fsr2l,f,c
 22816  00434A  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22817  00434C  22DA               	addwfc	fsr2h,f,c
 22818  00434E  0E99               	movlw	153
 22819  004350  6EDF               	movwf	indf2,c
 22820                           
 22821                           ;api.c: 142: }
 22822  004352  0012               	return	
 22823  004354                     l2762:
 22824                           
 22825                           ; BSR set to: 0
 22826                           
 22827                           ; BSR set to: 0
 22828  004354  51B6               	movf	api_prepare@command& (0+255),w,b
 22829                           
 22830                           ; Switch size 1, requested type "space"
 22831                           ; Number of cases is 7, Range of values is 0 to 32
 22832                           ; switch strategies available:
 22833                           ; Name         Instructions Cycles
 22834                           ; simple_byte           22    12 (average)
 22835                           ;	Chosen strategy is simple_byte
 22836  004356  0A00               	xorlw	0	; case 0
 22837  004358  B4D8               	btfsc	status,2,c
 22838  00435A  0012               	return	
 22839  00435C  0A10               	xorlw	16	; case 16
 22840  00435E  B4D8               	btfsc	status,2,c
 22841  004360  D7AE               	goto	l2765
 22842  004362  0A01               	xorlw	1	; case 17
 22843  004364  B4D8               	btfsc	status,2,c
 22844  004366  D7B2               	goto	l2766
 22845  004368  0A03               	xorlw	3	; case 18
 22846  00436A  B4D8               	btfsc	status,2,c
 22847  00436C  D7B8               	goto	l2767
 22848  00436E  0A01               	xorlw	1	; case 19
 22849  004370  B4D8               	btfsc	status,2,c
 22850  004372  D7BE               	goto	l2768
 22851  004374  0A07               	xorlw	7	; case 20
 22852  004376  B4D8               	btfsc	status,2,c
 22853  004378  D7C2               	goto	l2769
 22854  00437A  0A34               	xorlw	52	; case 32
 22855  00437C  B4D8               	btfsc	status,2,c
 22856  00437E  D7C6               	goto	l2770
 22857  004380  D7D9               	goto	l2771
 22858  004382                     __end_of_api_prepare:
 22859                           	opt stack 0
 22860                           tosu	equ	0xFFF
 22861                           tosh	equ	0xFFE
 22862                           tosl	equ	0xFFD
 22863                           pclath	equ	0xFFA
 22864                           tblptru	equ	0xFF8
 22865                           tblptrh	equ	0xFF7
 22866                           tblptrl	equ	0xFF6
 22867                           tablat	equ	0xFF5
 22868                           prodh	equ	0xFF4
 22869                           prodl	equ	0xFF3
 22870                           intcon	equ	0xFF2
 22871                           intcon2	equ	0xFF1
 22872                           intcon3	equ	0xFF0
 22873                           indf0	equ	0xFEF
 22874                           postinc0	equ	0xFEE
 22875                           fsr0h	equ	0xFEA
 22876                           fsr0l	equ	0xFE9
 22877                           wreg	equ	0xFE8
 22878                           indf1	equ	0xFE7
 22879                           postdec1	equ	0xFE5
 22880                           plusw1	equ	0xFE3
 22881                           fsr1h	equ	0xFE2
 22882                           fsr1l	equ	0xFE1
 22883                           indf2	equ	0xFDF
 22884                           postinc2	equ	0xFDE
 22885                           postdec2	equ	0xFDD
 22886                           plusw2	equ	0xFDB
 22887                           fsr2h	equ	0xFDA
 22888                           fsr2l	equ	0xFD9
 22889                           status	equ	0xFD8
 22890                           
 22891 ;; *************** function __fill_buffer_read_file *****************
 22892 ;; Defined at:
 22893 ;;		line 414 in file "api.c"
 22894 ;; Parameters:    Size  Location     Type
 22895 ;;  inBuffer        2   62[BANK0 ] PTR unsigned char 
 22896 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22897 ;;  outBuffer       2   64[BANK0 ] PTR unsigned char 
 22898 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22899 ;; Auto vars:     Size  Location     Type
 22900 ;;  start           4   78[BANK0 ] unsigned long 
 22901 ;;  data_length     4   74[BANK0 ] unsigned long 
 22902 ;;  file_size       4   70[BANK0 ] unsigned long 
 22903 ;; Return value:  Size  Location     Type
 22904 ;;                  1    wreg      void 
 22905 ;; Registers used:
 22906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22907 ;; Tracked objects:
 22908 ;;		On entry : 0/0
 22909 ;;		On exit  : 0/0
 22910 ;;		Unchanged: 0/0
 22911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22913 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22914 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22915 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22916 ;;Total ram usage:       20 bytes
 22917 ;; Hardware stack levels used:    1
 22918 ;; Hardware stack levels required when called:    9
 22919 ;; This function calls:
 22920 ;;		_fat_get_file_size
 22921 ;;		_fat_read_from_file
 22922 ;; This function is called by:
 22923 ;;		_api_prepare
 22924 ;; This function uses a non-reentrant model
 22925 ;;
 22926                           
 22927                           	psect	text103
 22928  002960                     __ptext103:
 22929                           	opt stack 0
 22930  002960                     __fill_buffer_read_file:
 22931                           	opt stack 20
 22932                           
 22933                           ;api.c: 416: uint32_t start;;api.c: 417: uint32_t file_size;;api.c: 418: uint32_t data_l
      +                          ength;;api.c: 421: outBuffer[0] = DATAREQUEST_READ_FILE;
 22934                           
 22935                           ;incstack = 0
 22936  002960  C0A0  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 22937  002964  C0A1  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 22938  002968  0E82               	movlw	130
 22939  00296A  6EDF               	movwf	indf2,c
 22940                           
 22941                           ;api.c: 424: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 22942  00296C  0100               	movlb	0	; () banked
 22943  00296E  EE20 F001          	lfsr	2,1
 22944  002972  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22945  002974  26D9               	addwf	fsr2l,f,c
 22946  002976  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22947  002978  22DA               	addwfc	fsr2h,f,c
 22948  00297A  0EC1               	movlw	193
 22949  00297C  6EDF               	movwf	indf2,c
 22950                           
 22951                           ; BSR set to: 0
 22952                           ;api.c: 425: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 22953  00297E  EE20 F002          	lfsr	2,2
 22954  002982  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22955  002984  26D9               	addwf	fsr2l,f,c
 22956  002986  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22957  002988  22DA               	addwfc	fsr2h,f,c
 22958  00298A  0E25               	movlw	37
 22959  00298C  6EDF               	movwf	indf2,c
 22960                           
 22961                           ; BSR set to: 0
 22962                           ;api.c: 428: outBuffer[3] = inBuffer[1];
 22963  00298E  EE20 F001          	lfsr	2,1
 22964  002992  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22965  002994  26D9               	addwf	fsr2l,f,c
 22966  002996  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22967  002998  22DA               	addwfc	fsr2h,f,c
 22968  00299A  EE10 F003          	lfsr	1,3
 22969  00299E  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22970  0029A0  26E1               	addwf	fsr1l,f,c
 22971  0029A2  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22972  0029A4  22E2               	addwfc	fsr1h,f,c
 22973  0029A6  CFDF FFE7          	movff	indf2,indf1
 22974                           
 22975                           ; BSR set to: 0
 22976                           ;api.c: 431: outBuffer[4] = inBuffer[2];
 22977  0029AA  EE20 F002          	lfsr	2,2
 22978  0029AE  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22979  0029B0  26D9               	addwf	fsr2l,f,c
 22980  0029B2  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22981  0029B4  22DA               	addwfc	fsr2h,f,c
 22982  0029B6  EE10 F004          	lfsr	1,4
 22983  0029BA  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22984  0029BC  26E1               	addwf	fsr1l,f,c
 22985  0029BE  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22986  0029C0  22E2               	addwfc	fsr1h,f,c
 22987  0029C2  CFDF FFE7          	movff	indf2,indf1
 22988                           
 22989                           ; BSR set to: 0
 22990                           ;api.c: 432: outBuffer[5] = inBuffer[3];
 22991  0029C6  EE20 F003          	lfsr	2,3
 22992  0029CA  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22993  0029CC  26D9               	addwf	fsr2l,f,c
 22994  0029CE  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22995  0029D0  22DA               	addwfc	fsr2h,f,c
 22996  0029D2  EE10 F005          	lfsr	1,5
 22997  0029D6  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22998  0029D8  26E1               	addwf	fsr1l,f,c
 22999  0029DA  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23000  0029DC  22E2               	addwfc	fsr1h,f,c
 23001  0029DE  CFDF FFE7          	movff	indf2,indf1
 23002                           
 23003                           ; BSR set to: 0
 23004                           ;api.c: 433: outBuffer[6] = inBuffer[4];
 23005  0029E2  EE20 F004          	lfsr	2,4
 23006  0029E6  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23007  0029E8  26D9               	addwf	fsr2l,f,c
 23008  0029EA  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23009  0029EC  22DA               	addwfc	fsr2h,f,c
 23010  0029EE  EE10 F006          	lfsr	1,6
 23011  0029F2  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23012  0029F4  26E1               	addwf	fsr1l,f,c
 23013  0029F6  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23014  0029F8  22E2               	addwfc	fsr1h,f,c
 23015  0029FA  CFDF FFE7          	movff	indf2,indf1
 23016                           
 23017                           ; BSR set to: 0
 23018                           ;api.c: 434: outBuffer[7] = inBuffer[5];
 23019  0029FE  EE20 F005          	lfsr	2,5
 23020  002A02  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23021  002A04  26D9               	addwf	fsr2l,f,c
 23022  002A06  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23023  002A08  22DA               	addwfc	fsr2h,f,c
 23024  002A0A  EE10 F007          	lfsr	1,7
 23025  002A0E  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23026  002A10  26E1               	addwf	fsr1l,f,c
 23027  002A12  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23028  002A14  22E2               	addwfc	fsr1h,f,c
 23029  002A16  CFDF FFE7          	movff	indf2,indf1
 23030                           
 23031                           ; BSR set to: 0
 23032                           ;api.c: 437: start = inBuffer[2];
 23033  002A1A  EE20 F002          	lfsr	2,2
 23034  002A1E  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23035  002A20  26D9               	addwf	fsr2l,f,c
 23036  002A22  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23037  002A24  22DA               	addwfc	fsr2h,f,c
 23038  002A26  50DF               	movf	indf2,w,c
 23039  002A28  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23040  002A2A  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23041  002A2C  6FAE               	movwf	__fill_buffer_read_file@start& (0+255),b
 23042  002A2E  6BAF               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 23043  002A30  6BB0               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 23044  002A32  6BB1               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 23045                           
 23046                           ; BSR set to: 0
 23047                           ;api.c: 438: start <<= 8;
 23048  002A34  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 23049  002A38  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 23050  002A3C  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 23051  002A40  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 23052                           
 23053                           ; BSR set to: 0
 23054                           ;api.c: 439: start |= inBuffer[3];
 23055  002A42  EE20 F003          	lfsr	2,3
 23056  002A46  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23057  002A48  26D9               	addwf	fsr2l,f,c
 23058  002A4A  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23059  002A4C  22DA               	addwfc	fsr2h,f,c
 23060  002A4E  50DF               	movf	indf2,w,c
 23061  002A50  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23062  002A52  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23063  002A54  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 23064                           
 23065                           ; BSR set to: 0
 23066                           ;api.c: 440: start <<= 8;
 23067  002A56  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 23068  002A5A  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 23069  002A5E  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 23070  002A62  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 23071                           
 23072                           ; BSR set to: 0
 23073                           ;api.c: 441: start |= inBuffer[4];
 23074  002A64  EE20 F004          	lfsr	2,4
 23075  002A68  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23076  002A6A  26D9               	addwf	fsr2l,f,c
 23077  002A6C  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23078  002A6E  22DA               	addwfc	fsr2h,f,c
 23079  002A70  50DF               	movf	indf2,w,c
 23080  002A72  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23081  002A74  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23082  002A76  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 23083                           
 23084                           ; BSR set to: 0
 23085                           ;api.c: 442: start <<= 8;
 23086  002A78  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 23087  002A7C  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 23088  002A80  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 23089  002A84  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 23090                           
 23091                           ; BSR set to: 0
 23092                           ;api.c: 443: start |= inBuffer[5];
 23093  002A86  EE20 F005          	lfsr	2,5
 23094  002A8A  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23095  002A8C  26D9               	addwf	fsr2l,f,c
 23096  002A8E  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23097  002A90  22DA               	addwfc	fsr2h,f,c
 23098  002A92  50DF               	movf	indf2,w,c
 23099  002A94  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23100  002A96  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23101  002A98  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 23102                           
 23103                           ; BSR set to: 0
 23104                           ;api.c: 446: file_size = fat_get_file_size(inBuffer[1]);
 23105  002A9A  EE20 F001          	lfsr	2,1
 23106  002A9E  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23107  002AA0  26D9               	addwf	fsr2l,f,c
 23108  002AA2  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23109  002AA4  22DA               	addwfc	fsr2h,f,c
 23110  002AA6  50DF               	movf	indf2,w,c
 23111  002AA8  ECB3  F042         	call	_fat_get_file_size
 23112  002AAC  C036  F0A6         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 23113  002AB0  C037  F0A7         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 23114  002AB4  C038  F0A8         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 23115  002AB8  C039  F0A9         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 23116                           
 23117                           ;api.c: 447: data_length = file_size - start;
 23118  002ABC  C0AE  F0A2         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 23119  002AC0  C0AF  F0A3         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 23120  002AC4  C0B0  F0A4         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 23121  002AC8  C0B1  F0A5         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 23122  002ACC  0100               	movlb	0	; () banked
 23123  002ACE  1FA2               	comf	??__fill_buffer_read_file& (0+255),f,b
 23124  002AD0  1FA3               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 23125  002AD2  1FA4               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 23126  002AD4  1FA5               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 23127  002AD6  2BA2               	incf	??__fill_buffer_read_file& (0+255),f,b
 23128  002AD8  0E00               	movlw	0
 23129  002ADA  23A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 23130  002ADC  23A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 23131  002ADE  23A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 23132  002AE0  51A6               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 23133  002AE2  25A2               	addwf	??__fill_buffer_read_file& (0+255),w,b
 23134  002AE4  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 23135  002AE6  51A7               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 23136  002AE8  21A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 23137  002AEA  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 23138  002AEC  51A8               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 23139  002AEE  21A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 23140  002AF0  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 23141  002AF2  51A9               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 23142  002AF4  21A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 23143  002AF6  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 23144                           
 23145                           ; BSR set to: 0
 23146                           ;api.c: 448: if(data_length>54)
 23147  002AF8  51AD               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 23148  002AFA  11AC               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 23149  002AFC  11AB               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 23150  002AFE  E104               	bnz	u12410
 23151  002B00  0E37               	movlw	55
 23152  002B02  5DAA               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 23153  002B04  A0D8               	btfss	status,0,c
 23154  002B06  D008               	goto	l2824
 23155  002B08                     u12410:
 23156                           
 23157                           ; BSR set to: 0
 23158                           ;api.c: 449: {;api.c: 451: data_length = 54;
 23159  002B08  0E36               	movlw	54
 23160  002B0A  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 23161  002B0C  0E00               	movlw	0
 23162  002B0E  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 23163  002B10  0E00               	movlw	0
 23164  002B12  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 23165  002B14  0E00               	movlw	0
 23166  002B16  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 23167  002B18                     l2824:
 23168                           
 23169                           ; BSR set to: 0
 23170                           ;api.c: 452: };api.c: 455: outBuffer[8] = (uint8_t) data_length;
 23171                           
 23172                           ; BSR set to: 0
 23173  002B18  EE20 F008          	lfsr	2,8
 23174  002B1C  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23175  002B1E  26D9               	addwf	fsr2l,f,c
 23176  002B20  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23177  002B22  22DA               	addwfc	fsr2h,f,c
 23178  002B24  C0AA  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 23179                           
 23180                           ; BSR set to: 0
 23181                           ;api.c: 458: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 23182  002B28  C0AE  F06E         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 23183  002B2C  C0AF  F06F         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 23184  002B30  C0B0  F070         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 23185  002B34  C0B1  F071         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 23186  002B38  C0AA  F072         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 23187  002B3C  C0AB  F073         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 23188  002B40  C0AC  F074         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 23189  002B44  C0AD  F075         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 23190  002B48  0E0A               	movlw	10
 23191  002B4A  25A0               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23192  002B4C  6F76               	movwf	fat_read_from_file@data& (0+255),b
 23193  002B4E  0E00               	movlw	0
 23194  002B50  21A1               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23195  002B52  6F77               	movwf	(fat_read_from_file@data+1)& (0+255),b
 23196  002B54  EE20 F001          	lfsr	2,1
 23197  002B58  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23198  002B5A  26D9               	addwf	fsr2l,f,c
 23199  002B5C  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23200  002B5E  22DA               	addwfc	fsr2h,f,c
 23201  002B60  50DF               	movf	indf2,w,c
 23202  002B62  EC2D  F031         	call	_fat_read_from_file
 23203  002B66  0100               	movlb	0	; () banked
 23204  002B68  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23205  002B6A  EE20 F009          	lfsr	2,9
 23206  002B6E  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23207  002B70  26D9               	addwf	fsr2l,f,c
 23208  002B72  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23209  002B74  22DA               	addwfc	fsr2h,f,c
 23210  002B76  C0A2  FFDF         	movff	??__fill_buffer_read_file,indf2
 23211                           
 23212                           ; BSR set to: 0
 23213  002B7A  0012               	return		;funcret
 23214  002B7C                     __end_of__fill_buffer_read_file:
 23215                           	opt stack 0
 23216                           tosu	equ	0xFFF
 23217                           tosh	equ	0xFFE
 23218                           tosl	equ	0xFFD
 23219                           pclath	equ	0xFFA
 23220                           tblptru	equ	0xFF8
 23221                           tblptrh	equ	0xFF7
 23222                           tblptrl	equ	0xFF6
 23223                           tablat	equ	0xFF5
 23224                           prodh	equ	0xFF4
 23225                           prodl	equ	0xFF3
 23226                           intcon	equ	0xFF2
 23227                           intcon2	equ	0xFF1
 23228                           intcon3	equ	0xFF0
 23229                           indf0	equ	0xFEF
 23230                           postinc0	equ	0xFEE
 23231                           fsr0h	equ	0xFEA
 23232                           fsr0l	equ	0xFE9
 23233                           wreg	equ	0xFE8
 23234                           indf1	equ	0xFE7
 23235                           postdec1	equ	0xFE5
 23236                           plusw1	equ	0xFE3
 23237                           fsr1h	equ	0xFE2
 23238                           fsr1l	equ	0xFE1
 23239                           indf2	equ	0xFDF
 23240                           postinc2	equ	0xFDE
 23241                           postdec2	equ	0xFDD
 23242                           plusw2	equ	0xFDB
 23243                           fsr2h	equ	0xFDA
 23244                           fsr2l	equ	0xFD9
 23245                           status	equ	0xFD8
 23246                           
 23247 ;; *************** function _fat_read_from_file *****************
 23248 ;; Defined at:
 23249 ;;		line 751 in file "fat16.c"
 23250 ;; Parameters:    Size  Location     Type
 23251 ;;  file_number     1    wreg     unsigned char 
 23252 ;;  start_byte      4   14[BANK0 ] unsigned long 
 23253 ;;  length          4   18[BANK0 ] unsigned long 
 23254 ;;  data            2   22[BANK0 ] PTR unsigned char 
 23255 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23256 ;; Auto vars:     Size  Location     Type
 23257 ;;  file_number     1   24[BANK0 ] unsigned char 
 23258 ;;  root           32   30[BANK0 ] struct .
 23259 ;;  cluster_numb    2   27[BANK0 ] unsigned int 
 23260 ;;  cluster         2   25[BANK0 ] unsigned int 
 23261 ;;  return_code     1   29[BANK0 ] unsigned char 
 23262 ;; Return value:  Size  Location     Type
 23263 ;;                  1    wreg      unsigned char 
 23264 ;; Registers used:
 23265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23266 ;; Tracked objects:
 23267 ;;		On entry : 0/0
 23268 ;;		On exit  : 0/0
 23269 ;;		Unchanged: 0/0
 23270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23271 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23272 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23273 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23274 ;;      Totals:         4      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23275 ;;Total ram usage:       52 bytes
 23276 ;; Hardware stack levels used:    1
 23277 ;; Hardware stack levels required when called:    8
 23278 ;; This function calls:
 23279 ;;		_fat_get_file_information
 23280 ;;		_fat_read_from_file_fast
 23281 ;; This function is called by:
 23282 ;;		__fill_buffer_read_file
 23283 ;; This function uses a non-reentrant model
 23284 ;;
 23285                           
 23286                           	psect	text104
 23287  00625A                     __ptext104:
 23288                           	opt stack 0
 23289  00625A                     _fat_read_from_file:
 23290                           	opt stack 20
 23291                           
 23292                           ; BSR set to: 0
 23293                           ;incstack = 0
 23294                           ;fat_read_from_file@file_number stored from wreg
 23295  00625A  0100               	movlb	0	; () banked
 23296  00625C  6F78               	movwf	fat_read_from_file@file_number& (0+255),b
 23297                           
 23298                           ;fat16.c: 753: rootEntry_t root;;fat16.c: 754: uint16_t cluster;;fat16.c: 755: uint16_t 
      +                          cluster_number;;fat16.c: 756: uint8_t return_code;;fat16.c: 759: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 23299  00625E  0E7E               	movlw	low fat_read_from_file@root
 23300  006260  6E30               	movwf	fat_get_file_information@data,c
 23301  006262  0E00               	movlw	high fat_read_from_file@root
 23302  006264  6E31               	movwf	fat_get_file_information@data+1,c
 23303  006266  0100               	movlb	0	; () banked
 23304  006268  5178               	movf	fat_read_from_file@file_number& (0+255),w,b
 23305  00626A  EC0A  F042         	call	_fat_get_file_information
 23306  00626E  0100               	movlb	0	; () banked
 23307  006270  6F7D               	movwf	fat_read_from_file@return_code& (0+255),b
 23308                           
 23309                           ; BSR set to: 0
 23310                           ;fat16.c: 760: if(return_code!=0x00)
 23311  006272  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 23312  006274  B4D8               	btfsc	status,2,c
 23313  006276  D002               	goto	l2121
 23314                           
 23315                           ; BSR set to: 0
 23316                           ;fat16.c: 761: {;fat16.c: 763: return return_code;
 23317  006278  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 23318                           
 23319                           ; BSR set to: 0
 23320  00627A  0012               	return	
 23321  00627C                     l2121:
 23322                           
 23323                           ; BSR set to: 0
 23324                           ;fat16.c: 764: };fat16.c: 767: if(start_byte > root.fileSize)
 23325                           
 23326                           ; BSR set to: 0
 23327  00627C  516E               	movf	fat_read_from_file@start_byte& (0+255),w,b
 23328  00627E  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 23329  006280  516F               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 23330  006282  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 23331  006284  5170               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 23332  006286  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 23333  006288  5171               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 23334  00628A  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 23335  00628C  B0D8               	btfsc	status,0,c
 23336  00628E  D002               	goto	l2123
 23337                           
 23338                           ; BSR set to: 0
 23339                           ;fat16.c: 768: {;fat16.c: 770: return 0xFF;
 23340  006290  0EFF               	movlw	255
 23341                           
 23342                           ; BSR set to: 0
 23343  006292  0012               	return	
 23344  006294                     l2123:
 23345                           
 23346                           ; BSR set to: 0
 23347                           ;fat16.c: 771: };fat16.c: 773: if(start_byte+length > root.fileSize)
 23348                           
 23349                           ; BSR set to: 0
 23350  006294  5172               	movf	fat_read_from_file@length& (0+255),w,b
 23351  006296  256E               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 23352  006298  6E5C               	movwf	??_fat_read_from_file& (0+255),c
 23353  00629A  5173               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 23354  00629C  216F               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 23355  00629E  6E5D               	movwf	(??_fat_read_from_file+1)& (0+255),c
 23356  0062A0  5174               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 23357  0062A2  2170               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 23358  0062A4  6E5E               	movwf	(??_fat_read_from_file+2)& (0+255),c
 23359  0062A6  5175               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 23360  0062A8  2171               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 23361  0062AA  6E5F               	movwf	(??_fat_read_from_file+3)& (0+255),c
 23362  0062AC  505C               	movf	??_fat_read_from_file,w,c
 23363  0062AE  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 23364  0062B0  505D               	movf	??_fat_read_from_file+1,w,c
 23365  0062B2  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 23366  0062B4  505E               	movf	??_fat_read_from_file+2,w,c
 23367  0062B6  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 23368  0062B8  505F               	movf	??_fat_read_from_file+3,w,c
 23369  0062BA  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 23370  0062BC  B0D8               	btfsc	status,0,c
 23371  0062BE  D01D               	goto	l2124
 23372                           
 23373                           ; BSR set to: 0
 23374                           ;fat16.c: 774: {;fat16.c: 776: length = root.fileSize - start_byte;
 23375  0062C0  C06E  F05C         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 23376  0062C4  C06F  F05D         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 23377  0062C8  C070  F05E         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 23378  0062CC  C071  F05F         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 23379  0062D0  1E5C               	comf	??_fat_read_from_file,f,c
 23380  0062D2  1E5D               	comf	??_fat_read_from_file+1,f,c
 23381  0062D4  1E5E               	comf	??_fat_read_from_file+2,f,c
 23382  0062D6  1E5F               	comf	??_fat_read_from_file+3,f,c
 23383  0062D8  2A5C               	incf	??_fat_read_from_file,f,c
 23384  0062DA  0E00               	movlw	0
 23385  0062DC  225D               	addwfc	??_fat_read_from_file+1,f,c
 23386  0062DE  225E               	addwfc	??_fat_read_from_file+2,f,c
 23387  0062E0  225F               	addwfc	??_fat_read_from_file+3,f,c
 23388  0062E2  519A               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 23389  0062E4  245C               	addwf	??_fat_read_from_file,w,c
 23390  0062E6  6F72               	movwf	fat_read_from_file@length& (0+255),b
 23391  0062E8  519B               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 23392  0062EA  205D               	addwfc	??_fat_read_from_file+1,w,c
 23393  0062EC  6F73               	movwf	(fat_read_from_file@length+1)& (0+255),b
 23394  0062EE  519C               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 23395  0062F0  205E               	addwfc	??_fat_read_from_file+2,w,c
 23396  0062F2  6F74               	movwf	(fat_read_from_file@length+2)& (0+255),b
 23397  0062F4  519D               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 23398  0062F6  205F               	addwfc	??_fat_read_from_file+3,w,c
 23399  0062F8  6F75               	movwf	(fat_read_from_file@length+3)& (0+255),b
 23400  0062FA                     l2124:
 23401                           
 23402                           ; BSR set to: 0
 23403                           ;fat16.c: 777: };fat16.c: 780: cluster = root.firstCluster;
 23404                           
 23405                           ; BSR set to: 0
 23406  0062FA  C098  F079         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 23407  0062FE  C099  F07A         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 23408                           
 23409                           ; BSR set to: 0
 23410                           ;fat16.c: 781: cluster_number = 0;
 23411  006302  0E00               	movlw	0
 23412  006304  6F7C               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 23413  006306  0E00               	movlw	0
 23414  006308  6F7B               	movwf	fat_read_from_file@cluster_number& (0+255),b
 23415                           
 23416                           ; BSR set to: 0
 23417                           ;fat16.c: 784: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);
 23418  00630A  C06E  F042         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 23419  00630E  C06F  F043         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 23420  006312  C070  F044         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 23421  006316  C071  F045         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 23422  00631A  C072  F046         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 23423  00631E  C073  F047         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 23424  006322  C074  F048         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 23425  006326  C075  F049         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 23426  00632A  C076  F04A         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 23427  00632E  C077  F04B         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 23428  006332  0E79               	movlw	low fat_read_from_file@cluster
 23429  006334  6E4C               	movwf	fat_read_from_file_fast@cluster,c
 23430  006336  0E00               	movlw	high fat_read_from_file@cluster
 23431  006338  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
 23432  00633A  0E7B               	movlw	low fat_read_from_file@cluster_number
 23433  00633C  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
 23434  00633E  0E00               	movlw	high fat_read_from_file@cluster_number
 23435  006340  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
 23436  006342  EC9D  F013         	call	_fat_read_from_file_fast	;wreg free
 23437  006346  0012               	return	
 23438  006348                     __end_of_fat_read_from_file:
 23439                           	opt stack 0
 23440                           tosu	equ	0xFFF
 23441                           tosh	equ	0xFFE
 23442                           tosl	equ	0xFFD
 23443                           pclath	equ	0xFFA
 23444                           tblptru	equ	0xFF8
 23445                           tblptrh	equ	0xFF7
 23446                           tblptrl	equ	0xFF6
 23447                           tablat	equ	0xFF5
 23448                           prodh	equ	0xFF4
 23449                           prodl	equ	0xFF3
 23450                           intcon	equ	0xFF2
 23451                           intcon2	equ	0xFF1
 23452                           intcon3	equ	0xFF0
 23453                           indf0	equ	0xFEF
 23454                           postinc0	equ	0xFEE
 23455                           fsr0h	equ	0xFEA
 23456                           fsr0l	equ	0xFE9
 23457                           wreg	equ	0xFE8
 23458                           indf1	equ	0xFE7
 23459                           postdec1	equ	0xFE5
 23460                           plusw1	equ	0xFE3
 23461                           fsr1h	equ	0xFE2
 23462                           fsr1l	equ	0xFE1
 23463                           indf2	equ	0xFDF
 23464                           postinc2	equ	0xFDE
 23465                           postdec2	equ	0xFDD
 23466                           plusw2	equ	0xFDB
 23467                           fsr2h	equ	0xFDA
 23468                           fsr2l	equ	0xFD9
 23469                           status	equ	0xFD8
 23470                           
 23471 ;; *************** function _fat_read_from_file_fast *****************
 23472 ;; Defined at:
 23473 ;;		line 787 in file "fat16.c"
 23474 ;; Parameters:    Size  Location     Type
 23475 ;;  start_byte      4   65[COMRAM] unsigned long 
 23476 ;;  length          4   69[COMRAM] unsigned long 
 23477 ;;  data            2   73[COMRAM] PTR unsigned char 
 23478 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 23479 ;;  cluster         2   75[COMRAM] PTR unsigned int 
 23480 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
 23481 ;;  cluster_numb    2   77[COMRAM] PTR unsigned int 
 23482 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
 23483 ;; Auto vars:     Size  Location     Type
 23484 ;;  position        4   10[BANK0 ] unsigned long 
 23485 ;;  read_length     2    8[BANK0 ] unsigned int 
 23486 ;;  needed_clust    2    6[BANK0 ] unsigned int 
 23487 ;;  offset          2    4[BANK0 ] unsigned int 
 23488 ;;  working_clus    2    2[BANK0 ] unsigned int 
 23489 ;;  sector          2    0[BANK0 ] unsigned int 
 23490 ;; Return value:  Size  Location     Type
 23491 ;;                  1    wreg      unsigned char 
 23492 ;; Registers used:
 23493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23494 ;; Tracked objects:
 23495 ;;		On entry : 0/0
 23496 ;;		On exit  : 0/0
 23497 ;;		Unchanged: 0/0
 23498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23499 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23500 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23501 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23502 ;;      Totals:        26      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23503 ;;Total ram usage:       40 bytes
 23504 ;; Hardware stack levels used:    1
 23505 ;; Hardware stack levels required when called:    7
 23506 ;; This function calls:
 23507 ;;		__data_sector_from_cluster
 23508 ;;		__find_nth_cluster
 23509 ;;		__read_fat
 23510 ;;		_flash_partial_read
 23511 ;; This function is called by:
 23512 ;;		_fat_read_from_file
 23513 ;;		__bootloader_verify_file
 23514 ;;		__bootloader_program
 23515 ;; This function uses a non-reentrant model
 23516 ;;
 23517                           
 23518                           	psect	text105
 23519  00273A                     __ptext105:
 23520                           	opt stack 0
 23521  00273A                     _fat_read_from_file_fast:
 23522                           	opt stack 21
 23523                           
 23524                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 23525                           
 23526                           ;incstack = 0
 23527  00273A  C042  F050         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 23528  00273E  C043  F051         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 23529  002742  C044  F052         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 23530  002746  C045  F053         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 23531  00274A  0E0A               	movlw	10
 23532  00274C  D005               	goto	u10710
 23533  00274E                     u10715:
 23534  00274E  90D8               	bcf	status,0,c
 23535  002750  3253               	rrcf	??_fat_read_from_file_fast+3,f,c
 23536  002752  3252               	rrcf	??_fat_read_from_file_fast+2,f,c
 23537  002754  3251               	rrcf	??_fat_read_from_file_fast+1,f,c
 23538  002756  3250               	rrcf	??_fat_read_from_file_fast,f,c
 23539  002758                     u10710:
 23540  002758  2EE8               	decfsz	wreg,f,c
 23541  00275A  D7F9               	goto	u10715
 23542  00275C  C050  F066         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 23543  002760  C051  F067         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 23544                           
 23545                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
 23546  002764  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23547  002768  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23548  00276C  50DE               	movf	postinc2,w,c
 23549  00276E  0100               	movlb	0	; () banked
 23550  002770  5D66               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23551  002772  50DE               	movf	postinc2,w,c
 23552  002774  5967               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23553  002776  B0D8               	btfsc	status,0,c
 23554  002778  D002               	goto	l2127
 23555                           
 23556                           ; BSR set to: 0
 23557                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
 23558  00277A  0EFF               	movlw	255
 23559                           
 23560                           ; BSR set to: 0
 23561  00277C  0012               	return	
 23562  00277E                     l2127:
 23563                           
 23564                           ; BSR set to: 0
 23565                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 23566                           
 23567                           ; BSR set to: 0
 23568  00277E  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23569  002782  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23570  002786  CFDE F038          	movff	postinc2,__find_nth_cluster@cluster
 23571  00278A  CFDD F039          	movff	postdec2,__find_nth_cluster@cluster+1
 23572  00278E  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23573  002792  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23574  002796  CFDE F050          	movff	postinc2,??_fat_read_from_file_fast
 23575  00279A  CFDD F051          	movff	postdec2,??_fat_read_from_file_fast+1
 23576  00279E  1E50               	comf	??_fat_read_from_file_fast,f,c
 23577  0027A0  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23578  0027A2  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23579  0027A4  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23580  0027A6  5166               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23581  0027A8  2450               	addwf	??_fat_read_from_file_fast,w,c
 23582  0027AA  6E3A               	movwf	__find_nth_cluster@n,c
 23583  0027AC  5167               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23584  0027AE  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23585  0027B0  6E3B               	movwf	__find_nth_cluster@n+1,c
 23586  0027B2  EC0A  F03E         	call	__find_nth_cluster	;wreg free
 23587  0027B6  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23588  0027BA  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23589  0027BE  C038  FFDE         	movff	?__find_nth_cluster,postinc2
 23590  0027C2  C039  FFDD         	movff	?__find_nth_cluster+1,postdec2
 23591                           
 23592                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
 23593  0027C6  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23594  0027CA  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23595  0027CE  C066  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 23596  0027D2  C067  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 23597                           
 23598                           ;fat16.c: 813: working_cluster = (*cluster);
 23599  0027D6  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23600  0027DA  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23601  0027DE  CFDE F062          	movff	postinc2,fat_read_from_file_fast@working_cluster
 23602  0027E2  CFDD F063          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 23603                           
 23604                           ;fat16.c: 816: position = (needed_cluster << 9);
 23605  0027E6  C066  F050         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 23606  0027EA  C067  F051         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 23607  0027EE  0E09               	movlw	9
 23608  0027F0                     u10735:
 23609  0027F0  90D8               	bcf	status,0,c
 23610  0027F2  3650               	rlcf	??_fat_read_from_file_fast,f,c
 23611  0027F4  3651               	rlcf	??_fat_read_from_file_fast+1,f,c
 23612  0027F6  2EE8               	decfsz	wreg,f,c
 23613  0027F8  D7FB               	goto	u10735
 23614  0027FA  C050  F06A         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 23615  0027FE  C051  F06B         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 23616  002802  0100               	movlb	0	; () banked
 23617  002804  6B6C               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 23618  002806  6B6D               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 23619                           
 23620                           ; BSR set to: 0
 23621                           ;fat16.c: 817: offset = start_byte - position;
 23622  002808  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23623  00280C  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23624  002810  1E50               	comf	??_fat_read_from_file_fast,f,c
 23625  002812  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23626  002814  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23627  002816  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23628  002818  5042               	movf	fat_read_from_file_fast@start_byte,w,c
 23629  00281A  2450               	addwf	??_fat_read_from_file_fast,w,c
 23630  00281C  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23631  00281E  5043               	movf	fat_read_from_file_fast@start_byte+1,w,c
 23632  002820  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23633  002822  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23634                           
 23635                           ; BSR set to: 0
 23636                           ;fat16.c: 820: position = 0;
 23637  002824  0E00               	movlw	0
 23638  002826  6F6A               	movwf	fat_read_from_file_fast@position& (0+255),b
 23639  002828  0E00               	movlw	0
 23640  00282A  6F6B               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 23641  00282C  0E00               	movlw	0
 23642  00282E  6F6C               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 23643  002830  0E00               	movlw	0
 23644  002832  6F6D               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 23645                           
 23646                           ;fat16.c: 821: while(position < length)
 23647  002834  D089               	goto	l2129
 23648  002836                     
 23649                           ; BSR set to: 0
 23650                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
 23651                           
 23652                           ; BSR set to: 0
 23653  002836  0E02               	movlw	2
 23654  002838  1965               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 23655  00283A  1164               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 23656  00283C  A4D8               	btfss	status,2,c
 23657  00283E  D00F               	goto	l2131
 23658                           
 23659                           ; BSR set to: 0
 23660                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
 23661  002840  C062  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 23662  002844  C063  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 23663  002848  ECF6  F046         	call	__read_fat	;wreg free
 23664  00284C  C030  F062         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 23665  002850  C031  F063         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 23666                           
 23667                           ;fat16.c: 828: offset = 0;
 23668  002854  0E00               	movlw	0
 23669  002856  0100               	movlb	0	; () banked
 23670  002858  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23671  00285A  0E00               	movlw	0
 23672  00285C  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23673  00285E                     l2131:
 23674                           
 23675                           ; BSR set to: 0
 23676                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
 23677                           
 23678                           ; BSR set to: 0
 23679  00285E  C062  F001         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 23680  002862  C063  F002         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 23681  002866  EC24  F04E         	call	__data_sector_from_cluster	;wreg free
 23682  00286A  C001  F060         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 23683  00286E  C002  F061         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 23684                           
 23685                           ;fat16.c: 835: read_length = 512 - offset;
 23686  002872  C064  F050         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 23687  002876  C065  F051         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 23688  00287A  1E50               	comf	??_fat_read_from_file_fast,f,c
 23689  00287C  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23690  00287E  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23691  002880  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23692  002882  0E00               	movlw	0
 23693  002884  2450               	addwf	??_fat_read_from_file_fast,w,c
 23694  002886  0100               	movlb	0	; () banked
 23695  002888  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23696  00288A  0E02               	movlw	2
 23697  00288C  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23698  00288E  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23699                           
 23700                           ; BSR set to: 0
 23701                           ;fat16.c: 836: if(read_length > (length-position))
 23702  002890  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23703  002892  6E50               	movwf	??_fat_read_from_file_fast& (0+255),c
 23704  002894  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23705  002896  6E51               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
 23706  002898  6A52               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
 23707  00289A  6A53               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
 23708  00289C  C06A  F054         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 23709  0028A0  C06B  F055         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 23710  0028A4  C06C  F056         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 23711  0028A8  C06D  F057         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 23712  0028AC  1E54               	comf	??_fat_read_from_file_fast+4,f,c
 23713  0028AE  1E55               	comf	??_fat_read_from_file_fast+5,f,c
 23714  0028B0  1E56               	comf	??_fat_read_from_file_fast+6,f,c
 23715  0028B2  1E57               	comf	??_fat_read_from_file_fast+7,f,c
 23716  0028B4  2A54               	incf	??_fat_read_from_file_fast+4,f,c
 23717  0028B6  0E00               	movlw	0
 23718  0028B8  2255               	addwfc	??_fat_read_from_file_fast+5,f,c
 23719  0028BA  2256               	addwfc	??_fat_read_from_file_fast+6,f,c
 23720  0028BC  2257               	addwfc	??_fat_read_from_file_fast+7,f,c
 23721  0028BE  5046               	movf	fat_read_from_file_fast@length,w,c
 23722  0028C0  2454               	addwf	??_fat_read_from_file_fast+4,w,c
 23723  0028C2  6E58               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 23724  0028C4  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23725  0028C6  2055               	addwfc	??_fat_read_from_file_fast+5,w,c
 23726  0028C8  6E59               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 23727  0028CA  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23728  0028CC  2056               	addwfc	??_fat_read_from_file_fast+6,w,c
 23729  0028CE  6E5A               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 23730  0028D0  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23731  0028D2  2057               	addwfc	??_fat_read_from_file_fast+7,w,c
 23732  0028D4  6E5B               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 23733  0028D6  5050               	movf	??_fat_read_from_file_fast,w,c
 23734  0028D8  5C58               	subwf	??_fat_read_from_file_fast+8,w,c
 23735  0028DA  5051               	movf	??_fat_read_from_file_fast+1,w,c
 23736  0028DC  5859               	subwfb	??_fat_read_from_file_fast+9,w,c
 23737  0028DE  5052               	movf	??_fat_read_from_file_fast+2,w,c
 23738  0028E0  585A               	subwfb	??_fat_read_from_file_fast+10,w,c
 23739  0028E2  5053               	movf	??_fat_read_from_file_fast+3,w,c
 23740  0028E4  585B               	subwfb	??_fat_read_from_file_fast+11,w,c
 23741  0028E6  B0D8               	btfsc	status,0,c
 23742  0028E8  D00E               	goto	l2132
 23743                           
 23744                           ; BSR set to: 0
 23745                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
 23746  0028EA  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23747  0028EE  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23748  0028F2  1E50               	comf	??_fat_read_from_file_fast,f,c
 23749  0028F4  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23750  0028F6  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23751  0028F8  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23752  0028FA  5046               	movf	fat_read_from_file_fast@length,w,c
 23753  0028FC  2450               	addwf	??_fat_read_from_file_fast,w,c
 23754  0028FE  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23755  002900  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23756  002902  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23757  002904  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23758  002906                     l2132:
 23759                           
 23760                           ; BSR set to: 0
 23761                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 23762                           
 23763                           ; BSR set to: 0
 23764  002906  C060  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 23765  00290A  C061  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 23766  00290E  C064  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 23767  002912  C065  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 23768  002916  C068  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 23769  00291A  C069  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 23770  00291E  516A               	movf	fat_read_from_file_fast@position& (0+255),w,b
 23771  002920  244A               	addwf	fat_read_from_file_fast@data,w,c
 23772  002922  6E2E               	movwf	flash_partial_read@data,c
 23773  002924  516B               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23774  002926  204B               	addwfc	fat_read_from_file_fast@data+1,w,c
 23775  002928  6E2F               	movwf	flash_partial_read@data+1,c
 23776  00292A  EC00  F04B         	call	_flash_partial_read	;wreg free
 23777                           
 23778                           ;fat16.c: 846: position += read_length;
 23779  00292E  0100               	movlb	0	; () banked
 23780  002930  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23781  002932  276A               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 23782  002934  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23783  002936  236B               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 23784  002938  0E00               	movlw	0
 23785  00293A  236C               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 23786  00293C  0E00               	movlw	0
 23787  00293E  236D               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 23788                           
 23789                           ; BSR set to: 0
 23790                           ;fat16.c: 847: offset += read_length;
 23791  002940  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23792  002942  2764               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 23793  002944  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23794  002946  2365               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 23795  002948                     l2129:
 23796                           
 23797                           ; BSR set to: 0
 23798                           
 23799                           ; BSR set to: 0
 23800  002948  5046               	movf	fat_read_from_file_fast@length,w,c
 23801  00294A  5D6A               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 23802  00294C  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23803  00294E  596B               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23804  002950  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23805  002952  596C               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 23806  002954  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23807  002956  596D               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 23808  002958  A0D8               	btfss	status,0,c
 23809  00295A  D76D               	goto	l2130
 23810                           
 23811                           ; BSR set to: 0
 23812                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
 23813                           
 23814                           ; BSR set to: 0
 23815  00295C  0E00               	movlw	0
 23816  00295E  0012               	return	
 23817  002960                     __end_of_fat_read_from_file_fast:
 23818                           	opt stack 0
 23819                           tosu	equ	0xFFF
 23820                           tosh	equ	0xFFE
 23821                           tosl	equ	0xFFD
 23822                           pclath	equ	0xFFA
 23823                           tblptru	equ	0xFF8
 23824                           tblptrh	equ	0xFF7
 23825                           tblptrl	equ	0xFF6
 23826                           tablat	equ	0xFF5
 23827                           prodh	equ	0xFF4
 23828                           prodl	equ	0xFF3
 23829                           intcon	equ	0xFF2
 23830                           intcon2	equ	0xFF1
 23831                           intcon3	equ	0xFF0
 23832                           indf0	equ	0xFEF
 23833                           postinc0	equ	0xFEE
 23834                           fsr0h	equ	0xFEA
 23835                           fsr0l	equ	0xFE9
 23836                           wreg	equ	0xFE8
 23837                           indf1	equ	0xFE7
 23838                           postdec1	equ	0xFE5
 23839                           plusw1	equ	0xFE3
 23840                           fsr1h	equ	0xFE2
 23841                           fsr1l	equ	0xFE1
 23842                           indf2	equ	0xFDF
 23843                           postinc2	equ	0xFDE
 23844                           postdec2	equ	0xFDD
 23845                           plusw2	equ	0xFDB
 23846                           fsr2h	equ	0xFDA
 23847                           fsr2l	equ	0xFD9
 23848                           status	equ	0xFD8
 23849                           
 23850 ;; *************** function __fill_buffer_read_buffer *****************
 23851 ;; Defined at:
 23852 ;;		line 461 in file "api.c"
 23853 ;; Parameters:    Size  Location     Type
 23854 ;;  inBuffer        2   42[COMRAM] PTR unsigned char 
 23855 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 23856 ;;  outBuffer       2   44[COMRAM] PTR unsigned char 
 23857 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23858 ;; Auto vars:     Size  Location     Type
 23859 ;;  data_length     2   50[COMRAM] unsigned int 
 23860 ;;  start           2   48[COMRAM] unsigned int 
 23861 ;; Return value:  Size  Location     Type
 23862 ;;                  1    wreg      void 
 23863 ;; Registers used:
 23864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23865 ;; Tracked objects:
 23866 ;;		On entry : 0/0
 23867 ;;		On exit  : 0/0
 23868 ;;		Unchanged: 0/0
 23869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23871 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23873 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23874 ;;Total ram usage:       10 bytes
 23875 ;; Hardware stack levels used:    1
 23876 ;; Hardware stack levels required when called:    6
 23877 ;; This function calls:
 23878 ;;		_fat_read_from_buffer
 23879 ;; This function is called by:
 23880 ;;		_api_prepare
 23881 ;; This function uses a non-reentrant model
 23882 ;;
 23883                           
 23884                           	psect	text106
 23885  006072                     __ptext106:
 23886                           	opt stack 0
 23887  006072                     __fill_buffer_read_buffer:
 23888                           	opt stack 23
 23889                           
 23890                           ;api.c: 463: uint16_t start;;api.c: 464: uint16_t data_length;;api.c: 467: outBuffer[0] 
      +                          = DATAREQUEST_READ_BUFFER;
 23891                           
 23892                           ; BSR set to: 0
 23893                           ;incstack = 0
 23894  006072  C02D  FFD9         	movff	__fill_buffer_read_buffer@outBuffer,fsr2l
 23895  006076  C02E  FFDA         	movff	__fill_buffer_read_buffer@outBuffer+1,fsr2h
 23896  00607A  0E83               	movlw	131
 23897  00607C  6EDF               	movwf	indf2,c
 23898                           
 23899                           ;api.c: 470: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 23900  00607E  EE20 F001          	lfsr	2,1
 23901  006082  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23902  006084  26D9               	addwf	fsr2l,f,c
 23903  006086  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23904  006088  22DA               	addwfc	fsr2h,f,c
 23905  00608A  0EC1               	movlw	193
 23906  00608C  6EDF               	movwf	indf2,c
 23907                           
 23908                           ;api.c: 471: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 23909  00608E  EE20 F002          	lfsr	2,2
 23910  006092  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23911  006094  26D9               	addwf	fsr2l,f,c
 23912  006096  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23913  006098  22DA               	addwfc	fsr2h,f,c
 23914  00609A  0E25               	movlw	37
 23915  00609C  6EDF               	movwf	indf2,c
 23916                           
 23917                           ;api.c: 474: outBuffer[3] = inBuffer[1];
 23918  00609E  EE20 F001          	lfsr	2,1
 23919  0060A2  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23920  0060A4  26D9               	addwf	fsr2l,f,c
 23921  0060A6  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23922  0060A8  22DA               	addwfc	fsr2h,f,c
 23923  0060AA  EE10 F003          	lfsr	1,3
 23924  0060AE  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23925  0060B0  26E1               	addwf	fsr1l,f,c
 23926  0060B2  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23927  0060B4  22E2               	addwfc	fsr1h,f,c
 23928  0060B6  CFDF FFE7          	movff	indf2,indf1
 23929                           
 23930                           ;api.c: 475: outBuffer[4] = inBuffer[2];
 23931  0060BA  EE20 F002          	lfsr	2,2
 23932  0060BE  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23933  0060C0  26D9               	addwf	fsr2l,f,c
 23934  0060C2  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23935  0060C4  22DA               	addwfc	fsr2h,f,c
 23936  0060C6  EE10 F004          	lfsr	1,4
 23937  0060CA  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23938  0060CC  26E1               	addwf	fsr1l,f,c
 23939  0060CE  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23940  0060D0  22E2               	addwfc	fsr1h,f,c
 23941  0060D2  CFDF FFE7          	movff	indf2,indf1
 23942                           
 23943                           ;api.c: 478: start = inBuffer[1];
 23944  0060D6  EE20 F001          	lfsr	2,1
 23945  0060DA  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23946  0060DC  26D9               	addwf	fsr2l,f,c
 23947  0060DE  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23948  0060E0  22DA               	addwfc	fsr2h,f,c
 23949  0060E2  50DF               	movf	indf2,w,c
 23950  0060E4  6E2F               	movwf	??__fill_buffer_read_buffer& (0+255),c
 23951  0060E6  502F               	movf	??__fill_buffer_read_buffer,w,c
 23952  0060E8  6E31               	movwf	__fill_buffer_read_buffer@start,c
 23953  0060EA  6A32               	clrf	__fill_buffer_read_buffer@start+1,c
 23954                           
 23955                           ;api.c: 479: start <<= 8;
 23956  0060EC  5031               	movf	__fill_buffer_read_buffer@start,w,c
 23957  0060EE  6E32               	movwf	__fill_buffer_read_buffer@start+1,c
 23958  0060F0  6A31               	clrf	__fill_buffer_read_buffer@start,c
 23959                           
 23960                           ;api.c: 480: start |= inBuffer[2];
 23961  0060F2  EE20 F002          	lfsr	2,2
 23962  0060F6  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23963  0060F8  26D9               	addwf	fsr2l,f,c
 23964  0060FA  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23965  0060FC  22DA               	addwfc	fsr2h,f,c
 23966  0060FE  50DF               	movf	indf2,w,c
 23967  006100  6E2F               	movwf	??__fill_buffer_read_buffer& (0+255),c
 23968  006102  502F               	movf	??__fill_buffer_read_buffer,w,c
 23969  006104  1231               	iorwf	__fill_buffer_read_buffer@start,f,c
 23970                           
 23971                           ;api.c: 483: data_length = 512 - start;
 23972  006106  C031  F02F         	movff	__fill_buffer_read_buffer@start,??__fill_buffer_read_buffer
 23973  00610A  C032  F030         	movff	__fill_buffer_read_buffer@start+1,??__fill_buffer_read_buffer+1
 23974  00610E  1E2F               	comf	??__fill_buffer_read_buffer,f,c
 23975  006110  1E30               	comf	??__fill_buffer_read_buffer+1,f,c
 23976  006112  4A2F               	infsnz	??__fill_buffer_read_buffer,f,c
 23977  006114  2A30               	incf	??__fill_buffer_read_buffer+1,f,c
 23978  006116  0E00               	movlw	0
 23979  006118  242F               	addwf	??__fill_buffer_read_buffer,w,c
 23980  00611A  6E33               	movwf	__fill_buffer_read_buffer@data_length,c
 23981  00611C  0E02               	movlw	2
 23982  00611E  2030               	addwfc	??__fill_buffer_read_buffer+1,w,c
 23983  006120  6E34               	movwf	__fill_buffer_read_buffer@data_length+1,c
 23984                           
 23985                           ;api.c: 484: if(data_length>54)
 23986  006122  5034               	movf	__fill_buffer_read_buffer@data_length+1,w,c
 23987  006124  E104               	bnz	u12420
 23988  006126  0E37               	movlw	55
 23989  006128  5C33               	subwf	__fill_buffer_read_buffer@data_length,w,c
 23990  00612A  A0D8               	btfss	status,0,c
 23991  00612C  D004               	goto	l2828
 23992  00612E                     u12420:
 23993                           
 23994                           ;api.c: 485: {;api.c: 487: data_length = 58;
 23995  00612E  0E00               	movlw	0
 23996  006130  6E34               	movwf	__fill_buffer_read_buffer@data_length+1,c
 23997  006132  0E3A               	movlw	58
 23998  006134  6E33               	movwf	__fill_buffer_read_buffer@data_length,c
 23999  006136                     l2828:
 24000                           
 24001                           ;api.c: 488: };api.c: 491: outBuffer[5] = (uint8_t) data_length;
 24002  006136  EE20 F005          	lfsr	2,5
 24003  00613A  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 24004  00613C  26D9               	addwf	fsr2l,f,c
 24005  00613E  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 24006  006140  22DA               	addwfc	fsr2h,f,c
 24007  006142  C033  FFDF         	movff	__fill_buffer_read_buffer@data_length,indf2
 24008                           
 24009                           ;api.c: 494: fat_read_from_buffer(start, data_length, &outBuffer[6]);
 24010  006146  C031  F025         	movff	__fill_buffer_read_buffer@start,fat_read_from_buffer@start
 24011  00614A  C032  F026         	movff	__fill_buffer_read_buffer@start+1,fat_read_from_buffer@start+1
 24012  00614E  C033  F027         	movff	__fill_buffer_read_buffer@data_length,fat_read_from_buffer@length
 24013  006152  C034  F028         	movff	__fill_buffer_read_buffer@data_length+1,fat_read_from_buffer@length+1
 24014  006156  0E06               	movlw	6
 24015  006158  242D               	addwf	__fill_buffer_read_buffer@outBuffer,w,c
 24016  00615A  6E29               	movwf	fat_read_from_buffer@data,c
 24017  00615C  0E00               	movlw	0
 24018  00615E  202E               	addwfc	__fill_buffer_read_buffer@outBuffer+1,w,c
 24019  006160  6E2A               	movwf	fat_read_from_buffer@data+1,c
 24020  006162  EC22  F04D         	call	_fat_read_from_buffer	;wreg free
 24021  006166  0012               	return		;funcret
 24022  006168                     __end_of__fill_buffer_read_buffer:
 24023                           	opt stack 0
 24024                           tosu	equ	0xFFF
 24025                           tosh	equ	0xFFE
 24026                           tosl	equ	0xFFD
 24027                           pclath	equ	0xFFA
 24028                           tblptru	equ	0xFF8
 24029                           tblptrh	equ	0xFF7
 24030                           tblptrl	equ	0xFF6
 24031                           tablat	equ	0xFF5
 24032                           prodh	equ	0xFF4
 24033                           prodl	equ	0xFF3
 24034                           intcon	equ	0xFF2
 24035                           intcon2	equ	0xFF1
 24036                           intcon3	equ	0xFF0
 24037                           indf0	equ	0xFEF
 24038                           postinc0	equ	0xFEE
 24039                           fsr0h	equ	0xFEA
 24040                           fsr0l	equ	0xFE9
 24041                           wreg	equ	0xFE8
 24042                           indf1	equ	0xFE7
 24043                           postdec1	equ	0xFE5
 24044                           plusw1	equ	0xFE3
 24045                           fsr1h	equ	0xFE2
 24046                           fsr1l	equ	0xFE1
 24047                           indf2	equ	0xFDF
 24048                           postinc2	equ	0xFDE
 24049                           postdec2	equ	0xFDD
 24050                           plusw2	equ	0xFDB
 24051                           fsr2h	equ	0xFDA
 24052                           fsr2l	equ	0xFD9
 24053                           status	equ	0xFD8
 24054                           
 24055 ;; *************** function _fat_read_from_buffer *****************
 24056 ;; Defined at:
 24057 ;;		line 1498 in file "fat16.c"
 24058 ;; Parameters:    Size  Location     Type
 24059 ;;  start           2   36[COMRAM] unsigned int 
 24060 ;;  length          2   38[COMRAM] unsigned int 
 24061 ;;  data            2   40[COMRAM] PTR unsigned char 
 24062 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24063 ;; Auto vars:     Size  Location     Type
 24064 ;;		None
 24065 ;; Return value:  Size  Location     Type
 24066 ;;                  1    wreg      void 
 24067 ;; Registers used:
 24068 ;;		wreg, status,2, status,0, cstack
 24069 ;; Tracked objects:
 24070 ;;		On entry : 0/0
 24071 ;;		On exit  : 0/0
 24072 ;;		Unchanged: 0/0
 24073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24074 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24077 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24078 ;;Total ram usage:        6 bytes
 24079 ;; Hardware stack levels used:    1
 24080 ;; Hardware stack levels required when called:    5
 24081 ;; This function calls:
 24082 ;;		_flash_read_from_buffer
 24083 ;; This function is called by:
 24084 ;;		__fill_buffer_read_buffer
 24085 ;; This function uses a non-reentrant model
 24086 ;;
 24087                           
 24088                           	psect	text107
 24089  009A44                     __ptext107:
 24090                           	opt stack 0
 24091  009A44                     _fat_read_from_buffer:
 24092                           	opt stack 23
 24093                           
 24094                           ;fat16.c: 1500: flash_read_from_buffer(start, length, data);
 24095                           
 24096                           ;incstack = 0
 24097  009A44  C025  F01F         	movff	fat_read_from_buffer@start,flash_read_from_buffer@start
 24098  009A48  C026  F020         	movff	fat_read_from_buffer@start+1,flash_read_from_buffer@start+1
 24099  009A4C  C027  F021         	movff	fat_read_from_buffer@length,flash_read_from_buffer@length
 24100  009A50  C028  F022         	movff	fat_read_from_buffer@length+1,flash_read_from_buffer@length+1
 24101  009A54  C029  F023         	movff	fat_read_from_buffer@data,flash_read_from_buffer@data
 24102  009A58  C02A  F024         	movff	fat_read_from_buffer@data+1,flash_read_from_buffer@data+1
 24103  009A5C  EC61  F04B         	call	_flash_read_from_buffer	;wreg free
 24104  009A60  0012               	return		;funcret
 24105  009A62                     __end_of_fat_read_from_buffer:
 24106                           	opt stack 0
 24107                           tosu	equ	0xFFF
 24108                           tosh	equ	0xFFE
 24109                           tosl	equ	0xFFD
 24110                           pclath	equ	0xFFA
 24111                           tblptru	equ	0xFF8
 24112                           tblptrh	equ	0xFF7
 24113                           tblptrl	equ	0xFF6
 24114                           tablat	equ	0xFF5
 24115                           prodh	equ	0xFF4
 24116                           prodl	equ	0xFF3
 24117                           intcon	equ	0xFF2
 24118                           intcon2	equ	0xFF1
 24119                           intcon3	equ	0xFF0
 24120                           indf0	equ	0xFEF
 24121                           postinc0	equ	0xFEE
 24122                           fsr0h	equ	0xFEA
 24123                           fsr0l	equ	0xFE9
 24124                           wreg	equ	0xFE8
 24125                           indf1	equ	0xFE7
 24126                           postdec1	equ	0xFE5
 24127                           plusw1	equ	0xFE3
 24128                           fsr1h	equ	0xFE2
 24129                           fsr1l	equ	0xFE1
 24130                           indf2	equ	0xFDF
 24131                           postinc2	equ	0xFDE
 24132                           postdec2	equ	0xFDD
 24133                           plusw2	equ	0xFDB
 24134                           fsr2h	equ	0xFDA
 24135                           fsr2l	equ	0xFD9
 24136                           status	equ	0xFD8
 24137                           
 24138 ;; *************** function _flash_read_from_buffer *****************
 24139 ;; Defined at:
 24140 ;;		line 545 in file "flash.c"
 24141 ;; Parameters:    Size  Location     Type
 24142 ;;  start           2   30[COMRAM] unsigned int 
 24143 ;;  length          2   32[COMRAM] unsigned int 
 24144 ;;  data            2   34[COMRAM] PTR unsigned char 
 24145 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24146 ;; Auto vars:     Size  Location     Type
 24147 ;;		None
 24148 ;; Return value:  Size  Location     Type
 24149 ;;                  1    wreg      void 
 24150 ;; Registers used:
 24151 ;;		wreg, status,2, status,0, cstack
 24152 ;; Tracked objects:
 24153 ;;		On entry : 0/0
 24154 ;;		On exit  : 0/0
 24155 ;;		Unchanged: 0/0
 24156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24157 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24160 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24161 ;;Total ram usage:        6 bytes
 24162 ;; Hardware stack levels used:    1
 24163 ;; Hardware stack levels required when called:    4
 24164 ;; This function calls:
 24165 ;;		__flash_buffer_read
 24166 ;;		_spi_set_configuration
 24167 ;; This function is called by:
 24168 ;;		_fat_read_from_buffer
 24169 ;; This function uses a non-reentrant model
 24170 ;;
 24171                           
 24172                           	psect	text108
 24173  0096C2                     __ptext108:
 24174                           	opt stack 0
 24175  0096C2                     _flash_read_from_buffer:
 24176                           	opt stack 23
 24177                           
 24178                           ;flash.c: 548: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 24179                           
 24180                           ;incstack = 0
 24181  0096C2  0E00               	movlw	0
 24182  0096C4  ECAB  F02A         	call	_spi_set_configuration
 24183                           
 24184                           ;flash.c: 550: _flash_buffer_read(start, length, data, FLASH_BUFFER_2);
 24185  0096C8  C01F  F014         	movff	flash_read_from_buffer@start,__flash_buffer_read@start
 24186  0096CC  C020  F015         	movff	flash_read_from_buffer@start+1,__flash_buffer_read@start+1
 24187  0096D0  C021  F016         	movff	flash_read_from_buffer@length,__flash_buffer_read@length
 24188  0096D4  C022  F017         	movff	flash_read_from_buffer@length+1,__flash_buffer_read@length+1
 24189  0096D8  C023  F018         	movff	flash_read_from_buffer@data,__flash_buffer_read@data
 24190  0096DC  C024  F019         	movff	flash_read_from_buffer@data+1,__flash_buffer_read@data+1
 24191  0096E0  0E01               	movlw	1
 24192  0096E2  6E1A               	movwf	__flash_buffer_read@buffer,c
 24193  0096E4  ECF1  F047         	call	__flash_buffer_read	;wreg free
 24194                           
 24195                           ;flash.c: 553: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 24196  0096E8  0E01               	movlw	1
 24197  0096EA  ECAB  F02A         	call	_spi_set_configuration
 24198  0096EE  0012               	return		;funcret
 24199  0096F0                     __end_of_flash_read_from_buffer:
 24200                           	opt stack 0
 24201                           tosu	equ	0xFFF
 24202                           tosh	equ	0xFFE
 24203                           tosl	equ	0xFFD
 24204                           pclath	equ	0xFFA
 24205                           tblptru	equ	0xFF8
 24206                           tblptrh	equ	0xFF7
 24207                           tblptrl	equ	0xFF6
 24208                           tablat	equ	0xFF5
 24209                           prodh	equ	0xFF4
 24210                           prodl	equ	0xFF3
 24211                           intcon	equ	0xFF2
 24212                           intcon2	equ	0xFF1
 24213                           intcon3	equ	0xFF0
 24214                           indf0	equ	0xFEF
 24215                           postinc0	equ	0xFEE
 24216                           fsr0h	equ	0xFEA
 24217                           fsr0l	equ	0xFE9
 24218                           wreg	equ	0xFE8
 24219                           indf1	equ	0xFE7
 24220                           postdec1	equ	0xFE5
 24221                           plusw1	equ	0xFE3
 24222                           fsr1h	equ	0xFE2
 24223                           fsr1l	equ	0xFE1
 24224                           indf2	equ	0xFDF
 24225                           postinc2	equ	0xFDE
 24226                           postdec2	equ	0xFDD
 24227                           plusw2	equ	0xFDB
 24228                           fsr2h	equ	0xFDA
 24229                           fsr2l	equ	0xFD9
 24230                           status	equ	0xFD8
 24231                           
 24232 ;; *************** function __flash_buffer_read *****************
 24233 ;; Defined at:
 24234 ;;		line 331 in file "flash.c"
 24235 ;; Parameters:    Size  Location     Type
 24236 ;;  start           2   19[COMRAM] unsigned int 
 24237 ;;  length          2   21[COMRAM] unsigned int 
 24238 ;;  data            2   23[COMRAM] PTR unsigned char 
 24239 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24240 ;;  buffer          1   25[COMRAM] enum E6904
 24241 ;; Auto vars:     Size  Location     Type
 24242 ;;  command         4   26[COMRAM] unsigned char [4]
 24243 ;; Return value:  Size  Location     Type
 24244 ;;                  1    wreg      void 
 24245 ;; Registers used:
 24246 ;;		wreg, status,2, status,0, cstack
 24247 ;; Tracked objects:
 24248 ;;		On entry : 0/0
 24249 ;;		On exit  : 0/0
 24250 ;;		Unchanged: 0/0
 24251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24252 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24253 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24255 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24256 ;;Total ram usage:       11 bytes
 24257 ;; Hardware stack levels used:    1
 24258 ;; Hardware stack levels required when called:    3
 24259 ;; This function calls:
 24260 ;;		__flash_is_busy
 24261 ;;		_spi_tx_rx
 24262 ;; This function is called by:
 24263 ;;		_flash_read_from_buffer
 24264 ;; This function uses a non-reentrant model
 24265 ;;
 24266                           
 24267                           	psect	text109
 24268  008FE2                     __ptext109:
 24269                           	opt stack 0
 24270  008FE2                     __flash_buffer_read:
 24271                           	opt stack 23
 24272                           
 24273                           ;flash.c: 333: uint8_t command[4];;flash.c: 336: while(_flash_is_busy());
 24274                           
 24275                           ;incstack = 0
 24276  008FE2  ECF1  F04C         	call	__flash_is_busy	;wreg free
 24277  008FE6  0900               	iorlw	0
 24278  008FE8  A4D8               	btfss	status,2,c
 24279  008FEA  D7FB               	goto	__flash_buffer_read
 24280                           
 24281                           ;flash.c: 339: if(buffer==FLASH_BUFFER_1)
 24282  008FEC  501A               	movf	__flash_buffer_read@buffer,w,c
 24283  008FEE  A4D8               	btfss	status,2,c
 24284  008FF0  D002               	goto	l1842
 24285                           
 24286                           ;flash.c: 340: command[0] = 0xD1;
 24287  008FF2  0ED1               	movlw	209
 24288  008FF4  6E1B               	movwf	__flash_buffer_read@command,c
 24289  008FF6                     l1842:
 24290                           
 24291                           ;flash.c: 341: if(buffer==FLASH_BUFFER_2)
 24292  008FF6  041A               	decf	__flash_buffer_read@buffer,w,c
 24293  008FF8  A4D8               	btfss	status,2,c
 24294  008FFA  D002               	goto	l1843
 24295                           
 24296                           ;flash.c: 342: command[0] = 0xD3;
 24297  008FFC  0ED3               	movlw	211
 24298  008FFE  6E1B               	movwf	__flash_buffer_read@command,c
 24299  009000                     l1843:
 24300                           
 24301                           ;flash.c: 343: command[1] = 0x00;
 24302  009000  0E00               	movlw	0
 24303  009002  6E1C               	movwf	__flash_buffer_read@command+1,c
 24304                           
 24305                           ;flash.c: 344: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 24306  009004  5015               	movf	__flash_buffer_read@start+1,w,c
 24307  009006  6E1D               	movwf	__flash_buffer_read@command+2,c
 24308                           
 24309                           ;flash.c: 345: command[3] = ((unsigned char)((start)&0xFF));
 24310  009008  C014  F01E         	movff	__flash_buffer_read@start,__flash_buffer_read@command+3
 24311                           
 24312                           ;flash.c: 348: spi_tx_rx(command, 4, data, length);
 24313  00900C  0E1B               	movlw	low __flash_buffer_read@command
 24314  00900E  6E01               	movwf	spi_tx_rx@command,c
 24315  009010  0E00               	movlw	high __flash_buffer_read@command
 24316  009012  6E02               	movwf	spi_tx_rx@command+1,c
 24317  009014  0E00               	movlw	0
 24318  009016  6E04               	movwf	spi_tx_rx@command_length+1,c
 24319  009018  0E04               	movlw	4
 24320  00901A  6E03               	movwf	spi_tx_rx@command_length,c
 24321  00901C  C018  F005         	movff	__flash_buffer_read@data,spi_tx_rx@data
 24322  009020  C019  F006         	movff	__flash_buffer_read@data+1,spi_tx_rx@data+1
 24323  009024  C016  F007         	movff	__flash_buffer_read@length,spi_tx_rx@data_length
 24324  009028  C017  F008         	movff	__flash_buffer_read@length+1,spi_tx_rx@data_length+1
 24325  00902C  EC3C  F03F         	call	_spi_tx_rx	;wreg free
 24326  009030  0012               	return		;funcret
 24327  009032                     __end_of__flash_buffer_read:
 24328                           	opt stack 0
 24329                           tosu	equ	0xFFF
 24330                           tosh	equ	0xFFE
 24331                           tosl	equ	0xFFD
 24332                           pclath	equ	0xFFA
 24333                           tblptru	equ	0xFF8
 24334                           tblptrh	equ	0xFF7
 24335                           tblptrl	equ	0xFF6
 24336                           tablat	equ	0xFF5
 24337                           prodh	equ	0xFF4
 24338                           prodl	equ	0xFF3
 24339                           intcon	equ	0xFF2
 24340                           intcon2	equ	0xFF1
 24341                           intcon3	equ	0xFF0
 24342                           indf0	equ	0xFEF
 24343                           postinc0	equ	0xFEE
 24344                           fsr0h	equ	0xFEA
 24345                           fsr0l	equ	0xFE9
 24346                           wreg	equ	0xFE8
 24347                           indf1	equ	0xFE7
 24348                           postdec1	equ	0xFE5
 24349                           plusw1	equ	0xFE3
 24350                           fsr1h	equ	0xFE2
 24351                           fsr1l	equ	0xFE1
 24352                           indf2	equ	0xFDF
 24353                           postinc2	equ	0xFDE
 24354                           postdec2	equ	0xFDD
 24355                           plusw2	equ	0xFDB
 24356                           fsr2h	equ	0xFDA
 24357                           fsr2l	equ	0xFD9
 24358                           status	equ	0xFD8
 24359                           
 24360 ;; *************** function __fill_buffer_get_status *****************
 24361 ;; Defined at:
 24362 ;;		line 223 in file "api.c"
 24363 ;; Parameters:    Size  Location     Type
 24364 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 24365 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24366 ;; Auto vars:     Size  Location     Type
 24367 ;;		None
 24368 ;; Return value:  Size  Location     Type
 24369 ;;                  1    wreg      void 
 24370 ;; Registers used:
 24371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24372 ;; Tracked objects:
 24373 ;;		On entry : 0/0
 24374 ;;		On exit  : 0/0
 24375 ;;		Unchanged: 0/0
 24376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24381 ;;Total ram usage:        2 bytes
 24382 ;; Hardware stack levels used:    1
 24383 ;; Hardware stack levels required when called:    4
 24384 ;; This function calls:
 24385 ;;		_flash_is_busy
 24386 ;;		_ui_get_status
 24387 ;; This function is called by:
 24388 ;;		_api_prepare
 24389 ;; This function uses a non-reentrant model
 24390 ;;
 24391                           
 24392                           	psect	text110
 24393  0066D0                     __ptext110:
 24394                           	opt stack 0
 24395  0066D0                     __fill_buffer_get_status:
 24396                           	opt stack 25
 24397                           
 24398                           ;api.c: 226: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24399                           
 24400                           ;incstack = 0
 24401  0066D0  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 24402  0066D4  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 24403  0066D8  0E10               	movlw	16
 24404  0066DA  6EDF               	movwf	indf2,c
 24405                           
 24406                           ;api.c: 229: outBuffer[1] = 0xC125 >> 8;
 24407  0066DC  EE20 F001          	lfsr	2,1
 24408  0066E0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24409  0066E2  26D9               	addwf	fsr2l,f,c
 24410  0066E4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24411  0066E6  22DA               	addwfc	fsr2h,f,c
 24412  0066E8  0EC1               	movlw	193
 24413  0066EA  6EDF               	movwf	indf2,c
 24414                           
 24415                           ;api.c: 230: outBuffer[2] = (uint8_t) 0xC125;
 24416  0066EC  EE20 F002          	lfsr	2,2
 24417  0066F0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24418  0066F2  26D9               	addwf	fsr2l,f,c
 24419  0066F4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24420  0066F6  22DA               	addwfc	fsr2h,f,c
 24421  0066F8  0E25               	movlw	37
 24422  0066FA  6EDF               	movwf	indf2,c
 24423                           
 24424                           ;api.c: 233: outBuffer[3] = (uint8_t) flash_is_busy();
 24425  0066FC  EE20 F003          	lfsr	2,3
 24426  006700  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24427  006702  26D9               	addwf	fsr2l,f,c
 24428  006704  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24429  006706  22DA               	addwfc	fsr2h,f,c
 24430  006708  ECC1  F04D         	call	_flash_is_busy	;wreg free
 24431  00670C  6EDF               	movwf	indf2,c
 24432                           
 24433                           ;api.c: 236: outBuffer[4] = 0x00;
 24434  00670E  EE20 F004          	lfsr	2,4
 24435  006712  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24436  006714  26D9               	addwf	fsr2l,f,c
 24437  006716  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24438  006718  22DA               	addwfc	fsr2h,f,c
 24439  00671A  0E00               	movlw	0
 24440  00671C  6EDF               	movwf	indf2,c
 24441                           
 24442                           ;api.c: 237: outBuffer[5] = 0x04;
 24443  00671E  EE20 F005          	lfsr	2,5
 24444  006722  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24445  006724  26D9               	addwf	fsr2l,f,c
 24446  006726  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24447  006728  22DA               	addwfc	fsr2h,f,c
 24448  00672A  0E04               	movlw	4
 24449  00672C  6EDF               	movwf	indf2,c
 24450                           
 24451                           ;api.c: 238: outBuffer[6] = 0x00;
 24452  00672E  EE20 F006          	lfsr	2,6
 24453  006732  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24454  006734  26D9               	addwf	fsr2l,f,c
 24455  006736  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24456  006738  22DA               	addwfc	fsr2h,f,c
 24457  00673A  0E00               	movlw	0
 24458  00673C  6EDF               	movwf	indf2,c
 24459                           
 24460                           ;api.c: 241: outBuffer[7] = ui_get_status();
 24461  00673E  EE20 F007          	lfsr	2,7
 24462  006742  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24463  006744  26D9               	addwf	fsr2l,f,c
 24464  006746  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24465  006748  22DA               	addwfc	fsr2h,f,c
 24466  00674A  EC8F  F04E         	call	_ui_get_status	;wreg free
 24467  00674E  6EDF               	movwf	indf2,c
 24468                           
 24469                           ;api.c: 244: outBuffer[8] = os.encoderCount;
 24470  006750  EE20 F008          	lfsr	2,8
 24471  006754  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24472  006756  26D9               	addwf	fsr2l,f,c
 24473  006758  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24474  00675A  22DA               	addwfc	fsr2h,f,c
 24475  00675C  C0C5  FFDF         	movff	_os,indf2	;volatile
 24476                           
 24477                           ;api.c: 245: outBuffer[9] = os.buttonCount;
 24478  006760  EE20 F009          	lfsr	2,9
 24479  006764  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24480  006766  26D9               	addwf	fsr2l,f,c
 24481  006768  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24482  00676A  22DA               	addwfc	fsr2h,f,c
 24483  00676C  C0C6  FFDF         	movff	_os+1,indf2	;volatile
 24484                           
 24485                           ;api.c: 246: outBuffer[10] = os.timeSlot;
 24486  006770  EE20 F00A          	lfsr	2,10
 24487  006774  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24488  006776  26D9               	addwf	fsr2l,f,c
 24489  006778  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24490  00677A  22DA               	addwfc	fsr2h,f,c
 24491  00677C  C0C7  FFDF         	movff	_os+2,indf2	;volatile
 24492                           
 24493                           ;api.c: 247: outBuffer[11] = os.done;
 24494  006780  EE20 F00B          	lfsr	2,11
 24495  006784  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24496  006786  26D9               	addwf	fsr2l,f,c
 24497  006788  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24498  00678A  22DA               	addwfc	fsr2h,f,c
 24499  00678C  C0C8  FFDF         	movff	_os+3,indf2	;volatile
 24500                           
 24501                           ;api.c: 248: outBuffer[12] = os.bootloader_mode;
 24502  006790  EE20 F00C          	lfsr	2,12
 24503  006794  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24504  006796  26D9               	addwf	fsr2l,f,c
 24505  006798  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24506  00679A  22DA               	addwfc	fsr2h,f,c
 24507  00679C  C0C9  FFDF         	movff	_os+4,indf2	;volatile
 24508                           
 24509                           ;api.c: 249: outBuffer[13] = os.display_mode;
 24510  0067A0  EE20 F00D          	lfsr	2,13
 24511  0067A4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24512  0067A6  26D9               	addwf	fsr2l,f,c
 24513  0067A8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24514  0067AA  22DA               	addwfc	fsr2h,f,c
 24515  0067AC  C0CA  FFDF         	movff	_os+5,indf2	;volatile
 24516  0067B0  0012               	return		;funcret
 24517  0067B2                     __end_of__fill_buffer_get_status:
 24518                           	opt stack 0
 24519                           tosu	equ	0xFFF
 24520                           tosh	equ	0xFFE
 24521                           tosl	equ	0xFFD
 24522                           pclath	equ	0xFFA
 24523                           tblptru	equ	0xFF8
 24524                           tblptrh	equ	0xFF7
 24525                           tblptrl	equ	0xFF6
 24526                           tablat	equ	0xFF5
 24527                           prodh	equ	0xFF4
 24528                           prodl	equ	0xFF3
 24529                           intcon	equ	0xFF2
 24530                           intcon2	equ	0xFF1
 24531                           intcon3	equ	0xFF0
 24532                           indf0	equ	0xFEF
 24533                           postinc0	equ	0xFEE
 24534                           fsr0h	equ	0xFEA
 24535                           fsr0l	equ	0xFE9
 24536                           wreg	equ	0xFE8
 24537                           indf1	equ	0xFE7
 24538                           postdec1	equ	0xFE5
 24539                           plusw1	equ	0xFE3
 24540                           fsr1h	equ	0xFE2
 24541                           fsr1l	equ	0xFE1
 24542                           indf2	equ	0xFDF
 24543                           postinc2	equ	0xFDE
 24544                           postdec2	equ	0xFDD
 24545                           plusw2	equ	0xFDB
 24546                           fsr2h	equ	0xFDA
 24547                           fsr2l	equ	0xFD9
 24548                           status	equ	0xFD8
 24549                           
 24550 ;; *************** function _flash_is_busy *****************
 24551 ;; Defined at:
 24552 ;;		line 377 in file "flash.c"
 24553 ;; Parameters:    Size  Location     Type
 24554 ;;		None
 24555 ;; Auto vars:     Size  Location     Type
 24556 ;;  result          1   19[COMRAM] unsigned char 
 24557 ;; Return value:  Size  Location     Type
 24558 ;;                  1    wreg      unsigned char 
 24559 ;; Registers used:
 24560 ;;		wreg, status,2, status,0, cstack
 24561 ;; Tracked objects:
 24562 ;;		On entry : 0/0
 24563 ;;		On exit  : 0/0
 24564 ;;		Unchanged: 0/0
 24565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24570 ;;Total ram usage:        1 bytes
 24571 ;; Hardware stack levels used:    1
 24572 ;; Hardware stack levels required when called:    3
 24573 ;; This function calls:
 24574 ;;		__flash_is_busy
 24575 ;;		_spi_set_configuration
 24576 ;; This function is called by:
 24577 ;;		__fill_buffer_get_status
 24578 ;; This function uses a non-reentrant model
 24579 ;;
 24580                           
 24581                           	psect	text111
 24582  009B82                     __ptext111:
 24583                           	opt stack 0
 24584  009B82                     _flash_is_busy:
 24585                           	opt stack 25
 24586                           
 24587                           ;flash.c: 379: uint8_t result;;flash.c: 382: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 24588                           
 24589                           ;incstack = 0
 24590  009B82  0E00               	movlw	0
 24591  009B84  ECAB  F02A         	call	_spi_set_configuration
 24592                           
 24593                           ;flash.c: 385: result = _flash_is_busy();
 24594  009B88  ECF1  F04C         	call	__flash_is_busy	;wreg free
 24595  009B8C  6E14               	movwf	flash_is_busy@result,c
 24596                           
 24597                           ;flash.c: 388: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 24598  009B8E  0E01               	movlw	1
 24599  009B90  ECAB  F02A         	call	_spi_set_configuration
 24600                           
 24601                           ;flash.c: 391: return result;
 24602  009B94  5014               	movf	flash_is_busy@result,w,c
 24603  009B96  0012               	return	
 24604  009B98                     __end_of_flash_is_busy:
 24605                           	opt stack 0
 24606                           tosu	equ	0xFFF
 24607                           tosh	equ	0xFFE
 24608                           tosl	equ	0xFFD
 24609                           pclath	equ	0xFFA
 24610                           tblptru	equ	0xFF8
 24611                           tblptrh	equ	0xFF7
 24612                           tblptrl	equ	0xFF6
 24613                           tablat	equ	0xFF5
 24614                           prodh	equ	0xFF4
 24615                           prodl	equ	0xFF3
 24616                           intcon	equ	0xFF2
 24617                           intcon2	equ	0xFF1
 24618                           intcon3	equ	0xFF0
 24619                           indf0	equ	0xFEF
 24620                           postinc0	equ	0xFEE
 24621                           fsr0h	equ	0xFEA
 24622                           fsr0l	equ	0xFE9
 24623                           wreg	equ	0xFE8
 24624                           indf1	equ	0xFE7
 24625                           postdec1	equ	0xFE5
 24626                           plusw1	equ	0xFE3
 24627                           fsr1h	equ	0xFE2
 24628                           fsr1l	equ	0xFE1
 24629                           indf2	equ	0xFDF
 24630                           postinc2	equ	0xFDE
 24631                           postdec2	equ	0xFDD
 24632                           plusw2	equ	0xFDB
 24633                           fsr2h	equ	0xFDA
 24634                           fsr2l	equ	0xFD9
 24635                           status	equ	0xFD8
 24636                           
 24637 ;; *************** function __fill_buffer_get_file_details *****************
 24638 ;; Defined at:
 24639 ;;		line 375 in file "api.c"
 24640 ;; Parameters:    Size  Location     Type
 24641 ;;  inBuffer        2   55[COMRAM] PTR unsigned char 
 24642 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 24643 ;;  outBuffer       2   57[COMRAM] PTR unsigned char 
 24644 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24645 ;; Auto vars:     Size  Location     Type
 24646 ;;  file_number     1   60[COMRAM] unsigned char 
 24647 ;; Return value:  Size  Location     Type
 24648 ;;                  1    wreg      void 
 24649 ;; Registers used:
 24650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24651 ;; Tracked objects:
 24652 ;;		On entry : 0/0
 24653 ;;		On exit  : 0/0
 24654 ;;		Unchanged: 0/0
 24655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24656 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24659 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24660 ;;Total ram usage:        6 bytes
 24661 ;; Hardware stack levels used:    1
 24662 ;; Hardware stack levels required when called:    6
 24663 ;; This function calls:
 24664 ;;		_fat_get_file_information
 24665 ;; This function is called by:
 24666 ;;		_api_prepare
 24667 ;; This function uses a non-reentrant model
 24668 ;;
 24669                           
 24670                           	psect	text112
 24671  0083A2                     __ptext112:
 24672                           	opt stack 0
 24673  0083A2                     __fill_buffer_get_file_details:
 24674                           	opt stack 23
 24675                           
 24676                           ;api.c: 377: uint8_t file_number = inBuffer[1];
 24677                           
 24678                           ;incstack = 0
 24679  0083A2  EE20 F001          	lfsr	2,1
 24680  0083A6  5038               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 24681  0083A8  26D9               	addwf	fsr2l,f,c
 24682  0083AA  5039               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 24683  0083AC  22DA               	addwfc	fsr2h,f,c
 24684  0083AE  50DF               	movf	indf2,w,c
 24685  0083B0  6E3D               	movwf	__fill_buffer_get_file_details@file_number,c
 24686                           
 24687                           ;api.c: 380: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 24688  0083B2  C03A  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 24689  0083B6  C03B  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 24690  0083BA  0E80               	movlw	128
 24691  0083BC  6EDF               	movwf	indf2,c
 24692                           
 24693                           ;api.c: 383: outBuffer[1] = 0xC125 >> 8;
 24694  0083BE  EE20 F001          	lfsr	2,1
 24695  0083C2  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24696  0083C4  26D9               	addwf	fsr2l,f,c
 24697  0083C6  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24698  0083C8  22DA               	addwfc	fsr2h,f,c
 24699  0083CA  0EC1               	movlw	193
 24700  0083CC  6EDF               	movwf	indf2,c
 24701                           
 24702                           ;api.c: 384: outBuffer[2] = (uint8_t) 0xC125;
 24703  0083CE  EE20 F002          	lfsr	2,2
 24704  0083D2  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24705  0083D4  26D9               	addwf	fsr2l,f,c
 24706  0083D6  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24707  0083D8  22DA               	addwfc	fsr2h,f,c
 24708  0083DA  0E25               	movlw	37
 24709  0083DC  6EDF               	movwf	indf2,c
 24710                           
 24711                           ;api.c: 387: outBuffer[3] = file_number;
 24712  0083DE  EE20 F003          	lfsr	2,3
 24713  0083E2  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24714  0083E4  26D9               	addwf	fsr2l,f,c
 24715  0083E6  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24716  0083E8  22DA               	addwfc	fsr2h,f,c
 24717  0083EA  C03D  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 24718                           
 24719                           ;api.c: 390: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 24720  0083EE  0E05               	movlw	5
 24721  0083F0  243A               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 24722  0083F2  6E30               	movwf	fat_get_file_information@data,c
 24723  0083F4  0E00               	movlw	0
 24724  0083F6  203B               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 24725  0083F8  6E31               	movwf	fat_get_file_information@data+1,c
 24726  0083FA  503D               	movf	__fill_buffer_get_file_details@file_number,w,c
 24727  0083FC  EC0A  F042         	call	_fat_get_file_information
 24728  008400  6E3C               	movwf	??__fill_buffer_get_file_details& (0+255),c
 24729  008402  EE20 F004          	lfsr	2,4
 24730  008406  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24731  008408  26D9               	addwf	fsr2l,f,c
 24732  00840A  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24733  00840C  22DA               	addwfc	fsr2h,f,c
 24734  00840E  C03C  FFDF         	movff	??__fill_buffer_get_file_details,indf2
 24735  008412  0012               	return		;funcret
 24736  008414                     __end_of__fill_buffer_get_file_details:
 24737                           	opt stack 0
 24738                           tosu	equ	0xFFF
 24739                           tosh	equ	0xFFE
 24740                           tosl	equ	0xFFD
 24741                           pclath	equ	0xFFA
 24742                           tblptru	equ	0xFF8
 24743                           tblptrh	equ	0xFF7
 24744                           tblptrl	equ	0xFF6
 24745                           tablat	equ	0xFF5
 24746                           prodh	equ	0xFF4
 24747                           prodl	equ	0xFF3
 24748                           intcon	equ	0xFF2
 24749                           intcon2	equ	0xFF1
 24750                           intcon3	equ	0xFF0
 24751                           indf0	equ	0xFEF
 24752                           postinc0	equ	0xFEE
 24753                           fsr0h	equ	0xFEA
 24754                           fsr0l	equ	0xFE9
 24755                           wreg	equ	0xFE8
 24756                           indf1	equ	0xFE7
 24757                           postdec1	equ	0xFE5
 24758                           plusw1	equ	0xFE3
 24759                           fsr1h	equ	0xFE2
 24760                           fsr1l	equ	0xFE1
 24761                           indf2	equ	0xFDF
 24762                           postinc2	equ	0xFDE
 24763                           postdec2	equ	0xFDD
 24764                           plusw2	equ	0xFDB
 24765                           fsr2h	equ	0xFDA
 24766                           fsr2l	equ	0xFD9
 24767                           status	equ	0xFD8
 24768                           
 24769 ;; *************** function __fill_buffer_get_display *****************
 24770 ;; Defined at:
 24771 ;;		line 253 in file "api.c"
 24772 ;; Parameters:    Size  Location     Type
 24773 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24774 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24775 ;;  secondHalf      1    6[COMRAM] unsigned char 
 24776 ;; Auto vars:     Size  Location     Type
 24777 ;;  position        1   15[COMRAM] unsigned char 
 24778 ;;  start_line      1   14[COMRAM] unsigned char 
 24779 ;;  line            1   13[COMRAM] unsigned char 
 24780 ;;  cntr            1   12[COMRAM] unsigned char 
 24781 ;; Return value:  Size  Location     Type
 24782 ;;                  1    wreg      void 
 24783 ;; Registers used:
 24784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24785 ;; Tracked objects:
 24786 ;;		On entry : 0/0
 24787 ;;		On exit  : 0/0
 24788 ;;		Unchanged: 0/0
 24789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24790 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24791 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24792 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24793 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24794 ;;Total ram usage:       12 bytes
 24795 ;; Hardware stack levels used:    1
 24796 ;; Hardware stack levels required when called:    1
 24797 ;; This function calls:
 24798 ;;		_display_get_character
 24799 ;; This function is called by:
 24800 ;;		_api_prepare
 24801 ;; This function uses a non-reentrant model
 24802 ;;
 24803                           
 24804                           	psect	text113
 24805  0073A4                     __ptext113:
 24806                           	opt stack 0
 24807  0073A4                     __fill_buffer_get_display:
 24808                           	opt stack 28
 24809                           
 24810                           ;api.c: 255: uint8_t cntr;;api.c: 256: uint8_t line;;api.c: 257: uint8_t start_line;;api
      +                          .c: 258: uint8_t position;;api.c: 261: if(secondHalf)
 24811                           
 24812                           ;incstack = 0
 24813  0073A4  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24814  0073A6  B4D8               	btfsc	status,2,c
 24815  0073A8  D006               	goto	l2794
 24816                           
 24817                           ;api.c: 262: {;api.c: 263: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 24818  0073AA  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24819  0073AE  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24820  0073B2  0E12               	movlw	18
 24821  0073B4  D005               	goto	L31
 24822  0073B6                     l2794:
 24823                           
 24824                           ;api.c: 265: else;api.c: 266: {;api.c: 267: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 24825  0073B6  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24826  0073BA  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24827  0073BE  0E11               	movlw	17
 24828  0073C0                     L31:
 24829  0073C0  6EDF               	movwf	indf2,c
 24830                           
 24831                           ;api.c: 268: };api.c: 271: outBuffer[1] = 0xC125 >> 8;
 24832  0073C2  EE20 F001          	lfsr	2,1
 24833  0073C6  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24834  0073C8  26D9               	addwf	fsr2l,f,c
 24835  0073CA  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24836  0073CC  22DA               	addwfc	fsr2h,f,c
 24837  0073CE  0EC1               	movlw	193
 24838  0073D0  6EDF               	movwf	indf2,c
 24839                           
 24840                           ;api.c: 272: outBuffer[2] = (uint8_t) 0xC125;
 24841  0073D2  EE20 F002          	lfsr	2,2
 24842  0073D6  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24843  0073D8  26D9               	addwf	fsr2l,f,c
 24844  0073DA  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24845  0073DC  22DA               	addwfc	fsr2h,f,c
 24846  0073DE  0E25               	movlw	37
 24847  0073E0  6EDF               	movwf	indf2,c
 24848                           
 24849                           ;api.c: 275: cntr = 3;
 24850  0073E2  0E03               	movlw	3
 24851  0073E4  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 24852                           
 24853                           ;api.c: 276: if(secondHalf)
 24854  0073E6  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24855  0073E8  B4D8               	btfsc	status,2,c
 24856  0073EA  D002               	goto	l2796
 24857                           
 24858                           ;api.c: 277: {;api.c: 278: start_line = 2;
 24859  0073EC  0E02               	movlw	2
 24860  0073EE  D001               	goto	L32
 24861  0073F0                     l2796:
 24862                           
 24863                           ;api.c: 280: else;api.c: 281: {;api.c: 282: start_line = 0;
 24864  0073F0  0E00               	movlw	0
 24865  0073F2                     L32:
 24866  0073F2  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 24867                           
 24868                           ;api.c: 283: };api.c: 284: for(line=start_line; line<start_line+2; ++line)
 24869  0073F4  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 24870  0073F8  D01A               	goto	l2798
 24871  0073FA                     
 24872                           ;api.c: 285: {;api.c: 286: for(position=0; position<20; ++position)
 24873  0073FA  0E00               	movlw	0
 24874  0073FC  6E10               	movwf	__fill_buffer_get_display@position,c
 24875  0073FE                     l15180:
 24876  0073FE  0E13               	movlw	19
 24877  007400  6410               	cpfsgt	__fill_buffer_get_display@position,c
 24878  007402  D001               	goto	l2800
 24879  007404  D013               	goto	u12460
 24880  007406                     l2800:
 24881                           
 24882                           ;api.c: 287: {;api.c: 288: outBuffer[cntr] = display_get_character(line, position);
 24883  007406  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 24884  00740A  500E               	movf	__fill_buffer_get_display@line,w,c
 24885  00740C  ECFD  F04B         	call	_display_get_character
 24886  007410  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24887  007412  500D               	movf	__fill_buffer_get_display@cntr,w,c
 24888  007414  0D01               	mullw	1
 24889  007416  50F3               	movf	prodl,w,c
 24890  007418  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 24891  00741A  6ED9               	movwf	fsr2l,c
 24892  00741C  50F4               	movf	prodh,w,c
 24893  00741E  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 24894  007420  6EDA               	movwf	fsr2h,c
 24895  007422  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 24896                           
 24897                           ;api.c: 289: ++cntr;
 24898  007426  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 24899  007428  2A10               	incf	__fill_buffer_get_display@position,f,c
 24900  00742A  D7E9               	goto	l15180
 24901  00742C                     u12460:
 24902  00742C  2A0E               	incf	__fill_buffer_get_display@line,f,c
 24903  00742E                     l2798:
 24904  00742E  500F               	movf	__fill_buffer_get_display@start_line,w,c
 24905  007430  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24906  007432  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 24907  007434  0E02               	movlw	2
 24908  007436  2608               	addwf	??__fill_buffer_get_display,f,c
 24909  007438  0E00               	movlw	0
 24910  00743A  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 24911  00743C  500E               	movf	__fill_buffer_get_display@line,w,c
 24912  00743E  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 24913  007440  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 24914  007442  5008               	movf	??__fill_buffer_get_display,w,c
 24915  007444  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 24916  007446  500B               	movf	??__fill_buffer_get_display+3,w,c
 24917  007448  0A80               	xorlw	128
 24918  00744A  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 24919  00744C  5009               	movf	??__fill_buffer_get_display+1,w,c
 24920  00744E  0A80               	xorlw	128
 24921  007450  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 24922  007452  B0D8               	btfsc	status,0,c
 24923  007454  0012               	return	
 24924  007456  D7D1               	goto	l2799
 24925  007458                     __end_of__fill_buffer_get_display:
 24926                           	opt stack 0
 24927                           tosu	equ	0xFFF
 24928                           tosh	equ	0xFFE
 24929                           tosl	equ	0xFFD
 24930                           pclath	equ	0xFFA
 24931                           tblptru	equ	0xFF8
 24932                           tblptrh	equ	0xFF7
 24933                           tblptrl	equ	0xFF6
 24934                           tablat	equ	0xFF5
 24935                           prodh	equ	0xFF4
 24936                           prodl	equ	0xFF3
 24937                           intcon	equ	0xFF2
 24938                           intcon2	equ	0xFF1
 24939                           intcon3	equ	0xFF0
 24940                           indf0	equ	0xFEF
 24941                           postinc0	equ	0xFEE
 24942                           fsr0h	equ	0xFEA
 24943                           fsr0l	equ	0xFE9
 24944                           wreg	equ	0xFE8
 24945                           indf1	equ	0xFE7
 24946                           postdec1	equ	0xFE5
 24947                           plusw1	equ	0xFE3
 24948                           fsr1h	equ	0xFE2
 24949                           fsr1l	equ	0xFE1
 24950                           indf2	equ	0xFDF
 24951                           postinc2	equ	0xFDE
 24952                           postdec2	equ	0xFDD
 24953                           plusw2	equ	0xFDB
 24954                           fsr2h	equ	0xFDA
 24955                           fsr2l	equ	0xFD9
 24956                           status	equ	0xFD8
 24957                           
 24958 ;; *************** function _display_get_character *****************
 24959 ;; Defined at:
 24960 ;;		line 76 in file "display.c"
 24961 ;; Parameters:    Size  Location     Type
 24962 ;;  line            1    wreg     unsigned char 
 24963 ;;  position        1    0[COMRAM] unsigned char 
 24964 ;; Auto vars:     Size  Location     Type
 24965 ;;  line            1    3[COMRAM] unsigned char 
 24966 ;; Return value:  Size  Location     Type
 24967 ;;                  1    wreg      unsigned char 
 24968 ;; Registers used:
 24969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24970 ;; Tracked objects:
 24971 ;;		On entry : 0/0
 24972 ;;		On exit  : 0/0
 24973 ;;		Unchanged: 0/0
 24974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24975 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24978 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24979 ;;Total ram usage:        4 bytes
 24980 ;; Hardware stack levels used:    1
 24981 ;; This function calls:
 24982 ;;		Nothing
 24983 ;; This function is called by:
 24984 ;;		__fill_buffer_get_display
 24985 ;; This function uses a non-reentrant model
 24986 ;;
 24987                           
 24988                           	psect	text114
 24989  0097FA                     __ptext114:
 24990                           	opt stack 0
 24991  0097FA                     _display_get_character:
 24992                           	opt stack 28
 24993                           
 24994                           ;incstack = 0
 24995                           ;display_get_character@line stored from wreg
 24996  0097FA  6E04               	movwf	display_get_character@line,c
 24997                           
 24998                           ;display.c: 78: return display_content[line][position];
 24999  0097FC  5004               	movf	display_get_character@line,w,c
 25000  0097FE  0D14               	mullw	20
 25001  009800  0E00               	movlw	low _display_content
 25002  009802  6E02               	movwf	??_display_get_character& (0+255),c
 25003  009804  0E02               	movlw	high _display_content
 25004  009806  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 25005  009808  50F3               	movf	prodl,w,c
 25006  00980A  2602               	addwf	??_display_get_character,f,c
 25007  00980C  50F4               	movf	prodh,w,c
 25008  00980E  2203               	addwfc	??_display_get_character+1,f,c
 25009  009810  5001               	movf	display_get_character@position,w,c
 25010  009812  0D01               	mullw	1
 25011  009814  50F3               	movf	prodl,w,c
 25012  009816  2402               	addwf	??_display_get_character,w,c
 25013  009818  6ED9               	movwf	fsr2l,c
 25014  00981A  50F4               	movf	prodh,w,c
 25015  00981C  2003               	addwfc	??_display_get_character+1,w,c
 25016  00981E  6EDA               	movwf	fsr2h,c
 25017  009820  50DF               	movf	indf2,w,c
 25018  009822  0012               	return	
 25019  009824                     __end_of_display_get_character:
 25020                           	opt stack 0
 25021                           tosu	equ	0xFFF
 25022                           tosh	equ	0xFFE
 25023                           tosl	equ	0xFFD
 25024                           pclath	equ	0xFFA
 25025                           tblptru	equ	0xFF8
 25026                           tblptrh	equ	0xFF7
 25027                           tblptrl	equ	0xFF6
 25028                           tablat	equ	0xFF5
 25029                           prodh	equ	0xFF4
 25030                           prodl	equ	0xFF3
 25031                           intcon	equ	0xFF2
 25032                           intcon2	equ	0xFF1
 25033                           intcon3	equ	0xFF0
 25034                           indf0	equ	0xFEF
 25035                           postinc0	equ	0xFEE
 25036                           fsr0h	equ	0xFEA
 25037                           fsr0l	equ	0xFE9
 25038                           wreg	equ	0xFE8
 25039                           indf1	equ	0xFE7
 25040                           postdec1	equ	0xFE5
 25041                           plusw1	equ	0xFE3
 25042                           fsr1h	equ	0xFE2
 25043                           fsr1l	equ	0xFE1
 25044                           indf2	equ	0xFDF
 25045                           postinc2	equ	0xFDE
 25046                           postdec2	equ	0xFDD
 25047                           plusw2	equ	0xFDB
 25048                           fsr2h	equ	0xFDA
 25049                           fsr2l	equ	0xFD9
 25050                           status	equ	0xFD8
 25051                           
 25052 ;; *************** function __fill_buffer_get_configuration *****************
 25053 ;; Defined at:
 25054 ;;		line 354 in file "api.c"
 25055 ;; Parameters:    Size  Location     Type
 25056 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 25057 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25058 ;; Auto vars:     Size  Location     Type
 25059 ;;		None
 25060 ;; Return value:  Size  Location     Type
 25061 ;;                  1    wreg      void 
 25062 ;; Registers used:
 25063 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25064 ;; Tracked objects:
 25065 ;;		On entry : 0/0
 25066 ;;		On exit  : 0/0
 25067 ;;		Unchanged: 0/0
 25068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25073 ;;Total ram usage:        2 bytes
 25074 ;; Hardware stack levels used:    1
 25075 ;; This function calls:
 25076 ;;		Nothing
 25077 ;; This function is called by:
 25078 ;;		_api_prepare
 25079 ;; This function uses a non-reentrant model
 25080 ;;
 25081                           
 25082                           	psect	text115
 25083  007AD8                     __ptext115:
 25084                           	opt stack 0
 25085  007AD8                     __fill_buffer_get_configuration:
 25086                           	opt stack 29
 25087                           
 25088                           ;api.c: 357: outBuffer[0] = DATAREQUEST_GET_STATUS;
 25089                           
 25090                           ;incstack = 0
 25091  007AD8  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 25092  007ADC  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 25093  007AE0  0E10               	movlw	16
 25094  007AE2  6EDF               	movwf	indf2,c
 25095                           
 25096                           ;api.c: 360: outBuffer[1] = 0xC125 >> 8;
 25097  007AE4  EE20 F001          	lfsr	2,1
 25098  007AE8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25099  007AEA  26D9               	addwf	fsr2l,f,c
 25100  007AEC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25101  007AEE  22DA               	addwfc	fsr2h,f,c
 25102  007AF0  0EC1               	movlw	193
 25103  007AF2  6EDF               	movwf	indf2,c
 25104                           
 25105                           ;api.c: 361: outBuffer[2] = (uint8_t) 0xC125;
 25106  007AF4  EE20 F002          	lfsr	2,2
 25107  007AF8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25108  007AFA  26D9               	addwf	fsr2l,f,c
 25109  007AFC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25110  007AFE  22DA               	addwfc	fsr2h,f,c
 25111  007B00  0E25               	movlw	37
 25112  007B02  6EDF               	movwf	indf2,c
 25113                           
 25114                           ;api.c: 364: outBuffer[3] = communicationSettings.spiMode;
 25115  007B04  EE20 F003          	lfsr	2,3
 25116  007B08  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25117  007B0A  26D9               	addwf	fsr2l,f,c
 25118  007B0C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25119  007B0E  22DA               	addwfc	fsr2h,f,c
 25120  007B10  C139  FFDF         	movff	_communicationSettings,indf2
 25121                           
 25122                           ;api.c: 365: outBuffer[4] = communicationSettings.spiFrequency;
 25123  007B14  EE20 F004          	lfsr	2,4
 25124  007B18  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25125  007B1A  26D9               	addwf	fsr2l,f,c
 25126  007B1C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25127  007B1E  22DA               	addwfc	fsr2h,f,c
 25128  007B20  C13A  FFDF         	movff	_communicationSettings+1,indf2
 25129                           
 25130                           ;api.c: 366: outBuffer[5] = communicationSettings.spiPolarity;
 25131  007B24  EE20 F005          	lfsr	2,5
 25132  007B28  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25133  007B2A  26D9               	addwf	fsr2l,f,c
 25134  007B2C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25135  007B2E  22DA               	addwfc	fsr2h,f,c
 25136  007B30  C13B  FFDF         	movff	_communicationSettings+2,indf2
 25137                           
 25138                           ;api.c: 369: outBuffer[6] = communicationSettings.i2cMode;
 25139  007B34  EE20 F006          	lfsr	2,6
 25140  007B38  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25141  007B3A  26D9               	addwf	fsr2l,f,c
 25142  007B3C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25143  007B3E  22DA               	addwfc	fsr2h,f,c
 25144  007B40  C13C  FFDF         	movff	_communicationSettings+3,indf2
 25145                           
 25146                           ;api.c: 370: outBuffer[7] = communicationSettings.i2cFrequency;
 25147  007B44  EE20 F007          	lfsr	2,7
 25148  007B48  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25149  007B4A  26D9               	addwf	fsr2l,f,c
 25150  007B4C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25151  007B4E  22DA               	addwfc	fsr2h,f,c
 25152  007B50  C13D  FFDF         	movff	_communicationSettings+4,indf2
 25153                           
 25154                           ;api.c: 371: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 25155  007B54  EE20 F008          	lfsr	2,8
 25156  007B58  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25157  007B5A  26D9               	addwf	fsr2l,f,c
 25158  007B5C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25159  007B5E  22DA               	addwfc	fsr2h,f,c
 25160  007B60  C13E  FFDF         	movff	_communicationSettings+5,indf2
 25161                           
 25162                           ;api.c: 372: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 25163  007B64  EE20 F009          	lfsr	2,9
 25164  007B68  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25165  007B6A  26D9               	addwf	fsr2l,f,c
 25166  007B6C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25167  007B6E  22DA               	addwfc	fsr2h,f,c
 25168  007B70  C13F  FFDF         	movff	_communicationSettings+6,indf2
 25169  007B74  0012               	return		;funcret
 25170  007B76                     __end_of__fill_buffer_get_configuration:
 25171                           	opt stack 0
 25172                           tosu	equ	0xFFF
 25173                           tosh	equ	0xFFE
 25174                           tosl	equ	0xFFD
 25175                           pclath	equ	0xFFA
 25176                           tblptru	equ	0xFF8
 25177                           tblptrh	equ	0xFF7
 25178                           tblptrl	equ	0xFF6
 25179                           tablat	equ	0xFF5
 25180                           prodh	equ	0xFF4
 25181                           prodl	equ	0xFF3
 25182                           intcon	equ	0xFF2
 25183                           intcon2	equ	0xFF1
 25184                           intcon3	equ	0xFF0
 25185                           indf0	equ	0xFEF
 25186                           postinc0	equ	0xFEE
 25187                           fsr0h	equ	0xFEA
 25188                           fsr0l	equ	0xFE9
 25189                           wreg	equ	0xFE8
 25190                           indf1	equ	0xFE7
 25191                           postdec1	equ	0xFE5
 25192                           plusw1	equ	0xFE3
 25193                           fsr1h	equ	0xFE2
 25194                           fsr1l	equ	0xFE1
 25195                           indf2	equ	0xFDF
 25196                           postinc2	equ	0xFDE
 25197                           postdec2	equ	0xFDD
 25198                           plusw2	equ	0xFDB
 25199                           fsr2h	equ	0xFDA
 25200                           fsr2l	equ	0xFD9
 25201                           status	equ	0xFD8
 25202                           
 25203 ;; *************** function __fill_buffer_get_bootloader_details *****************
 25204 ;; Defined at:
 25205 ;;		line 294 in file "api.c"
 25206 ;; Parameters:    Size  Location     Type
 25207 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 25208 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25209 ;; Auto vars:     Size  Location     Type
 25210 ;;  buffer_large    4   11[COMRAM] unsigned long 
 25211 ;;  buffer_small    2   15[COMRAM] unsigned int 
 25212 ;;  cntr            1   10[COMRAM] unsigned char 
 25213 ;;  data_length     1    9[COMRAM] unsigned char 
 25214 ;; Return value:  Size  Location     Type
 25215 ;;                  1    wreg      void 
 25216 ;; Registers used:
 25217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25218 ;; Tracked objects:
 25219 ;;		On entry : 0/0
 25220 ;;		On exit  : 0/0
 25221 ;;		Unchanged: 0/0
 25222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25224 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25225 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25226 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25227 ;;Total ram usage:       13 bytes
 25228 ;; Hardware stack levels used:    1
 25229 ;; Hardware stack levels required when called:    1
 25230 ;; This function calls:
 25231 ;;		_bootloader_get_entries
 25232 ;;		_bootloader_get_error
 25233 ;;		_bootloader_get_file_size
 25234 ;;		_bootloader_get_flashPagesWritten
 25235 ;;		_bootloader_get_rec_address
 25236 ;;		_bootloader_get_rec_checksum
 25237 ;;		_bootloader_get_rec_checksumCheck
 25238 ;;		_bootloader_get_rec_data
 25239 ;;		_bootloader_get_rec_dataLength
 25240 ;;		_bootloader_get_rec_recordType
 25241 ;;		_bootloader_get_total_entries
 25242 ;; This function is called by:
 25243 ;;		_api_prepare
 25244 ;; This function uses a non-reentrant model
 25245 ;;
 25246                           
 25247                           	psect	text116
 25248  003170                     __ptext116:
 25249                           	opt stack 0
 25250  003170                     __fill_buffer_get_bootloader_details:
 25251                           	opt stack 28
 25252                           
 25253                           ;api.c: 296: uint8_t cntr;;api.c: 297: uint8_t data_length;;api.c: 298: uint16_t buffer_
      +                          small;;api.c: 299: uint32_t buffer_large;;api.c: 302: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 25254                           
 25255                           ;incstack = 0
 25256  003170  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 25257  003174  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 25258  003178  0E13               	movlw	19
 25259  00317A  6EDF               	movwf	indf2,c
 25260                           
 25261                           ;api.c: 305: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 25262  00317C  EE20 F001          	lfsr	2,1
 25263  003180  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25264  003182  26D9               	addwf	fsr2l,f,c
 25265  003184  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25266  003186  22DA               	addwfc	fsr2h,f,c
 25267  003188  0EC1               	movlw	193
 25268  00318A  6EDF               	movwf	indf2,c
 25269                           
 25270                           ;api.c: 306: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 25271  00318C  EE20 F002          	lfsr	2,2
 25272  003190  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25273  003192  26D9               	addwf	fsr2l,f,c
 25274  003194  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25275  003196  22DA               	addwfc	fsr2h,f,c
 25276  003198  0E25               	movlw	37
 25277  00319A  6EDF               	movwf	indf2,c
 25278                           
 25279                           ;api.c: 309: buffer_large = bootloader_get_file_size();
 25280  00319C  ECF4  F04D         	call	_bootloader_get_file_size	;wreg free
 25281  0031A0  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 25282  0031A4  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 25283  0031A8  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 25284  0031AC  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 25285                           
 25286                           ;api.c: 310: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 25287  0031B0  EE20 F003          	lfsr	2,3
 25288  0031B4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25289  0031B6  26D9               	addwf	fsr2l,f,c
 25290  0031B8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25291  0031BA  22DA               	addwfc	fsr2h,f,c
 25292  0031BC  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 25293  0031BE  6EDF               	movwf	indf2,c
 25294                           
 25295                           ;api.c: 311: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 25296  0031C0  EE20 F004          	lfsr	2,4
 25297  0031C4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25298  0031C6  26D9               	addwf	fsr2l,f,c
 25299  0031C8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25300  0031CA  22DA               	addwfc	fsr2h,f,c
 25301  0031CC  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 25302                           
 25303                           ;api.c: 312: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 25304  0031D0  EE20 F005          	lfsr	2,5
 25305  0031D4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25306  0031D6  26D9               	addwf	fsr2l,f,c
 25307  0031D8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25308  0031DA  22DA               	addwfc	fsr2h,f,c
 25309  0031DC  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 25310  0031DE  6EDF               	movwf	indf2,c
 25311                           
 25312                           ;api.c: 313: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 25313  0031E0  EE20 F006          	lfsr	2,6
 25314  0031E4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25315  0031E6  26D9               	addwf	fsr2l,f,c
 25316  0031E8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25317  0031EA  22DA               	addwfc	fsr2h,f,c
 25318  0031EC  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 25319                           
 25320                           ;api.c: 315: buffer_small = bootloader_get_entries();
 25321  0031F0  EC5E  F04E         	call	_bootloader_get_entries	;wreg free
 25322  0031F4  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 25323  0031F8  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 25324                           
 25325                           ;api.c: 316: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25326  0031FC  EE20 F007          	lfsr	2,7
 25327  003200  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25328  003202  26D9               	addwf	fsr2l,f,c
 25329  003204  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25330  003206  22DA               	addwfc	fsr2h,f,c
 25331  003208  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25332  00320A  6EDF               	movwf	indf2,c
 25333                           
 25334                           ;api.c: 317: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 25335  00320C  EE20 F008          	lfsr	2,8
 25336  003210  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25337  003212  26D9               	addwf	fsr2l,f,c
 25338  003214  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25339  003216  22DA               	addwfc	fsr2h,f,c
 25340  003218  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25341                           
 25342                           ;api.c: 319: buffer_small = bootloader_get_total_entries();
 25343  00321C  EC68  F04E         	call	_bootloader_get_total_entries	;wreg free
 25344  003220  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 25345  003224  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 25346                           
 25347                           ;api.c: 320: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25348  003228  EE20 F009          	lfsr	2,9
 25349  00322C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25350  00322E  26D9               	addwf	fsr2l,f,c
 25351  003230  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25352  003232  22DA               	addwfc	fsr2h,f,c
 25353  003234  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25354  003236  6EDF               	movwf	indf2,c
 25355                           
 25356                           ;api.c: 321: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 25357  003238  EE20 F00A          	lfsr	2,10
 25358  00323C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25359  00323E  26D9               	addwf	fsr2l,f,c
 25360  003240  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25361  003242  22DA               	addwfc	fsr2h,f,c
 25362  003244  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25363                           
 25364                           ;api.c: 323: outBuffer[11] = (uint8_t) bootloader_get_error();
 25365  003248  EE20 F00B          	lfsr	2,11
 25366  00324C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25367  00324E  26D9               	addwf	fsr2l,f,c
 25368  003250  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25369  003252  22DA               	addwfc	fsr2h,f,c
 25370  003254  EC92  F04E         	call	_bootloader_get_error	;wreg free
 25371  003258  6EDF               	movwf	indf2,c
 25372                           
 25373                           ;api.c: 325: buffer_small = bootloader_get_flashPagesWritten();
 25374  00325A  EC63  F04E         	call	_bootloader_get_flashPagesWritten	;wreg free
 25375  00325E  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 25376  003262  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 25377                           
 25378                           ;api.c: 326: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25379  003266  EE20 F00C          	lfsr	2,12
 25380  00326A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25381  00326C  26D9               	addwf	fsr2l,f,c
 25382  00326E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25383  003270  22DA               	addwfc	fsr2h,f,c
 25384  003272  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25385  003274  6EDF               	movwf	indf2,c
 25386                           
 25387                           ;api.c: 327: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 25388  003276  EE20 F00D          	lfsr	2,13
 25389  00327A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25390  00327C  26D9               	addwf	fsr2l,f,c
 25391  00327E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25392  003280  22DA               	addwfc	fsr2h,f,c
 25393  003282  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25394                           
 25395                           ;api.c: 330: buffer_small = bootloader_get_rec_dataLength();
 25396  003286  EC54  F04E         	call	_bootloader_get_rec_dataLength	;wreg free
 25397  00328A  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 25398  00328E  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 25399                           
 25400                           ;api.c: 331: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25401  003292  EE20 F00E          	lfsr	2,14
 25402  003296  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25403  003298  26D9               	addwf	fsr2l,f,c
 25404  00329A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25405  00329C  22DA               	addwfc	fsr2h,f,c
 25406  00329E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25407  0032A0  6EDF               	movwf	indf2,c
 25408                           
 25409                           ;api.c: 332: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 25410  0032A2  EE20 F00F          	lfsr	2,15
 25411  0032A6  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25412  0032A8  26D9               	addwf	fsr2l,f,c
 25413  0032AA  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25414  0032AC  22DA               	addwfc	fsr2h,f,c
 25415  0032AE  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25416                           
 25417                           ;api.c: 334: buffer_small = bootloader_get_rec_address();
 25418  0032B2  EC59  F04E         	call	_bootloader_get_rec_address	;wreg free
 25419  0032B6  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 25420  0032BA  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 25421                           
 25422                           ;api.c: 335: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25423  0032BE  EE20 F010          	lfsr	2,16
 25424  0032C2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25425  0032C4  26D9               	addwf	fsr2l,f,c
 25426  0032C6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25427  0032C8  22DA               	addwfc	fsr2h,f,c
 25428  0032CA  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25429  0032CC  6EDF               	movwf	indf2,c
 25430                           
 25431                           ;api.c: 336: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 25432  0032CE  EE20 F011          	lfsr	2,17
 25433  0032D2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25434  0032D4  26D9               	addwf	fsr2l,f,c
 25435  0032D6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25436  0032D8  22DA               	addwfc	fsr2h,f,c
 25437  0032DA  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25438                           
 25439                           ;api.c: 338: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 25440  0032DE  EE20 F012          	lfsr	2,18
 25441  0032E2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25442  0032E4  26D9               	addwf	fsr2l,f,c
 25443  0032E6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25444  0032E8  22DA               	addwfc	fsr2h,f,c
 25445  0032EA  EC86  F04E         	call	_bootloader_get_rec_recordType	;wreg free
 25446  0032EE  6EDF               	movwf	indf2,c
 25447                           
 25448                           ;api.c: 339: outBuffer[19] = bootloader_get_rec_checksum();
 25449  0032F0  EE20 F013          	lfsr	2,19
 25450  0032F4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25451  0032F6  26D9               	addwf	fsr2l,f,c
 25452  0032F8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25453  0032FA  22DA               	addwfc	fsr2h,f,c
 25454  0032FC  EC8C  F04E         	call	_bootloader_get_rec_checksum	;wreg free
 25455  003300  6EDF               	movwf	indf2,c
 25456                           
 25457                           ;api.c: 340: outBuffer[20] = bootloader_get_rec_checksumCheck();
 25458  003302  EE20 F014          	lfsr	2,20
 25459  003306  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25460  003308  26D9               	addwf	fsr2l,f,c
 25461  00330A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25462  00330C  22DA               	addwfc	fsr2h,f,c
 25463  00330E  EC89  F04E         	call	_bootloader_get_rec_checksumCheck	;wreg free
 25464  003312  6EDF               	movwf	indf2,c
 25465                           
 25466                           ;api.c: 342: data_length = (uint8_t) bootloader_get_rec_dataLength();
 25467  003314  EC54  F04E         	call	_bootloader_get_rec_dataLength	;wreg free
 25468  003318  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 25469  00331A  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25470                           
 25471                           ;api.c: 343: if(data_length>43)
 25472  00331C  0E2B               	movlw	43
 25473  00331E  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 25474  003320  D002               	goto	l2806
 25475                           
 25476                           ;api.c: 344: {;api.c: 346: data_length = 43;
 25477  003322  0E2B               	movlw	43
 25478  003324  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25479  003326                     l2806:
 25480                           
 25481                           ;api.c: 347: };api.c: 348: for(cntr=0; cntr<data_length; ++cntr)
 25482  003326  0E00               	movlw	0
 25483  003328  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 25484  00332A  D014               	goto	l2807
 25485  00332C                     
 25486                           ;api.c: 349: {;api.c: 350: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 25487  00332C  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25488  00332E  ECCC  F04D         	call	_bootloader_get_rec_data
 25489  003332  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 25490  003334  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25491  003336  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 25492  003338  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 25493  00333A  0E15               	movlw	21
 25494  00333C  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 25495  00333E  0E00               	movlw	0
 25496  003340  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 25497  003342  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 25498  003344  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25499  003346  6ED9               	movwf	fsr2l,c
 25500  003348  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 25501  00334A  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25502  00334C  6EDA               	movwf	fsr2h,c
 25503  00334E  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 25504  003352  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 25505  003354                     l2807:
 25506  003354  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 25507  003356  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 25508  003358  B0D8               	btfsc	status,0,c
 25509  00335A  0012               	return	
 25510  00335C  D7E7               	goto	l2808
 25511  00335E                     __end_of__fill_buffer_get_bootloader_details:
 25512                           	opt stack 0
 25513                           tosu	equ	0xFFF
 25514                           tosh	equ	0xFFE
 25515                           tosl	equ	0xFFD
 25516                           pclath	equ	0xFFA
 25517                           tblptru	equ	0xFF8
 25518                           tblptrh	equ	0xFF7
 25519                           tblptrl	equ	0xFF6
 25520                           tablat	equ	0xFF5
 25521                           prodh	equ	0xFF4
 25522                           prodl	equ	0xFF3
 25523                           intcon	equ	0xFF2
 25524                           intcon2	equ	0xFF1
 25525                           intcon3	equ	0xFF0
 25526                           indf0	equ	0xFEF
 25527                           postinc0	equ	0xFEE
 25528                           fsr0h	equ	0xFEA
 25529                           fsr0l	equ	0xFE9
 25530                           wreg	equ	0xFE8
 25531                           indf1	equ	0xFE7
 25532                           postdec1	equ	0xFE5
 25533                           plusw1	equ	0xFE3
 25534                           fsr1h	equ	0xFE2
 25535                           fsr1l	equ	0xFE1
 25536                           indf2	equ	0xFDF
 25537                           postinc2	equ	0xFDE
 25538                           postdec2	equ	0xFDD
 25539                           plusw2	equ	0xFDB
 25540                           fsr2h	equ	0xFDA
 25541                           fsr2l	equ	0xFD9
 25542                           status	equ	0xFD8
 25543                           
 25544 ;; *************** function _bootloader_get_rec_recordType *****************
 25545 ;; Defined at:
 25546 ;;		line 494 in file "bootloader.c"
 25547 ;; Parameters:    Size  Location     Type
 25548 ;;		None
 25549 ;; Auto vars:     Size  Location     Type
 25550 ;;		None
 25551 ;; Return value:  Size  Location     Type
 25552 ;;                  1    wreg      enum E6774
 25553 ;; Registers used:
 25554 ;;		wreg, status,2
 25555 ;; Tracked objects:
 25556 ;;		On entry : 0/0
 25557 ;;		On exit  : 0/0
 25558 ;;		Unchanged: 0/0
 25559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25564 ;;Total ram usage:        0 bytes
 25565 ;; Hardware stack levels used:    1
 25566 ;; This function calls:
 25567 ;;		Nothing
 25568 ;; This function is called by:
 25569 ;;		__fill_buffer_get_bootloader_details
 25570 ;; This function uses a non-reentrant model
 25571 ;;
 25572                           
 25573                           	psect	text117
 25574  009D0C                     __ptext117:
 25575                           	opt stack 0
 25576  009D0C                     _bootloader_get_rec_recordType:
 25577                           	opt stack 28
 25578                           
 25579                           ;bootloader.c: 496: return hex_file_entry.recordType;
 25580                           
 25581                           ;incstack = 0
 25582  009D0C  0101               	movlb	1	; () banked
 25583  009D0E  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
 25584  009D10  0012               	return	
 25585  009D12                     __end_of_bootloader_get_rec_recordType:
 25586                           	opt stack 0
 25587                           tosu	equ	0xFFF
 25588                           tosh	equ	0xFFE
 25589                           tosl	equ	0xFFD
 25590                           pclath	equ	0xFFA
 25591                           tblptru	equ	0xFF8
 25592                           tblptrh	equ	0xFF7
 25593                           tblptrl	equ	0xFF6
 25594                           tablat	equ	0xFF5
 25595                           prodh	equ	0xFF4
 25596                           prodl	equ	0xFF3
 25597                           intcon	equ	0xFF2
 25598                           intcon2	equ	0xFF1
 25599                           intcon3	equ	0xFF0
 25600                           indf0	equ	0xFEF
 25601                           postinc0	equ	0xFEE
 25602                           fsr0h	equ	0xFEA
 25603                           fsr0l	equ	0xFE9
 25604                           wreg	equ	0xFE8
 25605                           indf1	equ	0xFE7
 25606                           postdec1	equ	0xFE5
 25607                           plusw1	equ	0xFE3
 25608                           fsr1h	equ	0xFE2
 25609                           fsr1l	equ	0xFE1
 25610                           indf2	equ	0xFDF
 25611                           postinc2	equ	0xFDE
 25612                           postdec2	equ	0xFDD
 25613                           plusw2	equ	0xFDB
 25614                           fsr2h	equ	0xFDA
 25615                           fsr2l	equ	0xFD9
 25616                           status	equ	0xFD8
 25617                           
 25618 ;; *************** function _bootloader_get_rec_dataLength *****************
 25619 ;; Defined at:
 25620 ;;		line 483 in file "bootloader.c"
 25621 ;; Parameters:    Size  Location     Type
 25622 ;;		None
 25623 ;; Auto vars:     Size  Location     Type
 25624 ;;		None
 25625 ;; Return value:  Size  Location     Type
 25626 ;;                  2    0[COMRAM] unsigned int 
 25627 ;; Registers used:
 25628 ;;		None
 25629 ;; Tracked objects:
 25630 ;;		On entry : 0/0
 25631 ;;		On exit  : 0/0
 25632 ;;		Unchanged: 0/0
 25633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25637 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25638 ;;Total ram usage:        2 bytes
 25639 ;; Hardware stack levels used:    1
 25640 ;; This function calls:
 25641 ;;		Nothing
 25642 ;; This function is called by:
 25643 ;;		__fill_buffer_get_bootloader_details
 25644 ;; This function uses a non-reentrant model
 25645 ;;
 25646                           
 25647                           	psect	text118
 25648  009CA8                     __ptext118:
 25649                           	opt stack 0
 25650  009CA8                     _bootloader_get_rec_dataLength:
 25651                           	opt stack 28
 25652                           
 25653                           ;bootloader.c: 485: return hex_file_entry.dataLength;
 25654                           
 25655                           ; BSR set to: 1
 25656                           ;incstack = 0
 25657  009CA8  C193  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 25658  009CAC  C194  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 25659  009CB0  0012               	return		;funcret
 25660  009CB2                     __end_of_bootloader_get_rec_dataLength:
 25661                           	opt stack 0
 25662                           tosu	equ	0xFFF
 25663                           tosh	equ	0xFFE
 25664                           tosl	equ	0xFFD
 25665                           pclath	equ	0xFFA
 25666                           tblptru	equ	0xFF8
 25667                           tblptrh	equ	0xFF7
 25668                           tblptrl	equ	0xFF6
 25669                           tablat	equ	0xFF5
 25670                           prodh	equ	0xFF4
 25671                           prodl	equ	0xFF3
 25672                           intcon	equ	0xFF2
 25673                           intcon2	equ	0xFF1
 25674                           intcon3	equ	0xFF0
 25675                           indf0	equ	0xFEF
 25676                           postinc0	equ	0xFEE
 25677                           fsr0h	equ	0xFEA
 25678                           fsr0l	equ	0xFE9
 25679                           wreg	equ	0xFE8
 25680                           indf1	equ	0xFE7
 25681                           postdec1	equ	0xFE5
 25682                           plusw1	equ	0xFE3
 25683                           fsr1h	equ	0xFE2
 25684                           fsr1l	equ	0xFE1
 25685                           indf2	equ	0xFDF
 25686                           postinc2	equ	0xFDE
 25687                           postdec2	equ	0xFDD
 25688                           plusw2	equ	0xFDB
 25689                           fsr2h	equ	0xFDA
 25690                           fsr2l	equ	0xFD9
 25691                           status	equ	0xFD8
 25692                           
 25693 ;; *************** function _bootloader_get_rec_data *****************
 25694 ;; Defined at:
 25695 ;;		line 499 in file "bootloader.c"
 25696 ;; Parameters:    Size  Location     Type
 25697 ;;  index           1    wreg     unsigned char 
 25698 ;; Auto vars:     Size  Location     Type
 25699 ;;  index           1    0[COMRAM] unsigned char 
 25700 ;; Return value:  Size  Location     Type
 25701 ;;                  1    wreg      unsigned char 
 25702 ;; Registers used:
 25703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25704 ;; Tracked objects:
 25705 ;;		On entry : 0/0
 25706 ;;		On exit  : 0/0
 25707 ;;		Unchanged: 0/0
 25708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25713 ;;Total ram usage:        1 bytes
 25714 ;; Hardware stack levels used:    1
 25715 ;; This function calls:
 25716 ;;		Nothing
 25717 ;; This function is called by:
 25718 ;;		__fill_buffer_get_bootloader_details
 25719 ;; This function uses a non-reentrant model
 25720 ;;
 25721                           
 25722                           	psect	text119
 25723  009B98                     __ptext119:
 25724                           	opt stack 0
 25725  009B98                     _bootloader_get_rec_data:
 25726                           	opt stack 28
 25727                           
 25728                           ;incstack = 0
 25729                           ;bootloader_get_rec_data@index stored from wreg
 25730  009B98  6E01               	movwf	bootloader_get_rec_data@index,c
 25731                           
 25732                           ;bootloader.c: 501: return hex_file_entry.data[index];
 25733  009B9A  5001               	movf	bootloader_get_rec_data@index,w,c
 25734  009B9C  0D01               	mullw	1
 25735  009B9E  0E98               	movlw	low (_hex_file_entry+5)
 25736  009BA0  24F3               	addwf	prodl,w,c
 25737  009BA2  6ED9               	movwf	fsr2l,c
 25738  009BA4  0E01               	movlw	high (_hex_file_entry+5)
 25739  009BA6  20F4               	addwfc	prodh,w,c
 25740  009BA8  6EDA               	movwf	fsr2h,c
 25741  009BAA  50DF               	movf	indf2,w,c
 25742  009BAC  0012               	return	
 25743  009BAE                     __end_of_bootloader_get_rec_data:
 25744                           	opt stack 0
 25745                           tosu	equ	0xFFF
 25746                           tosh	equ	0xFFE
 25747                           tosl	equ	0xFFD
 25748                           pclath	equ	0xFFA
 25749                           tblptru	equ	0xFF8
 25750                           tblptrh	equ	0xFF7
 25751                           tblptrl	equ	0xFF6
 25752                           tablat	equ	0xFF5
 25753                           prodh	equ	0xFF4
 25754                           prodl	equ	0xFF3
 25755                           intcon	equ	0xFF2
 25756                           intcon2	equ	0xFF1
 25757                           intcon3	equ	0xFF0
 25758                           indf0	equ	0xFEF
 25759                           postinc0	equ	0xFEE
 25760                           fsr0h	equ	0xFEA
 25761                           fsr0l	equ	0xFE9
 25762                           wreg	equ	0xFE8
 25763                           indf1	equ	0xFE7
 25764                           postdec1	equ	0xFE5
 25765                           plusw1	equ	0xFE3
 25766                           fsr1h	equ	0xFE2
 25767                           fsr1l	equ	0xFE1
 25768                           indf2	equ	0xFDF
 25769                           postinc2	equ	0xFDE
 25770                           postdec2	equ	0xFDD
 25771                           plusw2	equ	0xFDB
 25772                           fsr2h	equ	0xFDA
 25773                           fsr2l	equ	0xFD9
 25774                           status	equ	0xFD8
 25775                           
 25776 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 25777 ;; Defined at:
 25778 ;;		line 509 in file "bootloader.c"
 25779 ;; Parameters:    Size  Location     Type
 25780 ;;		None
 25781 ;; Auto vars:     Size  Location     Type
 25782 ;;		None
 25783 ;; Return value:  Size  Location     Type
 25784 ;;                  1    wreg      unsigned char 
 25785 ;; Registers used:
 25786 ;;		wreg, status,2
 25787 ;; Tracked objects:
 25788 ;;		On entry : 0/0
 25789 ;;		On exit  : 0/0
 25790 ;;		Unchanged: 0/0
 25791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25796 ;;Total ram usage:        0 bytes
 25797 ;; Hardware stack levels used:    1
 25798 ;; This function calls:
 25799 ;;		Nothing
 25800 ;; This function is called by:
 25801 ;;		__fill_buffer_get_bootloader_details
 25802 ;; This function uses a non-reentrant model
 25803 ;;
 25804                           
 25805                           	psect	text120
 25806  009D12                     __ptext120:
 25807                           	opt stack 0
 25808  009D12                     _bootloader_get_rec_checksumCheck:
 25809                           	opt stack 28
 25810                           
 25811                           ;bootloader.c: 511: return hex_file_entry.checksumCheck;
 25812                           
 25813                           ;incstack = 0
 25814  009D12  0101               	movlb	1	; () banked
 25815  009D14  51A9               	movf	(_hex_file_entry+22)& (0+255),w,b
 25816  009D16  0012               	return	
 25817  009D18                     __end_of_bootloader_get_rec_checksumCheck:
 25818                           	opt stack 0
 25819                           tosu	equ	0xFFF
 25820                           tosh	equ	0xFFE
 25821                           tosl	equ	0xFFD
 25822                           pclath	equ	0xFFA
 25823                           tblptru	equ	0xFF8
 25824                           tblptrh	equ	0xFF7
 25825                           tblptrl	equ	0xFF6
 25826                           tablat	equ	0xFF5
 25827                           prodh	equ	0xFF4
 25828                           prodl	equ	0xFF3
 25829                           intcon	equ	0xFF2
 25830                           intcon2	equ	0xFF1
 25831                           intcon3	equ	0xFF0
 25832                           indf0	equ	0xFEF
 25833                           postinc0	equ	0xFEE
 25834                           fsr0h	equ	0xFEA
 25835                           fsr0l	equ	0xFE9
 25836                           wreg	equ	0xFE8
 25837                           indf1	equ	0xFE7
 25838                           postdec1	equ	0xFE5
 25839                           plusw1	equ	0xFE3
 25840                           fsr1h	equ	0xFE2
 25841                           fsr1l	equ	0xFE1
 25842                           indf2	equ	0xFDF
 25843                           postinc2	equ	0xFDE
 25844                           postdec2	equ	0xFDD
 25845                           plusw2	equ	0xFDB
 25846                           fsr2h	equ	0xFDA
 25847                           fsr2l	equ	0xFD9
 25848                           status	equ	0xFD8
 25849                           
 25850 ;; *************** function _bootloader_get_rec_checksum *****************
 25851 ;; Defined at:
 25852 ;;		line 504 in file "bootloader.c"
 25853 ;; Parameters:    Size  Location     Type
 25854 ;;		None
 25855 ;; Auto vars:     Size  Location     Type
 25856 ;;		None
 25857 ;; Return value:  Size  Location     Type
 25858 ;;                  1    wreg      unsigned char 
 25859 ;; Registers used:
 25860 ;;		wreg, status,2
 25861 ;; Tracked objects:
 25862 ;;		On entry : 0/0
 25863 ;;		On exit  : 0/0
 25864 ;;		Unchanged: 0/0
 25865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25870 ;;Total ram usage:        0 bytes
 25871 ;; Hardware stack levels used:    1
 25872 ;; This function calls:
 25873 ;;		Nothing
 25874 ;; This function is called by:
 25875 ;;		__fill_buffer_get_bootloader_details
 25876 ;; This function uses a non-reentrant model
 25877 ;;
 25878                           
 25879                           	psect	text121
 25880  009D18                     __ptext121:
 25881                           	opt stack 0
 25882  009D18                     _bootloader_get_rec_checksum:
 25883                           	opt stack 28
 25884                           
 25885                           ;bootloader.c: 506: return hex_file_entry.checksum;
 25886                           
 25887                           ; BSR set to: 1
 25888                           ;incstack = 0
 25889  009D18  0101               	movlb	1	; () banked
 25890  009D1A  51A8               	movf	(_hex_file_entry+21)& (0+255),w,b
 25891  009D1C  0012               	return	
 25892  009D1E                     __end_of_bootloader_get_rec_checksum:
 25893                           	opt stack 0
 25894                           tosu	equ	0xFFF
 25895                           tosh	equ	0xFFE
 25896                           tosl	equ	0xFFD
 25897                           pclath	equ	0xFFA
 25898                           tblptru	equ	0xFF8
 25899                           tblptrh	equ	0xFF7
 25900                           tblptrl	equ	0xFF6
 25901                           tablat	equ	0xFF5
 25902                           prodh	equ	0xFF4
 25903                           prodl	equ	0xFF3
 25904                           intcon	equ	0xFF2
 25905                           intcon2	equ	0xFF1
 25906                           intcon3	equ	0xFF0
 25907                           indf0	equ	0xFEF
 25908                           postinc0	equ	0xFEE
 25909                           fsr0h	equ	0xFEA
 25910                           fsr0l	equ	0xFE9
 25911                           wreg	equ	0xFE8
 25912                           indf1	equ	0xFE7
 25913                           postdec1	equ	0xFE5
 25914                           plusw1	equ	0xFE3
 25915                           fsr1h	equ	0xFE2
 25916                           fsr1l	equ	0xFE1
 25917                           indf2	equ	0xFDF
 25918                           postinc2	equ	0xFDE
 25919                           postdec2	equ	0xFDD
 25920                           plusw2	equ	0xFDB
 25921                           fsr2h	equ	0xFDA
 25922                           fsr2l	equ	0xFD9
 25923                           status	equ	0xFD8
 25924                           
 25925 ;; *************** function __fill_buffer_find_file *****************
 25926 ;; Defined at:
 25927 ;;		line 393 in file "api.c"
 25928 ;; Parameters:    Size  Location     Type
 25929 ;;  inBuffer        2   54[COMRAM] PTR unsigned char 
 25930 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 25931 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 25932 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25933 ;; Auto vars:     Size  Location     Type
 25934 ;;  cntr            1   62[COMRAM] unsigned char 
 25935 ;; Return value:  Size  Location     Type
 25936 ;;                  1    wreg      void 
 25937 ;; Registers used:
 25938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25939 ;; Tracked objects:
 25940 ;;		On entry : 0/0
 25941 ;;		On exit  : 0/0
 25942 ;;		Unchanged: 0/0
 25943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25946 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25947 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25948 ;;Total ram usage:        9 bytes
 25949 ;; Hardware stack levels used:    1
 25950 ;; Hardware stack levels required when called:    6
 25951 ;; This function calls:
 25952 ;;		_fat_find_file
 25953 ;; This function is called by:
 25954 ;;		_api_prepare
 25955 ;; This function uses a non-reentrant model
 25956 ;;
 25957                           
 25958                           	psect	text122
 25959  0078F6                     __ptext122:
 25960                           	opt stack 0
 25961  0078F6                     __fill_buffer_find_file:
 25962                           	opt stack 23
 25963                           
 25964                           ;api.c: 395: uint8_t cntr;;api.c: 398: outBuffer[0] = DATAREQUEST_FIND_FILE;
 25965                           
 25966                           ; BSR set to: 1
 25967                           ;incstack = 0
 25968  0078F6  C039  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 25969  0078FA  C03A  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 25970  0078FE  0E81               	movlw	129
 25971  007900  6EDF               	movwf	indf2,c
 25972                           
 25973                           ;api.c: 401: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 25974  007902  EE20 F001          	lfsr	2,1
 25975  007906  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25976  007908  26D9               	addwf	fsr2l,f,c
 25977  00790A  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25978  00790C  22DA               	addwfc	fsr2h,f,c
 25979  00790E  0EC1               	movlw	193
 25980  007910  6EDF               	movwf	indf2,c
 25981                           
 25982                           ;api.c: 402: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 25983  007912  EE20 F002          	lfsr	2,2
 25984  007916  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25985  007918  26D9               	addwf	fsr2l,f,c
 25986  00791A  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25987  00791C  22DA               	addwfc	fsr2h,f,c
 25988  00791E  0E25               	movlw	37
 25989  007920  6EDF               	movwf	indf2,c
 25990                           
 25991                           ;api.c: 405: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 25992  007922  0E01               	movlw	1
 25993  007924  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25994  007926  6E2C               	movwf	fat_find_file@name,c
 25995  007928  0E00               	movlw	0
 25996  00792A  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25997  00792C  6E2D               	movwf	fat_find_file@name+1,c
 25998  00792E  0E09               	movlw	9
 25999  007930  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26000  007932  6E2E               	movwf	fat_find_file@extension,c
 26001  007934  0E00               	movlw	0
 26002  007936  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26003  007938  6E2F               	movwf	fat_find_file@extension+1,c
 26004  00793A  EC49  F034         	call	_fat_find_file	;wreg free
 26005  00793E  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 26006  007940  EE20 F003          	lfsr	2,3
 26007  007944  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 26008  007946  26D9               	addwf	fsr2l,f,c
 26009  007948  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26010  00794A  22DA               	addwfc	fsr2h,f,c
 26011  00794C  C03B  FFDF         	movff	??__fill_buffer_find_file,indf2
 26012                           
 26013                           ;api.c: 408: for(cntr=0; cntr<11; ++cntr)
 26014  007950  0E00               	movlw	0
 26015  007952  6E3F               	movwf	__fill_buffer_find_file@cntr,c
 26016  007954                     l15052:
 26017  007954  0E0A               	movlw	10
 26018  007956  643F               	cpfsgt	__fill_buffer_find_file@cntr,c
 26019  007958  D001               	goto	l2819
 26020  00795A  0012               	return	
 26021  00795C                     l2819:
 26022                           
 26023                           ;api.c: 409: {;api.c: 410: outBuffer[cntr+12] = inBuffer[cntr+1];
 26024  00795C  503F               	movf	__fill_buffer_find_file@cntr,w,c
 26025  00795E  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 26026  007960  6A3C               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 26027  007962  0E01               	movlw	1
 26028  007964  263B               	addwf	??__fill_buffer_find_file,f,c
 26029  007966  0E00               	movlw	0
 26030  007968  223C               	addwfc	??__fill_buffer_find_file+1,f,c
 26031  00796A  503B               	movf	??__fill_buffer_find_file,w,c
 26032  00796C  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26033  00796E  6ED9               	movwf	fsr2l,c
 26034  007970  503C               	movf	??__fill_buffer_find_file+1,w,c
 26035  007972  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26036  007974  6EDA               	movwf	fsr2h,c
 26037  007976  503F               	movf	__fill_buffer_find_file@cntr,w,c
 26038  007978  6E3D               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 26039  00797A  6A3E               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 26040  00797C  0E0C               	movlw	12
 26041  00797E  263D               	addwf	??__fill_buffer_find_file+2,f,c
 26042  007980  0E00               	movlw	0
 26043  007982  223E               	addwfc	??__fill_buffer_find_file+3,f,c
 26044  007984  503D               	movf	??__fill_buffer_find_file+2,w,c
 26045  007986  2439               	addwf	__fill_buffer_find_file@outBuffer,w,c
 26046  007988  6EE1               	movwf	fsr1l,c
 26047  00798A  503E               	movf	??__fill_buffer_find_file+3,w,c
 26048  00798C  203A               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 26049  00798E  6EE2               	movwf	fsr1h,c
 26050  007990  CFDF FFE7          	movff	indf2,indf1
 26051  007994  2A3F               	incf	__fill_buffer_find_file@cntr,f,c
 26052  007996  D7DE               	goto	l15052
 26053  007998                     __end_of__fill_buffer_find_file:
 26054                           	opt stack 0
 26055                           tosu	equ	0xFFF
 26056                           tosh	equ	0xFFE
 26057                           tosl	equ	0xFFD
 26058                           pclath	equ	0xFFA
 26059                           tblptru	equ	0xFF8
 26060                           tblptrh	equ	0xFF7
 26061                           tblptrl	equ	0xFF6
 26062                           tablat	equ	0xFF5
 26063                           prodh	equ	0xFF4
 26064                           prodl	equ	0xFF3
 26065                           intcon	equ	0xFF2
 26066                           intcon2	equ	0xFF1
 26067                           intcon3	equ	0xFF0
 26068                           indf0	equ	0xFEF
 26069                           postinc0	equ	0xFEE
 26070                           fsr0h	equ	0xFEA
 26071                           fsr0l	equ	0xFE9
 26072                           wreg	equ	0xFE8
 26073                           indf1	equ	0xFE7
 26074                           postdec1	equ	0xFE5
 26075                           plusw1	equ	0xFE3
 26076                           fsr1h	equ	0xFE2
 26077                           fsr1l	equ	0xFE1
 26078                           indf2	equ	0xFDF
 26079                           postinc2	equ	0xFDE
 26080                           postdec2	equ	0xFDD
 26081                           plusw2	equ	0xFDB
 26082                           fsr2h	equ	0xFDA
 26083                           fsr2l	equ	0xFD9
 26084                           status	equ	0xFD8
 26085                           
 26086 ;; *************** function _api_parse *****************
 26087 ;; Defined at:
 26088 ;;		line 146 in file "api.c"
 26089 ;; Parameters:    Size  Location     Type
 26090 ;;  inBuffer        2   68[BANK0 ] PTR unsigned char 
 26091 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 26092 ;;  receivedData    1   70[BANK0 ] unsigned char 
 26093 ;;  outBuffer       2   71[BANK0 ] PTR unsigned char 
 26094 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 26095 ;; Auto vars:     Size  Location     Type
 26096 ;;  out_idx_ptr     2   75[BANK0 ] PTR unsigned char 
 26097 ;;		 -> api_parse@out_idx(1), 
 26098 ;;  out_idx         1   78[BANK0 ] unsigned char 
 26099 ;;  in_idx          1   77[BANK0 ] unsigned char 
 26100 ;; Return value:  Size  Location     Type
 26101 ;;                  1    wreg      void 
 26102 ;; Registers used:
 26103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26104 ;; Tracked objects:
 26105 ;;		On entry : 0/0
 26106 ;;		On exit  : 0/0
 26107 ;;		Unchanged: 0/0
 26108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26109 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26110 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26111 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26112 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26113 ;;Total ram usage:       11 bytes
 26114 ;; Hardware stack levels used:    1
 26115 ;; Hardware stack levels required when called:   11
 26116 ;; This function calls:
 26117 ;;		__parse_command_long
 26118 ;;		__parse_command_short
 26119 ;; This function is called by:
 26120 ;;		_main
 26121 ;;		_APP_DeviceCustomHIDTasks
 26122 ;; This function uses a non-reentrant model
 26123 ;;
 26124                           
 26125                           	psect	text123
 26126  005202                     __ptext123:
 26127                           	opt stack 0
 26128  005202                     _api_parse:
 26129                           	opt stack 19
 26130                           
 26131                           ;api.c: 150: uint8_t in_idx;;api.c: 151: uint8_t out_idx;;api.c: 152: uint8_t *out_idx_p
      +                          tr;;api.c: 154: out_idx = 0;
 26132                           
 26133                           ;incstack = 0
 26134  005202  0E00               	movlw	0
 26135  005204  0100               	movlb	0	; () banked
 26136  005206  6FAE               	movwf	api_parse@out_idx& (0+255),b
 26137                           
 26138                           ; BSR set to: 0
 26139                           ;api.c: 155: out_idx_ptr = &out_idx;
 26140  005208  0EAE               	movlw	low api_parse@out_idx
 26141  00520A  6FAB               	movwf	api_parse@out_idx_ptr& (0+255),b
 26142  00520C  0E00               	movlw	high api_parse@out_idx
 26143  00520E  6FAC               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 26144                           
 26145                           ; BSR set to: 0
 26146                           ;api.c: 157: if(inBuffer[0]>0x7F)
 26147  005210  C0A4  FFD9         	movff	api_parse@inBuffer,fsr2l
 26148  005214  C0A5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26149  005218  0E7F               	movlw	127
 26150  00521A  64DF               	cpfsgt	indf2,c
 26151  00521C  D001               	goto	l2775
 26152  00521E  0012               	return	
 26153  005220                     l2775:
 26154                           
 26155                           ; BSR set to: 0
 26156                           ;api.c: 162: };api.c: 164: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 26157                           
 26158                           ; BSR set to: 0
 26159  005220  C0A4  FFD9         	movff	api_parse@inBuffer,fsr2l
 26160  005224  C0A5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26161  005228  0E20               	movlw	32
 26162  00522A  18DE               	xorwf	postinc2,w,c
 26163  00522C  B4D8               	btfsc	status,2,c
 26164  00522E  0012               	return	
 26165                           
 26166                           ; BSR set to: 0
 26167                           ;api.c: 169: };api.c: 171: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 26168                           
 26169                           ; BSR set to: 0
 26170                           
 26171                           ; BSR set to: 0
 26172                           ;api.c: 165: {;api.c: 168: return;
 26173  005230  C0A4  FFD9         	movff	api_parse@inBuffer,fsr2l
 26174  005234  C0A5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26175  005238  50DF               	movf	indf2,w,c
 26176  00523A  A4D8               	btfss	status,2,c
 26177  00523C  D018               	goto	l2778
 26178                           
 26179                           ; BSR set to: 0
 26180                           ;api.c: 172: {;api.c: 174: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 26181  00523E  C0A7  FFD9         	movff	api_parse@outBuffer,fsr2l
 26182  005242  C0A8  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 26183  005246  0E00               	movlw	0
 26184  005248  6EDF               	movwf	indf2,c
 26185                           
 26186                           ; BSR set to: 0
 26187                           ;api.c: 177: outBuffer[1] = 0xC125 >> 8;
 26188  00524A  EE20 F001          	lfsr	2,1
 26189  00524E  51A7               	movf	api_parse@outBuffer& (0+255),w,b
 26190  005250  26D9               	addwf	fsr2l,f,c
 26191  005252  51A8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 26192  005254  22DA               	addwfc	fsr2h,f,c
 26193  005256  0EC1               	movlw	193
 26194  005258  6EDF               	movwf	indf2,c
 26195                           
 26196                           ; BSR set to: 0
 26197                           ;api.c: 178: outBuffer[2] = (uint8_t) 0xC125;
 26198  00525A  EE20 F002          	lfsr	2,2
 26199  00525E  51A7               	movf	api_parse@outBuffer& (0+255),w,b
 26200  005260  26D9               	addwf	fsr2l,f,c
 26201  005262  51A8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 26202  005264  22DA               	addwfc	fsr2h,f,c
 26203  005266  0E25               	movlw	37
 26204  005268  6EDF               	movwf	indf2,c
 26205                           
 26206                           ; BSR set to: 0
 26207                           ;api.c: 181: out_idx = 3;
 26208  00526A  0E03               	movlw	3
 26209  00526C  6FAE               	movwf	api_parse@out_idx& (0+255),b
 26210  00526E                     l2778:
 26211                           
 26212                           ; BSR set to: 0
 26213                           ;api.c: 182: };api.c: 184: in_idx = 1;
 26214                           
 26215                           ; BSR set to: 0
 26216  00526E  0E01               	movlw	1
 26217  005270  6FAD               	movwf	api_parse@in_idx& (0+255),b
 26218                           
 26219                           ;api.c: 185: while(in_idx<receivedDataLength)
 26220  005272  D057               	goto	l2784
 26221  005274                     
 26222                           ; BSR set to: 0
 26223                           ;api.c: 186: {;api.c: 188: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 26224                           
 26225                           ; BSR set to: 0
 26226  005274  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26227  005276  0D01               	mullw	1
 26228  005278  50F3               	movf	prodl,w,c
 26229  00527A  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26230  00527C  6ED9               	movwf	fsr2l,c
 26231  00527E  50F4               	movf	prodh,w,c
 26232  005280  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26233  005282  6EDA               	movwf	fsr2h,c
 26234  005284  0E99               	movlw	153
 26235  005286  18DE               	xorwf	postinc2,w,c
 26236  005288  B4D8               	btfsc	status,2,c
 26237  00528A  0012               	return	
 26238  00528C  D02F               	goto	l2782
 26239  00528E                     
 26240                           ; BSR set to: 0
 26241                           ;api.c: 196: _parse_command_short(inBuffer[in_idx]);
 26242                           
 26243                           ; BSR set to: 0
 26244  00528E  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26245  005290  0D01               	mullw	1
 26246  005292  50F3               	movf	prodl,w,c
 26247  005294  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26248  005296  6ED9               	movwf	fsr2l,c
 26249  005298  50F4               	movf	prodh,w,c
 26250  00529A  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26251  00529C  6EDA               	movwf	fsr2h,c
 26252  00529E  50DF               	movf	indf2,w,c
 26253  0052A0  EC30  F037         	call	__parse_command_short
 26254  0052A4  D00B               	goto	l15670
 26255  0052A6                     
 26256                           ; BSR set to: 0
 26257                           ;api.c: 201: _parse_command_short(inBuffer[in_idx]);
 26258                           
 26259                           ; BSR set to: 0
 26260  0052A6  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26261  0052A8  0D01               	mullw	1
 26262  0052AA  50F3               	movf	prodl,w,c
 26263  0052AC  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26264  0052AE  6ED9               	movwf	fsr2l,c
 26265  0052B0  50F4               	movf	prodh,w,c
 26266  0052B2  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26267  0052B4  6EDA               	movwf	fsr2h,c
 26268  0052B6  50DF               	movf	indf2,w,c
 26269  0052B8  EC30  F037         	call	__parse_command_short
 26270  0052BC                     l15670:
 26271                           
 26272                           ;api.c: 202: ++in_idx;
 26273  0052BC  0100               	movlb	0	; () banked
 26274  0052BE  2BAD               	incf	api_parse@in_idx& (0+255),f,b
 26275                           
 26276                           ;api.c: 203: break;
 26277  0052C0  D030               	goto	l2784
 26278  0052C2                     
 26279                           ; BSR set to: 0
 26280                           ;api.c: 206: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 26281                           
 26282                           ; BSR set to: 0
 26283  0052C2  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26284  0052C4  0D01               	mullw	1
 26285  0052C6  50F3               	movf	prodl,w,c
 26286  0052C8  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26287  0052CA  6F9D               	movwf	__parse_command_long@data& (0+255),b
 26288  0052CC  50F4               	movf	prodh,w,c
 26289  0052CE  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26290  0052D0  6F9E               	movwf	(__parse_command_long@data+1)& (0+255),b
 26291  0052D2  C0A7  F09F         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 26292  0052D6  C0A8  F0A0         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 26293  0052DA  C0AB  F0A1         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 26294  0052DE  C0AC  F0A2         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 26295  0052E2  EC76  F01C         	call	__parse_command_long	;wreg free
 26296  0052E6  0100               	movlb	0	; () banked
 26297  0052E8  27AD               	addwf	api_parse@in_idx& (0+255),f,b
 26298                           
 26299                           ;api.c: 207: break;
 26300  0052EA  D01B               	goto	l2784
 26301  0052EC                     l2782:
 26302                           
 26303                           ; BSR set to: 0
 26304                           
 26305                           ; BSR set to: 0
 26306  0052EC  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26307  0052EE  0D01               	mullw	1
 26308  0052F0  50F3               	movf	prodl,w,c
 26309  0052F2  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26310  0052F4  6ED9               	movwf	fsr2l,c
 26311  0052F6  50F4               	movf	prodh,w,c
 26312  0052F8  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26313  0052FA  6EDA               	movwf	fsr2h,c
 26314  0052FC  50DF               	movf	indf2,w,c
 26315  0052FE  0BF0               	andlw	240
 26316  005300  6FA9               	movwf	??_api_parse& (0+255),b
 26317  005302  6BAA               	clrf	(??_api_parse+1)& (0+255),b
 26318                           
 26319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26320                           ; Switch size 1, requested type "space"
 26321                           ; Number of cases is 1, Range of values is 0 to 0
 26322                           ; switch strategies available:
 26323                           ; Name         Instructions Cycles
 26324                           ; simple_byte            4     3 (average)
 26325                           ;	Chosen strategy is simple_byte
 26326  005304  51AA               	movf	(??_api_parse+1)& (0+255),w,b
 26327  005306  0A00               	xorlw	0	; case 0
 26328  005308  A4D8               	btfss	status,2,c
 26329  00530A  0012               	return	
 26330                           
 26331                           ; BSR set to: 0
 26332                           ; Switch size 1, requested type "space"
 26333                           ; Number of cases is 3, Range of values is 32 to 80
 26334                           ; switch strategies available:
 26335                           ; Name         Instructions Cycles
 26336                           ; simple_byte           10     6 (average)
 26337                           ;	Chosen strategy is simple_byte
 26338  00530C  51A9               	movf	??_api_parse& (0+255),w,b
 26339  00530E  0A20               	xorlw	32	; case 32
 26340  005310  B4D8               	btfsc	status,2,c
 26341  005312  D7BD               	goto	l2783
 26342  005314  0A10               	xorlw	16	; case 48
 26343  005316  B4D8               	btfsc	status,2,c
 26344  005318  D7C6               	goto	l2785
 26345  00531A  0A60               	xorlw	96	; case 80
 26346  00531C  A4D8               	btfss	status,2,c
 26347  00531E  0012               	return	
 26348  005320  D7D0               	goto	l2786
 26349  005322                     l2784:
 26350                           
 26351                           ; BSR set to: 0
 26352                           
 26353                           ; BSR set to: 0
 26354                           
 26355                           ; BSR set to: 0
 26356  005322  51A6               	movf	api_parse@receivedDataLength& (0+255),w,b
 26357  005324  5DAD               	subwf	api_parse@in_idx& (0+255),w,b
 26358  005326  B0D8               	btfsc	status,0,c
 26359  005328  0012               	return	
 26360  00532A  D7A4               	goto	l2780
 26361  00532C                     __end_of_api_parse:
 26362                           	opt stack 0
 26363                           tosu	equ	0xFFF
 26364                           tosh	equ	0xFFE
 26365                           tosl	equ	0xFFD
 26366                           pclath	equ	0xFFA
 26367                           tblptru	equ	0xFF8
 26368                           tblptrh	equ	0xFF7
 26369                           tblptrl	equ	0xFF6
 26370                           tablat	equ	0xFF5
 26371                           prodh	equ	0xFF4
 26372                           prodl	equ	0xFF3
 26373                           intcon	equ	0xFF2
 26374                           intcon2	equ	0xFF1
 26375                           intcon3	equ	0xFF0
 26376                           indf0	equ	0xFEF
 26377                           postinc0	equ	0xFEE
 26378                           fsr0h	equ	0xFEA
 26379                           fsr0l	equ	0xFE9
 26380                           wreg	equ	0xFE8
 26381                           indf1	equ	0xFE7
 26382                           postdec1	equ	0xFE5
 26383                           plusw1	equ	0xFE3
 26384                           fsr1h	equ	0xFE2
 26385                           fsr1l	equ	0xFE1
 26386                           indf2	equ	0xFDF
 26387                           postinc2	equ	0xFDE
 26388                           postdec2	equ	0xFDD
 26389                           plusw2	equ	0xFDB
 26390                           fsr2h	equ	0xFDA
 26391                           fsr2l	equ	0xFD9
 26392                           status	equ	0xFD8
 26393                           
 26394 ;; *************** function __parse_command_short *****************
 26395 ;; Defined at:
 26396 ;;		line 498 in file "api.c"
 26397 ;; Parameters:    Size  Location     Type
 26398 ;;  cmd             1    wreg     unsigned char 
 26399 ;; Auto vars:     Size  Location     Type
 26400 ;;  cmd             1   43[COMRAM] unsigned char 
 26401 ;; Return value:  Size  Location     Type
 26402 ;;                  1    wreg      void 
 26403 ;; Registers used:
 26404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26405 ;; Tracked objects:
 26406 ;;		On entry : 0/0
 26407 ;;		On exit  : 0/0
 26408 ;;		Unchanged: 0/0
 26409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26414 ;;Total ram usage:        1 bytes
 26415 ;; Hardware stack levels used:    1
 26416 ;; Hardware stack levels required when called:    8
 26417 ;; This function calls:
 26418 ;;		_i2c_eeprom_writeByte
 26419 ;;		_reboot
 26420 ;;		_system_delay_ms
 26421 ;; This function is called by:
 26422 ;;		_api_parse
 26423 ;; This function uses a non-reentrant model
 26424 ;;
 26425                           
 26426                           	psect	text124
 26427  006E60                     __ptext124:
 26428                           	opt stack 0
 26429  006E60                     __parse_command_short:
 26430                           	opt stack 21
 26431                           
 26432                           ; BSR set to: 0
 26433                           ;incstack = 0
 26434                           ;__parse_command_short@cmd stored from wreg
 26435  006E60  6E2C               	movwf	__parse_command_short@cmd,c
 26436                           
 26437                           ;api.c: 500: switch(cmd)
 26438  006E62  D047               	goto	l2832
 26439  006E64                     
 26440                           ;api.c: 503: i2c_eeprom_writeByte(0x100, 0x00);
 26441  006E64  0E01               	movlw	1
 26442  006E66  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26443  006E68  0E00               	movlw	0
 26444  006E6A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26445  006E6C  0E00               	movlw	0
 26446  006E6E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26447  006E70  EC9B  F049         	call	_i2c_eeprom_writeByte	;wreg free
 26448                           
 26449                           ;api.c: 504: system_delay_ms(10);
 26450  006E74  0E0A               	movlw	10
 26451  006E76  EC99  F04C         	call	_system_delay_ms
 26452                           
 26453                           ;api.c: 505: reboot();
 26454  006E7A  EC85  F04D         	call	_reboot	;wreg free
 26455                           
 26456                           ;api.c: 506: break;
 26457  006E7E  0012               	return	
 26458  006E80                     
 26459                           ;api.c: 509: i2c_eeprom_writeByte(0x100, 0x94);
 26460  006E80  0E01               	movlw	1
 26461  006E82  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26462  006E84  0E00               	movlw	0
 26463  006E86  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26464  006E88  0E94               	movlw	148
 26465  006E8A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26466  006E8C  EC9B  F049         	call	_i2c_eeprom_writeByte	;wreg free
 26467                           
 26468                           ;api.c: 510: system_delay_ms(10);
 26469  006E90  0E0A               	movlw	10
 26470  006E92  EC99  F04C         	call	_system_delay_ms
 26471                           
 26472                           ;api.c: 511: reboot();
 26473  006E96  EC85  F04D         	call	_reboot	;wreg free
 26474                           
 26475                           ;api.c: 512: break;
 26476  006E9A  0012               	return	
 26477  006E9C                     
 26478                           ;api.c: 515: i2c_eeprom_writeByte(0x100, 0x78);
 26479  006E9C  0E01               	movlw	1
 26480  006E9E  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26481  006EA0  0E00               	movlw	0
 26482  006EA2  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26483  006EA4  0E78               	movlw	120
 26484  006EA6  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26485  006EA8  EC9B  F049         	call	_i2c_eeprom_writeByte	;wreg free
 26486                           
 26487                           ;api.c: 516: system_delay_ms(10);
 26488  006EAC  0E0A               	movlw	10
 26489  006EAE  EC99  F04C         	call	_system_delay_ms
 26490                           
 26491                           ;api.c: 517: reboot();
 26492  006EB2  EC85  F04D         	call	_reboot	;wreg free
 26493                           
 26494                           ;api.c: 518: break;
 26495  006EB6  0012               	return	
 26496  006EB8                     
 26497                           ;api.c: 522: i2c_eeprom_writeByte(0x100, 0x78);
 26498  006EB8  0E01               	movlw	1
 26499  006EBA  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26500  006EBC  0E00               	movlw	0
 26501  006EBE  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26502  006EC0  0E78               	movlw	120
 26503  006EC2  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26504  006EC4  EC9B  F049         	call	_i2c_eeprom_writeByte	;wreg free
 26505                           
 26506                           ;api.c: 523: system_delay_ms(10);
 26507  006EC8  0E0A               	movlw	10
 26508  006ECA  EC99  F04C         	call	_system_delay_ms
 26509                           
 26510                           ;api.c: 524: reboot();
 26511  006ECE  EC85  F04D         	call	_reboot	;wreg free
 26512                           
 26513                           ;api.c: 525: break;
 26514  006ED2  0012               	return	
 26515  006ED4                     
 26516                           ;api.c: 528: os.bootloader_mode = BOOTLOADER_MODE_SUSPENDED;
 26517  006ED4  0E90               	movlw	144
 26518  006ED6  0100               	movlb	0	; () banked
 26519  006ED8  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
 26520                           
 26521                           ;api.c: 529: os.display_mode = DISPLAY_MODE_BOOTLOADER_SUSPENDED;
 26522  006EDA  0E90               	movlw	144
 26523  006EDC  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 26524                           
 26525                           ;api.c: 530: break;
 26526  006EDE  0012               	return	
 26527  006EE0                     
 26528                           ;api.c: 533: --os.encoderCount;
 26529                           
 26530                           ; BSR set to: 0
 26531  006EE0  0100               	movlb	0	; () banked
 26532  006EE2  07C5               	decf	_os& (0+255),f,b	;volatile
 26533                           
 26534                           ;api.c: 534: break;
 26535  006EE4  0012               	return	
 26536  006EE6                     
 26537                           ;api.c: 537: ++os.encoderCount;
 26538                           
 26539                           ; BSR set to: 0
 26540  006EE6  0100               	movlb	0	; () banked
 26541  006EE8  2BC5               	incf	_os& (0+255),f,b	;volatile
 26542                           
 26543                           ;api.c: 538: break;
 26544  006EEA  0012               	return	
 26545  006EEC                     
 26546                           ;api.c: 541: ++os.buttonCount;
 26547                           
 26548                           ; BSR set to: 0
 26549  006EEC  0100               	movlb	0	; () banked
 26550  006EEE  2BC6               	incf	(_os+1)& (0+255),f,b	;volatile
 26551                           
 26552                           ; BSR set to: 0
 26553                           ;api.c: 543: }
 26554                           
 26555                           ;api.c: 542: break;
 26556  006EF0  0012               	return	
 26557  006EF2                     l2832:
 26558                           
 26559                           ; BSR set to: 0
 26560  006EF2  502C               	movf	__parse_command_short@cmd,w,c
 26561                           
 26562                           ; Switch size 1, requested type "space"
 26563                           ; Number of cases is 8, Range of values is 32 to 62
 26564                           ; switch strategies available:
 26565                           ; Name         Instructions Cycles
 26566                           ; simple_byte           25    13 (average)
 26567                           ;	Chosen strategy is simple_byte
 26568  006EF4  0A20               	xorlw	32	; case 32
 26569  006EF6  B4D8               	btfsc	status,2,c
 26570  006EF8  D7B5               	goto	l2833
 26571  006EFA  0A01               	xorlw	1	; case 33
 26572  006EFC  B4D8               	btfsc	status,2,c
 26573  006EFE  D7C0               	goto	l2835
 26574  006F00  0A03               	xorlw	3	; case 34
 26575  006F02  B4D8               	btfsc	status,2,c
 26576  006F04  D7CB               	goto	l2836
 26577  006F06  0A01               	xorlw	1	; case 35
 26578  006F08  B4D8               	btfsc	status,2,c
 26579  006F0A  D7D6               	goto	l2837
 26580  006F0C  0A07               	xorlw	7	; case 36
 26581  006F0E  B4D8               	btfsc	status,2,c
 26582  006F10  D7E1               	goto	l2838
 26583  006F12  0A18               	xorlw	24	; case 60
 26584  006F14  B4D8               	btfsc	status,2,c
 26585  006F16  D7E4               	goto	l2839
 26586  006F18  0A01               	xorlw	1	; case 61
 26587  006F1A  B4D8               	btfsc	status,2,c
 26588  006F1C  D7E4               	goto	l2840
 26589  006F1E  0A03               	xorlw	3	; case 62
 26590  006F20  A4D8               	btfss	status,2,c
 26591  006F22  0012               	return	
 26592  006F24  D7E3               	goto	l2841
 26593  006F26                     __end_of__parse_command_short:
 26594                           	opt stack 0
 26595                           tosu	equ	0xFFF
 26596                           tosh	equ	0xFFE
 26597                           tosl	equ	0xFFD
 26598                           pclath	equ	0xFFA
 26599                           tblptru	equ	0xFF8
 26600                           tblptrh	equ	0xFF7
 26601                           tblptrl	equ	0xFF6
 26602                           tablat	equ	0xFF5
 26603                           prodh	equ	0xFF4
 26604                           prodl	equ	0xFF3
 26605                           intcon	equ	0xFF2
 26606                           intcon2	equ	0xFF1
 26607                           intcon3	equ	0xFF0
 26608                           indf0	equ	0xFEF
 26609                           postinc0	equ	0xFEE
 26610                           fsr0h	equ	0xFEA
 26611                           fsr0l	equ	0xFE9
 26612                           wreg	equ	0xFE8
 26613                           indf1	equ	0xFE7
 26614                           postdec1	equ	0xFE5
 26615                           plusw1	equ	0xFE3
 26616                           fsr1h	equ	0xFE2
 26617                           fsr1l	equ	0xFE1
 26618                           indf2	equ	0xFDF
 26619                           postinc2	equ	0xFDE
 26620                           postdec2	equ	0xFDD
 26621                           plusw2	equ	0xFDB
 26622                           fsr2h	equ	0xFDA
 26623                           fsr2l	equ	0xFD9
 26624                           status	equ	0xFD8
 26625                           
 26626 ;; *************** function _system_delay_ms *****************
 26627 ;; Defined at:
 26628 ;;		line 63 in file "os.c"
 26629 ;; Parameters:    Size  Location     Type
 26630 ;;  ms              1    wreg     unsigned char 
 26631 ;; Auto vars:     Size  Location     Type
 26632 ;;  ms              1    1[COMRAM] unsigned char 
 26633 ;;  cntr            1    2[COMRAM] unsigned char 
 26634 ;; Return value:  Size  Location     Type
 26635 ;;                  1    wreg      void 
 26636 ;; Registers used:
 26637 ;;		wreg, status,2, status,0, cstack
 26638 ;; Tracked objects:
 26639 ;;		On entry : 0/0
 26640 ;;		On exit  : 0/0
 26641 ;;		Unchanged: 0/0
 26642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26646 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26647 ;;Total ram usage:        3 bytes
 26648 ;; Hardware stack levels used:    1
 26649 ;; This function calls:
 26650 ;;		Nothing
 26651 ;; This function is called by:
 26652 ;;		_system_minimal_init
 26653 ;;		__ui_encoder
 26654 ;;		__parse_command_short
 26655 ;; This function uses a non-reentrant model
 26656 ;;
 26657                           
 26658                           	psect	text125
 26659  009932                     __ptext125:
 26660                           	opt stack 0
 26661  009932                     _system_delay_ms:
 26662                           	opt stack 28
 26663                           
 26664                           ;incstack = 0
 26665                           ;system_delay_ms@ms stored from wreg
 26666  009932  6E02               	movwf	system_delay_ms@ms,c
 26667                           
 26668                           ;os.c: 65: uint8_t cntr;;os.c: 66: for(cntr=0; cntr<ms; ++cntr)
 26669  009934  0E00               	movlw	0
 26670  009936  6E03               	movwf	system_delay_ms@cntr,c
 26671  009938  D009               	goto	l1090
 26672  00993A                     
 26673                           ;os.c: 67: {;os.c: 68: _delay((unsigned long)((6)*(8000000/4000.0)));
 26674  00993A  0E10               	movlw	16
 26675  00993C  6E01               	movwf	??_system_delay_ms& (0+255),c
 26676  00993E  0E94               	movlw	148
 26677  009940                     u14087:
 26678  009940  2EE8               	decfsz	wreg,f,c
 26679  009942  D7FE               	bra	u14087
 26680  009944  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 26681  009946  D7FC               	bra	u14087
 26682  009948  D000               	nop2	
 26683  00994A  2A03               	incf	system_delay_ms@cntr,f,c
 26684  00994C                     l1090:
 26685  00994C  5002               	movf	system_delay_ms@ms,w,c
 26686  00994E  5C03               	subwf	system_delay_ms@cntr,w,c
 26687  009950  B0D8               	btfsc	status,0,c
 26688  009952  0012               	return	
 26689  009954  D7F2               	goto	l1091
 26690  009956                     __end_of_system_delay_ms:
 26691                           	opt stack 0
 26692                           tosu	equ	0xFFF
 26693                           tosh	equ	0xFFE
 26694                           tosl	equ	0xFFD
 26695                           pclath	equ	0xFFA
 26696                           tblptru	equ	0xFF8
 26697                           tblptrh	equ	0xFF7
 26698                           tblptrl	equ	0xFF6
 26699                           tablat	equ	0xFF5
 26700                           prodh	equ	0xFF4
 26701                           prodl	equ	0xFF3
 26702                           intcon	equ	0xFF2
 26703                           intcon2	equ	0xFF1
 26704                           intcon3	equ	0xFF0
 26705                           indf0	equ	0xFEF
 26706                           postinc0	equ	0xFEE
 26707                           fsr0h	equ	0xFEA
 26708                           fsr0l	equ	0xFE9
 26709                           wreg	equ	0xFE8
 26710                           indf1	equ	0xFE7
 26711                           postdec1	equ	0xFE5
 26712                           plusw1	equ	0xFE3
 26713                           fsr1h	equ	0xFE2
 26714                           fsr1l	equ	0xFE1
 26715                           indf2	equ	0xFDF
 26716                           postinc2	equ	0xFDE
 26717                           postdec2	equ	0xFDD
 26718                           plusw2	equ	0xFDB
 26719                           fsr2h	equ	0xFDA
 26720                           fsr2l	equ	0xFD9
 26721                           status	equ	0xFD8
 26722                           
 26723 ;; *************** function _reboot *****************
 26724 ;; Defined at:
 26725 ;;		line 259 in file "os.c"
 26726 ;; Parameters:    Size  Location     Type
 26727 ;;		None
 26728 ;; Auto vars:     Size  Location     Type
 26729 ;;		None
 26730 ;; Return value:  Size  Location     Type
 26731 ;;                  1    wreg      void 
 26732 ;; Registers used:
 26733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26734 ;; Tracked objects:
 26735 ;;		On entry : 0/0
 26736 ;;		On exit  : 0/0
 26737 ;;		Unchanged: 0/0
 26738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26743 ;;Total ram usage:        0 bytes
 26744 ;; Hardware stack levels used:    1
 26745 ;; Hardware stack levels required when called:    7
 26746 ;; This function calls:
 26747 ;;		_display_prepare
 26748 ;;		_display_update
 26749 ;;		_ui_get_status
 26750 ;; This function is called by:
 26751 ;;		__ui_encoder
 26752 ;;		__parse_command_short
 26753 ;; This function uses a non-reentrant model
 26754 ;;
 26755                           
 26756                           	psect	text126
 26757  009B0A                     __ptext126:
 26758                           	opt stack 0
 26759  009B0A                     _reboot:
 26760                           	opt stack 21
 26761                           
 26762                           ;os.c: 262: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 26763                           
 26764                           ;incstack = 0
 26765  009B0A  0E80               	movlw	128
 26766  009B0C  0100               	movlb	0	; () banked
 26767  009B0E  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 26768                           
 26769                           ; BSR set to: 0
 26770                           ;os.c: 263: display_prepare(os.display_mode);
 26771  009B10  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
 26772  009B12  ECB9  F034         	call	_display_prepare
 26773                           
 26774                           ;os.c: 264: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 26775  009B16  EC8F  F04E         	call	_ui_get_status	;wreg free
 26776  009B1A  0A05               	xorlw	5
 26777  009B1C  B4D8               	btfsc	status,2,c
 26778                           
 26779                           ;os.c: 265: {;os.c: 266: display_update();
 26780  009B1E  EC20  F043         	call	_display_update	;wreg free
 26781  009B22                     
 26782                           ;os.c: 267: };os.c: 270: while(1);
 26783  009B22  D7FF               	goto	l1117
 26784  009B24                     __end_of_reboot:
 26785                           	opt stack 0
 26786                           tosu	equ	0xFFF
 26787                           tosh	equ	0xFFE
 26788                           tosl	equ	0xFFD
 26789                           pclath	equ	0xFFA
 26790                           tblptru	equ	0xFF8
 26791                           tblptrh	equ	0xFF7
 26792                           tblptrl	equ	0xFF6
 26793                           tablat	equ	0xFF5
 26794                           prodh	equ	0xFF4
 26795                           prodl	equ	0xFF3
 26796                           intcon	equ	0xFF2
 26797                           intcon2	equ	0xFF1
 26798                           intcon3	equ	0xFF0
 26799                           indf0	equ	0xFEF
 26800                           postinc0	equ	0xFEE
 26801                           fsr0h	equ	0xFEA
 26802                           fsr0l	equ	0xFE9
 26803                           wreg	equ	0xFE8
 26804                           indf1	equ	0xFE7
 26805                           postdec1	equ	0xFE5
 26806                           plusw1	equ	0xFE3
 26807                           fsr1h	equ	0xFE2
 26808                           fsr1l	equ	0xFE1
 26809                           indf2	equ	0xFDF
 26810                           postinc2	equ	0xFDE
 26811                           postdec2	equ	0xFDD
 26812                           plusw2	equ	0xFDB
 26813                           fsr2h	equ	0xFDA
 26814                           fsr2l	equ	0xFD9
 26815                           status	equ	0xFD8
 26816                           
 26817 ;; *************** function _ui_get_status *****************
 26818 ;; Defined at:
 26819 ;;		line 104 in file "ui.c"
 26820 ;; Parameters:    Size  Location     Type
 26821 ;;		None
 26822 ;; Auto vars:     Size  Location     Type
 26823 ;;		None
 26824 ;; Return value:  Size  Location     Type
 26825 ;;                  1    wreg      enum E7930
 26826 ;; Registers used:
 26827 ;;		wreg, status,2
 26828 ;; Tracked objects:
 26829 ;;		On entry : 0/0
 26830 ;;		On exit  : 0/0
 26831 ;;		Unchanged: 0/0
 26832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26837 ;;Total ram usage:        0 bytes
 26838 ;; Hardware stack levels used:    1
 26839 ;; This function calls:
 26840 ;;		Nothing
 26841 ;; This function is called by:
 26842 ;;		_main
 26843 ;;		_reboot
 26844 ;;		__fill_buffer_get_status
 26845 ;; This function uses a non-reentrant model
 26846 ;;
 26847                           
 26848                           	psect	text127
 26849  009D1E                     __ptext127:
 26850                           	opt stack 0
 26851  009D1E                     _ui_get_status:
 26852                           	opt stack 27
 26853                           
 26854                           ;ui.c: 106: return userInterfaceStatus;
 26855                           
 26856                           ;incstack = 0
 26857  009D1E  0100               	movlb	0	; () banked
 26858  009D20  51E6               	movf	_userInterfaceStatus& (0+255),w,b
 26859  009D22  0012               	return	
 26860  009D24                     __end_of_ui_get_status:
 26861                           	opt stack 0
 26862                           tosu	equ	0xFFF
 26863                           tosh	equ	0xFFE
 26864                           tosl	equ	0xFFD
 26865                           pclath	equ	0xFFA
 26866                           tblptru	equ	0xFF8
 26867                           tblptrh	equ	0xFF7
 26868                           tblptrl	equ	0xFF6
 26869                           tablat	equ	0xFF5
 26870                           prodh	equ	0xFF4
 26871                           prodl	equ	0xFF3
 26872                           intcon	equ	0xFF2
 26873                           intcon2	equ	0xFF1
 26874                           intcon3	equ	0xFF0
 26875                           indf0	equ	0xFEF
 26876                           postinc0	equ	0xFEE
 26877                           fsr0h	equ	0xFEA
 26878                           fsr0l	equ	0xFE9
 26879                           wreg	equ	0xFE8
 26880                           indf1	equ	0xFE7
 26881                           postdec1	equ	0xFE5
 26882                           plusw1	equ	0xFE3
 26883                           fsr1h	equ	0xFE2
 26884                           fsr1l	equ	0xFE1
 26885                           indf2	equ	0xFDF
 26886                           postinc2	equ	0xFDE
 26887                           postdec2	equ	0xFDD
 26888                           plusw2	equ	0xFDB
 26889                           fsr2h	equ	0xFDA
 26890                           fsr2l	equ	0xFD9
 26891                           status	equ	0xFD8
 26892                           
 26893 ;; *************** function _display_update *****************
 26894 ;; Defined at:
 26895 ;;		line 587 in file "display.c"
 26896 ;; Parameters:    Size  Location     Type
 26897 ;;		None
 26898 ;; Auto vars:     Size  Location     Type
 26899 ;;		None
 26900 ;; Return value:  Size  Location     Type
 26901 ;;                  1    wreg      void 
 26902 ;; Registers used:
 26903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26904 ;; Tracked objects:
 26905 ;;		On entry : 0/0
 26906 ;;		On exit  : 0/0
 26907 ;;		Unchanged: 0/0
 26908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26913 ;;Total ram usage:        0 bytes
 26914 ;; Hardware stack levels used:    1
 26915 ;; Hardware stack levels required when called:    4
 26916 ;; This function calls:
 26917 ;;		_i2c_display_cursor
 26918 ;;		_i2c_display_write_fixed
 26919 ;; This function is called by:
 26920 ;;		_main
 26921 ;;		_reboot
 26922 ;; This function uses a non-reentrant model
 26923 ;;
 26924                           
 26925                           	psect	text128
 26926  008640                     __ptext128:
 26927                           	opt stack 0
 26928  008640                     _display_update:
 26929                           	opt stack 23
 26930                           
 26931                           ;display.c: 589: i2c_display_cursor(0, 0);
 26932                           
 26933                           ; BSR set to: 0
 26934                           ;incstack = 0
 26935  008640  0E00               	movlw	0
 26936  008642  6E0E               	movwf	i2c_display_cursor@position,c
 26937  008644  0E00               	movlw	0
 26938  008646  ECAB  F04C         	call	_i2c_display_cursor
 26939                           
 26940                           ;display.c: 590: i2c_display_write_fixed(&display_content[0][0], 20);
 26941  00864A  0E00               	movlw	low _display_content
 26942  00864C  6E06               	movwf	i2c_display_write_fixed@data,c
 26943  00864E  0E02               	movlw	high _display_content
 26944  008650  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26945  008652  0E14               	movlw	20
 26946  008654  6E08               	movwf	i2c_display_write_fixed@length,c
 26947  008656  EC4A  F046         	call	_i2c_display_write_fixed	;wreg free
 26948                           
 26949                           ;display.c: 591: i2c_display_cursor(1, 0);
 26950  00865A  0E00               	movlw	0
 26951  00865C  6E0E               	movwf	i2c_display_cursor@position,c
 26952  00865E  0E01               	movlw	1
 26953  008660  ECAB  F04C         	call	_i2c_display_cursor
 26954                           
 26955                           ;display.c: 592: i2c_display_write_fixed(&display_content[1][0], 20);
 26956  008664  0E14               	movlw	low (_display_content+20)
 26957  008666  6E06               	movwf	i2c_display_write_fixed@data,c
 26958  008668  0E02               	movlw	high (_display_content+20)
 26959  00866A  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26960  00866C  0E14               	movlw	20
 26961  00866E  6E08               	movwf	i2c_display_write_fixed@length,c
 26962  008670  EC4A  F046         	call	_i2c_display_write_fixed	;wreg free
 26963                           
 26964                           ;display.c: 593: i2c_display_cursor(2, 0);
 26965  008674  0E00               	movlw	0
 26966  008676  6E0E               	movwf	i2c_display_cursor@position,c
 26967  008678  0E02               	movlw	2
 26968  00867A  ECAB  F04C         	call	_i2c_display_cursor
 26969                           
 26970                           ;display.c: 594: i2c_display_write_fixed(&display_content[2][0], 20);
 26971  00867E  0E28               	movlw	low (_display_content+40)
 26972  008680  6E06               	movwf	i2c_display_write_fixed@data,c
 26973  008682  0E02               	movlw	high (_display_content+40)
 26974  008684  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26975  008686  0E14               	movlw	20
 26976  008688  6E08               	movwf	i2c_display_write_fixed@length,c
 26977  00868A  EC4A  F046         	call	_i2c_display_write_fixed	;wreg free
 26978                           
 26979                           ;display.c: 595: i2c_display_cursor(3, 0);
 26980  00868E  0E00               	movlw	0
 26981  008690  6E0E               	movwf	i2c_display_cursor@position,c
 26982  008692  0E03               	movlw	3
 26983  008694  ECAB  F04C         	call	_i2c_display_cursor
 26984                           
 26985                           ;display.c: 596: i2c_display_write_fixed(&display_content[3][0], 20);
 26986  008698  0E3C               	movlw	low (_display_content+60)
 26987  00869A  6E06               	movwf	i2c_display_write_fixed@data,c
 26988  00869C  0E02               	movlw	high (_display_content+60)
 26989  00869E  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26990  0086A0  0E14               	movlw	20
 26991  0086A2  6E08               	movwf	i2c_display_write_fixed@length,c
 26992  0086A4  EC4A  F046         	call	_i2c_display_write_fixed	;wreg free
 26993  0086A8  0012               	return		;funcret
 26994  0086AA                     __end_of_display_update:
 26995                           	opt stack 0
 26996                           tosu	equ	0xFFF
 26997                           tosh	equ	0xFFE
 26998                           tosl	equ	0xFFD
 26999                           pclath	equ	0xFFA
 27000                           tblptru	equ	0xFF8
 27001                           tblptrh	equ	0xFF7
 27002                           tblptrl	equ	0xFF6
 27003                           tablat	equ	0xFF5
 27004                           prodh	equ	0xFF4
 27005                           prodl	equ	0xFF3
 27006                           intcon	equ	0xFF2
 27007                           intcon2	equ	0xFF1
 27008                           intcon3	equ	0xFF0
 27009                           indf0	equ	0xFEF
 27010                           postinc0	equ	0xFEE
 27011                           fsr0h	equ	0xFEA
 27012                           fsr0l	equ	0xFE9
 27013                           wreg	equ	0xFE8
 27014                           indf1	equ	0xFE7
 27015                           postdec1	equ	0xFE5
 27016                           plusw1	equ	0xFE3
 27017                           fsr1h	equ	0xFE2
 27018                           fsr1l	equ	0xFE1
 27019                           indf2	equ	0xFDF
 27020                           postinc2	equ	0xFDE
 27021                           postdec2	equ	0xFDD
 27022                           plusw2	equ	0xFDB
 27023                           fsr2h	equ	0xFDA
 27024                           fsr2l	equ	0xFD9
 27025                           status	equ	0xFD8
 27026                           
 27027 ;; *************** function _i2c_display_write_fixed *****************
 27028 ;; Defined at:
 27029 ;;		line 270 in file "i2c.c"
 27030 ;; Parameters:    Size  Location     Type
 27031 ;;  data            2    5[COMRAM] PTR unsigned char 
 27032 ;;		 -> display_content(80), 
 27033 ;;  length          1    7[COMRAM] unsigned char 
 27034 ;; Auto vars:     Size  Location     Type
 27035 ;;  pos             1    8[COMRAM] unsigned char 
 27036 ;; Return value:  Size  Location     Type
 27037 ;;                  1    wreg      void 
 27038 ;; Registers used:
 27039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27040 ;; Tracked objects:
 27041 ;;		On entry : 0/0
 27042 ;;		On exit  : 0/0
 27043 ;;		Unchanged: 0/0
 27044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27045 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27048 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27049 ;;Total ram usage:        4 bytes
 27050 ;; Hardware stack levels used:    1
 27051 ;; Hardware stack levels required when called:    1
 27052 ;; This function calls:
 27053 ;;		__i2c_send
 27054 ;;		__i2c_start
 27055 ;;		__i2c_stop
 27056 ;;		__i2c_wait_idle
 27057 ;;		_i2c_set_frequency
 27058 ;; This function is called by:
 27059 ;;		_display_update
 27060 ;; This function uses a non-reentrant model
 27061 ;;
 27062                           
 27063                           	psect	text129
 27064  008C94                     __ptext129:
 27065                           	opt stack 0
 27066  008C94                     _i2c_display_write_fixed:
 27067                           	opt stack 25
 27068                           
 27069                           ;i2c.c: 272: uint8_t pos;;i2c.c: 275: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27070                           
 27071                           ;incstack = 0
 27072  008C94  0E02               	movlw	2
 27073  008C96  ECD1  F04B         	call	_i2c_set_frequency
 27074                           
 27075                           ;i2c.c: 277: _i2c_wait_idle();
 27076  008C9A  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 27077                           
 27078                           ;i2c.c: 278: _i2c_start();
 27079  008C9E  EC7B  F04E         	call	__i2c_start	;wreg free
 27080                           
 27081                           ;i2c.c: 279: _i2c_wait_idle();
 27082  008CA2  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 27083                           
 27084                           ;i2c.c: 280: _i2c_send(0b01111000);
 27085  008CA6  0E78               	movlw	120
 27086  008CA8  EC7F  F04E         	call	__i2c_send
 27087                           
 27088                           ;i2c.c: 281: _i2c_wait_idle();
 27089  008CAC  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 27090                           
 27091                           ;i2c.c: 282: _i2c_send(0b01000000);
 27092  008CB0  0E40               	movlw	64
 27093  008CB2  EC7F  F04E         	call	__i2c_send
 27094                           
 27095                           ;i2c.c: 283: _i2c_wait_idle();
 27096  008CB6  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 27097                           
 27098                           ;i2c.c: 286: for(pos=0; pos<length; ++pos)
 27099  008CBA  0E00               	movlw	0
 27100  008CBC  6E09               	movwf	i2c_display_write_fixed@pos,c
 27101  008CBE  D00E               	goto	l1232
 27102  008CC0                     
 27103                           ;i2c.c: 287: {;i2c.c: 288: _i2c_send(data[pos]);
 27104  008CC0  5009               	movf	i2c_display_write_fixed@pos,w,c
 27105  008CC2  0D01               	mullw	1
 27106  008CC4  50F3               	movf	prodl,w,c
 27107  008CC6  2406               	addwf	i2c_display_write_fixed@data,w,c
 27108  008CC8  6ED9               	movwf	fsr2l,c
 27109  008CCA  50F4               	movf	prodh,w,c
 27110  008CCC  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 27111  008CCE  6EDA               	movwf	fsr2h,c
 27112  008CD0  50DF               	movf	indf2,w,c
 27113  008CD2  EC7F  F04E         	call	__i2c_send
 27114                           
 27115                           ;i2c.c: 289: _i2c_wait_idle();
 27116  008CD6  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 27117  008CDA  2A09               	incf	i2c_display_write_fixed@pos,f,c
 27118  008CDC                     l1232:
 27119  008CDC  5008               	movf	i2c_display_write_fixed@length,w,c
 27120  008CDE  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 27121  008CE0  A0D8               	btfss	status,0,c
 27122  008CE2  D7EE               	goto	l1233
 27123                           
 27124                           ;i2c.c: 290: };i2c.c: 292: _i2c_stop();
 27125  008CE4  EC77  F04E         	call	__i2c_stop	;wreg free
 27126  008CE8  0012               	return		;funcret
 27127  008CEA                     __end_of_i2c_display_write_fixed:
 27128                           	opt stack 0
 27129                           tosu	equ	0xFFF
 27130                           tosh	equ	0xFFE
 27131                           tosl	equ	0xFFD
 27132                           pclath	equ	0xFFA
 27133                           tblptru	equ	0xFF8
 27134                           tblptrh	equ	0xFF7
 27135                           tblptrl	equ	0xFF6
 27136                           tablat	equ	0xFF5
 27137                           prodh	equ	0xFF4
 27138                           prodl	equ	0xFF3
 27139                           intcon	equ	0xFF2
 27140                           intcon2	equ	0xFF1
 27141                           intcon3	equ	0xFF0
 27142                           indf0	equ	0xFEF
 27143                           postinc0	equ	0xFEE
 27144                           fsr0h	equ	0xFEA
 27145                           fsr0l	equ	0xFE9
 27146                           wreg	equ	0xFE8
 27147                           indf1	equ	0xFE7
 27148                           postdec1	equ	0xFE5
 27149                           plusw1	equ	0xFE3
 27150                           fsr1h	equ	0xFE2
 27151                           fsr1l	equ	0xFE1
 27152                           indf2	equ	0xFDF
 27153                           postinc2	equ	0xFDE
 27154                           postdec2	equ	0xFDD
 27155                           plusw2	equ	0xFDB
 27156                           fsr2h	equ	0xFDA
 27157                           fsr2l	equ	0xFD9
 27158                           status	equ	0xFD8
 27159                           
 27160 ;; *************** function _i2c_display_cursor *****************
 27161 ;; Defined at:
 27162 ;;		line 230 in file "i2c.c"
 27163 ;; Parameters:    Size  Location     Type
 27164 ;;  line            1    wreg     unsigned char 
 27165 ;;  position        1   13[COMRAM] unsigned char 
 27166 ;; Auto vars:     Size  Location     Type
 27167 ;;  line            1   14[COMRAM] unsigned char 
 27168 ;;  address         1   15[COMRAM] unsigned char 
 27169 ;; Return value:  Size  Location     Type
 27170 ;;                  1    wreg      void 
 27171 ;; Registers used:
 27172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27173 ;; Tracked objects:
 27174 ;;		On entry : 0/0
 27175 ;;		On exit  : 0/0
 27176 ;;		Unchanged: 0/0
 27177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27178 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27181 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27182 ;;Total ram usage:        3 bytes
 27183 ;; Hardware stack levels used:    1
 27184 ;; Hardware stack levels required when called:    3
 27185 ;; This function calls:
 27186 ;;		__ic2_display_set_address
 27187 ;;		_i2c_set_frequency
 27188 ;; This function is called by:
 27189 ;;		_display_update
 27190 ;; This function uses a non-reentrant model
 27191 ;;
 27192                           
 27193                           	psect	text130
 27194  009956                     __ptext130:
 27195                           	opt stack 0
 27196  009956                     _i2c_display_cursor:
 27197                           	opt stack 23
 27198                           
 27199                           ;incstack = 0
 27200                           ;i2c_display_cursor@line stored from wreg
 27201  009956  6E0F               	movwf	i2c_display_cursor@line,c
 27202                           
 27203                           ;i2c.c: 232: uint8_t address;;i2c.c: 235: line &= 0b11;
 27204  009958  0E03               	movlw	3
 27205  00995A  160F               	andwf	i2c_display_cursor@line,f,c
 27206                           
 27207                           ;i2c.c: 236: address = line<<5;
 27208  00995C  380F               	swapf	i2c_display_cursor@line,w,c
 27209  00995E  46E8               	rlncf	wreg,f,c
 27210  009960  0BE0               	andlw	224
 27211  009962  6E10               	movwf	i2c_display_cursor@address,c
 27212                           
 27213                           ;i2c.c: 237: position &= 0b11111;
 27214  009964  0E1F               	movlw	31
 27215  009966  160E               	andwf	i2c_display_cursor@position,f,c
 27216                           
 27217                           ;i2c.c: 238: address |= position;
 27218  009968  500E               	movf	i2c_display_cursor@position,w,c
 27219  00996A  1210               	iorwf	i2c_display_cursor@address,f,c
 27220                           
 27221                           ;i2c.c: 241: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27222  00996C  0E02               	movlw	2
 27223  00996E  ECD1  F04B         	call	_i2c_set_frequency
 27224                           
 27225                           ;i2c.c: 244: _ic2_display_set_address(address);
 27226  009972  5010               	movf	i2c_display_cursor@address,w,c
 27227  009974  EC4D  F04C         	call	__ic2_display_set_address
 27228  009978  0012               	return		;funcret
 27229  00997A                     __end_of_i2c_display_cursor:
 27230                           	opt stack 0
 27231                           tosu	equ	0xFFF
 27232                           tosh	equ	0xFFE
 27233                           tosl	equ	0xFFD
 27234                           pclath	equ	0xFFA
 27235                           tblptru	equ	0xFF8
 27236                           tblptrh	equ	0xFF7
 27237                           tblptrl	equ	0xFF6
 27238                           tablat	equ	0xFF5
 27239                           prodh	equ	0xFF4
 27240                           prodl	equ	0xFF3
 27241                           intcon	equ	0xFF2
 27242                           intcon2	equ	0xFF1
 27243                           intcon3	equ	0xFF0
 27244                           indf0	equ	0xFEF
 27245                           postinc0	equ	0xFEE
 27246                           fsr0h	equ	0xFEA
 27247                           fsr0l	equ	0xFE9
 27248                           wreg	equ	0xFE8
 27249                           indf1	equ	0xFE7
 27250                           postdec1	equ	0xFE5
 27251                           plusw1	equ	0xFE3
 27252                           fsr1h	equ	0xFE2
 27253                           fsr1l	equ	0xFE1
 27254                           indf2	equ	0xFDF
 27255                           postinc2	equ	0xFDE
 27256                           postdec2	equ	0xFDD
 27257                           plusw2	equ	0xFDB
 27258                           fsr2h	equ	0xFDA
 27259                           fsr2l	equ	0xFD9
 27260                           status	equ	0xFD8
 27261                           
 27262 ;; *************** function __ic2_display_set_address *****************
 27263 ;; Defined at:
 27264 ;;		line 194 in file "i2c.c"
 27265 ;; Parameters:    Size  Location     Type
 27266 ;;  address         1    wreg     unsigned char 
 27267 ;; Auto vars:     Size  Location     Type
 27268 ;;  address         1   10[COMRAM] unsigned char 
 27269 ;;  data_array      2   11[COMRAM] unsigned char [2]
 27270 ;; Return value:  Size  Location     Type
 27271 ;;                  1    wreg      void 
 27272 ;; Registers used:
 27273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27274 ;; Tracked objects:
 27275 ;;		On entry : 0/0
 27276 ;;		On exit  : 0/0
 27277 ;;		Unchanged: 0/0
 27278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27280 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27282 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27283 ;;Total ram usage:        3 bytes
 27284 ;; Hardware stack levels used:    1
 27285 ;; Hardware stack levels required when called:    2
 27286 ;; This function calls:
 27287 ;;		__i2c_write
 27288 ;;		_i2c_set_frequency
 27289 ;; This function is called by:
 27290 ;;		_i2c_display_cursor
 27291 ;; This function uses a non-reentrant model
 27292 ;;
 27293                           
 27294                           	psect	text131
 27295  00989A                     __ptext131:
 27296                           	opt stack 0
 27297  00989A                     __ic2_display_set_address:
 27298                           	opt stack 23
 27299                           
 27300                           ;incstack = 0
 27301                           ;__ic2_display_set_address@address stored from wreg
 27302  00989A  6E0B               	movwf	__ic2_display_set_address@address,c
 27303                           
 27304                           ;i2c.c: 196: uint8_t data_array[2];;i2c.c: 197: data_array[0] = 0b00000000;
 27305  00989C  0E00               	movlw	0
 27306  00989E  6E0C               	movwf	__ic2_display_set_address@data_array,c
 27307                           
 27308                           ;i2c.c: 198: data_array[1] = 0b10000000 | address;
 27309  0098A0  500B               	movf	__ic2_display_set_address@address,w,c
 27310  0098A2  0980               	iorlw	128
 27311  0098A4  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 27312                           
 27313                           ;i2c.c: 201: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27314  0098A6  0E02               	movlw	2
 27315  0098A8  ECD1  F04B         	call	_i2c_set_frequency
 27316                           
 27317                           ;i2c.c: 204: _i2c_write(0b01111000, &data_array[0], 2);
 27318  0098AC  0E0C               	movlw	low __ic2_display_set_address@data_array
 27319  0098AE  6E06               	movwf	__i2c_write@data,c
 27320  0098B0  0E00               	movlw	high __ic2_display_set_address@data_array
 27321  0098B2  6E07               	movwf	__i2c_write@data+1,c
 27322  0098B4  0E02               	movlw	2
 27323  0098B6  6E08               	movwf	__i2c_write@length,c
 27324  0098B8  0E78               	movlw	120
 27325  0098BA  EC65  F048         	call	__i2c_write
 27326  0098BE  0012               	return		;funcret
 27327  0098C0                     __end_of__ic2_display_set_address:
 27328                           	opt stack 0
 27329                           tosu	equ	0xFFF
 27330                           tosh	equ	0xFFE
 27331                           tosl	equ	0xFFD
 27332                           pclath	equ	0xFFA
 27333                           tblptru	equ	0xFF8
 27334                           tblptrh	equ	0xFF7
 27335                           tblptrl	equ	0xFF6
 27336                           tablat	equ	0xFF5
 27337                           prodh	equ	0xFF4
 27338                           prodl	equ	0xFF3
 27339                           intcon	equ	0xFF2
 27340                           intcon2	equ	0xFF1
 27341                           intcon3	equ	0xFF0
 27342                           indf0	equ	0xFEF
 27343                           postinc0	equ	0xFEE
 27344                           fsr0h	equ	0xFEA
 27345                           fsr0l	equ	0xFE9
 27346                           wreg	equ	0xFE8
 27347                           indf1	equ	0xFE7
 27348                           postdec1	equ	0xFE5
 27349                           plusw1	equ	0xFE3
 27350                           fsr1h	equ	0xFE2
 27351                           fsr1l	equ	0xFE1
 27352                           indf2	equ	0xFDF
 27353                           postinc2	equ	0xFDE
 27354                           postdec2	equ	0xFDD
 27355                           plusw2	equ	0xFDB
 27356                           fsr2h	equ	0xFDA
 27357                           fsr2l	equ	0xFD9
 27358                           status	equ	0xFD8
 27359                           
 27360 ;; *************** function _display_prepare *****************
 27361 ;; Defined at:
 27362 ;;		line 292 in file "display.c"
 27363 ;; Parameters:    Size  Location     Type
 27364 ;;  mode            1    wreg     unsigned char 
 27365 ;; Auto vars:     Size  Location     Type
 27366 ;;  mode            1   42[COMRAM] unsigned char 
 27367 ;; Return value:  Size  Location     Type
 27368 ;;                  1    wreg      void 
 27369 ;; Registers used:
 27370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27371 ;; Tracked objects:
 27372 ;;		On entry : 0/0
 27373 ;;		On exit  : 0/0
 27374 ;;		Unchanged: 0/0
 27375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27379 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27380 ;;Total ram usage:        3 bytes
 27381 ;; Hardware stack levels used:    1
 27382 ;; Hardware stack levels required when called:    6
 27383 ;; This function calls:
 27384 ;;		__display_checked
 27385 ;;		__display_clear
 27386 ;;		__display_done
 27387 ;;		__display_failed
 27388 ;;		__display_found
 27389 ;;		__display_programming
 27390 ;;		__display_rebooting
 27391 ;;		__display_search
 27392 ;;		__display_start
 27393 ;;		__display_suspended
 27394 ;;		__display_verify
 27395 ;; This function is called by:
 27396 ;;		_main
 27397 ;;		_reboot
 27398 ;; This function uses a non-reentrant model
 27399 ;;
 27400                           
 27401                           	psect	text132
 27402  006972                     __ptext132:
 27403                           	opt stack 0
 27404  006972                     _display_prepare:
 27405                           	opt stack 21
 27406                           
 27407                           ;incstack = 0
 27408                           ;display_prepare@mode stored from wreg
 27409  006972  6E2B               	movwf	display_prepare@mode,c
 27410                           
 27411                           ;display.c: 294: _display_clear();
 27412  006974  EC41  F048         	call	__display_clear	;wreg free
 27413                           
 27414                           ;display.c: 296: switch(mode&0xF0)
 27415  006978  D01E               	goto	l1554
 27416  00697A                     
 27417                           ;display.c: 299: _display_start();
 27418  00697A  ECC0  F017         	call	__display_start	;wreg free
 27419                           
 27420                           ;display.c: 300: break;
 27421  00697E  D04D               	goto	l1566
 27422  006980                     
 27423                           ;display.c: 303: _display_search();
 27424  006980  EC2D  F025         	call	__display_search	;wreg free
 27425                           
 27426                           ;display.c: 304: break;
 27427  006984  D04A               	goto	l1566
 27428  006986                     
 27429                           ;display.c: 307: _display_found();
 27430  006986  ECAF  F019         	call	__display_found	;wreg free
 27431                           
 27432                           ;display.c: 308: break;
 27433  00698A  D047               	goto	l1566
 27434  00698C                     
 27435                           ;display.c: 311: _display_verify();
 27436  00698C  EC6B  F028         	call	__display_verify	;wreg free
 27437                           
 27438                           ;display.c: 312: break;
 27439  006990  D044               	goto	l1566
 27440  006992                     
 27441                           ;display.c: 315: _display_checked();
 27442  006992  ECD4  F01E         	call	__display_checked	;wreg free
 27443                           
 27444                           ;display.c: 316: break;
 27445  006996  D041               	goto	l1566
 27446  006998                     
 27447                           ;display.c: 319: _display_failed();
 27448  006998  EC6E  F009         	call	__display_failed	;wreg free
 27449                           
 27450                           ;display.c: 320: break;
 27451  00699C  D03E               	goto	l1566
 27452  00699E                     
 27453                           ;display.c: 323: _display_programming();
 27454  00699E  EC8B  F01B         	call	__display_programming	;wreg free
 27455                           
 27456                           ;display.c: 324: break;
 27457  0069A2  D03B               	goto	l1566
 27458  0069A4                     
 27459                           ;display.c: 327: _display_done();
 27460  0069A4  EC4F  F020         	call	__display_done	;wreg free
 27461                           
 27462                           ;display.c: 328: break;
 27463  0069A8  D038               	goto	l1566
 27464  0069AA                     
 27465                           ;display.c: 331: _display_rebooting();
 27466  0069AA  EC75  F046         	call	__display_rebooting	;wreg free
 27467                           
 27468                           ;display.c: 332: break;
 27469  0069AE  D035               	goto	l1566
 27470  0069B0                     
 27471                           ;display.c: 335: _display_suspended();
 27472  0069B0  EC84  F024         	call	__display_suspended	;wreg free
 27473                           
 27474                           ;display.c: 337: }
 27475                           
 27476                           ;display.c: 336: break;
 27477  0069B4  D032               	goto	l1566
 27478  0069B6                     l1554:
 27479  0069B6  502B               	movf	display_prepare@mode,w,c
 27480  0069B8  0BF0               	andlw	240
 27481  0069BA  6E29               	movwf	??_display_prepare& (0+255),c
 27482  0069BC  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 27483                           
 27484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27485                           ; Switch size 1, requested type "space"
 27486                           ; Number of cases is 1, Range of values is 0 to 0
 27487                           ; switch strategies available:
 27488                           ; Name         Instructions Cycles
 27489                           ; simple_byte            4     3 (average)
 27490                           ;	Chosen strategy is simple_byte
 27491  0069BE  502A               	movf	??_display_prepare+1,w,c
 27492  0069C0  0A00               	xorlw	0	; case 0
 27493  0069C2  A4D8               	btfss	status,2,c
 27494  0069C4  D02A               	goto	l1566
 27495                           
 27496                           ; Switch size 1, requested type "space"
 27497                           ; Number of cases is 10, Range of values is 0 to 144
 27498                           ; switch strategies available:
 27499                           ; Name         Instructions Cycles
 27500                           ; simple_byte           31    16 (average)
 27501                           ;	Chosen strategy is simple_byte
 27502  0069C6  5029               	movf	??_display_prepare,w,c
 27503  0069C8  0A00               	xorlw	0	; case 0
 27504  0069CA  B4D8               	btfsc	status,2,c
 27505  0069CC  D7D6               	goto	l1555
 27506  0069CE  0A10               	xorlw	16	; case 16
 27507  0069D0  B4D8               	btfsc	status,2,c
 27508  0069D2  D7D6               	goto	l1557
 27509  0069D4  0A30               	xorlw	48	; case 32
 27510  0069D6  B4D8               	btfsc	status,2,c
 27511  0069D8  D7D6               	goto	l1558
 27512  0069DA  0A10               	xorlw	16	; case 48
 27513  0069DC  B4D8               	btfsc	status,2,c
 27514  0069DE  D7D6               	goto	l1559
 27515  0069E0  0A70               	xorlw	112	; case 64
 27516  0069E2  B4D8               	btfsc	status,2,c
 27517  0069E4  D7D6               	goto	l1560
 27518  0069E6  0A10               	xorlw	16	; case 80
 27519  0069E8  B4D8               	btfsc	status,2,c
 27520  0069EA  D7D6               	goto	l1561
 27521  0069EC  0A30               	xorlw	48	; case 96
 27522  0069EE  B4D8               	btfsc	status,2,c
 27523  0069F0  D7D6               	goto	l1562
 27524  0069F2  0A10               	xorlw	16	; case 112
 27525  0069F4  B4D8               	btfsc	status,2,c
 27526  0069F6  D7D6               	goto	l1563
 27527  0069F8  0AF0               	xorlw	240	; case 128
 27528  0069FA  B4D8               	btfsc	status,2,c
 27529  0069FC  D7D6               	goto	l1564
 27530  0069FE  0A10               	xorlw	16	; case 144
 27531  006A00  B4D8               	btfsc	status,2,c
 27532  006A02  D7D6               	goto	l1565
 27533                           
 27534                           ;display.c: 340: switch((os.timeSlot>>5)&0b11)
 27535  006A04  D00A               	goto	l1566
 27536  006A06                     
 27537                           ;display.c: 343: display_content[0][17] = '.';
 27538  006A06  0E2E               	movlw	46
 27539  006A08  0102               	movlb	2	; () banked
 27540  006A0A  6F11               	movwf	(_display_content+17)& (0+255),b
 27541  006A0C                     l1568:
 27542                           
 27543                           ;display.c: 346: display_content[0][16] = '.';
 27544  006A0C  0E2E               	movlw	46
 27545  006A0E  0102               	movlb	2	; () banked
 27546  006A10  6F10               	movwf	(_display_content+16)& (0+255),b
 27547  006A12                     l1569:
 27548                           
 27549                           ;display.c: 349: display_content[0][15] = '.';
 27550  006A12  0E2E               	movlw	46
 27551  006A14  0102               	movlb	2	; () banked
 27552  006A16  6F0F               	movwf	(_display_content+15)& (0+255),b
 27553                           
 27554                           ;display.c: 351: }
 27555  006A18  D015               	goto	l1570
 27556  006A1A                     l1566:
 27557                           
 27558                           ; BSR set to: 2
 27559  006A1A  0100               	movlb	0	; () banked
 27560  006A1C  39C7               	swapf	(_os+2)& (0+255),w,b	;volatile
 27561  006A1E  42E8               	rrncf	wreg,f,c
 27562  006A20  0B07               	andlw	7
 27563  006A22  0B03               	andlw	3
 27564  006A24  6E29               	movwf	??_display_prepare& (0+255),c
 27565  006A26  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 27566                           
 27567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27568                           ; Switch size 1, requested type "space"
 27569                           ; Number of cases is 1, Range of values is 0 to 0
 27570                           ; switch strategies available:
 27571                           ; Name         Instructions Cycles
 27572                           ; simple_byte            4     3 (average)
 27573                           ;	Chosen strategy is simple_byte
 27574  006A28  502A               	movf	??_display_prepare+1,w,c
 27575  006A2A  0A00               	xorlw	0	; case 0
 27576  006A2C  A4D8               	btfss	status,2,c
 27577  006A2E  D00A               	goto	l1570
 27578                           
 27579                           ; BSR set to: 0
 27580                           ; Switch size 1, requested type "space"
 27581                           ; Number of cases is 3, Range of values is 1 to 3
 27582                           ; switch strategies available:
 27583                           ; Name         Instructions Cycles
 27584                           ; simple_byte           10     6 (average)
 27585                           ;	Chosen strategy is simple_byte
 27586  006A30  5029               	movf	??_display_prepare,w,c
 27587  006A32  0A01               	xorlw	1	; case 1
 27588  006A34  B4D8               	btfsc	status,2,c
 27589  006A36  D7ED               	goto	l1569
 27590  006A38  0A03               	xorlw	3	; case 2
 27591  006A3A  B4D8               	btfsc	status,2,c
 27592  006A3C  D7E7               	goto	l1568
 27593  006A3E  0A01               	xorlw	1	; case 3
 27594  006A40  B4D8               	btfsc	status,2,c
 27595  006A42  D7E1               	goto	l1567
 27596  006A44                     l1570:
 27597                           
 27598                           ;display.c: 355: if(INTCONbits.GIE)
 27599  006A44  AEF2               	btfss	intcon,7,c	;volatile
 27600  006A46  0012               	return	
 27601                           
 27602                           ;display.c: 356: {;display.c: 357: display_content[0][18] = 'I';
 27603  006A48  0E49               	movlw	73
 27604  006A4A  0102               	movlb	2	; () banked
 27605  006A4C  6F12               	movwf	(_display_content+18)& (0+255),b
 27606  006A4E  0012               	return	
 27607  006A50                     __end_of_display_prepare:
 27608                           	opt stack 0
 27609                           tosu	equ	0xFFF
 27610                           tosh	equ	0xFFE
 27611                           tosl	equ	0xFFD
 27612                           pclath	equ	0xFFA
 27613                           tblptru	equ	0xFF8
 27614                           tblptrh	equ	0xFF7
 27615                           tblptrl	equ	0xFF6
 27616                           tablat	equ	0xFF5
 27617                           prodh	equ	0xFF4
 27618                           prodl	equ	0xFF3
 27619                           intcon	equ	0xFF2
 27620                           intcon2	equ	0xFF1
 27621                           intcon3	equ	0xFF0
 27622                           indf0	equ	0xFEF
 27623                           postinc0	equ	0xFEE
 27624                           fsr0h	equ	0xFEA
 27625                           fsr0l	equ	0xFE9
 27626                           wreg	equ	0xFE8
 27627                           indf1	equ	0xFE7
 27628                           postdec1	equ	0xFE5
 27629                           plusw1	equ	0xFE3
 27630                           fsr1h	equ	0xFE2
 27631                           fsr1l	equ	0xFE1
 27632                           indf2	equ	0xFDF
 27633                           postinc2	equ	0xFDE
 27634                           postdec2	equ	0xFDD
 27635                           plusw2	equ	0xFDB
 27636                           fsr2h	equ	0xFDA
 27637                           fsr2l	equ	0xFD9
 27638                           status	equ	0xFD8
 27639                           
 27640 ;; *************** function __display_verify *****************
 27641 ;; Defined at:
 27642 ;;		line 427 in file "display.c"
 27643 ;; Parameters:    Size  Location     Type
 27644 ;;		None
 27645 ;; Auto vars:     Size  Location     Type
 27646 ;;  cntr            1   32[COMRAM] unsigned char 
 27647 ;;  start           1    0        unsigned char 
 27648 ;; Return value:  Size  Location     Type
 27649 ;;                  1    wreg      void 
 27650 ;; Registers used:
 27651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27652 ;; Tracked objects:
 27653 ;;		On entry : 0/0
 27654 ;;		On exit  : 0/0
 27655 ;;		Unchanged: 0/0
 27656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27660 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27661 ;;Total ram usage:        3 bytes
 27662 ;; Hardware stack levels used:    1
 27663 ;; Hardware stack levels required when called:    4
 27664 ;; This function calls:
 27665 ;;		__display_itoa_u16
 27666 ;;		_bootloader_get_entries
 27667 ;; This function is called by:
 27668 ;;		_display_prepare
 27669 ;; This function uses a non-reentrant model
 27670 ;;
 27671                           
 27672                           	psect	text133
 27673  0050D6                     __ptext133:
 27674                           	opt stack 0
 27675  0050D6                     __display_verify:
 27676                           	opt stack 22
 27677                           
 27678                           ;display.c: 429: uint8_t cntr;;display.c: 430: uint8_t start;;display.c: 431: cntr = 0;
 27679                           
 27680                           ;incstack = 0
 27681  0050D6  0E00               	movlw	0
 27682  0050D8  6E21               	movwf	__display_verify@cntr,c
 27683                           
 27684                           ;display.c: 432: while(verify_line1[cntr])
 27685  0050DA  D017               	goto	l1623
 27686  0050DC                     
 27687                           ;display.c: 433: display_content[0][cntr] = verify_line1[cntr++];
 27688  0050DC  5021               	movf	__display_verify@cntr,w,c
 27689  0050DE  0D01               	mullw	1
 27690  0050E0  0EB8               	movlw	low _verify_line1
 27691  0050E2  24F3               	addwf	prodl,w,c
 27692  0050E4  6EF6               	movwf	tblptrl,c
 27693  0050E6  0EBD               	movlw	high _verify_line1
 27694  0050E8  20F4               	addwfc	prodh,w,c
 27695  0050EA  6EF7               	movwf	tblptrh,c
 27696  0050EC                     	if	1	;There are 3 active tblptr bytes
 27697  0050EC  6AF8               	clrf	tblptru,c
 27698  0050EE  0E00               	movlw	low (__mediumconst shr (0+16))
 27699  0050F0  22F8               	addwfc	tblptru,f,c
 27700  0050F2                     	endif
 27701  0050F2  5021               	movf	__display_verify@cntr,w,c
 27702  0050F4  0D01               	mullw	1
 27703  0050F6  0E00               	movlw	low _display_content
 27704  0050F8  24F3               	addwf	prodl,w,c
 27705  0050FA  6ED9               	movwf	fsr2l,c
 27706  0050FC  0E02               	movlw	high _display_content
 27707  0050FE  20F4               	addwfc	prodh,w,c
 27708  005100  6EDA               	movwf	fsr2h,c
 27709  005102  0008               	tblrd		*
 27710  005104  CFF5 FFDF          	movff	tablat,indf2
 27711  005108  2A21               	incf	__display_verify@cntr,f,c
 27712  00510A                     l1623:
 27713  00510A  5021               	movf	__display_verify@cntr,w,c
 27714  00510C  0D01               	mullw	1
 27715  00510E  0EB8               	movlw	low _verify_line1
 27716  005110  24F3               	addwf	prodl,w,c
 27717  005112  6EF6               	movwf	tblptrl,c
 27718  005114  0EBD               	movlw	high _verify_line1
 27719  005116  20F4               	addwfc	prodh,w,c
 27720  005118  6EF7               	movwf	tblptrh,c
 27721  00511A                     	if	1	;There are 3 active tblptr bytes
 27722  00511A  6AF8               	clrf	tblptru,c
 27723  00511C  0E00               	movlw	low (__mediumconst shr (0+16))
 27724  00511E  22F8               	addwfc	tblptru,f,c
 27725  005120                     	endif
 27726  005120  0008               	tblrd		*
 27727  005122  50F5               	movf	tablat,w,c
 27728  005124  0900               	iorlw	0
 27729  005126  A4D8               	btfss	status,2,c
 27730  005128  D7D9               	goto	l1624
 27731                           
 27732                           ;display.c: 434: cntr = 0;
 27733  00512A  0E00               	movlw	0
 27734  00512C  6E21               	movwf	__display_verify@cntr,c
 27735                           
 27736                           ;display.c: 435: while(verify_line2[cntr])
 27737  00512E  D017               	goto	l1626
 27738  005130                     
 27739                           ;display.c: 436: display_content[1][cntr] = verify_line2[cntr++];
 27740  005130  5021               	movf	__display_verify@cntr,w,c
 27741  005132  0D01               	mullw	1
 27742  005134  0E40               	movlw	low _verify_line2
 27743  005136  24F3               	addwf	prodl,w,c
 27744  005138  6EF6               	movwf	tblptrl,c
 27745  00513A  0EBE               	movlw	high _verify_line2
 27746  00513C  20F4               	addwfc	prodh,w,c
 27747  00513E  6EF7               	movwf	tblptrh,c
 27748  005140                     	if	1	;There are 3 active tblptr bytes
 27749  005140  6AF8               	clrf	tblptru,c
 27750  005142  0E00               	movlw	low (__mediumconst shr (0+16))
 27751  005144  22F8               	addwfc	tblptru,f,c
 27752  005146                     	endif
 27753  005146  5021               	movf	__display_verify@cntr,w,c
 27754  005148  0D01               	mullw	1
 27755  00514A  0E14               	movlw	low (_display_content+20)
 27756  00514C  24F3               	addwf	prodl,w,c
 27757  00514E  6ED9               	movwf	fsr2l,c
 27758  005150  0E02               	movlw	high (_display_content+20)
 27759  005152  20F4               	addwfc	prodh,w,c
 27760  005154  6EDA               	movwf	fsr2h,c
 27761  005156  0008               	tblrd		*
 27762  005158  CFF5 FFDF          	movff	tablat,indf2
 27763  00515C  2A21               	incf	__display_verify@cntr,f,c
 27764  00515E                     l1626:
 27765  00515E  5021               	movf	__display_verify@cntr,w,c
 27766  005160  0D01               	mullw	1
 27767  005162  0E40               	movlw	low _verify_line2
 27768  005164  24F3               	addwf	prodl,w,c
 27769  005166  6EF6               	movwf	tblptrl,c
 27770  005168  0EBE               	movlw	high _verify_line2
 27771  00516A  20F4               	addwfc	prodh,w,c
 27772  00516C  6EF7               	movwf	tblptrh,c
 27773  00516E                     	if	1	;There are 3 active tblptr bytes
 27774  00516E  6AF8               	clrf	tblptru,c
 27775  005170  0E00               	movlw	low (__mediumconst shr (0+16))
 27776  005172  22F8               	addwfc	tblptru,f,c
 27777  005174                     	endif
 27778  005174  0008               	tblrd		*
 27779  005176  50F5               	movf	tablat,w,c
 27780  005178  0900               	iorlw	0
 27781  00517A  A4D8               	btfss	status,2,c
 27782  00517C  D7D9               	goto	l1627
 27783                           
 27784                           ;display.c: 437: cntr = 0;
 27785  00517E  0E00               	movlw	0
 27786  005180  6E21               	movwf	__display_verify@cntr,c
 27787                           
 27788                           ;display.c: 438: while(verify_line3[cntr])
 27789  005182  D017               	goto	l1629
 27790  005184                     
 27791                           ;display.c: 439: display_content[2][cntr] = verify_line3[cntr++];
 27792  005184  5021               	movf	__display_verify@cntr,w,c
 27793  005186  0D01               	mullw	1
 27794  005188  0E88               	movlw	low _verify_line3
 27795  00518A  24F3               	addwf	prodl,w,c
 27796  00518C  6EF6               	movwf	tblptrl,c
 27797  00518E  0EBE               	movlw	high _verify_line3
 27798  005190  20F4               	addwfc	prodh,w,c
 27799  005192  6EF7               	movwf	tblptrh,c
 27800  005194                     	if	1	;There are 3 active tblptr bytes
 27801  005194  6AF8               	clrf	tblptru,c
 27802  005196  0E00               	movlw	low (__mediumconst shr (0+16))
 27803  005198  22F8               	addwfc	tblptru,f,c
 27804  00519A                     	endif
 27805  00519A  5021               	movf	__display_verify@cntr,w,c
 27806  00519C  0D01               	mullw	1
 27807  00519E  0E28               	movlw	low (_display_content+40)
 27808  0051A0  24F3               	addwf	prodl,w,c
 27809  0051A2  6ED9               	movwf	fsr2l,c
 27810  0051A4  0E02               	movlw	high (_display_content+40)
 27811  0051A6  20F4               	addwfc	prodh,w,c
 27812  0051A8  6EDA               	movwf	fsr2h,c
 27813  0051AA  0008               	tblrd		*
 27814  0051AC  CFF5 FFDF          	movff	tablat,indf2
 27815  0051B0  2A21               	incf	__display_verify@cntr,f,c
 27816  0051B2                     l1629:
 27817  0051B2  5021               	movf	__display_verify@cntr,w,c
 27818  0051B4  0D01               	mullw	1
 27819  0051B6  0E88               	movlw	low _verify_line3
 27820  0051B8  24F3               	addwf	prodl,w,c
 27821  0051BA  6EF6               	movwf	tblptrl,c
 27822  0051BC  0EBE               	movlw	high _verify_line3
 27823  0051BE  20F4               	addwfc	prodh,w,c
 27824  0051C0  6EF7               	movwf	tblptrh,c
 27825  0051C2                     	if	1	;There are 3 active tblptr bytes
 27826  0051C2  6AF8               	clrf	tblptru,c
 27827  0051C4  0E00               	movlw	low (__mediumconst shr (0+16))
 27828  0051C6  22F8               	addwfc	tblptru,f,c
 27829  0051C8                     	endif
 27830  0051C8  0008               	tblrd		*
 27831  0051CA  50F5               	movf	tablat,w,c
 27832  0051CC  0900               	iorlw	0
 27833  0051CE  A4D8               	btfss	status,2,c
 27834  0051D0  D7D9               	goto	l1630
 27835                           
 27836                           ;display.c: 440: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 27837  0051D2  EC5E  F04E         	call	_bootloader_get_entries	;wreg free
 27838  0051D6  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27839  0051DA  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27840  0051DE  6A1B               	clrf	__display_itoa_u16@value+2,c
 27841  0051E0  6A1C               	clrf	__display_itoa_u16@value+3,c
 27842  0051E2  5021               	movf	__display_verify@cntr,w,c
 27843  0051E4  6E1F               	movwf	??__display_verify& (0+255),c
 27844  0051E6  6A20               	clrf	(??__display_verify+1)& (0+255),c
 27845  0051E8  0E01               	movlw	1
 27846  0051EA  261F               	addwf	??__display_verify,f,c
 27847  0051EC  0E00               	movlw	0
 27848  0051EE  2220               	addwfc	??__display_verify+1,f,c
 27849  0051F0  0E28               	movlw	low (_display_content+40)
 27850  0051F2  241F               	addwf	??__display_verify,w,c
 27851  0051F4  6E1D               	movwf	__display_itoa_u16@text,c
 27852  0051F6  0E02               	movlw	high (_display_content+40)
 27853  0051F8  2020               	addwfc	??__display_verify+1,w,c
 27854  0051FA  6E1E               	movwf	__display_itoa_u16@text+1,c
 27855  0051FC  ECF5  F037         	call	__display_itoa_u16	;wreg free
 27856  005200  0012               	return		;funcret
 27857  005202                     __end_of__display_verify:
 27858                           	opt stack 0
 27859                           tosu	equ	0xFFF
 27860                           tosh	equ	0xFFE
 27861                           tosl	equ	0xFFD
 27862                           pclath	equ	0xFFA
 27863                           tblptru	equ	0xFF8
 27864                           tblptrh	equ	0xFF7
 27865                           tblptrl	equ	0xFF6
 27866                           tablat	equ	0xFF5
 27867                           prodh	equ	0xFF4
 27868                           prodl	equ	0xFF3
 27869                           intcon	equ	0xFF2
 27870                           intcon2	equ	0xFF1
 27871                           intcon3	equ	0xFF0
 27872                           indf0	equ	0xFEF
 27873                           postinc0	equ	0xFEE
 27874                           fsr0h	equ	0xFEA
 27875                           fsr0l	equ	0xFE9
 27876                           wreg	equ	0xFE8
 27877                           indf1	equ	0xFE7
 27878                           postdec1	equ	0xFE5
 27879                           plusw1	equ	0xFE3
 27880                           fsr1h	equ	0xFE2
 27881                           fsr1l	equ	0xFE1
 27882                           indf2	equ	0xFDF
 27883                           postinc2	equ	0xFDE
 27884                           postdec2	equ	0xFDD
 27885                           plusw2	equ	0xFDB
 27886                           fsr2h	equ	0xFDA
 27887                           fsr2l	equ	0xFD9
 27888                           status	equ	0xFD8
 27889                           
 27890 ;; *************** function __display_suspended *****************
 27891 ;; Defined at:
 27892 ;;		line 565 in file "display.c"
 27893 ;; Parameters:    Size  Location     Type
 27894 ;;		None
 27895 ;; Auto vars:     Size  Location     Type
 27896 ;;  cntr            1    0[COMRAM] unsigned char 
 27897 ;; Return value:  Size  Location     Type
 27898 ;;                  1    wreg      void 
 27899 ;; Registers used:
 27900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27901 ;; Tracked objects:
 27902 ;;		On entry : 0/0
 27903 ;;		On exit  : 0/0
 27904 ;;		Unchanged: 0/0
 27905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27910 ;;Total ram usage:        1 bytes
 27911 ;; Hardware stack levels used:    1
 27912 ;; This function calls:
 27913 ;;		Nothing
 27914 ;; This function is called by:
 27915 ;;		_display_prepare
 27916 ;; This function uses a non-reentrant model
 27917 ;;
 27918                           
 27919                           	psect	text134
 27920  004908                     __ptext134:
 27921                           	opt stack 0
 27922  004908                     __display_suspended:
 27923                           	opt stack 26
 27924                           
 27925                           ;display.c: 567: uint8_t cntr;;display.c: 570: cntr = 0;
 27926                           
 27927                           ;incstack = 0
 27928  004908  0E00               	movlw	0
 27929  00490A  6E01               	movwf	__display_suspended@cntr,c
 27930                           
 27931                           ;display.c: 571: while(suspended_line1[cntr])
 27932  00490C  D017               	goto	l1720
 27933  00490E                     
 27934                           ;display.c: 572: display_content[0][cntr] = suspended_line1[cntr++];
 27935  00490E  5001               	movf	__display_suspended@cntr,w,c
 27936  004910  0D01               	mullw	1
 27937  004912  0E38               	movlw	low _suspended_line1
 27938  004914  24F3               	addwf	prodl,w,c
 27939  004916  6EF6               	movwf	tblptrl,c
 27940  004918  0EBD               	movlw	high _suspended_line1
 27941  00491A  20F4               	addwfc	prodh,w,c
 27942  00491C  6EF7               	movwf	tblptrh,c
 27943  00491E                     	if	1	;There are 3 active tblptr bytes
 27944  00491E  6AF8               	clrf	tblptru,c
 27945  004920  0E00               	movlw	low (__mediumconst shr (0+16))
 27946  004922  22F8               	addwfc	tblptru,f,c
 27947  004924                     	endif
 27948  004924  5001               	movf	__display_suspended@cntr,w,c
 27949  004926  0D01               	mullw	1
 27950  004928  0E00               	movlw	low _display_content
 27951  00492A  24F3               	addwf	prodl,w,c
 27952  00492C  6ED9               	movwf	fsr2l,c
 27953  00492E  0E02               	movlw	high _display_content
 27954  004930  20F4               	addwfc	prodh,w,c
 27955  004932  6EDA               	movwf	fsr2h,c
 27956  004934  0008               	tblrd		*
 27957  004936  CFF5 FFDF          	movff	tablat,indf2
 27958  00493A  2A01               	incf	__display_suspended@cntr,f,c
 27959  00493C                     l1720:
 27960  00493C  5001               	movf	__display_suspended@cntr,w,c
 27961  00493E  0D01               	mullw	1
 27962  004940  0E38               	movlw	low _suspended_line1
 27963  004942  24F3               	addwf	prodl,w,c
 27964  004944  6EF6               	movwf	tblptrl,c
 27965  004946  0EBD               	movlw	high _suspended_line1
 27966  004948  20F4               	addwfc	prodh,w,c
 27967  00494A  6EF7               	movwf	tblptrh,c
 27968  00494C                     	if	1	;There are 3 active tblptr bytes
 27969  00494C  6AF8               	clrf	tblptru,c
 27970  00494E  0E00               	movlw	low (__mediumconst shr (0+16))
 27971  004950  22F8               	addwfc	tblptru,f,c
 27972  004952                     	endif
 27973  004952  0008               	tblrd		*
 27974  004954  50F5               	movf	tablat,w,c
 27975  004956  0900               	iorlw	0
 27976  004958  A4D8               	btfss	status,2,c
 27977  00495A  D7D9               	goto	l1721
 27978                           
 27979                           ;display.c: 574: cntr = 0;
 27980  00495C  0E00               	movlw	0
 27981  00495E  6E01               	movwf	__display_suspended@cntr,c
 27982                           
 27983                           ;display.c: 575: while(suspended_line2[cntr])
 27984  004960  D017               	goto	l1723
 27985  004962                     
 27986                           ;display.c: 576: display_content[1][cntr] = suspended_line2[cntr++];
 27987  004962  5001               	movf	__display_suspended@cntr,w,c
 27988  004964  0D01               	mullw	1
 27989  004966  0E4D               	movlw	low _suspended_line2
 27990  004968  24F3               	addwf	prodl,w,c
 27991  00496A  6EF6               	movwf	tblptrl,c
 27992  00496C  0EBE               	movlw	high _suspended_line2
 27993  00496E  20F4               	addwfc	prodh,w,c
 27994  004970  6EF7               	movwf	tblptrh,c
 27995  004972                     	if	1	;There are 3 active tblptr bytes
 27996  004972  6AF8               	clrf	tblptru,c
 27997  004974  0E00               	movlw	low (__mediumconst shr (0+16))
 27998  004976  22F8               	addwfc	tblptru,f,c
 27999  004978                     	endif
 28000  004978  5001               	movf	__display_suspended@cntr,w,c
 28001  00497A  0D01               	mullw	1
 28002  00497C  0E14               	movlw	low (_display_content+20)
 28003  00497E  24F3               	addwf	prodl,w,c
 28004  004980  6ED9               	movwf	fsr2l,c
 28005  004982  0E02               	movlw	high (_display_content+20)
 28006  004984  20F4               	addwfc	prodh,w,c
 28007  004986  6EDA               	movwf	fsr2h,c
 28008  004988  0008               	tblrd		*
 28009  00498A  CFF5 FFDF          	movff	tablat,indf2
 28010  00498E  2A01               	incf	__display_suspended@cntr,f,c
 28011  004990                     l1723:
 28012  004990  5001               	movf	__display_suspended@cntr,w,c
 28013  004992  0D01               	mullw	1
 28014  004994  0E4D               	movlw	low _suspended_line2
 28015  004996  24F3               	addwf	prodl,w,c
 28016  004998  6EF6               	movwf	tblptrl,c
 28017  00499A  0EBE               	movlw	high _suspended_line2
 28018  00499C  20F4               	addwfc	prodh,w,c
 28019  00499E  6EF7               	movwf	tblptrh,c
 28020  0049A0                     	if	1	;There are 3 active tblptr bytes
 28021  0049A0  6AF8               	clrf	tblptru,c
 28022  0049A2  0E00               	movlw	low (__mediumconst shr (0+16))
 28023  0049A4  22F8               	addwfc	tblptru,f,c
 28024  0049A6                     	endif
 28025  0049A6  0008               	tblrd		*
 28026  0049A8  50F5               	movf	tablat,w,c
 28027  0049AA  0900               	iorlw	0
 28028  0049AC  A4D8               	btfss	status,2,c
 28029  0049AE  D7D9               	goto	l1724
 28030                           
 28031                           ;display.c: 578: cntr = 0;
 28032  0049B0  0E00               	movlw	0
 28033  0049B2  6E01               	movwf	__display_suspended@cntr,c
 28034                           
 28035                           ;display.c: 579: while(suspended_line3[cntr])
 28036  0049B4  D017               	goto	l1726
 28037  0049B6                     
 28038                           ;display.c: 580: display_content[2][cntr] = suspended_line3[cntr++];
 28039  0049B6  5001               	movf	__display_suspended@cntr,w,c
 28040  0049B8  0D01               	mullw	1
 28041  0049BA  0EA5               	movlw	low _suspended_line3
 28042  0049BC  24F3               	addwf	prodl,w,c
 28043  0049BE  6EF6               	movwf	tblptrl,c
 28044  0049C0  0EBE               	movlw	high _suspended_line3
 28045  0049C2  20F4               	addwfc	prodh,w,c
 28046  0049C4  6EF7               	movwf	tblptrh,c
 28047  0049C6                     	if	1	;There are 3 active tblptr bytes
 28048  0049C6  6AF8               	clrf	tblptru,c
 28049  0049C8  0E00               	movlw	low (__mediumconst shr (0+16))
 28050  0049CA  22F8               	addwfc	tblptru,f,c
 28051  0049CC                     	endif
 28052  0049CC  5001               	movf	__display_suspended@cntr,w,c
 28053  0049CE  0D01               	mullw	1
 28054  0049D0  0E28               	movlw	low (_display_content+40)
 28055  0049D2  24F3               	addwf	prodl,w,c
 28056  0049D4  6ED9               	movwf	fsr2l,c
 28057  0049D6  0E02               	movlw	high (_display_content+40)
 28058  0049D8  20F4               	addwfc	prodh,w,c
 28059  0049DA  6EDA               	movwf	fsr2h,c
 28060  0049DC  0008               	tblrd		*
 28061  0049DE  CFF5 FFDF          	movff	tablat,indf2
 28062  0049E2  2A01               	incf	__display_suspended@cntr,f,c
 28063  0049E4                     l1726:
 28064  0049E4  5001               	movf	__display_suspended@cntr,w,c
 28065  0049E6  0D01               	mullw	1
 28066  0049E8  0EA5               	movlw	low _suspended_line3
 28067  0049EA  24F3               	addwf	prodl,w,c
 28068  0049EC  6EF6               	movwf	tblptrl,c
 28069  0049EE  0EBE               	movlw	high _suspended_line3
 28070  0049F0  20F4               	addwfc	prodh,w,c
 28071  0049F2  6EF7               	movwf	tblptrh,c
 28072  0049F4                     	if	1	;There are 3 active tblptr bytes
 28073  0049F4  6AF8               	clrf	tblptru,c
 28074  0049F6  0E00               	movlw	low (__mediumconst shr (0+16))
 28075  0049F8  22F8               	addwfc	tblptru,f,c
 28076  0049FA                     	endif
 28077  0049FA  0008               	tblrd		*
 28078  0049FC  50F5               	movf	tablat,w,c
 28079  0049FE  0900               	iorlw	0
 28080  004A00  A4D8               	btfss	status,2,c
 28081  004A02  D7D9               	goto	l1727
 28082                           
 28083                           ;display.c: 582: cntr = 0;
 28084  004A04  0E00               	movlw	0
 28085  004A06  6E01               	movwf	__display_suspended@cntr,c
 28086                           
 28087                           ;display.c: 583: while(suspended_line4[cntr])
 28088  004A08  D017               	goto	l1729
 28089  004A0A                     
 28090                           ;display.c: 584: display_content[3][cntr] = suspended_line4[cntr++];
 28091  004A0A  5001               	movf	__display_suspended@cntr,w,c
 28092  004A0C  0D01               	mullw	1
 28093  004A0E  0E28               	movlw	low _suspended_line4
 28094  004A10  24F3               	addwf	prodl,w,c
 28095  004A12  6EF6               	movwf	tblptrl,c
 28096  004A14  0EBD               	movlw	high _suspended_line4
 28097  004A16  20F4               	addwfc	prodh,w,c
 28098  004A18  6EF7               	movwf	tblptrh,c
 28099  004A1A                     	if	1	;There are 3 active tblptr bytes
 28100  004A1A  6AF8               	clrf	tblptru,c
 28101  004A1C  0E00               	movlw	low (__mediumconst shr (0+16))
 28102  004A1E  22F8               	addwfc	tblptru,f,c
 28103  004A20                     	endif
 28104  004A20  5001               	movf	__display_suspended@cntr,w,c
 28105  004A22  0D01               	mullw	1
 28106  004A24  0E3C               	movlw	low (_display_content+60)
 28107  004A26  24F3               	addwf	prodl,w,c
 28108  004A28  6ED9               	movwf	fsr2l,c
 28109  004A2A  0E02               	movlw	high (_display_content+60)
 28110  004A2C  20F4               	addwfc	prodh,w,c
 28111  004A2E  6EDA               	movwf	fsr2h,c
 28112  004A30  0008               	tblrd		*
 28113  004A32  CFF5 FFDF          	movff	tablat,indf2
 28114  004A36  2A01               	incf	__display_suspended@cntr,f,c
 28115  004A38                     l1729:
 28116  004A38  5001               	movf	__display_suspended@cntr,w,c
 28117  004A3A  0D01               	mullw	1
 28118  004A3C  0E28               	movlw	low _suspended_line4
 28119  004A3E  24F3               	addwf	prodl,w,c
 28120  004A40  6EF6               	movwf	tblptrl,c
 28121  004A42  0EBD               	movlw	high _suspended_line4
 28122  004A44  20F4               	addwfc	prodh,w,c
 28123  004A46  6EF7               	movwf	tblptrh,c
 28124  004A48                     	if	1	;There are 3 active tblptr bytes
 28125  004A48  6AF8               	clrf	tblptru,c
 28126  004A4A  0E00               	movlw	low (__mediumconst shr (0+16))
 28127  004A4C  22F8               	addwfc	tblptru,f,c
 28128  004A4E                     	endif
 28129  004A4E  0008               	tblrd		*
 28130  004A50  50F5               	movf	tablat,w,c
 28131  004A52  0900               	iorlw	0
 28132  004A54  B4D8               	btfsc	status,2,c
 28133  004A56  0012               	return	
 28134  004A58  D7D8               	goto	l1730
 28135  004A5A                     __end_of__display_suspended:
 28136                           	opt stack 0
 28137                           tosu	equ	0xFFF
 28138                           tosh	equ	0xFFE
 28139                           tosl	equ	0xFFD
 28140                           pclath	equ	0xFFA
 28141                           tblptru	equ	0xFF8
 28142                           tblptrh	equ	0xFF7
 28143                           tblptrl	equ	0xFF6
 28144                           tablat	equ	0xFF5
 28145                           prodh	equ	0xFF4
 28146                           prodl	equ	0xFF3
 28147                           intcon	equ	0xFF2
 28148                           intcon2	equ	0xFF1
 28149                           intcon3	equ	0xFF0
 28150                           indf0	equ	0xFEF
 28151                           postinc0	equ	0xFEE
 28152                           fsr0h	equ	0xFEA
 28153                           fsr0l	equ	0xFE9
 28154                           wreg	equ	0xFE8
 28155                           indf1	equ	0xFE7
 28156                           postdec1	equ	0xFE5
 28157                           plusw1	equ	0xFE3
 28158                           fsr1h	equ	0xFE2
 28159                           fsr1l	equ	0xFE1
 28160                           indf2	equ	0xFDF
 28161                           postinc2	equ	0xFDE
 28162                           postdec2	equ	0xFDD
 28163                           plusw2	equ	0xFDB
 28164                           fsr2h	equ	0xFDA
 28165                           fsr2l	equ	0xFD9
 28166                           status	equ	0xFD8
 28167                           
 28168 ;; *************** function __display_start *****************
 28169 ;; Defined at:
 28170 ;;		line 361 in file "display.c"
 28171 ;; Parameters:    Size  Location     Type
 28172 ;;		None
 28173 ;; Auto vars:     Size  Location     Type
 28174 ;;  cntr            1   36[COMRAM] unsigned char 
 28175 ;; Return value:  Size  Location     Type
 28176 ;;                  1    wreg      void 
 28177 ;; Registers used:
 28178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28179 ;; Tracked objects:
 28180 ;;		On entry : 0/0
 28181 ;;		On exit  : 0/0
 28182 ;;		Unchanged: 0/0
 28183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28188 ;;Total ram usage:        1 bytes
 28189 ;; Hardware stack levels used:    1
 28190 ;; Hardware stack levels required when called:    5
 28191 ;; This function calls:
 28192 ;;		__display_itoa_u32
 28193 ;; This function is called by:
 28194 ;;		_display_prepare
 28195 ;; This function uses a non-reentrant model
 28196 ;;
 28197                           
 28198                           	psect	text135
 28199  002F80                     __ptext135:
 28200                           	opt stack 0
 28201  002F80                     __display_start:
 28202                           	opt stack 21
 28203                           
 28204                           ;display.c: 363: uint8_t cntr;;display.c: 364: cntr = 0;
 28205                           
 28206                           ;incstack = 0
 28207  002F80  0E00               	movlw	0
 28208  002F82  6E25               	movwf	__display_start@cntr,c
 28209                           
 28210                           ;display.c: 365: while(start_line1[cntr])
 28211  002F84  D017               	goto	l1575
 28212  002F86                     
 28213                           ;display.c: 366: display_content[0][cntr] = start_line1[cntr++];
 28214  002F86  5025               	movf	__display_start@cntr,w,c
 28215  002F88  0D01               	mullw	1
 28216  002F8A  0EE8               	movlw	low _start_line1
 28217  002F8C  24F3               	addwf	prodl,w,c
 28218  002F8E  6EF6               	movwf	tblptrl,c
 28219  002F90  0EBD               	movlw	high _start_line1
 28220  002F92  20F4               	addwfc	prodh,w,c
 28221  002F94  6EF7               	movwf	tblptrh,c
 28222  002F96                     	if	1	;There are 3 active tblptr bytes
 28223  002F96  6AF8               	clrf	tblptru,c
 28224  002F98  0E00               	movlw	low (__mediumconst shr (0+16))
 28225  002F9A  22F8               	addwfc	tblptru,f,c
 28226  002F9C                     	endif
 28227  002F9C  5025               	movf	__display_start@cntr,w,c
 28228  002F9E  0D01               	mullw	1
 28229  002FA0  0E00               	movlw	low _display_content
 28230  002FA2  24F3               	addwf	prodl,w,c
 28231  002FA4  6ED9               	movwf	fsr2l,c
 28232  002FA6  0E02               	movlw	high _display_content
 28233  002FA8  20F4               	addwfc	prodh,w,c
 28234  002FAA  6EDA               	movwf	fsr2h,c
 28235  002FAC  0008               	tblrd		*
 28236  002FAE  CFF5 FFDF          	movff	tablat,indf2
 28237  002FB2  2A25               	incf	__display_start@cntr,f,c
 28238  002FB4                     l1575:
 28239  002FB4  5025               	movf	__display_start@cntr,w,c
 28240  002FB6  0D01               	mullw	1
 28241  002FB8  0EE8               	movlw	low _start_line1
 28242  002FBA  24F3               	addwf	prodl,w,c
 28243  002FBC  6EF6               	movwf	tblptrl,c
 28244  002FBE  0EBD               	movlw	high _start_line1
 28245  002FC0  20F4               	addwfc	prodh,w,c
 28246  002FC2  6EF7               	movwf	tblptrh,c
 28247  002FC4                     	if	1	;There are 3 active tblptr bytes
 28248  002FC4  6AF8               	clrf	tblptru,c
 28249  002FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 28250  002FC8  22F8               	addwfc	tblptru,f,c
 28251  002FCA                     	endif
 28252  002FCA  0008               	tblrd		*
 28253  002FCC  50F5               	movf	tablat,w,c
 28254  002FCE  0900               	iorlw	0
 28255  002FD0  A4D8               	btfss	status,2,c
 28256  002FD2  D7D9               	goto	l1576
 28257                           
 28258                           ;display.c: 367: cntr = 0;
 28259  002FD4  0E00               	movlw	0
 28260  002FD6  6E25               	movwf	__display_start@cntr,c
 28261                           
 28262                           ;display.c: 368: while(start_line2[cntr])
 28263  002FD8  D017               	goto	l1578
 28264  002FDA                     
 28265                           ;display.c: 369: display_content[1][cntr] = start_line2[cntr++];
 28266  002FDA  5025               	movf	__display_start@cntr,w,c
 28267  002FDC  0D01               	mullw	1
 28268  002FDE  0E60               	movlw	low _start_line2
 28269  002FE0  24F3               	addwf	prodl,w,c
 28270  002FE2  6EF6               	movwf	tblptrl,c
 28271  002FE4  0EBE               	movlw	high _start_line2
 28272  002FE6  20F4               	addwfc	prodh,w,c
 28273  002FE8  6EF7               	movwf	tblptrh,c
 28274  002FEA                     	if	1	;There are 3 active tblptr bytes
 28275  002FEA  6AF8               	clrf	tblptru,c
 28276  002FEC  0E00               	movlw	low (__mediumconst shr (0+16))
 28277  002FEE  22F8               	addwfc	tblptru,f,c
 28278  002FF0                     	endif
 28279  002FF0  5025               	movf	__display_start@cntr,w,c
 28280  002FF2  0D01               	mullw	1
 28281  002FF4  0E14               	movlw	low (_display_content+20)
 28282  002FF6  24F3               	addwf	prodl,w,c
 28283  002FF8  6ED9               	movwf	fsr2l,c
 28284  002FFA  0E02               	movlw	high (_display_content+20)
 28285  002FFC  20F4               	addwfc	prodh,w,c
 28286  002FFE  6EDA               	movwf	fsr2h,c
 28287  003000  0008               	tblrd		*
 28288  003002  CFF5 FFDF          	movff	tablat,indf2
 28289  003006  2A25               	incf	__display_start@cntr,f,c
 28290  003008                     l1578:
 28291  003008  5025               	movf	__display_start@cntr,w,c
 28292  00300A  0D01               	mullw	1
 28293  00300C  0E60               	movlw	low _start_line2
 28294  00300E  24F3               	addwf	prodl,w,c
 28295  003010  6EF6               	movwf	tblptrl,c
 28296  003012  0EBE               	movlw	high _start_line2
 28297  003014  20F4               	addwfc	prodh,w,c
 28298  003016  6EF7               	movwf	tblptrh,c
 28299  003018                     	if	1	;There are 3 active tblptr bytes
 28300  003018  6AF8               	clrf	tblptru,c
 28301  00301A  0E00               	movlw	low (__mediumconst shr (0+16))
 28302  00301C  22F8               	addwfc	tblptru,f,c
 28303  00301E                     	endif
 28304  00301E  0008               	tblrd		*
 28305  003020  50F5               	movf	tablat,w,c
 28306  003022  0900               	iorlw	0
 28307  003024  A4D8               	btfss	status,2,c
 28308  003026  D7D9               	goto	l1579
 28309                           
 28310                           ;display.c: 370: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 28311  003028  0E00               	movlw	0
 28312  00302A  6E1F               	movwf	__display_itoa_u32@value,c
 28313  00302C  0E00               	movlw	0
 28314  00302E  6E20               	movwf	__display_itoa_u32@value+1,c
 28315  003030  0E00               	movlw	0
 28316  003032  6E21               	movwf	__display_itoa_u32@value+2,c
 28317  003034  0E00               	movlw	0
 28318  003036  6E22               	movwf	__display_itoa_u32@value+3,c
 28319  003038  5025               	movf	__display_start@cntr,w,c
 28320  00303A  0D01               	mullw	1
 28321  00303C  0E14               	movlw	low (_display_content+20)
 28322  00303E  24F3               	addwf	prodl,w,c
 28323  003040  6E23               	movwf	__display_itoa_u32@text,c
 28324  003042  0E02               	movlw	high (_display_content+20)
 28325  003044  20F4               	addwfc	prodh,w,c
 28326  003046  6E24               	movwf	__display_itoa_u32@text+1,c
 28327  003048  EC15  F006         	call	__display_itoa_u32	;wreg free
 28328  00304C  2625               	addwf	__display_start@cntr,f,c
 28329                           
 28330                           ;display.c: 371: display_content[1][cntr++] = '.';
 28331  00304E  5025               	movf	__display_start@cntr,w,c
 28332  003050  0D01               	mullw	1
 28333  003052  0E14               	movlw	low (_display_content+20)
 28334  003054  24F3               	addwf	prodl,w,c
 28335  003056  6ED9               	movwf	fsr2l,c
 28336  003058  0E02               	movlw	high (_display_content+20)
 28337  00305A  20F4               	addwfc	prodh,w,c
 28338  00305C  6EDA               	movwf	fsr2h,c
 28339  00305E  0E2E               	movlw	46
 28340  003060  6EDF               	movwf	indf2,c
 28341  003062  2A25               	incf	__display_start@cntr,f,c
 28342                           
 28343                           ;display.c: 372: cntr += _display_itoa_u32(0x04, &display_content[1][cntr]);
 28344  003064  0E04               	movlw	4
 28345  003066  6E1F               	movwf	__display_itoa_u32@value,c
 28346  003068  0E00               	movlw	0
 28347  00306A  6E20               	movwf	__display_itoa_u32@value+1,c
 28348  00306C  0E00               	movlw	0
 28349  00306E  6E21               	movwf	__display_itoa_u32@value+2,c
 28350  003070  0E00               	movlw	0
 28351  003072  6E22               	movwf	__display_itoa_u32@value+3,c
 28352  003074  5025               	movf	__display_start@cntr,w,c
 28353  003076  0D01               	mullw	1
 28354  003078  0E14               	movlw	low (_display_content+20)
 28355  00307A  24F3               	addwf	prodl,w,c
 28356  00307C  6E23               	movwf	__display_itoa_u32@text,c
 28357  00307E  0E02               	movlw	high (_display_content+20)
 28358  003080  20F4               	addwfc	prodh,w,c
 28359  003082  6E24               	movwf	__display_itoa_u32@text+1,c
 28360  003084  EC15  F006         	call	__display_itoa_u32	;wreg free
 28361  003088  2625               	addwf	__display_start@cntr,f,c
 28362                           
 28363                           ;display.c: 373: display_content[1][cntr++] = '.';
 28364  00308A  5025               	movf	__display_start@cntr,w,c
 28365  00308C  0D01               	mullw	1
 28366  00308E  0E14               	movlw	low (_display_content+20)
 28367  003090  24F3               	addwf	prodl,w,c
 28368  003092  6ED9               	movwf	fsr2l,c
 28369  003094  0E02               	movlw	high (_display_content+20)
 28370  003096  20F4               	addwfc	prodh,w,c
 28371  003098  6EDA               	movwf	fsr2h,c
 28372  00309A  0E2E               	movlw	46
 28373  00309C  6EDF               	movwf	indf2,c
 28374  00309E  2A25               	incf	__display_start@cntr,f,c
 28375                           
 28376                           ;display.c: 374: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 28377  0030A0  0E00               	movlw	0
 28378  0030A2  6E1F               	movwf	__display_itoa_u32@value,c
 28379  0030A4  0E00               	movlw	0
 28380  0030A6  6E20               	movwf	__display_itoa_u32@value+1,c
 28381  0030A8  0E00               	movlw	0
 28382  0030AA  6E21               	movwf	__display_itoa_u32@value+2,c
 28383  0030AC  0E00               	movlw	0
 28384  0030AE  6E22               	movwf	__display_itoa_u32@value+3,c
 28385  0030B0  5025               	movf	__display_start@cntr,w,c
 28386  0030B2  0D01               	mullw	1
 28387  0030B4  0E14               	movlw	low (_display_content+20)
 28388  0030B6  24F3               	addwf	prodl,w,c
 28389  0030B8  6E23               	movwf	__display_itoa_u32@text,c
 28390  0030BA  0E02               	movlw	high (_display_content+20)
 28391  0030BC  20F4               	addwfc	prodh,w,c
 28392  0030BE  6E24               	movwf	__display_itoa_u32@text+1,c
 28393  0030C0  EC15  F006         	call	__display_itoa_u32	;wreg free
 28394  0030C4  2625               	addwf	__display_start@cntr,f,c
 28395                           
 28396                           ;display.c: 375: cntr = 0;
 28397  0030C6  0E00               	movlw	0
 28398  0030C8  6E25               	movwf	__display_start@cntr,c
 28399                           
 28400                           ;display.c: 376: while(start_line3[cntr])
 28401  0030CA  D017               	goto	l1581
 28402  0030CC                     
 28403                           ;display.c: 377: display_content[2][cntr] = start_line3[cntr++];
 28404  0030CC  5025               	movf	__display_start@cntr,w,c
 28405  0030CE  0D01               	mullw	1
 28406  0030D0  0EA6               	movlw	low _start_line3
 28407  0030D2  24F3               	addwf	prodl,w,c
 28408  0030D4  6EF6               	movwf	tblptrl,c
 28409  0030D6  0EBE               	movlw	high _start_line3
 28410  0030D8  20F4               	addwfc	prodh,w,c
 28411  0030DA  6EF7               	movwf	tblptrh,c
 28412  0030DC                     	if	1	;There are 3 active tblptr bytes
 28413  0030DC  6AF8               	clrf	tblptru,c
 28414  0030DE  0E00               	movlw	low (__mediumconst shr (0+16))
 28415  0030E0  22F8               	addwfc	tblptru,f,c
 28416  0030E2                     	endif
 28417  0030E2  5025               	movf	__display_start@cntr,w,c
 28418  0030E4  0D01               	mullw	1
 28419  0030E6  0E28               	movlw	low (_display_content+40)
 28420  0030E8  24F3               	addwf	prodl,w,c
 28421  0030EA  6ED9               	movwf	fsr2l,c
 28422  0030EC  0E02               	movlw	high (_display_content+40)
 28423  0030EE  20F4               	addwfc	prodh,w,c
 28424  0030F0  6EDA               	movwf	fsr2h,c
 28425  0030F2  0008               	tblrd		*
 28426  0030F4  CFF5 FFDF          	movff	tablat,indf2
 28427  0030F8  2A25               	incf	__display_start@cntr,f,c
 28428  0030FA                     l1581:
 28429  0030FA  5025               	movf	__display_start@cntr,w,c
 28430  0030FC  0D01               	mullw	1
 28431  0030FE  0EA6               	movlw	low _start_line3
 28432  003100  24F3               	addwf	prodl,w,c
 28433  003102  6EF6               	movwf	tblptrl,c
 28434  003104  0EBE               	movlw	high _start_line3
 28435  003106  20F4               	addwfc	prodh,w,c
 28436  003108  6EF7               	movwf	tblptrh,c
 28437  00310A                     	if	1	;There are 3 active tblptr bytes
 28438  00310A  6AF8               	clrf	tblptru,c
 28439  00310C  0E00               	movlw	low (__mediumconst shr (0+16))
 28440  00310E  22F8               	addwfc	tblptru,f,c
 28441  003110                     	endif
 28442  003110  0008               	tblrd		*
 28443  003112  50F5               	movf	tablat,w,c
 28444  003114  0900               	iorlw	0
 28445  003116  A4D8               	btfss	status,2,c
 28446  003118  D7D9               	goto	l1582
 28447                           
 28448                           ;display.c: 378: cntr = 0;
 28449  00311A  0E00               	movlw	0
 28450  00311C  6E25               	movwf	__display_start@cntr,c
 28451                           
 28452                           ;display.c: 379: while(start_line4[cntr])
 28453  00311E  D017               	goto	l1584
 28454  003120                     
 28455                           ;display.c: 380: display_content[3][cntr] = start_line4[cntr++];
 28456  003120  5025               	movf	__display_start@cntr,w,c
 28457  003122  0D01               	mullw	1
 28458  003124  0E16               	movlw	low _start_line4
 28459  003126  24F3               	addwf	prodl,w,c
 28460  003128  6EF6               	movwf	tblptrl,c
 28461  00312A  0EBE               	movlw	high _start_line4
 28462  00312C  20F4               	addwfc	prodh,w,c
 28463  00312E  6EF7               	movwf	tblptrh,c
 28464  003130                     	if	1	;There are 3 active tblptr bytes
 28465  003130  6AF8               	clrf	tblptru,c
 28466  003132  0E00               	movlw	low (__mediumconst shr (0+16))
 28467  003134  22F8               	addwfc	tblptru,f,c
 28468  003136                     	endif
 28469  003136  5025               	movf	__display_start@cntr,w,c
 28470  003138  0D01               	mullw	1
 28471  00313A  0E3C               	movlw	low (_display_content+60)
 28472  00313C  24F3               	addwf	prodl,w,c
 28473  00313E  6ED9               	movwf	fsr2l,c
 28474  003140  0E02               	movlw	high (_display_content+60)
 28475  003142  20F4               	addwfc	prodh,w,c
 28476  003144  6EDA               	movwf	fsr2h,c
 28477  003146  0008               	tblrd		*
 28478  003148  CFF5 FFDF          	movff	tablat,indf2
 28479  00314C  2A25               	incf	__display_start@cntr,f,c
 28480  00314E                     l1584:
 28481  00314E  5025               	movf	__display_start@cntr,w,c
 28482  003150  0D01               	mullw	1
 28483  003152  0E16               	movlw	low _start_line4
 28484  003154  24F3               	addwf	prodl,w,c
 28485  003156  6EF6               	movwf	tblptrl,c
 28486  003158  0EBE               	movlw	high _start_line4
 28487  00315A  20F4               	addwfc	prodh,w,c
 28488  00315C  6EF7               	movwf	tblptrh,c
 28489  00315E                     	if	1	;There are 3 active tblptr bytes
 28490  00315E  6AF8               	clrf	tblptru,c
 28491  003160  0E00               	movlw	low (__mediumconst shr (0+16))
 28492  003162  22F8               	addwfc	tblptru,f,c
 28493  003164                     	endif
 28494  003164  0008               	tblrd		*
 28495  003166  50F5               	movf	tablat,w,c
 28496  003168  0900               	iorlw	0
 28497  00316A  B4D8               	btfsc	status,2,c
 28498  00316C  0012               	return	
 28499  00316E  D7D8               	goto	l1585
 28500  003170                     __end_of__display_start:
 28501                           	opt stack 0
 28502                           tosu	equ	0xFFF
 28503                           tosh	equ	0xFFE
 28504                           tosl	equ	0xFFD
 28505                           pclath	equ	0xFFA
 28506                           tblptru	equ	0xFF8
 28507                           tblptrh	equ	0xFF7
 28508                           tblptrl	equ	0xFF6
 28509                           tablat	equ	0xFF5
 28510                           prodh	equ	0xFF4
 28511                           prodl	equ	0xFF3
 28512                           intcon	equ	0xFF2
 28513                           intcon2	equ	0xFF1
 28514                           intcon3	equ	0xFF0
 28515                           indf0	equ	0xFEF
 28516                           postinc0	equ	0xFEE
 28517                           fsr0h	equ	0xFEA
 28518                           fsr0l	equ	0xFE9
 28519                           wreg	equ	0xFE8
 28520                           indf1	equ	0xFE7
 28521                           postdec1	equ	0xFE5
 28522                           plusw1	equ	0xFE3
 28523                           fsr1h	equ	0xFE2
 28524                           fsr1l	equ	0xFE1
 28525                           indf2	equ	0xFDF
 28526                           postinc2	equ	0xFDE
 28527                           postdec2	equ	0xFDD
 28528                           plusw2	equ	0xFDB
 28529                           fsr2h	equ	0xFDA
 28530                           fsr2l	equ	0xFD9
 28531                           status	equ	0xFD8
 28532                           
 28533 ;; *************** function __display_search *****************
 28534 ;; Defined at:
 28535 ;;		line 383 in file "display.c"
 28536 ;; Parameters:    Size  Location     Type
 28537 ;;		None
 28538 ;; Auto vars:     Size  Location     Type
 28539 ;;  cntr            1    0[COMRAM] unsigned char 
 28540 ;; Return value:  Size  Location     Type
 28541 ;;                  1    wreg      void 
 28542 ;; Registers used:
 28543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28544 ;; Tracked objects:
 28545 ;;		On entry : 0/0
 28546 ;;		On exit  : 0/0
 28547 ;;		Unchanged: 0/0
 28548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28552 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28553 ;;Total ram usage:        1 bytes
 28554 ;; Hardware stack levels used:    1
 28555 ;; This function calls:
 28556 ;;		Nothing
 28557 ;; This function is called by:
 28558 ;;		_display_prepare
 28559 ;; This function uses a non-reentrant model
 28560 ;;
 28561                           
 28562                           	psect	text136
 28563  004A5A                     __ptext136:
 28564                           	opt stack 0
 28565  004A5A                     __display_search:
 28566                           	opt stack 26
 28567                           
 28568                           ;display.c: 385: uint8_t cntr;;display.c: 386: cntr = 0;
 28569                           
 28570                           ;incstack = 0
 28571  004A5A  0E00               	movlw	0
 28572  004A5C  6E01               	movwf	__display_search@cntr,c
 28573                           
 28574                           ;display.c: 387: while(search_line1[cntr])
 28575  004A5E  D017               	goto	l1590
 28576  004A60                     
 28577                           ;display.c: 388: display_content[0][cntr] = search_line1[cntr++];
 28578  004A60  5001               	movf	__display_search@cntr,w,c
 28579  004A62  0D01               	mullw	1
 28580  004A64  0ED8               	movlw	low _search_line1
 28581  004A66  24F3               	addwf	prodl,w,c
 28582  004A68  6EF6               	movwf	tblptrl,c
 28583  004A6A  0EBD               	movlw	high _search_line1
 28584  004A6C  20F4               	addwfc	prodh,w,c
 28585  004A6E  6EF7               	movwf	tblptrh,c
 28586  004A70                     	if	1	;There are 3 active tblptr bytes
 28587  004A70  6AF8               	clrf	tblptru,c
 28588  004A72  0E00               	movlw	low (__mediumconst shr (0+16))
 28589  004A74  22F8               	addwfc	tblptru,f,c
 28590  004A76                     	endif
 28591  004A76  5001               	movf	__display_search@cntr,w,c
 28592  004A78  0D01               	mullw	1
 28593  004A7A  0E00               	movlw	low _display_content
 28594  004A7C  24F3               	addwf	prodl,w,c
 28595  004A7E  6ED9               	movwf	fsr2l,c
 28596  004A80  0E02               	movlw	high _display_content
 28597  004A82  20F4               	addwfc	prodh,w,c
 28598  004A84  6EDA               	movwf	fsr2h,c
 28599  004A86  0008               	tblrd		*
 28600  004A88  CFF5 FFDF          	movff	tablat,indf2
 28601  004A8C  2A01               	incf	__display_search@cntr,f,c
 28602  004A8E                     l1590:
 28603  004A8E  5001               	movf	__display_search@cntr,w,c
 28604  004A90  0D01               	mullw	1
 28605  004A92  0ED8               	movlw	low _search_line1
 28606  004A94  24F3               	addwf	prodl,w,c
 28607  004A96  6EF6               	movwf	tblptrl,c
 28608  004A98  0EBD               	movlw	high _search_line1
 28609  004A9A  20F4               	addwfc	prodh,w,c
 28610  004A9C  6EF7               	movwf	tblptrh,c
 28611  004A9E                     	if	1	;There are 3 active tblptr bytes
 28612  004A9E  6AF8               	clrf	tblptru,c
 28613  004AA0  0E00               	movlw	low (__mediumconst shr (0+16))
 28614  004AA2  22F8               	addwfc	tblptru,f,c
 28615  004AA4                     	endif
 28616  004AA4  0008               	tblrd		*
 28617  004AA6  50F5               	movf	tablat,w,c
 28618  004AA8  0900               	iorlw	0
 28619  004AAA  A4D8               	btfss	status,2,c
 28620  004AAC  D7D9               	goto	l1591
 28621                           
 28622                           ;display.c: 389: cntr = 0;
 28623  004AAE  0E00               	movlw	0
 28624  004AB0  6E01               	movwf	__display_search@cntr,c
 28625                           
 28626                           ;display.c: 390: while(search_line2[cntr])
 28627  004AB2  D017               	goto	l1593
 28628  004AB4                     
 28629                           ;display.c: 391: display_content[1][cntr] = search_line2[cntr++];
 28630  004AB4  5001               	movf	__display_search@cntr,w,c
 28631  004AB6  0D01               	mullw	1
 28632  004AB8  0E17               	movlw	low _search_line2
 28633  004ABA  24F3               	addwf	prodl,w,c
 28634  004ABC  6EF6               	movwf	tblptrl,c
 28635  004ABE  0EBD               	movlw	high _search_line2
 28636  004AC0  20F4               	addwfc	prodh,w,c
 28637  004AC2  6EF7               	movwf	tblptrh,c
 28638  004AC4                     	if	1	;There are 3 active tblptr bytes
 28639  004AC4  6AF8               	clrf	tblptru,c
 28640  004AC6  0E00               	movlw	low (__mediumconst shr (0+16))
 28641  004AC8  22F8               	addwfc	tblptru,f,c
 28642  004ACA                     	endif
 28643  004ACA  5001               	movf	__display_search@cntr,w,c
 28644  004ACC  0D01               	mullw	1
 28645  004ACE  0E14               	movlw	low (_display_content+20)
 28646  004AD0  24F3               	addwf	prodl,w,c
 28647  004AD2  6ED9               	movwf	fsr2l,c
 28648  004AD4  0E02               	movlw	high (_display_content+20)
 28649  004AD6  20F4               	addwfc	prodh,w,c
 28650  004AD8  6EDA               	movwf	fsr2h,c
 28651  004ADA  0008               	tblrd		*
 28652  004ADC  CFF5 FFDF          	movff	tablat,indf2
 28653  004AE0  2A01               	incf	__display_search@cntr,f,c
 28654  004AE2                     l1593:
 28655  004AE2  5001               	movf	__display_search@cntr,w,c
 28656  004AE4  0D01               	mullw	1
 28657  004AE6  0E17               	movlw	low _search_line2
 28658  004AE8  24F3               	addwf	prodl,w,c
 28659  004AEA  6EF6               	movwf	tblptrl,c
 28660  004AEC  0EBD               	movlw	high _search_line2
 28661  004AEE  20F4               	addwfc	prodh,w,c
 28662  004AF0  6EF7               	movwf	tblptrh,c
 28663  004AF2                     	if	1	;There are 3 active tblptr bytes
 28664  004AF2  6AF8               	clrf	tblptru,c
 28665  004AF4  0E00               	movlw	low (__mediumconst shr (0+16))
 28666  004AF6  22F8               	addwfc	tblptru,f,c
 28667  004AF8                     	endif
 28668  004AF8  0008               	tblrd		*
 28669  004AFA  50F5               	movf	tablat,w,c
 28670  004AFC  0900               	iorlw	0
 28671  004AFE  A4D8               	btfss	status,2,c
 28672  004B00  D7D9               	goto	l1594
 28673                           
 28674                           ;display.c: 392: cntr = 0;
 28675  004B02  0E00               	movlw	0
 28676  004B04  6E01               	movwf	__display_search@cntr,c
 28677                           
 28678                           ;display.c: 393: while(search_line3[cntr])
 28679  004B06  D017               	goto	l1596
 28680  004B08                     
 28681                           ;display.c: 394: display_content[2][cntr] = search_line3[cntr++];
 28682  004B08  5001               	movf	__display_search@cntr,w,c
 28683  004B0A  0D01               	mullw	1
 28684  004B0C  0E96               	movlw	low _search_line3
 28685  004B0E  24F3               	addwf	prodl,w,c
 28686  004B10  6EF6               	movwf	tblptrl,c
 28687  004B12  0EBC               	movlw	high _search_line3
 28688  004B14  20F4               	addwfc	prodh,w,c
 28689  004B16  6EF7               	movwf	tblptrh,c
 28690  004B18                     	if	1	;There are 3 active tblptr bytes
 28691  004B18  6AF8               	clrf	tblptru,c
 28692  004B1A  0E00               	movlw	low (__mediumconst shr (0+16))
 28693  004B1C  22F8               	addwfc	tblptru,f,c
 28694  004B1E                     	endif
 28695  004B1E  5001               	movf	__display_search@cntr,w,c
 28696  004B20  0D01               	mullw	1
 28697  004B22  0E28               	movlw	low (_display_content+40)
 28698  004B24  24F3               	addwf	prodl,w,c
 28699  004B26  6ED9               	movwf	fsr2l,c
 28700  004B28  0E02               	movlw	high (_display_content+40)
 28701  004B2A  20F4               	addwfc	prodh,w,c
 28702  004B2C  6EDA               	movwf	fsr2h,c
 28703  004B2E  0008               	tblrd		*
 28704  004B30  CFF5 FFDF          	movff	tablat,indf2
 28705  004B34  2A01               	incf	__display_search@cntr,f,c
 28706  004B36                     l1596:
 28707  004B36  5001               	movf	__display_search@cntr,w,c
 28708  004B38  0D01               	mullw	1
 28709  004B3A  0E96               	movlw	low _search_line3
 28710  004B3C  24F3               	addwf	prodl,w,c
 28711  004B3E  6EF6               	movwf	tblptrl,c
 28712  004B40  0EBC               	movlw	high _search_line3
 28713  004B42  20F4               	addwfc	prodh,w,c
 28714  004B44  6EF7               	movwf	tblptrh,c
 28715  004B46                     	if	1	;There are 3 active tblptr bytes
 28716  004B46  6AF8               	clrf	tblptru,c
 28717  004B48  0E00               	movlw	low (__mediumconst shr (0+16))
 28718  004B4A  22F8               	addwfc	tblptru,f,c
 28719  004B4C                     	endif
 28720  004B4C  0008               	tblrd		*
 28721  004B4E  50F5               	movf	tablat,w,c
 28722  004B50  0900               	iorlw	0
 28723  004B52  A4D8               	btfss	status,2,c
 28724  004B54  D7D9               	goto	l1597
 28725                           
 28726                           ;display.c: 395: cntr = 0;
 28727  004B56  0E00               	movlw	0
 28728  004B58  6E01               	movwf	__display_search@cntr,c
 28729                           
 28730                           ;display.c: 396: while(search_line4[cntr])
 28731  004B5A  D017               	goto	l1599
 28732  004B5C                     
 28733                           ;display.c: 397: display_content[3][cntr] = search_line4[cntr++];
 28734  004B5C  5001               	movf	__display_search@cntr,w,c
 28735  004B5E  0D01               	mullw	1
 28736  004B60  0E57               	movlw	low _search_line4
 28737  004B62  24F3               	addwf	prodl,w,c
 28738  004B64  6EF6               	movwf	tblptrl,c
 28739  004B66  0EBE               	movlw	high _search_line4
 28740  004B68  20F4               	addwfc	prodh,w,c
 28741  004B6A  6EF7               	movwf	tblptrh,c
 28742  004B6C                     	if	1	;There are 3 active tblptr bytes
 28743  004B6C  6AF8               	clrf	tblptru,c
 28744  004B6E  0E00               	movlw	low (__mediumconst shr (0+16))
 28745  004B70  22F8               	addwfc	tblptru,f,c
 28746  004B72                     	endif
 28747  004B72  5001               	movf	__display_search@cntr,w,c
 28748  004B74  0D01               	mullw	1
 28749  004B76  0E3C               	movlw	low (_display_content+60)
 28750  004B78  24F3               	addwf	prodl,w,c
 28751  004B7A  6ED9               	movwf	fsr2l,c
 28752  004B7C  0E02               	movlw	high (_display_content+60)
 28753  004B7E  20F4               	addwfc	prodh,w,c
 28754  004B80  6EDA               	movwf	fsr2h,c
 28755  004B82  0008               	tblrd		*
 28756  004B84  CFF5 FFDF          	movff	tablat,indf2
 28757  004B88  2A01               	incf	__display_search@cntr,f,c
 28758  004B8A                     l1599:
 28759  004B8A  5001               	movf	__display_search@cntr,w,c
 28760  004B8C  0D01               	mullw	1
 28761  004B8E  0E57               	movlw	low _search_line4
 28762  004B90  24F3               	addwf	prodl,w,c
 28763  004B92  6EF6               	movwf	tblptrl,c
 28764  004B94  0EBE               	movlw	high _search_line4
 28765  004B96  20F4               	addwfc	prodh,w,c
 28766  004B98  6EF7               	movwf	tblptrh,c
 28767  004B9A                     	if	1	;There are 3 active tblptr bytes
 28768  004B9A  6AF8               	clrf	tblptru,c
 28769  004B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 28770  004B9E  22F8               	addwfc	tblptru,f,c
 28771  004BA0                     	endif
 28772  004BA0  0008               	tblrd		*
 28773  004BA2  50F5               	movf	tablat,w,c
 28774  004BA4  0900               	iorlw	0
 28775  004BA6  B4D8               	btfsc	status,2,c
 28776  004BA8  0012               	return	
 28777  004BAA  D7D8               	goto	l1600
 28778  004BAC                     __end_of__display_search:
 28779                           	opt stack 0
 28780                           tosu	equ	0xFFF
 28781                           tosh	equ	0xFFE
 28782                           tosl	equ	0xFFD
 28783                           pclath	equ	0xFFA
 28784                           tblptru	equ	0xFF8
 28785                           tblptrh	equ	0xFF7
 28786                           tblptrl	equ	0xFF6
 28787                           tablat	equ	0xFF5
 28788                           prodh	equ	0xFF4
 28789                           prodl	equ	0xFF3
 28790                           intcon	equ	0xFF2
 28791                           intcon2	equ	0xFF1
 28792                           intcon3	equ	0xFF0
 28793                           indf0	equ	0xFEF
 28794                           postinc0	equ	0xFEE
 28795                           fsr0h	equ	0xFEA
 28796                           fsr0l	equ	0xFE9
 28797                           wreg	equ	0xFE8
 28798                           indf1	equ	0xFE7
 28799                           postdec1	equ	0xFE5
 28800                           plusw1	equ	0xFE3
 28801                           fsr1h	equ	0xFE2
 28802                           fsr1l	equ	0xFE1
 28803                           indf2	equ	0xFDF
 28804                           postinc2	equ	0xFDE
 28805                           postdec2	equ	0xFDD
 28806                           plusw2	equ	0xFDB
 28807                           fsr2h	equ	0xFDA
 28808                           fsr2l	equ	0xFD9
 28809                           status	equ	0xFD8
 28810                           
 28811 ;; *************** function __display_rebooting *****************
 28812 ;; Defined at:
 28813 ;;		line 557 in file "display.c"
 28814 ;; Parameters:    Size  Location     Type
 28815 ;;		None
 28816 ;; Auto vars:     Size  Location     Type
 28817 ;;  cntr            1    0[COMRAM] unsigned char 
 28818 ;; Return value:  Size  Location     Type
 28819 ;;                  1    wreg      void 
 28820 ;; Registers used:
 28821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28822 ;; Tracked objects:
 28823 ;;		On entry : 0/0
 28824 ;;		On exit  : 0/0
 28825 ;;		Unchanged: 0/0
 28826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28831 ;;Total ram usage:        1 bytes
 28832 ;; Hardware stack levels used:    1
 28833 ;; This function calls:
 28834 ;;		Nothing
 28835 ;; This function is called by:
 28836 ;;		_display_prepare
 28837 ;; This function uses a non-reentrant model
 28838 ;;
 28839                           
 28840                           	psect	text137
 28841  008CEA                     __ptext137:
 28842                           	opt stack 0
 28843  008CEA                     __display_rebooting:
 28844                           	opt stack 26
 28845                           
 28846                           ;display.c: 559: uint8_t cntr;;display.c: 560: cntr = 0;
 28847                           
 28848                           ;incstack = 0
 28849  008CEA  0E00               	movlw	0
 28850  008CEC  6E01               	movwf	__display_rebooting@cntr,c
 28851                           
 28852                           ;display.c: 561: while(reboot_line1[cntr])
 28853  008CEE  D017               	goto	l1714
 28854  008CF0                     
 28855                           ;display.c: 562: display_content[0][cntr] = reboot_line1[cntr++];
 28856  008CF0  5001               	movf	__display_rebooting@cntr,w,c
 28857  008CF2  0D01               	mullw	1
 28858  008CF4  0E33               	movlw	low _reboot_line1
 28859  008CF6  24F3               	addwf	prodl,w,c
 28860  008CF8  6EF6               	movwf	tblptrl,c
 28861  008CFA  0EBE               	movlw	high _reboot_line1
 28862  008CFC  20F4               	addwfc	prodh,w,c
 28863  008CFE  6EF7               	movwf	tblptrh,c
 28864  008D00                     	if	1	;There are 3 active tblptr bytes
 28865  008D00  6AF8               	clrf	tblptru,c
 28866  008D02  0E00               	movlw	low (__mediumconst shr (0+16))
 28867  008D04  22F8               	addwfc	tblptru,f,c
 28868  008D06                     	endif
 28869  008D06  5001               	movf	__display_rebooting@cntr,w,c
 28870  008D08  0D01               	mullw	1
 28871  008D0A  0E00               	movlw	low _display_content
 28872  008D0C  24F3               	addwf	prodl,w,c
 28873  008D0E  6ED9               	movwf	fsr2l,c
 28874  008D10  0E02               	movlw	high _display_content
 28875  008D12  20F4               	addwfc	prodh,w,c
 28876  008D14  6EDA               	movwf	fsr2h,c
 28877  008D16  0008               	tblrd		*
 28878  008D18  CFF5 FFDF          	movff	tablat,indf2
 28879  008D1C  2A01               	incf	__display_rebooting@cntr,f,c
 28880  008D1E                     l1714:
 28881  008D1E  5001               	movf	__display_rebooting@cntr,w,c
 28882  008D20  0D01               	mullw	1
 28883  008D22  0E33               	movlw	low _reboot_line1
 28884  008D24  24F3               	addwf	prodl,w,c
 28885  008D26  6EF6               	movwf	tblptrl,c
 28886  008D28  0EBE               	movlw	high _reboot_line1
 28887  008D2A  20F4               	addwfc	prodh,w,c
 28888  008D2C  6EF7               	movwf	tblptrh,c
 28889  008D2E                     	if	1	;There are 3 active tblptr bytes
 28890  008D2E  6AF8               	clrf	tblptru,c
 28891  008D30  0E00               	movlw	low (__mediumconst shr (0+16))
 28892  008D32  22F8               	addwfc	tblptru,f,c
 28893  008D34                     	endif
 28894  008D34  0008               	tblrd		*
 28895  008D36  50F5               	movf	tablat,w,c
 28896  008D38  0900               	iorlw	0
 28897  008D3A  B4D8               	btfsc	status,2,c
 28898  008D3C  0012               	return	
 28899  008D3E  D7D8               	goto	l1715
 28900  008D40                     __end_of__display_rebooting:
 28901                           	opt stack 0
 28902                           tosu	equ	0xFFF
 28903                           tosh	equ	0xFFE
 28904                           tosl	equ	0xFFD
 28905                           pclath	equ	0xFFA
 28906                           tblptru	equ	0xFF8
 28907                           tblptrh	equ	0xFF7
 28908                           tblptrl	equ	0xFF6
 28909                           tablat	equ	0xFF5
 28910                           prodh	equ	0xFF4
 28911                           prodl	equ	0xFF3
 28912                           intcon	equ	0xFF2
 28913                           intcon2	equ	0xFF1
 28914                           intcon3	equ	0xFF0
 28915                           indf0	equ	0xFEF
 28916                           postinc0	equ	0xFEE
 28917                           fsr0h	equ	0xFEA
 28918                           fsr0l	equ	0xFE9
 28919                           wreg	equ	0xFE8
 28920                           indf1	equ	0xFE7
 28921                           postdec1	equ	0xFE5
 28922                           plusw1	equ	0xFE3
 28923                           fsr1h	equ	0xFE2
 28924                           fsr1l	equ	0xFE1
 28925                           indf2	equ	0xFDF
 28926                           postinc2	equ	0xFDE
 28927                           postdec2	equ	0xFDD
 28928                           plusw2	equ	0xFDB
 28929                           fsr2h	equ	0xFDA
 28930                           fsr2l	equ	0xFD9
 28931                           status	equ	0xFD8
 28932                           
 28933 ;; *************** function __display_programming *****************
 28934 ;; Defined at:
 28935 ;;		line 515 in file "display.c"
 28936 ;; Parameters:    Size  Location     Type
 28937 ;;		None
 28938 ;; Auto vars:     Size  Location     Type
 28939 ;;  cntr            1   30[COMRAM] unsigned char 
 28940 ;; Return value:  Size  Location     Type
 28941 ;;                  1    wreg      void 
 28942 ;; Registers used:
 28943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28944 ;; Tracked objects:
 28945 ;;		On entry : 0/0
 28946 ;;		On exit  : 0/0
 28947 ;;		Unchanged: 0/0
 28948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28953 ;;Total ram usage:        1 bytes
 28954 ;; Hardware stack levels used:    1
 28955 ;; Hardware stack levels required when called:    4
 28956 ;; This function calls:
 28957 ;;		__display_itoa_u16
 28958 ;;		_bootloader_get_entries
 28959 ;;		_bootloader_get_flashPagesWritten
 28960 ;;		_bootloader_get_total_entries
 28961 ;; This function is called by:
 28962 ;;		_display_prepare
 28963 ;; This function uses a non-reentrant model
 28964 ;;
 28965                           
 28966                           	psect	text138
 28967  003716                     __ptext138:
 28968                           	opt stack 0
 28969  003716                     __display_programming:
 28970                           	opt stack 22
 28971                           
 28972                           ;display.c: 517: uint8_t cntr;;display.c: 518: cntr = 0;
 28973                           
 28974                           ;incstack = 0
 28975  003716  0E00               	movlw	0
 28976  003718  6E1F               	movwf	__display_programming@cntr,c
 28977                           
 28978                           ;display.c: 519: while(programming_line1[cntr])
 28979  00371A  D017               	goto	l1684
 28980  00371C                     
 28981                           ;display.c: 520: display_content[0][cntr] = programming_line1[cntr++];
 28982  00371C  501F               	movf	__display_programming@cntr,w,c
 28983  00371E  0D01               	mullw	1
 28984  003720  0E88               	movlw	low _programming_line1
 28985  003722  24F3               	addwf	prodl,w,c
 28986  003724  6EF6               	movwf	tblptrl,c
 28987  003726  0EBD               	movlw	high _programming_line1
 28988  003728  20F4               	addwfc	prodh,w,c
 28989  00372A  6EF7               	movwf	tblptrh,c
 28990  00372C                     	if	1	;There are 3 active tblptr bytes
 28991  00372C  6AF8               	clrf	tblptru,c
 28992  00372E  0E00               	movlw	low (__mediumconst shr (0+16))
 28993  003730  22F8               	addwfc	tblptru,f,c
 28994  003732                     	endif
 28995  003732  501F               	movf	__display_programming@cntr,w,c
 28996  003734  0D01               	mullw	1
 28997  003736  0E00               	movlw	low _display_content
 28998  003738  24F3               	addwf	prodl,w,c
 28999  00373A  6ED9               	movwf	fsr2l,c
 29000  00373C  0E02               	movlw	high _display_content
 29001  00373E  20F4               	addwfc	prodh,w,c
 29002  003740  6EDA               	movwf	fsr2h,c
 29003  003742  0008               	tblrd		*
 29004  003744  CFF5 FFDF          	movff	tablat,indf2
 29005  003748  2A1F               	incf	__display_programming@cntr,f,c
 29006  00374A                     l1684:
 29007  00374A  501F               	movf	__display_programming@cntr,w,c
 29008  00374C  0D01               	mullw	1
 29009  00374E  0E88               	movlw	low _programming_line1
 29010  003750  24F3               	addwf	prodl,w,c
 29011  003752  6EF6               	movwf	tblptrl,c
 29012  003754  0EBD               	movlw	high _programming_line1
 29013  003756  20F4               	addwfc	prodh,w,c
 29014  003758  6EF7               	movwf	tblptrh,c
 29015  00375A                     	if	1	;There are 3 active tblptr bytes
 29016  00375A  6AF8               	clrf	tblptru,c
 29017  00375C  0E00               	movlw	low (__mediumconst shr (0+16))
 29018  00375E  22F8               	addwfc	tblptru,f,c
 29019  003760                     	endif
 29020  003760  0008               	tblrd		*
 29021  003762  50F5               	movf	tablat,w,c
 29022  003764  0900               	iorlw	0
 29023  003766  A4D8               	btfss	status,2,c
 29024  003768  D7D9               	goto	l1685
 29025                           
 29026                           ;display.c: 522: cntr = 0;
 29027  00376A  0E00               	movlw	0
 29028  00376C  6E1F               	movwf	__display_programming@cntr,c
 29029                           
 29030                           ;display.c: 523: while(programming_line2[cntr])
 29031  00376E  D017               	goto	l1687
 29032  003770                     
 29033                           ;display.c: 524: display_content[1][cntr] = programming_line2[cntr++];
 29034  003770  501F               	movf	__display_programming@cntr,w,c
 29035  003772  0D01               	mullw	1
 29036  003774  0ED0               	movlw	low _programming_line2
 29037  003776  24F3               	addwf	prodl,w,c
 29038  003778  6EF6               	movwf	tblptrl,c
 29039  00377A  0EBC               	movlw	high _programming_line2
 29040  00377C  20F4               	addwfc	prodh,w,c
 29041  00377E  6EF7               	movwf	tblptrh,c
 29042  003780                     	if	1	;There are 3 active tblptr bytes
 29043  003780  6AF8               	clrf	tblptru,c
 29044  003782  0E00               	movlw	low (__mediumconst shr (0+16))
 29045  003784  22F8               	addwfc	tblptru,f,c
 29046  003786                     	endif
 29047  003786  501F               	movf	__display_programming@cntr,w,c
 29048  003788  0D01               	mullw	1
 29049  00378A  0E14               	movlw	low (_display_content+20)
 29050  00378C  24F3               	addwf	prodl,w,c
 29051  00378E  6ED9               	movwf	fsr2l,c
 29052  003790  0E02               	movlw	high (_display_content+20)
 29053  003792  20F4               	addwfc	prodh,w,c
 29054  003794  6EDA               	movwf	fsr2h,c
 29055  003796  0008               	tblrd		*
 29056  003798  CFF5 FFDF          	movff	tablat,indf2
 29057  00379C  2A1F               	incf	__display_programming@cntr,f,c
 29058  00379E                     l1687:
 29059  00379E  501F               	movf	__display_programming@cntr,w,c
 29060  0037A0  0D01               	mullw	1
 29061  0037A2  0ED0               	movlw	low _programming_line2
 29062  0037A4  24F3               	addwf	prodl,w,c
 29063  0037A6  6EF6               	movwf	tblptrl,c
 29064  0037A8  0EBC               	movlw	high _programming_line2
 29065  0037AA  20F4               	addwfc	prodh,w,c
 29066  0037AC  6EF7               	movwf	tblptrh,c
 29067  0037AE                     	if	1	;There are 3 active tblptr bytes
 29068  0037AE  6AF8               	clrf	tblptru,c
 29069  0037B0  0E00               	movlw	low (__mediumconst shr (0+16))
 29070  0037B2  22F8               	addwfc	tblptru,f,c
 29071  0037B4                     	endif
 29072  0037B4  0008               	tblrd		*
 29073  0037B6  50F5               	movf	tablat,w,c
 29074  0037B8  0900               	iorlw	0
 29075  0037BA  A4D8               	btfss	status,2,c
 29076  0037BC  D7D9               	goto	l1688
 29077                           
 29078                           ;display.c: 526: cntr = 0;
 29079  0037BE  0E00               	movlw	0
 29080  0037C0  6E1F               	movwf	__display_programming@cntr,c
 29081                           
 29082                           ;display.c: 527: while(programming_line3[cntr])
 29083  0037C2  D017               	goto	l1690
 29084  0037C4                     
 29085                           ;display.c: 528: display_content[2][cntr] = programming_line3[cntr++];
 29086  0037C4  501F               	movf	__display_programming@cntr,w,c
 29087  0037C6  0D01               	mullw	1
 29088  0037C8  0E81               	movlw	low _programming_line3
 29089  0037CA  24F3               	addwf	prodl,w,c
 29090  0037CC  6EF6               	movwf	tblptrl,c
 29091  0037CE  0EBE               	movlw	high _programming_line3
 29092  0037D0  20F4               	addwfc	prodh,w,c
 29093  0037D2  6EF7               	movwf	tblptrh,c
 29094  0037D4                     	if	1	;There are 3 active tblptr bytes
 29095  0037D4  6AF8               	clrf	tblptru,c
 29096  0037D6  0E00               	movlw	low (__mediumconst shr (0+16))
 29097  0037D8  22F8               	addwfc	tblptru,f,c
 29098  0037DA                     	endif
 29099  0037DA  501F               	movf	__display_programming@cntr,w,c
 29100  0037DC  0D01               	mullw	1
 29101  0037DE  0E28               	movlw	low (_display_content+40)
 29102  0037E0  24F3               	addwf	prodl,w,c
 29103  0037E2  6ED9               	movwf	fsr2l,c
 29104  0037E4  0E02               	movlw	high (_display_content+40)
 29105  0037E6  20F4               	addwfc	prodh,w,c
 29106  0037E8  6EDA               	movwf	fsr2h,c
 29107  0037EA  0008               	tblrd		*
 29108  0037EC  CFF5 FFDF          	movff	tablat,indf2
 29109  0037F0  2A1F               	incf	__display_programming@cntr,f,c
 29110  0037F2                     l1690:
 29111  0037F2  501F               	movf	__display_programming@cntr,w,c
 29112  0037F4  0D01               	mullw	1
 29113  0037F6  0E81               	movlw	low _programming_line3
 29114  0037F8  24F3               	addwf	prodl,w,c
 29115  0037FA  6EF6               	movwf	tblptrl,c
 29116  0037FC  0EBE               	movlw	high _programming_line3
 29117  0037FE  20F4               	addwfc	prodh,w,c
 29118  003800  6EF7               	movwf	tblptrh,c
 29119  003802                     	if	1	;There are 3 active tblptr bytes
 29120  003802  6AF8               	clrf	tblptru,c
 29121  003804  0E00               	movlw	low (__mediumconst shr (0+16))
 29122  003806  22F8               	addwfc	tblptru,f,c
 29123  003808                     	endif
 29124  003808  0008               	tblrd		*
 29125  00380A  50F5               	movf	tablat,w,c
 29126  00380C  0900               	iorlw	0
 29127  00380E  A4D8               	btfss	status,2,c
 29128  003810  D7D9               	goto	l1691
 29129                           
 29130                           ;display.c: 529: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 29131  003812  EC5E  F04E         	call	_bootloader_get_entries	;wreg free
 29132  003816  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29133  00381A  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29134  00381E  6A1B               	clrf	__display_itoa_u16@value+2,c
 29135  003820  6A1C               	clrf	__display_itoa_u16@value+3,c
 29136  003822  501F               	movf	__display_programming@cntr,w,c
 29137  003824  0D01               	mullw	1
 29138  003826  0E28               	movlw	low (_display_content+40)
 29139  003828  24F3               	addwf	prodl,w,c
 29140  00382A  6E1D               	movwf	__display_itoa_u16@text,c
 29141  00382C  0E02               	movlw	high (_display_content+40)
 29142  00382E  20F4               	addwfc	prodh,w,c
 29143  003830  6E1E               	movwf	__display_itoa_u16@text+1,c
 29144  003832  ECF5  F037         	call	__display_itoa_u16	;wreg free
 29145  003836  261F               	addwf	__display_programming@cntr,f,c
 29146                           
 29147                           ;display.c: 530: display_content[2][cntr++] = '/';
 29148  003838  501F               	movf	__display_programming@cntr,w,c
 29149  00383A  0D01               	mullw	1
 29150  00383C  0E28               	movlw	low (_display_content+40)
 29151  00383E  24F3               	addwf	prodl,w,c
 29152  003840  6ED9               	movwf	fsr2l,c
 29153  003842  0E02               	movlw	high (_display_content+40)
 29154  003844  20F4               	addwfc	prodh,w,c
 29155  003846  6EDA               	movwf	fsr2h,c
 29156  003848  0E2F               	movlw	47
 29157  00384A  6EDF               	movwf	indf2,c
 29158  00384C  2A1F               	incf	__display_programming@cntr,f,c
 29159                           
 29160                           ;display.c: 531: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 29161  00384E  EC68  F04E         	call	_bootloader_get_total_entries	;wreg free
 29162  003852  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 29163  003856  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 29164  00385A  6A1B               	clrf	__display_itoa_u16@value+2,c
 29165  00385C  6A1C               	clrf	__display_itoa_u16@value+3,c
 29166  00385E  501F               	movf	__display_programming@cntr,w,c
 29167  003860  0D01               	mullw	1
 29168  003862  0E28               	movlw	low (_display_content+40)
 29169  003864  24F3               	addwf	prodl,w,c
 29170  003866  6E1D               	movwf	__display_itoa_u16@text,c
 29171  003868  0E02               	movlw	high (_display_content+40)
 29172  00386A  20F4               	addwfc	prodh,w,c
 29173  00386C  6E1E               	movwf	__display_itoa_u16@text+1,c
 29174  00386E  ECF5  F037         	call	__display_itoa_u16	;wreg free
 29175                           
 29176                           ;display.c: 533: cntr = 0;
 29177  003872  0E00               	movlw	0
 29178  003874  6E1F               	movwf	__display_programming@cntr,c
 29179                           
 29180                           ;display.c: 534: while(programming_line4[cntr])
 29181  003876  D017               	goto	l1693
 29182  003878                     
 29183                           ;display.c: 535: display_content[3][cntr] = programming_line4[cntr++];
 29184  003878  501F               	movf	__display_programming@cntr,w,c
 29185  00387A  0D01               	mullw	1
 29186  00387C  0E78               	movlw	low _programming_line4
 29187  00387E  24F3               	addwf	prodl,w,c
 29188  003880  6EF6               	movwf	tblptrl,c
 29189  003882  0EBD               	movlw	high _programming_line4
 29190  003884  20F4               	addwfc	prodh,w,c
 29191  003886  6EF7               	movwf	tblptrh,c
 29192  003888                     	if	1	;There are 3 active tblptr bytes
 29193  003888  6AF8               	clrf	tblptru,c
 29194  00388A  0E00               	movlw	low (__mediumconst shr (0+16))
 29195  00388C  22F8               	addwfc	tblptru,f,c
 29196  00388E                     	endif
 29197  00388E  501F               	movf	__display_programming@cntr,w,c
 29198  003890  0D01               	mullw	1
 29199  003892  0E3C               	movlw	low (_display_content+60)
 29200  003894  24F3               	addwf	prodl,w,c
 29201  003896  6ED9               	movwf	fsr2l,c
 29202  003898  0E02               	movlw	high (_display_content+60)
 29203  00389A  20F4               	addwfc	prodh,w,c
 29204  00389C  6EDA               	movwf	fsr2h,c
 29205  00389E  0008               	tblrd		*
 29206  0038A0  CFF5 FFDF          	movff	tablat,indf2
 29207  0038A4  2A1F               	incf	__display_programming@cntr,f,c
 29208  0038A6                     l1693:
 29209  0038A6  501F               	movf	__display_programming@cntr,w,c
 29210  0038A8  0D01               	mullw	1
 29211  0038AA  0E78               	movlw	low _programming_line4
 29212  0038AC  24F3               	addwf	prodl,w,c
 29213  0038AE  6EF6               	movwf	tblptrl,c
 29214  0038B0  0EBD               	movlw	high _programming_line4
 29215  0038B2  20F4               	addwfc	prodh,w,c
 29216  0038B4  6EF7               	movwf	tblptrh,c
 29217  0038B6                     	if	1	;There are 3 active tblptr bytes
 29218  0038B6  6AF8               	clrf	tblptru,c
 29219  0038B8  0E00               	movlw	low (__mediumconst shr (0+16))
 29220  0038BA  22F8               	addwfc	tblptru,f,c
 29221  0038BC                     	endif
 29222  0038BC  0008               	tblrd		*
 29223  0038BE  50F5               	movf	tablat,w,c
 29224  0038C0  0900               	iorlw	0
 29225  0038C2  A4D8               	btfss	status,2,c
 29226  0038C4  D7D9               	goto	l1694
 29227                           
 29228                           ;display.c: 536: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 29229  0038C6  EC63  F04E         	call	_bootloader_get_flashPagesWritten	;wreg free
 29230  0038CA  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 29231  0038CE  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 29232  0038D2  6A1B               	clrf	__display_itoa_u16@value+2,c
 29233  0038D4  6A1C               	clrf	__display_itoa_u16@value+3,c
 29234  0038D6  501F               	movf	__display_programming@cntr,w,c
 29235  0038D8  0D01               	mullw	1
 29236  0038DA  0E3C               	movlw	low (_display_content+60)
 29237  0038DC  24F3               	addwf	prodl,w,c
 29238  0038DE  6E1D               	movwf	__display_itoa_u16@text,c
 29239  0038E0  0E02               	movlw	high (_display_content+60)
 29240  0038E2  20F4               	addwfc	prodh,w,c
 29241  0038E4  6E1E               	movwf	__display_itoa_u16@text+1,c
 29242  0038E6  ECF5  F037         	call	__display_itoa_u16	;wreg free
 29243  0038EA  0012               	return		;funcret
 29244  0038EC                     __end_of__display_programming:
 29245                           	opt stack 0
 29246                           tosu	equ	0xFFF
 29247                           tosh	equ	0xFFE
 29248                           tosl	equ	0xFFD
 29249                           pclath	equ	0xFFA
 29250                           tblptru	equ	0xFF8
 29251                           tblptrh	equ	0xFF7
 29252                           tblptrl	equ	0xFF6
 29253                           tablat	equ	0xFF5
 29254                           prodh	equ	0xFF4
 29255                           prodl	equ	0xFF3
 29256                           intcon	equ	0xFF2
 29257                           intcon2	equ	0xFF1
 29258                           intcon3	equ	0xFF0
 29259                           indf0	equ	0xFEF
 29260                           postinc0	equ	0xFEE
 29261                           fsr0h	equ	0xFEA
 29262                           fsr0l	equ	0xFE9
 29263                           wreg	equ	0xFE8
 29264                           indf1	equ	0xFE7
 29265                           postdec1	equ	0xFE5
 29266                           plusw1	equ	0xFE3
 29267                           fsr1h	equ	0xFE2
 29268                           fsr1l	equ	0xFE1
 29269                           indf2	equ	0xFDF
 29270                           postinc2	equ	0xFDE
 29271                           postdec2	equ	0xFDD
 29272                           plusw2	equ	0xFDB
 29273                           fsr2h	equ	0xFDA
 29274                           fsr2l	equ	0xFD9
 29275                           status	equ	0xFD8
 29276                           
 29277 ;; *************** function __display_found *****************
 29278 ;; Defined at:
 29279 ;;		line 400 in file "display.c"
 29280 ;; Parameters:    Size  Location     Type
 29281 ;;		None
 29282 ;; Auto vars:     Size  Location     Type
 29283 ;;  cntr            1   39[COMRAM] unsigned char 
 29284 ;;  start           1   38[COMRAM] unsigned char 
 29285 ;; Return value:  Size  Location     Type
 29286 ;;                  1    wreg      void 
 29287 ;; Registers used:
 29288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29289 ;; Tracked objects:
 29290 ;;		On entry : 0/0
 29291 ;;		On exit  : 0/0
 29292 ;;		Unchanged: 0/0
 29293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29298 ;;Total ram usage:        4 bytes
 29299 ;; Hardware stack levels used:    1
 29300 ;; Hardware stack levels required when called:    5
 29301 ;; This function calls:
 29302 ;;		__display_itoa_u32
 29303 ;;		_bootloader_get_file_size
 29304 ;; This function is called by:
 29305 ;;		_display_prepare
 29306 ;; This function uses a non-reentrant model
 29307 ;;
 29308                           
 29309                           	psect	text139
 29310  00335E                     __ptext139:
 29311                           	opt stack 0
 29312  00335E                     __display_found:
 29313                           	opt stack 21
 29314                           
 29315                           ;display.c: 402: uint8_t cntr;;display.c: 403: uint8_t start;;display.c: 405: cntr = 0;
 29316                           
 29317                           ;incstack = 0
 29318  00335E  0E00               	movlw	0
 29319  003360  6E28               	movwf	__display_found@cntr,c
 29320                           
 29321                           ;display.c: 406: while(found_line1[cntr])
 29322  003362  D017               	goto	l1605
 29323  003364                     
 29324                           ;display.c: 407: display_content[0][cntr] = found_line1[cntr++];
 29325  003364  5028               	movf	__display_found@cntr,w,c
 29326  003366  0D01               	mullw	1
 29327  003368  0EC8               	movlw	low _found_line1
 29328  00336A  24F3               	addwf	prodl,w,c
 29329  00336C  6EF6               	movwf	tblptrl,c
 29330  00336E  0EBD               	movlw	high _found_line1
 29331  003370  20F4               	addwfc	prodh,w,c
 29332  003372  6EF7               	movwf	tblptrh,c
 29333  003374                     	if	1	;There are 3 active tblptr bytes
 29334  003374  6AF8               	clrf	tblptru,c
 29335  003376  0E00               	movlw	low (__mediumconst shr (0+16))
 29336  003378  22F8               	addwfc	tblptru,f,c
 29337  00337A                     	endif
 29338  00337A  5028               	movf	__display_found@cntr,w,c
 29339  00337C  0D01               	mullw	1
 29340  00337E  0E00               	movlw	low _display_content
 29341  003380  24F3               	addwf	prodl,w,c
 29342  003382  6ED9               	movwf	fsr2l,c
 29343  003384  0E02               	movlw	high _display_content
 29344  003386  20F4               	addwfc	prodh,w,c
 29345  003388  6EDA               	movwf	fsr2h,c
 29346  00338A  0008               	tblrd		*
 29347  00338C  CFF5 FFDF          	movff	tablat,indf2
 29348  003390  2A28               	incf	__display_found@cntr,f,c
 29349  003392                     l1605:
 29350  003392  5028               	movf	__display_found@cntr,w,c
 29351  003394  0D01               	mullw	1
 29352  003396  0EC8               	movlw	low _found_line1
 29353  003398  24F3               	addwf	prodl,w,c
 29354  00339A  6EF6               	movwf	tblptrl,c
 29355  00339C  0EBD               	movlw	high _found_line1
 29356  00339E  20F4               	addwfc	prodh,w,c
 29357  0033A0  6EF7               	movwf	tblptrh,c
 29358  0033A2                     	if	1	;There are 3 active tblptr bytes
 29359  0033A2  6AF8               	clrf	tblptru,c
 29360  0033A4  0E00               	movlw	low (__mediumconst shr (0+16))
 29361  0033A6  22F8               	addwfc	tblptru,f,c
 29362  0033A8                     	endif
 29363  0033A8  0008               	tblrd		*
 29364  0033AA  50F5               	movf	tablat,w,c
 29365  0033AC  0900               	iorlw	0
 29366  0033AE  A4D8               	btfss	status,2,c
 29367  0033B0  D7D9               	goto	l1606
 29368                           
 29369                           ;display.c: 409: cntr = 0;
 29370  0033B2  0E00               	movlw	0
 29371  0033B4  6E28               	movwf	__display_found@cntr,c
 29372                           
 29373                           ;display.c: 410: while(found_line2[cntr])
 29374  0033B6  D017               	goto	l1608
 29375  0033B8                     
 29376                           ;display.c: 411: display_content[1][cntr] = found_line2[cntr++];
 29377  0033B8  5028               	movf	__display_found@cntr,w,c
 29378  0033BA  0D01               	mullw	1
 29379  0033BC  0EBD               	movlw	low _found_line2
 29380  0033BE  24F3               	addwf	prodl,w,c
 29381  0033C0  6EF6               	movwf	tblptrl,c
 29382  0033C2  0EBC               	movlw	high _found_line2
 29383  0033C4  20F4               	addwfc	prodh,w,c
 29384  0033C6  6EF7               	movwf	tblptrh,c
 29385  0033C8                     	if	1	;There are 3 active tblptr bytes
 29386  0033C8  6AF8               	clrf	tblptru,c
 29387  0033CA  0E00               	movlw	low (__mediumconst shr (0+16))
 29388  0033CC  22F8               	addwfc	tblptru,f,c
 29389  0033CE                     	endif
 29390  0033CE  5028               	movf	__display_found@cntr,w,c
 29391  0033D0  0D01               	mullw	1
 29392  0033D2  0E14               	movlw	low (_display_content+20)
 29393  0033D4  24F3               	addwf	prodl,w,c
 29394  0033D6  6ED9               	movwf	fsr2l,c
 29395  0033D8  0E02               	movlw	high (_display_content+20)
 29396  0033DA  20F4               	addwfc	prodh,w,c
 29397  0033DC  6EDA               	movwf	fsr2h,c
 29398  0033DE  0008               	tblrd		*
 29399  0033E0  CFF5 FFDF          	movff	tablat,indf2
 29400  0033E4  2A28               	incf	__display_found@cntr,f,c
 29401  0033E6                     l1608:
 29402  0033E6  5028               	movf	__display_found@cntr,w,c
 29403  0033E8  0D01               	mullw	1
 29404  0033EA  0EBD               	movlw	low _found_line2
 29405  0033EC  24F3               	addwf	prodl,w,c
 29406  0033EE  6EF6               	movwf	tblptrl,c
 29407  0033F0  0EBC               	movlw	high _found_line2
 29408  0033F2  20F4               	addwfc	prodh,w,c
 29409  0033F4  6EF7               	movwf	tblptrh,c
 29410  0033F6                     	if	1	;There are 3 active tblptr bytes
 29411  0033F6  6AF8               	clrf	tblptru,c
 29412  0033F8  0E00               	movlw	low (__mediumconst shr (0+16))
 29413  0033FA  22F8               	addwfc	tblptru,f,c
 29414  0033FC                     	endif
 29415  0033FC  0008               	tblrd		*
 29416  0033FE  50F5               	movf	tablat,w,c
 29417  003400  0900               	iorlw	0
 29418  003402  A4D8               	btfss	status,2,c
 29419  003404  D7D9               	goto	l1609
 29420                           
 29421                           ;display.c: 413: cntr = 0;
 29422  003406  0E00               	movlw	0
 29423  003408  6E28               	movwf	__display_found@cntr,c
 29424                           
 29425                           ;display.c: 414: while(found_line3[cntr])
 29426  00340A  D017               	goto	l1611
 29427  00340C                     
 29428                           ;display.c: 415: display_content[2][cntr] = found_line3[cntr++];
 29429  00340C  5028               	movf	__display_found@cntr,w,c
 29430  00340E  0D01               	mullw	1
 29431  003410  0E96               	movlw	low _found_line3
 29432  003412  24F3               	addwf	prodl,w,c
 29433  003414  6EF6               	movwf	tblptrl,c
 29434  003416  0EBE               	movlw	high _found_line3
 29435  003418  20F4               	addwfc	prodh,w,c
 29436  00341A  6EF7               	movwf	tblptrh,c
 29437  00341C                     	if	1	;There are 3 active tblptr bytes
 29438  00341C  6AF8               	clrf	tblptru,c
 29439  00341E  0E00               	movlw	low (__mediumconst shr (0+16))
 29440  003420  22F8               	addwfc	tblptru,f,c
 29441  003422                     	endif
 29442  003422  5028               	movf	__display_found@cntr,w,c
 29443  003424  0D01               	mullw	1
 29444  003426  0E28               	movlw	low (_display_content+40)
 29445  003428  24F3               	addwf	prodl,w,c
 29446  00342A  6ED9               	movwf	fsr2l,c
 29447  00342C  0E02               	movlw	high (_display_content+40)
 29448  00342E  20F4               	addwfc	prodh,w,c
 29449  003430  6EDA               	movwf	fsr2h,c
 29450  003432  0008               	tblrd		*
 29451  003434  CFF5 FFDF          	movff	tablat,indf2
 29452  003438  2A28               	incf	__display_found@cntr,f,c
 29453  00343A                     l1611:
 29454  00343A  5028               	movf	__display_found@cntr,w,c
 29455  00343C  0D01               	mullw	1
 29456  00343E  0E96               	movlw	low _found_line3
 29457  003440  24F3               	addwf	prodl,w,c
 29458  003442  6EF6               	movwf	tblptrl,c
 29459  003444  0EBE               	movlw	high _found_line3
 29460  003446  20F4               	addwfc	prodh,w,c
 29461  003448  6EF7               	movwf	tblptrh,c
 29462  00344A                     	if	1	;There are 3 active tblptr bytes
 29463  00344A  6AF8               	clrf	tblptru,c
 29464  00344C  0E00               	movlw	low (__mediumconst shr (0+16))
 29465  00344E  22F8               	addwfc	tblptru,f,c
 29466  003450                     	endif
 29467  003450  0008               	tblrd		*
 29468  003452  50F5               	movf	tablat,w,c
 29469  003454  0900               	iorlw	0
 29470  003456  A4D8               	btfss	status,2,c
 29471  003458  D7D9               	goto	l1612
 29472                           
 29473                           ;display.c: 416: start = cntr;
 29474  00345A  C028  F027         	movff	__display_found@cntr,__display_found@start
 29475                           
 29476                           ;display.c: 417: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 29477  00345E  ECF4  F04D         	call	_bootloader_get_file_size	;wreg free
 29478  003462  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 29479  003466  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 29480  00346A  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 29481  00346E  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 29482  003472  5028               	movf	__display_found@cntr,w,c
 29483  003474  0D01               	mullw	1
 29484  003476  0E28               	movlw	low (_display_content+40)
 29485  003478  24F3               	addwf	prodl,w,c
 29486  00347A  6E23               	movwf	__display_itoa_u32@text,c
 29487  00347C  0E02               	movlw	high (_display_content+40)
 29488  00347E  20F4               	addwfc	prodh,w,c
 29489  003480  6E24               	movwf	__display_itoa_u32@text+1,c
 29490  003482  EC15  F006         	call	__display_itoa_u32	;wreg free
 29491  003486  2627               	addwf	__display_found@start,f,c
 29492                           
 29493                           ;display.c: 418: cntr = 0;
 29494  003488  0E00               	movlw	0
 29495  00348A  6E28               	movwf	__display_found@cntr,c
 29496                           
 29497                           ;display.c: 419: while(found_line3b[cntr])
 29498  00348C  D01C               	goto	l1614
 29499  00348E                     
 29500                           ;display.c: 420: display_content[2][start+cntr] = found_line3b[cntr++];
 29501  00348E  5028               	movf	__display_found@cntr,w,c
 29502  003490  0D01               	mullw	1
 29503  003492  0E8F               	movlw	low _found_line3b
 29504  003494  24F3               	addwf	prodl,w,c
 29505  003496  6EF6               	movwf	tblptrl,c
 29506  003498  0EBE               	movlw	high _found_line3b
 29507  00349A  20F4               	addwfc	prodh,w,c
 29508  00349C  6EF7               	movwf	tblptrh,c
 29509  00349E                     	if	1	;There are 3 active tblptr bytes
 29510  00349E  6AF8               	clrf	tblptru,c
 29511  0034A0  0E00               	movlw	low (__mediumconst shr (0+16))
 29512  0034A2  22F8               	addwfc	tblptru,f,c
 29513  0034A4                     	endif
 29514  0034A4  5028               	movf	__display_found@cntr,w,c
 29515  0034A6  C027  F025         	movff	__display_found@start,??__display_found
 29516  0034AA  6A26               	clrf	(??__display_found+1)& (0+255),c
 29517  0034AC  2625               	addwf	??__display_found,f,c
 29518  0034AE  0E00               	movlw	0
 29519  0034B0  2226               	addwfc	??__display_found+1,f,c
 29520  0034B2  0E28               	movlw	low (_display_content+40)
 29521  0034B4  2425               	addwf	??__display_found,w,c
 29522  0034B6  6ED9               	movwf	fsr2l,c
 29523  0034B8  0E02               	movlw	high (_display_content+40)
 29524  0034BA  2026               	addwfc	??__display_found+1,w,c
 29525  0034BC  6EDA               	movwf	fsr2h,c
 29526  0034BE  0008               	tblrd		*
 29527  0034C0  CFF5 FFDF          	movff	tablat,indf2
 29528  0034C4  2A28               	incf	__display_found@cntr,f,c
 29529  0034C6                     l1614:
 29530  0034C6  5028               	movf	__display_found@cntr,w,c
 29531  0034C8  0D01               	mullw	1
 29532  0034CA  0E8F               	movlw	low _found_line3b
 29533  0034CC  24F3               	addwf	prodl,w,c
 29534  0034CE  6EF6               	movwf	tblptrl,c
 29535  0034D0  0EBE               	movlw	high _found_line3b
 29536  0034D2  20F4               	addwfc	prodh,w,c
 29537  0034D4  6EF7               	movwf	tblptrh,c
 29538  0034D6                     	if	1	;There are 3 active tblptr bytes
 29539  0034D6  6AF8               	clrf	tblptru,c
 29540  0034D8  0E00               	movlw	low (__mediumconst shr (0+16))
 29541  0034DA  22F8               	addwfc	tblptru,f,c
 29542  0034DC                     	endif
 29543  0034DC  0008               	tblrd		*
 29544  0034DE  50F5               	movf	tablat,w,c
 29545  0034E0  0900               	iorlw	0
 29546  0034E2  A4D8               	btfss	status,2,c
 29547  0034E4  D7D4               	goto	l1615
 29548                           
 29549                           ;display.c: 422: cntr = 0;
 29550  0034E6  0E00               	movlw	0
 29551  0034E8  6E28               	movwf	__display_found@cntr,c
 29552                           
 29553                           ;display.c: 423: while(found_line4[cntr])
 29554  0034EA  D017               	goto	l1617
 29555  0034EC                     
 29556                           ;display.c: 424: display_content[3][cntr] = found_line4[cntr++];
 29557  0034EC  5028               	movf	__display_found@cntr,w,c
 29558  0034EE  0D01               	mullw	1
 29559  0034F0  0EF4               	movlw	low _found_line4
 29560  0034F2  24F3               	addwf	prodl,w,c
 29561  0034F4  6EF6               	movwf	tblptrl,c
 29562  0034F6  0EBC               	movlw	high _found_line4
 29563  0034F8  20F4               	addwfc	prodh,w,c
 29564  0034FA  6EF7               	movwf	tblptrh,c
 29565  0034FC                     	if	1	;There are 3 active tblptr bytes
 29566  0034FC  6AF8               	clrf	tblptru,c
 29567  0034FE  0E00               	movlw	low (__mediumconst shr (0+16))
 29568  003500  22F8               	addwfc	tblptru,f,c
 29569  003502                     	endif
 29570  003502  5028               	movf	__display_found@cntr,w,c
 29571  003504  0D01               	mullw	1
 29572  003506  0E3C               	movlw	low (_display_content+60)
 29573  003508  24F3               	addwf	prodl,w,c
 29574  00350A  6ED9               	movwf	fsr2l,c
 29575  00350C  0E02               	movlw	high (_display_content+60)
 29576  00350E  20F4               	addwfc	prodh,w,c
 29577  003510  6EDA               	movwf	fsr2h,c
 29578  003512  0008               	tblrd		*
 29579  003514  CFF5 FFDF          	movff	tablat,indf2
 29580  003518  2A28               	incf	__display_found@cntr,f,c
 29581  00351A                     l1617:
 29582  00351A  5028               	movf	__display_found@cntr,w,c
 29583  00351C  0D01               	mullw	1
 29584  00351E  0EF4               	movlw	low _found_line4
 29585  003520  24F3               	addwf	prodl,w,c
 29586  003522  6EF6               	movwf	tblptrl,c
 29587  003524  0EBC               	movlw	high _found_line4
 29588  003526  20F4               	addwfc	prodh,w,c
 29589  003528  6EF7               	movwf	tblptrh,c
 29590  00352A                     	if	1	;There are 3 active tblptr bytes
 29591  00352A  6AF8               	clrf	tblptru,c
 29592  00352C  0E00               	movlw	low (__mediumconst shr (0+16))
 29593  00352E  22F8               	addwfc	tblptru,f,c
 29594  003530                     	endif
 29595  003530  0008               	tblrd		*
 29596  003532  50F5               	movf	tablat,w,c
 29597  003534  0900               	iorlw	0
 29598  003536  B4D8               	btfsc	status,2,c
 29599  003538  0012               	return	
 29600  00353A  D7D8               	goto	l1618
 29601  00353C                     __end_of__display_found:
 29602                           	opt stack 0
 29603                           tosu	equ	0xFFF
 29604                           tosh	equ	0xFFE
 29605                           tosl	equ	0xFFD
 29606                           pclath	equ	0xFFA
 29607                           tblptru	equ	0xFF8
 29608                           tblptrh	equ	0xFF7
 29609                           tblptrl	equ	0xFF6
 29610                           tablat	equ	0xFF5
 29611                           prodh	equ	0xFF4
 29612                           prodl	equ	0xFF3
 29613                           intcon	equ	0xFF2
 29614                           intcon2	equ	0xFF1
 29615                           intcon3	equ	0xFF0
 29616                           indf0	equ	0xFEF
 29617                           postinc0	equ	0xFEE
 29618                           fsr0h	equ	0xFEA
 29619                           fsr0l	equ	0xFE9
 29620                           wreg	equ	0xFE8
 29621                           indf1	equ	0xFE7
 29622                           postdec1	equ	0xFE5
 29623                           plusw1	equ	0xFE3
 29624                           fsr1h	equ	0xFE2
 29625                           fsr1l	equ	0xFE1
 29626                           indf2	equ	0xFDF
 29627                           postinc2	equ	0xFDE
 29628                           postdec2	equ	0xFDD
 29629                           plusw2	equ	0xFDB
 29630                           fsr2h	equ	0xFDA
 29631                           fsr2l	equ	0xFD9
 29632                           status	equ	0xFD8
 29633                           
 29634 ;; *************** function _bootloader_get_file_size *****************
 29635 ;; Defined at:
 29636 ;;		line 463 in file "bootloader.c"
 29637 ;; Parameters:    Size  Location     Type
 29638 ;;		None
 29639 ;; Auto vars:     Size  Location     Type
 29640 ;;		None
 29641 ;; Return value:  Size  Location     Type
 29642 ;;                  4    0[COMRAM] unsigned long 
 29643 ;; Registers used:
 29644 ;;		None
 29645 ;; Tracked objects:
 29646 ;;		On entry : 0/0
 29647 ;;		On exit  : 0/0
 29648 ;;		Unchanged: 0/0
 29649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29654 ;;Total ram usage:        4 bytes
 29655 ;; Hardware stack levels used:    1
 29656 ;; This function calls:
 29657 ;;		Nothing
 29658 ;; This function is called by:
 29659 ;;		__display_found
 29660 ;;		__fill_buffer_get_bootloader_details
 29661 ;; This function uses a non-reentrant model
 29662 ;;
 29663                           
 29664                           	psect	text140
 29665  009BE8                     __ptext140:
 29666                           	opt stack 0
 29667  009BE8                     _bootloader_get_file_size:
 29668                           	opt stack 25
 29669                           
 29670                           ;bootloader.c: 465: return hex_file_size;
 29671                           
 29672                           ;incstack = 0
 29673  009BE8  C14A  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 29674  009BEC  C14B  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 29675  009BF0  C14C  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 29676  009BF4  C14D  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 29677  009BF8  0012               	return		;funcret
 29678  009BFA                     __end_of_bootloader_get_file_size:
 29679                           	opt stack 0
 29680                           tosu	equ	0xFFF
 29681                           tosh	equ	0xFFE
 29682                           tosl	equ	0xFFD
 29683                           pclath	equ	0xFFA
 29684                           tblptru	equ	0xFF8
 29685                           tblptrh	equ	0xFF7
 29686                           tblptrl	equ	0xFF6
 29687                           tablat	equ	0xFF5
 29688                           prodh	equ	0xFF4
 29689                           prodl	equ	0xFF3
 29690                           intcon	equ	0xFF2
 29691                           intcon2	equ	0xFF1
 29692                           intcon3	equ	0xFF0
 29693                           indf0	equ	0xFEF
 29694                           postinc0	equ	0xFEE
 29695                           fsr0h	equ	0xFEA
 29696                           fsr0l	equ	0xFE9
 29697                           wreg	equ	0xFE8
 29698                           indf1	equ	0xFE7
 29699                           postdec1	equ	0xFE5
 29700                           plusw1	equ	0xFE3
 29701                           fsr1h	equ	0xFE2
 29702                           fsr1l	equ	0xFE1
 29703                           indf2	equ	0xFDF
 29704                           postinc2	equ	0xFDE
 29705                           postdec2	equ	0xFDD
 29706                           plusw2	equ	0xFDB
 29707                           fsr2h	equ	0xFDA
 29708                           fsr2l	equ	0xFD9
 29709                           status	equ	0xFD8
 29710                           
 29711 ;; *************** function __display_failed *****************
 29712 ;; Defined at:
 29713 ;;		line 465 in file "display.c"
 29714 ;; Parameters:    Size  Location     Type
 29715 ;;		None
 29716 ;; Auto vars:     Size  Location     Type
 29717 ;;  cntr            1   36[COMRAM] unsigned char 
 29718 ;;  start           1    0        unsigned char 
 29719 ;; Return value:  Size  Location     Type
 29720 ;;                  1    wreg      void 
 29721 ;; Registers used:
 29722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29723 ;; Tracked objects:
 29724 ;;		On entry : 0/0
 29725 ;;		On exit  : 0/0
 29726 ;;		Unchanged: 0/0
 29727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29732 ;;Total ram usage:        1 bytes
 29733 ;; Hardware stack levels used:    1
 29734 ;; Hardware stack levels required when called:    5
 29735 ;; This function calls:
 29736 ;;		__display_itoa_u16
 29737 ;;		__display_itoa_u32
 29738 ;;		_bootloader_get_entries
 29739 ;;		_bootloader_get_error
 29740 ;;		_bootloader_get_rec_address
 29741 ;; This function is called by:
 29742 ;;		_display_prepare
 29743 ;; This function uses a non-reentrant model
 29744 ;;
 29745                           
 29746                           	psect	text141
 29747  0012DC                     __ptext141:
 29748                           	opt stack 0
 29749  0012DC                     __display_failed:
 29750                           	opt stack 21
 29751                           
 29752                           ;display.c: 467: uint8_t cntr;;display.c: 468: uint8_t start;;display.c: 469: cntr = 0;
 29753                           
 29754                           ;incstack = 0
 29755  0012DC  0E00               	movlw	0
 29756  0012DE  6E25               	movwf	__display_failed@cntr,c
 29757                           
 29758                           ;display.c: 470: while(failed_line1[cntr])
 29759  0012E0  D017               	goto	l1650
 29760  0012E2                     
 29761                           ;display.c: 471: display_content[0][cntr] = failed_line1[cntr++];
 29762  0012E2  5025               	movf	__display_failed@cntr,w,c
 29763  0012E4  0D01               	mullw	1
 29764  0012E6  0E98               	movlw	low _failed_line1
 29765  0012E8  24F3               	addwf	prodl,w,c
 29766  0012EA  6EF6               	movwf	tblptrl,c
 29767  0012EC  0EBD               	movlw	high _failed_line1
 29768  0012EE  20F4               	addwfc	prodh,w,c
 29769  0012F0  6EF7               	movwf	tblptrh,c
 29770  0012F2                     	if	1	;There are 3 active tblptr bytes
 29771  0012F2  6AF8               	clrf	tblptru,c
 29772  0012F4  0E00               	movlw	low (__mediumconst shr (0+16))
 29773  0012F6  22F8               	addwfc	tblptru,f,c
 29774  0012F8                     	endif
 29775  0012F8  5025               	movf	__display_failed@cntr,w,c
 29776  0012FA  0D01               	mullw	1
 29777  0012FC  0E00               	movlw	low _display_content
 29778  0012FE  24F3               	addwf	prodl,w,c
 29779  001300  6ED9               	movwf	fsr2l,c
 29780  001302  0E02               	movlw	high _display_content
 29781  001304  20F4               	addwfc	prodh,w,c
 29782  001306  6EDA               	movwf	fsr2h,c
 29783  001308  0008               	tblrd		*
 29784  00130A  CFF5 FFDF          	movff	tablat,indf2
 29785  00130E  2A25               	incf	__display_failed@cntr,f,c
 29786  001310                     l1650:
 29787  001310  5025               	movf	__display_failed@cntr,w,c
 29788  001312  0D01               	mullw	1
 29789  001314  0E98               	movlw	low _failed_line1
 29790  001316  24F3               	addwf	prodl,w,c
 29791  001318  6EF6               	movwf	tblptrl,c
 29792  00131A  0EBD               	movlw	high _failed_line1
 29793  00131C  20F4               	addwfc	prodh,w,c
 29794  00131E  6EF7               	movwf	tblptrh,c
 29795  001320                     	if	1	;There are 3 active tblptr bytes
 29796  001320  6AF8               	clrf	tblptru,c
 29797  001322  0E00               	movlw	low (__mediumconst shr (0+16))
 29798  001324  22F8               	addwfc	tblptru,f,c
 29799  001326                     	endif
 29800  001326  0008               	tblrd		*
 29801  001328  50F5               	movf	tablat,w,c
 29802  00132A  0900               	iorlw	0
 29803  00132C  A4D8               	btfss	status,2,c
 29804  00132E  D7D9               	goto	l1651
 29805                           
 29806                           ;display.c: 472: cntr = 0;
 29807  001330  0E00               	movlw	0
 29808  001332  6E25               	movwf	__display_failed@cntr,c
 29809                           
 29810                           ;display.c: 473: while(failed_line2[cntr])
 29811  001334  D017               	goto	l1653
 29812  001336                     
 29813                           ;display.c: 474: display_content[1][cntr] = failed_line2[cntr++];
 29814  001336  5025               	movf	__display_failed@cntr,w,c
 29815  001338  0D01               	mullw	1
 29816  00133A  0EE2               	movlw	low _failed_line2
 29817  00133C  24F3               	addwf	prodl,w,c
 29818  00133E  6EF6               	movwf	tblptrl,c
 29819  001340  0EBC               	movlw	high _failed_line2
 29820  001342  20F4               	addwfc	prodh,w,c
 29821  001344  6EF7               	movwf	tblptrh,c
 29822  001346                     	if	1	;There are 3 active tblptr bytes
 29823  001346  6AF8               	clrf	tblptru,c
 29824  001348  0E00               	movlw	low (__mediumconst shr (0+16))
 29825  00134A  22F8               	addwfc	tblptru,f,c
 29826  00134C                     	endif
 29827  00134C  5025               	movf	__display_failed@cntr,w,c
 29828  00134E  0D01               	mullw	1
 29829  001350  0E14               	movlw	low (_display_content+20)
 29830  001352  24F3               	addwf	prodl,w,c
 29831  001354  6ED9               	movwf	fsr2l,c
 29832  001356  0E02               	movlw	high (_display_content+20)
 29833  001358  20F4               	addwfc	prodh,w,c
 29834  00135A  6EDA               	movwf	fsr2h,c
 29835  00135C  0008               	tblrd		*
 29836  00135E  CFF5 FFDF          	movff	tablat,indf2
 29837  001362  2A25               	incf	__display_failed@cntr,f,c
 29838  001364                     l1653:
 29839  001364  5025               	movf	__display_failed@cntr,w,c
 29840  001366  0D01               	mullw	1
 29841  001368  0EE2               	movlw	low _failed_line2
 29842  00136A  24F3               	addwf	prodl,w,c
 29843  00136C  6EF6               	movwf	tblptrl,c
 29844  00136E  0EBC               	movlw	high _failed_line2
 29845  001370  20F4               	addwfc	prodh,w,c
 29846  001372  6EF7               	movwf	tblptrh,c
 29847  001374                     	if	1	;There are 3 active tblptr bytes
 29848  001374  6AF8               	clrf	tblptru,c
 29849  001376  0E00               	movlw	low (__mediumconst shr (0+16))
 29850  001378  22F8               	addwfc	tblptru,f,c
 29851  00137A                     	endif
 29852  00137A  0008               	tblrd		*
 29853  00137C  50F5               	movf	tablat,w,c
 29854  00137E  0900               	iorlw	0
 29855  001380  A4D8               	btfss	status,2,c
 29856  001382  D7D9               	goto	l1654
 29857                           
 29858                           ;display.c: 476: cntr = 0;
 29859  001384  0E00               	movlw	0
 29860  001386  6E25               	movwf	__display_failed@cntr,c
 29861                           
 29862                           ;display.c: 477: switch(bootloader_get_error())
 29863  001388  D0D6               	goto	l1656
 29864  00138A                     
 29865                           ;display.c: 481: display_content[2][cntr] = failed_line3_startCode[cntr++];
 29866  00138A  5025               	movf	__display_failed@cntr,w,c
 29867  00138C  0D01               	mullw	1
 29868  00138E  0EAA               	movlw	low _failed_line3_startCode
 29869  001390  24F3               	addwf	prodl,w,c
 29870  001392  6EF6               	movwf	tblptrl,c
 29871  001394  0EBC               	movlw	high _failed_line3_startCode
 29872  001396  20F4               	addwfc	prodh,w,c
 29873  001398  6EF7               	movwf	tblptrh,c
 29874  00139A                     	if	1	;There are 3 active tblptr bytes
 29875  00139A  6AF8               	clrf	tblptru,c
 29876  00139C  0E00               	movlw	low (__mediumconst shr (0+16))
 29877  00139E  22F8               	addwfc	tblptru,f,c
 29878  0013A0                     	endif
 29879  0013A0  5025               	movf	__display_failed@cntr,w,c
 29880  0013A2  0D01               	mullw	1
 29881  0013A4  0E28               	movlw	low (_display_content+40)
 29882  0013A6  24F3               	addwf	prodl,w,c
 29883  0013A8  6ED9               	movwf	fsr2l,c
 29884  0013AA  0E02               	movlw	high (_display_content+40)
 29885  0013AC  20F4               	addwfc	prodh,w,c
 29886  0013AE  6EDA               	movwf	fsr2h,c
 29887  0013B0  0008               	tblrd		*
 29888  0013B2  CFF5 FFDF          	movff	tablat,indf2
 29889  0013B6  2A25               	incf	__display_failed@cntr,f,c
 29890  0013B8  5025               	movf	__display_failed@cntr,w,c
 29891  0013BA  0D01               	mullw	1
 29892  0013BC  0EAA               	movlw	low _failed_line3_startCode
 29893  0013BE  24F3               	addwf	prodl,w,c
 29894  0013C0  6EF6               	movwf	tblptrl,c
 29895  0013C2  0EBC               	movlw	high _failed_line3_startCode
 29896  0013C4  20F4               	addwfc	prodh,w,c
 29897  0013C6  6EF7               	movwf	tblptrh,c
 29898  0013C8                     	if	1	;There are 3 active tblptr bytes
 29899  0013C8  6AF8               	clrf	tblptru,c
 29900  0013CA  0E00               	movlw	low (__mediumconst shr (0+16))
 29901  0013CC  22F8               	addwfc	tblptru,f,c
 29902  0013CE                     	endif
 29903  0013CE  0008               	tblrd		*
 29904  0013D0  50F5               	movf	tablat,w,c
 29905  0013D2  0900               	iorlw	0
 29906  0013D4  B4D8               	btfsc	status,2,c
 29907  0013D6  D0C0               	goto	l1661
 29908  0013D8  D7D8               	goto	l1659
 29909  0013DA                     
 29910                           ;display.c: 486: display_content[2][cntr] = failed_line3_checksum[cntr++];
 29911  0013DA  5025               	movf	__display_failed@cntr,w,c
 29912  0013DC  0D01               	mullw	1
 29913  0013DE  0EF8               	movlw	low _failed_line3_checksum
 29914  0013E0  24F3               	addwf	prodl,w,c
 29915  0013E2  6EF6               	movwf	tblptrl,c
 29916  0013E4  0EBD               	movlw	high _failed_line3_checksum
 29917  0013E6  20F4               	addwfc	prodh,w,c
 29918  0013E8  6EF7               	movwf	tblptrh,c
 29919  0013EA                     	if	1	;There are 3 active tblptr bytes
 29920  0013EA  6AF8               	clrf	tblptru,c
 29921  0013EC  0E00               	movlw	low (__mediumconst shr (0+16))
 29922  0013EE  22F8               	addwfc	tblptru,f,c
 29923  0013F0                     	endif
 29924  0013F0  5025               	movf	__display_failed@cntr,w,c
 29925  0013F2  0D01               	mullw	1
 29926  0013F4  0E28               	movlw	low (_display_content+40)
 29927  0013F6  24F3               	addwf	prodl,w,c
 29928  0013F8  6ED9               	movwf	fsr2l,c
 29929  0013FA  0E02               	movlw	high (_display_content+40)
 29930  0013FC  20F4               	addwfc	prodh,w,c
 29931  0013FE  6EDA               	movwf	fsr2h,c
 29932  001400  0008               	tblrd		*
 29933  001402  CFF5 FFDF          	movff	tablat,indf2
 29934  001406  2A25               	incf	__display_failed@cntr,f,c
 29935  001408  5025               	movf	__display_failed@cntr,w,c
 29936  00140A  0D01               	mullw	1
 29937  00140C  0EF8               	movlw	low _failed_line3_checksum
 29938  00140E  24F3               	addwf	prodl,w,c
 29939  001410  6EF6               	movwf	tblptrl,c
 29940  001412  0EBD               	movlw	high _failed_line3_checksum
 29941  001414  20F4               	addwfc	prodh,w,c
 29942  001416  6EF7               	movwf	tblptrh,c
 29943  001418                     	if	1	;There are 3 active tblptr bytes
 29944  001418  6AF8               	clrf	tblptru,c
 29945  00141A  0E00               	movlw	low (__mediumconst shr (0+16))
 29946  00141C  22F8               	addwfc	tblptru,f,c
 29947  00141E                     	endif
 29948  00141E  0008               	tblrd		*
 29949  001420  50F5               	movf	tablat,w,c
 29950  001422  0900               	iorlw	0
 29951  001424  B4D8               	btfsc	status,2,c
 29952  001426  D098               	goto	l1661
 29953  001428  D7D8               	goto	l1664
 29954  00142A                     
 29955                           ;display.c: 493: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 29956  00142A  5025               	movf	__display_failed@cntr,w,c
 29957  00142C  0D01               	mullw	1
 29958  00142E  0E07               	movlw	low _failed_line3_noNextRecord
 29959  001430  24F3               	addwf	prodl,w,c
 29960  001432  6EF6               	movwf	tblptrl,c
 29961  001434  0EBE               	movlw	high _failed_line3_noNextRecord
 29962  001436  20F4               	addwfc	prodh,w,c
 29963  001438  6EF7               	movwf	tblptrh,c
 29964  00143A                     	if	1	;There are 3 active tblptr bytes
 29965  00143A  6AF8               	clrf	tblptru,c
 29966  00143C  0E00               	movlw	low (__mediumconst shr (0+16))
 29967  00143E  22F8               	addwfc	tblptru,f,c
 29968  001440                     	endif
 29969  001440  5025               	movf	__display_failed@cntr,w,c
 29970  001442  0D01               	mullw	1
 29971  001444  0E28               	movlw	low (_display_content+40)
 29972  001446  24F3               	addwf	prodl,w,c
 29973  001448  6ED9               	movwf	fsr2l,c
 29974  00144A  0E02               	movlw	high (_display_content+40)
 29975  00144C  20F4               	addwfc	prodh,w,c
 29976  00144E  6EDA               	movwf	fsr2h,c
 29977  001450  0008               	tblrd		*
 29978  001452  CFF5 FFDF          	movff	tablat,indf2
 29979  001456  2A25               	incf	__display_failed@cntr,f,c
 29980  001458  5025               	movf	__display_failed@cntr,w,c
 29981  00145A  0D01               	mullw	1
 29982  00145C  0E07               	movlw	low _failed_line3_noNextRecord
 29983  00145E  24F3               	addwf	prodl,w,c
 29984  001460  6EF6               	movwf	tblptrl,c
 29985  001462  0EBE               	movlw	high _failed_line3_noNextRecord
 29986  001464  20F4               	addwfc	prodh,w,c
 29987  001466  6EF7               	movwf	tblptrh,c
 29988  001468                     	if	1	;There are 3 active tblptr bytes
 29989  001468  6AF8               	clrf	tblptru,c
 29990  00146A  0E00               	movlw	low (__mediumconst shr (0+16))
 29991  00146C  22F8               	addwfc	tblptru,f,c
 29992  00146E                     	endif
 29993  00146E  0008               	tblrd		*
 29994  001470  50F5               	movf	tablat,w,c
 29995  001472  0900               	iorlw	0
 29996  001474  B4D8               	btfsc	status,2,c
 29997  001476  D070               	goto	l1661
 29998  001478  D7D8               	goto	l1668
 29999  00147A                     
 30000                           ;display.c: 498: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 30001  00147A  5025               	movf	__display_failed@cntr,w,c
 30002  00147C  0D01               	mullw	1
 30003  00147E  0E25               	movlw	low _failed_line3_dataTooLong
 30004  001480  24F3               	addwf	prodl,w,c
 30005  001482  6EF6               	movwf	tblptrl,c
 30006  001484  0EBE               	movlw	high _failed_line3_dataTooLong
 30007  001486  20F4               	addwfc	prodh,w,c
 30008  001488  6EF7               	movwf	tblptrh,c
 30009  00148A                     	if	1	;There are 3 active tblptr bytes
 30010  00148A  6AF8               	clrf	tblptru,c
 30011  00148C  0E00               	movlw	low (__mediumconst shr (0+16))
 30012  00148E  22F8               	addwfc	tblptru,f,c
 30013  001490                     	endif
 30014  001490  5025               	movf	__display_failed@cntr,w,c
 30015  001492  0D01               	mullw	1
 30016  001494  0E28               	movlw	low (_display_content+40)
 30017  001496  24F3               	addwf	prodl,w,c
 30018  001498  6ED9               	movwf	fsr2l,c
 30019  00149A  0E02               	movlw	high (_display_content+40)
 30020  00149C  20F4               	addwfc	prodh,w,c
 30021  00149E  6EDA               	movwf	fsr2h,c
 30022  0014A0  0008               	tblrd		*
 30023  0014A2  CFF5 FFDF          	movff	tablat,indf2
 30024  0014A6  2A25               	incf	__display_failed@cntr,f,c
 30025  0014A8  5025               	movf	__display_failed@cntr,w,c
 30026  0014AA  0D01               	mullw	1
 30027  0014AC  0E25               	movlw	low _failed_line3_dataTooLong
 30028  0014AE  24F3               	addwf	prodl,w,c
 30029  0014B0  6EF6               	movwf	tblptrl,c
 30030  0014B2  0EBE               	movlw	high _failed_line3_dataTooLong
 30031  0014B4  20F4               	addwfc	prodh,w,c
 30032  0014B6  6EF7               	movwf	tblptrh,c
 30033  0014B8                     	if	1	;There are 3 active tblptr bytes
 30034  0014B8  6AF8               	clrf	tblptru,c
 30035  0014BA  0E00               	movlw	low (__mediumconst shr (0+16))
 30036  0014BC  22F8               	addwfc	tblptru,f,c
 30037  0014BE                     	endif
 30038  0014BE  0008               	tblrd		*
 30039  0014C0  50F5               	movf	tablat,w,c
 30040  0014C2  0900               	iorlw	0
 30041  0014C4  B4D8               	btfsc	status,2,c
 30042  0014C6  D048               	goto	l1661
 30043  0014C8  D7D8               	goto	l1672
 30044  0014CA                     
 30045                           ;display.c: 503: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 30046  0014CA  5025               	movf	__display_failed@cntr,w,c
 30047  0014CC  0D01               	mullw	1
 30048  0014CE  0E82               	movlw	low _failed_line3_addressRange
 30049  0014D0  24F3               	addwf	prodl,w,c
 30050  0014D2  6EF6               	movwf	tblptrl,c
 30051  0014D4  0EBC               	movlw	high _failed_line3_addressRange
 30052  0014D6  20F4               	addwfc	prodh,w,c
 30053  0014D8  6EF7               	movwf	tblptrh,c
 30054  0014DA                     	if	1	;There are 3 active tblptr bytes
 30055  0014DA  6AF8               	clrf	tblptru,c
 30056  0014DC  0E00               	movlw	low (__mediumconst shr (0+16))
 30057  0014DE  22F8               	addwfc	tblptru,f,c
 30058  0014E0                     	endif
 30059  0014E0  5025               	movf	__display_failed@cntr,w,c
 30060  0014E2  0D01               	mullw	1
 30061  0014E4  0E28               	movlw	low (_display_content+40)
 30062  0014E6  24F3               	addwf	prodl,w,c
 30063  0014E8  6ED9               	movwf	fsr2l,c
 30064  0014EA  0E02               	movlw	high (_display_content+40)
 30065  0014EC  20F4               	addwfc	prodh,w,c
 30066  0014EE  6EDA               	movwf	fsr2h,c
 30067  0014F0  0008               	tblrd		*
 30068  0014F2  CFF5 FFDF          	movff	tablat,indf2
 30069  0014F6  2A25               	incf	__display_failed@cntr,f,c
 30070  0014F8  5025               	movf	__display_failed@cntr,w,c
 30071  0014FA  0D01               	mullw	1
 30072  0014FC  0E82               	movlw	low _failed_line3_addressRange
 30073  0014FE  24F3               	addwf	prodl,w,c
 30074  001500  6EF6               	movwf	tblptrl,c
 30075  001502  0EBC               	movlw	high _failed_line3_addressRange
 30076  001504  20F4               	addwfc	prodh,w,c
 30077  001506  6EF7               	movwf	tblptrh,c
 30078  001508                     	if	1	;There are 3 active tblptr bytes
 30079  001508  6AF8               	clrf	tblptru,c
 30080  00150A  0E00               	movlw	low (__mediumconst shr (0+16))
 30081  00150C  22F8               	addwfc	tblptru,f,c
 30082  00150E                     	endif
 30083  00150E  0008               	tblrd		*
 30084  001510  50F5               	movf	tablat,w,c
 30085  001512  0900               	iorlw	0
 30086  001514  A4D8               	btfss	status,2,c
 30087  001516  D7D9               	goto	l1676
 30088                           
 30089                           ;display.c: 504: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 30090  001518  EC59  F04E         	call	_bootloader_get_rec_address	;wreg free
 30091  00151C  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 30092  001520  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 30093  001524  6A21               	clrf	__display_itoa_u32@value+2,c
 30094  001526  6A22               	clrf	__display_itoa_u32@value+3,c
 30095  001528  0E4A               	movlw	low (_display_content+74)
 30096  00152A  6E23               	movwf	__display_itoa_u32@text,c
 30097  00152C  0E02               	movlw	high (_display_content+74)
 30098  00152E  6E24               	movwf	__display_itoa_u32@text+1,c
 30099  001530  EC15  F006         	call	__display_itoa_u32	;wreg free
 30100                           
 30101                           ;display.c: 507: }
 30102                           
 30103                           ;display.c: 505: break;
 30104  001534  D011               	goto	l1661
 30105  001536                     l1656:
 30106  001536  EC92  F04E         	call	_bootloader_get_error	;wreg free
 30107                           
 30108                           ; Switch size 1, requested type "space"
 30109                           ; Number of cases is 5, Range of values is 11 to 15
 30110                           ; switch strategies available:
 30111                           ; Name         Instructions Cycles
 30112                           ; simple_byte           16     9 (average)
 30113                           ;	Chosen strategy is simple_byte
 30114  00153A  0A0B               	xorlw	11	; case 11
 30115  00153C  B4D8               	btfsc	status,2,c
 30116  00153E  D7DC               	goto	l1675
 30117  001540  0A07               	xorlw	7	; case 12
 30118  001542  B4D8               	btfsc	status,2,c
 30119  001544  D7B1               	goto	l1671
 30120  001546  0A01               	xorlw	1	; case 13
 30121  001548  B4D8               	btfsc	status,2,c
 30122  00154A  D786               	goto	l1667
 30123  00154C  0A03               	xorlw	3	; case 14
 30124  00154E  B4D8               	btfsc	status,2,c
 30125  001550  D75B               	goto	l1663
 30126  001552  0A01               	xorlw	1	; case 15
 30127  001554  B4D8               	btfsc	status,2,c
 30128  001556  D730               	goto	l1658
 30129  001558                     l1661:
 30130                           
 30131                           ;display.c: 509: cntr = 0;
 30132  001558  0E00               	movlw	0
 30133  00155A  6E25               	movwf	__display_failed@cntr,c
 30134                           
 30135                           ;display.c: 510: while(failed_line4[cntr])
 30136  00155C  D017               	goto	l1678
 30137  00155E                     
 30138                           ;display.c: 511: display_content[3][cntr] = failed_line4[cntr++];
 30139  00155E  5025               	movf	__display_failed@cntr,w,c
 30140  001560  0D01               	mullw	1
 30141  001562  0E69               	movlw	low _failed_line4
 30142  001564  24F3               	addwf	prodl,w,c
 30143  001566  6EF6               	movwf	tblptrl,c
 30144  001568  0EBE               	movlw	high _failed_line4
 30145  00156A  20F4               	addwfc	prodh,w,c
 30146  00156C  6EF7               	movwf	tblptrh,c
 30147  00156E                     	if	1	;There are 3 active tblptr bytes
 30148  00156E  6AF8               	clrf	tblptru,c
 30149  001570  0E00               	movlw	low (__mediumconst shr (0+16))
 30150  001572  22F8               	addwfc	tblptru,f,c
 30151  001574                     	endif
 30152  001574  5025               	movf	__display_failed@cntr,w,c
 30153  001576  0D01               	mullw	1
 30154  001578  0E3C               	movlw	low (_display_content+60)
 30155  00157A  24F3               	addwf	prodl,w,c
 30156  00157C  6ED9               	movwf	fsr2l,c
 30157  00157E  0E02               	movlw	high (_display_content+60)
 30158  001580  20F4               	addwfc	prodh,w,c
 30159  001582  6EDA               	movwf	fsr2h,c
 30160  001584  0008               	tblrd		*
 30161  001586  CFF5 FFDF          	movff	tablat,indf2
 30162  00158A  2A25               	incf	__display_failed@cntr,f,c
 30163  00158C                     l1678:
 30164  00158C  5025               	movf	__display_failed@cntr,w,c
 30165  00158E  0D01               	mullw	1
 30166  001590  0E69               	movlw	low _failed_line4
 30167  001592  24F3               	addwf	prodl,w,c
 30168  001594  6EF6               	movwf	tblptrl,c
 30169  001596  0EBE               	movlw	high _failed_line4
 30170  001598  20F4               	addwfc	prodh,w,c
 30171  00159A  6EF7               	movwf	tblptrh,c
 30172  00159C                     	if	1	;There are 3 active tblptr bytes
 30173  00159C  6AF8               	clrf	tblptru,c
 30174  00159E  0E00               	movlw	low (__mediumconst shr (0+16))
 30175  0015A0  22F8               	addwfc	tblptru,f,c
 30176  0015A2                     	endif
 30177  0015A2  0008               	tblrd		*
 30178  0015A4  50F5               	movf	tablat,w,c
 30179  0015A6  0900               	iorlw	0
 30180  0015A8  A4D8               	btfss	status,2,c
 30181  0015AA  D7D9               	goto	l1679
 30182                           
 30183                           ;display.c: 512: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 30184  0015AC  EC5E  F04E         	call	_bootloader_get_entries	;wreg free
 30185  0015B0  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 30186  0015B4  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 30187  0015B8  6A1B               	clrf	__display_itoa_u16@value+2,c
 30188  0015BA  6A1C               	clrf	__display_itoa_u16@value+3,c
 30189  0015BC  5025               	movf	__display_failed@cntr,w,c
 30190  0015BE  0D01               	mullw	1
 30191  0015C0  0E3C               	movlw	low (_display_content+60)
 30192  0015C2  24F3               	addwf	prodl,w,c
 30193  0015C4  6E1D               	movwf	__display_itoa_u16@text,c
 30194  0015C6  0E02               	movlw	high (_display_content+60)
 30195  0015C8  20F4               	addwfc	prodh,w,c
 30196  0015CA  6E1E               	movwf	__display_itoa_u16@text+1,c
 30197  0015CC  ECF5  F037         	call	__display_itoa_u16	;wreg free
 30198  0015D0  0012               	return		;funcret
 30199  0015D2                     __end_of__display_failed:
 30200                           	opt stack 0
 30201                           tosu	equ	0xFFF
 30202                           tosh	equ	0xFFE
 30203                           tosl	equ	0xFFD
 30204                           pclath	equ	0xFFA
 30205                           tblptru	equ	0xFF8
 30206                           tblptrh	equ	0xFF7
 30207                           tblptrl	equ	0xFF6
 30208                           tablat	equ	0xFF5
 30209                           prodh	equ	0xFF4
 30210                           prodl	equ	0xFF3
 30211                           intcon	equ	0xFF2
 30212                           intcon2	equ	0xFF1
 30213                           intcon3	equ	0xFF0
 30214                           indf0	equ	0xFEF
 30215                           postinc0	equ	0xFEE
 30216                           fsr0h	equ	0xFEA
 30217                           fsr0l	equ	0xFE9
 30218                           wreg	equ	0xFE8
 30219                           indf1	equ	0xFE7
 30220                           postdec1	equ	0xFE5
 30221                           plusw1	equ	0xFE3
 30222                           fsr1h	equ	0xFE2
 30223                           fsr1l	equ	0xFE1
 30224                           indf2	equ	0xFDF
 30225                           postinc2	equ	0xFDE
 30226                           postdec2	equ	0xFDD
 30227                           plusw2	equ	0xFDB
 30228                           fsr2h	equ	0xFDA
 30229                           fsr2l	equ	0xFD9
 30230                           status	equ	0xFD8
 30231                           
 30232 ;; *************** function _bootloader_get_rec_address *****************
 30233 ;; Defined at:
 30234 ;;		line 488 in file "bootloader.c"
 30235 ;; Parameters:    Size  Location     Type
 30236 ;;		None
 30237 ;; Auto vars:     Size  Location     Type
 30238 ;;		None
 30239 ;; Return value:  Size  Location     Type
 30240 ;;                  2    0[COMRAM] unsigned int 
 30241 ;; Registers used:
 30242 ;;		None
 30243 ;; Tracked objects:
 30244 ;;		On entry : 0/0
 30245 ;;		On exit  : 0/0
 30246 ;;		Unchanged: 0/0
 30247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30252 ;;Total ram usage:        2 bytes
 30253 ;; Hardware stack levels used:    1
 30254 ;; This function calls:
 30255 ;;		Nothing
 30256 ;; This function is called by:
 30257 ;;		__display_failed
 30258 ;;		__fill_buffer_get_bootloader_details
 30259 ;; This function uses a non-reentrant model
 30260 ;;
 30261                           
 30262                           	psect	text142
 30263  009CB2                     __ptext142:
 30264                           	opt stack 0
 30265  009CB2                     _bootloader_get_rec_address:
 30266                           	opt stack 25
 30267                           
 30268                           ;bootloader.c: 491: return hex_file_entry.address;
 30269                           
 30270                           ;incstack = 0
 30271  009CB2  C195  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 30272  009CB6  C196  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 30273  009CBA  0012               	return		;funcret
 30274  009CBC                     __end_of_bootloader_get_rec_address:
 30275                           	opt stack 0
 30276                           tosu	equ	0xFFF
 30277                           tosh	equ	0xFFE
 30278                           tosl	equ	0xFFD
 30279                           pclath	equ	0xFFA
 30280                           tblptru	equ	0xFF8
 30281                           tblptrh	equ	0xFF7
 30282                           tblptrl	equ	0xFF6
 30283                           tablat	equ	0xFF5
 30284                           prodh	equ	0xFF4
 30285                           prodl	equ	0xFF3
 30286                           intcon	equ	0xFF2
 30287                           intcon2	equ	0xFF1
 30288                           intcon3	equ	0xFF0
 30289                           indf0	equ	0xFEF
 30290                           postinc0	equ	0xFEE
 30291                           fsr0h	equ	0xFEA
 30292                           fsr0l	equ	0xFE9
 30293                           wreg	equ	0xFE8
 30294                           indf1	equ	0xFE7
 30295                           postdec1	equ	0xFE5
 30296                           plusw1	equ	0xFE3
 30297                           fsr1h	equ	0xFE2
 30298                           fsr1l	equ	0xFE1
 30299                           indf2	equ	0xFDF
 30300                           postinc2	equ	0xFDE
 30301                           postdec2	equ	0xFDD
 30302                           plusw2	equ	0xFDB
 30303                           fsr2h	equ	0xFDA
 30304                           fsr2l	equ	0xFD9
 30305                           status	equ	0xFD8
 30306                           
 30307 ;; *************** function _bootloader_get_error *****************
 30308 ;; Defined at:
 30309 ;;		line 478 in file "bootloader.c"
 30310 ;; Parameters:    Size  Location     Type
 30311 ;;		None
 30312 ;; Auto vars:     Size  Location     Type
 30313 ;;		None
 30314 ;; Return value:  Size  Location     Type
 30315 ;;                  1    wreg      enum E7016
 30316 ;; Registers used:
 30317 ;;		wreg, status,2
 30318 ;; Tracked objects:
 30319 ;;		On entry : 0/0
 30320 ;;		On exit  : 0/0
 30321 ;;		Unchanged: 0/0
 30322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30327 ;;Total ram usage:        0 bytes
 30328 ;; Hardware stack levels used:    1
 30329 ;; This function calls:
 30330 ;;		Nothing
 30331 ;; This function is called by:
 30332 ;;		__display_failed
 30333 ;;		__fill_buffer_get_bootloader_details
 30334 ;; This function uses a non-reentrant model
 30335 ;;
 30336                           
 30337                           	psect	text143
 30338  009D24                     __ptext143:
 30339                           	opt stack 0
 30340  009D24                     _bootloader_get_error:
 30341                           	opt stack 25
 30342                           
 30343                           ;bootloader.c: 480: return last_error;
 30344                           
 30345                           ;incstack = 0
 30346  009D24  0101               	movlb	1	; () banked
 30347  009D26  518C               	movf	_last_error& (0+255),w,b
 30348  009D28  0012               	return	
 30349  009D2A                     __end_of_bootloader_get_error:
 30350                           	opt stack 0
 30351                           tosu	equ	0xFFF
 30352                           tosh	equ	0xFFE
 30353                           tosl	equ	0xFFD
 30354                           pclath	equ	0xFFA
 30355                           tblptru	equ	0xFF8
 30356                           tblptrh	equ	0xFF7
 30357                           tblptrl	equ	0xFF6
 30358                           tablat	equ	0xFF5
 30359                           prodh	equ	0xFF4
 30360                           prodl	equ	0xFF3
 30361                           intcon	equ	0xFF2
 30362                           intcon2	equ	0xFF1
 30363                           intcon3	equ	0xFF0
 30364                           indf0	equ	0xFEF
 30365                           postinc0	equ	0xFEE
 30366                           fsr0h	equ	0xFEA
 30367                           fsr0l	equ	0xFE9
 30368                           wreg	equ	0xFE8
 30369                           indf1	equ	0xFE7
 30370                           postdec1	equ	0xFE5
 30371                           plusw1	equ	0xFE3
 30372                           fsr1h	equ	0xFE2
 30373                           fsr1l	equ	0xFE1
 30374                           indf2	equ	0xFDF
 30375                           postinc2	equ	0xFDE
 30376                           postdec2	equ	0xFDD
 30377                           plusw2	equ	0xFDB
 30378                           fsr2h	equ	0xFDA
 30379                           fsr2l	equ	0xFD9
 30380                           status	equ	0xFD8
 30381                           
 30382 ;; *************** function _bootloader_get_entries *****************
 30383 ;; Defined at:
 30384 ;;		line 468 in file "bootloader.c"
 30385 ;; Parameters:    Size  Location     Type
 30386 ;;		None
 30387 ;; Auto vars:     Size  Location     Type
 30388 ;;		None
 30389 ;; Return value:  Size  Location     Type
 30390 ;;                  2    0[COMRAM] unsigned int 
 30391 ;; Registers used:
 30392 ;;		None
 30393 ;; Tracked objects:
 30394 ;;		On entry : 0/0
 30395 ;;		On exit  : 0/0
 30396 ;;		Unchanged: 0/0
 30397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30402 ;;Total ram usage:        2 bytes
 30403 ;; Hardware stack levels used:    1
 30404 ;; This function calls:
 30405 ;;		Nothing
 30406 ;; This function is called by:
 30407 ;;		__display_verify
 30408 ;;		__display_failed
 30409 ;;		__display_programming
 30410 ;;		__fill_buffer_get_bootloader_details
 30411 ;; This function uses a non-reentrant model
 30412 ;;
 30413                           
 30414                           	psect	text144
 30415  009CBC                     __ptext144:
 30416                           	opt stack 0
 30417  009CBC                     _bootloader_get_entries:
 30418                           	opt stack 25
 30419                           
 30420                           ;bootloader.c: 470: return hex_file_entries;
 30421                           
 30422                           ; BSR set to: 1
 30423                           ;incstack = 0
 30424  009CBC  C178  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30425  009CC0  C179  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30426  009CC4  0012               	return		;funcret
 30427  009CC6                     __end_of_bootloader_get_entries:
 30428                           	opt stack 0
 30429                           tosu	equ	0xFFF
 30430                           tosh	equ	0xFFE
 30431                           tosl	equ	0xFFD
 30432                           pclath	equ	0xFFA
 30433                           tblptru	equ	0xFF8
 30434                           tblptrh	equ	0xFF7
 30435                           tblptrl	equ	0xFF6
 30436                           tablat	equ	0xFF5
 30437                           prodh	equ	0xFF4
 30438                           prodl	equ	0xFF3
 30439                           intcon	equ	0xFF2
 30440                           intcon2	equ	0xFF1
 30441                           intcon3	equ	0xFF0
 30442                           indf0	equ	0xFEF
 30443                           postinc0	equ	0xFEE
 30444                           fsr0h	equ	0xFEA
 30445                           fsr0l	equ	0xFE9
 30446                           wreg	equ	0xFE8
 30447                           indf1	equ	0xFE7
 30448                           postdec1	equ	0xFE5
 30449                           plusw1	equ	0xFE3
 30450                           fsr1h	equ	0xFE2
 30451                           fsr1l	equ	0xFE1
 30452                           indf2	equ	0xFDF
 30453                           postinc2	equ	0xFDE
 30454                           postdec2	equ	0xFDD
 30455                           plusw2	equ	0xFDB
 30456                           fsr2h	equ	0xFDA
 30457                           fsr2l	equ	0xFD9
 30458                           status	equ	0xFD8
 30459                           
 30460 ;; *************** function __display_itoa_u32 *****************
 30461 ;; Defined at:
 30462 ;;		line 178 in file "display.c"
 30463 ;; Parameters:    Size  Location     Type
 30464 ;;  value           4   30[COMRAM] unsigned long 
 30465 ;;  text            2   34[COMRAM] PTR unsigned char 
 30466 ;;		 -> display_content(80), 
 30467 ;; Auto vars:     Size  Location     Type
 30468 ;;		None
 30469 ;; Return value:  Size  Location     Type
 30470 ;;                  1    wreg      unsigned char 
 30471 ;; Registers used:
 30472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30473 ;; Tracked objects:
 30474 ;;		On entry : 0/0
 30475 ;;		On exit  : 0/0
 30476 ;;		Unchanged: 0/0
 30477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30478 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30481 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30482 ;;Total ram usage:        6 bytes
 30483 ;; Hardware stack levels used:    1
 30484 ;; Hardware stack levels required when called:    4
 30485 ;; This function calls:
 30486 ;;		___lldiv
 30487 ;;		___llmod
 30488 ;;		__display_itoa_u16
 30489 ;;		_itoa
 30490 ;; This function is called by:
 30491 ;;		__display_start
 30492 ;;		__display_found
 30493 ;;		__display_failed
 30494 ;; This function uses a non-reentrant model
 30495 ;;
 30496                           
 30497                           	psect	text145
 30498  000C2A                     __ptext145:
 30499                           	opt stack 0
 30500  000C2A                     __display_itoa_u32:
 30501                           	opt stack 21
 30502                           
 30503                           ;display.c: 181: if(value<=0x7FFF)
 30504                           
 30505                           ;incstack = 0
 30506  000C2A  5022               	movf	__display_itoa_u32@value+3,w,c
 30507  000C2C  1021               	iorwf	__display_itoa_u32@value+2,w,c
 30508  000C2E  E111               	bnz	l11558
 30509  000C30  0E80               	movlw	128
 30510  000C32  5C20               	subwf	__display_itoa_u32@value+1,w,c
 30511  000C34  B0D8               	btfsc	status,0,c
 30512  000C36  D00D               	goto	l1520
 30513                           
 30514                           ;display.c: 182: {;display.c: 183: return _display_itoa_u16((uint16_t) value, text);
 30515  000C38  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 30516  000C3C  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 30517  000C40  6A1B               	clrf	__display_itoa_u16@value+2,c
 30518  000C42  6A1C               	clrf	__display_itoa_u16@value+3,c
 30519  000C44  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 30520  000C48  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 30521  000C4C  ECF5  F037         	call	__display_itoa_u16	;wreg free
 30522  000C50  0012               	return	
 30523  000C52                     l1520:
 30524  000C52                     l11558:
 30525                           
 30526                           ;display.c: 184: };display.c: 187: if(value>100000000)
 30527  000C52  041F               	decf	__display_itoa_u32@value,w,c
 30528  000C54  0EE1               	movlw	225
 30529  000C56  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30530  000C58  0EF5               	movlw	245
 30531  000C5A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30532  000C5C  0E05               	movlw	5
 30533  000C5E  5822               	subwfb	__display_itoa_u32@value+3,w,c
 30534  000C60  A0D8               	btfss	status,0,c
 30535  000C62  D04C               	goto	l1522
 30536                           
 30537                           ;display.c: 188: {;display.c: 189: itoa(text, (uint16_t)(value/10000), 10);
 30538  000C64  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30539  000C68  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30540  000C6C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30541  000C70  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30542  000C74  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30543  000C78  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30544  000C7C  0E10               	movlw	16
 30545  000C7E  6E05               	movwf	___lldiv@divisor,c
 30546  000C80  0E27               	movlw	39
 30547  000C82  6E06               	movwf	___lldiv@divisor+1,c
 30548  000C84  0E00               	movlw	0
 30549  000C86  6E07               	movwf	___lldiv@divisor+2,c
 30550  000C88  0E00               	movlw	0
 30551  000C8A  6E08               	movwf	___lldiv@divisor+3,c
 30552  000C8C  EC9D  F040         	call	___lldiv	;wreg free
 30553  000C90  C001  F013         	movff	?___lldiv,itoa@val
 30554  000C94  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30555  000C98  0E00               	movlw	0
 30556  000C9A  6E16               	movwf	itoa@base+1,c
 30557  000C9C  0E0A               	movlw	10
 30558  000C9E  6E15               	movwf	itoa@base,c
 30559  000CA0  EC59  F049         	call	_itoa	;wreg free
 30560                           
 30561                           ;display.c: 190: itoa(text+5, (uint16_t)(value%10000), 10);
 30562  000CA4  0E05               	movlw	5
 30563  000CA6  2423               	addwf	__display_itoa_u32@text,w,c
 30564  000CA8  6E11               	movwf	itoa@buf,c
 30565  000CAA  0E00               	movlw	0
 30566  000CAC  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30567  000CAE  6E12               	movwf	itoa@buf+1,c
 30568  000CB0  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30569  000CB4  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30570  000CB8  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30571  000CBC  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30572  000CC0  0E10               	movlw	16
 30573  000CC2  6E05               	movwf	___llmod@divisor,c
 30574  000CC4  0E27               	movlw	39
 30575  000CC6  6E06               	movwf	___llmod@divisor+1,c
 30576  000CC8  0E00               	movlw	0
 30577  000CCA  6E07               	movwf	___llmod@divisor+2,c
 30578  000CCC  0E00               	movlw	0
 30579  000CCE  6E08               	movwf	___llmod@divisor+3,c
 30580  000CD0  ECBC  F043         	call	___llmod	;wreg free
 30581  000CD4  C001  F013         	movff	?___llmod,itoa@val
 30582  000CD8  C002  F014         	movff	?___llmod+1,itoa@val+1
 30583  000CDC  0E00               	movlw	0
 30584  000CDE  6E16               	movwf	itoa@base+1,c
 30585  000CE0  0E0A               	movlw	10
 30586  000CE2  6E15               	movwf	itoa@base,c
 30587  000CE4  EC59  F049         	call	_itoa	;wreg free
 30588                           
 30589                           ;display.c: 191: *(text+9) = ' ';
 30590  000CE8  EE20 F009          	lfsr	2,9
 30591  000CEC  5023               	movf	__display_itoa_u32@text,w,c
 30592  000CEE  26D9               	addwf	fsr2l,f,c
 30593  000CF0  5024               	movf	__display_itoa_u32@text+1,w,c
 30594  000CF2  22DA               	addwfc	fsr2h,f,c
 30595  000CF4  0E20               	movlw	32
 30596  000CF6  6EDF               	movwf	indf2,c
 30597                           
 30598                           ;display.c: 192: return 9;
 30599  000CF8  0E09               	movlw	9
 30600                           
 30601                           ;display.c: 193: }
 30602  000CFA  0012               	return	
 30603  000CFC                     l1522:
 30604                           
 30605                           ;display.c: 194: else if(value>10000000)
 30606  000CFC  5022               	movf	__display_itoa_u32@value+3,w,c
 30607  000CFE  E108               	bnz	u8420
 30608  000D00  0E81               	movlw	129
 30609  000D02  5C1F               	subwf	__display_itoa_u32@value,w,c
 30610  000D04  0E96               	movlw	150
 30611  000D06  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30612  000D08  0E98               	movlw	152
 30613  000D0A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30614  000D0C  A0D8               	btfss	status,0,c
 30615  000D0E  D04C               	goto	l1524
 30616  000D10                     u8420:
 30617                           
 30618                           ;display.c: 195: {;display.c: 196: itoa(text, (uint16_t)(value/10000), 10);
 30619  000D10  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30620  000D14  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30621  000D18  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30622  000D1C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30623  000D20  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30624  000D24  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30625  000D28  0E10               	movlw	16
 30626  000D2A  6E05               	movwf	___lldiv@divisor,c
 30627  000D2C  0E27               	movlw	39
 30628  000D2E  6E06               	movwf	___lldiv@divisor+1,c
 30629  000D30  0E00               	movlw	0
 30630  000D32  6E07               	movwf	___lldiv@divisor+2,c
 30631  000D34  0E00               	movlw	0
 30632  000D36  6E08               	movwf	___lldiv@divisor+3,c
 30633  000D38  EC9D  F040         	call	___lldiv	;wreg free
 30634  000D3C  C001  F013         	movff	?___lldiv,itoa@val
 30635  000D40  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30636  000D44  0E00               	movlw	0
 30637  000D46  6E16               	movwf	itoa@base+1,c
 30638  000D48  0E0A               	movlw	10
 30639  000D4A  6E15               	movwf	itoa@base,c
 30640  000D4C  EC59  F049         	call	_itoa	;wreg free
 30641                           
 30642                           ;display.c: 197: itoa(text+4, (uint16_t)(value%10000), 10);
 30643  000D50  0E04               	movlw	4
 30644  000D52  2423               	addwf	__display_itoa_u32@text,w,c
 30645  000D54  6E11               	movwf	itoa@buf,c
 30646  000D56  0E00               	movlw	0
 30647  000D58  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30648  000D5A  6E12               	movwf	itoa@buf+1,c
 30649  000D5C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30650  000D60  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30651  000D64  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30652  000D68  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30653  000D6C  0E10               	movlw	16
 30654  000D6E  6E05               	movwf	___llmod@divisor,c
 30655  000D70  0E27               	movlw	39
 30656  000D72  6E06               	movwf	___llmod@divisor+1,c
 30657  000D74  0E00               	movlw	0
 30658  000D76  6E07               	movwf	___llmod@divisor+2,c
 30659  000D78  0E00               	movlw	0
 30660  000D7A  6E08               	movwf	___llmod@divisor+3,c
 30661  000D7C  ECBC  F043         	call	___llmod	;wreg free
 30662  000D80  C001  F013         	movff	?___llmod,itoa@val
 30663  000D84  C002  F014         	movff	?___llmod+1,itoa@val+1
 30664  000D88  0E00               	movlw	0
 30665  000D8A  6E16               	movwf	itoa@base+1,c
 30666  000D8C  0E0A               	movlw	10
 30667  000D8E  6E15               	movwf	itoa@base,c
 30668  000D90  EC59  F049         	call	_itoa	;wreg free
 30669                           
 30670                           ;display.c: 198: *(text+8) = ' ';
 30671  000D94  EE20 F008          	lfsr	2,8
 30672  000D98  5023               	movf	__display_itoa_u32@text,w,c
 30673  000D9A  26D9               	addwf	fsr2l,f,c
 30674  000D9C  5024               	movf	__display_itoa_u32@text+1,w,c
 30675  000D9E  22DA               	addwfc	fsr2h,f,c
 30676  000DA0  0E20               	movlw	32
 30677  000DA2  6EDF               	movwf	indf2,c
 30678                           
 30679                           ;display.c: 199: return 8;
 30680  000DA4  0E08               	movlw	8
 30681                           
 30682                           ;display.c: 200: }
 30683  000DA6  0012               	return	
 30684  000DA8                     l1524:
 30685                           
 30686                           ;display.c: 201: else if(value>1000000)
 30687  000DA8  5022               	movf	__display_itoa_u32@value+3,w,c
 30688  000DAA  E108               	bnz	u8430
 30689  000DAC  0E41               	movlw	65
 30690  000DAE  5C1F               	subwf	__display_itoa_u32@value,w,c
 30691  000DB0  0E42               	movlw	66
 30692  000DB2  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30693  000DB4  0E0F               	movlw	15
 30694  000DB6  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30695  000DB8  A0D8               	btfss	status,0,c
 30696  000DBA  D04C               	goto	l1526
 30697  000DBC                     u8430:
 30698                           
 30699                           ;display.c: 202: {;display.c: 203: itoa(text, (uint16_t)(value/10000), 10);
 30700  000DBC  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30701  000DC0  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30702  000DC4  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30703  000DC8  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30704  000DCC  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30705  000DD0  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30706  000DD4  0E10               	movlw	16
 30707  000DD6  6E05               	movwf	___lldiv@divisor,c
 30708  000DD8  0E27               	movlw	39
 30709  000DDA  6E06               	movwf	___lldiv@divisor+1,c
 30710  000DDC  0E00               	movlw	0
 30711  000DDE  6E07               	movwf	___lldiv@divisor+2,c
 30712  000DE0  0E00               	movlw	0
 30713  000DE2  6E08               	movwf	___lldiv@divisor+3,c
 30714  000DE4  EC9D  F040         	call	___lldiv	;wreg free
 30715  000DE8  C001  F013         	movff	?___lldiv,itoa@val
 30716  000DEC  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30717  000DF0  0E00               	movlw	0
 30718  000DF2  6E16               	movwf	itoa@base+1,c
 30719  000DF4  0E0A               	movlw	10
 30720  000DF6  6E15               	movwf	itoa@base,c
 30721  000DF8  EC59  F049         	call	_itoa	;wreg free
 30722                           
 30723                           ;display.c: 204: itoa(text+3, (uint16_t)(value%10000), 10);
 30724  000DFC  0E03               	movlw	3
 30725  000DFE  2423               	addwf	__display_itoa_u32@text,w,c
 30726  000E00  6E11               	movwf	itoa@buf,c
 30727  000E02  0E00               	movlw	0
 30728  000E04  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30729  000E06  6E12               	movwf	itoa@buf+1,c
 30730  000E08  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30731  000E0C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30732  000E10  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30733  000E14  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30734  000E18  0E10               	movlw	16
 30735  000E1A  6E05               	movwf	___llmod@divisor,c
 30736  000E1C  0E27               	movlw	39
 30737  000E1E  6E06               	movwf	___llmod@divisor+1,c
 30738  000E20  0E00               	movlw	0
 30739  000E22  6E07               	movwf	___llmod@divisor+2,c
 30740  000E24  0E00               	movlw	0
 30741  000E26  6E08               	movwf	___llmod@divisor+3,c
 30742  000E28  ECBC  F043         	call	___llmod	;wreg free
 30743  000E2C  C001  F013         	movff	?___llmod,itoa@val
 30744  000E30  C002  F014         	movff	?___llmod+1,itoa@val+1
 30745  000E34  0E00               	movlw	0
 30746  000E36  6E16               	movwf	itoa@base+1,c
 30747  000E38  0E0A               	movlw	10
 30748  000E3A  6E15               	movwf	itoa@base,c
 30749  000E3C  EC59  F049         	call	_itoa	;wreg free
 30750                           
 30751                           ;display.c: 205: *(text+7) = ' ';
 30752  000E40  EE20 F007          	lfsr	2,7
 30753  000E44  5023               	movf	__display_itoa_u32@text,w,c
 30754  000E46  26D9               	addwf	fsr2l,f,c
 30755  000E48  5024               	movf	__display_itoa_u32@text+1,w,c
 30756  000E4A  22DA               	addwfc	fsr2h,f,c
 30757  000E4C  0E20               	movlw	32
 30758  000E4E  6EDF               	movwf	indf2,c
 30759                           
 30760                           ;display.c: 206: return 7;
 30761  000E50  0E07               	movlw	7
 30762                           
 30763                           ;display.c: 207: }
 30764  000E52  0012               	return	
 30765  000E54                     l1526:
 30766                           
 30767                           ;display.c: 208: else if(value>100000)
 30768  000E54  5022               	movf	__display_itoa_u32@value+3,w,c
 30769  000E56  E108               	bnz	u8440
 30770  000E58  0EA1               	movlw	161
 30771  000E5A  5C1F               	subwf	__display_itoa_u32@value,w,c
 30772  000E5C  0E86               	movlw	134
 30773  000E5E  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30774  000E60  0E01               	movlw	1
 30775  000E62  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30776  000E64  A0D8               	btfss	status,0,c
 30777  000E66  D04C               	goto	l1528
 30778  000E68                     u8440:
 30779                           
 30780                           ;display.c: 209: {;display.c: 210: itoa(text, (uint16_t)(value/10000), 10);
 30781  000E68  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30782  000E6C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30783  000E70  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30784  000E74  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30785  000E78  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30786  000E7C  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30787  000E80  0E10               	movlw	16
 30788  000E82  6E05               	movwf	___lldiv@divisor,c
 30789  000E84  0E27               	movlw	39
 30790  000E86  6E06               	movwf	___lldiv@divisor+1,c
 30791  000E88  0E00               	movlw	0
 30792  000E8A  6E07               	movwf	___lldiv@divisor+2,c
 30793  000E8C  0E00               	movlw	0
 30794  000E8E  6E08               	movwf	___lldiv@divisor+3,c
 30795  000E90  EC9D  F040         	call	___lldiv	;wreg free
 30796  000E94  C001  F013         	movff	?___lldiv,itoa@val
 30797  000E98  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30798  000E9C  0E00               	movlw	0
 30799  000E9E  6E16               	movwf	itoa@base+1,c
 30800  000EA0  0E0A               	movlw	10
 30801  000EA2  6E15               	movwf	itoa@base,c
 30802  000EA4  EC59  F049         	call	_itoa	;wreg free
 30803                           
 30804                           ;display.c: 211: itoa(text+2, (uint16_t)(value%10000), 10);
 30805  000EA8  0E02               	movlw	2
 30806  000EAA  2423               	addwf	__display_itoa_u32@text,w,c
 30807  000EAC  6E11               	movwf	itoa@buf,c
 30808  000EAE  0E00               	movlw	0
 30809  000EB0  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30810  000EB2  6E12               	movwf	itoa@buf+1,c
 30811  000EB4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30812  000EB8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30813  000EBC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30814  000EC0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30815  000EC4  0E10               	movlw	16
 30816  000EC6  6E05               	movwf	___llmod@divisor,c
 30817  000EC8  0E27               	movlw	39
 30818  000ECA  6E06               	movwf	___llmod@divisor+1,c
 30819  000ECC  0E00               	movlw	0
 30820  000ECE  6E07               	movwf	___llmod@divisor+2,c
 30821  000ED0  0E00               	movlw	0
 30822  000ED2  6E08               	movwf	___llmod@divisor+3,c
 30823  000ED4  ECBC  F043         	call	___llmod	;wreg free
 30824  000ED8  C001  F013         	movff	?___llmod,itoa@val
 30825  000EDC  C002  F014         	movff	?___llmod+1,itoa@val+1
 30826  000EE0  0E00               	movlw	0
 30827  000EE2  6E16               	movwf	itoa@base+1,c
 30828  000EE4  0E0A               	movlw	10
 30829  000EE6  6E15               	movwf	itoa@base,c
 30830  000EE8  EC59  F049         	call	_itoa	;wreg free
 30831                           
 30832                           ;display.c: 212: *(text+6) = ' ';
 30833  000EEC  EE20 F006          	lfsr	2,6
 30834  000EF0  5023               	movf	__display_itoa_u32@text,w,c
 30835  000EF2  26D9               	addwf	fsr2l,f,c
 30836  000EF4  5024               	movf	__display_itoa_u32@text+1,w,c
 30837  000EF6  22DA               	addwfc	fsr2h,f,c
 30838  000EF8  0E20               	movlw	32
 30839  000EFA  6EDF               	movwf	indf2,c
 30840                           
 30841                           ;display.c: 213: return 6;
 30842  000EFC  0E06               	movlw	6
 30843                           
 30844                           ;display.c: 214: }
 30845  000EFE  0012               	return	
 30846  000F00                     l1528:
 30847                           
 30848                           ;display.c: 215: else;display.c: 216: {;display.c: 217: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 30849  000F00  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30850  000F04  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30851  000F08  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30852  000F0C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30853  000F10  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30854  000F14  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30855  000F18  0E10               	movlw	16
 30856  000F1A  6E05               	movwf	___lldiv@divisor,c
 30857  000F1C  0E27               	movlw	39
 30858  000F1E  6E06               	movwf	___lldiv@divisor+1,c
 30859  000F20  0E00               	movlw	0
 30860  000F22  6E07               	movwf	___lldiv@divisor+2,c
 30861  000F24  0E00               	movlw	0
 30862  000F26  6E08               	movwf	___lldiv@divisor+3,c
 30863  000F28  EC9D  F040         	call	___lldiv	;wreg free
 30864  000F2C  C001  F013         	movff	?___lldiv,itoa@val
 30865  000F30  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30866  000F34  0E00               	movlw	0
 30867  000F36  6E16               	movwf	itoa@base+1,c
 30868  000F38  0E0A               	movlw	10
 30869  000F3A  6E15               	movwf	itoa@base,c
 30870  000F3C  EC59  F049         	call	_itoa	;wreg free
 30871                           
 30872                           ;display.c: 218: itoa(text+1, (uint16_t)(value%10000), 10);
 30873  000F40  0E01               	movlw	1
 30874  000F42  2423               	addwf	__display_itoa_u32@text,w,c
 30875  000F44  6E11               	movwf	itoa@buf,c
 30876  000F46  0E00               	movlw	0
 30877  000F48  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30878  000F4A  6E12               	movwf	itoa@buf+1,c
 30879  000F4C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30880  000F50  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30881  000F54  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30882  000F58  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30883  000F5C  0E10               	movlw	16
 30884  000F5E  6E05               	movwf	___llmod@divisor,c
 30885  000F60  0E27               	movlw	39
 30886  000F62  6E06               	movwf	___llmod@divisor+1,c
 30887  000F64  0E00               	movlw	0
 30888  000F66  6E07               	movwf	___llmod@divisor+2,c
 30889  000F68  0E00               	movlw	0
 30890  000F6A  6E08               	movwf	___llmod@divisor+3,c
 30891  000F6C  ECBC  F043         	call	___llmod	;wreg free
 30892  000F70  C001  F013         	movff	?___llmod,itoa@val
 30893  000F74  C002  F014         	movff	?___llmod+1,itoa@val+1
 30894  000F78  0E00               	movlw	0
 30895  000F7A  6E16               	movwf	itoa@base+1,c
 30896  000F7C  0E0A               	movlw	10
 30897  000F7E  6E15               	movwf	itoa@base,c
 30898  000F80  EC59  F049         	call	_itoa	;wreg free
 30899                           
 30900                           ;display.c: 219: *(text+5) = ' ';
 30901  000F84  EE20 F005          	lfsr	2,5
 30902  000F88  5023               	movf	__display_itoa_u32@text,w,c
 30903  000F8A  26D9               	addwf	fsr2l,f,c
 30904  000F8C  5024               	movf	__display_itoa_u32@text+1,w,c
 30905  000F8E  22DA               	addwfc	fsr2h,f,c
 30906  000F90  0E20               	movlw	32
 30907  000F92  6EDF               	movwf	indf2,c
 30908                           
 30909                           ;display.c: 220: return 5;
 30910  000F94  0E05               	movlw	5
 30911  000F96  0012               	return	
 30912  000F98                     __end_of__display_itoa_u32:
 30913                           	opt stack 0
 30914                           tosu	equ	0xFFF
 30915                           tosh	equ	0xFFE
 30916                           tosl	equ	0xFFD
 30917                           pclath	equ	0xFFA
 30918                           tblptru	equ	0xFF8
 30919                           tblptrh	equ	0xFF7
 30920                           tblptrl	equ	0xFF6
 30921                           tablat	equ	0xFF5
 30922                           prodh	equ	0xFF4
 30923                           prodl	equ	0xFF3
 30924                           intcon	equ	0xFF2
 30925                           intcon2	equ	0xFF1
 30926                           intcon3	equ	0xFF0
 30927                           indf0	equ	0xFEF
 30928                           postinc0	equ	0xFEE
 30929                           fsr0h	equ	0xFEA
 30930                           fsr0l	equ	0xFE9
 30931                           wreg	equ	0xFE8
 30932                           indf1	equ	0xFE7
 30933                           postdec1	equ	0xFE5
 30934                           plusw1	equ	0xFE3
 30935                           fsr1h	equ	0xFE2
 30936                           fsr1l	equ	0xFE1
 30937                           indf2	equ	0xFDF
 30938                           postinc2	equ	0xFDE
 30939                           postdec2	equ	0xFDD
 30940                           plusw2	equ	0xFDB
 30941                           fsr2h	equ	0xFDA
 30942                           fsr2l	equ	0xFD9
 30943                           status	equ	0xFD8
 30944                           
 30945 ;; *************** function ___llmod *****************
 30946 ;; Defined at:
 30947 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 30948 ;; Parameters:    Size  Location     Type
 30949 ;;  dividend        4    0[COMRAM] unsigned long 
 30950 ;;  divisor         4    4[COMRAM] unsigned long 
 30951 ;; Auto vars:     Size  Location     Type
 30952 ;;  counter         1    8[COMRAM] unsigned char 
 30953 ;; Return value:  Size  Location     Type
 30954 ;;                  4    0[COMRAM] unsigned long 
 30955 ;; Registers used:
 30956 ;;		wreg, status,2, status,0
 30957 ;; Tracked objects:
 30958 ;;		On entry : 0/0
 30959 ;;		On exit  : 0/0
 30960 ;;		Unchanged: 0/0
 30961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30962 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30965 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30966 ;;Total ram usage:        9 bytes
 30967 ;; Hardware stack levels used:    1
 30968 ;; This function calls:
 30969 ;;		Nothing
 30970 ;; This function is called by:
 30971 ;;		__display_itoa_u32
 30972 ;; This function uses a non-reentrant model
 30973 ;;
 30974                           
 30975                           	psect	text146
 30976  008778                     __ptext146:
 30977                           	opt stack 0
 30978  008778                     ___llmod:
 30979                           	opt stack 24
 30980                           
 30981                           ;incstack = 0
 30982  008778  5005               	movf	___llmod@divisor,w,c
 30983  00877A  1006               	iorwf	___llmod@divisor+1,w,c
 30984  00877C  1007               	iorwf	___llmod@divisor+2,w,c
 30985  00877E  1008               	iorwf	___llmod@divisor+3,w,c
 30986  008780  B4D8               	btfsc	status,2,c
 30987  008782  D024               	goto	l3502
 30988  008784  0E01               	movlw	1
 30989  008786  6E09               	movwf	___llmod@counter,c
 30990  008788  D006               	goto	l3497
 30991  00878A  90D8               	bcf	status,0,c
 30992  00878C  3605               	rlcf	___llmod@divisor,f,c
 30993  00878E  3606               	rlcf	___llmod@divisor+1,f,c
 30994  008790  3607               	rlcf	___llmod@divisor+2,f,c
 30995  008792  3608               	rlcf	___llmod@divisor+3,f,c
 30996  008794  2A09               	incf	___llmod@counter,f,c
 30997  008796                     l3497:
 30998  008796  AE08               	btfss	___llmod@divisor+3,7,c
 30999  008798  D7F8               	goto	l3498
 31000  00879A                     u8010:
 31001  00879A  5005               	movf	___llmod@divisor,w,c
 31002  00879C  5C01               	subwf	___llmod@dividend,w,c
 31003  00879E  5006               	movf	___llmod@divisor+1,w,c
 31004  0087A0  5802               	subwfb	___llmod@dividend+1,w,c
 31005  0087A2  5007               	movf	___llmod@divisor+2,w,c
 31006  0087A4  5803               	subwfb	___llmod@dividend+2,w,c
 31007  0087A6  5008               	movf	___llmod@divisor+3,w,c
 31008  0087A8  5804               	subwfb	___llmod@dividend+3,w,c
 31009  0087AA  A0D8               	btfss	status,0,c
 31010  0087AC  D008               	goto	l3501
 31011  0087AE  5005               	movf	___llmod@divisor,w,c
 31012  0087B0  5E01               	subwf	___llmod@dividend,f,c
 31013  0087B2  5006               	movf	___llmod@divisor+1,w,c
 31014  0087B4  5A02               	subwfb	___llmod@dividend+1,f,c
 31015  0087B6  5007               	movf	___llmod@divisor+2,w,c
 31016  0087B8  5A03               	subwfb	___llmod@dividend+2,f,c
 31017  0087BA  5008               	movf	___llmod@divisor+3,w,c
 31018  0087BC  5A04               	subwfb	___llmod@dividend+3,f,c
 31019  0087BE                     l3501:
 31020  0087BE  90D8               	bcf	status,0,c
 31021  0087C0  3208               	rrcf	___llmod@divisor+3,f,c
 31022  0087C2  3207               	rrcf	___llmod@divisor+2,f,c
 31023  0087C4  3206               	rrcf	___llmod@divisor+1,f,c
 31024  0087C6  3205               	rrcf	___llmod@divisor,f,c
 31025  0087C8  2E09               	decfsz	___llmod@counter,f,c
 31026  0087CA  D7E7               	goto	u8010
 31027  0087CC                     l3502:
 31028  0087CC  C001  F001         	movff	___llmod@dividend,?___llmod
 31029  0087D0  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 31030  0087D4  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 31031  0087D8  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 31032  0087DC  0012               	return		;funcret
 31033  0087DE                     __end_of___llmod:
 31034                           	opt stack 0
 31035                           tosu	equ	0xFFF
 31036                           tosh	equ	0xFFE
 31037                           tosl	equ	0xFFD
 31038                           pclath	equ	0xFFA
 31039                           tblptru	equ	0xFF8
 31040                           tblptrh	equ	0xFF7
 31041                           tblptrl	equ	0xFF6
 31042                           tablat	equ	0xFF5
 31043                           prodh	equ	0xFF4
 31044                           prodl	equ	0xFF3
 31045                           intcon	equ	0xFF2
 31046                           intcon2	equ	0xFF1
 31047                           intcon3	equ	0xFF0
 31048                           indf0	equ	0xFEF
 31049                           postinc0	equ	0xFEE
 31050                           fsr0h	equ	0xFEA
 31051                           fsr0l	equ	0xFE9
 31052                           wreg	equ	0xFE8
 31053                           indf1	equ	0xFE7
 31054                           postdec1	equ	0xFE5
 31055                           plusw1	equ	0xFE3
 31056                           fsr1h	equ	0xFE2
 31057                           fsr1l	equ	0xFE1
 31058                           indf2	equ	0xFDF
 31059                           postinc2	equ	0xFDE
 31060                           postdec2	equ	0xFDD
 31061                           plusw2	equ	0xFDB
 31062                           fsr2h	equ	0xFDA
 31063                           fsr2l	equ	0xFD9
 31064                           status	equ	0xFD8
 31065                           
 31066 ;; *************** function ___lldiv *****************
 31067 ;; Defined at:
 31068 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 31069 ;; Parameters:    Size  Location     Type
 31070 ;;  dividend        4    0[COMRAM] unsigned long 
 31071 ;;  divisor         4    4[COMRAM] unsigned long 
 31072 ;; Auto vars:     Size  Location     Type
 31073 ;;  quotient        4    8[COMRAM] unsigned long 
 31074 ;;  counter         1   12[COMRAM] unsigned char 
 31075 ;; Return value:  Size  Location     Type
 31076 ;;                  4    0[COMRAM] unsigned long 
 31077 ;; Registers used:
 31078 ;;		wreg, status,2, status,0
 31079 ;; Tracked objects:
 31080 ;;		On entry : 0/0
 31081 ;;		On exit  : 0/0
 31082 ;;		Unchanged: 0/0
 31083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31084 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31085 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31087 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31088 ;;Total ram usage:       13 bytes
 31089 ;; Hardware stack levels used:    1
 31090 ;; This function calls:
 31091 ;;		Nothing
 31092 ;; This function is called by:
 31093 ;;		__display_itoa_u32
 31094 ;; This function uses a non-reentrant model
 31095 ;;
 31096                           
 31097                           	psect	text147
 31098  00813A                     __ptext147:
 31099                           	opt stack 0
 31100  00813A                     ___lldiv:
 31101                           	opt stack 24
 31102                           
 31103                           ;incstack = 0
 31104  00813A  0E00               	movlw	0
 31105  00813C  6E09               	movwf	___lldiv@quotient,c
 31106  00813E  0E00               	movlw	0
 31107  008140  6E0A               	movwf	___lldiv@quotient+1,c
 31108  008142  0E00               	movlw	0
 31109  008144  6E0B               	movwf	___lldiv@quotient+2,c
 31110  008146  0E00               	movlw	0
 31111  008148  6E0C               	movwf	___lldiv@quotient+3,c
 31112  00814A  5005               	movf	___lldiv@divisor,w,c
 31113  00814C  1006               	iorwf	___lldiv@divisor+1,w,c
 31114  00814E  1007               	iorwf	___lldiv@divisor+2,w,c
 31115  008150  1008               	iorwf	___lldiv@divisor+3,w,c
 31116  008152  B4D8               	btfsc	status,2,c
 31117  008154  D02A               	goto	l3121
 31118  008156  0E01               	movlw	1
 31119  008158  6E0D               	movwf	___lldiv@counter,c
 31120  00815A  D006               	goto	l3116
 31121  00815C  90D8               	bcf	status,0,c
 31122  00815E  3605               	rlcf	___lldiv@divisor,f,c
 31123  008160  3606               	rlcf	___lldiv@divisor+1,f,c
 31124  008162  3607               	rlcf	___lldiv@divisor+2,f,c
 31125  008164  3608               	rlcf	___lldiv@divisor+3,f,c
 31126  008166  2A0D               	incf	___lldiv@counter,f,c
 31127  008168                     l3116:
 31128  008168  AE08               	btfss	___lldiv@divisor+3,7,c
 31129  00816A  D7F8               	goto	l3117
 31130  00816C                     u7980:
 31131  00816C  90D8               	bcf	status,0,c
 31132  00816E  3609               	rlcf	___lldiv@quotient,f,c
 31133  008170  360A               	rlcf	___lldiv@quotient+1,f,c
 31134  008172  360B               	rlcf	___lldiv@quotient+2,f,c
 31135  008174  360C               	rlcf	___lldiv@quotient+3,f,c
 31136  008176  5005               	movf	___lldiv@divisor,w,c
 31137  008178  5C01               	subwf	___lldiv@dividend,w,c
 31138  00817A  5006               	movf	___lldiv@divisor+1,w,c
 31139  00817C  5802               	subwfb	___lldiv@dividend+1,w,c
 31140  00817E  5007               	movf	___lldiv@divisor+2,w,c
 31141  008180  5803               	subwfb	___lldiv@dividend+2,w,c
 31142  008182  5008               	movf	___lldiv@divisor+3,w,c
 31143  008184  5804               	subwfb	___lldiv@dividend+3,w,c
 31144  008186  A0D8               	btfss	status,0,c
 31145  008188  D009               	goto	l3120
 31146  00818A  5005               	movf	___lldiv@divisor,w,c
 31147  00818C  5E01               	subwf	___lldiv@dividend,f,c
 31148  00818E  5006               	movf	___lldiv@divisor+1,w,c
 31149  008190  5A02               	subwfb	___lldiv@dividend+1,f,c
 31150  008192  5007               	movf	___lldiv@divisor+2,w,c
 31151  008194  5A03               	subwfb	___lldiv@dividend+2,f,c
 31152  008196  5008               	movf	___lldiv@divisor+3,w,c
 31153  008198  5A04               	subwfb	___lldiv@dividend+3,f,c
 31154  00819A  8009               	bsf	___lldiv@quotient,0,c
 31155  00819C                     l3120:
 31156  00819C  90D8               	bcf	status,0,c
 31157  00819E  3208               	rrcf	___lldiv@divisor+3,f,c
 31158  0081A0  3207               	rrcf	___lldiv@divisor+2,f,c
 31159  0081A2  3206               	rrcf	___lldiv@divisor+1,f,c
 31160  0081A4  3205               	rrcf	___lldiv@divisor,f,c
 31161  0081A6  2E0D               	decfsz	___lldiv@counter,f,c
 31162  0081A8  D7E1               	goto	u7980
 31163  0081AA                     l3121:
 31164  0081AA  C009  F001         	movff	___lldiv@quotient,?___lldiv
 31165  0081AE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 31166  0081B2  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 31167  0081B6  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 31168  0081BA  0012               	return		;funcret
 31169  0081BC                     __end_of___lldiv:
 31170                           	opt stack 0
 31171                           tosu	equ	0xFFF
 31172                           tosh	equ	0xFFE
 31173                           tosl	equ	0xFFD
 31174                           pclath	equ	0xFFA
 31175                           tblptru	equ	0xFF8
 31176                           tblptrh	equ	0xFF7
 31177                           tblptrl	equ	0xFF6
 31178                           tablat	equ	0xFF5
 31179                           prodh	equ	0xFF4
 31180                           prodl	equ	0xFF3
 31181                           intcon	equ	0xFF2
 31182                           intcon2	equ	0xFF1
 31183                           intcon3	equ	0xFF0
 31184                           indf0	equ	0xFEF
 31185                           postinc0	equ	0xFEE
 31186                           fsr0h	equ	0xFEA
 31187                           fsr0l	equ	0xFE9
 31188                           wreg	equ	0xFE8
 31189                           indf1	equ	0xFE7
 31190                           postdec1	equ	0xFE5
 31191                           plusw1	equ	0xFE3
 31192                           fsr1h	equ	0xFE2
 31193                           fsr1l	equ	0xFE1
 31194                           indf2	equ	0xFDF
 31195                           postinc2	equ	0xFDE
 31196                           postdec2	equ	0xFDD
 31197                           plusw2	equ	0xFDB
 31198                           fsr2h	equ	0xFDA
 31199                           fsr2l	equ	0xFD9
 31200                           status	equ	0xFD8
 31201                           
 31202 ;; *************** function __display_done *****************
 31203 ;; Defined at:
 31204 ;;		line 539 in file "display.c"
 31205 ;; Parameters:    Size  Location     Type
 31206 ;;		None
 31207 ;; Auto vars:     Size  Location     Type
 31208 ;;  cntr            1   30[COMRAM] unsigned char 
 31209 ;; Return value:  Size  Location     Type
 31210 ;;                  1    wreg      void 
 31211 ;; Registers used:
 31212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31213 ;; Tracked objects:
 31214 ;;		On entry : 0/0
 31215 ;;		On exit  : 0/0
 31216 ;;		Unchanged: 0/0
 31217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31222 ;;Total ram usage:        1 bytes
 31223 ;; Hardware stack levels used:    1
 31224 ;; Hardware stack levels required when called:    4
 31225 ;; This function calls:
 31226 ;;		__display_itoa_u16
 31227 ;;		_bootloader_get_flashPagesWritten
 31228 ;; This function is called by:
 31229 ;;		_display_prepare
 31230 ;; This function uses a non-reentrant model
 31231 ;;
 31232                           
 31233                           	psect	text148
 31234  00409E                     __ptext148:
 31235                           	opt stack 0
 31236  00409E                     __display_done:
 31237                           	opt stack 22
 31238                           
 31239                           ;display.c: 541: uint8_t cntr;;display.c: 542: cntr = 0;
 31240                           
 31241                           ;incstack = 0
 31242  00409E  0E00               	movlw	0
 31243  0040A0  6E1F               	movwf	__display_done@cntr,c
 31244                           
 31245                           ;display.c: 543: while(done_line1[cntr])
 31246  0040A2  D017               	goto	l1699
 31247  0040A4                     
 31248                           ;display.c: 544: display_content[0][cntr] = done_line1[cntr++];
 31249  0040A4  501F               	movf	__display_done@cntr,w,c
 31250  0040A6  0D01               	mullw	1
 31251  0040A8  0E68               	movlw	low _done_line1
 31252  0040AA  24F3               	addwf	prodl,w,c
 31253  0040AC  6EF6               	movwf	tblptrl,c
 31254  0040AE  0EBD               	movlw	high _done_line1
 31255  0040B0  20F4               	addwfc	prodh,w,c
 31256  0040B2  6EF7               	movwf	tblptrh,c
 31257  0040B4                     	if	1	;There are 3 active tblptr bytes
 31258  0040B4  6AF8               	clrf	tblptru,c
 31259  0040B6  0E00               	movlw	low (__mediumconst shr (0+16))
 31260  0040B8  22F8               	addwfc	tblptru,f,c
 31261  0040BA                     	endif
 31262  0040BA  501F               	movf	__display_done@cntr,w,c
 31263  0040BC  0D01               	mullw	1
 31264  0040BE  0E00               	movlw	low _display_content
 31265  0040C0  24F3               	addwf	prodl,w,c
 31266  0040C2  6ED9               	movwf	fsr2l,c
 31267  0040C4  0E02               	movlw	high _display_content
 31268  0040C6  20F4               	addwfc	prodh,w,c
 31269  0040C8  6EDA               	movwf	fsr2h,c
 31270  0040CA  0008               	tblrd		*
 31271  0040CC  CFF5 FFDF          	movff	tablat,indf2
 31272  0040D0  2A1F               	incf	__display_done@cntr,f,c
 31273  0040D2                     l1699:
 31274  0040D2  501F               	movf	__display_done@cntr,w,c
 31275  0040D4  0D01               	mullw	1
 31276  0040D6  0E68               	movlw	low _done_line1
 31277  0040D8  24F3               	addwf	prodl,w,c
 31278  0040DA  6EF6               	movwf	tblptrl,c
 31279  0040DC  0EBD               	movlw	high _done_line1
 31280  0040DE  20F4               	addwfc	prodh,w,c
 31281  0040E0  6EF7               	movwf	tblptrh,c
 31282  0040E2                     	if	1	;There are 3 active tblptr bytes
 31283  0040E2  6AF8               	clrf	tblptru,c
 31284  0040E4  0E00               	movlw	low (__mediumconst shr (0+16))
 31285  0040E6  22F8               	addwfc	tblptru,f,c
 31286  0040E8                     	endif
 31287  0040E8  0008               	tblrd		*
 31288  0040EA  50F5               	movf	tablat,w,c
 31289  0040EC  0900               	iorlw	0
 31290  0040EE  A4D8               	btfss	status,2,c
 31291  0040F0  D7D9               	goto	l1700
 31292                           
 31293                           ;display.c: 545: cntr = 0;
 31294  0040F2  0E00               	movlw	0
 31295  0040F4  6E1F               	movwf	__display_done@cntr,c
 31296                           
 31297                           ;display.c: 546: while(done_line2[cntr])
 31298  0040F6  D017               	goto	l1702
 31299  0040F8                     
 31300                           ;display.c: 547: display_content[1][cntr] = done_line2[cntr++];
 31301  0040F8  501F               	movf	__display_done@cntr,w,c
 31302  0040FA  0D01               	mullw	1
 31303  0040FC  0E9D               	movlw	low _done_line2
 31304  0040FE  24F3               	addwf	prodl,w,c
 31305  004100  6EF6               	movwf	tblptrl,c
 31306  004102  0EBE               	movlw	high _done_line2
 31307  004104  20F4               	addwfc	prodh,w,c
 31308  004106  6EF7               	movwf	tblptrh,c
 31309  004108                     	if	1	;There are 3 active tblptr bytes
 31310  004108  6AF8               	clrf	tblptru,c
 31311  00410A  0E00               	movlw	low (__mediumconst shr (0+16))
 31312  00410C  22F8               	addwfc	tblptru,f,c
 31313  00410E                     	endif
 31314  00410E  501F               	movf	__display_done@cntr,w,c
 31315  004110  0D01               	mullw	1
 31316  004112  0E14               	movlw	low (_display_content+20)
 31317  004114  24F3               	addwf	prodl,w,c
 31318  004116  6ED9               	movwf	fsr2l,c
 31319  004118  0E02               	movlw	high (_display_content+20)
 31320  00411A  20F4               	addwfc	prodh,w,c
 31321  00411C  6EDA               	movwf	fsr2h,c
 31322  00411E  0008               	tblrd		*
 31323  004120  CFF5 FFDF          	movff	tablat,indf2
 31324  004124  2A1F               	incf	__display_done@cntr,f,c
 31325  004126                     l1702:
 31326  004126  501F               	movf	__display_done@cntr,w,c
 31327  004128  0D01               	mullw	1
 31328  00412A  0E9D               	movlw	low _done_line2
 31329  00412C  24F3               	addwf	prodl,w,c
 31330  00412E  6EF6               	movwf	tblptrl,c
 31331  004130  0EBE               	movlw	high _done_line2
 31332  004132  20F4               	addwfc	prodh,w,c
 31333  004134  6EF7               	movwf	tblptrh,c
 31334  004136                     	if	1	;There are 3 active tblptr bytes
 31335  004136  6AF8               	clrf	tblptru,c
 31336  004138  0E00               	movlw	low (__mediumconst shr (0+16))
 31337  00413A  22F8               	addwfc	tblptru,f,c
 31338  00413C                     	endif
 31339  00413C  0008               	tblrd		*
 31340  00413E  50F5               	movf	tablat,w,c
 31341  004140  0900               	iorlw	0
 31342  004142  A4D8               	btfss	status,2,c
 31343  004144  D7D9               	goto	l1703
 31344                           
 31345                           ;display.c: 548: cntr = 0;
 31346  004146  0E00               	movlw	0
 31347  004148  6E1F               	movwf	__display_done@cntr,c
 31348                           
 31349                           ;display.c: 549: while(done_line3[cntr])
 31350  00414A  D017               	goto	l1705
 31351  00414C                     
 31352                           ;display.c: 550: display_content[2][cntr] = done_line3[cntr++];
 31353  00414C  501F               	movf	__display_done@cntr,w,c
 31354  00414E  0D01               	mullw	1
 31355  004150  0E58               	movlw	low _done_line3
 31356  004152  24F3               	addwf	prodl,w,c
 31357  004154  6EF6               	movwf	tblptrl,c
 31358  004156  0EBD               	movlw	high _done_line3
 31359  004158  20F4               	addwfc	prodh,w,c
 31360  00415A  6EF7               	movwf	tblptrh,c
 31361  00415C                     	if	1	;There are 3 active tblptr bytes
 31362  00415C  6AF8               	clrf	tblptru,c
 31363  00415E  0E00               	movlw	low (__mediumconst shr (0+16))
 31364  004160  22F8               	addwfc	tblptru,f,c
 31365  004162                     	endif
 31366  004162  501F               	movf	__display_done@cntr,w,c
 31367  004164  0D01               	mullw	1
 31368  004166  0E28               	movlw	low (_display_content+40)
 31369  004168  24F3               	addwf	prodl,w,c
 31370  00416A  6ED9               	movwf	fsr2l,c
 31371  00416C  0E02               	movlw	high (_display_content+40)
 31372  00416E  20F4               	addwfc	prodh,w,c
 31373  004170  6EDA               	movwf	fsr2h,c
 31374  004172  0008               	tblrd		*
 31375  004174  CFF5 FFDF          	movff	tablat,indf2
 31376  004178  2A1F               	incf	__display_done@cntr,f,c
 31377  00417A                     l1705:
 31378  00417A  501F               	movf	__display_done@cntr,w,c
 31379  00417C  0D01               	mullw	1
 31380  00417E  0E58               	movlw	low _done_line3
 31381  004180  24F3               	addwf	prodl,w,c
 31382  004182  6EF6               	movwf	tblptrl,c
 31383  004184  0EBD               	movlw	high _done_line3
 31384  004186  20F4               	addwfc	prodh,w,c
 31385  004188  6EF7               	movwf	tblptrh,c
 31386  00418A                     	if	1	;There are 3 active tblptr bytes
 31387  00418A  6AF8               	clrf	tblptru,c
 31388  00418C  0E00               	movlw	low (__mediumconst shr (0+16))
 31389  00418E  22F8               	addwfc	tblptru,f,c
 31390  004190                     	endif
 31391  004190  0008               	tblrd		*
 31392  004192  50F5               	movf	tablat,w,c
 31393  004194  0900               	iorlw	0
 31394  004196  A4D8               	btfss	status,2,c
 31395  004198  D7D9               	goto	l1706
 31396                           
 31397                           ;display.c: 551: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 31398  00419A  EC63  F04E         	call	_bootloader_get_flashPagesWritten	;wreg free
 31399  00419E  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 31400  0041A2  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 31401  0041A6  6A1B               	clrf	__display_itoa_u16@value+2,c
 31402  0041A8  6A1C               	clrf	__display_itoa_u16@value+3,c
 31403  0041AA  501F               	movf	__display_done@cntr,w,c
 31404  0041AC  0D01               	mullw	1
 31405  0041AE  0E28               	movlw	low (_display_content+40)
 31406  0041B0  24F3               	addwf	prodl,w,c
 31407  0041B2  6E1D               	movwf	__display_itoa_u16@text,c
 31408  0041B4  0E02               	movlw	high (_display_content+40)
 31409  0041B6  20F4               	addwfc	prodh,w,c
 31410  0041B8  6E1E               	movwf	__display_itoa_u16@text+1,c
 31411  0041BA  ECF5  F037         	call	__display_itoa_u16	;wreg free
 31412                           
 31413                           ;display.c: 552: cntr = 0;
 31414  0041BE  0E00               	movlw	0
 31415  0041C0  6E1F               	movwf	__display_done@cntr,c
 31416                           
 31417                           ;display.c: 553: while(done_line4[cntr])
 31418  0041C2  D017               	goto	l1708
 31419  0041C4                     
 31420                           ;display.c: 554: display_content[3][cntr] = done_line4[cntr++];
 31421  0041C4  501F               	movf	__display_done@cntr,w,c
 31422  0041C6  0D01               	mullw	1
 31423  0041C8  0E48               	movlw	low _done_line4
 31424  0041CA  24F3               	addwf	prodl,w,c
 31425  0041CC  6EF6               	movwf	tblptrl,c
 31426  0041CE  0EBD               	movlw	high _done_line4
 31427  0041D0  20F4               	addwfc	prodh,w,c
 31428  0041D2  6EF7               	movwf	tblptrh,c
 31429  0041D4                     	if	1	;There are 3 active tblptr bytes
 31430  0041D4  6AF8               	clrf	tblptru,c
 31431  0041D6  0E00               	movlw	low (__mediumconst shr (0+16))
 31432  0041D8  22F8               	addwfc	tblptru,f,c
 31433  0041DA                     	endif
 31434  0041DA  501F               	movf	__display_done@cntr,w,c
 31435  0041DC  0D01               	mullw	1
 31436  0041DE  0E3C               	movlw	low (_display_content+60)
 31437  0041E0  24F3               	addwf	prodl,w,c
 31438  0041E2  6ED9               	movwf	fsr2l,c
 31439  0041E4  0E02               	movlw	high (_display_content+60)
 31440  0041E6  20F4               	addwfc	prodh,w,c
 31441  0041E8  6EDA               	movwf	fsr2h,c
 31442  0041EA  0008               	tblrd		*
 31443  0041EC  CFF5 FFDF          	movff	tablat,indf2
 31444  0041F0  2A1F               	incf	__display_done@cntr,f,c
 31445  0041F2                     l1708:
 31446  0041F2  501F               	movf	__display_done@cntr,w,c
 31447  0041F4  0D01               	mullw	1
 31448  0041F6  0E48               	movlw	low _done_line4
 31449  0041F8  24F3               	addwf	prodl,w,c
 31450  0041FA  6EF6               	movwf	tblptrl,c
 31451  0041FC  0EBD               	movlw	high _done_line4
 31452  0041FE  20F4               	addwfc	prodh,w,c
 31453  004200  6EF7               	movwf	tblptrh,c
 31454  004202                     	if	1	;There are 3 active tblptr bytes
 31455  004202  6AF8               	clrf	tblptru,c
 31456  004204  0E00               	movlw	low (__mediumconst shr (0+16))
 31457  004206  22F8               	addwfc	tblptru,f,c
 31458  004208                     	endif
 31459  004208  0008               	tblrd		*
 31460  00420A  50F5               	movf	tablat,w,c
 31461  00420C  0900               	iorlw	0
 31462  00420E  B4D8               	btfsc	status,2,c
 31463  004210  0012               	return	
 31464  004212  D7D8               	goto	l1709
 31465  004214                     __end_of__display_done:
 31466                           	opt stack 0
 31467                           tosu	equ	0xFFF
 31468                           tosh	equ	0xFFE
 31469                           tosl	equ	0xFFD
 31470                           pclath	equ	0xFFA
 31471                           tblptru	equ	0xFF8
 31472                           tblptrh	equ	0xFF7
 31473                           tblptrl	equ	0xFF6
 31474                           tablat	equ	0xFF5
 31475                           prodh	equ	0xFF4
 31476                           prodl	equ	0xFF3
 31477                           intcon	equ	0xFF2
 31478                           intcon2	equ	0xFF1
 31479                           intcon3	equ	0xFF0
 31480                           indf0	equ	0xFEF
 31481                           postinc0	equ	0xFEE
 31482                           fsr0h	equ	0xFEA
 31483                           fsr0l	equ	0xFE9
 31484                           wreg	equ	0xFE8
 31485                           indf1	equ	0xFE7
 31486                           postdec1	equ	0xFE5
 31487                           plusw1	equ	0xFE3
 31488                           fsr1h	equ	0xFE2
 31489                           fsr1l	equ	0xFE1
 31490                           indf2	equ	0xFDF
 31491                           postinc2	equ	0xFDE
 31492                           postdec2	equ	0xFDD
 31493                           plusw2	equ	0xFDB
 31494                           fsr2h	equ	0xFDA
 31495                           fsr2l	equ	0xFD9
 31496                           status	equ	0xFD8
 31497                           
 31498 ;; *************** function _bootloader_get_flashPagesWritten *****************
 31499 ;; Defined at:
 31500 ;;		line 514 in file "bootloader.c"
 31501 ;; Parameters:    Size  Location     Type
 31502 ;;		None
 31503 ;; Auto vars:     Size  Location     Type
 31504 ;;		None
 31505 ;; Return value:  Size  Location     Type
 31506 ;;                  2    0[COMRAM] unsigned int 
 31507 ;; Registers used:
 31508 ;;		None
 31509 ;; Tracked objects:
 31510 ;;		On entry : 0/0
 31511 ;;		On exit  : 0/0
 31512 ;;		Unchanged: 0/0
 31513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31518 ;;Total ram usage:        2 bytes
 31519 ;; Hardware stack levels used:    1
 31520 ;; This function calls:
 31521 ;;		Nothing
 31522 ;; This function is called by:
 31523 ;;		__display_programming
 31524 ;;		__display_done
 31525 ;;		__fill_buffer_get_bootloader_details
 31526 ;; This function uses a non-reentrant model
 31527 ;;
 31528                           
 31529                           	psect	text149
 31530  009CC6                     __ptext149:
 31531                           	opt stack 0
 31532  009CC6                     _bootloader_get_flashPagesWritten:
 31533                           	opt stack 25
 31534                           
 31535                           ;bootloader.c: 516: return flash_pages_written;
 31536                           
 31537                           ;incstack = 0
 31538  009CC6  C174  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 31539  009CCA  C175  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 31540  009CCE  0012               	return		;funcret
 31541  009CD0                     __end_of_bootloader_get_flashPagesWritten:
 31542                           	opt stack 0
 31543                           tosu	equ	0xFFF
 31544                           tosh	equ	0xFFE
 31545                           tosl	equ	0xFFD
 31546                           pclath	equ	0xFFA
 31547                           tblptru	equ	0xFF8
 31548                           tblptrh	equ	0xFF7
 31549                           tblptrl	equ	0xFF6
 31550                           tablat	equ	0xFF5
 31551                           prodh	equ	0xFF4
 31552                           prodl	equ	0xFF3
 31553                           intcon	equ	0xFF2
 31554                           intcon2	equ	0xFF1
 31555                           intcon3	equ	0xFF0
 31556                           indf0	equ	0xFEF
 31557                           postinc0	equ	0xFEE
 31558                           fsr0h	equ	0xFEA
 31559                           fsr0l	equ	0xFE9
 31560                           wreg	equ	0xFE8
 31561                           indf1	equ	0xFE7
 31562                           postdec1	equ	0xFE5
 31563                           plusw1	equ	0xFE3
 31564                           fsr1h	equ	0xFE2
 31565                           fsr1l	equ	0xFE1
 31566                           indf2	equ	0xFDF
 31567                           postinc2	equ	0xFDE
 31568                           postdec2	equ	0xFDD
 31569                           plusw2	equ	0xFDB
 31570                           fsr2h	equ	0xFDA
 31571                           fsr2l	equ	0xFD9
 31572                           status	equ	0xFD8
 31573                           
 31574 ;; *************** function __display_clear *****************
 31575 ;; Defined at:
 31576 ;;		line 81 in file "display.c"
 31577 ;; Parameters:    Size  Location     Type
 31578 ;;		None
 31579 ;; Auto vars:     Size  Location     Type
 31580 ;;  col             1    3[COMRAM] unsigned char 
 31581 ;;  row             1    2[COMRAM] unsigned char 
 31582 ;; Return value:  Size  Location     Type
 31583 ;;                  1    wreg      void 
 31584 ;; Registers used:
 31585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31586 ;; Tracked objects:
 31587 ;;		On entry : 0/0
 31588 ;;		On exit  : 0/0
 31589 ;;		Unchanged: 0/0
 31590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31595 ;;Total ram usage:        4 bytes
 31596 ;; Hardware stack levels used:    1
 31597 ;; This function calls:
 31598 ;;		Nothing
 31599 ;; This function is called by:
 31600 ;;		_display_prepare
 31601 ;; This function uses a non-reentrant model
 31602 ;;
 31603                           
 31604                           	psect	text150
 31605  009082                     __ptext150:
 31606                           	opt stack 0
 31607  009082                     __display_clear:
 31608                           	opt stack 26
 31609                           
 31610                           ;display.c: 83: uint8_t row;;display.c: 84: uint8_t col;;display.c: 85: for(row=0;row<4;
      +                          ++row)
 31611                           
 31612                           ;incstack = 0
 31613  009082  0E00               	movlw	0
 31614  009084  6E03               	movwf	__display_clear@row,c
 31615  009086                     l12194:
 31616  009086  0E03               	movlw	3
 31617  009088  6403               	cpfsgt	__display_clear@row,c
 31618  00908A  D001               	goto	l1476
 31619  00908C  0012               	return	
 31620  00908E                     l1476:
 31621                           
 31622                           ;display.c: 86: {;display.c: 87: for(col=0;col<20;++col)
 31623  00908E  0E00               	movlw	0
 31624  009090  6E04               	movwf	__display_clear@col,c
 31625  009092                     l12200:
 31626  009092  0E13               	movlw	19
 31627  009094  6404               	cpfsgt	__display_clear@col,c
 31628  009096  D001               	goto	l1478
 31629  009098  D016               	goto	u9250
 31630  00909A                     l1478:
 31631                           
 31632                           ;display.c: 88: {;display.c: 89: display_content[row][col] = ' ';
 31633  00909A  5003               	movf	__display_clear@row,w,c
 31634  00909C  0D14               	mullw	20
 31635  00909E  0E00               	movlw	low _display_content
 31636  0090A0  6E01               	movwf	??__display_clear& (0+255),c
 31637  0090A2  0E02               	movlw	high _display_content
 31638  0090A4  6E02               	movwf	(??__display_clear+1)& (0+255),c
 31639  0090A6  50F3               	movf	prodl,w,c
 31640  0090A8  2601               	addwf	??__display_clear,f,c
 31641  0090AA  50F4               	movf	prodh,w,c
 31642  0090AC  2202               	addwfc	??__display_clear+1,f,c
 31643  0090AE  5004               	movf	__display_clear@col,w,c
 31644  0090B0  0D01               	mullw	1
 31645  0090B2  50F3               	movf	prodl,w,c
 31646  0090B4  2401               	addwf	??__display_clear,w,c
 31647  0090B6  6ED9               	movwf	fsr2l,c
 31648  0090B8  50F4               	movf	prodh,w,c
 31649  0090BA  2002               	addwfc	??__display_clear+1,w,c
 31650  0090BC  6EDA               	movwf	fsr2h,c
 31651  0090BE  0E20               	movlw	32
 31652  0090C0  6EDF               	movwf	indf2,c
 31653  0090C2  2A04               	incf	__display_clear@col,f,c
 31654  0090C4  D7E6               	goto	l12200
 31655  0090C6                     u9250:
 31656  0090C6  2A03               	incf	__display_clear@row,f,c
 31657  0090C8  D7DE               	goto	l12194
 31658  0090CA                     __end_of__display_clear:
 31659                           	opt stack 0
 31660                           tosu	equ	0xFFF
 31661                           tosh	equ	0xFFE
 31662                           tosl	equ	0xFFD
 31663                           pclath	equ	0xFFA
 31664                           tblptru	equ	0xFF8
 31665                           tblptrh	equ	0xFF7
 31666                           tblptrl	equ	0xFF6
 31667                           tablat	equ	0xFF5
 31668                           prodh	equ	0xFF4
 31669                           prodl	equ	0xFF3
 31670                           intcon	equ	0xFF2
 31671                           intcon2	equ	0xFF1
 31672                           intcon3	equ	0xFF0
 31673                           indf0	equ	0xFEF
 31674                           postinc0	equ	0xFEE
 31675                           fsr0h	equ	0xFEA
 31676                           fsr0l	equ	0xFE9
 31677                           wreg	equ	0xFE8
 31678                           indf1	equ	0xFE7
 31679                           postdec1	equ	0xFE5
 31680                           plusw1	equ	0xFE3
 31681                           fsr1h	equ	0xFE2
 31682                           fsr1l	equ	0xFE1
 31683                           indf2	equ	0xFDF
 31684                           postinc2	equ	0xFDE
 31685                           postdec2	equ	0xFDD
 31686                           plusw2	equ	0xFDB
 31687                           fsr2h	equ	0xFDA
 31688                           fsr2l	equ	0xFD9
 31689                           status	equ	0xFD8
 31690                           
 31691 ;; *************** function __display_checked *****************
 31692 ;; Defined at:
 31693 ;;		line 443 in file "display.c"
 31694 ;; Parameters:    Size  Location     Type
 31695 ;;		None
 31696 ;; Auto vars:     Size  Location     Type
 31697 ;;  cntr            1   33[COMRAM] unsigned char 
 31698 ;;  start           1   32[COMRAM] unsigned char 
 31699 ;; Return value:  Size  Location     Type
 31700 ;;                  1    wreg      void 
 31701 ;; Registers used:
 31702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31703 ;; Tracked objects:
 31704 ;;		On entry : 0/0
 31705 ;;		On exit  : 0/0
 31706 ;;		Unchanged: 0/0
 31707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31710 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31712 ;;Total ram usage:        4 bytes
 31713 ;; Hardware stack levels used:    1
 31714 ;; Hardware stack levels required when called:    4
 31715 ;; This function calls:
 31716 ;;		__display_itoa_u16
 31717 ;;		_bootloader_get_total_entries
 31718 ;; This function is called by:
 31719 ;;		_display_prepare
 31720 ;; This function uses a non-reentrant model
 31721 ;;
 31722                           
 31723                           	psect	text151
 31724  003DA8                     __ptext151:
 31725                           	opt stack 0
 31726  003DA8                     __display_checked:
 31727                           	opt stack 22
 31728                           
 31729                           ;display.c: 445: uint8_t cntr;;display.c: 446: uint8_t start;;display.c: 447: cntr = 0;
 31730                           
 31731                           ;incstack = 0
 31732  003DA8  0E00               	movlw	0
 31733  003DAA  6E22               	movwf	__display_checked@cntr,c
 31734                           
 31735                           ;display.c: 448: while(checked_line1[cntr])
 31736  003DAC  D017               	goto	l1635
 31737  003DAE                     
 31738                           ;display.c: 449: display_content[0][cntr] = checked_line1[cntr++];
 31739  003DAE  5022               	movf	__display_checked@cntr,w,c
 31740  003DB0  0D01               	mullw	1
 31741  003DB2  0EA8               	movlw	low _checked_line1
 31742  003DB4  24F3               	addwf	prodl,w,c
 31743  003DB6  6EF6               	movwf	tblptrl,c
 31744  003DB8  0EBD               	movlw	high _checked_line1
 31745  003DBA  20F4               	addwfc	prodh,w,c
 31746  003DBC  6EF7               	movwf	tblptrh,c
 31747  003DBE                     	if	1	;There are 3 active tblptr bytes
 31748  003DBE  6AF8               	clrf	tblptru,c
 31749  003DC0  0E00               	movlw	low (__mediumconst shr (0+16))
 31750  003DC2  22F8               	addwfc	tblptru,f,c
 31751  003DC4                     	endif
 31752  003DC4  5022               	movf	__display_checked@cntr,w,c
 31753  003DC6  0D01               	mullw	1
 31754  003DC8  0E00               	movlw	low _display_content
 31755  003DCA  24F3               	addwf	prodl,w,c
 31756  003DCC  6ED9               	movwf	fsr2l,c
 31757  003DCE  0E02               	movlw	high _display_content
 31758  003DD0  20F4               	addwfc	prodh,w,c
 31759  003DD2  6EDA               	movwf	fsr2h,c
 31760  003DD4  0008               	tblrd		*
 31761  003DD6  CFF5 FFDF          	movff	tablat,indf2
 31762  003DDA  2A22               	incf	__display_checked@cntr,f,c
 31763  003DDC                     l1635:
 31764  003DDC  5022               	movf	__display_checked@cntr,w,c
 31765  003DDE  0D01               	mullw	1
 31766  003DE0  0EA8               	movlw	low _checked_line1
 31767  003DE2  24F3               	addwf	prodl,w,c
 31768  003DE4  6EF6               	movwf	tblptrl,c
 31769  003DE6  0EBD               	movlw	high _checked_line1
 31770  003DE8  20F4               	addwfc	prodh,w,c
 31771  003DEA  6EF7               	movwf	tblptrh,c
 31772  003DEC                     	if	1	;There are 3 active tblptr bytes
 31773  003DEC  6AF8               	clrf	tblptru,c
 31774  003DEE  0E00               	movlw	low (__mediumconst shr (0+16))
 31775  003DF0  22F8               	addwfc	tblptru,f,c
 31776  003DF2                     	endif
 31777  003DF2  0008               	tblrd		*
 31778  003DF4  50F5               	movf	tablat,w,c
 31779  003DF6  0900               	iorlw	0
 31780  003DF8  A4D8               	btfss	status,2,c
 31781  003DFA  D7D9               	goto	l1636
 31782                           
 31783                           ;display.c: 450: cntr = 0;
 31784  003DFC  0E00               	movlw	0
 31785  003DFE  6E22               	movwf	__display_checked@cntr,c
 31786                           
 31787                           ;display.c: 451: while(checked_line2[cntr])
 31788  003E00  D017               	goto	l1638
 31789  003E02                     
 31790                           ;display.c: 452: display_content[1][cntr] = checked_line2[cntr++];
 31791  003E02  5022               	movf	__display_checked@cntr,w,c
 31792  003E04  0D01               	mullw	1
 31793  003E06  0E6D               	movlw	low _checked_line2
 31794  003E08  24F3               	addwf	prodl,w,c
 31795  003E0A  6EF6               	movwf	tblptrl,c
 31796  003E0C  0EBC               	movlw	high _checked_line2
 31797  003E0E  20F4               	addwfc	prodh,w,c
 31798  003E10  6EF7               	movwf	tblptrh,c
 31799  003E12                     	if	1	;There are 3 active tblptr bytes
 31800  003E12  6AF8               	clrf	tblptru,c
 31801  003E14  0E00               	movlw	low (__mediumconst shr (0+16))
 31802  003E16  22F8               	addwfc	tblptru,f,c
 31803  003E18                     	endif
 31804  003E18  5022               	movf	__display_checked@cntr,w,c
 31805  003E1A  0D01               	mullw	1
 31806  003E1C  0E14               	movlw	low (_display_content+20)
 31807  003E1E  24F3               	addwf	prodl,w,c
 31808  003E20  6ED9               	movwf	fsr2l,c
 31809  003E22  0E02               	movlw	high (_display_content+20)
 31810  003E24  20F4               	addwfc	prodh,w,c
 31811  003E26  6EDA               	movwf	fsr2h,c
 31812  003E28  0008               	tblrd		*
 31813  003E2A  CFF5 FFDF          	movff	tablat,indf2
 31814  003E2E  2A22               	incf	__display_checked@cntr,f,c
 31815  003E30                     l1638:
 31816  003E30  5022               	movf	__display_checked@cntr,w,c
 31817  003E32  0D01               	mullw	1
 31818  003E34  0E6D               	movlw	low _checked_line2
 31819  003E36  24F3               	addwf	prodl,w,c
 31820  003E38  6EF6               	movwf	tblptrl,c
 31821  003E3A  0EBC               	movlw	high _checked_line2
 31822  003E3C  20F4               	addwfc	prodh,w,c
 31823  003E3E  6EF7               	movwf	tblptrh,c
 31824  003E40                     	if	1	;There are 3 active tblptr bytes
 31825  003E40  6AF8               	clrf	tblptru,c
 31826  003E42  0E00               	movlw	low (__mediumconst shr (0+16))
 31827  003E44  22F8               	addwfc	tblptru,f,c
 31828  003E46                     	endif
 31829  003E46  0008               	tblrd		*
 31830  003E48  50F5               	movf	tablat,w,c
 31831  003E4A  0900               	iorlw	0
 31832  003E4C  A4D8               	btfss	status,2,c
 31833  003E4E  D7D9               	goto	l1639
 31834                           
 31835                           ;display.c: 454: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 31836  003E50  EC68  F04E         	call	_bootloader_get_total_entries	;wreg free
 31837  003E54  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 31838  003E58  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 31839  003E5C  6A1B               	clrf	__display_itoa_u16@value+2,c
 31840  003E5E  6A1C               	clrf	__display_itoa_u16@value+3,c
 31841  003E60  0E28               	movlw	low (_display_content+40)
 31842  003E62  6E1D               	movwf	__display_itoa_u16@text,c
 31843  003E64  0E02               	movlw	high (_display_content+40)
 31844  003E66  6E1E               	movwf	__display_itoa_u16@text+1,c
 31845  003E68  ECF5  F037         	call	__display_itoa_u16	;wreg free
 31846  003E6C  6E21               	movwf	__display_checked@start,c
 31847                           
 31848                           ;display.c: 455: start++;
 31849  003E6E  2A21               	incf	__display_checked@start,f,c
 31850                           
 31851                           ;display.c: 456: cntr = 0;
 31852  003E70  0E00               	movlw	0
 31853  003E72  6E22               	movwf	__display_checked@cntr,c
 31854                           
 31855                           ;display.c: 457: while(checked_line3[cntr])
 31856  003E74  D01C               	goto	l1641
 31857  003E76                     
 31858                           ;display.c: 458: display_content[2][start+cntr] = checked_line3[cntr++];
 31859  003E76  5022               	movf	__display_checked@cntr,w,c
 31860  003E78  0D01               	mullw	1
 31861  003E7A  0E71               	movlw	low _checked_line3
 31862  003E7C  24F3               	addwf	prodl,w,c
 31863  003E7E  6EF6               	movwf	tblptrl,c
 31864  003E80  0EBE               	movlw	high _checked_line3
 31865  003E82  20F4               	addwfc	prodh,w,c
 31866  003E84  6EF7               	movwf	tblptrh,c
 31867  003E86                     	if	1	;There are 3 active tblptr bytes
 31868  003E86  6AF8               	clrf	tblptru,c
 31869  003E88  0E00               	movlw	low (__mediumconst shr (0+16))
 31870  003E8A  22F8               	addwfc	tblptru,f,c
 31871  003E8C                     	endif
 31872  003E8C  5022               	movf	__display_checked@cntr,w,c
 31873  003E8E  C021  F01F         	movff	__display_checked@start,??__display_checked
 31874  003E92  6A20               	clrf	(??__display_checked+1)& (0+255),c
 31875  003E94  261F               	addwf	??__display_checked,f,c
 31876  003E96  0E00               	movlw	0
 31877  003E98  2220               	addwfc	??__display_checked+1,f,c
 31878  003E9A  0E28               	movlw	low (_display_content+40)
 31879  003E9C  241F               	addwf	??__display_checked,w,c
 31880  003E9E  6ED9               	movwf	fsr2l,c
 31881  003EA0  0E02               	movlw	high (_display_content+40)
 31882  003EA2  2020               	addwfc	??__display_checked+1,w,c
 31883  003EA4  6EDA               	movwf	fsr2h,c
 31884  003EA6  0008               	tblrd		*
 31885  003EA8  CFF5 FFDF          	movff	tablat,indf2
 31886  003EAC  2A22               	incf	__display_checked@cntr,f,c
 31887  003EAE                     l1641:
 31888  003EAE  5022               	movf	__display_checked@cntr,w,c
 31889  003EB0  0D01               	mullw	1
 31890  003EB2  0E71               	movlw	low _checked_line3
 31891  003EB4  24F3               	addwf	prodl,w,c
 31892  003EB6  6EF6               	movwf	tblptrl,c
 31893  003EB8  0EBE               	movlw	high _checked_line3
 31894  003EBA  20F4               	addwfc	prodh,w,c
 31895  003EBC  6EF7               	movwf	tblptrh,c
 31896  003EBE                     	if	1	;There are 3 active tblptr bytes
 31897  003EBE  6AF8               	clrf	tblptru,c
 31898  003EC0  0E00               	movlw	low (__mediumconst shr (0+16))
 31899  003EC2  22F8               	addwfc	tblptru,f,c
 31900  003EC4                     	endif
 31901  003EC4  0008               	tblrd		*
 31902  003EC6  50F5               	movf	tablat,w,c
 31903  003EC8  0900               	iorlw	0
 31904  003ECA  A4D8               	btfss	status,2,c
 31905  003ECC  D7D4               	goto	l1642
 31906                           
 31907                           ;display.c: 460: cntr = 0;
 31908  003ECE  0E00               	movlw	0
 31909  003ED0  6E22               	movwf	__display_checked@cntr,c
 31910                           
 31911                           ;display.c: 461: while(checked_line4[cntr])
 31912  003ED2  D017               	goto	l1644
 31913  003ED4                     
 31914                           ;display.c: 462: display_content[3][cntr] = checked_line4[cntr++];
 31915  003ED4  5022               	movf	__display_checked@cntr,w,c
 31916  003ED6  0D01               	mullw	1
 31917  003ED8  0E06               	movlw	low _checked_line4
 31918  003EDA  24F3               	addwf	prodl,w,c
 31919  003EDC  6EF6               	movwf	tblptrl,c
 31920  003EDE  0EBD               	movlw	high _checked_line4
 31921  003EE0  20F4               	addwfc	prodh,w,c
 31922  003EE2  6EF7               	movwf	tblptrh,c
 31923  003EE4                     	if	1	;There are 3 active tblptr bytes
 31924  003EE4  6AF8               	clrf	tblptru,c
 31925  003EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 31926  003EE8  22F8               	addwfc	tblptru,f,c
 31927  003EEA                     	endif
 31928  003EEA  5022               	movf	__display_checked@cntr,w,c
 31929  003EEC  0D01               	mullw	1
 31930  003EEE  0E3C               	movlw	low (_display_content+60)
 31931  003EF0  24F3               	addwf	prodl,w,c
 31932  003EF2  6ED9               	movwf	fsr2l,c
 31933  003EF4  0E02               	movlw	high (_display_content+60)
 31934  003EF6  20F4               	addwfc	prodh,w,c
 31935  003EF8  6EDA               	movwf	fsr2h,c
 31936  003EFA  0008               	tblrd		*
 31937  003EFC  CFF5 FFDF          	movff	tablat,indf2
 31938  003F00  2A22               	incf	__display_checked@cntr,f,c
 31939  003F02                     l1644:
 31940  003F02  5022               	movf	__display_checked@cntr,w,c
 31941  003F04  0D01               	mullw	1
 31942  003F06  0E06               	movlw	low _checked_line4
 31943  003F08  24F3               	addwf	prodl,w,c
 31944  003F0A  6EF6               	movwf	tblptrl,c
 31945  003F0C  0EBD               	movlw	high _checked_line4
 31946  003F0E  20F4               	addwfc	prodh,w,c
 31947  003F10  6EF7               	movwf	tblptrh,c
 31948  003F12                     	if	1	;There are 3 active tblptr bytes
 31949  003F12  6AF8               	clrf	tblptru,c
 31950  003F14  0E00               	movlw	low (__mediumconst shr (0+16))
 31951  003F16  22F8               	addwfc	tblptru,f,c
 31952  003F18                     	endif
 31953  003F18  0008               	tblrd		*
 31954  003F1A  50F5               	movf	tablat,w,c
 31955  003F1C  0900               	iorlw	0
 31956  003F1E  B4D8               	btfsc	status,2,c
 31957  003F20  0012               	return	
 31958  003F22  D7D8               	goto	l1645
 31959  003F24                     __end_of__display_checked:
 31960                           	opt stack 0
 31961                           tosu	equ	0xFFF
 31962                           tosh	equ	0xFFE
 31963                           tosl	equ	0xFFD
 31964                           pclath	equ	0xFFA
 31965                           tblptru	equ	0xFF8
 31966                           tblptrh	equ	0xFF7
 31967                           tblptrl	equ	0xFF6
 31968                           tablat	equ	0xFF5
 31969                           prodh	equ	0xFF4
 31970                           prodl	equ	0xFF3
 31971                           intcon	equ	0xFF2
 31972                           intcon2	equ	0xFF1
 31973                           intcon3	equ	0xFF0
 31974                           indf0	equ	0xFEF
 31975                           postinc0	equ	0xFEE
 31976                           fsr0h	equ	0xFEA
 31977                           fsr0l	equ	0xFE9
 31978                           wreg	equ	0xFE8
 31979                           indf1	equ	0xFE7
 31980                           postdec1	equ	0xFE5
 31981                           plusw1	equ	0xFE3
 31982                           fsr1h	equ	0xFE2
 31983                           fsr1l	equ	0xFE1
 31984                           indf2	equ	0xFDF
 31985                           postinc2	equ	0xFDE
 31986                           postdec2	equ	0xFDD
 31987                           plusw2	equ	0xFDB
 31988                           fsr2h	equ	0xFDA
 31989                           fsr2l	equ	0xFD9
 31990                           status	equ	0xFD8
 31991                           
 31992 ;; *************** function _bootloader_get_total_entries *****************
 31993 ;; Defined at:
 31994 ;;		line 473 in file "bootloader.c"
 31995 ;; Parameters:    Size  Location     Type
 31996 ;;		None
 31997 ;; Auto vars:     Size  Location     Type
 31998 ;;		None
 31999 ;; Return value:  Size  Location     Type
 32000 ;;                  2    0[COMRAM] unsigned int 
 32001 ;; Registers used:
 32002 ;;		None
 32003 ;; Tracked objects:
 32004 ;;		On entry : 0/0
 32005 ;;		On exit  : 0/0
 32006 ;;		Unchanged: 0/0
 32007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32012 ;;Total ram usage:        2 bytes
 32013 ;; Hardware stack levels used:    1
 32014 ;; This function calls:
 32015 ;;		Nothing
 32016 ;; This function is called by:
 32017 ;;		__display_checked
 32018 ;;		__display_programming
 32019 ;;		__fill_buffer_get_bootloader_details
 32020 ;; This function uses a non-reentrant model
 32021 ;;
 32022                           
 32023                           	psect	text152
 32024  009CD0                     __ptext152:
 32025                           	opt stack 0
 32026  009CD0                     _bootloader_get_total_entries:
 32027                           	opt stack 25
 32028                           
 32029                           ;bootloader.c: 475: return total_hex_file_entries;
 32030                           
 32031                           ;incstack = 0
 32032  009CD0  C176  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 32033  009CD4  C177  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 32034  009CD8  0012               	return		;funcret
 32035  009CDA                     __end_of_bootloader_get_total_entries:
 32036                           	opt stack 0
 32037                           tosu	equ	0xFFF
 32038                           tosh	equ	0xFFE
 32039                           tosl	equ	0xFFD
 32040                           pclath	equ	0xFFA
 32041                           tblptru	equ	0xFF8
 32042                           tblptrh	equ	0xFF7
 32043                           tblptrl	equ	0xFF6
 32044                           tablat	equ	0xFF5
 32045                           prodh	equ	0xFF4
 32046                           prodl	equ	0xFF3
 32047                           intcon	equ	0xFF2
 32048                           intcon2	equ	0xFF1
 32049                           intcon3	equ	0xFF0
 32050                           indf0	equ	0xFEF
 32051                           postinc0	equ	0xFEE
 32052                           fsr0h	equ	0xFEA
 32053                           fsr0l	equ	0xFE9
 32054                           wreg	equ	0xFE8
 32055                           indf1	equ	0xFE7
 32056                           postdec1	equ	0xFE5
 32057                           plusw1	equ	0xFE3
 32058                           fsr1h	equ	0xFE2
 32059                           fsr1l	equ	0xFE1
 32060                           indf2	equ	0xFDF
 32061                           postinc2	equ	0xFDE
 32062                           postdec2	equ	0xFDD
 32063                           plusw2	equ	0xFDB
 32064                           fsr2h	equ	0xFDA
 32065                           fsr2l	equ	0xFD9
 32066                           status	equ	0xFD8
 32067                           
 32068 ;; *************** function __display_itoa_u16 *****************
 32069 ;; Defined at:
 32070 ;;		line 94 in file "display.c"
 32071 ;; Parameters:    Size  Location     Type
 32072 ;;  value           4   24[COMRAM] unsigned long 
 32073 ;;  text            2   28[COMRAM] PTR unsigned char 
 32074 ;;		 -> display_content(80), 
 32075 ;; Auto vars:     Size  Location     Type
 32076 ;;		None
 32077 ;; Return value:  Size  Location     Type
 32078 ;;                  1    wreg      unsigned char 
 32079 ;; Registers used:
 32080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32081 ;; Tracked objects:
 32082 ;;		On entry : 0/0
 32083 ;;		On exit  : 0/0
 32084 ;;		Unchanged: 0/0
 32085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32086 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32089 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32090 ;;Total ram usage:        6 bytes
 32091 ;; Hardware stack levels used:    1
 32092 ;; Hardware stack levels required when called:    3
 32093 ;; This function calls:
 32094 ;;		_itoa
 32095 ;; This function is called by:
 32096 ;;		__display_itoa_u32
 32097 ;;		__display_verify
 32098 ;;		__display_checked
 32099 ;;		__display_failed
 32100 ;;		__display_programming
 32101 ;;		__display_done
 32102 ;; This function uses a non-reentrant model
 32103 ;;
 32104                           
 32105                           	psect	text153
 32106  006FEA                     __ptext153:
 32107                           	opt stack 0
 32108  006FEA                     __display_itoa_u16:
 32109                           	opt stack 22
 32110                           
 32111                           ;display.c: 96: itoa(text, value, 10);
 32112                           
 32113                           ;incstack = 0
 32114  006FEA  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 32115  006FEE  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 32116  006FF2  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 32117  006FF6  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 32118  006FFA  0E00               	movlw	0
 32119  006FFC  6E16               	movwf	itoa@base+1,c
 32120  006FFE  0E0A               	movlw	10
 32121  007000  6E15               	movwf	itoa@base,c
 32122  007002  EC59  F049         	call	_itoa	;wreg free
 32123                           
 32124                           ;display.c: 97: if(value>9999)
 32125  007006  501C               	movf	__display_itoa_u16@value+3,w,c
 32126  007008  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32127  00700A  E106               	bnz	u7760
 32128  00700C  0E10               	movlw	16
 32129  00700E  5C19               	subwf	__display_itoa_u16@value,w,c
 32130  007010  0E27               	movlw	39
 32131  007012  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32132  007014  A0D8               	btfss	status,0,c
 32133  007016  D00A               	goto	l1483
 32134  007018                     u7760:
 32135                           
 32136                           ;display.c: 98: {;display.c: 99: *(text+5) = ' ';
 32137  007018  EE20 F005          	lfsr	2,5
 32138  00701C  501D               	movf	__display_itoa_u16@text,w,c
 32139  00701E  26D9               	addwf	fsr2l,f,c
 32140  007020  501E               	movf	__display_itoa_u16@text+1,w,c
 32141  007022  22DA               	addwfc	fsr2h,f,c
 32142  007024  0E20               	movlw	32
 32143  007026  6EDF               	movwf	indf2,c
 32144                           
 32145                           ;display.c: 100: return 5;
 32146  007028  0E05               	movlw	5
 32147                           
 32148                           ;display.c: 101: }
 32149  00702A  0012               	return	
 32150  00702C                     l1483:
 32151                           
 32152                           ;display.c: 102: else if (value>999)
 32153  00702C  501C               	movf	__display_itoa_u16@value+3,w,c
 32154  00702E  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32155  007030  E106               	bnz	u7770
 32156  007032  0EE8               	movlw	232
 32157  007034  5C19               	subwf	__display_itoa_u16@value,w,c
 32158  007036  0E03               	movlw	3
 32159  007038  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32160  00703A  A0D8               	btfss	status,0,c
 32161  00703C  D00A               	goto	l1486
 32162  00703E                     u7770:
 32163                           
 32164                           ;display.c: 103: {;display.c: 104: *(text+4) = ' ';
 32165  00703E  EE20 F004          	lfsr	2,4
 32166  007042  501D               	movf	__display_itoa_u16@text,w,c
 32167  007044  26D9               	addwf	fsr2l,f,c
 32168  007046  501E               	movf	__display_itoa_u16@text+1,w,c
 32169  007048  22DA               	addwfc	fsr2h,f,c
 32170  00704A  0E20               	movlw	32
 32171  00704C  6EDF               	movwf	indf2,c
 32172                           
 32173                           ;display.c: 105: return 4;
 32174  00704E  0E04               	movlw	4
 32175                           
 32176                           ;display.c: 106: }
 32177  007050  0012               	return	
 32178  007052                     l1486:
 32179                           
 32180                           ;display.c: 107: else if (value>99)
 32181  007052  501C               	movf	__display_itoa_u16@value+3,w,c
 32182  007054  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32183  007056  101A               	iorwf	__display_itoa_u16@value+1,w,c
 32184  007058  E104               	bnz	u7780
 32185  00705A  0E64               	movlw	100
 32186  00705C  5C19               	subwf	__display_itoa_u16@value,w,c
 32187  00705E  A0D8               	btfss	status,0,c
 32188  007060  D00A               	goto	l1488
 32189  007062                     u7780:
 32190                           
 32191                           ;display.c: 108: {;display.c: 109: *(text+3) = ' ';
 32192  007062  EE20 F003          	lfsr	2,3
 32193  007066  501D               	movf	__display_itoa_u16@text,w,c
 32194  007068  26D9               	addwf	fsr2l,f,c
 32195  00706A  501E               	movf	__display_itoa_u16@text+1,w,c
 32196  00706C  22DA               	addwfc	fsr2h,f,c
 32197  00706E  0E20               	movlw	32
 32198  007070  6EDF               	movwf	indf2,c
 32199                           
 32200                           ;display.c: 110: return 3;
 32201  007072  0E03               	movlw	3
 32202                           
 32203                           ;display.c: 111: }
 32204  007074  0012               	return	
 32205  007076                     l1488:
 32206                           
 32207                           ;display.c: 112: else if (value>9)
 32208  007076  501C               	movf	__display_itoa_u16@value+3,w,c
 32209  007078  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32210  00707A  101A               	iorwf	__display_itoa_u16@value+1,w,c
 32211  00707C  E104               	bnz	u7790
 32212  00707E  0E0A               	movlw	10
 32213  007080  5C19               	subwf	__display_itoa_u16@value,w,c
 32214  007082  A0D8               	btfss	status,0,c
 32215  007084  D00A               	goto	l1490
 32216  007086                     u7790:
 32217                           
 32218                           ;display.c: 113: {;display.c: 114: *(text+2) = ' ';
 32219  007086  EE20 F002          	lfsr	2,2
 32220  00708A  501D               	movf	__display_itoa_u16@text,w,c
 32221  00708C  26D9               	addwf	fsr2l,f,c
 32222  00708E  501E               	movf	__display_itoa_u16@text+1,w,c
 32223  007090  22DA               	addwfc	fsr2h,f,c
 32224  007092  0E20               	movlw	32
 32225  007094  6EDF               	movwf	indf2,c
 32226                           
 32227                           ;display.c: 115: return 2;
 32228  007096  0E02               	movlw	2
 32229                           
 32230                           ;display.c: 116: }
 32231  007098  0012               	return	
 32232  00709A                     l1490:
 32233                           
 32234                           ;display.c: 117: else;display.c: 118: {;display.c: 119: *(text+1) = ' ';
 32235  00709A  EE20 F001          	lfsr	2,1
 32236  00709E  501D               	movf	__display_itoa_u16@text,w,c
 32237  0070A0  26D9               	addwf	fsr2l,f,c
 32238  0070A2  501E               	movf	__display_itoa_u16@text+1,w,c
 32239  0070A4  22DA               	addwfc	fsr2h,f,c
 32240  0070A6  0E20               	movlw	32
 32241  0070A8  6EDF               	movwf	indf2,c
 32242                           
 32243                           ;display.c: 120: return 1;
 32244  0070AA  0E01               	movlw	1
 32245  0070AC  0012               	return	
 32246  0070AE                     __end_of__display_itoa_u16:
 32247                           	opt stack 0
 32248                           tosu	equ	0xFFF
 32249                           tosh	equ	0xFFE
 32250                           tosl	equ	0xFFD
 32251                           pclath	equ	0xFFA
 32252                           tblptru	equ	0xFF8
 32253                           tblptrh	equ	0xFF7
 32254                           tblptrl	equ	0xFF6
 32255                           tablat	equ	0xFF5
 32256                           prodh	equ	0xFF4
 32257                           prodl	equ	0xFF3
 32258                           intcon	equ	0xFF2
 32259                           intcon2	equ	0xFF1
 32260                           intcon3	equ	0xFF0
 32261                           indf0	equ	0xFEF
 32262                           postinc0	equ	0xFEE
 32263                           fsr0h	equ	0xFEA
 32264                           fsr0l	equ	0xFE9
 32265                           wreg	equ	0xFE8
 32266                           indf1	equ	0xFE7
 32267                           postdec1	equ	0xFE5
 32268                           plusw1	equ	0xFE3
 32269                           fsr1h	equ	0xFE2
 32270                           fsr1l	equ	0xFE1
 32271                           indf2	equ	0xFDF
 32272                           postinc2	equ	0xFDE
 32273                           postdec2	equ	0xFDD
 32274                           plusw2	equ	0xFDB
 32275                           fsr2h	equ	0xFDA
 32276                           fsr2l	equ	0xFD9
 32277                           status	equ	0xFD8
 32278                           
 32279 ;; *************** function _itoa *****************
 32280 ;; Defined at:
 32281 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32282 ;; Parameters:    Size  Location     Type
 32283 ;;  buf             2   16[COMRAM] PTR unsigned char 
 32284 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32285 ;;  val             2   18[COMRAM] int 
 32286 ;;  base            2   20[COMRAM] int 
 32287 ;; Auto vars:     Size  Location     Type
 32288 ;;  cp              2   22[COMRAM] PTR unsigned char 
 32289 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32290 ;; Return value:  Size  Location     Type
 32291 ;;                  2   16[COMRAM] PTR unsigned char 
 32292 ;; Registers used:
 32293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32294 ;; Tracked objects:
 32295 ;;		On entry : 0/0
 32296 ;;		On exit  : 0/0
 32297 ;;		Unchanged: 0/0
 32298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32299 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32302 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32303 ;;Total ram usage:        8 bytes
 32304 ;; Hardware stack levels used:    1
 32305 ;; Hardware stack levels required when called:    2
 32306 ;; This function calls:
 32307 ;;		_utoa
 32308 ;; This function is called by:
 32309 ;;		__display_itoa_u16
 32310 ;;		__display_itoa_u32
 32311 ;;		__display_itoa
 32312 ;; This function uses a non-reentrant model
 32313 ;;
 32314                           
 32315                           	psect	text154
 32316  0092B2                     __ptext154:
 32317                           	opt stack 0
 32318  0092B2                     _itoa:
 32319                           	opt stack 22
 32320                           
 32321                           ;incstack = 0
 32322  0092B2  C011  F017         	movff	itoa@buf,itoa@cp
 32323  0092B6  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 32324  0092BA  AE14               	btfss	itoa@val+1,7,c
 32325  0092BC  D00C               	goto	l3752
 32326  0092BE  C011  FFD9         	movff	itoa@buf,fsr2l
 32327  0092C2  C012  FFDA         	movff	itoa@buf+1,fsr2h
 32328  0092C6  0E2D               	movlw	45
 32329  0092C8  6EDF               	movwf	indf2,c
 32330  0092CA  4A11               	infsnz	itoa@buf,f,c
 32331  0092CC  2A12               	incf	itoa@buf+1,f,c
 32332  0092CE  6C13               	negf	itoa@val,c
 32333  0092D0  1E14               	comf	itoa@val+1,f,c
 32334  0092D2  B0D8               	btfsc	status,0,c
 32335  0092D4  2A14               	incf	itoa@val+1,f,c
 32336  0092D6                     l3752:
 32337  0092D6  C011  F008         	movff	itoa@buf,utoa@buf
 32338  0092DA  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 32339  0092DE  C013  F00A         	movff	itoa@val,utoa@val
 32340  0092E2  C014  F00B         	movff	itoa@val+1,utoa@val+1
 32341  0092E6  C015  F00C         	movff	itoa@base,utoa@base
 32342  0092EA  C016  F00D         	movff	itoa@base+1,utoa@base+1
 32343  0092EE  EC29  F03C         	call	_utoa	;wreg free
 32344  0092F2  0012               	return	
 32345  0092F4                     __end_of_itoa:
 32346                           	opt stack 0
 32347                           tosu	equ	0xFFF
 32348                           tosh	equ	0xFFE
 32349                           tosl	equ	0xFFD
 32350                           pclath	equ	0xFFA
 32351                           tblptru	equ	0xFF8
 32352                           tblptrh	equ	0xFF7
 32353                           tblptrl	equ	0xFF6
 32354                           tablat	equ	0xFF5
 32355                           prodh	equ	0xFF4
 32356                           prodl	equ	0xFF3
 32357                           intcon	equ	0xFF2
 32358                           intcon2	equ	0xFF1
 32359                           intcon3	equ	0xFF0
 32360                           indf0	equ	0xFEF
 32361                           postinc0	equ	0xFEE
 32362                           fsr0h	equ	0xFEA
 32363                           fsr0l	equ	0xFE9
 32364                           wreg	equ	0xFE8
 32365                           indf1	equ	0xFE7
 32366                           postdec1	equ	0xFE5
 32367                           plusw1	equ	0xFE3
 32368                           fsr1h	equ	0xFE2
 32369                           fsr1l	equ	0xFE1
 32370                           indf2	equ	0xFDF
 32371                           postinc2	equ	0xFDE
 32372                           postdec2	equ	0xFDD
 32373                           plusw2	equ	0xFDB
 32374                           fsr2h	equ	0xFDA
 32375                           fsr2l	equ	0xFD9
 32376                           status	equ	0xFD8
 32377                           
 32378 ;; *************** function _utoa *****************
 32379 ;; Defined at:
 32380 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32381 ;; Parameters:    Size  Location     Type
 32382 ;;  buf             2    7[COMRAM] PTR unsigned char 
 32383 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32384 ;;  val             2    9[COMRAM] unsigned int 
 32385 ;;  base            2   11[COMRAM] int 
 32386 ;; Auto vars:     Size  Location     Type
 32387 ;;  v               2   13[COMRAM] unsigned int 
 32388 ;;  c               1   15[COMRAM] unsigned char 
 32389 ;; Return value:  Size  Location     Type
 32390 ;;                  2    7[COMRAM] PTR unsigned char 
 32391 ;; Registers used:
 32392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32393 ;; Tracked objects:
 32394 ;;		On entry : 0/0
 32395 ;;		On exit  : 0/0
 32396 ;;		Unchanged: 0/0
 32397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32398 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32399 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32401 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32402 ;;Total ram usage:        9 bytes
 32403 ;; Hardware stack levels used:    1
 32404 ;; Hardware stack levels required when called:    1
 32405 ;; This function calls:
 32406 ;;		___lwdiv
 32407 ;;		___lwmod
 32408 ;; This function is called by:
 32409 ;;		_itoa
 32410 ;; This function uses a non-reentrant model
 32411 ;;
 32412                           
 32413                           	psect	text155
 32414  007852                     __ptext155:
 32415                           	opt stack 0
 32416  007852                     _utoa:
 32417                           	opt stack 22
 32418                           
 32419                           ;incstack = 0
 32420  007852  C00A  F00E         	movff	utoa@val,utoa@v
 32421  007856  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 32422  00785A  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 32423  00785E  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 32424  007862  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32425  007866  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32426  00786A  ECA0  F047         	call	___lwdiv	;wreg free
 32427  00786E  C001  F00E         	movff	?___lwdiv,utoa@v
 32428  007872  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 32429  007876  4A08               	infsnz	utoa@buf,f,c
 32430  007878  2A09               	incf	utoa@buf+1,f,c
 32431  00787A  500E               	movf	utoa@v,w,c
 32432  00787C  100F               	iorwf	utoa@v+1,w,c
 32433  00787E  A4D8               	btfss	status,2,c
 32434  007880  D7EC               	goto	l3756
 32435  007882  C008  FFD9         	movff	utoa@buf,fsr2l
 32436  007886  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32437  00788A  0E00               	movlw	0
 32438  00788C  6EDF               	movwf	indf2,c
 32439  00788E  0608               	decf	utoa@buf,f,c
 32440  007890  A0D8               	btfss	status,0,c
 32441  007892  0609               	decf	utoa@buf+1,f,c
 32442  007894  C00A  F001         	movff	utoa@val,___lwmod@dividend
 32443  007898  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 32444  00789C  C00C  F003         	movff	utoa@base,___lwmod@divisor
 32445  0078A0  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 32446  0078A4  EC7A  F049         	call	___lwmod	;wreg free
 32447  0078A8  5001               	movf	?___lwmod,w,c
 32448  0078AA  6E10               	movwf	utoa@c,c
 32449  0078AC  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 32450  0078B0  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 32451  0078B4  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32452  0078B8  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32453  0078BC  ECA0  F047         	call	___lwdiv	;wreg free
 32454  0078C0  C001  F00A         	movff	?___lwdiv,utoa@val
 32455  0078C4  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 32456  0078C8  0E09               	movlw	9
 32457  0078CA  6410               	cpfsgt	utoa@c,c
 32458  0078CC  D002               	goto	l3759
 32459  0078CE  0E07               	movlw	7
 32460  0078D0  2610               	addwf	utoa@c,f,c
 32461  0078D2                     l3759:
 32462  0078D2  0E30               	movlw	48
 32463  0078D4  2610               	addwf	utoa@c,f,c
 32464  0078D6  C008  FFD9         	movff	utoa@buf,fsr2l
 32465  0078DA  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32466  0078DE  C010  FFDF         	movff	utoa@c,indf2
 32467  0078E2  0608               	decf	utoa@buf,f,c
 32468  0078E4  A0D8               	btfss	status,0,c
 32469  0078E6  0609               	decf	utoa@buf+1,f,c
 32470  0078E8  500A               	movf	utoa@val,w,c
 32471  0078EA  100B               	iorwf	utoa@val+1,w,c
 32472  0078EC  A4D8               	btfss	status,2,c
 32473  0078EE  D7D2               	goto	l3758
 32474                           
 32475                           ;	Return value of _utoa is never used
 32476  0078F0  4A08               	infsnz	utoa@buf,f,c
 32477  0078F2  2A09               	incf	utoa@buf+1,f,c
 32478  0078F4  0012               	return	
 32479  0078F6                     __end_of_utoa:
 32480                           	opt stack 0
 32481                           tosu	equ	0xFFF
 32482                           tosh	equ	0xFFE
 32483                           tosl	equ	0xFFD
 32484                           pclath	equ	0xFFA
 32485                           tblptru	equ	0xFF8
 32486                           tblptrh	equ	0xFF7
 32487                           tblptrl	equ	0xFF6
 32488                           tablat	equ	0xFF5
 32489                           prodh	equ	0xFF4
 32490                           prodl	equ	0xFF3
 32491                           intcon	equ	0xFF2
 32492                           intcon2	equ	0xFF1
 32493                           intcon3	equ	0xFF0
 32494                           indf0	equ	0xFEF
 32495                           postinc0	equ	0xFEE
 32496                           fsr0h	equ	0xFEA
 32497                           fsr0l	equ	0xFE9
 32498                           wreg	equ	0xFE8
 32499                           indf1	equ	0xFE7
 32500                           postdec1	equ	0xFE5
 32501                           plusw1	equ	0xFE3
 32502                           fsr1h	equ	0xFE2
 32503                           fsr1l	equ	0xFE1
 32504                           indf2	equ	0xFDF
 32505                           postinc2	equ	0xFDE
 32506                           postdec2	equ	0xFDD
 32507                           plusw2	equ	0xFDB
 32508                           fsr2h	equ	0xFDA
 32509                           fsr2l	equ	0xFD9
 32510                           status	equ	0xFD8
 32511                           
 32512 ;; *************** function ___lwmod *****************
 32513 ;; Defined at:
 32514 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 32515 ;; Parameters:    Size  Location     Type
 32516 ;;  dividend        2    0[COMRAM] unsigned int 
 32517 ;;  divisor         2    2[COMRAM] unsigned int 
 32518 ;; Auto vars:     Size  Location     Type
 32519 ;;  counter         1    4[COMRAM] unsigned char 
 32520 ;; Return value:  Size  Location     Type
 32521 ;;                  2    0[COMRAM] unsigned int 
 32522 ;; Registers used:
 32523 ;;		wreg, status,2, status,0
 32524 ;; Tracked objects:
 32525 ;;		On entry : 0/0
 32526 ;;		On exit  : 0/0
 32527 ;;		Unchanged: 0/0
 32528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32532 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32533 ;;Total ram usage:        5 bytes
 32534 ;; Hardware stack levels used:    1
 32535 ;; This function calls:
 32536 ;;		Nothing
 32537 ;; This function is called by:
 32538 ;;		_utoa
 32539 ;; This function uses a non-reentrant model
 32540 ;;
 32541                           
 32542                           	psect	text156
 32543  0092F4                     __ptext156:
 32544                           	opt stack 0
 32545  0092F4                     ___lwmod:
 32546                           	opt stack 22
 32547                           
 32548                           ;incstack = 0
 32549  0092F4  5003               	movf	___lwmod@divisor,w,c
 32550  0092F6  1004               	iorwf	___lwmod@divisor+1,w,c
 32551  0092F8  B4D8               	btfsc	status,2,c
 32552  0092FA  D018               	goto	l3583
 32553  0092FC  0E01               	movlw	1
 32554  0092FE  6E05               	movwf	___lwmod@counter,c
 32555  009300  D004               	goto	l3578
 32556  009302  90D8               	bcf	status,0,c
 32557  009304  3603               	rlcf	___lwmod@divisor,f,c
 32558  009306  3604               	rlcf	___lwmod@divisor+1,f,c
 32559  009308  2A05               	incf	___lwmod@counter,f,c
 32560  00930A                     l3578:
 32561  00930A  AE04               	btfss	___lwmod@divisor+1,7,c
 32562  00930C  D7FA               	goto	l3579
 32563  00930E                     u7140:
 32564  00930E  5003               	movf	___lwmod@divisor,w,c
 32565  009310  5C01               	subwf	___lwmod@dividend,w,c
 32566  009312  5004               	movf	___lwmod@divisor+1,w,c
 32567  009314  5802               	subwfb	___lwmod@dividend+1,w,c
 32568  009316  A0D8               	btfss	status,0,c
 32569  009318  D004               	goto	l3582
 32570  00931A  5003               	movf	___lwmod@divisor,w,c
 32571  00931C  5E01               	subwf	___lwmod@dividend,f,c
 32572  00931E  5004               	movf	___lwmod@divisor+1,w,c
 32573  009320  5A02               	subwfb	___lwmod@dividend+1,f,c
 32574  009322                     l3582:
 32575  009322  90D8               	bcf	status,0,c
 32576  009324  3204               	rrcf	___lwmod@divisor+1,f,c
 32577  009326  3203               	rrcf	___lwmod@divisor,f,c
 32578  009328  2E05               	decfsz	___lwmod@counter,f,c
 32579  00932A  D7F1               	goto	u7140
 32580  00932C                     l3583:
 32581  00932C  C001  F001         	movff	___lwmod@dividend,?___lwmod
 32582  009330  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 32583  009334  0012               	return		;funcret
 32584  009336                     __end_of___lwmod:
 32585                           	opt stack 0
 32586                           tosu	equ	0xFFF
 32587                           tosh	equ	0xFFE
 32588                           tosl	equ	0xFFD
 32589                           pclath	equ	0xFFA
 32590                           tblptru	equ	0xFF8
 32591                           tblptrh	equ	0xFF7
 32592                           tblptrl	equ	0xFF6
 32593                           tablat	equ	0xFF5
 32594                           prodh	equ	0xFF4
 32595                           prodl	equ	0xFF3
 32596                           intcon	equ	0xFF2
 32597                           intcon2	equ	0xFF1
 32598                           intcon3	equ	0xFF0
 32599                           indf0	equ	0xFEF
 32600                           postinc0	equ	0xFEE
 32601                           fsr0h	equ	0xFEA
 32602                           fsr0l	equ	0xFE9
 32603                           wreg	equ	0xFE8
 32604                           indf1	equ	0xFE7
 32605                           postdec1	equ	0xFE5
 32606                           plusw1	equ	0xFE3
 32607                           fsr1h	equ	0xFE2
 32608                           fsr1l	equ	0xFE1
 32609                           indf2	equ	0xFDF
 32610                           postinc2	equ	0xFDE
 32611                           postdec2	equ	0xFDD
 32612                           plusw2	equ	0xFDB
 32613                           fsr2h	equ	0xFDA
 32614                           fsr2l	equ	0xFD9
 32615                           status	equ	0xFD8
 32616                           
 32617 ;; *************** function ___lwdiv *****************
 32618 ;; Defined at:
 32619 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 32620 ;; Parameters:    Size  Location     Type
 32621 ;;  dividend        2    0[COMRAM] unsigned int 
 32622 ;;  divisor         2    2[COMRAM] unsigned int 
 32623 ;; Auto vars:     Size  Location     Type
 32624 ;;  quotient        2    4[COMRAM] unsigned int 
 32625 ;;  counter         1    6[COMRAM] unsigned char 
 32626 ;; Return value:  Size  Location     Type
 32627 ;;                  2    0[COMRAM] unsigned int 
 32628 ;; Registers used:
 32629 ;;		wreg, status,2, status,0
 32630 ;; Tracked objects:
 32631 ;;		On entry : 0/0
 32632 ;;		On exit  : 0/0
 32633 ;;		Unchanged: 0/0
 32634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32636 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32638 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32639 ;;Total ram usage:        7 bytes
 32640 ;; Hardware stack levels used:    1
 32641 ;; This function calls:
 32642 ;;		Nothing
 32643 ;; This function is called by:
 32644 ;;		_utoa
 32645 ;; This function uses a non-reentrant model
 32646 ;;
 32647                           
 32648                           	psect	text157
 32649  008F40                     __ptext157:
 32650                           	opt stack 0
 32651  008F40                     ___lwdiv:
 32652                           	opt stack 22
 32653                           
 32654                           ;incstack = 0
 32655  008F40  0E00               	movlw	0
 32656  008F42  6E06               	movwf	___lwdiv@quotient+1,c
 32657  008F44  0E00               	movlw	0
 32658  008F46  6E05               	movwf	___lwdiv@quotient,c
 32659  008F48  5003               	movf	___lwdiv@divisor,w,c
 32660  008F4A  1004               	iorwf	___lwdiv@divisor+1,w,c
 32661  008F4C  B4D8               	btfsc	status,2,c
 32662  008F4E  D01C               	goto	l3573
 32663  008F50  0E01               	movlw	1
 32664  008F52  6E07               	movwf	___lwdiv@counter,c
 32665  008F54  D004               	goto	l3568
 32666  008F56  90D8               	bcf	status,0,c
 32667  008F58  3603               	rlcf	___lwdiv@divisor,f,c
 32668  008F5A  3604               	rlcf	___lwdiv@divisor+1,f,c
 32669  008F5C  2A07               	incf	___lwdiv@counter,f,c
 32670  008F5E                     l3568:
 32671  008F5E  AE04               	btfss	___lwdiv@divisor+1,7,c
 32672  008F60  D7FA               	goto	l3569
 32673  008F62                     u7110:
 32674  008F62  90D8               	bcf	status,0,c
 32675  008F64  3605               	rlcf	___lwdiv@quotient,f,c
 32676  008F66  3606               	rlcf	___lwdiv@quotient+1,f,c
 32677  008F68  5003               	movf	___lwdiv@divisor,w,c
 32678  008F6A  5C01               	subwf	___lwdiv@dividend,w,c
 32679  008F6C  5004               	movf	___lwdiv@divisor+1,w,c
 32680  008F6E  5802               	subwfb	___lwdiv@dividend+1,w,c
 32681  008F70  A0D8               	btfss	status,0,c
 32682  008F72  D005               	goto	l3572
 32683  008F74  5003               	movf	___lwdiv@divisor,w,c
 32684  008F76  5E01               	subwf	___lwdiv@dividend,f,c
 32685  008F78  5004               	movf	___lwdiv@divisor+1,w,c
 32686  008F7A  5A02               	subwfb	___lwdiv@dividend+1,f,c
 32687  008F7C  8005               	bsf	___lwdiv@quotient,0,c
 32688  008F7E                     l3572:
 32689  008F7E  90D8               	bcf	status,0,c
 32690  008F80  3204               	rrcf	___lwdiv@divisor+1,f,c
 32691  008F82  3203               	rrcf	___lwdiv@divisor,f,c
 32692  008F84  2E07               	decfsz	___lwdiv@counter,f,c
 32693  008F86  D7ED               	goto	u7110
 32694  008F88                     l3573:
 32695  008F88  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 32696  008F8C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32697  008F90  0012               	return		;funcret
 32698  008F92                     __end_of___lwdiv:
 32699                           	opt stack 0
 32700                           tosu	equ	0xFFF
 32701                           tosh	equ	0xFFE
 32702                           tosl	equ	0xFFD
 32703                           pclath	equ	0xFFA
 32704                           tblptru	equ	0xFF8
 32705                           tblptrh	equ	0xFF7
 32706                           tblptrl	equ	0xFF6
 32707                           tablat	equ	0xFF5
 32708                           prodh	equ	0xFF4
 32709                           prodl	equ	0xFF3
 32710                           intcon	equ	0xFF2
 32711                           intcon2	equ	0xFF1
 32712                           intcon3	equ	0xFF0
 32713                           indf0	equ	0xFEF
 32714                           postinc0	equ	0xFEE
 32715                           fsr0h	equ	0xFEA
 32716                           fsr0l	equ	0xFE9
 32717                           wreg	equ	0xFE8
 32718                           indf1	equ	0xFE7
 32719                           postdec1	equ	0xFE5
 32720                           plusw1	equ	0xFE3
 32721                           fsr1h	equ	0xFE2
 32722                           fsr1l	equ	0xFE1
 32723                           indf2	equ	0xFDF
 32724                           postinc2	equ	0xFDE
 32725                           postdec2	equ	0xFDD
 32726                           plusw2	equ	0xFDB
 32727                           fsr2h	equ	0xFDA
 32728                           fsr2l	equ	0xFD9
 32729                           status	equ	0xFD8
 32730                           
 32731 ;; *************** function _i2c_eeprom_writeByte *****************
 32732 ;; Defined at:
 32733 ;;		line 352 in file "i2c.c"
 32734 ;; Parameters:    Size  Location     Type
 32735 ;;  address         2   10[COMRAM] unsigned int 
 32736 ;;  data            1   12[COMRAM] unsigned char 
 32737 ;; Auto vars:     Size  Location     Type
 32738 ;;  dat             2   16[COMRAM] unsigned char [2]
 32739 ;;  slave_addres    1   18[COMRAM] unsigned char 
 32740 ;; Return value:  Size  Location     Type
 32741 ;;                  1    wreg      void 
 32742 ;; Registers used:
 32743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32744 ;; Tracked objects:
 32745 ;;		On entry : 0/0
 32746 ;;		On exit  : 0/0
 32747 ;;		Unchanged: 0/0
 32748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32749 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32750 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32751 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32752 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32753 ;;Total ram usage:        9 bytes
 32754 ;; Hardware stack levels used:    1
 32755 ;; Hardware stack levels required when called:    2
 32756 ;; This function calls:
 32757 ;;		__i2c_write
 32758 ;;		_i2c_set_frequency
 32759 ;; This function is called by:
 32760 ;;		__normal_mode
 32761 ;;		__ui_encoder
 32762 ;;		__parse_command_short
 32763 ;; This function uses a non-reentrant model
 32764 ;;
 32765                           
 32766                           	psect	text158
 32767  009336                     __ptext158:
 32768                           	opt stack 0
 32769  009336                     _i2c_eeprom_writeByte:
 32770                           	opt stack 26
 32771                           
 32772                           ;i2c.c: 354: uint8_t slave_address;;i2c.c: 355: uint8_t dat[2];;i2c.c: 357: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 32773                           
 32774                           ;incstack = 0
 32775  009336  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 32776  00933A  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 32777  00933E  0E07               	movlw	7
 32778  009340  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 32779  009342                     u11185:
 32780  009342  90D8               	bcf	status,0,c
 32781  009344  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 32782  009346  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 32783  009348  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 32784  00934A  D7FB               	goto	u11185
 32785  00934C  500E               	movf	??_i2c_eeprom_writeByte,w,c
 32786  00934E  0B0E               	andlw	14
 32787  009350  09A0               	iorlw	160
 32788  009352  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 32789                           
 32790                           ;i2c.c: 358: dat[0] = address & 0xFF;
 32791  009354  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 32792                           
 32793                           ;i2c.c: 359: dat[1] = data;
 32794  009358  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 32795                           
 32796                           ;i2c.c: 362: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 32797  00935C  0E02               	movlw	2
 32798  00935E  ECD1  F04B         	call	_i2c_set_frequency
 32799                           
 32800                           ;i2c.c: 364: _i2c_write(slave_address, &dat[0], 2);
 32801  009362  0E11               	movlw	low i2c_eeprom_writeByte@dat
 32802  009364  6E06               	movwf	__i2c_write@data,c
 32803  009366  0E00               	movlw	high i2c_eeprom_writeByte@dat
 32804  009368  6E07               	movwf	__i2c_write@data+1,c
 32805  00936A  0E02               	movlw	2
 32806  00936C  6E08               	movwf	__i2c_write@length,c
 32807  00936E  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 32808  009370  EC65  F048         	call	__i2c_write
 32809  009374  0012               	return		;funcret
 32810  009376                     __end_of_i2c_eeprom_writeByte:
 32811                           	opt stack 0
 32812                           tosu	equ	0xFFF
 32813                           tosh	equ	0xFFE
 32814                           tosl	equ	0xFFD
 32815                           pclath	equ	0xFFA
 32816                           tblptru	equ	0xFF8
 32817                           tblptrh	equ	0xFF7
 32818                           tblptrl	equ	0xFF6
 32819                           tablat	equ	0xFF5
 32820                           prodh	equ	0xFF4
 32821                           prodl	equ	0xFF3
 32822                           intcon	equ	0xFF2
 32823                           intcon2	equ	0xFF1
 32824                           intcon3	equ	0xFF0
 32825                           indf0	equ	0xFEF
 32826                           postinc0	equ	0xFEE
 32827                           fsr0h	equ	0xFEA
 32828                           fsr0l	equ	0xFE9
 32829                           wreg	equ	0xFE8
 32830                           indf1	equ	0xFE7
 32831                           postdec1	equ	0xFE5
 32832                           plusw1	equ	0xFE3
 32833                           fsr1h	equ	0xFE2
 32834                           fsr1l	equ	0xFE1
 32835                           indf2	equ	0xFDF
 32836                           postinc2	equ	0xFDE
 32837                           postdec2	equ	0xFDD
 32838                           plusw2	equ	0xFDB
 32839                           fsr2h	equ	0xFDA
 32840                           fsr2l	equ	0xFD9
 32841                           status	equ	0xFD8
 32842                           
 32843 ;; *************** function _i2c_set_frequency *****************
 32844 ;; Defined at:
 32845 ;;		line 123 in file "i2c.c"
 32846 ;; Parameters:    Size  Location     Type
 32847 ;;  frequency       1    wreg     enum E6622
 32848 ;; Auto vars:     Size  Location     Type
 32849 ;;  frequency       1    0[COMRAM] enum E6622
 32850 ;; Return value:  Size  Location     Type
 32851 ;;                  1    wreg      void 
 32852 ;; Registers used:
 32853 ;;		wreg, status,2, status,0
 32854 ;; Tracked objects:
 32855 ;;		On entry : 0/0
 32856 ;;		On exit  : 0/0
 32857 ;;		Unchanged: 0/0
 32858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32863 ;;Total ram usage:        1 bytes
 32864 ;; Hardware stack levels used:    1
 32865 ;; This function calls:
 32866 ;;		Nothing
 32867 ;; This function is called by:
 32868 ;;		_i2c_init
 32869 ;;		__ic2_display_set_address
 32870 ;;		_i2c_display_send_init_sequence
 32871 ;;		_i2c_display_cursor
 32872 ;;		_i2c_display_write_fixed
 32873 ;;		_i2c_digipot_reset_on
 32874 ;;		_i2c_digipot_reset_off
 32875 ;;		_i2c_digipot_backlight
 32876 ;;		_i2c_eeprom_writeByte
 32877 ;;		_i2c_eeprom_readByte
 32878 ;;		_i2c_display_write
 32879 ;;		_i2c_eeprom_write
 32880 ;;		_i2c_eeprom_read
 32881 ;; This function uses a non-reentrant model
 32882 ;;
 32883                           
 32884                           	psect	text159
 32885  0097A2                     __ptext159:
 32886                           	opt stack 0
 32887  0097A2                     _i2c_set_frequency:
 32888                           	opt stack 28
 32889                           
 32890                           ;incstack = 0
 32891                           ;i2c_set_frequency@frequency stored from wreg
 32892  0097A2  6E01               	movwf	i2c_set_frequency@frequency,c
 32893                           
 32894                           ;i2c.c: 125: switch(frequency)
 32895  0097A4  D007               	goto	l1195
 32896  0097A6                     
 32897                           ;i2c.c: 128: SSP1ADD = 119;
 32898  0097A6  0E77               	movlw	119
 32899  0097A8  D003               	goto	L34
 32900  0097AA                     
 32901                           ;i2c.c: 131: SSP1ADD = 59;
 32902  0097AA  0E3B               	movlw	59
 32903  0097AC  D001               	goto	L34
 32904  0097AE                     
 32905                           ;i2c.c: 134: SSP1ADD = 29;
 32906  0097AE  0E1D               	movlw	29
 32907  0097B0                     L34:
 32908  0097B0  6EC8               	movwf	4040,c	;volatile
 32909                           
 32910                           ;i2c.c: 136: }
 32911                           
 32912                           ;i2c.c: 135: break;
 32913  0097B2  D00A               	goto	l1197
 32914  0097B4                     l1195:
 32915  0097B4  5001               	movf	i2c_set_frequency@frequency,w,c
 32916                           
 32917                           ; Switch size 1, requested type "space"
 32918                           ; Number of cases is 3, Range of values is 0 to 2
 32919                           ; switch strategies available:
 32920                           ; Name         Instructions Cycles
 32921                           ; simple_byte           10     6 (average)
 32922                           ;	Chosen strategy is simple_byte
 32923  0097B6  0A00               	xorlw	0	; case 0
 32924  0097B8  B4D8               	btfsc	status,2,c
 32925  0097BA  D7F5               	goto	l1196
 32926  0097BC  0A01               	xorlw	1	; case 1
 32927  0097BE  B4D8               	btfsc	status,2,c
 32928  0097C0  D7F4               	goto	l1198
 32929  0097C2  0A03               	xorlw	3	; case 2
 32930  0097C4  B4D8               	btfsc	status,2,c
 32931  0097C6  D7F3               	goto	l1199
 32932  0097C8                     l1197:
 32933                           
 32934                           ;i2c.c: 138: i2c_frequency = frequency;
 32935  0097C8  C001  F18D         	movff	i2c_set_frequency@frequency,_i2c_frequency
 32936  0097CC  0012               	return		;funcret
 32937  0097CE                     __end_of_i2c_set_frequency:
 32938                           	opt stack 0
 32939                           tosu	equ	0xFFF
 32940                           tosh	equ	0xFFE
 32941                           tosl	equ	0xFFD
 32942                           pclath	equ	0xFFA
 32943                           tblptru	equ	0xFF8
 32944                           tblptrh	equ	0xFF7
 32945                           tblptrl	equ	0xFF6
 32946                           tablat	equ	0xFF5
 32947                           prodh	equ	0xFF4
 32948                           prodl	equ	0xFF3
 32949                           intcon	equ	0xFF2
 32950                           intcon2	equ	0xFF1
 32951                           intcon3	equ	0xFF0
 32952                           indf0	equ	0xFEF
 32953                           postinc0	equ	0xFEE
 32954                           fsr0h	equ	0xFEA
 32955                           fsr0l	equ	0xFE9
 32956                           wreg	equ	0xFE8
 32957                           indf1	equ	0xFE7
 32958                           postdec1	equ	0xFE5
 32959                           plusw1	equ	0xFE3
 32960                           fsr1h	equ	0xFE2
 32961                           fsr1l	equ	0xFE1
 32962                           indf2	equ	0xFDF
 32963                           postinc2	equ	0xFDE
 32964                           postdec2	equ	0xFDD
 32965                           plusw2	equ	0xFDB
 32966                           fsr2h	equ	0xFDA
 32967                           fsr2l	equ	0xFD9
 32968                           status	equ	0xFD8
 32969                           
 32970 ;; *************** function __i2c_write *****************
 32971 ;; Defined at:
 32972 ;;		line 142 in file "i2c.c"
 32973 ;; Parameters:    Size  Location     Type
 32974 ;;  slave_addres    1    wreg     unsigned char 
 32975 ;;  data            2    5[COMRAM] PTR unsigned char 
 32976 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 32977 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 32978 ;;		 -> _ic2_display_set_address@data_array(2), 
 32979 ;;  length          1    7[COMRAM] unsigned char 
 32980 ;; Auto vars:     Size  Location     Type
 32981 ;;  slave_addres    1    8[COMRAM] unsigned char 
 32982 ;;  cntr            1    9[COMRAM] unsigned char 
 32983 ;; Return value:  Size  Location     Type
 32984 ;;                  1    wreg      void 
 32985 ;; Registers used:
 32986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32987 ;; Tracked objects:
 32988 ;;		On entry : 0/0
 32989 ;;		On exit  : 0/0
 32990 ;;		Unchanged: 0/0
 32991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32992 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32993 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32995 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32996 ;;Total ram usage:        5 bytes
 32997 ;; Hardware stack levels used:    1
 32998 ;; Hardware stack levels required when called:    1
 32999 ;; This function calls:
 33000 ;;		__i2c_send
 33001 ;;		__i2c_start
 33002 ;;		__i2c_stop
 33003 ;;		__i2c_wait_idle
 33004 ;; This function is called by:
 33005 ;;		__ic2_display_set_address
 33006 ;;		_i2c_display_send_init_sequence
 33007 ;;		_i2c_digipot_reset_on
 33008 ;;		_i2c_digipot_reset_off
 33009 ;;		_i2c_digipot_backlight
 33010 ;;		_i2c_eeprom_writeByte
 33011 ;;		_i2c_eeprom_readByte
 33012 ;;		_i2c_eeprom_write
 33013 ;;		_i2c_eeprom_read
 33014 ;; This function uses a non-reentrant model
 33015 ;;
 33016                           
 33017                           	psect	text160
 33018  0090CA                     __ptext160:
 33019                           	opt stack 0
 33020  0090CA                     __i2c_write:
 33021                           	opt stack 27
 33022                           
 33023                           ;incstack = 0
 33024                           ;__i2c_write@slave_address stored from wreg
 33025  0090CA  6E09               	movwf	__i2c_write@slave_address,c
 33026                           
 33027                           ;i2c.c: 144: uint8_t cntr;;i2c.c: 146: _i2c_wait_idle();
 33028  0090CC  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 33029                           
 33030                           ;i2c.c: 147: _i2c_start();
 33031  0090D0  EC7B  F04E         	call	__i2c_start	;wreg free
 33032                           
 33033                           ;i2c.c: 148: _i2c_wait_idle();
 33034  0090D4  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 33035                           
 33036                           ;i2c.c: 149: _i2c_send(slave_address);
 33037  0090D8  5009               	movf	__i2c_write@slave_address,w,c
 33038  0090DA  EC7F  F04E         	call	__i2c_send
 33039                           
 33040                           ;i2c.c: 150: _i2c_wait_idle();
 33041  0090DE  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 33042                           
 33043                           ;i2c.c: 152: for(cntr=0; cntr<length; ++cntr)
 33044  0090E2  0E00               	movlw	0
 33045  0090E4  6E0A               	movwf	__i2c_write@cntr,c
 33046  0090E6  D00E               	goto	l1203
 33047  0090E8                     
 33048                           ;i2c.c: 153: {;i2c.c: 154: _i2c_send(data[cntr]);
 33049  0090E8  500A               	movf	__i2c_write@cntr,w,c
 33050  0090EA  0D01               	mullw	1
 33051  0090EC  50F3               	movf	prodl,w,c
 33052  0090EE  2406               	addwf	__i2c_write@data,w,c
 33053  0090F0  6ED9               	movwf	fsr2l,c
 33054  0090F2  50F4               	movf	prodh,w,c
 33055  0090F4  2007               	addwfc	__i2c_write@data+1,w,c
 33056  0090F6  6EDA               	movwf	fsr2h,c
 33057  0090F8  50DF               	movf	indf2,w,c
 33058  0090FA  EC7F  F04E         	call	__i2c_send
 33059                           
 33060                           ;i2c.c: 155: _i2c_wait_idle();
 33061  0090FE  EC6F  F045         	call	__i2c_wait_idle	;wreg free
 33062  009102  2A0A               	incf	__i2c_write@cntr,f,c
 33063  009104                     l1203:
 33064  009104  5008               	movf	__i2c_write@length,w,c
 33065  009106  5C0A               	subwf	__i2c_write@cntr,w,c
 33066  009108  A0D8               	btfss	status,0,c
 33067  00910A  D7EE               	goto	l1204
 33068                           
 33069                           ;i2c.c: 156: };i2c.c: 158: _i2c_stop();
 33070  00910C  EC77  F04E         	call	__i2c_stop	;wreg free
 33071  009110  0012               	return		;funcret
 33072  009112                     __end_of__i2c_write:
 33073                           	opt stack 0
 33074                           tosu	equ	0xFFF
 33075                           tosh	equ	0xFFE
 33076                           tosl	equ	0xFFD
 33077                           pclath	equ	0xFFA
 33078                           tblptru	equ	0xFF8
 33079                           tblptrh	equ	0xFF7
 33080                           tblptrl	equ	0xFF6
 33081                           tablat	equ	0xFF5
 33082                           prodh	equ	0xFF4
 33083                           prodl	equ	0xFF3
 33084                           intcon	equ	0xFF2
 33085                           intcon2	equ	0xFF1
 33086                           intcon3	equ	0xFF0
 33087                           indf0	equ	0xFEF
 33088                           postinc0	equ	0xFEE
 33089                           fsr0h	equ	0xFEA
 33090                           fsr0l	equ	0xFE9
 33091                           wreg	equ	0xFE8
 33092                           indf1	equ	0xFE7
 33093                           postdec1	equ	0xFE5
 33094                           plusw1	equ	0xFE3
 33095                           fsr1h	equ	0xFE2
 33096                           fsr1l	equ	0xFE1
 33097                           indf2	equ	0xFDF
 33098                           postinc2	equ	0xFDE
 33099                           postdec2	equ	0xFDD
 33100                           plusw2	equ	0xFDB
 33101                           fsr2h	equ	0xFDA
 33102                           fsr2l	equ	0xFD9
 33103                           status	equ	0xFD8
 33104                           
 33105 ;; *************** function __i2c_wait_idle *****************
 33106 ;; Defined at:
 33107 ;;		line 48 in file "i2c.c"
 33108 ;; Parameters:    Size  Location     Type
 33109 ;;		None
 33110 ;; Auto vars:     Size  Location     Type
 33111 ;;		None
 33112 ;; Return value:  Size  Location     Type
 33113 ;;                  1    wreg      void 
 33114 ;; Registers used:
 33115 ;;		wreg, status,2, status,0
 33116 ;; Tracked objects:
 33117 ;;		On entry : 0/0
 33118 ;;		On exit  : 0/0
 33119 ;;		Unchanged: 0/0
 33120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33123 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33124 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33125 ;;Total ram usage:        5 bytes
 33126 ;; Hardware stack levels used:    1
 33127 ;; This function calls:
 33128 ;;		Nothing
 33129 ;; This function is called by:
 33130 ;;		__i2c_write
 33131 ;;		__i2c_read
 33132 ;;		_i2c_display_write_fixed
 33133 ;;		_i2c_display_write
 33134 ;; This function uses a non-reentrant model
 33135 ;;
 33136                           
 33137                           	psect	text161
 33138  008ADE                     __ptext161:
 33139                           	opt stack 0
 33140  008ADE                     __i2c_wait_idle:
 33141                           	opt stack 27
 33142                           
 33143                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 33144                           
 33145                           ;incstack = 0
 33146  008ADE  A4C7               	btfss	4039,2,c	;volatile
 33147  008AE0  D003               	goto	u7290
 33148  008AE2  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33149  008AE4  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 33150  008AE6  D001               	goto	u7298
 33151  008AE8                     u7290:
 33152  008AE8  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33153  008AEA                     u7298:
 33154  008AEA  A0C5               	btfss	4037,0,c	;volatile
 33155  008AEC  D003               	goto	u7300
 33156  008AEE  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33157  008AF0  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 33158  008AF2  D001               	goto	u7308
 33159  008AF4                     u7300:
 33160  008AF4  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33161  008AF6                     u7308:
 33162  008AF6  A2C5               	btfss	4037,1,c	;volatile
 33163  008AF8  D003               	goto	u7310
 33164  008AFA  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33165  008AFC  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 33166  008AFE  D001               	goto	u7318
 33167  008B00                     u7310:
 33168  008B00  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33169  008B02                     u7318:
 33170  008B02  A4C5               	btfss	4037,2,c	;volatile
 33171  008B04  D003               	goto	u7320
 33172  008B06  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33173  008B08  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 33174  008B0A  D001               	goto	u7328
 33175  008B0C                     u7320:
 33176  008B0C  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33177  008B0E                     u7328:
 33178  008B0E  A6C5               	btfss	4037,3,c	;volatile
 33179  008B10  D003               	goto	u7330
 33180  008B12  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33181  008B14  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 33182  008B16  D001               	goto	u7338
 33183  008B18                     u7330:
 33184  008B18  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33185  008B1A                     u7338:
 33186  008B1A  A8C5               	btfss	4037,4,c	;volatile
 33187  008B1C  D002               	goto	u7340
 33188  008B1E  0E01               	movlw	1
 33189  008B20  D001               	goto	u7346
 33190  008B22                     u7340:
 33191  008B22  0E00               	movlw	0
 33192  008B24                     u7346:
 33193  008B24  1005               	iorwf	??__i2c_wait_idle+4,w,c
 33194  008B26  1004               	iorwf	??__i2c_wait_idle+3,w,c
 33195  008B28  1003               	iorwf	??__i2c_wait_idle+2,w,c
 33196  008B2A  1002               	iorwf	??__i2c_wait_idle+1,w,c
 33197  008B2C  1001               	iorwf	??__i2c_wait_idle,w,c
 33198  008B2E  0900               	iorlw	0
 33199  008B30  B4D8               	btfsc	status,2,c
 33200  008B32  0012               	return	
 33201  008B34  D7D4               	goto	__i2c_wait_idle
 33202  008B36                     __end_of__i2c_wait_idle:
 33203                           	opt stack 0
 33204                           tosu	equ	0xFFF
 33205                           tosh	equ	0xFFE
 33206                           tosl	equ	0xFFD
 33207                           pclath	equ	0xFFA
 33208                           tblptru	equ	0xFF8
 33209                           tblptrh	equ	0xFF7
 33210                           tblptrl	equ	0xFF6
 33211                           tablat	equ	0xFF5
 33212                           prodh	equ	0xFF4
 33213                           prodl	equ	0xFF3
 33214                           intcon	equ	0xFF2
 33215                           intcon2	equ	0xFF1
 33216                           intcon3	equ	0xFF0
 33217                           indf0	equ	0xFEF
 33218                           postinc0	equ	0xFEE
 33219                           fsr0h	equ	0xFEA
 33220                           fsr0l	equ	0xFE9
 33221                           wreg	equ	0xFE8
 33222                           indf1	equ	0xFE7
 33223                           postdec1	equ	0xFE5
 33224                           plusw1	equ	0xFE3
 33225                           fsr1h	equ	0xFE2
 33226                           fsr1l	equ	0xFE1
 33227                           indf2	equ	0xFDF
 33228                           postinc2	equ	0xFDE
 33229                           postdec2	equ	0xFDD
 33230                           plusw2	equ	0xFDB
 33231                           fsr2h	equ	0xFDA
 33232                           fsr2l	equ	0xFD9
 33233                           status	equ	0xFD8
 33234                           
 33235 ;; *************** function __i2c_stop *****************
 33236 ;; Defined at:
 33237 ;;		line 75 in file "i2c.c"
 33238 ;; Parameters:    Size  Location     Type
 33239 ;;		None
 33240 ;; Auto vars:     Size  Location     Type
 33241 ;;		None
 33242 ;; Return value:  Size  Location     Type
 33243 ;;                  1    wreg      void 
 33244 ;; Registers used:
 33245 ;;		None
 33246 ;; Tracked objects:
 33247 ;;		On entry : 0/0
 33248 ;;		On exit  : 0/0
 33249 ;;		Unchanged: 0/0
 33250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33255 ;;Total ram usage:        0 bytes
 33256 ;; Hardware stack levels used:    1
 33257 ;; This function calls:
 33258 ;;		Nothing
 33259 ;; This function is called by:
 33260 ;;		__i2c_write
 33261 ;;		__i2c_read
 33262 ;;		_i2c_display_write_fixed
 33263 ;;		_i2c_display_write
 33264 ;; This function uses a non-reentrant model
 33265 ;;
 33266                           
 33267                           	psect	text162
 33268  009CEE                     __ptext162:
 33269                           	opt stack 0
 33270  009CEE                     __i2c_stop:
 33271                           	opt stack 27
 33272                           
 33273                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 33274                           
 33275                           ;incstack = 0
 33276  009CEE  84C5               	bsf	4037,2,c	;volatile
 33277  009CF0  A4C5               	btfss	4037,2,c	;volatile
 33278  009CF2  0012               	return	
 33279  009CF4  D7FD               	goto	l1169
 33280  009CF6                     __end_of__i2c_stop:
 33281                           	opt stack 0
 33282                           tosu	equ	0xFFF
 33283                           tosh	equ	0xFFE
 33284                           tosl	equ	0xFFD
 33285                           pclath	equ	0xFFA
 33286                           tblptru	equ	0xFF8
 33287                           tblptrh	equ	0xFF7
 33288                           tblptrl	equ	0xFF6
 33289                           tablat	equ	0xFF5
 33290                           prodh	equ	0xFF4
 33291                           prodl	equ	0xFF3
 33292                           intcon	equ	0xFF2
 33293                           intcon2	equ	0xFF1
 33294                           intcon3	equ	0xFF0
 33295                           indf0	equ	0xFEF
 33296                           postinc0	equ	0xFEE
 33297                           fsr0h	equ	0xFEA
 33298                           fsr0l	equ	0xFE9
 33299                           wreg	equ	0xFE8
 33300                           indf1	equ	0xFE7
 33301                           postdec1	equ	0xFE5
 33302                           plusw1	equ	0xFE3
 33303                           fsr1h	equ	0xFE2
 33304                           fsr1l	equ	0xFE1
 33305                           indf2	equ	0xFDF
 33306                           postinc2	equ	0xFDE
 33307                           postdec2	equ	0xFDD
 33308                           plusw2	equ	0xFDB
 33309                           fsr2h	equ	0xFDA
 33310                           fsr2l	equ	0xFD9
 33311                           status	equ	0xFD8
 33312                           
 33313 ;; *************** function __i2c_start *****************
 33314 ;; Defined at:
 33315 ;;		line 54 in file "i2c.c"
 33316 ;; Parameters:    Size  Location     Type
 33317 ;;		None
 33318 ;; Auto vars:     Size  Location     Type
 33319 ;;		None
 33320 ;; Return value:  Size  Location     Type
 33321 ;;                  1    wreg      void 
 33322 ;; Registers used:
 33323 ;;		None
 33324 ;; Tracked objects:
 33325 ;;		On entry : 0/0
 33326 ;;		On exit  : 0/0
 33327 ;;		Unchanged: 0/0
 33328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33333 ;;Total ram usage:        0 bytes
 33334 ;; Hardware stack levels used:    1
 33335 ;; This function calls:
 33336 ;;		Nothing
 33337 ;; This function is called by:
 33338 ;;		__i2c_write
 33339 ;;		__i2c_read
 33340 ;;		_i2c_display_write_fixed
 33341 ;;		_i2c_display_write
 33342 ;; This function uses a non-reentrant model
 33343 ;;
 33344                           
 33345                           	psect	text163
 33346  009CF6                     __ptext163:
 33347                           	opt stack 0
 33348  009CF6                     __i2c_start:
 33349                           	opt stack 27
 33350                           
 33351                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 33352                           
 33353                           ;incstack = 0
 33354  009CF6  80C5               	bsf	4037,0,c	;volatile
 33355  009CF8  A0C5               	btfss	4037,0,c	;volatile
 33356  009CFA  0012               	return	
 33357  009CFC  D7FD               	goto	l1154
 33358  009CFE                     __end_of__i2c_start:
 33359                           	opt stack 0
 33360                           tosu	equ	0xFFF
 33361                           tosh	equ	0xFFE
 33362                           tosl	equ	0xFFD
 33363                           pclath	equ	0xFFA
 33364                           tblptru	equ	0xFF8
 33365                           tblptrh	equ	0xFF7
 33366                           tblptrl	equ	0xFF6
 33367                           tablat	equ	0xFF5
 33368                           prodh	equ	0xFF4
 33369                           prodl	equ	0xFF3
 33370                           intcon	equ	0xFF2
 33371                           intcon2	equ	0xFF1
 33372                           intcon3	equ	0xFF0
 33373                           indf0	equ	0xFEF
 33374                           postinc0	equ	0xFEE
 33375                           fsr0h	equ	0xFEA
 33376                           fsr0l	equ	0xFE9
 33377                           wreg	equ	0xFE8
 33378                           indf1	equ	0xFE7
 33379                           postdec1	equ	0xFE5
 33380                           plusw1	equ	0xFE3
 33381                           fsr1h	equ	0xFE2
 33382                           fsr1l	equ	0xFE1
 33383                           indf2	equ	0xFDF
 33384                           postinc2	equ	0xFDE
 33385                           postdec2	equ	0xFDD
 33386                           plusw2	equ	0xFDB
 33387                           fsr2h	equ	0xFDA
 33388                           fsr2l	equ	0xFD9
 33389                           status	equ	0xFD8
 33390                           
 33391 ;; *************** function __i2c_send *****************
 33392 ;; Defined at:
 33393 ;;		line 61 in file "i2c.c"
 33394 ;; Parameters:    Size  Location     Type
 33395 ;;  dat             1    wreg     unsigned char 
 33396 ;; Auto vars:     Size  Location     Type
 33397 ;;  dat             1    0[COMRAM] unsigned char 
 33398 ;; Return value:  Size  Location     Type
 33399 ;;                  1    wreg      void 
 33400 ;; Registers used:
 33401 ;;		wreg
 33402 ;; Tracked objects:
 33403 ;;		On entry : 0/0
 33404 ;;		On exit  : 0/0
 33405 ;;		Unchanged: 0/0
 33406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33411 ;;Total ram usage:        1 bytes
 33412 ;; Hardware stack levels used:    1
 33413 ;; This function calls:
 33414 ;;		Nothing
 33415 ;; This function is called by:
 33416 ;;		__i2c_write
 33417 ;;		__i2c_read
 33418 ;;		_i2c_display_write_fixed
 33419 ;;		_i2c_display_write
 33420 ;; This function uses a non-reentrant model
 33421 ;;
 33422                           
 33423                           	psect	text164
 33424  009CFE                     __ptext164:
 33425                           	opt stack 0
 33426  009CFE                     __i2c_send:
 33427                           	opt stack 27
 33428                           
 33429                           ;incstack = 0
 33430                           ;__i2c_send@dat stored from wreg
 33431  009CFE  6E01               	movwf	__i2c_send@dat,c
 33432                           
 33433                           ;i2c.c: 63: SSP1BUF = dat;
 33434  009D00  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 33435  009D04  0012               	return		;funcret
 33436  009D06                     __end_of__i2c_send:
 33437                           	opt stack 0
 33438                           tosu	equ	0xFFF
 33439                           tosh	equ	0xFFE
 33440                           tosl	equ	0xFFD
 33441                           pclath	equ	0xFFA
 33442                           tblptru	equ	0xFF8
 33443                           tblptrh	equ	0xFF7
 33444                           tblptrl	equ	0xFF6
 33445                           tablat	equ	0xFF5
 33446                           prodh	equ	0xFF4
 33447                           prodl	equ	0xFF3
 33448                           intcon	equ	0xFF2
 33449                           intcon2	equ	0xFF1
 33450                           intcon3	equ	0xFF0
 33451                           indf0	equ	0xFEF
 33452                           postinc0	equ	0xFEE
 33453                           fsr0h	equ	0xFEA
 33454                           fsr0l	equ	0xFE9
 33455                           wreg	equ	0xFE8
 33456                           indf1	equ	0xFE7
 33457                           postdec1	equ	0xFE5
 33458                           plusw1	equ	0xFE3
 33459                           fsr1h	equ	0xFE2
 33460                           fsr1l	equ	0xFE1
 33461                           indf2	equ	0xFDF
 33462                           postinc2	equ	0xFDE
 33463                           postdec2	equ	0xFDD
 33464                           plusw2	equ	0xFDB
 33465                           fsr2h	equ	0xFDA
 33466                           fsr2l	equ	0xFD9
 33467                           status	equ	0xFD8
 33468                           
 33469 ;; *************** function __parse_command_long *****************
 33470 ;; Defined at:
 33471 ;;		line 546 in file "api.c"
 33472 ;; Parameters:    Size  Location     Type
 33473 ;;  data            2   61[BANK0 ] PTR unsigned char 
 33474 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33475 ;;  out_buffer      2   63[BANK0 ] PTR unsigned char 
 33476 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 33477 ;;  out_idx_ptr     2   65[BANK0 ] PTR unsigned char 
 33478 ;;		 -> api_parse@out_idx(1), 
 33479 ;; Auto vars:     Size  Location     Type
 33480 ;;  length          1   67[BANK0 ] unsigned char 
 33481 ;; Return value:  Size  Location     Type
 33482 ;;                  1    wreg      unsigned char 
 33483 ;; Registers used:
 33484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33485 ;; Tracked objects:
 33486 ;;		On entry : 0/0
 33487 ;;		On exit  : 0/0
 33488 ;;		Unchanged: 0/0
 33489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33490 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33493 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33494 ;;Total ram usage:        7 bytes
 33495 ;; Hardware stack levels used:    1
 33496 ;; Hardware stack levels required when called:   10
 33497 ;; This function calls:
 33498 ;;		__parse_buffer_to_sector
 33499 ;;		__parse_file_append
 33500 ;;		__parse_file_copy
 33501 ;;		__parse_file_create
 33502 ;;		__parse_file_delete
 33503 ;;		__parse_file_modify
 33504 ;;		__parse_file_rename
 33505 ;;		__parse_file_resize
 33506 ;;		__parse_format_drive
 33507 ;;		__parse_sector_to_buffer
 33508 ;;		__parse_write_buffer
 33509 ;; This function is called by:
 33510 ;;		_api_parse
 33511 ;; This function uses a non-reentrant model
 33512 ;;
 33513                           
 33514                           	psect	text165
 33515  0038EC                     __ptext165:
 33516                           	opt stack 0
 33517  0038EC                     __parse_command_long:
 33518                           	opt stack 19
 33519                           
 33520                           ;api.c: 548: uint8_t length = 65;
 33521                           
 33522                           ;incstack = 0
 33523  0038EC  0E41               	movlw	65
 33524  0038EE  0100               	movlb	0	; () banked
 33525  0038F0  6FA3               	movwf	__parse_command_long@length& (0+255),b
 33526                           
 33527                           ;api.c: 550: switch(data[0])
 33528  0038F2  D0A7               	goto	l2845
 33529  0038F4                     
 33530                           ; BSR set to: 0
 33531                           ;api.c: 553: length = _parse_file_resize(data, out_buffer, out_idx_ptr);
 33532                           
 33533                           ; BSR set to: 0
 33534  0038F4  C09D  F055         	movff	__parse_command_long@data,__parse_file_resize@data
 33535  0038F8  C09E  F056         	movff	__parse_command_long@data+1,__parse_file_resize@data+1
 33536  0038FC  C09F  F057         	movff	__parse_command_long@out_buffer,__parse_file_resize@out_buffer
 33537  003900  C0A0  F058         	movff	__parse_command_long@out_buffer+1,__parse_file_resize@out_buffer+1
 33538  003904  C0A1  F059         	movff	__parse_command_long@out_idx_ptr,__parse_file_resize@out_idx_ptr
 33539  003908  C0A2  F05A         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_resize@out_idx_ptr+1
 33540  00390C  ECBE  F015         	call	__parse_file_resize	;wreg free
 33541  003910  D095               	goto	L44
 33542  003912                     
 33543                           ; BSR set to: 0
 33544                           ;api.c: 557: length = _parse_file_delete(data, out_buffer, out_idx_ptr);
 33545                           
 33546                           ; BSR set to: 0
 33547  003912  C09D  F050         	movff	__parse_command_long@data,__parse_file_delete@data
 33548  003916  C09E  F051         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 33549  00391A  C09F  F052         	movff	__parse_command_long@out_buffer,__parse_file_delete@out_buffer
 33550  00391E  C0A0  F053         	movff	__parse_command_long@out_buffer+1,__parse_file_delete@out_buffer+1
 33551  003922  C0A1  F054         	movff	__parse_command_long@out_idx_ptr,__parse_file_delete@out_idx_ptr
 33552  003926  C0A2  F055         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_delete@out_idx_ptr+1
 33553  00392A  ECD9  F033         	call	__parse_file_delete	;wreg free
 33554  00392E  D086               	goto	L44
 33555  003930                     
 33556                           ; BSR set to: 0
 33557                           ;api.c: 561: length = _parse_file_create(data, out_buffer, out_idx_ptr);
 33558                           
 33559                           ; BSR set to: 0
 33560  003930  C09D  F059         	movff	__parse_command_long@data,__parse_file_create@data
 33561  003934  C09E  F05A         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 33562  003938  C09F  F05B         	movff	__parse_command_long@out_buffer,__parse_file_create@out_buffer
 33563  00393C  C0A0  F05C         	movff	__parse_command_long@out_buffer+1,__parse_file_create@out_buffer+1
 33564  003940  C0A1  F05D         	movff	__parse_command_long@out_idx_ptr,__parse_file_create@out_idx_ptr
 33565  003944  C0A2  F05E         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_create@out_idx_ptr+1
 33566  003948  ECD9  F023         	call	__parse_file_create	;wreg free
 33567  00394C  D077               	goto	L44
 33568  00394E                     
 33569                           ; BSR set to: 0
 33570                           ;api.c: 565: length = _parse_file_rename(data, out_buffer, out_idx_ptr);
 33571                           
 33572                           ; BSR set to: 0
 33573  00394E  C09D  F060         	movff	__parse_command_long@data,__parse_file_rename@data
 33574  003952  C09E  F061         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 33575  003956  C09F  F062         	movff	__parse_command_long@out_buffer,__parse_file_rename@out_buffer
 33576  00395A  C0A0  F063         	movff	__parse_command_long@out_buffer+1,__parse_file_rename@out_buffer+1
 33577  00395E  C0A1  F064         	movff	__parse_command_long@out_idx_ptr,__parse_file_rename@out_idx_ptr
 33578  003962  C0A2  F065         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_rename@out_idx_ptr+1
 33579  003966  ECBC  F02E         	call	__parse_file_rename	;wreg free
 33580  00396A  D068               	goto	L44
 33581  00396C                     
 33582                           ; BSR set to: 0
 33583                           ;api.c: 569: length = _parse_file_append(data, out_buffer, out_idx_ptr);
 33584                           
 33585                           ; BSR set to: 0
 33586  00396C  C09D  F05A         	movff	__parse_command_long@data,__parse_file_append@data
 33587  003970  C09E  F05B         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 33588  003974  C09F  F05C         	movff	__parse_command_long@out_buffer,__parse_file_append@out_buffer
 33589  003978  C0A0  F05D         	movff	__parse_command_long@out_buffer+1,__parse_file_append@out_buffer+1
 33590  00397C  C0A1  F05E         	movff	__parse_command_long@out_idx_ptr,__parse_file_append@out_idx_ptr
 33591  003980  C0A2  F05F         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_append@out_idx_ptr+1
 33592  003984  EC77  F022         	call	__parse_file_append	;wreg free
 33593  003988  D059               	goto	L44
 33594  00398A                     
 33595                           ; BSR set to: 0
 33596                           ;api.c: 573: length = _parse_file_modify(data, out_buffer, out_idx_ptr);
 33597                           
 33598                           ; BSR set to: 0
 33599  00398A  C09D  F056         	movff	__parse_command_long@data,__parse_file_modify@data
 33600  00398E  C09E  F057         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 33601  003992  C09F  F058         	movff	__parse_command_long@out_buffer,__parse_file_modify@out_buffer
 33602  003996  C0A0  F059         	movff	__parse_command_long@out_buffer+1,__parse_file_modify@out_buffer+1
 33603  00399A  C0A1  F05A         	movff	__parse_command_long@out_idx_ptr,__parse_file_modify@out_idx_ptr
 33604  00399E  C0A2  F05B         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_modify@out_idx_ptr+1
 33605  0039A2  ECE6  F00E         	call	__parse_file_modify	;wreg free
 33606  0039A6  D04A               	goto	L44
 33607  0039A8                     
 33608                           ; BSR set to: 0
 33609                           ;api.c: 577: length = _parse_format_drive(data, out_buffer, out_idx_ptr);
 33610                           
 33611                           ; BSR set to: 0
 33612  0039A8  C09D  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 33613  0039AC  C09E  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 33614  0039B0  C09F  F029         	movff	__parse_command_long@out_buffer,__parse_format_drive@out_buffer
 33615  0039B4  C0A0  F02A         	movff	__parse_command_long@out_buffer+1,__parse_format_drive@out_buffer+1
 33616  0039B8  C0A1  F02B         	movff	__parse_command_long@out_idx_ptr,__parse_format_drive@out_idx_ptr
 33617  0039BC  C0A2  F02C         	movff	__parse_command_long@out_idx_ptr+1,__parse_format_drive@out_idx_ptr+1
 33618  0039C0  EC30  F03B         	call	__parse_format_drive	;wreg free
 33619  0039C4  D03B               	goto	L44
 33620  0039C6                     
 33621                           ; BSR set to: 0
 33622                           ;api.c: 581: length = _parse_sector_to_buffer(data, out_buffer, out_idx_ptr);
 33623                           
 33624                           ; BSR set to: 0
 33625  0039C6  C09D  F054         	movff	__parse_command_long@data,__parse_sector_to_buffer@data
 33626  0039CA  C09E  F055         	movff	__parse_command_long@data+1,__parse_sector_to_buffer@data+1
 33627  0039CE  C09F  F056         	movff	__parse_command_long@out_buffer,__parse_sector_to_buffer@out_buffer
 33628  0039D2  C0A0  F057         	movff	__parse_command_long@out_buffer+1,__parse_sector_to_buffer@out_buffer+1
 33629  0039D6  C0A1  F058         	movff	__parse_command_long@out_idx_ptr,__parse_sector_to_buffer@out_idx_ptr
 33630  0039DA  C0A2  F059         	movff	__parse_command_long@out_idx_ptr+1,__parse_sector_to_buffer@out_idx_ptr+1
 33631  0039DE  ECC1  F021         	call	__parse_sector_to_buffer	;wreg free
 33632  0039E2  D02C               	goto	L44
 33633  0039E4                     
 33634                           ; BSR set to: 0
 33635                           ;api.c: 585: length = _parse_buffer_to_sector(data, out_buffer, out_idx_ptr);
 33636                           
 33637                           ; BSR set to: 0
 33638  0039E4  C09D  F052         	movff	__parse_command_long@data,__parse_buffer_to_sector@data
 33639  0039E8  C09E  F053         	movff	__parse_command_long@data+1,__parse_buffer_to_sector@data+1
 33640  0039EC  C09F  F054         	movff	__parse_command_long@out_buffer,__parse_buffer_to_sector@out_buffer
 33641  0039F0  C0A0  F055         	movff	__parse_command_long@out_buffer+1,__parse_buffer_to_sector@out_buffer+1
 33642  0039F4  C0A1  F056         	movff	__parse_command_long@out_idx_ptr,__parse_buffer_to_sector@out_idx_ptr
 33643  0039F8  C0A2  F057         	movff	__parse_command_long@out_idx_ptr+1,__parse_buffer_to_sector@out_idx_ptr+1
 33644  0039FC  EC29  F023         	call	__parse_buffer_to_sector	;wreg free
 33645  003A00  D01D               	goto	L44
 33646  003A02                     
 33647                           ; BSR set to: 0
 33648                           ;api.c: 589: length = _parse_write_buffer(data, out_buffer, out_idx_ptr);
 33649                           
 33650                           ; BSR set to: 0
 33651  003A02  C09D  F02B         	movff	__parse_command_long@data,__parse_write_buffer@data
 33652  003A06  C09E  F02C         	movff	__parse_command_long@data+1,__parse_write_buffer@data+1
 33653  003A0A  C09F  F02D         	movff	__parse_command_long@out_buffer,__parse_write_buffer@out_buffer
 33654  003A0E  C0A0  F02E         	movff	__parse_command_long@out_buffer+1,__parse_write_buffer@out_buffer+1
 33655  003A12  C0A1  F02F         	movff	__parse_command_long@out_idx_ptr,__parse_write_buffer@out_idx_ptr
 33656  003A16  C0A2  F030         	movff	__parse_command_long@out_idx_ptr+1,__parse_write_buffer@out_idx_ptr+1
 33657  003A1A  ECD6  F025         	call	__parse_write_buffer	;wreg free
 33658  003A1E  D00E               	goto	L44
 33659  003A20                     
 33660                           ; BSR set to: 0
 33661                           ;api.c: 593: length = _parse_file_copy(data, out_buffer, out_idx_ptr);
 33662                           
 33663                           ; BSR set to: 0
 33664  003A20  C09D  F094         	movff	__parse_command_long@data,__parse_file_copy@data
 33665  003A24  C09E  F095         	movff	__parse_command_long@data+1,__parse_file_copy@data+1
 33666  003A28  C09F  F096         	movff	__parse_command_long@out_buffer,__parse_file_copy@out_buffer
 33667  003A2C  C0A0  F097         	movff	__parse_command_long@out_buffer+1,__parse_file_copy@out_buffer+1
 33668  003A30  C0A1  F098         	movff	__parse_command_long@out_idx_ptr,__parse_file_copy@out_idx_ptr
 33669  003A34  C0A2  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_copy@out_idx_ptr+1
 33670  003A38  EC3B  F02F         	call	__parse_file_copy	;wreg free
 33671  003A3C                     L44:
 33672  003A3C  0100               	movlb	0	; () banked
 33673  003A3E  6FA3               	movwf	__parse_command_long@length& (0+255),b
 33674                           
 33675                           ; BSR set to: 0
 33676                           ;api.c: 595: }
 33677                           
 33678                           ;api.c: 594: break;
 33679  003A40  D026               	goto	l2847
 33680  003A42                     l2845:
 33681                           
 33682                           ; BSR set to: 0
 33683                           
 33684                           ; BSR set to: 0
 33685  003A42  C09D  FFD9         	movff	__parse_command_long@data,fsr2l
 33686  003A46  C09E  FFDA         	movff	__parse_command_long@data+1,fsr2h
 33687  003A4A  50DF               	movf	indf2,w,c
 33688                           
 33689                           ; Switch size 1, requested type "space"
 33690                           ; Number of cases is 11, Range of values is 80 to 90
 33691                           ; switch strategies available:
 33692                           ; Name         Instructions Cycles
 33693                           ; simple_byte           34    18 (average)
 33694                           ;	Chosen strategy is simple_byte
 33695  003A4C  0A50               	xorlw	80	; case 80
 33696  003A4E  B4D8               	btfsc	status,2,c
 33697  003A50  D751               	goto	l2846
 33698  003A52  0A01               	xorlw	1	; case 81
 33699  003A54  B4D8               	btfsc	status,2,c
 33700  003A56  D75D               	goto	l2848
 33701  003A58  0A03               	xorlw	3	; case 82
 33702  003A5A  B4D8               	btfsc	status,2,c
 33703  003A5C  D769               	goto	l2849
 33704  003A5E  0A01               	xorlw	1	; case 83
 33705  003A60  B4D8               	btfsc	status,2,c
 33706  003A62  D775               	goto	l2850
 33707  003A64  0A07               	xorlw	7	; case 84
 33708  003A66  B4D8               	btfsc	status,2,c
 33709  003A68  D781               	goto	l2851
 33710  003A6A  0A01               	xorlw	1	; case 85
 33711  003A6C  B4D8               	btfsc	status,2,c
 33712  003A6E  D78D               	goto	l2852
 33713  003A70  0A03               	xorlw	3	; case 86
 33714  003A72  B4D8               	btfsc	status,2,c
 33715  003A74  D799               	goto	l2853
 33716  003A76  0A01               	xorlw	1	; case 87
 33717  003A78  B4D8               	btfsc	status,2,c
 33718  003A7A  D7A5               	goto	l2854
 33719  003A7C  0A0F               	xorlw	15	; case 88
 33720  003A7E  B4D8               	btfsc	status,2,c
 33721  003A80  D7B1               	goto	l2855
 33722  003A82  0A01               	xorlw	1	; case 89
 33723  003A84  B4D8               	btfsc	status,2,c
 33724  003A86  D7BD               	goto	l2856
 33725  003A88  0A03               	xorlw	3	; case 90
 33726  003A8A  B4D8               	btfsc	status,2,c
 33727  003A8C  D7C9               	goto	l2857
 33728  003A8E                     l2847:
 33729                           
 33730                           ; BSR set to: 0
 33731                           ;api.c: 597: return length;
 33732                           
 33733                           ; BSR set to: 0
 33734  003A8E  51A3               	movf	__parse_command_long@length& (0+255),w,b
 33735  003A90  0012               	return	
 33736  003A92                     __end_of__parse_command_long:
 33737                           	opt stack 0
 33738                           tosu	equ	0xFFF
 33739                           tosh	equ	0xFFE
 33740                           tosl	equ	0xFFD
 33741                           pclath	equ	0xFFA
 33742                           tblptru	equ	0xFF8
 33743                           tblptrh	equ	0xFF7
 33744                           tblptrl	equ	0xFF6
 33745                           tablat	equ	0xFF5
 33746                           prodh	equ	0xFF4
 33747                           prodl	equ	0xFF3
 33748                           intcon	equ	0xFF2
 33749                           intcon2	equ	0xFF1
 33750                           intcon3	equ	0xFF0
 33751                           indf0	equ	0xFEF
 33752                           postinc0	equ	0xFEE
 33753                           fsr0h	equ	0xFEA
 33754                           fsr0l	equ	0xFE9
 33755                           wreg	equ	0xFE8
 33756                           indf1	equ	0xFE7
 33757                           postdec1	equ	0xFE5
 33758                           plusw1	equ	0xFE3
 33759                           fsr1h	equ	0xFE2
 33760                           fsr1l	equ	0xFE1
 33761                           indf2	equ	0xFDF
 33762                           postinc2	equ	0xFDE
 33763                           postdec2	equ	0xFDD
 33764                           plusw2	equ	0xFDB
 33765                           fsr2h	equ	0xFDA
 33766                           fsr2l	equ	0xFD9
 33767                           status	equ	0xFD8
 33768                           
 33769 ;; *************** function __parse_write_buffer *****************
 33770 ;; Defined at:
 33771 ;;		line 912 in file "api.c"
 33772 ;; Parameters:    Size  Location     Type
 33773 ;;  data            2   42[COMRAM] PTR unsigned char 
 33774 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33775 ;;  out_buffer      2   44[COMRAM] PTR unsigned char 
 33776 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 33777 ;;  out_idx_ptr     2   46[COMRAM] PTR unsigned char 
 33778 ;;		 -> api_parse@out_idx(1), 
 33779 ;; Auto vars:     Size  Location     Type
 33780 ;;  start_byte      2   51[COMRAM] unsigned int 
 33781 ;;  number_of_by    2   49[COMRAM] unsigned int 
 33782 ;; Return value:  Size  Location     Type
 33783 ;;                  1    wreg      unsigned char 
 33784 ;; Registers used:
 33785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33786 ;; Tracked objects:
 33787 ;;		On entry : 0/0
 33788 ;;		On exit  : 0/0
 33789 ;;		Unchanged: 0/0
 33790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33791 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33792 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33794 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33795 ;;Total ram usage:       11 bytes
 33796 ;; Hardware stack levels used:    1
 33797 ;; Hardware stack levels required when called:    6
 33798 ;; This function calls:
 33799 ;;		_fat_write_to_buffer
 33800 ;; This function is called by:
 33801 ;;		__parse_command_long
 33802 ;; This function uses a non-reentrant model
 33803 ;;
 33804                           
 33805                           	psect	text166
 33806  004BAC                     __ptext166:
 33807                           	opt stack 0
 33808  004BAC                     __parse_write_buffer:
 33809                           	opt stack 22
 33810                           
 33811                           ;api.c: 914: uint16_t start_byte;;api.c: 915: uint16_t number_of_bytes;;api.c: 918: if((
      +                          data[0]!=COMMAND_WRITE_BUFFER) || (data[4]!=0xE2) || (data[5]!=0x30))
 33812                           
 33813                           ; BSR set to: 0
 33814                           ;incstack = 0
 33815  004BAC  C02B  FFD9         	movff	__parse_write_buffer@data,fsr2l
 33816  004BB0  C02C  FFDA         	movff	__parse_write_buffer@data+1,fsr2h
 33817  004BB4  0E59               	movlw	89
 33818  004BB6  18DE               	xorwf	postinc2,w,c
 33819  004BB8  A4D8               	btfss	status,2,c
 33820  004BBA  D014               	goto	u11790
 33821  004BBC  EE20 F004          	lfsr	2,4
 33822  004BC0  502B               	movf	__parse_write_buffer@data,w,c
 33823  004BC2  26D9               	addwf	fsr2l,f,c
 33824  004BC4  502C               	movf	__parse_write_buffer@data+1,w,c
 33825  004BC6  22DA               	addwfc	fsr2h,f,c
 33826  004BC8  0EE2               	movlw	226
 33827  004BCA  18DE               	xorwf	postinc2,w,c
 33828  004BCC  A4D8               	btfss	status,2,c
 33829  004BCE  D00A               	goto	u11790
 33830  004BD0  EE20 F005          	lfsr	2,5
 33831  004BD4  502B               	movf	__parse_write_buffer@data,w,c
 33832  004BD6  26D9               	addwf	fsr2l,f,c
 33833  004BD8  502C               	movf	__parse_write_buffer@data+1,w,c
 33834  004BDA  22DA               	addwfc	fsr2h,f,c
 33835  004BDC  0E30               	movlw	48
 33836  004BDE  18DE               	xorwf	postinc2,w,c
 33837  004BE0  B4D8               	btfsc	status,2,c
 33838  004BE2  D002               	goto	l2924
 33839  004BE4                     u11790:
 33840                           
 33841                           ;api.c: 919: {;api.c: 921: return 65;
 33842  004BE4  0E41               	movlw	65
 33843  004BE6  0012               	return	
 33844  004BE8                     l2924:
 33845                           
 33846                           ;api.c: 922: };api.c: 925: start_byte |= data[1];
 33847  004BE8  EE20 F001          	lfsr	2,1
 33848  004BEC  502B               	movf	__parse_write_buffer@data,w,c
 33849  004BEE  26D9               	addwf	fsr2l,f,c
 33850  004BF0  502C               	movf	__parse_write_buffer@data+1,w,c
 33851  004BF2  22DA               	addwfc	fsr2h,f,c
 33852  004BF4  50DF               	movf	indf2,w,c
 33853  004BF6  6E31               	movwf	??__parse_write_buffer& (0+255),c
 33854  004BF8  5031               	movf	??__parse_write_buffer,w,c
 33855  004BFA  1234               	iorwf	__parse_write_buffer@start_byte,f,c
 33856                           
 33857                           ;api.c: 926: start_byte <<= 8;
 33858  004BFC  5034               	movf	__parse_write_buffer@start_byte,w,c
 33859  004BFE  6E35               	movwf	__parse_write_buffer@start_byte+1,c
 33860  004C00  6A34               	clrf	__parse_write_buffer@start_byte,c
 33861                           
 33862                           ;api.c: 927: start_byte |= data[2];
 33863  004C02  EE20 F002          	lfsr	2,2
 33864  004C06  502B               	movf	__parse_write_buffer@data,w,c
 33865  004C08  26D9               	addwf	fsr2l,f,c
 33866  004C0A  502C               	movf	__parse_write_buffer@data+1,w,c
 33867  004C0C  22DA               	addwfc	fsr2h,f,c
 33868  004C0E  50DF               	movf	indf2,w,c
 33869  004C10  6E31               	movwf	??__parse_write_buffer& (0+255),c
 33870  004C12  5031               	movf	??__parse_write_buffer,w,c
 33871  004C14  1234               	iorwf	__parse_write_buffer@start_byte,f,c
 33872                           
 33873                           ;api.c: 930: number_of_bytes = data[3];
 33874  004C16  EE20 F003          	lfsr	2,3
 33875  004C1A  502B               	movf	__parse_write_buffer@data,w,c
 33876  004C1C  26D9               	addwf	fsr2l,f,c
 33877  004C1E  502C               	movf	__parse_write_buffer@data+1,w,c
 33878  004C20  22DA               	addwfc	fsr2h,f,c
 33879  004C22  50DF               	movf	indf2,w,c
 33880  004C24  6E31               	movwf	??__parse_write_buffer& (0+255),c
 33881  004C26  5031               	movf	??__parse_write_buffer,w,c
 33882  004C28  6E32               	movwf	__parse_write_buffer@number_of_bytes,c
 33883  004C2A  6A33               	clrf	__parse_write_buffer@number_of_bytes+1,c
 33884                           
 33885                           ;api.c: 933: fat_write_to_buffer(start_byte, number_of_bytes, &data[6]);
 33886  004C2C  C034  F025         	movff	__parse_write_buffer@start_byte,fat_write_to_buffer@start
 33887  004C30  C035  F026         	movff	__parse_write_buffer@start_byte+1,fat_write_to_buffer@start+1
 33888  004C34  C032  F027         	movff	__parse_write_buffer@number_of_bytes,fat_write_to_buffer@length
 33889  004C38  C033  F028         	movff	__parse_write_buffer@number_of_bytes+1,fat_write_to_buffer@length+1
 33890  004C3C  0E06               	movlw	6
 33891  004C3E  242B               	addwf	__parse_write_buffer@data,w,c
 33892  004C40  6E29               	movwf	fat_write_to_buffer@data,c
 33893  004C42  0E00               	movlw	0
 33894  004C44  202C               	addwfc	__parse_write_buffer@data+1,w,c
 33895  004C46  6E2A               	movwf	fat_write_to_buffer@data+1,c
 33896  004C48  EC31  F04D         	call	_fat_write_to_buffer	;wreg free
 33897                           
 33898                           ;api.c: 936: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<61))
 33899  004C4C  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33900  004C50  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33901  004C54  50DF               	movf	indf2,w,c
 33902  004C56  B4D8               	btfsc	status,2,c
 33903  004C58  D04F               	goto	l2928
 33904  004C5A  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33905  004C5E  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33906  004C62  0E3D               	movlw	61
 33907  004C64  60DF               	cpfslt	indf2,c
 33908  004C66  D048               	goto	l2928
 33909                           
 33910                           ;api.c: 937: {;api.c: 938: out_buffer[(*out_idx_ptr)++] = COMMAND_WRITE_BUFFER;
 33911  004C68  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33912  004C6C  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33913  004C70  CFDF F031          	movff	indf2,??__parse_write_buffer
 33914  004C74  0E01               	movlw	1
 33915  004C76  26DF               	addwf	indf2,f,c
 33916  004C78  5031               	movf	??__parse_write_buffer,w,c
 33917  004C7A  0D01               	mullw	1
 33918  004C7C  50F3               	movf	prodl,w,c
 33919  004C7E  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 33920  004C80  6ED9               	movwf	fsr2l,c
 33921  004C82  50F4               	movf	prodh,w,c
 33922  004C84  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 33923  004C86  6EDA               	movwf	fsr2h,c
 33924  004C88  0E59               	movlw	89
 33925  004C8A  6EDF               	movwf	indf2,c
 33926                           
 33927                           ;api.c: 939: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((start_byte)>>8)&0xFF));
 33928  004C8C  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33929  004C90  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33930  004C94  CFDF F031          	movff	indf2,??__parse_write_buffer
 33931  004C98  0E01               	movlw	1
 33932  004C9A  26DF               	addwf	indf2,f,c
 33933  004C9C  5031               	movf	??__parse_write_buffer,w,c
 33934  004C9E  0D01               	mullw	1
 33935  004CA0  50F3               	movf	prodl,w,c
 33936  004CA2  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 33937  004CA4  6ED9               	movwf	fsr2l,c
 33938  004CA6  50F4               	movf	prodh,w,c
 33939  004CA8  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 33940  004CAA  6EDA               	movwf	fsr2h,c
 33941  004CAC  5035               	movf	__parse_write_buffer@start_byte+1,w,c
 33942  004CAE  6EDF               	movwf	indf2,c
 33943                           
 33944                           ;api.c: 940: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((start_byte)&0xFF));
 33945  004CB0  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33946  004CB4  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33947  004CB8  CFDF F031          	movff	indf2,??__parse_write_buffer
 33948  004CBC  0E01               	movlw	1
 33949  004CBE  26DF               	addwf	indf2,f,c
 33950  004CC0  5031               	movf	??__parse_write_buffer,w,c
 33951  004CC2  0D01               	mullw	1
 33952  004CC4  50F3               	movf	prodl,w,c
 33953  004CC6  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 33954  004CC8  6ED9               	movwf	fsr2l,c
 33955  004CCA  50F4               	movf	prodh,w,c
 33956  004CCC  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 33957  004CCE  6EDA               	movwf	fsr2h,c
 33958  004CD0  C034  FFDF         	movff	__parse_write_buffer@start_byte,indf2
 33959                           
 33960                           ;api.c: 941: out_buffer[(*out_idx_ptr)++] = number_of_bytes;
 33961  004CD4  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33962  004CD8  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33963  004CDC  CFDF F031          	movff	indf2,??__parse_write_buffer
 33964  004CE0  0E01               	movlw	1
 33965  004CE2  26DF               	addwf	indf2,f,c
 33966  004CE4  5031               	movf	??__parse_write_buffer,w,c
 33967  004CE6  0D01               	mullw	1
 33968  004CE8  50F3               	movf	prodl,w,c
 33969  004CEA  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 33970  004CEC  6ED9               	movwf	fsr2l,c
 33971  004CEE  50F4               	movf	prodh,w,c
 33972  004CF0  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 33973  004CF2  6EDA               	movwf	fsr2h,c
 33974  004CF4  C032  FFDF         	movff	__parse_write_buffer@number_of_bytes,indf2
 33975  004CF8                     l2928:
 33976                           
 33977                           ;api.c: 942: };api.c: 945: return 6 + number_of_bytes;
 33978  004CF8  5032               	movf	__parse_write_buffer@number_of_bytes,w,c
 33979  004CFA  0F06               	addlw	6
 33980  004CFC  0012               	return	
 33981  004CFE                     __end_of__parse_write_buffer:
 33982                           	opt stack 0
 33983                           tosu	equ	0xFFF
 33984                           tosh	equ	0xFFE
 33985                           tosl	equ	0xFFD
 33986                           pclath	equ	0xFFA
 33987                           tblptru	equ	0xFF8
 33988                           tblptrh	equ	0xFF7
 33989                           tblptrl	equ	0xFF6
 33990                           tablat	equ	0xFF5
 33991                           prodh	equ	0xFF4
 33992                           prodl	equ	0xFF3
 33993                           intcon	equ	0xFF2
 33994                           intcon2	equ	0xFF1
 33995                           intcon3	equ	0xFF0
 33996                           indf0	equ	0xFEF
 33997                           postinc0	equ	0xFEE
 33998                           fsr0h	equ	0xFEA
 33999                           fsr0l	equ	0xFE9
 34000                           wreg	equ	0xFE8
 34001                           indf1	equ	0xFE7
 34002                           postdec1	equ	0xFE5
 34003                           plusw1	equ	0xFE3
 34004                           fsr1h	equ	0xFE2
 34005                           fsr1l	equ	0xFE1
 34006                           indf2	equ	0xFDF
 34007                           postinc2	equ	0xFDE
 34008                           postdec2	equ	0xFDD
 34009                           plusw2	equ	0xFDB
 34010                           fsr2h	equ	0xFDA
 34011                           fsr2l	equ	0xFD9
 34012                           status	equ	0xFD8
 34013                           
 34014 ;; *************** function _fat_write_to_buffer *****************
 34015 ;; Defined at:
 34016 ;;		line 1503 in file "fat16.c"
 34017 ;; Parameters:    Size  Location     Type
 34018 ;;  start           2   36[COMRAM] unsigned int 
 34019 ;;  length          2   38[COMRAM] unsigned int 
 34020 ;;  data            2   40[COMRAM] PTR unsigned char 
 34021 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34022 ;; Auto vars:     Size  Location     Type
 34023 ;;		None
 34024 ;; Return value:  Size  Location     Type
 34025 ;;                  1    wreg      void 
 34026 ;; Registers used:
 34027 ;;		wreg, status,2, status,0, cstack
 34028 ;; Tracked objects:
 34029 ;;		On entry : 0/0
 34030 ;;		On exit  : 0/0
 34031 ;;		Unchanged: 0/0
 34032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34033 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34036 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34037 ;;Total ram usage:        6 bytes
 34038 ;; Hardware stack levels used:    1
 34039 ;; Hardware stack levels required when called:    5
 34040 ;; This function calls:
 34041 ;;		_flash_write_to_buffer
 34042 ;; This function is called by:
 34043 ;;		__parse_write_buffer
 34044 ;; This function uses a non-reentrant model
 34045 ;;
 34046                           
 34047                           	psect	text167
 34048  009A62                     __ptext167:
 34049                           	opt stack 0
 34050  009A62                     _fat_write_to_buffer:
 34051                           	opt stack 22
 34052                           
 34053                           ;fat16.c: 1505: flash_write_to_buffer(start, length, data);
 34054                           
 34055                           ;incstack = 0
 34056  009A62  C025  F01F         	movff	fat_write_to_buffer@start,flash_write_to_buffer@start
 34057  009A66  C026  F020         	movff	fat_write_to_buffer@start+1,flash_write_to_buffer@start+1
 34058  009A6A  C027  F021         	movff	fat_write_to_buffer@length,flash_write_to_buffer@length
 34059  009A6E  C028  F022         	movff	fat_write_to_buffer@length+1,flash_write_to_buffer@length+1
 34060  009A72  C029  F023         	movff	fat_write_to_buffer@data,flash_write_to_buffer@data
 34061  009A76  C02A  F024         	movff	fat_write_to_buffer@data+1,flash_write_to_buffer@data+1
 34062  009A7A  EC78  F04B         	call	_flash_write_to_buffer	;wreg free
 34063  009A7E  0012               	return		;funcret
 34064  009A80                     __end_of_fat_write_to_buffer:
 34065                           	opt stack 0
 34066                           tosu	equ	0xFFF
 34067                           tosh	equ	0xFFE
 34068                           tosl	equ	0xFFD
 34069                           pclath	equ	0xFFA
 34070                           tblptru	equ	0xFF8
 34071                           tblptrh	equ	0xFF7
 34072                           tblptrl	equ	0xFF6
 34073                           tablat	equ	0xFF5
 34074                           prodh	equ	0xFF4
 34075                           prodl	equ	0xFF3
 34076                           intcon	equ	0xFF2
 34077                           intcon2	equ	0xFF1
 34078                           intcon3	equ	0xFF0
 34079                           indf0	equ	0xFEF
 34080                           postinc0	equ	0xFEE
 34081                           fsr0h	equ	0xFEA
 34082                           fsr0l	equ	0xFE9
 34083                           wreg	equ	0xFE8
 34084                           indf1	equ	0xFE7
 34085                           postdec1	equ	0xFE5
 34086                           plusw1	equ	0xFE3
 34087                           fsr1h	equ	0xFE2
 34088                           fsr1l	equ	0xFE1
 34089                           indf2	equ	0xFDF
 34090                           postinc2	equ	0xFDE
 34091                           postdec2	equ	0xFDD
 34092                           plusw2	equ	0xFDB
 34093                           fsr2h	equ	0xFDA
 34094                           fsr2l	equ	0xFD9
 34095                           status	equ	0xFD8
 34096                           
 34097 ;; *************** function _flash_write_to_buffer *****************
 34098 ;; Defined at:
 34099 ;;		line 556 in file "flash.c"
 34100 ;; Parameters:    Size  Location     Type
 34101 ;;  start           2   30[COMRAM] unsigned int 
 34102 ;;  length          2   32[COMRAM] unsigned int 
 34103 ;;  data            2   34[COMRAM] PTR unsigned char 
 34104 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34105 ;; Auto vars:     Size  Location     Type
 34106 ;;		None
 34107 ;; Return value:  Size  Location     Type
 34108 ;;                  1    wreg      void 
 34109 ;; Registers used:
 34110 ;;		wreg, status,2, status,0, cstack
 34111 ;; Tracked objects:
 34112 ;;		On entry : 0/0
 34113 ;;		On exit  : 0/0
 34114 ;;		Unchanged: 0/0
 34115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34116 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34119 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34120 ;;Total ram usage:        6 bytes
 34121 ;; Hardware stack levels used:    1
 34122 ;; Hardware stack levels required when called:    4
 34123 ;; This function calls:
 34124 ;;		__flash_write_to_buffer
 34125 ;;		_spi_set_configuration
 34126 ;; This function is called by:
 34127 ;;		_fat_write_to_buffer
 34128 ;; This function uses a non-reentrant model
 34129 ;;
 34130                           
 34131                           	psect	text168
 34132  0096F0                     __ptext168:
 34133                           	opt stack 0
 34134  0096F0                     _flash_write_to_buffer:
 34135                           	opt stack 22
 34136                           
 34137                           ;flash.c: 559: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 34138                           
 34139                           ;incstack = 0
 34140  0096F0  0E00               	movlw	0
 34141  0096F2  ECAB  F02A         	call	_spi_set_configuration
 34142                           
 34143                           ;flash.c: 561: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_2);
 34144  0096F6  C01F  F014         	movff	flash_write_to_buffer@start,__flash_write_to_buffer@start
 34145  0096FA  C020  F015         	movff	flash_write_to_buffer@start+1,__flash_write_to_buffer@start+1
 34146  0096FE  C023  F016         	movff	flash_write_to_buffer@data,__flash_write_to_buffer@data
 34147  009702  C024  F017         	movff	flash_write_to_buffer@data+1,__flash_write_to_buffer@data+1
 34148  009706  C021  F018         	movff	flash_write_to_buffer@length,__flash_write_to_buffer@data_length
 34149  00970A  C022  F019         	movff	flash_write_to_buffer@length+1,__flash_write_to_buffer@data_length+1
 34150  00970E  0E01               	movlw	1
 34151  009710  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 34152  009712  EC19  F048         	call	__flash_write_to_buffer	;wreg free
 34153                           
 34154                           ;flash.c: 564: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 34155  009716  0E01               	movlw	1
 34156  009718  ECAB  F02A         	call	_spi_set_configuration
 34157  00971C  0012               	return		;funcret
 34158  00971E                     __end_of_flash_write_to_buffer:
 34159                           	opt stack 0
 34160                           tosu	equ	0xFFF
 34161                           tosh	equ	0xFFE
 34162                           tosl	equ	0xFFD
 34163                           pclath	equ	0xFFA
 34164                           tblptru	equ	0xFF8
 34165                           tblptrh	equ	0xFF7
 34166                           tblptrl	equ	0xFF6
 34167                           tablat	equ	0xFF5
 34168                           prodh	equ	0xFF4
 34169                           prodl	equ	0xFF3
 34170                           intcon	equ	0xFF2
 34171                           intcon2	equ	0xFF1
 34172                           intcon3	equ	0xFF0
 34173                           indf0	equ	0xFEF
 34174                           postinc0	equ	0xFEE
 34175                           fsr0h	equ	0xFEA
 34176                           fsr0l	equ	0xFE9
 34177                           wreg	equ	0xFE8
 34178                           indf1	equ	0xFE7
 34179                           postdec1	equ	0xFE5
 34180                           plusw1	equ	0xFE3
 34181                           fsr1h	equ	0xFE2
 34182                           fsr1l	equ	0xFE1
 34183                           indf2	equ	0xFDF
 34184                           postinc2	equ	0xFDE
 34185                           postdec2	equ	0xFDD
 34186                           plusw2	equ	0xFDB
 34187                           fsr2h	equ	0xFDA
 34188                           fsr2l	equ	0xFD9
 34189                           status	equ	0xFD8
 34190                           
 34191 ;; *************** function __parse_sector_to_buffer *****************
 34192 ;; Defined at:
 34193 ;;		line 840 in file "api.c"
 34194 ;; Parameters:    Size  Location     Type
 34195 ;;  data            2   83[COMRAM] PTR unsigned char 
 34196 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34197 ;;  out_buffer      2   85[COMRAM] PTR unsigned char 
 34198 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 34199 ;;  out_idx_ptr     2   87[COMRAM] PTR unsigned char 
 34200 ;;		 -> api_parse@out_idx(1), 
 34201 ;; Auto vars:     Size  Location     Type
 34202 ;;  sector          2   92[COMRAM] unsigned int 
 34203 ;;  return_value    1   91[COMRAM] unsigned char 
 34204 ;;  file_number     1   90[COMRAM] unsigned char 
 34205 ;; Return value:  Size  Location     Type
 34206 ;;                  1    wreg      unsigned char 
 34207 ;; Registers used:
 34208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34209 ;; Tracked objects:
 34210 ;;		On entry : 0/0
 34211 ;;		On exit  : 0/0
 34212 ;;		Unchanged: 0/0
 34213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34214 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34215 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34217 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34218 ;;Total ram usage:       11 bytes
 34219 ;; Hardware stack levels used:    1
 34220 ;; Hardware stack levels required when called:    8
 34221 ;; This function calls:
 34222 ;;		_fat_copy_sector_to_buffer
 34223 ;; This function is called by:
 34224 ;;		__parse_command_long
 34225 ;; This function uses a non-reentrant model
 34226 ;;
 34227                           
 34228                           	psect	text169
 34229  004382                     __ptext169:
 34230                           	opt stack 0
 34231  004382                     __parse_sector_to_buffer:
 34232                           	opt stack 20
 34233                           
 34234                           ;api.c: 843: uint8_t file_number;;api.c: 844: uint16_t sector;;api.c: 845: uint8_t retur
      +                          n_value;;api.c: 847: if((data[0]!=COMMAND_SECTOR_TO_BUFFER) || (data[4]!=0x1B) || (data[
      +                          5]!=0x35))
 34235                           
 34236                           ;incstack = 0
 34237  004382  C054  FFD9         	movff	__parse_sector_to_buffer@data,fsr2l
 34238  004386  C055  FFDA         	movff	__parse_sector_to_buffer@data+1,fsr2h
 34239  00438A  0E57               	movlw	87
 34240  00438C  18DE               	xorwf	postinc2,w,c
 34241  00438E  A4D8               	btfss	status,2,c
 34242  004390  D014               	goto	u11690
 34243  004392  EE20 F004          	lfsr	2,4
 34244  004396  5054               	movf	__parse_sector_to_buffer@data,w,c
 34245  004398  26D9               	addwf	fsr2l,f,c
 34246  00439A  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 34247  00439C  22DA               	addwfc	fsr2h,f,c
 34248  00439E  0E1B               	movlw	27
 34249  0043A0  18DE               	xorwf	postinc2,w,c
 34250  0043A2  A4D8               	btfss	status,2,c
 34251  0043A4  D00A               	goto	u11690
 34252  0043A6  EE20 F005          	lfsr	2,5
 34253  0043AA  5054               	movf	__parse_sector_to_buffer@data,w,c
 34254  0043AC  26D9               	addwf	fsr2l,f,c
 34255  0043AE  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 34256  0043B0  22DA               	addwfc	fsr2h,f,c
 34257  0043B2  0E35               	movlw	53
 34258  0043B4  18DE               	xorwf	postinc2,w,c
 34259  0043B6  B4D8               	btfsc	status,2,c
 34260  0043B8  D002               	goto	l2910
 34261  0043BA                     u11690:
 34262                           
 34263                           ;api.c: 848: {;api.c: 849: return 6;
 34264  0043BA  0E06               	movlw	6
 34265  0043BC  0012               	return	
 34266  0043BE                     l2910:
 34267                           
 34268                           ;api.c: 850: };api.c: 853: file_number = data[1];
 34269  0043BE  EE20 F001          	lfsr	2,1
 34270  0043C2  5054               	movf	__parse_sector_to_buffer@data,w,c
 34271  0043C4  26D9               	addwf	fsr2l,f,c
 34272  0043C6  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 34273  0043C8  22DA               	addwfc	fsr2h,f,c
 34274  0043CA  50DF               	movf	indf2,w,c
 34275  0043CC  6E5B               	movwf	__parse_sector_to_buffer@file_number,c
 34276                           
 34277                           ;api.c: 856: sector = data[2];
 34278  0043CE  EE20 F002          	lfsr	2,2
 34279  0043D2  5054               	movf	__parse_sector_to_buffer@data,w,c
 34280  0043D4  26D9               	addwf	fsr2l,f,c
 34281  0043D6  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 34282  0043D8  22DA               	addwfc	fsr2h,f,c
 34283  0043DA  50DF               	movf	indf2,w,c
 34284  0043DC  6E5A               	movwf	??__parse_sector_to_buffer& (0+255),c
 34285  0043DE  505A               	movf	??__parse_sector_to_buffer,w,c
 34286  0043E0  6E5D               	movwf	__parse_sector_to_buffer@sector,c
 34287  0043E2  6A5E               	clrf	__parse_sector_to_buffer@sector+1,c
 34288                           
 34289                           ;api.c: 857: sector <<= 8;
 34290  0043E4  505D               	movf	__parse_sector_to_buffer@sector,w,c
 34291  0043E6  6E5E               	movwf	__parse_sector_to_buffer@sector+1,c
 34292  0043E8  6A5D               	clrf	__parse_sector_to_buffer@sector,c
 34293                           
 34294                           ;api.c: 858: sector |= data[3];
 34295  0043EA  EE20 F003          	lfsr	2,3
 34296  0043EE  5054               	movf	__parse_sector_to_buffer@data,w,c
 34297  0043F0  26D9               	addwf	fsr2l,f,c
 34298  0043F2  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 34299  0043F4  22DA               	addwfc	fsr2h,f,c
 34300  0043F6  50DF               	movf	indf2,w,c
 34301  0043F8  6E5A               	movwf	??__parse_sector_to_buffer& (0+255),c
 34302  0043FA  505A               	movf	??__parse_sector_to_buffer,w,c
 34303  0043FC  125D               	iorwf	__parse_sector_to_buffer@sector,f,c
 34304                           
 34305                           ;api.c: 861: return_value = fat_copy_sector_to_buffer(data[1], sector);
 34306  0043FE  C05D  F043         	movff	__parse_sector_to_buffer@sector,fat_copy_sector_to_buffer@sector
 34307  004402  C05E  F044         	movff	__parse_sector_to_buffer@sector+1,fat_copy_sector_to_buffer@sector+1
 34308  004406  EE20 F001          	lfsr	2,1
 34309  00440A  5054               	movf	__parse_sector_to_buffer@data,w,c
 34310  00440C  26D9               	addwf	fsr2l,f,c
 34311  00440E  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 34312  004410  22DA               	addwfc	fsr2h,f,c
 34313  004412  50DF               	movf	indf2,w,c
 34314  004414  EC76  F039         	call	_fat_copy_sector_to_buffer
 34315  004418  6E5C               	movwf	__parse_sector_to_buffer@return_value,c
 34316                           
 34317                           ;api.c: 864: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 34318  00441A  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 34319  00441E  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 34320  004422  50DF               	movf	indf2,w,c
 34321  004424  B4D8               	btfsc	status,2,c
 34322  004426  D061               	goto	l2914
 34323  004428  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 34324  00442C  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 34325  004430  0E3C               	movlw	60
 34326  004432  60DF               	cpfslt	indf2,c
 34327  004434  D05A               	goto	l2914
 34328                           
 34329                           ;api.c: 865: {;api.c: 866: out_buffer[(*out_idx_ptr)++] = COMMAND_SECTOR_TO_BUFFER;
 34330  004436  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 34331  00443A  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 34332  00443E  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 34333  004442  0E01               	movlw	1
 34334  004444  26DF               	addwf	indf2,f,c
 34335  004446  505A               	movf	??__parse_sector_to_buffer,w,c
 34336  004448  0D01               	mullw	1
 34337  00444A  50F3               	movf	prodl,w,c
 34338  00444C  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 34339  00444E  6ED9               	movwf	fsr2l,c
 34340  004450  50F4               	movf	prodh,w,c
 34341  004452  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 34342  004454  6EDA               	movwf	fsr2h,c
 34343  004456  0E57               	movlw	87
 34344  004458  6EDF               	movwf	indf2,c
 34345                           
 34346                           ;api.c: 867: out_buffer[(*out_idx_ptr)++] = file_number;
 34347  00445A  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 34348  00445E  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 34349  004462  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 34350  004466  0E01               	movlw	1
 34351  004468  26DF               	addwf	indf2,f,c
 34352  00446A  505A               	movf	??__parse_sector_to_buffer,w,c
 34353  00446C  0D01               	mullw	1
 34354  00446E  50F3               	movf	prodl,w,c
 34355  004470  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 34356  004472  6ED9               	movwf	fsr2l,c
 34357  004474  50F4               	movf	prodh,w,c
 34358  004476  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 34359  004478  6EDA               	movwf	fsr2h,c
 34360  00447A  C05B  FFDF         	movff	__parse_sector_to_buffer@file_number,indf2
 34361                           
 34362                           ;api.c: 868: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((sector)>>8)&0xFF));
 34363  00447E  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 34364  004482  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 34365  004486  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 34366  00448A  0E01               	movlw	1
 34367  00448C  26DF               	addwf	indf2,f,c
 34368  00448E  505A               	movf	??__parse_sector_to_buffer,w,c
 34369  004490  0D01               	mullw	1
 34370  004492  50F3               	movf	prodl,w,c
 34371  004494  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 34372  004496  6ED9               	movwf	fsr2l,c
 34373  004498  50F4               	movf	prodh,w,c
 34374  00449A  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 34375  00449C  6EDA               	movwf	fsr2h,c
 34376  00449E  505E               	movf	__parse_sector_to_buffer@sector+1,w,c
 34377  0044A0  6EDF               	movwf	indf2,c
 34378                           
 34379                           ;api.c: 869: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((sector)&0xFF));
 34380  0044A2  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 34381  0044A6  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 34382  0044AA  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 34383  0044AE  0E01               	movlw	1
 34384  0044B0  26DF               	addwf	indf2,f,c
 34385  0044B2  505A               	movf	??__parse_sector_to_buffer,w,c
 34386  0044B4  0D01               	mullw	1
 34387  0044B6  50F3               	movf	prodl,w,c
 34388  0044B8  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 34389  0044BA  6ED9               	movwf	fsr2l,c
 34390  0044BC  50F4               	movf	prodh,w,c
 34391  0044BE  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 34392  0044C0  6EDA               	movwf	fsr2h,c
 34393  0044C2  C05D  FFDF         	movff	__parse_sector_to_buffer@sector,indf2
 34394                           
 34395                           ;api.c: 870: out_buffer[(*out_idx_ptr)++] = return_value;
 34396  0044C6  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 34397  0044CA  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 34398  0044CE  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 34399  0044D2  0E01               	movlw	1
 34400  0044D4  26DF               	addwf	indf2,f,c
 34401  0044D6  505A               	movf	??__parse_sector_to_buffer,w,c
 34402  0044D8  0D01               	mullw	1
 34403  0044DA  50F3               	movf	prodl,w,c
 34404  0044DC  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 34405  0044DE  6ED9               	movwf	fsr2l,c
 34406  0044E0  50F4               	movf	prodh,w,c
 34407  0044E2  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 34408  0044E4  6EDA               	movwf	fsr2h,c
 34409  0044E6  C05C  FFDF         	movff	__parse_sector_to_buffer@return_value,indf2
 34410  0044EA                     l2914:
 34411                           
 34412                           ;api.c: 871: };api.c: 873: return 6;
 34413  0044EA  0E06               	movlw	6
 34414  0044EC  0012               	return	
 34415  0044EE                     __end_of__parse_sector_to_buffer:
 34416                           	opt stack 0
 34417                           tosu	equ	0xFFF
 34418                           tosh	equ	0xFFE
 34419                           tosl	equ	0xFFD
 34420                           pclath	equ	0xFFA
 34421                           tblptru	equ	0xFF8
 34422                           tblptrh	equ	0xFF7
 34423                           tblptrl	equ	0xFF6
 34424                           tablat	equ	0xFF5
 34425                           prodh	equ	0xFF4
 34426                           prodl	equ	0xFF3
 34427                           intcon	equ	0xFF2
 34428                           intcon2	equ	0xFF1
 34429                           intcon3	equ	0xFF0
 34430                           indf0	equ	0xFEF
 34431                           postinc0	equ	0xFEE
 34432                           fsr0h	equ	0xFEA
 34433                           fsr0l	equ	0xFE9
 34434                           wreg	equ	0xFE8
 34435                           indf1	equ	0xFE7
 34436                           postdec1	equ	0xFE5
 34437                           plusw1	equ	0xFE3
 34438                           fsr1h	equ	0xFE2
 34439                           fsr1l	equ	0xFE1
 34440                           indf2	equ	0xFDF
 34441                           postinc2	equ	0xFDE
 34442                           postdec2	equ	0xFDD
 34443                           plusw2	equ	0xFDB
 34444                           fsr2h	equ	0xFDA
 34445                           fsr2l	equ	0xFD9
 34446                           status	equ	0xFD8
 34447                           
 34448 ;; *************** function __parse_format_drive *****************
 34449 ;; Defined at:
 34450 ;;		line 817 in file "api.c"
 34451 ;; Parameters:    Size  Location     Type
 34452 ;;  data            2   38[COMRAM] PTR unsigned char 
 34453 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34454 ;;  out_buffer      2   40[COMRAM] PTR unsigned char 
 34455 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 34456 ;;  out_idx_ptr     2   42[COMRAM] PTR unsigned char 
 34457 ;;		 -> api_parse@out_idx(1), 
 34458 ;; Auto vars:     Size  Location     Type
 34459 ;;  return_value    1   45[COMRAM] unsigned char 
 34460 ;; Return value:  Size  Location     Type
 34461 ;;                  1    wreg      unsigned char 
 34462 ;; Registers used:
 34463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34464 ;; Tracked objects:
 34465 ;;		On entry : 0/0
 34466 ;;		On exit  : 0/0
 34467 ;;		Unchanged: 0/0
 34468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34469 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34472 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34473 ;;Total ram usage:        8 bytes
 34474 ;; Hardware stack levels used:    1
 34475 ;; Hardware stack levels required when called:    6
 34476 ;; This function calls:
 34477 ;;		_fat_format
 34478 ;; This function is called by:
 34479 ;;		__parse_command_long
 34480 ;; This function uses a non-reentrant model
 34481 ;;
 34482                           
 34483                           	psect	text170
 34484  007660                     __ptext170:
 34485                           	opt stack 0
 34486  007660                     __parse_format_drive:
 34487                           	opt stack 22
 34488                           
 34489                           ;api.c: 821: uint8_t return_value;;api.c: 823: if((data[0]!=COMMAND_FORMAT_DRIVE) || (da
      +                          ta[1]!=0xDA) || (data[2]!=0x22))
 34490                           
 34491                           ;incstack = 0
 34492  007660  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 34493  007664  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 34494  007668  0E56               	movlw	86
 34495  00766A  18DE               	xorwf	postinc2,w,c
 34496  00766C  A4D8               	btfss	status,2,c
 34497  00766E  D014               	goto	u11640
 34498  007670  EE20 F001          	lfsr	2,1
 34499  007674  5027               	movf	__parse_format_drive@data,w,c
 34500  007676  26D9               	addwf	fsr2l,f,c
 34501  007678  5028               	movf	__parse_format_drive@data+1,w,c
 34502  00767A  22DA               	addwfc	fsr2h,f,c
 34503  00767C  0EDA               	movlw	218
 34504  00767E  18DE               	xorwf	postinc2,w,c
 34505  007680  A4D8               	btfss	status,2,c
 34506  007682  D00A               	goto	u11640
 34507  007684  EE20 F002          	lfsr	2,2
 34508  007688  5027               	movf	__parse_format_drive@data,w,c
 34509  00768A  26D9               	addwf	fsr2l,f,c
 34510  00768C  5028               	movf	__parse_format_drive@data+1,w,c
 34511  00768E  22DA               	addwfc	fsr2h,f,c
 34512  007690  0E22               	movlw	34
 34513  007692  18DE               	xorwf	postinc2,w,c
 34514  007694  B4D8               	btfsc	status,2,c
 34515  007696  D002               	goto	l2903
 34516  007698                     u11640:
 34517                           
 34518                           ;api.c: 824: {;api.c: 825: return 3;
 34519  007698  0E03               	movlw	3
 34520  00769A  0012               	return	
 34521  00769C                     l2903:
 34522                           
 34523                           ;api.c: 826: };api.c: 828: return_value = fat_format();
 34524  00769C  ECC0  F016         	call	_fat_format	;wreg free
 34525  0076A0  6E2E               	movwf	__parse_format_drive@return_value,c
 34526                           
 34527                           ;api.c: 831: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 34528  0076A2  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 34529  0076A6  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 34530  0076AA  50DF               	movf	indf2,w,c
 34531  0076AC  B4D8               	btfsc	status,2,c
 34532  0076AE  D02B               	goto	l2907
 34533  0076B0  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 34534  0076B4  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 34535  0076B8  0E3F               	movlw	63
 34536  0076BA  60DF               	cpfslt	indf2,c
 34537  0076BC  D024               	goto	l2907
 34538                           
 34539                           ;api.c: 832: {;api.c: 833: out_buffer[(*out_idx_ptr)++] = COMMAND_FORMAT_DRIVE;
 34540  0076BE  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 34541  0076C2  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 34542  0076C6  CFDF F02D          	movff	indf2,??__parse_format_drive
 34543  0076CA  0E01               	movlw	1
 34544  0076CC  26DF               	addwf	indf2,f,c
 34545  0076CE  502D               	movf	??__parse_format_drive,w,c
 34546  0076D0  0D01               	mullw	1
 34547  0076D2  50F3               	movf	prodl,w,c
 34548  0076D4  2429               	addwf	__parse_format_drive@out_buffer,w,c
 34549  0076D6  6ED9               	movwf	fsr2l,c
 34550  0076D8  50F4               	movf	prodh,w,c
 34551  0076DA  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 34552  0076DC  6EDA               	movwf	fsr2h,c
 34553  0076DE  0E56               	movlw	86
 34554  0076E0  6EDF               	movwf	indf2,c
 34555                           
 34556                           ;api.c: 834: out_buffer[(*out_idx_ptr)++] = return_value;
 34557  0076E2  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 34558  0076E6  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 34559  0076EA  CFDF F02D          	movff	indf2,??__parse_format_drive
 34560  0076EE  0E01               	movlw	1
 34561  0076F0  26DF               	addwf	indf2,f,c
 34562  0076F2  502D               	movf	??__parse_format_drive,w,c
 34563  0076F4  0D01               	mullw	1
 34564  0076F6  50F3               	movf	prodl,w,c
 34565  0076F8  2429               	addwf	__parse_format_drive@out_buffer,w,c
 34566  0076FA  6ED9               	movwf	fsr2l,c
 34567  0076FC  50F4               	movf	prodh,w,c
 34568  0076FE  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 34569  007700  6EDA               	movwf	fsr2h,c
 34570  007702  C02E  FFDF         	movff	__parse_format_drive@return_value,indf2
 34571  007706                     l2907:
 34572                           
 34573                           ;api.c: 835: };api.c: 837: return 3;
 34574  007706  0E03               	movlw	3
 34575  007708  0012               	return	
 34576  00770A                     __end_of__parse_format_drive:
 34577                           	opt stack 0
 34578                           tosu	equ	0xFFF
 34579                           tosh	equ	0xFFE
 34580                           tosl	equ	0xFFD
 34581                           pclath	equ	0xFFA
 34582                           tblptru	equ	0xFF8
 34583                           tblptrh	equ	0xFF7
 34584                           tblptrl	equ	0xFF6
 34585                           tablat	equ	0xFF5
 34586                           prodh	equ	0xFF4
 34587                           prodl	equ	0xFF3
 34588                           intcon	equ	0xFF2
 34589                           intcon2	equ	0xFF1
 34590                           intcon3	equ	0xFF0
 34591                           indf0	equ	0xFEF
 34592                           postinc0	equ	0xFEE
 34593                           fsr0h	equ	0xFEA
 34594                           fsr0l	equ	0xFE9
 34595                           wreg	equ	0xFE8
 34596                           indf1	equ	0xFE7
 34597                           postdec1	equ	0xFE5
 34598                           plusw1	equ	0xFE3
 34599                           fsr1h	equ	0xFE2
 34600                           fsr1l	equ	0xFE1
 34601                           indf2	equ	0xFDF
 34602                           postinc2	equ	0xFDE
 34603                           postdec2	equ	0xFDD
 34604                           plusw2	equ	0xFDB
 34605                           fsr2h	equ	0xFDA
 34606                           fsr2l	equ	0xFD9
 34607                           status	equ	0xFD8
 34608                           
 34609 ;; *************** function _fat_format *****************
 34610 ;; Defined at:
 34611 ;;		line 1320 in file "fat16.c"
 34612 ;; Parameters:    Size  Location     Type
 34613 ;;		None
 34614 ;; Auto vars:     Size  Location     Type
 34615 ;;  cntr            2   36[COMRAM] unsigned int 
 34616 ;; Return value:  Size  Location     Type
 34617 ;;                  1    wreg      unsigned char 
 34618 ;; Registers used:
 34619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34620 ;; Tracked objects:
 34621 ;;		On entry : 0/0
 34622 ;;		On exit  : 0/0
 34623 ;;		Unchanged: 0/0
 34624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34629 ;;Total ram usage:        2 bytes
 34630 ;; Hardware stack levels used:    1
 34631 ;; Hardware stack levels required when called:    5
 34632 ;; This function calls:
 34633 ;;		__get_data
 34634 ;;		__get_fat
 34635 ;;		__get_fbr
 34636 ;;		__get_mbr
 34637 ;;		__get_root
 34638 ;;		_flash_sector_write
 34639 ;; This function is called by:
 34640 ;;		_fat_init
 34641 ;;		__parse_format_drive
 34642 ;; This function uses a non-reentrant model
 34643 ;;
 34644                           
 34645                           	psect	text171
 34646  002D80                     __ptext171:
 34647                           	opt stack 0
 34648  002D80                     _fat_format:
 34649                           	opt stack 23
 34650                           
 34651                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
 34652                           
 34653                           ;incstack = 0
 34654  002D80  0E00               	movlw	0
 34655  002D82  6E26               	movwf	fat_format@cntr+1,c
 34656  002D84  0E00               	movlw	0
 34657  002D86  6E25               	movwf	fat_format@cntr,c
 34658  002D88                     l13884:
 34659  002D88  0E02               	movlw	2
 34660  002D8A  5C26               	subwf	fat_format@cntr+1,w,c
 34661  002D8C  B0D8               	btfsc	status,0,c
 34662  002D8E  D010               	goto	u10850
 34663                           
 34664                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
 34665  002D90  0EC0               	movlw	low _buffer
 34666  002D92  2425               	addwf	fat_format@cntr,w,c
 34667  002D94  6ED9               	movwf	fsr2l,c
 34668  002D96  0E03               	movlw	high _buffer
 34669  002D98  2026               	addwfc	fat_format@cntr+1,w,c
 34670  002D9A  6EDA               	movwf	fsr2h,c
 34671  002D9C  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 34672  002DA0  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 34673  002DA4  ECFF  F035         	call	__get_mbr	;wreg free
 34674  002DA8  6EDF               	movwf	indf2,c
 34675  002DAA  4A25               	infsnz	fat_format@cntr,f,c
 34676  002DAC  2A26               	incf	fat_format@cntr+1,f,c
 34677  002DAE  D7EC               	goto	l13884
 34678  002DB0                     u10850:
 34679                           
 34680                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
 34681  002DB0  0E00               	movlw	0
 34682  002DB2  6E21               	movwf	flash_sector_write@page+1,c
 34683  002DB4  0E00               	movlw	0
 34684  002DB6  6E20               	movwf	flash_sector_write@page,c
 34685  002DB8  0EC0               	movlw	low _buffer
 34686  002DBA  6E22               	movwf	flash_sector_write@data,c
 34687  002DBC  0E03               	movlw	high _buffer
 34688  002DBE  6E23               	movwf	flash_sector_write@data+1,c
 34689  002DC0  ECCB  F046         	call	_flash_sector_write	;wreg free
 34690                           
 34691                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
 34692  002DC4  0E00               	movlw	0
 34693  002DC6  6E26               	movwf	fat_format@cntr+1,c
 34694  002DC8  0E00               	movlw	0
 34695  002DCA  6E25               	movwf	fat_format@cntr,c
 34696  002DCC                     l13898:
 34697  002DCC  0E02               	movlw	2
 34698  002DCE  5C26               	subwf	fat_format@cntr+1,w,c
 34699  002DD0  B0D8               	btfsc	status,0,c
 34700  002DD2  D010               	goto	u10870
 34701                           
 34702                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
 34703  002DD4  0EC0               	movlw	low _buffer
 34704  002DD6  2425               	addwf	fat_format@cntr,w,c
 34705  002DD8  6ED9               	movwf	fsr2l,c
 34706  002DDA  0E03               	movlw	high _buffer
 34707  002DDC  2026               	addwfc	fat_format@cntr+1,w,c
 34708  002DDE  6EDA               	movwf	fsr2h,c
 34709  002DE0  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 34710  002DE4  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 34711  002DE8  EC22  F010         	call	__get_fbr	;wreg free
 34712  002DEC  6EDF               	movwf	indf2,c
 34713  002DEE  4A25               	infsnz	fat_format@cntr,f,c
 34714  002DF0  2A26               	incf	fat_format@cntr+1,f,c
 34715  002DF2  D7EC               	goto	l13898
 34716  002DF4                     u10870:
 34717                           
 34718                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
 34719  002DF4  0E00               	movlw	0
 34720  002DF6  6E21               	movwf	flash_sector_write@page+1,c
 34721  002DF8  0E01               	movlw	1
 34722  002DFA  6E20               	movwf	flash_sector_write@page,c
 34723  002DFC  0EC0               	movlw	low _buffer
 34724  002DFE  6E22               	movwf	flash_sector_write@data,c
 34725  002E00  0E03               	movlw	high _buffer
 34726  002E02  6E23               	movwf	flash_sector_write@data+1,c
 34727  002E04  ECCB  F046         	call	_flash_sector_write	;wreg free
 34728                           
 34729                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
 34730  002E08  0E00               	movlw	0
 34731  002E0A  6E26               	movwf	fat_format@cntr+1,c
 34732  002E0C  0E00               	movlw	0
 34733  002E0E  6E25               	movwf	fat_format@cntr,c
 34734  002E10                     l13912:
 34735  002E10  0E02               	movlw	2
 34736  002E12  5C26               	subwf	fat_format@cntr+1,w,c
 34737  002E14  B0D8               	btfsc	status,0,c
 34738  002E16  D010               	goto	u10890
 34739                           
 34740                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
 34741  002E18  0EC0               	movlw	low _buffer
 34742  002E1A  2425               	addwf	fat_format@cntr,w,c
 34743  002E1C  6ED9               	movwf	fsr2l,c
 34744  002E1E  0E03               	movlw	high _buffer
 34745  002E20  2026               	addwfc	fat_format@cntr+1,w,c
 34746  002E22  6EDA               	movwf	fsr2h,c
 34747  002E24  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 34748  002E28  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 34749  002E2C  ECA0  F046         	call	__get_fat	;wreg free
 34750  002E30  6EDF               	movwf	indf2,c
 34751  002E32  4A25               	infsnz	fat_format@cntr,f,c
 34752  002E34  2A26               	incf	fat_format@cntr+1,f,c
 34753  002E36  D7EC               	goto	l13912
 34754  002E38                     u10890:
 34755                           
 34756                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
 34757  002E38  0E00               	movlw	0
 34758  002E3A  6E21               	movwf	flash_sector_write@page+1,c
 34759  002E3C  0E02               	movlw	2
 34760  002E3E  6E20               	movwf	flash_sector_write@page,c
 34761  002E40  0EC0               	movlw	low _buffer
 34762  002E42  6E22               	movwf	flash_sector_write@data,c
 34763  002E44  0E03               	movlw	high _buffer
 34764  002E46  6E23               	movwf	flash_sector_write@data+1,c
 34765  002E48  ECCB  F046         	call	_flash_sector_write	;wreg free
 34766                           
 34767                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
 34768  002E4C  0E00               	movlw	0
 34769  002E4E  6E26               	movwf	fat_format@cntr+1,c
 34770  002E50  0E00               	movlw	0
 34771  002E52  6E25               	movwf	fat_format@cntr,c
 34772  002E54                     l13926:
 34773  002E54  0E02               	movlw	2
 34774  002E56  5C26               	subwf	fat_format@cntr+1,w,c
 34775  002E58  B0D8               	btfsc	status,0,c
 34776  002E5A  D00B               	goto	u10910
 34777                           
 34778                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
 34779  002E5C  0EC0               	movlw	low _buffer
 34780  002E5E  2425               	addwf	fat_format@cntr,w,c
 34781  002E60  6ED9               	movwf	fsr2l,c
 34782  002E62  0E03               	movlw	high _buffer
 34783  002E64  2026               	addwfc	fat_format@cntr+1,w,c
 34784  002E66  6EDA               	movwf	fsr2h,c
 34785  002E68  0E00               	movlw	0
 34786  002E6A  6EDF               	movwf	indf2,c
 34787  002E6C  4A25               	infsnz	fat_format@cntr,f,c
 34788  002E6E  2A26               	incf	fat_format@cntr+1,f,c
 34789  002E70  D7F1               	goto	l13926
 34790  002E72                     u10910:
 34791                           
 34792                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
 34793  002E72  0E00               	movlw	0
 34794  002E74  6E26               	movwf	fat_format@cntr+1,c
 34795  002E76  0E03               	movlw	3
 34796  002E78  6E25               	movwf	fat_format@cntr,c
 34797  002E7A                     l13938:
 34798  002E7A  5026               	movf	fat_format@cntr+1,w,c
 34799  002E7C  E111               	bnz	l13948
 34800  002E7E  0E22               	movlw	34
 34801  002E80  5C25               	subwf	fat_format@cntr,w,c
 34802  002E82  B0D8               	btfsc	status,0,c
 34803  002E84  D00D               	goto	u10930
 34804                           
 34805                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
 34806  002E86  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 34807  002E8A  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 34808  002E8E  0EC0               	movlw	low _buffer
 34809  002E90  6E22               	movwf	flash_sector_write@data,c
 34810  002E92  0E03               	movlw	high _buffer
 34811  002E94  6E23               	movwf	flash_sector_write@data+1,c
 34812  002E96  ECCB  F046         	call	_flash_sector_write	;wreg free
 34813  002E9A  4A25               	infsnz	fat_format@cntr,f,c
 34814  002E9C  2A26               	incf	fat_format@cntr+1,f,c
 34815  002E9E  D7ED               	goto	l13938
 34816  002EA0                     u10930:
 34817  002EA0                     l13948:
 34818                           
 34819                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
 34820  002EA0  0E00               	movlw	0
 34821  002EA2  6E26               	movwf	fat_format@cntr+1,c
 34822  002EA4  0E00               	movlw	0
 34823  002EA6  6E25               	movwf	fat_format@cntr,c
 34824  002EA8                     l13950:
 34825  002EA8  0E02               	movlw	2
 34826  002EAA  5C26               	subwf	fat_format@cntr+1,w,c
 34827  002EAC  B0D8               	btfsc	status,0,c
 34828  002EAE  D010               	goto	u10950
 34829                           
 34830                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
 34831  002EB0  0EC0               	movlw	low _buffer
 34832  002EB2  2425               	addwf	fat_format@cntr,w,c
 34833  002EB4  6ED9               	movwf	fsr2l,c
 34834  002EB6  0E03               	movlw	high _buffer
 34835  002EB8  2026               	addwfc	fat_format@cntr+1,w,c
 34836  002EBA  6EDA               	movwf	fsr2h,c
 34837  002EBC  C025  F001         	movff	fat_format@cntr,__get_root@idx
 34838  002EC0  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 34839  002EC4  EC49  F01D         	call	__get_root	;wreg free
 34840  002EC8  6EDF               	movwf	indf2,c
 34841  002ECA  4A25               	infsnz	fat_format@cntr,f,c
 34842  002ECC  2A26               	incf	fat_format@cntr+1,f,c
 34843  002ECE  D7EC               	goto	l13950
 34844  002ED0                     u10950:
 34845                           
 34846                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
 34847  002ED0  0E00               	movlw	0
 34848  002ED2  6E21               	movwf	flash_sector_write@page+1,c
 34849  002ED4  0E22               	movlw	34
 34850  002ED6  6E20               	movwf	flash_sector_write@page,c
 34851  002ED8  0EC0               	movlw	low _buffer
 34852  002EDA  6E22               	movwf	flash_sector_write@data,c
 34853  002EDC  0E03               	movlw	high _buffer
 34854  002EDE  6E23               	movwf	flash_sector_write@data+1,c
 34855  002EE0  ECCB  F046         	call	_flash_sector_write	;wreg free
 34856                           
 34857                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
 34858  002EE4  0E00               	movlw	0
 34859  002EE6  6E26               	movwf	fat_format@cntr+1,c
 34860  002EE8  0E00               	movlw	0
 34861  002EEA  6E25               	movwf	fat_format@cntr,c
 34862  002EEC                     l13964:
 34863  002EEC  0E02               	movlw	2
 34864  002EEE  5C26               	subwf	fat_format@cntr+1,w,c
 34865  002EF0  B0D8               	btfsc	status,0,c
 34866  002EF2  D00B               	goto	u10970
 34867                           
 34868                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
 34869  002EF4  0EC0               	movlw	low _buffer
 34870  002EF6  2425               	addwf	fat_format@cntr,w,c
 34871  002EF8  6ED9               	movwf	fsr2l,c
 34872  002EFA  0E03               	movlw	high _buffer
 34873  002EFC  2026               	addwfc	fat_format@cntr+1,w,c
 34874  002EFE  6EDA               	movwf	fsr2h,c
 34875  002F00  0E00               	movlw	0
 34876  002F02  6EDF               	movwf	indf2,c
 34877  002F04  4A25               	infsnz	fat_format@cntr,f,c
 34878  002F06  2A26               	incf	fat_format@cntr+1,f,c
 34879  002F08  D7F1               	goto	l13964
 34880  002F0A                     u10970:
 34881                           
 34882                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
 34883  002F0A  0E00               	movlw	0
 34884  002F0C  6E26               	movwf	fat_format@cntr+1,c
 34885  002F0E  0E23               	movlw	35
 34886  002F10  6E25               	movwf	fat_format@cntr,c
 34887  002F12                     l13976:
 34888  002F12  5026               	movf	fat_format@cntr+1,w,c
 34889  002F14  E111               	bnz	l13986
 34890  002F16  0E26               	movlw	38
 34891  002F18  5C25               	subwf	fat_format@cntr,w,c
 34892  002F1A  B0D8               	btfsc	status,0,c
 34893  002F1C  D00D               	goto	u10990
 34894                           
 34895                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
 34896  002F1E  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 34897  002F22  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 34898  002F26  0EC0               	movlw	low _buffer
 34899  002F28  6E22               	movwf	flash_sector_write@data,c
 34900  002F2A  0E03               	movlw	high _buffer
 34901  002F2C  6E23               	movwf	flash_sector_write@data+1,c
 34902  002F2E  ECCB  F046         	call	_flash_sector_write	;wreg free
 34903  002F32  4A25               	infsnz	fat_format@cntr,f,c
 34904  002F34  2A26               	incf	fat_format@cntr+1,f,c
 34905  002F36  D7ED               	goto	l13976
 34906  002F38                     u10990:
 34907  002F38                     l13986:
 34908                           
 34909                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
 34910  002F38  0E00               	movlw	0
 34911  002F3A  6E26               	movwf	fat_format@cntr+1,c
 34912  002F3C  0E00               	movlw	0
 34913  002F3E  6E25               	movwf	fat_format@cntr,c
 34914  002F40                     l13988:
 34915  002F40  0E02               	movlw	2
 34916  002F42  5C26               	subwf	fat_format@cntr+1,w,c
 34917  002F44  B0D8               	btfsc	status,0,c
 34918  002F46  D010               	goto	u11010
 34919                           
 34920                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
 34921  002F48  0EC0               	movlw	low _buffer
 34922  002F4A  2425               	addwf	fat_format@cntr,w,c
 34923  002F4C  6ED9               	movwf	fsr2l,c
 34924  002F4E  0E03               	movlw	high _buffer
 34925  002F50  2026               	addwfc	fat_format@cntr+1,w,c
 34926  002F52  6EDA               	movwf	fsr2h,c
 34927  002F54  C025  F001         	movff	fat_format@cntr,__get_data@idx
 34928  002F58  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 34929  002F5C  EC26  F04C         	call	__get_data	;wreg free
 34930  002F60  6EDF               	movwf	indf2,c
 34931  002F62  4A25               	infsnz	fat_format@cntr,f,c
 34932  002F64  2A26               	incf	fat_format@cntr+1,f,c
 34933  002F66  D7EC               	goto	l13988
 34934  002F68                     u11010:
 34935                           
 34936                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
 34937  002F68  0E00               	movlw	0
 34938  002F6A  6E21               	movwf	flash_sector_write@page+1,c
 34939  002F6C  0E26               	movlw	38
 34940  002F6E  6E20               	movwf	flash_sector_write@page,c
 34941  002F70  0EC0               	movlw	low _buffer
 34942  002F72  6E22               	movwf	flash_sector_write@data,c
 34943  002F74  0E03               	movlw	high _buffer
 34944  002F76  6E23               	movwf	flash_sector_write@data+1,c
 34945  002F78  ECCB  F046         	call	_flash_sector_write	;wreg free
 34946                           
 34947                           ;fat16.c: 1379: return 0x00;
 34948  002F7C  0E00               	movlw	0
 34949  002F7E  0012               	return	
 34950  002F80                     __end_of_fat_format:
 34951                           	opt stack 0
 34952                           tosu	equ	0xFFF
 34953                           tosh	equ	0xFFE
 34954                           tosl	equ	0xFFD
 34955                           pclath	equ	0xFFA
 34956                           tblptru	equ	0xFF8
 34957                           tblptrh	equ	0xFF7
 34958                           tblptrl	equ	0xFF6
 34959                           tablat	equ	0xFF5
 34960                           prodh	equ	0xFF4
 34961                           prodl	equ	0xFF3
 34962                           intcon	equ	0xFF2
 34963                           intcon2	equ	0xFF1
 34964                           intcon3	equ	0xFF0
 34965                           indf0	equ	0xFEF
 34966                           postinc0	equ	0xFEE
 34967                           fsr0h	equ	0xFEA
 34968                           fsr0l	equ	0xFE9
 34969                           wreg	equ	0xFE8
 34970                           indf1	equ	0xFE7
 34971                           postdec1	equ	0xFE5
 34972                           plusw1	equ	0xFE3
 34973                           fsr1h	equ	0xFE2
 34974                           fsr1l	equ	0xFE1
 34975                           indf2	equ	0xFDF
 34976                           postinc2	equ	0xFDE
 34977                           postdec2	equ	0xFDD
 34978                           plusw2	equ	0xFDB
 34979                           fsr2h	equ	0xFDA
 34980                           fsr2l	equ	0xFD9
 34981                           status	equ	0xFD8
 34982                           
 34983 ;; *************** function __get_root *****************
 34984 ;; Defined at:
 34985 ;;		line 1210 in file "fat16.c"
 34986 ;; Parameters:    Size  Location     Type
 34987 ;;  idx             2    0[COMRAM] unsigned int 
 34988 ;; Auto vars:     Size  Location     Type
 34989 ;;		None
 34990 ;; Return value:  Size  Location     Type
 34991 ;;                  1    wreg      unsigned char 
 34992 ;; Registers used:
 34993 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34994 ;; Tracked objects:
 34995 ;;		On entry : 0/0
 34996 ;;		On exit  : 0/0
 34997 ;;		Unchanged: 0/0
 34998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35002 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35003 ;;Total ram usage:        6 bytes
 35004 ;; Hardware stack levels used:    1
 35005 ;; This function calls:
 35006 ;;		Nothing
 35007 ;; This function is called by:
 35008 ;;		_fat_format
 35009 ;; This function uses a non-reentrant model
 35010 ;;
 35011                           
 35012                           	psect	text172
 35013  003A92                     __ptext172:
 35014                           	opt stack 0
 35015  003A92                     __get_root:
 35016                           	opt stack 27
 35017                           
 35018                           ;fat16.c: 1212: if(idx < 0x20)
 35019                           
 35020                           ;incstack = 0
 35021  003A92  5002               	movf	__get_root@idx+1,w,c
 35022  003A94  E11D               	bnz	l13140
 35023  003A96  0E20               	movlw	32
 35024  003A98  5C01               	subwf	__get_root@idx,w,c
 35025  003A9A  B0D8               	btfsc	status,0,c
 35026  003A9C  D019               	goto	l2258
 35027                           
 35028                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
 35029  003A9E  5002               	movf	__get_root@idx+1,w,c
 35030  003AA0  E110               	bnz	l13134
 35031  003AA2  0E0B               	movlw	11
 35032  003AA4  5C01               	subwf	__get_root@idx,w,c
 35033  003AA6  B0D8               	btfsc	status,0,c
 35034  003AA8  D00C               	goto	l2256
 35035                           
 35036                           ;fat16.c: 1215: {;fat16.c: 1216: return "SolarChargr"[idx];
 35037  003AAA  0EDC               	movlw	low STR_9
 35038  003AAC  2401               	addwf	__get_root@idx,w,c
 35039  003AAE  6EF6               	movwf	tblptrl,c
 35040  003AB0  0EBF               	movlw	high STR_9
 35041  003AB2  2002               	addwfc	__get_root@idx+1,w,c
 35042  003AB4  6EF7               	movwf	tblptrh,c
 35043  003AB6                     	if	1	;There are 3 active tblptr bytes
 35044  003AB6  6AF8               	clrf	tblptru,c
 35045  003AB8  0E00               	movlw	low (__mediumconst shr (0+16))
 35046  003ABA  22F8               	addwfc	tblptru,f,c
 35047  003ABC                     	endif
 35048  003ABC  0008               	tblrd		*
 35049  003ABE  50F5               	movf	tablat,w,c
 35050  003AC0  0012               	return	
 35051  003AC2                     l2256:
 35052  003AC2                     l13134:
 35053                           
 35054                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
 35055  003AC2  0E0B               	movlw	11
 35056  003AC4  1801               	xorwf	__get_root@idx,w,c
 35057  003AC6  1002               	iorwf	__get_root@idx+1,w,c
 35058  003AC8  A4D8               	btfss	status,2,c
 35059  003ACA  D002               	goto	l2258
 35060                           
 35061                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
 35062  003ACC  0E08               	movlw	8
 35063  003ACE  0012               	return	
 35064  003AD0                     l2258:
 35065  003AD0                     l13140:
 35066                           
 35067                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
 35068  003AD0  5002               	movf	__get_root@idx+1,w,c
 35069  003AD2  E103               	bnz	u9971
 35070  003AD4  0E40               	movlw	64
 35071  003AD6  5C01               	subwf	__get_root@idx,w,c
 35072  003AD8  B0D8               	btfsc	status,0,c
 35073  003ADA                     u9971:
 35074  003ADA  D0A4               	goto	l2284
 35075                           
 35076                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
 35077  003ADC  0E20               	movlw	32
 35078  003ADE  5E01               	subwf	__get_root@idx,f,c
 35079  003AE0  0E00               	movlw	0
 35080  003AE2  5A02               	subwfb	__get_root@idx+1,f,c
 35081                           
 35082                           ;fat16.c: 1226: if(idx < 0+8)
 35083  003AE4  5002               	movf	__get_root@idx+1,w,c
 35084  003AE6  E110               	bnz	l13148
 35085  003AE8  0E08               	movlw	8
 35086  003AEA  5C01               	subwf	__get_root@idx,w,c
 35087  003AEC  B0D8               	btfsc	status,0,c
 35088  003AEE  D00C               	goto	l2260
 35089                           
 35090                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
 35091  003AF0  0EE8               	movlw	low STR_10
 35092  003AF2  2401               	addwf	__get_root@idx,w,c
 35093  003AF4  6EF6               	movwf	tblptrl,c
 35094  003AF6  0EBF               	movlw	high STR_10
 35095  003AF8  2002               	addwfc	__get_root@idx+1,w,c
 35096  003AFA  6EF7               	movwf	tblptrh,c
 35097  003AFC                     	if	1	;There are 3 active tblptr bytes
 35098  003AFC  6AF8               	clrf	tblptru,c
 35099  003AFE  0E00               	movlw	low (__mediumconst shr (0+16))
 35100  003B00  22F8               	addwfc	tblptru,f,c
 35101  003B02                     	endif
 35102  003B02  0008               	tblrd		*
 35103  003B04  50F5               	movf	tablat,w,c
 35104  003B06  0012               	return	
 35105  003B08                     l2260:
 35106  003B08                     l13148:
 35107                           
 35108                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
 35109  003B08  5002               	movf	__get_root@idx+1,w,c
 35110  003B0A  E146               	bnz	l13240
 35111  003B0C  0E0B               	movlw	11
 35112  003B0E  5C01               	subwf	__get_root@idx,w,c
 35113  003B10  B0D8               	btfsc	status,0,c
 35114  003B12  D042               	goto	l2262
 35115                           
 35116                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
 35117  003B14  0EF8               	movlw	248
 35118  003B16  6E03               	movwf	??__get_root& (0+255),c
 35119  003B18  0EFF               	movlw	255
 35120  003B1A  6E04               	movwf	(??__get_root+1)& (0+255),c
 35121  003B1C  C001  F005         	movff	__get_root@idx,??__get_root+2
 35122  003B20  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 35123  003B24  5003               	movf	??__get_root,w,c
 35124  003B26  2605               	addwf	??__get_root+2,f,c
 35125  003B28  5004               	movf	??__get_root+1,w,c
 35126  003B2A  2206               	addwfc	??__get_root+3,f,c
 35127  003B2C  0EFA               	movlw	low STR_11
 35128  003B2E  2405               	addwf	??__get_root+2,w,c
 35129  003B30  6EF6               	movwf	tblptrl,c
 35130  003B32  0EBF               	movlw	high STR_11
 35131  003B34  2006               	addwfc	??__get_root+3,w,c
 35132  003B36  6EF7               	movwf	tblptrh,c
 35133  003B38                     	if	1	;There are 3 active tblptr bytes
 35134  003B38  6AF8               	clrf	tblptru,c
 35135  003B3A  0E00               	movlw	low (__mediumconst shr (0+16))
 35136  003B3C  22F8               	addwfc	tblptru,f,c
 35137  003B3E                     	endif
 35138  003B3E  0008               	tblrd		*
 35139  003B40  50F5               	movf	tablat,w,c
 35140  003B42  0012               	return	
 35141  003B44                     
 35142                           ;fat16.c: 1237: return 0x20;
 35143  003B44  0E20               	movlw	32
 35144  003B46  0012               	return	
 35145  003B48                     
 35146                           ;fat16.c: 1239: return 0x06;
 35147  003B48  0E06               	movlw	6
 35148  003B4A  0012               	return	
 35149  003B4C                     
 35150                           ;fat16.c: 1241: return 0x28;
 35151  003B4C  0E28               	movlw	40
 35152  003B4E  0012               	return	
 35153  003B50                     
 35154                           ;fat16.c: 1243: return 0x78;
 35155  003B50  0E78               	movlw	120
 35156  003B52  0012               	return	
 35157  003B54                     
 35158                           ;fat16.c: 1245: return 0xDE;
 35159  003B54  0EDE               	movlw	222
 35160  003B56  0012               	return	
 35161  003B58                     
 35162                           ;fat16.c: 1247: return 0x38;
 35163  003B58  0E38               	movlw	56
 35164  003B5A  0012               	return	
 35165  003B5C                     
 35166                           ;fat16.c: 1249: return 0x5F;
 35167  003B5C  0E5F               	movlw	95
 35168  003B5E  0012               	return	
 35169  003B60                     
 35170                           ;fat16.c: 1251: return 0x4B;
 35171  003B60  0E4B               	movlw	75
 35172  003B62  0012               	return	
 35173  003B64                     
 35174                           ;fat16.c: 1253: return 0x00;
 35175  003B64  0E00               	movlw	0
 35176  003B66  0012               	return	
 35177  003B68                     
 35178                           ;fat16.c: 1255: return 0x00;
 35179  003B68  0E00               	movlw	0
 35180  003B6A  0012               	return	
 35181  003B6C                     
 35182                           ;fat16.c: 1257: return 0x04;
 35183  003B6C  0E04               	movlw	4
 35184  003B6E  0012               	return	
 35185  003B70                     
 35186                           ;fat16.c: 1259: return 0x77;
 35187  003B70  0E77               	movlw	119
 35188  003B72  0012               	return	
 35189  003B74                     
 35190                           ;fat16.c: 1261: return 0xDE;
 35191  003B74  0EDE               	movlw	222
 35192  003B76  0012               	return	
 35193  003B78                     
 35194                           ;fat16.c: 1263: return 0x38;
 35195  003B78  0E38               	movlw	56
 35196  003B7A  0012               	return	
 35197  003B7C                     
 35198                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
 35199  003B7C  0E02               	movlw	2
 35200  003B7E  0012               	return	
 35201  003B80                     
 35202                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 35203  003B80  0E00               	movlw	0
 35204  003B82  0012               	return	
 35205  003B84                     
 35206                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 35207  003B84  0E0C               	movlw	12
 35208  003B86  0012               	return	
 35209  003B88                     
 35210                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 35211  003B88  0E00               	movlw	0
 35212  003B8A  0012               	return	
 35213  003B8C                     
 35214                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 35215  003B8C  0E00               	movlw	0
 35216  003B8E  0012               	return	
 35217  003B90                     
 35218                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 35219  003B90  0E00               	movlw	0
 35220  003B92  0012               	return	
 35221  003B94                     
 35222                           ;fat16.c: 1277: return 0x00;
 35223  003B94  0E00               	movlw	0
 35224  003B96  0012               	return	
 35225  003B98                     l2262:
 35226  003B98                     l13240:
 35227  003B98  C001  F003         	movff	__get_root@idx,??__get_root
 35228  003B9C  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 35229                           
 35230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35231                           ; Switch size 1, requested type "space"
 35232                           ; Number of cases is 1, Range of values is 0 to 0
 35233                           ; switch strategies available:
 35234                           ; Name         Instructions Cycles
 35235                           ; simple_byte            4     3 (average)
 35236                           ;	Chosen strategy is simple_byte
 35237  003BA0  5004               	movf	??__get_root+1,w,c
 35238  003BA2  0A00               	xorlw	0	; case 0
 35239  003BA4  A4D8               	btfss	status,2,c
 35240  003BA6  D7F6               	goto	l2283
 35241                           
 35242                           ; Switch size 1, requested type "space"
 35243                           ; Number of cases is 20, Range of values is 11 to 31
 35244                           ; switch strategies available:
 35245                           ; Name         Instructions Cycles
 35246                           ; simple_byte           61    31 (average)
 35247                           ;	Chosen strategy is simple_byte
 35248  003BA8  5003               	movf	??__get_root,w,c
 35249  003BAA  0A0B               	xorlw	11	; case 11
 35250  003BAC  B4D8               	btfsc	status,2,c
 35251  003BAE  D7CA               	goto	l2263
 35252  003BB0  0A06               	xorlw	6	; case 13
 35253  003BB2  B4D8               	btfsc	status,2,c
 35254  003BB4  D7C9               	goto	l2264
 35255  003BB6  0A03               	xorlw	3	; case 14
 35256  003BB8  B4D8               	btfsc	status,2,c
 35257  003BBA  D7C8               	goto	l2265
 35258  003BBC  0A01               	xorlw	1	; case 15
 35259  003BBE  B4D8               	btfsc	status,2,c
 35260  003BC0  D7C7               	goto	l2266
 35261  003BC2  0A1F               	xorlw	31	; case 16
 35262  003BC4  B4D8               	btfsc	status,2,c
 35263  003BC6  D7C6               	goto	l2267
 35264  003BC8  0A01               	xorlw	1	; case 17
 35265  003BCA  B4D8               	btfsc	status,2,c
 35266  003BCC  D7C5               	goto	l2268
 35267  003BCE  0A03               	xorlw	3	; case 18
 35268  003BD0  B4D8               	btfsc	status,2,c
 35269  003BD2  D7C4               	goto	l2269
 35270  003BD4  0A01               	xorlw	1	; case 19
 35271  003BD6  B4D8               	btfsc	status,2,c
 35272  003BD8  D7C3               	goto	l2270
 35273  003BDA  0A07               	xorlw	7	; case 20
 35274  003BDC  B4D8               	btfsc	status,2,c
 35275  003BDE  D7C2               	goto	l2271
 35276  003BE0  0A01               	xorlw	1	; case 21
 35277  003BE2  B4D8               	btfsc	status,2,c
 35278  003BE4  D7C1               	goto	l2272
 35279  003BE6  0A03               	xorlw	3	; case 22
 35280  003BE8  B4D8               	btfsc	status,2,c
 35281  003BEA  D7C0               	goto	l2273
 35282  003BEC  0A01               	xorlw	1	; case 23
 35283  003BEE  B4D8               	btfsc	status,2,c
 35284  003BF0  D7BF               	goto	l2274
 35285  003BF2  0A0F               	xorlw	15	; case 24
 35286  003BF4  B4D8               	btfsc	status,2,c
 35287  003BF6  D7BE               	goto	l2275
 35288  003BF8  0A01               	xorlw	1	; case 25
 35289  003BFA  B4D8               	btfsc	status,2,c
 35290  003BFC  D7BD               	goto	l2276
 35291  003BFE  0A03               	xorlw	3	; case 26
 35292  003C00  B4D8               	btfsc	status,2,c
 35293  003C02  D7BC               	goto	l2277
 35294  003C04  0A01               	xorlw	1	; case 27
 35295  003C06  B4D8               	btfsc	status,2,c
 35296  003C08  D7BB               	goto	l2278
 35297  003C0A  0A07               	xorlw	7	; case 28
 35298  003C0C  B4D8               	btfsc	status,2,c
 35299  003C0E  D7BA               	goto	l2279
 35300  003C10  0A01               	xorlw	1	; case 29
 35301  003C12  B4D8               	btfsc	status,2,c
 35302  003C14  D7B9               	goto	l2280
 35303  003C16  0A03               	xorlw	3	; case 30
 35304  003C18  B4D8               	btfsc	status,2,c
 35305  003C1A  D7B8               	goto	l2281
 35306  003C1C  0A01               	xorlw	1	; case 31
 35307  003C1E  B4D8               	btfsc	status,2,c
 35308  003C20  D7B7               	goto	l2282
 35309  003C22  D7B8               	goto	l2283
 35310  003C24                     l2284:
 35311                           
 35312                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
 35313  003C24  0E00               	movlw	0
 35314  003C26  0012               	return	
 35315  003C28                     __end_of__get_root:
 35316                           	opt stack 0
 35317                           tosu	equ	0xFFF
 35318                           tosh	equ	0xFFE
 35319                           tosl	equ	0xFFD
 35320                           pclath	equ	0xFFA
 35321                           tblptru	equ	0xFF8
 35322                           tblptrh	equ	0xFF7
 35323                           tblptrl	equ	0xFF6
 35324                           tablat	equ	0xFF5
 35325                           prodh	equ	0xFF4
 35326                           prodl	equ	0xFF3
 35327                           intcon	equ	0xFF2
 35328                           intcon2	equ	0xFF1
 35329                           intcon3	equ	0xFF0
 35330                           indf0	equ	0xFEF
 35331                           postinc0	equ	0xFEE
 35332                           fsr0h	equ	0xFEA
 35333                           fsr0l	equ	0xFE9
 35334                           wreg	equ	0xFE8
 35335                           indf1	equ	0xFE7
 35336                           postdec1	equ	0xFE5
 35337                           plusw1	equ	0xFE3
 35338                           fsr1h	equ	0xFE2
 35339                           fsr1l	equ	0xFE1
 35340                           indf2	equ	0xFDF
 35341                           postinc2	equ	0xFDE
 35342                           postdec2	equ	0xFDD
 35343                           plusw2	equ	0xFDB
 35344                           fsr2h	equ	0xFDA
 35345                           fsr2l	equ	0xFD9
 35346                           status	equ	0xFD8
 35347                           
 35348 ;; *************** function __get_mbr *****************
 35349 ;; Defined at:
 35350 ;;		line 1037 in file "fat16.c"
 35351 ;; Parameters:    Size  Location     Type
 35352 ;;  idx             2    0[COMRAM] unsigned int 
 35353 ;; Auto vars:     Size  Location     Type
 35354 ;;		None
 35355 ;; Return value:  Size  Location     Type
 35356 ;;                  1    wreg      unsigned char 
 35357 ;; Registers used:
 35358 ;;		wreg, status,2, status,0
 35359 ;; Tracked objects:
 35360 ;;		On entry : 0/0
 35361 ;;		On exit  : 0/0
 35362 ;;		Unchanged: 0/0
 35363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35367 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35368 ;;Total ram usage:        4 bytes
 35369 ;; Hardware stack levels used:    1
 35370 ;; This function calls:
 35371 ;;		Nothing
 35372 ;; This function is called by:
 35373 ;;		_fat_get_format_status
 35374 ;;		_fat_format
 35375 ;; This function uses a non-reentrant model
 35376 ;;
 35377                           
 35378                           	psect	text173
 35379  006BFE                     __ptext173:
 35380                           	opt stack 0
 35381  006BFE                     __get_mbr:
 35382                           	opt stack 27
 35383                           
 35384                           ;fat16.c: 1039: switch (idx)
 35385                           
 35386                           ;incstack = 0
 35387  006BFE  D026               	goto	l2165
 35388  006C00                     
 35389                           ;fat16.c: 1042: return 0x80;
 35390  006C00  0E80               	movlw	128
 35391  006C02  0012               	return	
 35392  006C04                     
 35393                           ;fat16.c: 1044: return 0;
 35394  006C04  0E00               	movlw	0
 35395  006C06  0012               	return	
 35396  006C08                     
 35397                           ;fat16.c: 1046: return 2;
 35398  006C08  0E02               	movlw	2
 35399  006C0A  0012               	return	
 35400  006C0C                     
 35401                           ;fat16.c: 1048: return 0;
 35402  006C0C  0E00               	movlw	0
 35403  006C0E  0012               	return	
 35404  006C10                     
 35405                           ;fat16.c: 1050: return 0x04;
 35406  006C10  0E04               	movlw	4
 35407  006C12  0012               	return	
 35408  006C14                     
 35409                           ;fat16.c: 1052: return 2;
 35410  006C14  0E02               	movlw	2
 35411  006C16  0012               	return	
 35412  006C18                     
 35413                           ;fat16.c: 1054: return 3;
 35414  006C18  0E03               	movlw	3
 35415  006C1A  0012               	return	
 35416  006C1C                     
 35417                           ;fat16.c: 1056: return 8;
 35418  006C1C  0E08               	movlw	8
 35419  006C1E  0012               	return	
 35420  006C20                     
 35421                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
 35422  006C20  0E01               	movlw	1
 35423  006C22  0012               	return	
 35424  006C24                     
 35425                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
 35426  006C24  0E00               	movlw	0
 35427  006C26  0012               	return	
 35428  006C28                     
 35429                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
 35430  006C28  0E00               	movlw	0
 35431  006C2A  0012               	return	
 35432  006C2C                     
 35433                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 35434  006C2C  0E00               	movlw	0
 35435  006C2E  0012               	return	
 35436  006C30                     
 35437                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 35438  006C30  0EFF               	movlw	255
 35439  006C32  0012               	return	
 35440  006C34                     
 35441                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 35442  006C34  0E1F               	movlw	31
 35443  006C36  0012               	return	
 35444  006C38                     
 35445                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 35446  006C38  0E00               	movlw	0
 35447  006C3A  0012               	return	
 35448  006C3C                     
 35449                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 35450  006C3C  0E00               	movlw	0
 35451  006C3E  0012               	return	
 35452  006C40                     
 35453                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 35454  006C40  0E55               	movlw	85
 35455  006C42  0012               	return	
 35456  006C44                     
 35457                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 35458  006C44  0EAA               	movlw	170
 35459  006C46  0012               	return	
 35460  006C48                     
 35461                           ;fat16.c: 1078: return 0X00;
 35462  006C48  0E00               	movlw	0
 35463                           
 35464                           ;fat16.c: 1079: }
 35465  006C4A  0012               	return	
 35466  006C4C                     l2165:
 35467  006C4C  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 35468  006C50  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 35469                           
 35470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35471                           ; Switch size 1, requested type "space"
 35472                           ; Number of cases is 1, Range of values is 1 to 1
 35473                           ; switch strategies available:
 35474                           ; Name         Instructions Cycles
 35475                           ; simple_byte            4     3 (average)
 35476                           ;	Chosen strategy is simple_byte
 35477  006C54  5004               	movf	??__get_mbr+1,w,c
 35478  006C56  0A01               	xorlw	1	; case 1
 35479  006C58  A4D8               	btfss	status,2,c
 35480  006C5A  D7F6               	goto	l2185
 35481                           
 35482                           ; Switch size 1, requested type "space"
 35483                           ; Number of cases is 18, Range of values is 190 to 255
 35484                           ; switch strategies available:
 35485                           ; Name         Instructions Cycles
 35486                           ; simple_byte           55    28 (average)
 35487                           ;	Chosen strategy is simple_byte
 35488  006C5C  5003               	movf	??__get_mbr,w,c
 35489  006C5E  0ABE               	xorlw	190	; case 190
 35490  006C60  B4D8               	btfsc	status,2,c
 35491  006C62  D7CE               	goto	l2166
 35492  006C64  0A01               	xorlw	1	; case 191
 35493  006C66  B4D8               	btfsc	status,2,c
 35494  006C68  D7CD               	goto	l2168
 35495  006C6A  0A7F               	xorlw	127	; case 192
 35496  006C6C  B4D8               	btfsc	status,2,c
 35497  006C6E  D7CC               	goto	l2169
 35498  006C70  0A01               	xorlw	1	; case 193
 35499  006C72  B4D8               	btfsc	status,2,c
 35500  006C74  D7CB               	goto	l2170
 35501  006C76  0A03               	xorlw	3	; case 194
 35502  006C78  B4D8               	btfsc	status,2,c
 35503  006C7A  D7CA               	goto	l2171
 35504  006C7C  0A01               	xorlw	1	; case 195
 35505  006C7E  B4D8               	btfsc	status,2,c
 35506  006C80  D7C9               	goto	l2172
 35507  006C82  0A07               	xorlw	7	; case 196
 35508  006C84  B4D8               	btfsc	status,2,c
 35509  006C86  D7C8               	goto	l2173
 35510  006C88  0A01               	xorlw	1	; case 197
 35511  006C8A  B4D8               	btfsc	status,2,c
 35512  006C8C  D7C7               	goto	l2174
 35513  006C8E  0A03               	xorlw	3	; case 198
 35514  006C90  B4D8               	btfsc	status,2,c
 35515  006C92  D7C6               	goto	l2175
 35516  006C94  0A01               	xorlw	1	; case 199
 35517  006C96  B4D8               	btfsc	status,2,c
 35518  006C98  D7C5               	goto	l2176
 35519  006C9A  0A0F               	xorlw	15	; case 200
 35520  006C9C  B4D8               	btfsc	status,2,c
 35521  006C9E  D7C4               	goto	l2177
 35522  006CA0  0A01               	xorlw	1	; case 201
 35523  006CA2  B4D8               	btfsc	status,2,c
 35524  006CA4  D7C3               	goto	l2178
 35525  006CA6  0A03               	xorlw	3	; case 202
 35526  006CA8  B4D8               	btfsc	status,2,c
 35527  006CAA  D7C2               	goto	l2179
 35528  006CAC  0A01               	xorlw	1	; case 203
 35529  006CAE  B4D8               	btfsc	status,2,c
 35530  006CB0  D7C1               	goto	l2180
 35531  006CB2  0A07               	xorlw	7	; case 204
 35532  006CB4  B4D8               	btfsc	status,2,c
 35533  006CB6  D7C0               	goto	l2181
 35534  006CB8  0A01               	xorlw	1	; case 205
 35535  006CBA  B4D8               	btfsc	status,2,c
 35536  006CBC  D7BF               	goto	l2182
 35537  006CBE  0A33               	xorlw	51	; case 254
 35538  006CC0  B4D8               	btfsc	status,2,c
 35539  006CC2  D7BE               	goto	l2183
 35540  006CC4  0A01               	xorlw	1	; case 255
 35541  006CC6  B4D8               	btfsc	status,2,c
 35542  006CC8  D7BD               	goto	l2184
 35543  006CCA  D7BE               	goto	l2185
 35544  006CCC                     __end_of__get_mbr:
 35545                           	opt stack 0
 35546                           tosu	equ	0xFFF
 35547                           tosh	equ	0xFFE
 35548                           tosl	equ	0xFFD
 35549                           pclath	equ	0xFFA
 35550                           tblptru	equ	0xFF8
 35551                           tblptrh	equ	0xFF7
 35552                           tblptrl	equ	0xFF6
 35553                           tablat	equ	0xFF5
 35554                           prodh	equ	0xFF4
 35555                           prodl	equ	0xFF3
 35556                           intcon	equ	0xFF2
 35557                           intcon2	equ	0xFF1
 35558                           intcon3	equ	0xFF0
 35559                           indf0	equ	0xFEF
 35560                           postinc0	equ	0xFEE
 35561                           fsr0h	equ	0xFEA
 35562                           fsr0l	equ	0xFE9
 35563                           wreg	equ	0xFE8
 35564                           indf1	equ	0xFE7
 35565                           postdec1	equ	0xFE5
 35566                           plusw1	equ	0xFE3
 35567                           fsr1h	equ	0xFE2
 35568                           fsr1l	equ	0xFE1
 35569                           indf2	equ	0xFDF
 35570                           postinc2	equ	0xFDE
 35571                           postdec2	equ	0xFDD
 35572                           plusw2	equ	0xFDB
 35573                           fsr2h	equ	0xFDA
 35574                           fsr2l	equ	0xFD9
 35575                           status	equ	0xFD8
 35576                           
 35577 ;; *************** function __get_fbr *****************
 35578 ;; Defined at:
 35579 ;;		line 1082 in file "fat16.c"
 35580 ;; Parameters:    Size  Location     Type
 35581 ;;  idx             2    0[COMRAM] unsigned int 
 35582 ;; Auto vars:     Size  Location     Type
 35583 ;;		None
 35584 ;; Return value:  Size  Location     Type
 35585 ;;                  1    wreg      unsigned char 
 35586 ;; Registers used:
 35587 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 35588 ;; Tracked objects:
 35589 ;;		On entry : 0/0
 35590 ;;		On exit  : 0/0
 35591 ;;		Unchanged: 0/0
 35592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35595 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35596 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35597 ;;Total ram usage:        4 bytes
 35598 ;; Hardware stack levels used:    1
 35599 ;; This function calls:
 35600 ;;		Nothing
 35601 ;; This function is called by:
 35602 ;;		_fat_get_format_status
 35603 ;;		_fat_format
 35604 ;; This function uses a non-reentrant model
 35605 ;;
 35606                           
 35607                           	psect	text174
 35608  002044                     __ptext174:
 35609                           	opt stack 0
 35610  002044                     __get_fbr:
 35611                           	opt stack 27
 35612                           
 35613                           ;fat16.c: 1084: switch (idx)
 35614                           
 35615                           ;incstack = 0
 35616  002044  D091               	goto	l2189
 35617  002046                     
 35618                           ;fat16.c: 1087: return 0xEB;
 35619  002046  0EEB               	movlw	235
 35620  002048  0012               	return	
 35621  00204A                     
 35622                           ;fat16.c: 1089: return 0x3C;
 35623  00204A  0E3C               	movlw	60
 35624  00204C  0012               	return	
 35625  00204E                     
 35626                           ;fat16.c: 1091: return 0x90;
 35627  00204E  0E90               	movlw	144
 35628  002050  0012               	return	
 35629  002052                     
 35630                           ;fat16.c: 1093: return "MSDOS5.0"[0];
 35631  002052  0EF1               	movlw	low STR_1
 35632  002054  6EF6               	movwf	tblptrl,c
 35633  002056                     	if	1	;There is more than 1 active tblptr byte
 35634  002056  0EBF               	movlw	high STR_1
 35635  002058  6EF7               	movwf	tblptrh,c
 35636  00205A                     	endif
 35637  00205A                     	if	1	;There are 3 active tblptr bytes
 35638  00205A  0E00               	movlw	low (STR_1 shr (0+16))
 35639  00205C  6EF8               	movwf	tblptru,c
 35640  00205E                     	endif
 35641  00205E  0008               	tblrd		*
 35642  002060  50F5               	movf	tablat,w,c
 35643  002062  0012               	return	
 35644  002064                     
 35645                           ;fat16.c: 1095: return "MSDOS5.0"[1];
 35646  002064  0EF2               	movlw	low (STR_1+1)
 35647  002066  6EF6               	movwf	tblptrl,c
 35648  002068  0EBF               	movlw	high (STR_1+1)
 35649  00206A  6EF7               	movwf	tblptrh,c
 35650  00206C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35651  00206C  6AF8               	clrf	tblptru,c
 35652  00206E                     	endif
 35653  00206E                     	if	0	;tblptru may be non-zero
 35654  00206E                     	endif
 35655  00206E  0008               	tblrd		*
 35656  002070  50F5               	movf	tablat,w,c
 35657  002072  0012               	return	
 35658  002074                     
 35659                           ;fat16.c: 1097: return "MSDOS5.0"[2];
 35660  002074  0EF3               	movlw	low (STR_1+2)
 35661  002076  6EF6               	movwf	tblptrl,c
 35662  002078  0EBF               	movlw	high (STR_1+2)
 35663  00207A  6EF7               	movwf	tblptrh,c
 35664  00207C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35665  00207C  6AF8               	clrf	tblptru,c
 35666  00207E                     	endif
 35667  00207E                     	if	0	;tblptru may be non-zero
 35668  00207E                     	endif
 35669  00207E  0008               	tblrd		*
 35670  002080  50F5               	movf	tablat,w,c
 35671  002082  0012               	return	
 35672  002084                     
 35673                           ;fat16.c: 1099: return "MSDOS5.0"[3];
 35674  002084  0EF4               	movlw	low (STR_1+3)
 35675  002086  6EF6               	movwf	tblptrl,c
 35676  002088  0EBF               	movlw	high (STR_1+3)
 35677  00208A  6EF7               	movwf	tblptrh,c
 35678  00208C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35679  00208C  6AF8               	clrf	tblptru,c
 35680  00208E                     	endif
 35681  00208E                     	if	0	;tblptru may be non-zero
 35682  00208E                     	endif
 35683  00208E  0008               	tblrd		*
 35684  002090  50F5               	movf	tablat,w,c
 35685  002092  0012               	return	
 35686  002094                     
 35687                           ;fat16.c: 1101: return "MSDOS5.0"[4];
 35688  002094  0EF5               	movlw	low (STR_1+4)
 35689  002096  6EF6               	movwf	tblptrl,c
 35690  002098  0EBF               	movlw	high (STR_1+4)
 35691  00209A  6EF7               	movwf	tblptrh,c
 35692  00209C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35693  00209C  6AF8               	clrf	tblptru,c
 35694  00209E                     	endif
 35695  00209E                     	if	0	;tblptru may be non-zero
 35696  00209E                     	endif
 35697  00209E  0008               	tblrd		*
 35698  0020A0  50F5               	movf	tablat,w,c
 35699  0020A2  0012               	return	
 35700  0020A4                     
 35701                           ;fat16.c: 1103: return "MSDOS5.0"[5];
 35702  0020A4  0EF6               	movlw	low (STR_1+5)
 35703  0020A6  6EF6               	movwf	tblptrl,c
 35704  0020A8  0EBF               	movlw	high (STR_1+5)
 35705  0020AA  6EF7               	movwf	tblptrh,c
 35706  0020AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35707  0020AC  6AF8               	clrf	tblptru,c
 35708  0020AE                     	endif
 35709  0020AE                     	if	0	;tblptru may be non-zero
 35710  0020AE                     	endif
 35711  0020AE  0008               	tblrd		*
 35712  0020B0  50F5               	movf	tablat,w,c
 35713  0020B2  0012               	return	
 35714  0020B4                     
 35715                           ;fat16.c: 1105: return "MSDOS5.0"[6];
 35716  0020B4  0EF7               	movlw	low (STR_1+6)
 35717  0020B6  6EF6               	movwf	tblptrl,c
 35718  0020B8  0EBF               	movlw	high (STR_1+6)
 35719  0020BA  6EF7               	movwf	tblptrh,c
 35720  0020BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35721  0020BC  6AF8               	clrf	tblptru,c
 35722  0020BE                     	endif
 35723  0020BE                     	if	0	;tblptru may be non-zero
 35724  0020BE                     	endif
 35725  0020BE  0008               	tblrd		*
 35726  0020C0  50F5               	movf	tablat,w,c
 35727  0020C2  0012               	return	
 35728  0020C4                     
 35729                           ;fat16.c: 1107: return "MSDOS5.0"[7];
 35730  0020C4  0EF8               	movlw	low (STR_1+7)
 35731  0020C6  6EF6               	movwf	tblptrl,c
 35732  0020C8  0EBF               	movlw	high (STR_1+7)
 35733  0020CA  6EF7               	movwf	tblptrh,c
 35734  0020CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35735  0020CC  6AF8               	clrf	tblptru,c
 35736  0020CE                     	endif
 35737  0020CE                     	if	0	;tblptru may be non-zero
 35738  0020CE                     	endif
 35739  0020CE  0008               	tblrd		*
 35740  0020D0  50F5               	movf	tablat,w,c
 35741  0020D2  0012               	return	
 35742  0020D4                     
 35743                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
 35744  0020D4  0E00               	movlw	0
 35745  0020D6  0012               	return	
 35746  0020D8                     
 35747                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 35748  0020D8  0E02               	movlw	2
 35749  0020DA  0012               	return	
 35750  0020DC                     
 35751                           ;fat16.c: 1113: return 1;
 35752  0020DC  0E01               	movlw	1
 35753  0020DE  0012               	return	
 35754  0020E0                     
 35755                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
 35756  0020E0  0E01               	movlw	1
 35757  0020E2  0012               	return	
 35758  0020E4                     
 35759                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 35760  0020E4  0E00               	movlw	0
 35761  0020E6  0012               	return	
 35762  0020E8                     
 35763                           ;fat16.c: 1119: return 1;
 35764  0020E8  0E01               	movlw	1
 35765  0020EA  0012               	return	
 35766  0020EC                     
 35767                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
 35768  0020EC  0E40               	movlw	64
 35769  0020EE  0012               	return	
 35770  0020F0                     
 35771                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 35772  0020F0  0E00               	movlw	0
 35773  0020F2  0012               	return	
 35774  0020F4                     
 35775                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
 35776  0020F4  0EFF               	movlw	255
 35777  0020F6  0012               	return	
 35778  0020F8                     
 35779                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 35780  0020F8  0E1F               	movlw	31
 35781  0020FA  0012               	return	
 35782  0020FC                     
 35783                           ;fat16.c: 1129: return 0XF8;
 35784  0020FC  0EF8               	movlw	248
 35785  0020FE  0012               	return	
 35786  002100                     
 35787                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 35788  002100  0E20               	movlw	32
 35789  002102  0012               	return	
 35790  002104                     
 35791                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 35792  002104  0E00               	movlw	0
 35793  002106  0012               	return	
 35794  002108                     
 35795                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 35796  002108  0E3F               	movlw	63
 35797  00210A  0012               	return	
 35798  00210C                     
 35799                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 35800  00210C  0E00               	movlw	0
 35801  00210E  0012               	return	
 35802  002110                     
 35803                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 35804  002110  0E10               	movlw	16
 35805  002112  0012               	return	
 35806  002114                     
 35807                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 35808  002114  0E00               	movlw	0
 35809  002116  0012               	return	
 35810  002118                     
 35811                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 35812  002118  0E00               	movlw	0
 35813  00211A  0012               	return	
 35814  00211C                     
 35815                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 35816  00211C  0E00               	movlw	0
 35817  00211E  0012               	return	
 35818  002120                     
 35819                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 35820  002120  0E00               	movlw	0
 35821  002122  0012               	return	
 35822  002124                     
 35823                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 35824  002124  0E00               	movlw	0
 35825  002126  0012               	return	
 35826  002128                     
 35827                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 35828  002128  0E01               	movlw	1
 35829  00212A  0012               	return	
 35830  00212C                     
 35831                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 35832  00212C  0E00               	movlw	0
 35833  00212E  0012               	return	
 35834  002130                     
 35835                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 35836  002130  0E22               	movlw	34
 35837  002132  0012               	return	
 35838  002134                     
 35839                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 35840  002134  0E00               	movlw	0
 35841  002136  0012               	return	
 35842  002138                     
 35843                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 35844                           
 35845                           ;fat16.c: 1160: case 0x2F:
 35846  002138  0E00               	movlw	0
 35847  00213A  0012               	return	
 35848  00213C                     
 35849                           ;fat16.c: 1163: return 'F';
 35850  00213C  0E46               	movlw	70
 35851  00213E  0012               	return	
 35852  002140                     
 35853                           ;fat16.c: 1165: return 'A';
 35854  002140  0E41               	movlw	65
 35855  002142  0012               	return	
 35856  002144                     
 35857                           ;fat16.c: 1167: return 'T';
 35858  002144  0E54               	movlw	84
 35859  002146  0012               	return	
 35860  002148                     
 35861                           ;fat16.c: 1169: return '1';
 35862  002148  0E31               	movlw	49
 35863  00214A  0012               	return	
 35864  00214C                     
 35865                           ;fat16.c: 1171: return '6';
 35866  00214C  0E36               	movlw	54
 35867  00214E  0012               	return	
 35868  002150                     
 35869                           ;fat16.c: 1173: return ' ';
 35870  002150  0E20               	movlw	32
 35871  002152  0012               	return	
 35872  002154                     
 35873                           ;fat16.c: 1175: return ' ';
 35874  002154  0E20               	movlw	32
 35875  002156  0012               	return	
 35876  002158                     
 35877                           ;fat16.c: 1177: return ' ';
 35878  002158  0E20               	movlw	32
 35879  00215A  0012               	return	
 35880  00215C                     
 35881                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 35882  00215C  0E55               	movlw	85
 35883  00215E  0012               	return	
 35884  002160                     
 35885                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 35886  002160  0EAA               	movlw	170
 35887  002162  0012               	return	
 35888  002164                     
 35889                           ;fat16.c: 1183: return 0X00;
 35890  002164  0E00               	movlw	0
 35891                           
 35892                           ;fat16.c: 1184: }
 35893  002166  0012               	return	
 35894  002168                     l2189:
 35895  002168  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 35896  00216C  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 35897                           
 35898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 35899                           ; Switch size 1, requested type "space"
 35900                           ; Number of cases is 2, Range of values is 0 to 1
 35901                           ; switch strategies available:
 35902                           ; Name         Instructions Cycles
 35903                           ; simple_byte            7     4 (average)
 35904                           ;	Chosen strategy is simple_byte
 35905  002170  5004               	movf	??__get_fbr+1,w,c
 35906  002172  0A00               	xorlw	0	; case 0
 35907  002174  B4D8               	btfsc	status,2,c
 35908  002176  D004               	goto	l16870
 35909  002178  0A01               	xorlw	1	; case 1
 35910  00217A  B4D8               	btfsc	status,2,c
 35911  00217C  D08D               	goto	l16872
 35912  00217E  D7F2               	goto	l2239
 35913  002180                     l16870:
 35914                           
 35915                           ; Switch size 1, requested type "space"
 35916                           ; Number of cases is 46, Range of values is 0 to 61
 35917                           ; switch strategies available:
 35918                           ; Name         Instructions Cycles
 35919                           ; simple_byte          139    70 (average)
 35920                           ;	Chosen strategy is simple_byte
 35921  002180  5003               	movf	??__get_fbr,w,c
 35922  002182  0A00               	xorlw	0	; case 0
 35923  002184  B4D8               	btfsc	status,2,c
 35924  002186  D75F               	goto	l2190
 35925  002188  0A01               	xorlw	1	; case 1
 35926  00218A  B4D8               	btfsc	status,2,c
 35927  00218C  D75E               	goto	l2192
 35928  00218E  0A03               	xorlw	3	; case 2
 35929  002190  B4D8               	btfsc	status,2,c
 35930  002192  D75D               	goto	l2193
 35931  002194  0A01               	xorlw	1	; case 3
 35932  002196  B4D8               	btfsc	status,2,c
 35933  002198  D75C               	goto	l2194
 35934  00219A  0A07               	xorlw	7	; case 4
 35935  00219C  B4D8               	btfsc	status,2,c
 35936  00219E  D762               	goto	l2195
 35937  0021A0  0A01               	xorlw	1	; case 5
 35938  0021A2  B4D8               	btfsc	status,2,c
 35939  0021A4  D767               	goto	l2196
 35940  0021A6  0A03               	xorlw	3	; case 6
 35941  0021A8  B4D8               	btfsc	status,2,c
 35942  0021AA  D76C               	goto	l2197
 35943  0021AC  0A01               	xorlw	1	; case 7
 35944  0021AE  B4D8               	btfsc	status,2,c
 35945  0021B0  D771               	goto	l2198
 35946  0021B2  0A0F               	xorlw	15	; case 8
 35947  0021B4  B4D8               	btfsc	status,2,c
 35948  0021B6  D776               	goto	l2199
 35949  0021B8  0A01               	xorlw	1	; case 9
 35950  0021BA  B4D8               	btfsc	status,2,c
 35951  0021BC  D77B               	goto	l2200
 35952  0021BE  0A03               	xorlw	3	; case 10
 35953  0021C0  B4D8               	btfsc	status,2,c
 35954  0021C2  D780               	goto	l2201
 35955  0021C4  0A01               	xorlw	1	; case 11
 35956  0021C6  B4D8               	btfsc	status,2,c
 35957  0021C8  D785               	goto	l2202
 35958  0021CA  0A07               	xorlw	7	; case 12
 35959  0021CC  B4D8               	btfsc	status,2,c
 35960  0021CE  D784               	goto	l2203
 35961  0021D0  0A01               	xorlw	1	; case 13
 35962  0021D2  B4D8               	btfsc	status,2,c
 35963  0021D4  D783               	goto	l2204
 35964  0021D6  0A03               	xorlw	3	; case 14
 35965  0021D8  B4D8               	btfsc	status,2,c
 35966  0021DA  D782               	goto	l2205
 35967  0021DC  0A01               	xorlw	1	; case 15
 35968  0021DE  B4D8               	btfsc	status,2,c
 35969  0021E0  D781               	goto	l2206
 35970  0021E2  0A1F               	xorlw	31	; case 16
 35971  0021E4  B4D8               	btfsc	status,2,c
 35972  0021E6  D780               	goto	l2207
 35973  0021E8  0A01               	xorlw	1	; case 17
 35974  0021EA  B4D8               	btfsc	status,2,c
 35975  0021EC  D77F               	goto	l2208
 35976  0021EE  0A03               	xorlw	3	; case 18
 35977  0021F0  B4D8               	btfsc	status,2,c
 35978  0021F2  D77E               	goto	l2209
 35979  0021F4  0A01               	xorlw	1	; case 19
 35980  0021F6  B4D8               	btfsc	status,2,c
 35981  0021F8  D77D               	goto	l2210
 35982  0021FA  0A07               	xorlw	7	; case 20
 35983  0021FC  B4D8               	btfsc	status,2,c
 35984  0021FE  D77C               	goto	l2211
 35985  002200  0A01               	xorlw	1	; case 21
 35986  002202  B4D8               	btfsc	status,2,c
 35987  002204  D77B               	goto	l2212
 35988  002206  0A03               	xorlw	3	; case 22
 35989  002208  B4D8               	btfsc	status,2,c
 35990  00220A  D77A               	goto	l2213
 35991  00220C  0A01               	xorlw	1	; case 23
 35992  00220E  B4D8               	btfsc	status,2,c
 35993  002210  D779               	goto	l2214
 35994  002212  0A0F               	xorlw	15	; case 24
 35995  002214  B4D8               	btfsc	status,2,c
 35996  002216  D778               	goto	l2215
 35997  002218  0A01               	xorlw	1	; case 25
 35998  00221A  B4D8               	btfsc	status,2,c
 35999  00221C  D777               	goto	l2216
 36000  00221E  0A03               	xorlw	3	; case 26
 36001  002220  B4D8               	btfsc	status,2,c
 36002  002222  D776               	goto	l2217
 36003  002224  0A01               	xorlw	1	; case 27
 36004  002226  B4D8               	btfsc	status,2,c
 36005  002228  D775               	goto	l2218
 36006  00222A  0A07               	xorlw	7	; case 28
 36007  00222C  B4D8               	btfsc	status,2,c
 36008  00222E  D774               	goto	l2219
 36009  002230  0A01               	xorlw	1	; case 29
 36010  002232  B4D8               	btfsc	status,2,c
 36011  002234  D773               	goto	l2220
 36012  002236  0A03               	xorlw	3	; case 30
 36013  002238  B4D8               	btfsc	status,2,c
 36014  00223A  D772               	goto	l2221
 36015  00223C  0A01               	xorlw	1	; case 31
 36016  00223E  B4D8               	btfsc	status,2,c
 36017  002240  D771               	goto	l2222
 36018  002242  0A37               	xorlw	55	; case 40
 36019  002244  B4D8               	btfsc	status,2,c
 36020  002246  D770               	goto	l2223
 36021  002248  0A01               	xorlw	1	; case 41
 36022  00224A  B4D8               	btfsc	status,2,c
 36023  00224C  D76F               	goto	l2224
 36024  00224E  0A05               	xorlw	5	; case 44
 36025  002250  B4D8               	btfsc	status,2,c
 36026  002252  D76E               	goto	l2225
 36027  002254  0A01               	xorlw	1	; case 45
 36028  002256  B4D8               	btfsc	status,2,c
 36029  002258  D76D               	goto	l2226
 36030  00225A  0A03               	xorlw	3	; case 46
 36031  00225C  B4D8               	btfsc	status,2,c
 36032  00225E  D76C               	goto	l2227
 36033  002260  0A01               	xorlw	1	; case 47
 36034  002262  B4D8               	btfsc	status,2,c
 36035  002264  D769               	goto	l2227
 36036  002266  0A19               	xorlw	25	; case 54
 36037  002268  B4D8               	btfsc	status,2,c
 36038  00226A  D768               	goto	l2229
 36039  00226C  0A01               	xorlw	1	; case 55
 36040  00226E  B4D8               	btfsc	status,2,c
 36041  002270  D767               	goto	l2230
 36042  002272  0A0F               	xorlw	15	; case 56
 36043  002274  B4D8               	btfsc	status,2,c
 36044  002276  D766               	goto	l2231
 36045  002278  0A01               	xorlw	1	; case 57
 36046  00227A  B4D8               	btfsc	status,2,c
 36047  00227C  D765               	goto	l2232
 36048  00227E  0A03               	xorlw	3	; case 58
 36049  002280  B4D8               	btfsc	status,2,c
 36050  002282  D764               	goto	l2233
 36051  002284  0A01               	xorlw	1	; case 59
 36052  002286  B4D8               	btfsc	status,2,c
 36053  002288  D763               	goto	l2234
 36054  00228A  0A07               	xorlw	7	; case 60
 36055  00228C  B4D8               	btfsc	status,2,c
 36056  00228E  D762               	goto	l2235
 36057  002290  0A01               	xorlw	1	; case 61
 36058  002292  B4D8               	btfsc	status,2,c
 36059  002294  D761               	goto	l2236
 36060  002296  D766               	goto	l2239
 36061  002298                     l16872:
 36062                           
 36063                           ; Switch size 1, requested type "space"
 36064                           ; Number of cases is 2, Range of values is 254 to 255
 36065                           ; switch strategies available:
 36066                           ; Name         Instructions Cycles
 36067                           ; simple_byte            7     4 (average)
 36068                           ;	Chosen strategy is simple_byte
 36069  002298  5003               	movf	??__get_fbr,w,c
 36070  00229A  0AFE               	xorlw	254	; case 254
 36071  00229C  B4D8               	btfsc	status,2,c
 36072  00229E  D75E               	goto	l2237
 36073  0022A0  0A01               	xorlw	1	; case 255
 36074  0022A2  B4D8               	btfsc	status,2,c
 36075  0022A4  D75D               	goto	l2238
 36076  0022A6  D75E               	goto	l2239
 36077  0022A8                     __end_of__get_fbr:
 36078                           	opt stack 0
 36079                           tosu	equ	0xFFF
 36080                           tosh	equ	0xFFE
 36081                           tosl	equ	0xFFD
 36082                           pclath	equ	0xFFA
 36083                           tblptru	equ	0xFF8
 36084                           tblptrh	equ	0xFF7
 36085                           tblptrl	equ	0xFF6
 36086                           tablat	equ	0xFF5
 36087                           prodh	equ	0xFF4
 36088                           prodl	equ	0xFF3
 36089                           intcon	equ	0xFF2
 36090                           intcon2	equ	0xFF1
 36091                           intcon3	equ	0xFF0
 36092                           indf0	equ	0xFEF
 36093                           postinc0	equ	0xFEE
 36094                           fsr0h	equ	0xFEA
 36095                           fsr0l	equ	0xFE9
 36096                           wreg	equ	0xFE8
 36097                           indf1	equ	0xFE7
 36098                           postdec1	equ	0xFE5
 36099                           plusw1	equ	0xFE3
 36100                           fsr1h	equ	0xFE2
 36101                           fsr1l	equ	0xFE1
 36102                           indf2	equ	0xFDF
 36103                           postinc2	equ	0xFDE
 36104                           postdec2	equ	0xFDD
 36105                           plusw2	equ	0xFDB
 36106                           fsr2h	equ	0xFDA
 36107                           fsr2l	equ	0xFD9
 36108                           status	equ	0xFD8
 36109                           
 36110 ;; *************** function __get_fat *****************
 36111 ;; Defined at:
 36112 ;;		line 1187 in file "fat16.c"
 36113 ;; Parameters:    Size  Location     Type
 36114 ;;  idx             2    0[COMRAM] unsigned int 
 36115 ;; Auto vars:     Size  Location     Type
 36116 ;;		None
 36117 ;; Return value:  Size  Location     Type
 36118 ;;                  1    wreg      unsigned char 
 36119 ;; Registers used:
 36120 ;;		wreg, status,2, status,0
 36121 ;; Tracked objects:
 36122 ;;		On entry : 0/0
 36123 ;;		On exit  : 0/0
 36124 ;;		Unchanged: 0/0
 36125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36129 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36130 ;;Total ram usage:        4 bytes
 36131 ;; Hardware stack levels used:    1
 36132 ;; This function calls:
 36133 ;;		Nothing
 36134 ;; This function is called by:
 36135 ;;		_fat_format
 36136 ;; This function uses a non-reentrant model
 36137 ;;
 36138                           
 36139                           	psect	text175
 36140  008D40                     __ptext175:
 36141                           	opt stack 0
 36142  008D40                     __get_fat:
 36143                           	opt stack 27
 36144                           
 36145                           ;fat16.c: 1189: switch (idx)
 36146                           
 36147                           ;incstack = 0
 36148  008D40  D00E               	goto	l2243
 36149  008D42                     
 36150                           ;fat16.c: 1193: return 0xF8;
 36151  008D42  0EF8               	movlw	248
 36152  008D44  0012               	return	
 36153  008D46                     
 36154                           ;fat16.c: 1195: return 0xFF;
 36155  008D46  0EFF               	movlw	255
 36156  008D48  0012               	return	
 36157  008D4A                     
 36158                           ;fat16.c: 1197: return 0xFF;
 36159  008D4A  0EFF               	movlw	255
 36160  008D4C  0012               	return	
 36161  008D4E                     
 36162                           ;fat16.c: 1199: return 0xFF;
 36163  008D4E  0EFF               	movlw	255
 36164  008D50  0012               	return	
 36165  008D52                     
 36166                           ;fat16.c: 1202: return 0xFF;
 36167  008D52  0EFF               	movlw	255
 36168  008D54  0012               	return	
 36169  008D56                     
 36170                           ;fat16.c: 1204: return 0xFF;
 36171  008D56  0EFF               	movlw	255
 36172  008D58  0012               	return	
 36173  008D5A                     
 36174                           ;fat16.c: 1206: return 0X00;
 36175  008D5A  0E00               	movlw	0
 36176                           
 36177                           ;fat16.c: 1207: }
 36178  008D5C  0012               	return	
 36179  008D5E                     l2243:
 36180  008D5E  C001  F003         	movff	__get_fat@idx,??__get_fat
 36181  008D62  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 36182                           
 36183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36184                           ; Switch size 1, requested type "space"
 36185                           ; Number of cases is 1, Range of values is 0 to 0
 36186                           ; switch strategies available:
 36187                           ; Name         Instructions Cycles
 36188                           ; simple_byte            4     3 (average)
 36189                           ;	Chosen strategy is simple_byte
 36190  008D66  5004               	movf	??__get_fat+1,w,c
 36191  008D68  0A00               	xorlw	0	; case 0
 36192  008D6A  A4D8               	btfss	status,2,c
 36193  008D6C  D7F6               	goto	l2251
 36194                           
 36195                           ; Switch size 1, requested type "space"
 36196                           ; Number of cases is 6, Range of values is 0 to 5
 36197                           ; switch strategies available:
 36198                           ; Name         Instructions Cycles
 36199                           ; simple_byte           19    10 (average)
 36200                           ;	Chosen strategy is simple_byte
 36201  008D6E  5003               	movf	??__get_fat,w,c
 36202  008D70  0A00               	xorlw	0	; case 0
 36203  008D72  B4D8               	btfsc	status,2,c
 36204  008D74  D7E6               	goto	l2244
 36205  008D76  0A01               	xorlw	1	; case 1
 36206  008D78  B4D8               	btfsc	status,2,c
 36207  008D7A  D7E5               	goto	l2246
 36208  008D7C  0A03               	xorlw	3	; case 2
 36209  008D7E  B4D8               	btfsc	status,2,c
 36210  008D80  D7E4               	goto	l2247
 36211  008D82  0A01               	xorlw	1	; case 3
 36212  008D84  B4D8               	btfsc	status,2,c
 36213  008D86  D7E3               	goto	l2248
 36214  008D88  0A07               	xorlw	7	; case 4
 36215  008D8A  B4D8               	btfsc	status,2,c
 36216  008D8C  D7E2               	goto	l2249
 36217  008D8E  0A01               	xorlw	1	; case 5
 36218  008D90  B4D8               	btfsc	status,2,c
 36219  008D92  D7E1               	goto	l2250
 36220  008D94  D7E2               	goto	l2251
 36221  008D96                     __end_of__get_fat:
 36222                           	opt stack 0
 36223                           tosu	equ	0xFFF
 36224                           tosh	equ	0xFFE
 36225                           tosl	equ	0xFFD
 36226                           pclath	equ	0xFFA
 36227                           tblptru	equ	0xFF8
 36228                           tblptrh	equ	0xFF7
 36229                           tblptrl	equ	0xFF6
 36230                           tablat	equ	0xFF5
 36231                           prodh	equ	0xFF4
 36232                           prodl	equ	0xFF3
 36233                           intcon	equ	0xFF2
 36234                           intcon2	equ	0xFF1
 36235                           intcon3	equ	0xFF0
 36236                           indf0	equ	0xFEF
 36237                           postinc0	equ	0xFEE
 36238                           fsr0h	equ	0xFEA
 36239                           fsr0l	equ	0xFE9
 36240                           wreg	equ	0xFE8
 36241                           indf1	equ	0xFE7
 36242                           postdec1	equ	0xFE5
 36243                           plusw1	equ	0xFE3
 36244                           fsr1h	equ	0xFE2
 36245                           fsr1l	equ	0xFE1
 36246                           indf2	equ	0xFDF
 36247                           postinc2	equ	0xFDE
 36248                           postdec2	equ	0xFDD
 36249                           plusw2	equ	0xFDB
 36250                           fsr2h	equ	0xFDA
 36251                           fsr2l	equ	0xFD9
 36252                           status	equ	0xFD8
 36253                           
 36254 ;; *************** function __get_data *****************
 36255 ;; Defined at:
 36256 ;;		line 1283 in file "fat16.c"
 36257 ;; Parameters:    Size  Location     Type
 36258 ;;  idx             2    0[COMRAM] unsigned int 
 36259 ;; Auto vars:     Size  Location     Type
 36260 ;;		None
 36261 ;; Return value:  Size  Location     Type
 36262 ;;                  1    wreg      unsigned char 
 36263 ;; Registers used:
 36264 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 36265 ;; Tracked objects:
 36266 ;;		On entry : 0/0
 36267 ;;		On exit  : 0/0
 36268 ;;		Unchanged: 0/0
 36269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36274 ;;Total ram usage:        2 bytes
 36275 ;; Hardware stack levels used:    1
 36276 ;; This function calls:
 36277 ;;		Nothing
 36278 ;; This function is called by:
 36279 ;;		_fat_format
 36280 ;; This function uses a non-reentrant model
 36281 ;;
 36282                           
 36283                           	psect	text176
 36284  00984C                     __ptext176:
 36285                           	opt stack 0
 36286  00984C                     __get_data:
 36287                           	opt stack 27
 36288                           
 36289                           ;fat16.c: 1285: if(idx < 12)
 36290                           
 36291                           ;incstack = 0
 36292  00984C  5002               	movf	__get_data@idx+1,w,c
 36293  00984E  E110               	bnz	l13256
 36294  009850  0E0C               	movlw	12
 36295  009852  5C01               	subwf	__get_data@idx,w,c
 36296  009854  B0D8               	btfsc	status,0,c
 36297  009856  D00C               	goto	l2287
 36298                           
 36299                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 36300  009858  0ECF               	movlw	low STR_12
 36301  00985A  2401               	addwf	__get_data@idx,w,c
 36302  00985C  6EF6               	movwf	tblptrl,c
 36303  00985E  0EBF               	movlw	high STR_12
 36304  009860  2002               	addwfc	__get_data@idx+1,w,c
 36305  009862  6EF7               	movwf	tblptrh,c
 36306  009864                     	if	1	;There are 3 active tblptr bytes
 36307  009864  6AF8               	clrf	tblptru,c
 36308  009866  0E00               	movlw	low (__mediumconst shr (0+16))
 36309  009868  22F8               	addwfc	tblptru,f,c
 36310  00986A                     	endif
 36311  00986A  0008               	tblrd		*
 36312  00986C  50F5               	movf	tablat,w,c
 36313  00986E  0012               	return	
 36314  009870                     l2287:
 36315  009870                     l13256:
 36316                           
 36317                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 36318  009870  0E00               	movlw	0
 36319  009872  0012               	return	
 36320  009874                     __end_of__get_data:
 36321                           	opt stack 0
 36322                           tosu	equ	0xFFF
 36323                           tosh	equ	0xFFE
 36324                           tosl	equ	0xFFD
 36325                           pclath	equ	0xFFA
 36326                           tblptru	equ	0xFF8
 36327                           tblptrh	equ	0xFF7
 36328                           tblptrl	equ	0xFF6
 36329                           tablat	equ	0xFF5
 36330                           prodh	equ	0xFF4
 36331                           prodl	equ	0xFF3
 36332                           intcon	equ	0xFF2
 36333                           intcon2	equ	0xFF1
 36334                           intcon3	equ	0xFF0
 36335                           indf0	equ	0xFEF
 36336                           postinc0	equ	0xFEE
 36337                           fsr0h	equ	0xFEA
 36338                           fsr0l	equ	0xFE9
 36339                           wreg	equ	0xFE8
 36340                           indf1	equ	0xFE7
 36341                           postdec1	equ	0xFE5
 36342                           plusw1	equ	0xFE3
 36343                           fsr1h	equ	0xFE2
 36344                           fsr1l	equ	0xFE1
 36345                           indf2	equ	0xFDF
 36346                           postinc2	equ	0xFDE
 36347                           postdec2	equ	0xFDD
 36348                           plusw2	equ	0xFDB
 36349                           fsr2h	equ	0xFDA
 36350                           fsr2l	equ	0xFD9
 36351                           status	equ	0xFD8
 36352                           
 36353 ;; *************** function __parse_file_resize *****************
 36354 ;; Defined at:
 36355 ;;		line 600 in file "api.c"
 36356 ;; Parameters:    Size  Location     Type
 36357 ;;  data            2   84[COMRAM] PTR unsigned char 
 36358 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36359 ;;  out_buffer      2   86[COMRAM] PTR unsigned char 
 36360 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 36361 ;;  out_idx_ptr     2   88[COMRAM] PTR unsigned char 
 36362 ;;		 -> api_parse@out_idx(1), 
 36363 ;; Auto vars:     Size  Location     Type
 36364 ;;  file_size       4   41[BANK0 ] unsigned long 
 36365 ;;  file_number     1   40[BANK0 ] unsigned char 
 36366 ;;  return_value    1   39[BANK0 ] unsigned char 
 36367 ;; Return value:  Size  Location     Type
 36368 ;;                  1    wreg      unsigned char 
 36369 ;; Registers used:
 36370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36371 ;; Tracked objects:
 36372 ;;		On entry : 0/0
 36373 ;;		On exit  : 0/0
 36374 ;;		Unchanged: 0/0
 36375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36376 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36377 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36379 ;;      Totals:         7       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36380 ;;Total ram usage:       13 bytes
 36381 ;; Hardware stack levels used:    1
 36382 ;; Hardware stack levels required when called:    8
 36383 ;; This function calls:
 36384 ;;		_fat_resize_file
 36385 ;; This function is called by:
 36386 ;;		__parse_command_long
 36387 ;; This function uses a non-reentrant model
 36388 ;;
 36389                           
 36390                           	psect	text177
 36391  002B7C                     __ptext177:
 36392                           	opt stack 0
 36393  002B7C                     __parse_file_resize:
 36394                           	opt stack 20
 36395                           
 36396                           ;api.c: 603: uint32_t file_size;;api.c: 604: uint8_t return_value;;api.c: 605: uint8_t f
      +                          ile_number;;api.c: 607: if((data[0]!=COMMAND_FILE_RESIZE) || (data[6]!=0x4C) || (data[7]
      +                          !=0xEA))
 36397                           
 36398                           ;incstack = 0
 36399  002B7C  C055  FFD9         	movff	__parse_file_resize@data,fsr2l
 36400  002B80  C056  FFDA         	movff	__parse_file_resize@data+1,fsr2h
 36401  002B84  0E50               	movlw	80
 36402  002B86  18DE               	xorwf	postinc2,w,c
 36403  002B88  A4D8               	btfss	status,2,c
 36404  002B8A  D014               	goto	u11340
 36405  002B8C  EE20 F006          	lfsr	2,6
 36406  002B90  5055               	movf	__parse_file_resize@data,w,c
 36407  002B92  26D9               	addwf	fsr2l,f,c
 36408  002B94  5056               	movf	__parse_file_resize@data+1,w,c
 36409  002B96  22DA               	addwfc	fsr2h,f,c
 36410  002B98  0E4C               	movlw	76
 36411  002B9A  18DE               	xorwf	postinc2,w,c
 36412  002B9C  A4D8               	btfss	status,2,c
 36413  002B9E  D00A               	goto	u11340
 36414  002BA0  EE20 F007          	lfsr	2,7
 36415  002BA4  5055               	movf	__parse_file_resize@data,w,c
 36416  002BA6  26D9               	addwf	fsr2l,f,c
 36417  002BA8  5056               	movf	__parse_file_resize@data+1,w,c
 36418  002BAA  22DA               	addwfc	fsr2h,f,c
 36419  002BAC  0EEA               	movlw	234
 36420  002BAE  18DE               	xorwf	postinc2,w,c
 36421  002BB0  B4D8               	btfsc	status,2,c
 36422  002BB2  D002               	goto	l2861
 36423  002BB4                     u11340:
 36424                           
 36425                           ;api.c: 608: {;api.c: 609: return 8;
 36426  002BB4  0E08               	movlw	8
 36427  002BB6  0012               	return	
 36428  002BB8                     l2861:
 36429                           
 36430                           ;api.c: 610: };api.c: 613: file_number = data[1];
 36431  002BB8  EE20 F001          	lfsr	2,1
 36432  002BBC  5055               	movf	__parse_file_resize@data,w,c
 36433  002BBE  26D9               	addwf	fsr2l,f,c
 36434  002BC0  5056               	movf	__parse_file_resize@data+1,w,c
 36435  002BC2  22DA               	addwfc	fsr2h,f,c
 36436  002BC4  50DF               	movf	indf2,w,c
 36437  002BC6  0100               	movlb	0	; () banked
 36438  002BC8  6F88               	movwf	__parse_file_resize@file_number& (0+255),b
 36439                           
 36440                           ;api.c: 616: file_size = data[2];
 36441  002BCA  EE20 F002          	lfsr	2,2
 36442  002BCE  5055               	movf	__parse_file_resize@data,w,c
 36443  002BD0  26D9               	addwf	fsr2l,f,c
 36444  002BD2  5056               	movf	__parse_file_resize@data+1,w,c
 36445  002BD4  22DA               	addwfc	fsr2h,f,c
 36446  002BD6  50DF               	movf	indf2,w,c
 36447  002BD8  6E5B               	movwf	??__parse_file_resize& (0+255),c
 36448  002BDA  505B               	movf	??__parse_file_resize,w,c
 36449  002BDC  6F89               	movwf	__parse_file_resize@file_size& (0+255),b
 36450  002BDE  6B8A               	clrf	(__parse_file_resize@file_size+1)& (0+255),b
 36451  002BE0  6B8B               	clrf	(__parse_file_resize@file_size+2)& (0+255),b
 36452  002BE2  6B8C               	clrf	(__parse_file_resize@file_size+3)& (0+255),b
 36453                           
 36454                           ; BSR set to: 0
 36455                           ;api.c: 617: file_size <<= 8;
 36456  002BE4  C08B  F08C         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 36457  002BE8  C08A  F08B         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 36458  002BEC  C089  F08A         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 36459  002BF0  6B89               	clrf	__parse_file_resize@file_size& (0+255),b
 36460                           
 36461                           ; BSR set to: 0
 36462                           ;api.c: 618: file_size |= data[3];
 36463  002BF2  EE20 F003          	lfsr	2,3
 36464  002BF6  5055               	movf	__parse_file_resize@data,w,c
 36465  002BF8  26D9               	addwf	fsr2l,f,c
 36466  002BFA  5056               	movf	__parse_file_resize@data+1,w,c
 36467  002BFC  22DA               	addwfc	fsr2h,f,c
 36468  002BFE  50DF               	movf	indf2,w,c
 36469  002C00  6E5B               	movwf	??__parse_file_resize& (0+255),c
 36470  002C02  505B               	movf	??__parse_file_resize,w,c
 36471  002C04  1389               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 36472                           
 36473                           ;api.c: 619: file_size <<= 8;
 36474  002C06  C08B  F08C         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 36475  002C0A  C08A  F08B         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 36476  002C0E  C089  F08A         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 36477  002C12  6B89               	clrf	__parse_file_resize@file_size& (0+255),b
 36478                           
 36479                           ; BSR set to: 0
 36480                           ;api.c: 620: file_size |= data[4];
 36481  002C14  EE20 F004          	lfsr	2,4
 36482  002C18  5055               	movf	__parse_file_resize@data,w,c
 36483  002C1A  26D9               	addwf	fsr2l,f,c
 36484  002C1C  5056               	movf	__parse_file_resize@data+1,w,c
 36485  002C1E  22DA               	addwfc	fsr2h,f,c
 36486  002C20  50DF               	movf	indf2,w,c
 36487  002C22  6E5B               	movwf	??__parse_file_resize& (0+255),c
 36488  002C24  505B               	movf	??__parse_file_resize,w,c
 36489  002C26  1389               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 36490                           
 36491                           ; BSR set to: 0
 36492                           ;api.c: 621: file_size <<= 8;
 36493  002C28  C08B  F08C         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 36494  002C2C  C08A  F08B         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 36495  002C30  C089  F08A         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 36496  002C34  6B89               	clrf	__parse_file_resize@file_size& (0+255),b
 36497                           
 36498                           ;api.c: 622: file_size |= data[5];
 36499  002C36  EE20 F005          	lfsr	2,5
 36500  002C3A  5055               	movf	__parse_file_resize@data,w,c
 36501  002C3C  26D9               	addwf	fsr2l,f,c
 36502  002C3E  5056               	movf	__parse_file_resize@data+1,w,c
 36503  002C40  22DA               	addwfc	fsr2h,f,c
 36504  002C42  50DF               	movf	indf2,w,c
 36505  002C44  6E5B               	movwf	??__parse_file_resize& (0+255),c
 36506  002C46  505B               	movf	??__parse_file_resize,w,c
 36507  002C48  1389               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 36508                           
 36509                           ; BSR set to: 0
 36510                           ;api.c: 625: return_value = fat_resize_file(file_number, file_size);
 36511  002C4A  C089  F04D         	movff	__parse_file_resize@file_size,fat_resize_file@new_file_size
 36512  002C4E  C08A  F04E         	movff	__parse_file_resize@file_size+1,fat_resize_file@new_file_size+1
 36513  002C52  C08B  F04F         	movff	__parse_file_resize@file_size+2,fat_resize_file@new_file_size+2
 36514  002C56  C08C  F050         	movff	__parse_file_resize@file_size+3,fat_resize_file@new_file_size+3
 36515  002C5A  5188               	movf	__parse_file_resize@file_number& (0+255),w,b
 36516  002C5C  ECBA  F02F         	call	_fat_resize_file
 36517  002C60  0100               	movlb	0	; () banked
 36518  002C62  6F87               	movwf	__parse_file_resize@return_value& (0+255),b
 36519                           
 36520                           ; BSR set to: 0
 36521                           ;api.c: 628: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<58))
 36522  002C64  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 36523  002C68  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 36524  002C6C  50DF               	movf	indf2,w,c
 36525  002C6E  B4D8               	btfsc	status,2,c
 36526  002C70  D085               	goto	l2865
 36527                           
 36528                           ; BSR set to: 0
 36529  002C72  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 36530  002C76  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 36531  002C7A  0E3A               	movlw	58
 36532  002C7C  60DF               	cpfslt	indf2,c
 36533  002C7E  D07E               	goto	l2865
 36534                           
 36535                           ; BSR set to: 0
 36536                           ;api.c: 629: {;api.c: 630: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_RESIZE;
 36537  002C80  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 36538  002C84  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 36539  002C88  CFDF F05B          	movff	indf2,??__parse_file_resize
 36540  002C8C  0E01               	movlw	1
 36541  002C8E  26DF               	addwf	indf2,f,c
 36542  002C90  505B               	movf	??__parse_file_resize,w,c
 36543  002C92  0D01               	mullw	1
 36544  002C94  50F3               	movf	prodl,w,c
 36545  002C96  2457               	addwf	__parse_file_resize@out_buffer,w,c
 36546  002C98  6ED9               	movwf	fsr2l,c
 36547  002C9A  50F4               	movf	prodh,w,c
 36548  002C9C  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 36549  002C9E  6EDA               	movwf	fsr2h,c
 36550  002CA0  0E50               	movlw	80
 36551  002CA2  6EDF               	movwf	indf2,c
 36552                           
 36553                           ;api.c: 631: out_buffer[(*out_idx_ptr)++] = file_number;
 36554  002CA4  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 36555  002CA8  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 36556  002CAC  CFDF F05B          	movff	indf2,??__parse_file_resize
 36557  002CB0  0E01               	movlw	1
 36558  002CB2  26DF               	addwf	indf2,f,c
 36559  002CB4  505B               	movf	??__parse_file_resize,w,c
 36560  002CB6  0D01               	mullw	1
 36561  002CB8  50F3               	movf	prodl,w,c
 36562  002CBA  2457               	addwf	__parse_file_resize@out_buffer,w,c
 36563  002CBC  6ED9               	movwf	fsr2l,c
 36564  002CBE  50F4               	movf	prodh,w,c
 36565  002CC0  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 36566  002CC2  6EDA               	movwf	fsr2h,c
 36567  002CC4  C088  FFDF         	movff	__parse_file_resize@file_number,indf2
 36568                           
 36569                           ;api.c: 632: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)(((file_
      +                          size)>>16)&0xFFFF)))>>8)&0xFF));
 36570  002CC8  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 36571  002CCC  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 36572  002CD0  CFDF F05B          	movff	indf2,??__parse_file_resize
 36573  002CD4  0E01               	movlw	1
 36574  002CD6  26DF               	addwf	indf2,f,c
 36575  002CD8  505B               	movf	??__parse_file_resize,w,c
 36576  002CDA  0D01               	mullw	1
 36577  002CDC  50F3               	movf	prodl,w,c
 36578  002CDE  2457               	addwf	__parse_file_resize@out_buffer,w,c
 36579  002CE0  6ED9               	movwf	fsr2l,c
 36580  002CE2  50F4               	movf	prodh,w,c
 36581  002CE4  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 36582  002CE6  6EDA               	movwf	fsr2h,c
 36583  002CE8  518C               	movf	(__parse_file_resize@file_size+3)& (0+255),w,b
 36584  002CEA  6EDF               	movwf	indf2,c
 36585                           
 36586                           ;api.c: 633: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)(((file_s
      +                          ize)>>16)&0xFFFF)))&0xFF));
 36587  002CEC  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 36588  002CF0  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 36589  002CF4  CFDF F05B          	movff	indf2,??__parse_file_resize
 36590  002CF8  0E01               	movlw	1
 36591  002CFA  26DF               	addwf	indf2,f,c
 36592  002CFC  505B               	movf	??__parse_file_resize,w,c
 36593  002CFE  0D01               	mullw	1
 36594  002D00  50F3               	movf	prodl,w,c
 36595  002D02  2457               	addwf	__parse_file_resize@out_buffer,w,c
 36596  002D04  6ED9               	movwf	fsr2l,c
 36597  002D06  50F4               	movf	prodh,w,c
 36598  002D08  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 36599  002D0A  6EDA               	movwf	fsr2h,c
 36600  002D0C  C08B  FFDF         	movff	__parse_file_resize@file_size+2,indf2
 36601                           
 36602                           ;api.c: 634: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)((file_s
      +                          ize)&0xFFFF)))>>8)&0xFF));
 36603  002D10  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 36604  002D14  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 36605  002D18  CFDF F05B          	movff	indf2,??__parse_file_resize
 36606  002D1C  0E01               	movlw	1
 36607  002D1E  26DF               	addwf	indf2,f,c
 36608  002D20  505B               	movf	??__parse_file_resize,w,c
 36609  002D22  0D01               	mullw	1
 36610  002D24  50F3               	movf	prodl,w,c
 36611  002D26  2457               	addwf	__parse_file_resize@out_buffer,w,c
 36612  002D28  6ED9               	movwf	fsr2l,c
 36613  002D2A  50F4               	movf	prodh,w,c
 36614  002D2C  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 36615  002D2E  6EDA               	movwf	fsr2h,c
 36616  002D30  518A               	movf	(__parse_file_resize@file_size+1)& (0+255),w,b
 36617  002D32  6EDF               	movwf	indf2,c
 36618                           
 36619                           ;api.c: 635: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)((file_si
      +                          ze)&0xFFFF)))&0xFF));
 36620  002D34  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 36621  002D38  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 36622  002D3C  CFDF F05B          	movff	indf2,??__parse_file_resize
 36623  002D40  0E01               	movlw	1
 36624  002D42  26DF               	addwf	indf2,f,c
 36625  002D44  505B               	movf	??__parse_file_resize,w,c
 36626  002D46  0D01               	mullw	1
 36627  002D48  50F3               	movf	prodl,w,c
 36628  002D4A  2457               	addwf	__parse_file_resize@out_buffer,w,c
 36629  002D4C  6ED9               	movwf	fsr2l,c
 36630  002D4E  50F4               	movf	prodh,w,c
 36631  002D50  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 36632  002D52  6EDA               	movwf	fsr2h,c
 36633  002D54  C089  FFDF         	movff	__parse_file_resize@file_size,indf2
 36634                           
 36635                           ;api.c: 636: out_buffer[(*out_idx_ptr)++] = return_value;
 36636  002D58  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 36637  002D5C  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 36638  002D60  CFDF F05B          	movff	indf2,??__parse_file_resize
 36639  002D64  0E01               	movlw	1
 36640  002D66  26DF               	addwf	indf2,f,c
 36641  002D68  505B               	movf	??__parse_file_resize,w,c
 36642  002D6A  0D01               	mullw	1
 36643  002D6C  50F3               	movf	prodl,w,c
 36644  002D6E  2457               	addwf	__parse_file_resize@out_buffer,w,c
 36645  002D70  6ED9               	movwf	fsr2l,c
 36646  002D72  50F4               	movf	prodh,w,c
 36647  002D74  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 36648  002D76  6EDA               	movwf	fsr2h,c
 36649  002D78  C087  FFDF         	movff	__parse_file_resize@return_value,indf2
 36650  002D7C                     l2865:
 36651                           
 36652                           ; BSR set to: 0
 36653                           ;api.c: 637: };api.c: 639: return 8;
 36654                           
 36655                           ; BSR set to: 0
 36656  002D7C  0E08               	movlw	8
 36657  002D7E  0012               	return	
 36658  002D80                     __end_of__parse_file_resize:
 36659                           	opt stack 0
 36660                           tosu	equ	0xFFF
 36661                           tosh	equ	0xFFE
 36662                           tosl	equ	0xFFD
 36663                           pclath	equ	0xFFA
 36664                           tblptru	equ	0xFF8
 36665                           tblptrh	equ	0xFF7
 36666                           tblptrl	equ	0xFF6
 36667                           tablat	equ	0xFF5
 36668                           prodh	equ	0xFF4
 36669                           prodl	equ	0xFF3
 36670                           intcon	equ	0xFF2
 36671                           intcon2	equ	0xFF1
 36672                           intcon3	equ	0xFF0
 36673                           indf0	equ	0xFEF
 36674                           postinc0	equ	0xFEE
 36675                           fsr0h	equ	0xFEA
 36676                           fsr0l	equ	0xFE9
 36677                           wreg	equ	0xFE8
 36678                           indf1	equ	0xFE7
 36679                           postdec1	equ	0xFE5
 36680                           plusw1	equ	0xFE3
 36681                           fsr1h	equ	0xFE2
 36682                           fsr1l	equ	0xFE1
 36683                           indf2	equ	0xFDF
 36684                           postinc2	equ	0xFDE
 36685                           postdec2	equ	0xFDD
 36686                           plusw2	equ	0xFDB
 36687                           fsr2h	equ	0xFDA
 36688                           fsr2l	equ	0xFD9
 36689                           status	equ	0xFD8
 36690                           
 36691 ;; *************** function __parse_file_rename *****************
 36692 ;; Defined at:
 36693 ;;		line 704 in file "api.c"
 36694 ;; Parameters:    Size  Location     Type
 36695 ;;  data            2    0[BANK0 ] PTR unsigned char 
 36696 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36697 ;;  out_buffer      2    2[BANK0 ] PTR unsigned char 
 36698 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 36699 ;;  out_idx_ptr     2    4[BANK0 ] PTR unsigned char 
 36700 ;;		 -> api_parse@out_idx(1), 
 36701 ;; Auto vars:     Size  Location     Type
 36702 ;;  file_number     1    7[BANK0 ] unsigned char 
 36703 ;;  return_value    1    6[BANK0 ] unsigned char 
 36704 ;; Return value:  Size  Location     Type
 36705 ;;                  1    wreg      unsigned char 
 36706 ;; Registers used:
 36707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36708 ;; Tracked objects:
 36709 ;;		On entry : 0/0
 36710 ;;		On exit  : 0/0
 36711 ;;		Unchanged: 0/0
 36712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36713 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36716 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36717 ;;Total ram usage:        9 bytes
 36718 ;; Hardware stack levels used:    1
 36719 ;; Hardware stack levels required when called:    7
 36720 ;; This function calls:
 36721 ;;		_fat_rename_file
 36722 ;; This function is called by:
 36723 ;;		__parse_command_long
 36724 ;; This function uses a non-reentrant model
 36725 ;;
 36726                           
 36727                           	psect	text178
 36728  005D78                     __ptext178:
 36729                           	opt stack 0
 36730  005D78                     __parse_file_rename:
 36731                           	opt stack 21
 36732                           
 36733                           ;api.c: 708: uint8_t file_number;;api.c: 709: uint8_t return_value;;api.c: 711: if((data
      +                          [0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 36734                           
 36735                           ;incstack = 0
 36736  005D78  C060  FFD9         	movff	__parse_file_rename@data,fsr2l
 36737  005D7C  C061  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 36738  005D80  0E53               	movlw	83
 36739  005D82  18DE               	xorwf	postinc2,w,c
 36740  005D84  A4D8               	btfss	status,2,c
 36741  005D86  D015               	goto	u11490
 36742  005D88  0100               	movlb	0	; () banked
 36743  005D8A  EE20 F00D          	lfsr	2,13
 36744  005D8E  5160               	movf	__parse_file_rename@data& (0+255),w,b
 36745  005D90  26D9               	addwf	fsr2l,f,c
 36746  005D92  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 36747  005D94  22DA               	addwfc	fsr2h,f,c
 36748  005D96  0E7E               	movlw	126
 36749  005D98  18DE               	xorwf	postinc2,w,c
 36750  005D9A  A4D8               	btfss	status,2,c
 36751  005D9C  D00A               	goto	u11490
 36752                           
 36753                           ; BSR set to: 0
 36754  005D9E  EE20 F00E          	lfsr	2,14
 36755  005DA2  5160               	movf	__parse_file_rename@data& (0+255),w,b
 36756  005DA4  26D9               	addwf	fsr2l,f,c
 36757  005DA6  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 36758  005DA8  22DA               	addwfc	fsr2h,f,c
 36759  005DAA  0E18               	movlw	24
 36760  005DAC  18DE               	xorwf	postinc2,w,c
 36761  005DAE  B4D8               	btfsc	status,2,c
 36762  005DB0  D002               	goto	l2882
 36763  005DB2                     u11490:
 36764                           
 36765                           ;api.c: 712: {;api.c: 713: return 15;
 36766                           
 36767                           ; BSR set to: 0
 36768  005DB2  0E0F               	movlw	15
 36769  005DB4  0012               	return	
 36770  005DB6                     l2882:
 36771                           
 36772                           ;api.c: 714: };api.c: 717: file_number = data[1];
 36773  005DB6  0100               	movlb	0	; () banked
 36774  005DB8  EE20 F001          	lfsr	2,1
 36775  005DBC  5160               	movf	__parse_file_rename@data& (0+255),w,b
 36776  005DBE  26D9               	addwf	fsr2l,f,c
 36777  005DC0  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 36778  005DC2  22DA               	addwfc	fsr2h,f,c
 36779  005DC4  50DF               	movf	indf2,w,c
 36780  005DC6  6F67               	movwf	__parse_file_rename@file_number& (0+255),b
 36781                           
 36782                           ; BSR set to: 0
 36783                           ;api.c: 720: return_value = fat_rename_file(file_number, &data[2], &data[10]);
 36784  005DC8  0E02               	movlw	2
 36785  005DCA  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 36786  005DCC  6E38               	movwf	fat_rename_file@name,c
 36787  005DCE  0E00               	movlw	0
 36788  005DD0  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 36789  005DD2  6E39               	movwf	fat_rename_file@name+1,c
 36790  005DD4  0E0A               	movlw	10
 36791  005DD6  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 36792  005DD8  6E3A               	movwf	fat_rename_file@extension,c
 36793  005DDA  0E00               	movlw	0
 36794  005DDC  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 36795  005DDE  6E3B               	movwf	fat_rename_file@extension+1,c
 36796  005DE0  5167               	movf	__parse_file_rename@file_number& (0+255),w,b
 36797  005DE2  ECBB  F03D         	call	_fat_rename_file
 36798  005DE6  0100               	movlb	0	; () banked
 36799  005DE8  6F66               	movwf	__parse_file_rename@return_value& (0+255),b
 36800                           
 36801                           ; BSR set to: 0
 36802                           ;api.c: 723: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 36803  005DEA  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 36804  005DEE  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 36805  005DF2  50DF               	movf	indf2,w,c
 36806  005DF4  B4D8               	btfsc	status,2,c
 36807  005DF6  D03D               	goto	l2886
 36808                           
 36809                           ; BSR set to: 0
 36810  005DF8  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 36811  005DFC  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 36812  005E00  0E3E               	movlw	62
 36813  005E02  60DF               	cpfslt	indf2,c
 36814  005E04  D036               	goto	l2886
 36815                           
 36816                           ; BSR set to: 0
 36817                           ;api.c: 724: {;api.c: 725: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_RENAME;
 36818  005E06  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 36819  005E0A  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 36820  005E0E  CFDF F05F          	movff	indf2,??__parse_file_rename
 36821  005E12  0E01               	movlw	1
 36822  005E14  26DF               	addwf	indf2,f,c
 36823  005E16  505F               	movf	??__parse_file_rename,w,c
 36824  005E18  0D01               	mullw	1
 36825  005E1A  50F3               	movf	prodl,w,c
 36826  005E1C  2562               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 36827  005E1E  6ED9               	movwf	fsr2l,c
 36828  005E20  50F4               	movf	prodh,w,c
 36829  005E22  2163               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 36830  005E24  6EDA               	movwf	fsr2h,c
 36831  005E26  0E53               	movlw	83
 36832  005E28  6EDF               	movwf	indf2,c
 36833                           
 36834                           ;api.c: 726: out_buffer[(*out_idx_ptr)++] = file_number;
 36835  005E2A  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 36836  005E2E  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 36837  005E32  CFDF F05F          	movff	indf2,??__parse_file_rename
 36838  005E36  0E01               	movlw	1
 36839  005E38  26DF               	addwf	indf2,f,c
 36840  005E3A  505F               	movf	??__parse_file_rename,w,c
 36841  005E3C  0D01               	mullw	1
 36842  005E3E  50F3               	movf	prodl,w,c
 36843  005E40  2562               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 36844  005E42  6ED9               	movwf	fsr2l,c
 36845  005E44  50F4               	movf	prodh,w,c
 36846  005E46  2163               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 36847  005E48  6EDA               	movwf	fsr2h,c
 36848  005E4A  C067  FFDF         	movff	__parse_file_rename@file_number,indf2
 36849                           
 36850                           ;api.c: 727: out_buffer[(*out_idx_ptr)++] = return_value;
 36851  005E4E  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 36852  005E52  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 36853  005E56  CFDF F05F          	movff	indf2,??__parse_file_rename
 36854  005E5A  0E01               	movlw	1
 36855  005E5C  26DF               	addwf	indf2,f,c
 36856  005E5E  505F               	movf	??__parse_file_rename,w,c
 36857  005E60  0D01               	mullw	1
 36858  005E62  50F3               	movf	prodl,w,c
 36859  005E64  2562               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 36860  005E66  6ED9               	movwf	fsr2l,c
 36861  005E68  50F4               	movf	prodh,w,c
 36862  005E6A  2163               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 36863  005E6C  6EDA               	movwf	fsr2h,c
 36864  005E6E  C066  FFDF         	movff	__parse_file_rename@return_value,indf2
 36865  005E72                     l2886:
 36866                           
 36867                           ; BSR set to: 0
 36868                           ;api.c: 728: };api.c: 730: return 15;
 36869                           
 36870                           ; BSR set to: 0
 36871  005E72  0E0F               	movlw	15
 36872  005E74  0012               	return	
 36873  005E76                     __end_of__parse_file_rename:
 36874                           	opt stack 0
 36875                           tosu	equ	0xFFF
 36876                           tosh	equ	0xFFE
 36877                           tosl	equ	0xFFD
 36878                           pclath	equ	0xFFA
 36879                           tblptru	equ	0xFF8
 36880                           tblptrh	equ	0xFF7
 36881                           tblptrl	equ	0xFF6
 36882                           tablat	equ	0xFF5
 36883                           prodh	equ	0xFF4
 36884                           prodl	equ	0xFF3
 36885                           intcon	equ	0xFF2
 36886                           intcon2	equ	0xFF1
 36887                           intcon3	equ	0xFF0
 36888                           indf0	equ	0xFEF
 36889                           postinc0	equ	0xFEE
 36890                           fsr0h	equ	0xFEA
 36891                           fsr0l	equ	0xFE9
 36892                           wreg	equ	0xFE8
 36893                           indf1	equ	0xFE7
 36894                           postdec1	equ	0xFE5
 36895                           plusw1	equ	0xFE3
 36896                           fsr1h	equ	0xFE2
 36897                           fsr1l	equ	0xFE1
 36898                           indf2	equ	0xFDF
 36899                           postinc2	equ	0xFDE
 36900                           postdec2	equ	0xFDD
 36901                           plusw2	equ	0xFDB
 36902                           fsr2h	equ	0xFDA
 36903                           fsr2l	equ	0xFD9
 36904                           status	equ	0xFD8
 36905                           
 36906 ;; *************** function _fat_rename_file *****************
 36907 ;; Defined at:
 36908 ;;		line 719 in file "fat16.c"
 36909 ;; Parameters:    Size  Location     Type
 36910 ;;  file_number     1    wreg     unsigned char 
 36911 ;;  name            2   55[COMRAM] PTR unsigned char 
 36912 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36913 ;;  extension       2   57[COMRAM] PTR unsigned char 
 36914 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36915 ;; Auto vars:     Size  Location     Type
 36916 ;;  file_number     1   59[COMRAM] unsigned char 
 36917 ;;  root           32   61[COMRAM] struct .
 36918 ;;  cntr            1   93[COMRAM] unsigned char 
 36919 ;;  return_code     1   60[COMRAM] unsigned char 
 36920 ;; Return value:  Size  Location     Type
 36921 ;;                  1    wreg      unsigned char 
 36922 ;; Registers used:
 36923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36924 ;; Tracked objects:
 36925 ;;		On entry : 0/0
 36926 ;;		On exit  : 0/0
 36927 ;;		Unchanged: 0/0
 36928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36930 ;;      Locals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36932 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36933 ;;Total ram usage:       39 bytes
 36934 ;; Hardware stack levels used:    1
 36935 ;; Hardware stack levels required when called:    6
 36936 ;; This function calls:
 36937 ;;		__write_root
 36938 ;;		_fat_get_file_information
 36939 ;; This function is called by:
 36940 ;;		__parse_file_rename
 36941 ;; This function uses a non-reentrant model
 36942 ;;
 36943                           
 36944                           	psect	text179
 36945  007B76                     __ptext179:
 36946                           	opt stack 0
 36947  007B76                     _fat_rename_file:
 36948                           	opt stack 21
 36949                           
 36950                           ;incstack = 0
 36951                           ;fat_rename_file@file_number stored from wreg
 36952  007B76  6E3C               	movwf	fat_rename_file@file_number,c
 36953                           
 36954                           ;fat16.c: 721: rootEntry_t root;;fat16.c: 722: uint8_t cntr;;fat16.c: 723: uint8_t retur
      +                          n_code;;fat16.c: 726: return_code = fat_get_file_information(file_number, &root);
 36955  007B78  0E3E               	movlw	low fat_rename_file@root
 36956  007B7A  6E30               	movwf	fat_get_file_information@data,c
 36957  007B7C  0E00               	movlw	high fat_rename_file@root
 36958  007B7E  6E31               	movwf	fat_get_file_information@data+1,c
 36959  007B80  503C               	movf	fat_rename_file@file_number,w,c
 36960  007B82  EC0A  F042         	call	_fat_get_file_information
 36961  007B86  6E3D               	movwf	fat_rename_file@return_code,c
 36962                           
 36963                           ;fat16.c: 727: if(return_code!=0x00)
 36964  007B88  503D               	movf	fat_rename_file@return_code,w,c
 36965  007B8A  B4D8               	btfsc	status,2,c
 36966  007B8C  D002               	goto	l2113
 36967                           
 36968                           ;fat16.c: 728: {;fat16.c: 730: return return_code;
 36969  007B8E  503D               	movf	fat_rename_file@return_code,w,c
 36970  007B90  0012               	return	
 36971  007B92                     l2113:
 36972                           
 36973                           ;fat16.c: 731: };fat16.c: 734: for(cntr=0; cntr<8; ++cntr)
 36974  007B92  0E00               	movlw	0
 36975  007B94  6E5E               	movwf	fat_rename_file@cntr,c
 36976  007B96                     l13758:
 36977  007B96  0E07               	movlw	7
 36978  007B98  645E               	cpfsgt	fat_rename_file@cntr,c
 36979  007B9A  D001               	goto	l2115
 36980  007B9C  D014               	goto	u10680
 36981  007B9E                     l2115:
 36982                           
 36983                           ;fat16.c: 735: {;fat16.c: 736: root.fileName[cntr] = name[cntr];
 36984  007B9E  505E               	movf	fat_rename_file@cntr,w,c
 36985  007BA0  0D01               	mullw	1
 36986  007BA2  50F3               	movf	prodl,w,c
 36987  007BA4  2438               	addwf	fat_rename_file@name,w,c
 36988  007BA6  6ED9               	movwf	fsr2l,c
 36989  007BA8  50F4               	movf	prodh,w,c
 36990  007BAA  2039               	addwfc	fat_rename_file@name+1,w,c
 36991  007BAC  6EDA               	movwf	fsr2h,c
 36992  007BAE  505E               	movf	fat_rename_file@cntr,w,c
 36993  007BB0  0D01               	mullw	1
 36994  007BB2  0E3E               	movlw	low fat_rename_file@root
 36995  007BB4  24F3               	addwf	prodl,w,c
 36996  007BB6  6EE1               	movwf	fsr1l,c
 36997  007BB8  0E00               	movlw	high fat_rename_file@root
 36998  007BBA  20F4               	addwfc	prodh,w,c
 36999  007BBC  6EE2               	movwf	fsr1h,c
 37000  007BBE  CFDF FFE7          	movff	indf2,indf1
 37001  007BC2  2A5E               	incf	fat_rename_file@cntr,f,c
 37002  007BC4  D7E8               	goto	l13758
 37003  007BC6                     u10680:
 37004                           
 37005                           ;fat16.c: 737: };fat16.c: 740: for(cntr=0; cntr<3; ++cntr)
 37006  007BC6  0E00               	movlw	0
 37007  007BC8  6E5E               	movwf	fat_rename_file@cntr,c
 37008  007BCA                     l13770:
 37009  007BCA  0E02               	movlw	2
 37010  007BCC  645E               	cpfsgt	fat_rename_file@cntr,c
 37011  007BCE  D001               	goto	l2117
 37012  007BD0  D018               	goto	u10700
 37013  007BD2                     l2117:
 37014                           
 37015                           ;fat16.c: 741: {;fat16.c: 742: root.fileExtension[cntr] = extension[cntr];
 37016  007BD2  505E               	movf	fat_rename_file@cntr,w,c
 37017  007BD4  0D01               	mullw	1
 37018  007BD6  50F3               	movf	prodl,w,c
 37019  007BD8  243A               	addwf	fat_rename_file@extension,w,c
 37020  007BDA  6ED9               	movwf	fsr2l,c
 37021  007BDC  50F4               	movf	prodh,w,c
 37022  007BDE  203B               	addwfc	fat_rename_file@extension+1,w,c
 37023  007BE0  6EDA               	movwf	fsr2h,c
 37024  007BE2  505E               	movf	fat_rename_file@cntr,w,c
 37025  007BE4  0D01               	mullw	1
 37026  007BE6  0E08               	movlw	8
 37027  007BE8  26F3               	addwf	prodl,f,c
 37028  007BEA  0E00               	movlw	0
 37029  007BEC  22F4               	addwfc	prodh,f,c
 37030  007BEE  0E3E               	movlw	low fat_rename_file@root
 37031  007BF0  24F3               	addwf	prodl,w,c
 37032  007BF2  6EE1               	movwf	fsr1l,c
 37033  007BF4  0E00               	movlw	high fat_rename_file@root
 37034  007BF6  20F4               	addwfc	prodh,w,c
 37035  007BF8  6EE2               	movwf	fsr1h,c
 37036  007BFA  CFDF FFE7          	movff	indf2,indf1
 37037  007BFE  2A5E               	incf	fat_rename_file@cntr,f,c
 37038  007C00  D7E4               	goto	l13770
 37039  007C02                     u10700:
 37040                           
 37041                           ;fat16.c: 743: };fat16.c: 746: _write_root(file_number, &root);
 37042  007C02  0E3E               	movlw	low fat_rename_file@root
 37043  007C04  6E29               	movwf	__write_root@data,c
 37044  007C06  0E00               	movlw	high fat_rename_file@root
 37045  007C08  6E2A               	movwf	__write_root@data+1,c
 37046  007C0A  503C               	movf	fat_rename_file@file_number,w,c
 37047  007C0C  EC16  F049         	call	__write_root
 37048                           
 37049                           ;fat16.c: 748: return 0x00;
 37050  007C10  0E00               	movlw	0
 37051  007C12  0012               	return	
 37052  007C14                     __end_of_fat_rename_file:
 37053                           	opt stack 0
 37054                           tosu	equ	0xFFF
 37055                           tosh	equ	0xFFE
 37056                           tosl	equ	0xFFD
 37057                           pclath	equ	0xFFA
 37058                           tblptru	equ	0xFF8
 37059                           tblptrh	equ	0xFF7
 37060                           tblptrl	equ	0xFF6
 37061                           tablat	equ	0xFF5
 37062                           prodh	equ	0xFF4
 37063                           prodl	equ	0xFF3
 37064                           intcon	equ	0xFF2
 37065                           intcon2	equ	0xFF1
 37066                           intcon3	equ	0xFF0
 37067                           indf0	equ	0xFEF
 37068                           postinc0	equ	0xFEE
 37069                           fsr0h	equ	0xFEA
 37070                           fsr0l	equ	0xFE9
 37071                           wreg	equ	0xFE8
 37072                           indf1	equ	0xFE7
 37073                           postdec1	equ	0xFE5
 37074                           plusw1	equ	0xFE3
 37075                           fsr1h	equ	0xFE2
 37076                           fsr1l	equ	0xFE1
 37077                           indf2	equ	0xFDF
 37078                           postinc2	equ	0xFDE
 37079                           postdec2	equ	0xFDD
 37080                           plusw2	equ	0xFDB
 37081                           fsr2h	equ	0xFDA
 37082                           fsr2l	equ	0xFD9
 37083                           status	equ	0xFD8
 37084                           
 37085 ;; *************** function __parse_file_modify *****************
 37086 ;; Defined at:
 37087 ;;		line 769 in file "api.c"
 37088 ;; Parameters:    Size  Location     Type
 37089 ;;  data            2   85[COMRAM] PTR unsigned char 
 37090 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37091 ;;  out_buffer      2   87[COMRAM] PTR unsigned char 
 37092 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 37093 ;;  out_idx_ptr     2   89[COMRAM] PTR unsigned char 
 37094 ;;		 -> api_parse@out_idx(1), 
 37095 ;; Auto vars:     Size  Location     Type
 37096 ;;  start_byte      4   50[BANK0 ] unsigned long 
 37097 ;;  number_of_by    2   48[BANK0 ] unsigned int 
 37098 ;;  file_number     1   47[BANK0 ] unsigned char 
 37099 ;;  return_value    1   46[BANK0 ] unsigned char 
 37100 ;; Return value:  Size  Location     Type
 37101 ;;                  1    wreg      unsigned char 
 37102 ;; Registers used:
 37103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37104 ;; Tracked objects:
 37105 ;;		On entry : 0/0
 37106 ;;		On exit  : 0/0
 37107 ;;		Unchanged: 0/0
 37108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37109 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37110 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37112 ;;      Totals:         7       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37113 ;;Total ram usage:       15 bytes
 37114 ;; Hardware stack levels used:    1
 37115 ;; Hardware stack levels required when called:    8
 37116 ;; This function calls:
 37117 ;;		_fat_modify_file
 37118 ;; This function is called by:
 37119 ;;		__parse_command_long
 37120 ;; This function uses a non-reentrant model
 37121 ;;
 37122                           
 37123                           	psect	text180
 37124  001DCC                     __ptext180:
 37125                           	opt stack 0
 37126  001DCC                     __parse_file_modify:
 37127                           	opt stack 20
 37128                           
 37129                           ;api.c: 771: uint16_t number_of_bytes;;api.c: 772: uint32_t start_byte;;api.c: 773: uint
      +                          8_t file_number;;api.c: 774: uint8_t return_value;;api.c: 777: if((data[0]!=COMMAND_FILE
      +                          _MODIFY) || (data[7]!=0x0F) || (data[8]!=0x9B))
 37130                           
 37131                           ;incstack = 0
 37132  001DCC  C056  FFD9         	movff	__parse_file_modify@data,fsr2l
 37133  001DD0  C057  FFDA         	movff	__parse_file_modify@data+1,fsr2h
 37134  001DD4  0E55               	movlw	85
 37135  001DD6  18DE               	xorwf	postinc2,w,c
 37136  001DD8  A4D8               	btfss	status,2,c
 37137  001DDA  D014               	goto	u11590
 37138  001DDC  EE20 F007          	lfsr	2,7
 37139  001DE0  5056               	movf	__parse_file_modify@data,w,c
 37140  001DE2  26D9               	addwf	fsr2l,f,c
 37141  001DE4  5057               	movf	__parse_file_modify@data+1,w,c
 37142  001DE6  22DA               	addwfc	fsr2h,f,c
 37143  001DE8  0E0F               	movlw	15
 37144  001DEA  18DE               	xorwf	postinc2,w,c
 37145  001DEC  A4D8               	btfss	status,2,c
 37146  001DEE  D00A               	goto	u11590
 37147  001DF0  EE20 F008          	lfsr	2,8
 37148  001DF4  5056               	movf	__parse_file_modify@data,w,c
 37149  001DF6  26D9               	addwf	fsr2l,f,c
 37150  001DF8  5057               	movf	__parse_file_modify@data+1,w,c
 37151  001DFA  22DA               	addwfc	fsr2h,f,c
 37152  001DFC  0E9B               	movlw	155
 37153  001DFE  18DE               	xorwf	postinc2,w,c
 37154  001E00  B4D8               	btfsc	status,2,c
 37155  001E02  D002               	goto	l2896
 37156  001E04                     u11590:
 37157                           
 37158                           ;api.c: 778: {;api.c: 780: return 65;
 37159  001E04  0E41               	movlw	65
 37160  001E06  0012               	return	
 37161  001E08                     l2896:
 37162                           
 37163                           ;api.c: 781: };api.c: 784: file_number = data[1];
 37164  001E08  EE20 F001          	lfsr	2,1
 37165  001E0C  5056               	movf	__parse_file_modify@data,w,c
 37166  001E0E  26D9               	addwf	fsr2l,f,c
 37167  001E10  5057               	movf	__parse_file_modify@data+1,w,c
 37168  001E12  22DA               	addwfc	fsr2h,f,c
 37169  001E14  50DF               	movf	indf2,w,c
 37170  001E16  0100               	movlb	0	; () banked
 37171  001E18  6F8F               	movwf	__parse_file_modify@file_number& (0+255),b
 37172                           
 37173                           ;api.c: 787: number_of_bytes = data[6];
 37174  001E1A  EE20 F006          	lfsr	2,6
 37175  001E1E  5056               	movf	__parse_file_modify@data,w,c
 37176  001E20  26D9               	addwf	fsr2l,f,c
 37177  001E22  5057               	movf	__parse_file_modify@data+1,w,c
 37178  001E24  22DA               	addwfc	fsr2h,f,c
 37179  001E26  50DF               	movf	indf2,w,c
 37180  001E28  6E5C               	movwf	??__parse_file_modify& (0+255),c
 37181  001E2A  505C               	movf	??__parse_file_modify,w,c
 37182  001E2C  6F90               	movwf	__parse_file_modify@number_of_bytes& (0+255),b
 37183  001E2E  6B91               	clrf	(__parse_file_modify@number_of_bytes+1)& (0+255),b
 37184                           
 37185                           ;api.c: 790: start_byte = data[2];
 37186  001E30  EE20 F002          	lfsr	2,2
 37187  001E34  5056               	movf	__parse_file_modify@data,w,c
 37188  001E36  26D9               	addwf	fsr2l,f,c
 37189  001E38  5057               	movf	__parse_file_modify@data+1,w,c
 37190  001E3A  22DA               	addwfc	fsr2h,f,c
 37191  001E3C  50DF               	movf	indf2,w,c
 37192  001E3E  6E5C               	movwf	??__parse_file_modify& (0+255),c
 37193  001E40  505C               	movf	??__parse_file_modify,w,c
 37194  001E42  6F92               	movwf	__parse_file_modify@start_byte& (0+255),b
 37195  001E44  6B93               	clrf	(__parse_file_modify@start_byte+1)& (0+255),b
 37196  001E46  6B94               	clrf	(__parse_file_modify@start_byte+2)& (0+255),b
 37197  001E48  6B95               	clrf	(__parse_file_modify@start_byte+3)& (0+255),b
 37198                           
 37199                           ; BSR set to: 0
 37200                           ;api.c: 791: start_byte <<= 8;
 37201  001E4A  C094  F095         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 37202  001E4E  C093  F094         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 37203  001E52  C092  F093         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 37204  001E56  6B92               	clrf	__parse_file_modify@start_byte& (0+255),b
 37205                           
 37206                           ; BSR set to: 0
 37207                           ;api.c: 792: start_byte |= data[3];
 37208  001E58  EE20 F003          	lfsr	2,3
 37209  001E5C  5056               	movf	__parse_file_modify@data,w,c
 37210  001E5E  26D9               	addwf	fsr2l,f,c
 37211  001E60  5057               	movf	__parse_file_modify@data+1,w,c
 37212  001E62  22DA               	addwfc	fsr2h,f,c
 37213  001E64  50DF               	movf	indf2,w,c
 37214  001E66  6E5C               	movwf	??__parse_file_modify& (0+255),c
 37215  001E68  505C               	movf	??__parse_file_modify,w,c
 37216  001E6A  1392               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 37217                           
 37218                           ;api.c: 793: start_byte <<= 8;
 37219  001E6C  C094  F095         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 37220  001E70  C093  F094         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 37221  001E74  C092  F093         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 37222  001E78  6B92               	clrf	__parse_file_modify@start_byte& (0+255),b
 37223                           
 37224                           ; BSR set to: 0
 37225                           ;api.c: 794: start_byte |= data[4];
 37226  001E7A  EE20 F004          	lfsr	2,4
 37227  001E7E  5056               	movf	__parse_file_modify@data,w,c
 37228  001E80  26D9               	addwf	fsr2l,f,c
 37229  001E82  5057               	movf	__parse_file_modify@data+1,w,c
 37230  001E84  22DA               	addwfc	fsr2h,f,c
 37231  001E86  50DF               	movf	indf2,w,c
 37232  001E88  6E5C               	movwf	??__parse_file_modify& (0+255),c
 37233  001E8A  505C               	movf	??__parse_file_modify,w,c
 37234  001E8C  1392               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 37235                           
 37236                           ; BSR set to: 0
 37237                           ;api.c: 795: start_byte <<= 8;
 37238  001E8E  C094  F095         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 37239  001E92  C093  F094         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 37240  001E96  C092  F093         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 37241  001E9A  6B92               	clrf	__parse_file_modify@start_byte& (0+255),b
 37242                           
 37243                           ;api.c: 796: start_byte |= data[5];
 37244  001E9C  EE20 F005          	lfsr	2,5
 37245  001EA0  5056               	movf	__parse_file_modify@data,w,c
 37246  001EA2  26D9               	addwf	fsr2l,f,c
 37247  001EA4  5057               	movf	__parse_file_modify@data+1,w,c
 37248  001EA6  22DA               	addwfc	fsr2h,f,c
 37249  001EA8  50DF               	movf	indf2,w,c
 37250  001EAA  6E5C               	movwf	??__parse_file_modify& (0+255),c
 37251  001EAC  505C               	movf	??__parse_file_modify,w,c
 37252  001EAE  1392               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 37253                           
 37254                           ; BSR set to: 0
 37255                           ;api.c: 798: return_value = fat_modify_file(file_number, start_byte, number_of_bytes, &d
      +                          ata[9]);
 37256  001EB0  C092  F042         	movff	__parse_file_modify@start_byte,fat_modify_file@start_byte
 37257  001EB4  C093  F043         	movff	__parse_file_modify@start_byte+1,fat_modify_file@start_byte+1
 37258  001EB8  C094  F044         	movff	__parse_file_modify@start_byte+2,fat_modify_file@start_byte+2
 37259  001EBC  C095  F045         	movff	__parse_file_modify@start_byte+3,fat_modify_file@start_byte+3
 37260  001EC0  C090  F046         	movff	__parse_file_modify@number_of_bytes,fat_modify_file@length
 37261  001EC4  C091  F047         	movff	__parse_file_modify@number_of_bytes+1,fat_modify_file@length+1
 37262  001EC8  0E09               	movlw	9
 37263  001ECA  2456               	addwf	__parse_file_modify@data,w,c
 37264  001ECC  6E48               	movwf	fat_modify_file@data,c
 37265  001ECE  0E00               	movlw	0
 37266  001ED0  2057               	addwfc	__parse_file_modify@data+1,w,c
 37267  001ED2  6E49               	movwf	fat_modify_file@data+1,c
 37268  001ED4  518F               	movf	__parse_file_modify@file_number& (0+255),w,b
 37269  001ED6  EC7E  F012         	call	_fat_modify_file
 37270  001EDA  0100               	movlb	0	; () banked
 37271  001EDC  6F8E               	movwf	__parse_file_modify@return_value& (0+255),b
 37272                           
 37273                           ; BSR set to: 0
 37274                           ;api.c: 801: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<56))
 37275  001EDE  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 37276  001EE2  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 37277  001EE6  50DF               	movf	indf2,w,c
 37278  001EE8  B4D8               	btfsc	status,2,c
 37279  001EEA  D0A9               	goto	l2900
 37280                           
 37281                           ; BSR set to: 0
 37282  001EEC  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 37283  001EF0  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 37284  001EF4  0E38               	movlw	56
 37285  001EF6  60DF               	cpfslt	indf2,c
 37286  001EF8  D0A2               	goto	l2900
 37287                           
 37288                           ; BSR set to: 0
 37289                           ;api.c: 802: {;api.c: 803: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_MODIFY;
 37290  001EFA  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 37291  001EFE  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 37292  001F02  CFDF F05C          	movff	indf2,??__parse_file_modify
 37293  001F06  0E01               	movlw	1
 37294  001F08  26DF               	addwf	indf2,f,c
 37295  001F0A  505C               	movf	??__parse_file_modify,w,c
 37296  001F0C  0D01               	mullw	1
 37297  001F0E  50F3               	movf	prodl,w,c
 37298  001F10  2458               	addwf	__parse_file_modify@out_buffer,w,c
 37299  001F12  6ED9               	movwf	fsr2l,c
 37300  001F14  50F4               	movf	prodh,w,c
 37301  001F16  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 37302  001F18  6EDA               	movwf	fsr2h,c
 37303  001F1A  0E55               	movlw	85
 37304  001F1C  6EDF               	movwf	indf2,c
 37305                           
 37306                           ;api.c: 804: out_buffer[(*out_idx_ptr)++] = file_number;
 37307  001F1E  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 37308  001F22  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 37309  001F26  CFDF F05C          	movff	indf2,??__parse_file_modify
 37310  001F2A  0E01               	movlw	1
 37311  001F2C  26DF               	addwf	indf2,f,c
 37312  001F2E  505C               	movf	??__parse_file_modify,w,c
 37313  001F30  0D01               	mullw	1
 37314  001F32  50F3               	movf	prodl,w,c
 37315  001F34  2458               	addwf	__parse_file_modify@out_buffer,w,c
 37316  001F36  6ED9               	movwf	fsr2l,c
 37317  001F38  50F4               	movf	prodh,w,c
 37318  001F3A  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 37319  001F3C  6EDA               	movwf	fsr2h,c
 37320  001F3E  C08F  FFDF         	movff	__parse_file_modify@file_number,indf2
 37321                           
 37322                           ;api.c: 805: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)(((start
      +                          _byte)>>16)&0xFFFF)))>>8)&0xFF));
 37323  001F42  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 37324  001F46  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 37325  001F4A  CFDF F05C          	movff	indf2,??__parse_file_modify
 37326  001F4E  0E01               	movlw	1
 37327  001F50  26DF               	addwf	indf2,f,c
 37328  001F52  505C               	movf	??__parse_file_modify,w,c
 37329  001F54  0D01               	mullw	1
 37330  001F56  50F3               	movf	prodl,w,c
 37331  001F58  2458               	addwf	__parse_file_modify@out_buffer,w,c
 37332  001F5A  6ED9               	movwf	fsr2l,c
 37333  001F5C  50F4               	movf	prodh,w,c
 37334  001F5E  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 37335  001F60  6EDA               	movwf	fsr2h,c
 37336  001F62  5195               	movf	(__parse_file_modify@start_byte+3)& (0+255),w,b
 37337  001F64  6EDF               	movwf	indf2,c
 37338                           
 37339                           ;api.c: 806: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)(((start_
      +                          byte)>>16)&0xFFFF)))&0xFF));
 37340  001F66  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 37341  001F6A  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 37342  001F6E  CFDF F05C          	movff	indf2,??__parse_file_modify
 37343  001F72  0E01               	movlw	1
 37344  001F74  26DF               	addwf	indf2,f,c
 37345  001F76  505C               	movf	??__parse_file_modify,w,c
 37346  001F78  0D01               	mullw	1
 37347  001F7A  50F3               	movf	prodl,w,c
 37348  001F7C  2458               	addwf	__parse_file_modify@out_buffer,w,c
 37349  001F7E  6ED9               	movwf	fsr2l,c
 37350  001F80  50F4               	movf	prodh,w,c
 37351  001F82  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 37352  001F84  6EDA               	movwf	fsr2h,c
 37353  001F86  C094  FFDF         	movff	__parse_file_modify@start_byte+2,indf2
 37354                           
 37355                           ;api.c: 807: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)((start_
      +                          byte)&0xFFFF)))>>8)&0xFF));
 37356  001F8A  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 37357  001F8E  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 37358  001F92  CFDF F05C          	movff	indf2,??__parse_file_modify
 37359  001F96  0E01               	movlw	1
 37360  001F98  26DF               	addwf	indf2,f,c
 37361  001F9A  505C               	movf	??__parse_file_modify,w,c
 37362  001F9C  0D01               	mullw	1
 37363  001F9E  50F3               	movf	prodl,w,c
 37364  001FA0  2458               	addwf	__parse_file_modify@out_buffer,w,c
 37365  001FA2  6ED9               	movwf	fsr2l,c
 37366  001FA4  50F4               	movf	prodh,w,c
 37367  001FA6  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 37368  001FA8  6EDA               	movwf	fsr2h,c
 37369  001FAA  5193               	movf	(__parse_file_modify@start_byte+1)& (0+255),w,b
 37370  001FAC  6EDF               	movwf	indf2,c
 37371                           
 37372                           ;api.c: 808: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)((start_b
      +                          yte)&0xFFFF)))&0xFF));
 37373  001FAE  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 37374  001FB2  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 37375  001FB6  CFDF F05C          	movff	indf2,??__parse_file_modify
 37376  001FBA  0E01               	movlw	1
 37377  001FBC  26DF               	addwf	indf2,f,c
 37378  001FBE  505C               	movf	??__parse_file_modify,w,c
 37379  001FC0  0D01               	mullw	1
 37380  001FC2  50F3               	movf	prodl,w,c
 37381  001FC4  2458               	addwf	__parse_file_modify@out_buffer,w,c
 37382  001FC6  6ED9               	movwf	fsr2l,c
 37383  001FC8  50F4               	movf	prodh,w,c
 37384  001FCA  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 37385  001FCC  6EDA               	movwf	fsr2h,c
 37386  001FCE  C092  FFDF         	movff	__parse_file_modify@start_byte,indf2
 37387                           
 37388                           ;api.c: 809: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((number_of_bytes)>>8)&0xFF
      +                          ));
 37389  001FD2  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 37390  001FD6  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 37391  001FDA  CFDF F05C          	movff	indf2,??__parse_file_modify
 37392  001FDE  0E01               	movlw	1
 37393  001FE0  26DF               	addwf	indf2,f,c
 37394  001FE2  505C               	movf	??__parse_file_modify,w,c
 37395  001FE4  0D01               	mullw	1
 37396  001FE6  50F3               	movf	prodl,w,c
 37397  001FE8  2458               	addwf	__parse_file_modify@out_buffer,w,c
 37398  001FEA  6ED9               	movwf	fsr2l,c
 37399  001FEC  50F4               	movf	prodh,w,c
 37400  001FEE  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 37401  001FF0  6EDA               	movwf	fsr2h,c
 37402  001FF2  5191               	movf	(__parse_file_modify@number_of_bytes+1)& (0+255),w,b
 37403  001FF4  6EDF               	movwf	indf2,c
 37404                           
 37405                           ;api.c: 810: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((number_of_bytes)&0xFF));
 37406  001FF6  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 37407  001FFA  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 37408  001FFE  CFDF F05C          	movff	indf2,??__parse_file_modify
 37409  002002  0E01               	movlw	1
 37410  002004  26DF               	addwf	indf2,f,c
 37411  002006  505C               	movf	??__parse_file_modify,w,c
 37412  002008  0D01               	mullw	1
 37413  00200A  50F3               	movf	prodl,w,c
 37414  00200C  2458               	addwf	__parse_file_modify@out_buffer,w,c
 37415  00200E  6ED9               	movwf	fsr2l,c
 37416  002010  50F4               	movf	prodh,w,c
 37417  002012  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 37418  002014  6EDA               	movwf	fsr2h,c
 37419  002016  C090  FFDF         	movff	__parse_file_modify@number_of_bytes,indf2
 37420                           
 37421                           ;api.c: 811: out_buffer[(*out_idx_ptr)++] = return_value;
 37422  00201A  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 37423  00201E  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 37424  002022  CFDF F05C          	movff	indf2,??__parse_file_modify
 37425  002026  0E01               	movlw	1
 37426  002028  26DF               	addwf	indf2,f,c
 37427  00202A  505C               	movf	??__parse_file_modify,w,c
 37428  00202C  0D01               	mullw	1
 37429  00202E  50F3               	movf	prodl,w,c
 37430  002030  2458               	addwf	__parse_file_modify@out_buffer,w,c
 37431  002032  6ED9               	movwf	fsr2l,c
 37432  002034  50F4               	movf	prodh,w,c
 37433  002036  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 37434  002038  6EDA               	movwf	fsr2h,c
 37435  00203A  C08E  FFDF         	movff	__parse_file_modify@return_value,indf2
 37436  00203E                     l2900:
 37437                           
 37438                           ; BSR set to: 0
 37439                           ;api.c: 812: };api.c: 814: return number_of_bytes + 9;
 37440                           
 37441                           ; BSR set to: 0
 37442  00203E  5190               	movf	__parse_file_modify@number_of_bytes& (0+255),w,b
 37443  002040  0F09               	addlw	9
 37444  002042  0012               	return	
 37445  002044                     __end_of__parse_file_modify:
 37446                           	opt stack 0
 37447                           tosu	equ	0xFFF
 37448                           tosh	equ	0xFFE
 37449                           tosl	equ	0xFFD
 37450                           pclath	equ	0xFFA
 37451                           tblptru	equ	0xFF8
 37452                           tblptrh	equ	0xFF7
 37453                           tblptrl	equ	0xFF6
 37454                           tablat	equ	0xFF5
 37455                           prodh	equ	0xFF4
 37456                           prodl	equ	0xFF3
 37457                           intcon	equ	0xFF2
 37458                           intcon2	equ	0xFF1
 37459                           intcon3	equ	0xFF0
 37460                           indf0	equ	0xFEF
 37461                           postinc0	equ	0xFEE
 37462                           fsr0h	equ	0xFEA
 37463                           fsr0l	equ	0xFE9
 37464                           wreg	equ	0xFE8
 37465                           indf1	equ	0xFE7
 37466                           postdec1	equ	0xFE5
 37467                           plusw1	equ	0xFE3
 37468                           fsr1h	equ	0xFE2
 37469                           fsr1l	equ	0xFE1
 37470                           indf2	equ	0xFDF
 37471                           postinc2	equ	0xFDE
 37472                           postdec2	equ	0xFDD
 37473                           plusw2	equ	0xFDB
 37474                           fsr2h	equ	0xFDA
 37475                           fsr2l	equ	0xFD9
 37476                           status	equ	0xFD8
 37477                           
 37478 ;; *************** function __parse_file_delete *****************
 37479 ;; Defined at:
 37480 ;;		line 642 in file "api.c"
 37481 ;; Parameters:    Size  Location     Type
 37482 ;;  data            2   79[COMRAM] PTR unsigned char 
 37483 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37484 ;;  out_buffer      2   81[COMRAM] PTR unsigned char 
 37485 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 37486 ;;  out_idx_ptr     2   83[COMRAM] PTR unsigned char 
 37487 ;;		 -> api_parse@out_idx(1), 
 37488 ;; Auto vars:     Size  Location     Type
 37489 ;;  file_number     1   87[COMRAM] unsigned char 
 37490 ;;  return_value    1   86[COMRAM] unsigned char 
 37491 ;; Return value:  Size  Location     Type
 37492 ;;                  1    wreg      unsigned char 
 37493 ;; Registers used:
 37494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37495 ;; Tracked objects:
 37496 ;;		On entry : 0/0
 37497 ;;		On exit  : 0/0
 37498 ;;		Unchanged: 0/0
 37499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37500 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37503 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37504 ;;Total ram usage:        9 bytes
 37505 ;; Hardware stack levels used:    1
 37506 ;; Hardware stack levels required when called:    8
 37507 ;; This function calls:
 37508 ;;		_fat_delete_file
 37509 ;; This function is called by:
 37510 ;;		__parse_command_long
 37511 ;; This function uses a non-reentrant model
 37512 ;;
 37513                           
 37514                           	psect	text181
 37515  0067B2                     __ptext181:
 37516                           	opt stack 0
 37517  0067B2                     __parse_file_delete:
 37518                           	opt stack 20
 37519                           
 37520                           ;api.c: 646: uint8_t return_value;;api.c: 647: uint8_t file_number;;api.c: 649: if((data
      +                          [0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 37521                           
 37522                           ;incstack = 0
 37523  0067B2  C050  FFD9         	movff	__parse_file_delete@data,fsr2l
 37524  0067B6  C051  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 37525  0067BA  0E51               	movlw	81
 37526  0067BC  18DE               	xorwf	postinc2,w,c
 37527  0067BE  A4D8               	btfss	status,2,c
 37528  0067C0  D014               	goto	u11390
 37529  0067C2  EE20 F002          	lfsr	2,2
 37530  0067C6  5050               	movf	__parse_file_delete@data,w,c
 37531  0067C8  26D9               	addwf	fsr2l,f,c
 37532  0067CA  5051               	movf	__parse_file_delete@data+1,w,c
 37533  0067CC  22DA               	addwfc	fsr2h,f,c
 37534  0067CE  0E66               	movlw	102
 37535  0067D0  18DE               	xorwf	postinc2,w,c
 37536  0067D2  A4D8               	btfss	status,2,c
 37537  0067D4  D00A               	goto	u11390
 37538  0067D6  EE20 F003          	lfsr	2,3
 37539  0067DA  5050               	movf	__parse_file_delete@data,w,c
 37540  0067DC  26D9               	addwf	fsr2l,f,c
 37541  0067DE  5051               	movf	__parse_file_delete@data+1,w,c
 37542  0067E0  22DA               	addwfc	fsr2h,f,c
 37543  0067E2  0EA0               	movlw	160
 37544  0067E4  18DE               	xorwf	postinc2,w,c
 37545  0067E6  B4D8               	btfsc	status,2,c
 37546  0067E8  D002               	goto	l2868
 37547  0067EA                     u11390:
 37548                           
 37549                           ;api.c: 650: {;api.c: 651: return 4;
 37550  0067EA  0E04               	movlw	4
 37551  0067EC  0012               	return	
 37552  0067EE                     l2868:
 37553                           
 37554                           ;api.c: 652: };api.c: 655: file_number = data[1];
 37555  0067EE  EE20 F001          	lfsr	2,1
 37556  0067F2  5050               	movf	__parse_file_delete@data,w,c
 37557  0067F4  26D9               	addwf	fsr2l,f,c
 37558  0067F6  5051               	movf	__parse_file_delete@data+1,w,c
 37559  0067F8  22DA               	addwfc	fsr2h,f,c
 37560  0067FA  50DF               	movf	indf2,w,c
 37561  0067FC  6E58               	movwf	__parse_file_delete@file_number,c
 37562                           
 37563                           ;api.c: 658: return_value = fat_delete_file(file_number);
 37564  0067FE  5058               	movf	__parse_file_delete@file_number,w,c
 37565  006800  EC89  F048         	call	_fat_delete_file
 37566  006804  6E57               	movwf	__parse_file_delete@return_value,c
 37567                           
 37568                           ;api.c: 661: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 37569  006806  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 37570  00680A  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 37571  00680E  50DF               	movf	indf2,w,c
 37572  006810  B4D8               	btfsc	status,2,c
 37573  006812  D03D               	goto	l2872
 37574  006814  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 37575  006818  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 37576  00681C  0E3E               	movlw	62
 37577  00681E  60DF               	cpfslt	indf2,c
 37578  006820  D036               	goto	l2872
 37579                           
 37580                           ;api.c: 662: {;api.c: 663: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_DELETE;
 37581  006822  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 37582  006826  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 37583  00682A  CFDF F056          	movff	indf2,??__parse_file_delete
 37584  00682E  0E01               	movlw	1
 37585  006830  26DF               	addwf	indf2,f,c
 37586  006832  5056               	movf	??__parse_file_delete,w,c
 37587  006834  0D01               	mullw	1
 37588  006836  50F3               	movf	prodl,w,c
 37589  006838  2452               	addwf	__parse_file_delete@out_buffer,w,c
 37590  00683A  6ED9               	movwf	fsr2l,c
 37591  00683C  50F4               	movf	prodh,w,c
 37592  00683E  2053               	addwfc	__parse_file_delete@out_buffer+1,w,c
 37593  006840  6EDA               	movwf	fsr2h,c
 37594  006842  0E51               	movlw	81
 37595  006844  6EDF               	movwf	indf2,c
 37596                           
 37597                           ;api.c: 664: out_buffer[(*out_idx_ptr)++] = file_number;
 37598  006846  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 37599  00684A  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 37600  00684E  CFDF F056          	movff	indf2,??__parse_file_delete
 37601  006852  0E01               	movlw	1
 37602  006854  26DF               	addwf	indf2,f,c
 37603  006856  5056               	movf	??__parse_file_delete,w,c
 37604  006858  0D01               	mullw	1
 37605  00685A  50F3               	movf	prodl,w,c
 37606  00685C  2452               	addwf	__parse_file_delete@out_buffer,w,c
 37607  00685E  6ED9               	movwf	fsr2l,c
 37608  006860  50F4               	movf	prodh,w,c
 37609  006862  2053               	addwfc	__parse_file_delete@out_buffer+1,w,c
 37610  006864  6EDA               	movwf	fsr2h,c
 37611  006866  C058  FFDF         	movff	__parse_file_delete@file_number,indf2
 37612                           
 37613                           ;api.c: 665: out_buffer[(*out_idx_ptr)++] = return_value;
 37614  00686A  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 37615  00686E  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 37616  006872  CFDF F056          	movff	indf2,??__parse_file_delete
 37617  006876  0E01               	movlw	1
 37618  006878  26DF               	addwf	indf2,f,c
 37619  00687A  5056               	movf	??__parse_file_delete,w,c
 37620  00687C  0D01               	mullw	1
 37621  00687E  50F3               	movf	prodl,w,c
 37622  006880  2452               	addwf	__parse_file_delete@out_buffer,w,c
 37623  006882  6ED9               	movwf	fsr2l,c
 37624  006884  50F4               	movf	prodh,w,c
 37625  006886  2053               	addwfc	__parse_file_delete@out_buffer+1,w,c
 37626  006888  6EDA               	movwf	fsr2h,c
 37627  00688A  C057  FFDF         	movff	__parse_file_delete@return_value,indf2
 37628  00688E                     l2872:
 37629                           
 37630                           ;api.c: 666: };api.c: 668: return 4;
 37631  00688E  0E04               	movlw	4
 37632  006890  0012               	return	
 37633  006892                     __end_of__parse_file_delete:
 37634                           	opt stack 0
 37635                           tosu	equ	0xFFF
 37636                           tosh	equ	0xFFE
 37637                           tosl	equ	0xFFD
 37638                           pclath	equ	0xFFA
 37639                           tblptru	equ	0xFF8
 37640                           tblptrh	equ	0xFF7
 37641                           tblptrl	equ	0xFF6
 37642                           tablat	equ	0xFF5
 37643                           prodh	equ	0xFF4
 37644                           prodl	equ	0xFF3
 37645                           intcon	equ	0xFF2
 37646                           intcon2	equ	0xFF1
 37647                           intcon3	equ	0xFF0
 37648                           indf0	equ	0xFEF
 37649                           postinc0	equ	0xFEE
 37650                           fsr0h	equ	0xFEA
 37651                           fsr0l	equ	0xFE9
 37652                           wreg	equ	0xFE8
 37653                           indf1	equ	0xFE7
 37654                           postdec1	equ	0xFE5
 37655                           plusw1	equ	0xFE3
 37656                           fsr1h	equ	0xFE2
 37657                           fsr1l	equ	0xFE1
 37658                           indf2	equ	0xFDF
 37659                           postinc2	equ	0xFDE
 37660                           postdec2	equ	0xFDD
 37661                           plusw2	equ	0xFDB
 37662                           fsr2h	equ	0xFDA
 37663                           fsr2l	equ	0xFD9
 37664                           status	equ	0xFD8
 37665                           
 37666 ;; *************** function _fat_delete_file *****************
 37667 ;; Defined at:
 37668 ;;		line 647 in file "fat16.c"
 37669 ;; Parameters:    Size  Location     Type
 37670 ;;  file_number     1    wreg     unsigned char 
 37671 ;; Auto vars:     Size  Location     Type
 37672 ;;  file_number     1   78[COMRAM] unsigned char 
 37673 ;;  first_cluste    2   76[COMRAM] unsigned int 
 37674 ;; Return value:  Size  Location     Type
 37675 ;;                  1    wreg      unsigned char 
 37676 ;; Registers used:
 37677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37678 ;; Tracked objects:
 37679 ;;		On entry : 0/0
 37680 ;;		On exit  : 0/0
 37681 ;;		Unchanged: 0/0
 37682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37684 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37686 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37687 ;;Total ram usage:        3 bytes
 37688 ;; Hardware stack levels used:    1
 37689 ;; Hardware stack levels required when called:    7
 37690 ;; This function calls:
 37691 ;;		__delete_root
 37692 ;;		__get_first_cluster
 37693 ;;		__make_cluster_chain
 37694 ;;		__root_is_available
 37695 ;; This function is called by:
 37696 ;;		__parse_file_delete
 37697 ;; This function uses a non-reentrant model
 37698 ;;
 37699                           
 37700                           	psect	text182
 37701  009112                     __ptext182:
 37702                           	opt stack 0
 37703  009112                     _fat_delete_file:
 37704                           	opt stack 20
 37705                           
 37706                           ;incstack = 0
 37707                           ;fat_delete_file@file_number stored from wreg
 37708  009112  6E4F               	movwf	fat_delete_file@file_number,c
 37709                           
 37710                           ;fat16.c: 649: uint16_t first_cluster;;fat16.c: 652: if(file_number>=64)
 37711  009114  0E3F               	movlw	63
 37712  009116  644F               	cpfsgt	fat_delete_file@file_number,c
 37713  009118  D002               	goto	l2102
 37714                           
 37715                           ;fat16.c: 653: {;fat16.c: 655: return 0xFF;
 37716  00911A  0EFF               	movlw	255
 37717  00911C  0012               	return	
 37718  00911E                     l2102:
 37719                           
 37720                           ;fat16.c: 656: };fat16.c: 659: if(_root_is_available(file_number))
 37721  00911E  504F               	movf	fat_delete_file@file_number,w,c
 37722  009120  EC84  F044         	call	__root_is_available
 37723  009124  0900               	iorlw	0
 37724  009126  B4D8               	btfsc	status,2,c
 37725  009128  D002               	goto	l2104
 37726                           
 37727                           ;fat16.c: 660: {;fat16.c: 662: return 0xFE;
 37728  00912A  0EFE               	movlw	254
 37729  00912C  0012               	return	
 37730  00912E                     l2104:
 37731                           
 37732                           ;fat16.c: 663: };fat16.c: 666: first_cluster = _get_first_cluster(file_number);
 37733  00912E  504F               	movf	fat_delete_file@file_number,w,c
 37734  009130  EC76  F047         	call	__get_first_cluster
 37735  009134  C030  F04D         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 37736  009138  C031  F04E         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 37737                           
 37738                           ;fat16.c: 669: _make_cluster_chain(first_cluster, 0);
 37739  00913C  C04D  F036         	movff	fat_delete_file@first_cluster,__make_cluster_chain@first_cluster
 37740  009140  C04E  F037         	movff	fat_delete_file@first_cluster+1,__make_cluster_chain@first_cluster+1
 37741  009144  0E00               	movlw	0
 37742  009146  6E39               	movwf	__make_cluster_chain@number_of_clusters+1,c
 37743  009148  0E00               	movlw	0
 37744  00914A  6E38               	movwf	__make_cluster_chain@number_of_clusters,c
 37745  00914C  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 37746                           
 37747                           ;fat16.c: 673: _delete_root(file_number);
 37748  009150  504F               	movf	fat_delete_file@file_number,w,c
 37749  009152  ECAD  F048         	call	__delete_root
 37750                           
 37751                           ;fat16.c: 675: return 0x00;
 37752  009156  0E00               	movlw	0
 37753  009158  0012               	return	
 37754  00915A                     __end_of_fat_delete_file:
 37755                           	opt stack 0
 37756                           tosu	equ	0xFFF
 37757                           tosh	equ	0xFFE
 37758                           tosl	equ	0xFFD
 37759                           pclath	equ	0xFFA
 37760                           tblptru	equ	0xFF8
 37761                           tblptrh	equ	0xFF7
 37762                           tblptrl	equ	0xFF6
 37763                           tablat	equ	0xFF5
 37764                           prodh	equ	0xFF4
 37765                           prodl	equ	0xFF3
 37766                           intcon	equ	0xFF2
 37767                           intcon2	equ	0xFF1
 37768                           intcon3	equ	0xFF0
 37769                           indf0	equ	0xFEF
 37770                           postinc0	equ	0xFEE
 37771                           fsr0h	equ	0xFEA
 37772                           fsr0l	equ	0xFE9
 37773                           wreg	equ	0xFE8
 37774                           indf1	equ	0xFE7
 37775                           postdec1	equ	0xFE5
 37776                           plusw1	equ	0xFE3
 37777                           fsr1h	equ	0xFE2
 37778                           fsr1l	equ	0xFE1
 37779                           indf2	equ	0xFDF
 37780                           postinc2	equ	0xFDE
 37781                           postdec2	equ	0xFDD
 37782                           plusw2	equ	0xFDB
 37783                           fsr2h	equ	0xFDA
 37784                           fsr2l	equ	0xFD9
 37785                           status	equ	0xFD8
 37786                           
 37787 ;; *************** function __delete_root *****************
 37788 ;; Defined at:
 37789 ;;		line 486 in file "fat16.c"
 37790 ;; Parameters:    Size  Location     Type
 37791 ;;  file_number     1    wreg     unsigned char 
 37792 ;; Auto vars:     Size  Location     Type
 37793 ;;  file_number     1   45[COMRAM] unsigned char 
 37794 ;;  offset          2   42[COMRAM] unsigned int 
 37795 ;;  sector          2   40[COMRAM] unsigned int 
 37796 ;;  deleted_valu    1   44[COMRAM] unsigned char 
 37797 ;; Return value:  Size  Location     Type
 37798 ;;                  1    wreg      void 
 37799 ;; Registers used:
 37800 ;;		wreg, status,2, status,0, cstack
 37801 ;; Tracked objects:
 37802 ;;		On entry : 0/0
 37803 ;;		On exit  : 0/0
 37804 ;;		Unchanged: 0/0
 37805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37807 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37809 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37810 ;;Total ram usage:        6 bytes
 37811 ;; Hardware stack levels used:    1
 37812 ;; Hardware stack levels required when called:    5
 37813 ;; This function calls:
 37814 ;;		__offset_from_file_number
 37815 ;;		__sector_from_file_number
 37816 ;;		_flash_partial_write
 37817 ;; This function is called by:
 37818 ;;		_fat_delete_file
 37819 ;; This function uses a non-reentrant model
 37820 ;;
 37821                           
 37822                           	psect	text183
 37823  00915A                     __ptext183:
 37824                           	opt stack 0
 37825  00915A                     __delete_root:
 37826                           	opt stack 21
 37827                           
 37828                           ;incstack = 0
 37829                           ;__delete_root@file_number stored from wreg
 37830  00915A  6E2E               	movwf	__delete_root@file_number,c
 37831                           
 37832                           ;fat16.c: 488: uint16_t sector;;fat16.c: 489: uint16_t offset;;fat16.c: 490: uint8_t del
      +                          eted_value;;fat16.c: 493: sector = _sector_from_file_number(file_number);
 37833  00915C  502E               	movf	__delete_root@file_number,w,c
 37834  00915E  ECE7  F04B         	call	__sector_from_file_number
 37835  009162  C001  F029         	movff	?__sector_from_file_number,__delete_root@sector
 37836  009166  C002  F02A         	movff	?__sector_from_file_number+1,__delete_root@sector+1
 37837                           
 37838                           ;fat16.c: 494: offset = _offset_from_file_number(file_number);
 37839  00916A  502E               	movf	__delete_root@file_number,w,c
 37840  00916C  EC73  F04C         	call	__offset_from_file_number
 37841  009170  C001  F02B         	movff	?__offset_from_file_number,__delete_root@offset
 37842  009174  C002  F02C         	movff	?__offset_from_file_number+1,__delete_root@offset+1
 37843                           
 37844                           ;fat16.c: 497: deleted_value = 0xE5;
 37845  009178  0EE5               	movlw	229
 37846  00917A  6E2D               	movwf	__delete_root@deleted_value,c
 37847                           
 37848                           ;fat16.c: 498: flash_partial_write(sector, offset, 1, &deleted_value);
 37849  00917C  C029  F020         	movff	__delete_root@sector,flash_partial_write@page
 37850  009180  C02A  F021         	movff	__delete_root@sector+1,flash_partial_write@page+1
 37851  009184  C02B  F022         	movff	__delete_root@offset,flash_partial_write@start
 37852  009188  C02C  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 37853  00918C  0E00               	movlw	0
 37854  00918E  6E25               	movwf	flash_partial_write@length+1,c
 37855  009190  0E01               	movlw	1
 37856  009192  6E24               	movwf	flash_partial_write@length,c
 37857  009194  0E2D               	movlw	low __delete_root@deleted_value
 37858  009196  6E26               	movwf	flash_partial_write@data,c
 37859  009198  0E00               	movlw	high __delete_root@deleted_value
 37860  00919A  6E27               	movwf	flash_partial_write@data+1,c
 37861  00919C  EC7B  F042         	call	_flash_partial_write	;wreg free
 37862  0091A0  0012               	return		;funcret
 37863  0091A2                     __end_of__delete_root:
 37864                           	opt stack 0
 37865                           tosu	equ	0xFFF
 37866                           tosh	equ	0xFFE
 37867                           tosl	equ	0xFFD
 37868                           pclath	equ	0xFFA
 37869                           tblptru	equ	0xFF8
 37870                           tblptrh	equ	0xFF7
 37871                           tblptrl	equ	0xFF6
 37872                           tablat	equ	0xFF5
 37873                           prodh	equ	0xFF4
 37874                           prodl	equ	0xFF3
 37875                           intcon	equ	0xFF2
 37876                           intcon2	equ	0xFF1
 37877                           intcon3	equ	0xFF0
 37878                           indf0	equ	0xFEF
 37879                           postinc0	equ	0xFEE
 37880                           fsr0h	equ	0xFEA
 37881                           fsr0l	equ	0xFE9
 37882                           wreg	equ	0xFE8
 37883                           indf1	equ	0xFE7
 37884                           postdec1	equ	0xFE5
 37885                           plusw1	equ	0xFE3
 37886                           fsr1h	equ	0xFE2
 37887                           fsr1l	equ	0xFE1
 37888                           indf2	equ	0xFDF
 37889                           postinc2	equ	0xFDE
 37890                           postdec2	equ	0xFDD
 37891                           plusw2	equ	0xFDB
 37892                           fsr2h	equ	0xFDA
 37893                           fsr2l	equ	0xFD9
 37894                           status	equ	0xFD8
 37895                           
 37896 ;; *************** function __parse_file_create *****************
 37897 ;; Defined at:
 37898 ;;		line 671 in file "api.c"
 37899 ;; Parameters:    Size  Location     Type
 37900 ;;  data            2   88[COMRAM] PTR unsigned char 
 37901 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37902 ;;  out_buffer      2   90[COMRAM] PTR unsigned char 
 37903 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 37904 ;;  out_idx_ptr     2   92[COMRAM] PTR unsigned char 
 37905 ;;		 -> api_parse@out_idx(1), 
 37906 ;; Auto vars:     Size  Location     Type
 37907 ;;  file_size       4   38[BANK0 ] unsigned long 
 37908 ;;  file_number     1   37[BANK0 ] unsigned char 
 37909 ;; Return value:  Size  Location     Type
 37910 ;;                  1    wreg      unsigned char 
 37911 ;; Registers used:
 37912 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37913 ;; Tracked objects:
 37914 ;;		On entry : 0/0
 37915 ;;		On exit  : 0/0
 37916 ;;		Unchanged: 0/0
 37917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37918 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37919 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37921 ;;      Totals:         7       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37922 ;;Total ram usage:       12 bytes
 37923 ;; Hardware stack levels used:    1
 37924 ;; Hardware stack levels required when called:    8
 37925 ;; This function calls:
 37926 ;;		_fat_create_file
 37927 ;; This function is called by:
 37928 ;;		__parse_command_long
 37929 ;; This function uses a non-reentrant model
 37930 ;;
 37931                           
 37932                           	psect	text184
 37933  0047B2                     __ptext184:
 37934                           	opt stack 0
 37935  0047B2                     __parse_file_create:
 37936                           	opt stack 20
 37937                           
 37938                           ;api.c: 674: uint8_t file_number;;api.c: 676: uint32_t file_size;;api.c: 677: if((data[0
      +                          ]!=COMMAND_FILE_CREATE) || (data[16]!=0xBD) || (data[17]!=0x4F))
 37939                           
 37940                           ;incstack = 0
 37941  0047B2  C059  FFD9         	movff	__parse_file_create@data,fsr2l
 37942  0047B6  C05A  FFDA         	movff	__parse_file_create@data+1,fsr2h
 37943  0047BA  0E52               	movlw	82
 37944  0047BC  18DE               	xorwf	postinc2,w,c
 37945  0047BE  A4D8               	btfss	status,2,c
 37946  0047C0  D014               	goto	u11440
 37947  0047C2  EE20 F010          	lfsr	2,16
 37948  0047C6  5059               	movf	__parse_file_create@data,w,c
 37949  0047C8  26D9               	addwf	fsr2l,f,c
 37950  0047CA  505A               	movf	__parse_file_create@data+1,w,c
 37951  0047CC  22DA               	addwfc	fsr2h,f,c
 37952  0047CE  0EBD               	movlw	189
 37953  0047D0  18DE               	xorwf	postinc2,w,c
 37954  0047D2  A4D8               	btfss	status,2,c
 37955  0047D4  D00A               	goto	u11440
 37956  0047D6  EE20 F011          	lfsr	2,17
 37957  0047DA  5059               	movf	__parse_file_create@data,w,c
 37958  0047DC  26D9               	addwf	fsr2l,f,c
 37959  0047DE  505A               	movf	__parse_file_create@data+1,w,c
 37960  0047E0  22DA               	addwfc	fsr2h,f,c
 37961  0047E2  0E4F               	movlw	79
 37962  0047E4  18DE               	xorwf	postinc2,w,c
 37963  0047E6  B4D8               	btfsc	status,2,c
 37964  0047E8  D002               	goto	l2875
 37965  0047EA                     u11440:
 37966                           
 37967                           ;api.c: 678: {;api.c: 679: return 18;
 37968  0047EA  0E12               	movlw	18
 37969  0047EC  0012               	return	
 37970  0047EE                     l2875:
 37971                           
 37972                           ;api.c: 680: };api.c: 683: file_size = data[12];
 37973  0047EE  EE20 F00C          	lfsr	2,12
 37974  0047F2  5059               	movf	__parse_file_create@data,w,c
 37975  0047F4  26D9               	addwf	fsr2l,f,c
 37976  0047F6  505A               	movf	__parse_file_create@data+1,w,c
 37977  0047F8  22DA               	addwfc	fsr2h,f,c
 37978  0047FA  50DF               	movf	indf2,w,c
 37979  0047FC  6E5F               	movwf	??__parse_file_create& (0+255),c
 37980  0047FE  505F               	movf	??__parse_file_create,w,c
 37981  004800  0100               	movlb	0	; () banked
 37982  004802  6F86               	movwf	__parse_file_create@file_size& (0+255),b
 37983  004804  6B87               	clrf	(__parse_file_create@file_size+1)& (0+255),b
 37984  004806  6B88               	clrf	(__parse_file_create@file_size+2)& (0+255),b
 37985  004808  6B89               	clrf	(__parse_file_create@file_size+3)& (0+255),b
 37986                           
 37987                           ; BSR set to: 0
 37988                           ;api.c: 684: file_size <<= 8;
 37989  00480A  C088  F089         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 37990  00480E  C087  F088         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 37991  004812  C086  F087         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 37992  004816  6B86               	clrf	__parse_file_create@file_size& (0+255),b
 37993                           
 37994                           ; BSR set to: 0
 37995                           ;api.c: 685: file_size |= data[13];
 37996  004818  EE20 F00D          	lfsr	2,13
 37997  00481C  5059               	movf	__parse_file_create@data,w,c
 37998  00481E  26D9               	addwf	fsr2l,f,c
 37999  004820  505A               	movf	__parse_file_create@data+1,w,c
 38000  004822  22DA               	addwfc	fsr2h,f,c
 38001  004824  50DF               	movf	indf2,w,c
 38002  004826  6E5F               	movwf	??__parse_file_create& (0+255),c
 38003  004828  505F               	movf	??__parse_file_create,w,c
 38004  00482A  1386               	iorwf	__parse_file_create@file_size& (0+255),f,b
 38005                           
 38006                           ;api.c: 686: file_size <<= 8;
 38007  00482C  C088  F089         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 38008  004830  C087  F088         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 38009  004834  C086  F087         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 38010  004838  6B86               	clrf	__parse_file_create@file_size& (0+255),b
 38011                           
 38012                           ; BSR set to: 0
 38013                           ;api.c: 687: file_size |= data[14];
 38014  00483A  EE20 F00E          	lfsr	2,14
 38015  00483E  5059               	movf	__parse_file_create@data,w,c
 38016  004840  26D9               	addwf	fsr2l,f,c
 38017  004842  505A               	movf	__parse_file_create@data+1,w,c
 38018  004844  22DA               	addwfc	fsr2h,f,c
 38019  004846  50DF               	movf	indf2,w,c
 38020  004848  6E5F               	movwf	??__parse_file_create& (0+255),c
 38021  00484A  505F               	movf	??__parse_file_create,w,c
 38022  00484C  1386               	iorwf	__parse_file_create@file_size& (0+255),f,b
 38023                           
 38024                           ; BSR set to: 0
 38025                           ;api.c: 688: file_size <<= 8;
 38026  00484E  C088  F089         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 38027  004852  C087  F088         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 38028  004856  C086  F087         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 38029  00485A  6B86               	clrf	__parse_file_create@file_size& (0+255),b
 38030                           
 38031                           ;api.c: 689: file_size |= data[15];
 38032  00485C  EE20 F00F          	lfsr	2,15
 38033  004860  5059               	movf	__parse_file_create@data,w,c
 38034  004862  26D9               	addwf	fsr2l,f,c
 38035  004864  505A               	movf	__parse_file_create@data+1,w,c
 38036  004866  22DA               	addwfc	fsr2h,f,c
 38037  004868  50DF               	movf	indf2,w,c
 38038  00486A  6E5F               	movwf	??__parse_file_create& (0+255),c
 38039  00486C  505F               	movf	??__parse_file_create,w,c
 38040  00486E  1386               	iorwf	__parse_file_create@file_size& (0+255),f,b
 38041                           
 38042                           ; BSR set to: 0
 38043                           ;api.c: 692: file_number = fat_create_file(&data[1], &data[9], file_size);
 38044  004870  0E01               	movlw	1
 38045  004872  2459               	addwf	__parse_file_create@data,w,c
 38046  004874  6E4D               	movwf	fat_create_file@name,c
 38047  004876  0E00               	movlw	0
 38048  004878  205A               	addwfc	__parse_file_create@data+1,w,c
 38049  00487A  6E4E               	movwf	fat_create_file@name+1,c
 38050  00487C  0E09               	movlw	9
 38051  00487E  2459               	addwf	__parse_file_create@data,w,c
 38052  004880  6E4F               	movwf	fat_create_file@extension,c
 38053  004882  0E00               	movlw	0
 38054  004884  205A               	addwfc	__parse_file_create@data+1,w,c
 38055  004886  6E50               	movwf	fat_create_file@extension+1,c
 38056  004888  C086  F051         	movff	__parse_file_create@file_size,fat_create_file@size
 38057  00488C  C087  F052         	movff	__parse_file_create@file_size+1,fat_create_file@size+1
 38058  004890  C088  F053         	movff	__parse_file_create@file_size+2,fat_create_file@size+2
 38059  004894  C089  F054         	movff	__parse_file_create@file_size+3,fat_create_file@size+3
 38060  004898  EC27  F027         	call	_fat_create_file	;wreg free
 38061  00489C  0100               	movlb	0	; () banked
 38062  00489E  6F85               	movwf	__parse_file_create@file_number& (0+255),b
 38063                           
 38064                           ; BSR set to: 0
 38065                           ;api.c: 695: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 38066  0048A0  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 38067  0048A4  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 38068  0048A8  50DF               	movf	indf2,w,c
 38069  0048AA  B4D8               	btfsc	status,2,c
 38070  0048AC  D02B               	goto	l2879
 38071                           
 38072                           ; BSR set to: 0
 38073  0048AE  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 38074  0048B2  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 38075  0048B6  0E3F               	movlw	63
 38076  0048B8  60DF               	cpfslt	indf2,c
 38077  0048BA  D024               	goto	l2879
 38078                           
 38079                           ; BSR set to: 0
 38080                           ;api.c: 696: {;api.c: 697: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_CREATE;
 38081  0048BC  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 38082  0048C0  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 38083  0048C4  CFDF F05F          	movff	indf2,??__parse_file_create
 38084  0048C8  0E01               	movlw	1
 38085  0048CA  26DF               	addwf	indf2,f,c
 38086  0048CC  505F               	movf	??__parse_file_create,w,c
 38087  0048CE  0D01               	mullw	1
 38088  0048D0  50F3               	movf	prodl,w,c
 38089  0048D2  245B               	addwf	__parse_file_create@out_buffer,w,c
 38090  0048D4  6ED9               	movwf	fsr2l,c
 38091  0048D6  50F4               	movf	prodh,w,c
 38092  0048D8  205C               	addwfc	__parse_file_create@out_buffer+1,w,c
 38093  0048DA  6EDA               	movwf	fsr2h,c
 38094  0048DC  0E52               	movlw	82
 38095  0048DE  6EDF               	movwf	indf2,c
 38096                           
 38097                           ;api.c: 698: out_buffer[(*out_idx_ptr)++] = file_number;
 38098  0048E0  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 38099  0048E4  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 38100  0048E8  CFDF F05F          	movff	indf2,??__parse_file_create
 38101  0048EC  0E01               	movlw	1
 38102  0048EE  26DF               	addwf	indf2,f,c
 38103  0048F0  505F               	movf	??__parse_file_create,w,c
 38104  0048F2  0D01               	mullw	1
 38105  0048F4  50F3               	movf	prodl,w,c
 38106  0048F6  245B               	addwf	__parse_file_create@out_buffer,w,c
 38107  0048F8  6ED9               	movwf	fsr2l,c
 38108  0048FA  50F4               	movf	prodh,w,c
 38109  0048FC  205C               	addwfc	__parse_file_create@out_buffer+1,w,c
 38110  0048FE  6EDA               	movwf	fsr2h,c
 38111  004900  C085  FFDF         	movff	__parse_file_create@file_number,indf2
 38112  004904                     l2879:
 38113                           
 38114                           ; BSR set to: 0
 38115                           ;api.c: 699: };api.c: 701: return 18;
 38116                           
 38117                           ; BSR set to: 0
 38118  004904  0E12               	movlw	18
 38119  004906  0012               	return	
 38120  004908                     __end_of__parse_file_create:
 38121                           	opt stack 0
 38122                           tosu	equ	0xFFF
 38123                           tosh	equ	0xFFE
 38124                           tosl	equ	0xFFD
 38125                           pclath	equ	0xFFA
 38126                           tblptru	equ	0xFF8
 38127                           tblptrh	equ	0xFF7
 38128                           tblptrl	equ	0xFF6
 38129                           tablat	equ	0xFF5
 38130                           prodh	equ	0xFF4
 38131                           prodl	equ	0xFF3
 38132                           intcon	equ	0xFF2
 38133                           intcon2	equ	0xFF1
 38134                           intcon3	equ	0xFF0
 38135                           indf0	equ	0xFEF
 38136                           postinc0	equ	0xFEE
 38137                           fsr0h	equ	0xFEA
 38138                           fsr0l	equ	0xFE9
 38139                           wreg	equ	0xFE8
 38140                           indf1	equ	0xFE7
 38141                           postdec1	equ	0xFE5
 38142                           plusw1	equ	0xFE3
 38143                           fsr1h	equ	0xFE2
 38144                           fsr1l	equ	0xFE1
 38145                           indf2	equ	0xFDF
 38146                           postinc2	equ	0xFDE
 38147                           postdec2	equ	0xFDD
 38148                           plusw2	equ	0xFDB
 38149                           fsr2h	equ	0xFDA
 38150                           fsr2l	equ	0xFD9
 38151                           status	equ	0xFD8
 38152                           
 38153 ;; *************** function __parse_file_copy *****************
 38154 ;; Defined at:
 38155 ;;		line 948 in file "api.c"
 38156 ;; Parameters:    Size  Location     Type
 38157 ;;  data            2   52[BANK0 ] PTR unsigned char 
 38158 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38159 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 38160 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 38161 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 38162 ;;		 -> api_parse@out_idx(1), 
 38163 ;; Auto vars:     Size  Location     Type
 38164 ;;  file_number     1   94[COMRAM] unsigned char 
 38165 ;;  return_value    1   93[COMRAM] unsigned char 
 38166 ;; Return value:  Size  Location     Type
 38167 ;;                  1    wreg      unsigned char 
 38168 ;; Registers used:
 38169 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38170 ;; Tracked objects:
 38171 ;;		On entry : 0/0
 38172 ;;		On exit  : 0/0
 38173 ;;		Unchanged: 0/0
 38174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38175 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38178 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38179 ;;Total ram usage:        9 bytes
 38180 ;; Hardware stack levels used:    1
 38181 ;; Hardware stack levels required when called:    9
 38182 ;; This function calls:
 38183 ;;		_fat_copy_file
 38184 ;; This function is called by:
 38185 ;;		__parse_command_long
 38186 ;; This function uses a non-reentrant model
 38187 ;;
 38188                           
 38189                           	psect	text185
 38190  005E76                     __ptext185:
 38191                           	opt stack 0
 38192  005E76                     __parse_file_copy:
 38193                           	opt stack 19
 38194                           
 38195                           ;api.c: 952: uint8_t file_number;;api.c: 953: uint8_t return_value;;api.c: 955: if((data
      +                          [0]!=COMMAND_FILE_COPY) || (data[13]!=0x54) || (data[14]!=0xD9))
 38196                           
 38197                           ;incstack = 0
 38198  005E76  C094  FFD9         	movff	__parse_file_copy@data,fsr2l
 38199  005E7A  C095  FFDA         	movff	__parse_file_copy@data+1,fsr2h
 38200  005E7E  0E5A               	movlw	90
 38201  005E80  18DE               	xorwf	postinc2,w,c
 38202  005E82  A4D8               	btfss	status,2,c
 38203  005E84  D015               	goto	u11840
 38204  005E86  0100               	movlb	0	; () banked
 38205  005E88  EE20 F00D          	lfsr	2,13
 38206  005E8C  5194               	movf	__parse_file_copy@data& (0+255),w,b
 38207  005E8E  26D9               	addwf	fsr2l,f,c
 38208  005E90  5195               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 38209  005E92  22DA               	addwfc	fsr2h,f,c
 38210  005E94  0E54               	movlw	84
 38211  005E96  18DE               	xorwf	postinc2,w,c
 38212  005E98  A4D8               	btfss	status,2,c
 38213  005E9A  D00A               	goto	u11840
 38214                           
 38215                           ; BSR set to: 0
 38216  005E9C  EE20 F00E          	lfsr	2,14
 38217  005EA0  5194               	movf	__parse_file_copy@data& (0+255),w,b
 38218  005EA2  26D9               	addwf	fsr2l,f,c
 38219  005EA4  5195               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 38220  005EA6  22DA               	addwfc	fsr2h,f,c
 38221  005EA8  0ED9               	movlw	217
 38222  005EAA  18DE               	xorwf	postinc2,w,c
 38223  005EAC  B4D8               	btfsc	status,2,c
 38224  005EAE  D002               	goto	l2931
 38225  005EB0                     u11840:
 38226                           
 38227                           ;api.c: 956: {;api.c: 957: return 15;
 38228                           
 38229                           ; BSR set to: 0
 38230  005EB0  0E0F               	movlw	15
 38231  005EB2  0012               	return	
 38232  005EB4                     l2931:
 38233                           
 38234                           ;api.c: 958: };api.c: 961: file_number = data[1];
 38235  005EB4  0100               	movlb	0	; () banked
 38236  005EB6  EE20 F001          	lfsr	2,1
 38237  005EBA  5194               	movf	__parse_file_copy@data& (0+255),w,b
 38238  005EBC  26D9               	addwf	fsr2l,f,c
 38239  005EBE  5195               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 38240  005EC0  22DA               	addwfc	fsr2h,f,c
 38241  005EC2  50DF               	movf	indf2,w,c
 38242  005EC4  6E5F               	movwf	__parse_file_copy@file_number,c
 38243                           
 38244                           ; BSR set to: 0
 38245                           ;api.c: 964: return_value = fat_copy_file(file_number, &data[2], &data[10]);
 38246  005EC6  0E02               	movlw	2
 38247  005EC8  2594               	addwf	__parse_file_copy@data& (0+255),w,b
 38248  005ECA  6E59               	movwf	fat_copy_file@name,c
 38249  005ECC  0E00               	movlw	0
 38250  005ECE  2195               	addwfc	(__parse_file_copy@data+1)& (0+255),w,b
 38251  005ED0  6E5A               	movwf	fat_copy_file@name+1,c
 38252  005ED2  0E0A               	movlw	10
 38253  005ED4  2594               	addwf	__parse_file_copy@data& (0+255),w,b
 38254  005ED6  6E5B               	movwf	fat_copy_file@extension,c
 38255  005ED8  0E00               	movlw	0
 38256  005EDA  2195               	addwfc	(__parse_file_copy@data+1)& (0+255),w,b
 38257  005EDC  6E5C               	movwf	fat_copy_file@extension+1,c
 38258  005EDE  505F               	movf	__parse_file_copy@file_number,w,c
 38259  005EE0  ECB4  F030         	call	_fat_copy_file
 38260  005EE4  6E5E               	movwf	__parse_file_copy@return_value,c
 38261                           
 38262                           ;api.c: 967: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 38263  005EE6  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 38264  005EEA  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 38265  005EEE  50DF               	movf	indf2,w,c
 38266  005EF0  B4D8               	btfsc	status,2,c
 38267  005EF2  D03E               	goto	l2935
 38268  005EF4  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 38269  005EF8  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 38270  005EFC  0E3E               	movlw	62
 38271  005EFE  60DF               	cpfslt	indf2,c
 38272  005F00  D037               	goto	l2935
 38273                           
 38274                           ;api.c: 968: {;api.c: 969: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_COPY;
 38275  005F02  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 38276  005F06  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 38277  005F0A  CFDF F05D          	movff	indf2,??__parse_file_copy
 38278  005F0E  0E01               	movlw	1
 38279  005F10  26DF               	addwf	indf2,f,c
 38280  005F12  505D               	movf	??__parse_file_copy,w,c
 38281  005F14  0D01               	mullw	1
 38282  005F16  50F3               	movf	prodl,w,c
 38283  005F18  0100               	movlb	0	; () banked
 38284  005F1A  2596               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 38285  005F1C  6ED9               	movwf	fsr2l,c
 38286  005F1E  50F4               	movf	prodh,w,c
 38287  005F20  2197               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 38288  005F22  6EDA               	movwf	fsr2h,c
 38289  005F24  0E5A               	movlw	90
 38290  005F26  6EDF               	movwf	indf2,c
 38291                           
 38292                           ;api.c: 970: out_buffer[(*out_idx_ptr)++] = file_number;
 38293  005F28  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 38294  005F2C  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 38295  005F30  CFDF F05D          	movff	indf2,??__parse_file_copy
 38296  005F34  0E01               	movlw	1
 38297  005F36  26DF               	addwf	indf2,f,c
 38298  005F38  505D               	movf	??__parse_file_copy,w,c
 38299  005F3A  0D01               	mullw	1
 38300  005F3C  50F3               	movf	prodl,w,c
 38301  005F3E  2596               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 38302  005F40  6ED9               	movwf	fsr2l,c
 38303  005F42  50F4               	movf	prodh,w,c
 38304  005F44  2197               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 38305  005F46  6EDA               	movwf	fsr2h,c
 38306  005F48  C05F  FFDF         	movff	__parse_file_copy@file_number,indf2
 38307                           
 38308                           ;api.c: 971: out_buffer[(*out_idx_ptr)++] = return_value;
 38309  005F4C  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 38310  005F50  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 38311  005F54  CFDF F05D          	movff	indf2,??__parse_file_copy
 38312  005F58  0E01               	movlw	1
 38313  005F5A  26DF               	addwf	indf2,f,c
 38314  005F5C  505D               	movf	??__parse_file_copy,w,c
 38315  005F5E  0D01               	mullw	1
 38316  005F60  50F3               	movf	prodl,w,c
 38317  005F62  2596               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 38318  005F64  6ED9               	movwf	fsr2l,c
 38319  005F66  50F4               	movf	prodh,w,c
 38320  005F68  2197               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 38321  005F6A  6EDA               	movwf	fsr2h,c
 38322  005F6C  C05E  FFDF         	movff	__parse_file_copy@return_value,indf2
 38323  005F70                     l2935:
 38324                           
 38325                           ;api.c: 972: };api.c: 974: return 15;
 38326                           
 38327                           ; BSR set to: 0
 38328  005F70  0E0F               	movlw	15
 38329  005F72  0012               	return	
 38330  005F74                     __end_of__parse_file_copy:
 38331                           	opt stack 0
 38332                           tosu	equ	0xFFF
 38333                           tosh	equ	0xFFE
 38334                           tosl	equ	0xFFD
 38335                           pclath	equ	0xFFA
 38336                           tblptru	equ	0xFF8
 38337                           tblptrh	equ	0xFF7
 38338                           tblptrl	equ	0xFF6
 38339                           tablat	equ	0xFF5
 38340                           prodh	equ	0xFF4
 38341                           prodl	equ	0xFF3
 38342                           intcon	equ	0xFF2
 38343                           intcon2	equ	0xFF1
 38344                           intcon3	equ	0xFF0
 38345                           indf0	equ	0xFEF
 38346                           postinc0	equ	0xFEE
 38347                           fsr0h	equ	0xFEA
 38348                           fsr0l	equ	0xFE9
 38349                           wreg	equ	0xFE8
 38350                           indf1	equ	0xFE7
 38351                           postdec1	equ	0xFE5
 38352                           plusw1	equ	0xFE3
 38353                           fsr1h	equ	0xFE2
 38354                           fsr1l	equ	0xFE1
 38355                           indf2	equ	0xFDF
 38356                           postinc2	equ	0xFDE
 38357                           postdec2	equ	0xFDD
 38358                           plusw2	equ	0xFDB
 38359                           fsr2h	equ	0xFDA
 38360                           fsr2l	equ	0xFD9
 38361                           status	equ	0xFD8
 38362                           
 38363 ;; *************** function _fat_copy_file *****************
 38364 ;; Defined at:
 38365 ;;		line 854 in file "fat16.c"
 38366 ;; Parameters:    Size  Location     Type
 38367 ;;  file_number     1    wreg     unsigned char 
 38368 ;;  name            2   88[COMRAM] PTR unsigned char 
 38369 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38370 ;;  extension       2   90[COMRAM] PTR unsigned char 
 38371 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38372 ;; Auto vars:     Size  Location     Type
 38373 ;;  file_number     1   51[BANK0 ] unsigned char 
 38374 ;;  file_size       4   43[BANK0 ] unsigned long 
 38375 ;;  sector          2   49[BANK0 ] unsigned int 
 38376 ;;  number_of_cl    2   41[BANK0 ] unsigned int 
 38377 ;;  return_value    1   48[BANK0 ] unsigned char 
 38378 ;;  new_file_num    1   47[BANK0 ] unsigned char 
 38379 ;; Return value:  Size  Location     Type
 38380 ;;                  1    wreg      unsigned char 
 38381 ;; Registers used:
 38382 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38383 ;; Tracked objects:
 38384 ;;		On entry : 0/0
 38385 ;;		On exit  : 0/0
 38386 ;;		Unchanged: 0/0
 38387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38389 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38390 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38391 ;;      Totals:         4      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38392 ;;Total ram usage:       19 bytes
 38393 ;; Hardware stack levels used:    1
 38394 ;; Hardware stack levels required when called:    8
 38395 ;; This function calls:
 38396 ;;		__root_is_available
 38397 ;;		_fat_copy_sector_to_buffer
 38398 ;;		_fat_create_file
 38399 ;;		_fat_get_file_size
 38400 ;;		_fat_write_sector_from_buffer
 38401 ;; This function is called by:
 38402 ;;		__parse_file_copy
 38403 ;; This function uses a non-reentrant model
 38404 ;;
 38405                           
 38406                           	psect	text186
 38407  006168                     __ptext186:
 38408                           	opt stack 0
 38409  006168                     _fat_copy_file:
 38410                           	opt stack 19
 38411                           
 38412                           ;incstack = 0
 38413                           ;fat_copy_file@file_number stored from wreg
 38414  006168  0100               	movlb	0	; () banked
 38415  00616A  6F93               	movwf	fat_copy_file@file_number& (0+255),b
 38416                           
 38417                           ;fat16.c: 856: uint32_t file_size;;fat16.c: 857: uint8_t new_file_number;;fat16.c: 858: 
      +                          uint16_t number_of_clusters;;fat16.c: 859: uint16_t sector;;fat16.c: 860: uint8_t return
      +                          _value;;fat16.c: 863: if(file_number>=64)
 38418  00616C  0E3F               	movlw	63
 38419  00616E  0100               	movlb	0	; () banked
 38420  006170  6593               	cpfsgt	fat_copy_file@file_number& (0+255),b
 38421  006172  D002               	goto	l2136
 38422                           
 38423                           ; BSR set to: 0
 38424                           ;fat16.c: 864: {;fat16.c: 866: return 0xFF;
 38425  006174  0EFF               	movlw	255
 38426                           
 38427                           ; BSR set to: 0
 38428  006176  0012               	return	
 38429  006178                     l2136:
 38430                           
 38431                           ; BSR set to: 0
 38432                           ;fat16.c: 867: };fat16.c: 870: if(_root_is_available(file_number))
 38433                           
 38434                           ; BSR set to: 0
 38435  006178  5193               	movf	fat_copy_file@file_number& (0+255),w,b
 38436  00617A  EC84  F044         	call	__root_is_available
 38437  00617E  0900               	iorlw	0
 38438  006180  B4D8               	btfsc	status,2,c
 38439  006182  D002               	goto	l2138
 38440                           
 38441                           ;fat16.c: 871: {;fat16.c: 873: return 0xFE;
 38442  006184  0EFE               	movlw	254
 38443  006186  0012               	return	
 38444  006188                     l2138:
 38445                           
 38446                           ;fat16.c: 874: };fat16.c: 877: file_size = fat_get_file_size(file_number);
 38447  006188  0100               	movlb	0	; () banked
 38448  00618A  5193               	movf	fat_copy_file@file_number& (0+255),w,b
 38449  00618C  ECB3  F042         	call	_fat_get_file_size
 38450  006190  C036  F08B         	movff	?_fat_get_file_size,fat_copy_file@file_size
 38451  006194  C037  F08C         	movff	?_fat_get_file_size+1,fat_copy_file@file_size+1
 38452  006198  C038  F08D         	movff	?_fat_get_file_size+2,fat_copy_file@file_size+2
 38453  00619C  C039  F08E         	movff	?_fat_get_file_size+3,fat_copy_file@file_size+3
 38454                           
 38455                           ;fat16.c: 880: new_file_number = fat_create_file(name, extension, file_size);
 38456  0061A0  C059  F04D         	movff	fat_copy_file@name,fat_create_file@name
 38457  0061A4  C05A  F04E         	movff	fat_copy_file@name+1,fat_create_file@name+1
 38458  0061A8  C05B  F04F         	movff	fat_copy_file@extension,fat_create_file@extension
 38459  0061AC  C05C  F050         	movff	fat_copy_file@extension+1,fat_create_file@extension+1
 38460  0061B0  C08B  F051         	movff	fat_copy_file@file_size,fat_create_file@size
 38461  0061B4  C08C  F052         	movff	fat_copy_file@file_size+1,fat_create_file@size+1
 38462  0061B8  C08D  F053         	movff	fat_copy_file@file_size+2,fat_create_file@size+2
 38463  0061BC  C08E  F054         	movff	fat_copy_file@file_size+3,fat_create_file@size+3
 38464  0061C0  EC27  F027         	call	_fat_create_file	;wreg free
 38465  0061C4  0100               	movlb	0	; () banked
 38466  0061C6  6F8F               	movwf	fat_copy_file@new_file_number& (0+255),b
 38467                           
 38468                           ; BSR set to: 0
 38469                           ;fat16.c: 883: if(new_file_number>=64)
 38470  0061C8  0E3F               	movlw	63
 38471  0061CA  658F               	cpfsgt	fat_copy_file@new_file_number& (0+255),b
 38472  0061CC  D002               	goto	l2139
 38473                           
 38474                           ; BSR set to: 0
 38475                           ;fat16.c: 884: {;fat16.c: 886: return 0xFD;
 38476  0061CE  0EFD               	movlw	253
 38477                           
 38478                           ; BSR set to: 0
 38479  0061D0  0012               	return	
 38480  0061D2                     l2139:
 38481                           
 38482                           ; BSR set to: 0
 38483                           ;fat16.c: 887: };fat16.c: 890: number_of_clusters = (file_size + 512 - 1) >> 9;
 38484                           
 38485                           ; BSR set to: 0
 38486  0061D2  0EFF               	movlw	255
 38487  0061D4  258B               	addwf	fat_copy_file@file_size& (0+255),w,b
 38488  0061D6  6F85               	movwf	??_fat_copy_file& (0+255),b
 38489  0061D8  0E01               	movlw	1
 38490  0061DA  218C               	addwfc	(fat_copy_file@file_size+1)& (0+255),w,b
 38491  0061DC  6F86               	movwf	(??_fat_copy_file+1)& (0+255),b
 38492  0061DE  0E00               	movlw	0
 38493  0061E0  218D               	addwfc	(fat_copy_file@file_size+2)& (0+255),w,b
 38494  0061E2  6F87               	movwf	(??_fat_copy_file+2)& (0+255),b
 38495  0061E4  0E00               	movlw	0
 38496  0061E6  218E               	addwfc	(fat_copy_file@file_size+3)& (0+255),w,b
 38497  0061E8  6F88               	movwf	(??_fat_copy_file+3)& (0+255),b
 38498  0061EA  0E0A               	movlw	10
 38499  0061EC  D005               	goto	u10800
 38500  0061EE                     u10805:
 38501  0061EE  90D8               	bcf	status,0,c
 38502  0061F0  3388               	rrcf	(??_fat_copy_file+3)& (0+255),f,b
 38503  0061F2  3387               	rrcf	(??_fat_copy_file+2)& (0+255),f,b
 38504  0061F4  3386               	rrcf	(??_fat_copy_file+1)& (0+255),f,b
 38505  0061F6  3385               	rrcf	??_fat_copy_file& (0+255),f,b
 38506  0061F8                     u10800:
 38507  0061F8  2EE8               	decfsz	wreg,f,c
 38508  0061FA  D7F9               	goto	u10805
 38509  0061FC  C085  F089         	movff	??_fat_copy_file,fat_copy_file@number_of_clusters
 38510  006200  C086  F08A         	movff	??_fat_copy_file+1,fat_copy_file@number_of_clusters+1
 38511                           
 38512                           ; BSR set to: 0
 38513                           ;fat16.c: 893: for(sector=0; sector<number_of_clusters; ++sector)
 38514  006204  0E00               	movlw	0
 38515  006206  6F92               	movwf	(fat_copy_file@sector+1)& (0+255),b
 38516  006208  0E00               	movlw	0
 38517  00620A  6F91               	movwf	fat_copy_file@sector& (0+255),b
 38518  00620C  D01E               	goto	l2140
 38519  00620E                     
 38520                           ; BSR set to: 0
 38521                           ;fat16.c: 894: {;fat16.c: 895: return_value = fat_copy_sector_to_buffer(file_number, sec
      +                          tor);
 38522                           
 38523                           ; BSR set to: 0
 38524  00620E  C091  F043         	movff	fat_copy_file@sector,fat_copy_sector_to_buffer@sector
 38525  006212  C092  F044         	movff	fat_copy_file@sector+1,fat_copy_sector_to_buffer@sector+1
 38526  006216  5193               	movf	fat_copy_file@file_number& (0+255),w,b
 38527  006218  EC76  F039         	call	_fat_copy_sector_to_buffer
 38528  00621C  0100               	movlb	0	; () banked
 38529  00621E  6F90               	movwf	fat_copy_file@return_value& (0+255),b
 38530                           
 38531                           ; BSR set to: 0
 38532                           ;fat16.c: 896: if(return_value!=0x00)
 38533  006220  5190               	movf	fat_copy_file@return_value& (0+255),w,b
 38534  006222  B4D8               	btfsc	status,2,c
 38535  006224  D002               	goto	l2142
 38536                           
 38537                           ; BSR set to: 0
 38538                           ;fat16.c: 897: {;fat16.c: 898: return 0xFC;
 38539  006226  0EFC               	movlw	252
 38540                           
 38541                           ; BSR set to: 0
 38542  006228  0012               	return	
 38543  00622A                     l2142:
 38544                           
 38545                           ; BSR set to: 0
 38546                           ;fat16.c: 899: };fat16.c: 900: return_value = fat_write_sector_from_buffer(new_file_numb
      +                          er, sector);
 38547                           
 38548                           ; BSR set to: 0
 38549  00622A  C091  F043         	movff	fat_copy_file@sector,fat_write_sector_from_buffer@sector
 38550  00622E  C092  F044         	movff	fat_copy_file@sector+1,fat_write_sector_from_buffer@sector+1
 38551  006232  518F               	movf	fat_copy_file@new_file_number& (0+255),w,b
 38552  006234  ECDE  F040         	call	_fat_write_sector_from_buffer
 38553  006238  0100               	movlb	0	; () banked
 38554  00623A  6F90               	movwf	fat_copy_file@return_value& (0+255),b
 38555                           
 38556                           ; BSR set to: 0
 38557                           ;fat16.c: 901: if(return_value!=0x00)
 38558  00623C  5190               	movf	fat_copy_file@return_value& (0+255),w,b
 38559  00623E  B4D8               	btfsc	status,2,c
 38560  006240  D002               	goto	l2143
 38561                           
 38562                           ; BSR set to: 0
 38563                           ;fat16.c: 902: {;fat16.c: 903: return 0xFB;
 38564  006242  0EFB               	movlw	251
 38565                           
 38566                           ; BSR set to: 0
 38567  006244  0012               	return	
 38568  006246                     l2143:
 38569                           
 38570                           ; BSR set to: 0
 38571                           
 38572                           ; BSR set to: 0
 38573  006246  4B91               	infsnz	fat_copy_file@sector& (0+255),f,b
 38574  006248  2B92               	incf	(fat_copy_file@sector+1)& (0+255),f,b
 38575  00624A                     l2140:
 38576                           
 38577                           ; BSR set to: 0
 38578                           
 38579                           ; BSR set to: 0
 38580  00624A  5189               	movf	fat_copy_file@number_of_clusters& (0+255),w,b
 38581  00624C  5D91               	subwf	fat_copy_file@sector& (0+255),w,b
 38582  00624E  518A               	movf	(fat_copy_file@number_of_clusters+1)& (0+255),w,b
 38583  006250  5992               	subwfb	(fat_copy_file@sector+1)& (0+255),w,b
 38584  006252  A0D8               	btfss	status,0,c
 38585  006254  D7DC               	goto	l2141
 38586                           
 38587                           ; BSR set to: 0
 38588                           ;fat16.c: 904: };fat16.c: 905: };fat16.c: 907: return 0x00;
 38589                           
 38590                           ; BSR set to: 0
 38591  006256  0E00               	movlw	0
 38592  006258  0012               	return	
 38593  00625A                     __end_of_fat_copy_file:
 38594                           	opt stack 0
 38595                           tosu	equ	0xFFF
 38596                           tosh	equ	0xFFE
 38597                           tosl	equ	0xFFD
 38598                           pclath	equ	0xFFA
 38599                           tblptru	equ	0xFF8
 38600                           tblptrh	equ	0xFF7
 38601                           tblptrl	equ	0xFF6
 38602                           tablat	equ	0xFF5
 38603                           prodh	equ	0xFF4
 38604                           prodl	equ	0xFF3
 38605                           intcon	equ	0xFF2
 38606                           intcon2	equ	0xFF1
 38607                           intcon3	equ	0xFF0
 38608                           indf0	equ	0xFEF
 38609                           postinc0	equ	0xFEE
 38610                           fsr0h	equ	0xFEA
 38611                           fsr0l	equ	0xFE9
 38612                           wreg	equ	0xFE8
 38613                           indf1	equ	0xFE7
 38614                           postdec1	equ	0xFE5
 38615                           plusw1	equ	0xFE3
 38616                           fsr1h	equ	0xFE2
 38617                           fsr1l	equ	0xFE1
 38618                           indf2	equ	0xFDF
 38619                           postinc2	equ	0xFDE
 38620                           postdec2	equ	0xFDD
 38621                           plusw2	equ	0xFDB
 38622                           fsr2h	equ	0xFDA
 38623                           fsr2l	equ	0xFD9
 38624                           status	equ	0xFD8
 38625                           
 38626 ;; *************** function _fat_create_file *****************
 38627 ;; Defined at:
 38628 ;;		line 586 in file "fat16.c"
 38629 ;; Parameters:    Size  Location     Type
 38630 ;;  name            2   76[COMRAM] PTR unsigned char 
 38631 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38632 ;;  extension       2   78[COMRAM] PTR unsigned char 
 38633 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38634 ;;  size            4   80[COMRAM] unsigned long 
 38635 ;; Auto vars:     Size  Location     Type
 38636 ;;  root_entry     32    5[BANK0 ] struct .
 38637 ;;  first_cluste    2    2[BANK0 ] unsigned int 
 38638 ;;  number_of_cl    2    0[BANK0 ] unsigned int 
 38639 ;;  file_number     1    4[BANK0 ] unsigned char 
 38640 ;; Return value:  Size  Location     Type
 38641 ;;                  1    wreg      unsigned char 
 38642 ;; Registers used:
 38643 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38644 ;; Tracked objects:
 38645 ;;		On entry : 0/0
 38646 ;;		On exit  : 0/0
 38647 ;;		Unchanged: 0/0
 38648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38649 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38650 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38651 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38652 ;;      Totals:        12      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38653 ;;Total ram usage:       49 bytes
 38654 ;; Hardware stack levels used:    1
 38655 ;; Hardware stack levels required when called:    7
 38656 ;; This function calls:
 38657 ;;		__get_available_root_entry
 38658 ;;		__get_date
 38659 ;;		__get_time
 38660 ;;		__make_cluster_chain
 38661 ;;		__write_root
 38662 ;;		_fat_find_file
 38663 ;;		_memcpy
 38664 ;; This function is called by:
 38665 ;;		_fat_copy_file
 38666 ;;		__parse_file_create
 38667 ;; This function uses a non-reentrant model
 38668 ;;
 38669                           
 38670                           	psect	text187
 38671  004E4E                     __ptext187:
 38672                           	opt stack 0
 38673  004E4E                     _fat_create_file:
 38674                           	opt stack 20
 38675                           
 38676                           ;fat16.c: 588: rootEntry_t root_entry;;fat16.c: 589: uint8_t file_number;;fat16.c: 590: 
      +                          uint16_t number_of_clusters;;fat16.c: 591: uint16_t first_cluster;;fat16.c: 595: if(fat_
      +                          find_file(name, extension) != 0xFF)
 38677                           
 38678                           ;incstack = 0
 38679  004E4E  C04D  F02C         	movff	fat_create_file@name,fat_find_file@name
 38680  004E52  C04E  F02D         	movff	fat_create_file@name+1,fat_find_file@name+1
 38681  004E56  C04F  F02E         	movff	fat_create_file@extension,fat_find_file@extension
 38682  004E5A  C050  F02F         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 38683  004E5E  EC49  F034         	call	_fat_find_file	;wreg free
 38684  004E62  0AFF               	xorlw	255
 38685  004E64  B4D8               	btfsc	status,2,c
 38686  004E66  D002               	goto	l2096
 38687                           
 38688                           ;fat16.c: 596: {;fat16.c: 599: return 0xFF;
 38689  004E68  0EFF               	movlw	255
 38690  004E6A  0012               	return	
 38691  004E6C                     l2096:
 38692                           
 38693                           ;fat16.c: 600: };fat16.c: 604: file_number = _get_available_root_entry();
 38694  004E6C  ECBD  F04C         	call	__get_available_root_entry	;wreg free
 38695  004E70  0100               	movlb	0	; () banked
 38696  004E72  6F64               	movwf	fat_create_file@file_number& (0+255),b
 38697                           
 38698                           ; BSR set to: 0
 38699                           ;fat16.c: 605: if(file_number == 0xFF)
 38700  004E74  2964               	incf	fat_create_file@file_number& (0+255),w,b
 38701  004E76  A4D8               	btfss	status,2,c
 38702  004E78  D002               	goto	l2098
 38703                           
 38704                           ; BSR set to: 0
 38705                           ;fat16.c: 606: {;fat16.c: 609: return 0xFE;
 38706  004E7A  0EFE               	movlw	254
 38707                           
 38708                           ; BSR set to: 0
 38709  004E7C  0012               	return	
 38710  004E7E                     l2098:
 38711                           
 38712                           ; BSR set to: 0
 38713                           ;fat16.c: 610: };fat16.c: 613: number_of_clusters = (size + 512 - 1) >> 9;
 38714                           
 38715                           ; BSR set to: 0
 38716  004E7E  0EFF               	movlw	255
 38717  004E80  2451               	addwf	fat_create_file@size,w,c
 38718  004E82  6E55               	movwf	??_fat_create_file& (0+255),c
 38719  004E84  0E01               	movlw	1
 38720  004E86  2052               	addwfc	fat_create_file@size+1,w,c
 38721  004E88  6E56               	movwf	(??_fat_create_file+1)& (0+255),c
 38722  004E8A  0E00               	movlw	0
 38723  004E8C  2053               	addwfc	fat_create_file@size+2,w,c
 38724  004E8E  6E57               	movwf	(??_fat_create_file+2)& (0+255),c
 38725  004E90  0E00               	movlw	0
 38726  004E92  2054               	addwfc	fat_create_file@size+3,w,c
 38727  004E94  6E58               	movwf	(??_fat_create_file+3)& (0+255),c
 38728  004E96  0E0A               	movlw	10
 38729  004E98  D005               	goto	u9730
 38730  004E9A                     u9735:
 38731  004E9A  90D8               	bcf	status,0,c
 38732  004E9C  3258               	rrcf	??_fat_create_file+3,f,c
 38733  004E9E  3257               	rrcf	??_fat_create_file+2,f,c
 38734  004EA0  3256               	rrcf	??_fat_create_file+1,f,c
 38735  004EA2  3255               	rrcf	??_fat_create_file,f,c
 38736  004EA4                     u9730:
 38737  004EA4  2EE8               	decfsz	wreg,f,c
 38738  004EA6  D7F9               	goto	u9735
 38739  004EA8  C055  F060         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 38740  004EAC  C056  F061         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 38741                           
 38742                           ; BSR set to: 0
 38743                           ;fat16.c: 616: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 38744  004EB0  0E00               	movlw	0
 38745  004EB2  6E37               	movwf	__make_cluster_chain@first_cluster+1,c
 38746  004EB4  0E00               	movlw	0
 38747  004EB6  6E36               	movwf	__make_cluster_chain@first_cluster,c
 38748  004EB8  C060  F038         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 38749  004EBC  C061  F039         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 38750  004EC0  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 38751  004EC4  C036  F062         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 38752  004EC8  C037  F063         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 38753                           
 38754                           ;fat16.c: 619: if(first_cluster == 0xFFFF)
 38755  004ECC  0100               	movlb	0	; () banked
 38756  004ECE  2962               	incf	fat_create_file@first_cluster& (0+255),w,b
 38757  004ED0  E105               	bnz	l12630
 38758  004ED2  2963               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 38759  004ED4  A4D8               	btfss	status,2,c
 38760  004ED6  D002               	goto	l2099
 38761                           
 38762                           ; BSR set to: 0
 38763                           ;fat16.c: 620: {;fat16.c: 623: return 0xFD;
 38764  004ED8  0EFD               	movlw	253
 38765                           
 38766                           ; BSR set to: 0
 38767  004EDA  0012               	return	
 38768  004EDC                     l2099:
 38769  004EDC                     l12630:
 38770                           
 38771                           ; BSR set to: 0
 38772                           ;fat16.c: 624: };fat16.c: 627: memcpy(root_entry.fileName, name, 8);
 38773  004EDC  0E65               	movlw	low fat_create_file@root_entry
 38774  004EDE  6E01               	movwf	memcpy@d1,c
 38775  004EE0  0E00               	movlw	high fat_create_file@root_entry
 38776  004EE2  6E02               	movwf	memcpy@d1+1,c
 38777  004EE4  C04D  F003         	movff	fat_create_file@name,memcpy@s1
 38778  004EE8  C04E  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 38779  004EEC  5003               	movf	memcpy@s1,w,c
 38780  004EEE  1004               	iorwf	memcpy@s1+1,w,c
 38781  004EF0  A4D8               	btfss	status,2,c
 38782  004EF2  0E20               	movlw	32
 38783  004EF4  6E05               	movwf	memcpy@s1+2,c
 38784  004EF6  0E00               	movlw	0
 38785  004EF8  6E07               	movwf	memcpy@n+1,c
 38786  004EFA  0E08               	movlw	8
 38787  004EFC  6E06               	movwf	memcpy@n,c
 38788  004EFE  ECEF  F043         	call	_memcpy	;wreg free
 38789                           
 38790                           ;fat16.c: 628: memcpy(root_entry.fileExtension, extension, 3);
 38791  004F02  0E6D               	movlw	low (fat_create_file@root_entry+8)
 38792  004F04  6E01               	movwf	memcpy@d1,c
 38793  004F06  0E00               	movlw	high (fat_create_file@root_entry+8)
 38794  004F08  6E02               	movwf	memcpy@d1+1,c
 38795  004F0A  C04F  F003         	movff	fat_create_file@extension,memcpy@s1
 38796  004F0E  C050  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 38797  004F12  5003               	movf	memcpy@s1,w,c
 38798  004F14  1004               	iorwf	memcpy@s1+1,w,c
 38799  004F16  A4D8               	btfss	status,2,c
 38800  004F18  0E20               	movlw	32
 38801  004F1A  6E05               	movwf	memcpy@s1+2,c
 38802  004F1C  0E00               	movlw	0
 38803  004F1E  6E07               	movwf	memcpy@n+1,c
 38804  004F20  0E03               	movlw	3
 38805  004F22  6E06               	movwf	memcpy@n,c
 38806  004F24  ECEF  F043         	call	_memcpy	;wreg free
 38807                           
 38808                           ;fat16.c: 629: root_entry.attributes = 0x00;
 38809  004F28  0E00               	movlw	0
 38810  004F2A  0100               	movlb	0	; () banked
 38811  004F2C  6F70               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 38812                           
 38813                           ; BSR set to: 0
 38814                           ;fat16.c: 630: root_entry.reserved1 = 0x00;
 38815  004F2E  0E00               	movlw	0
 38816  004F30  6F71               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 38817                           
 38818                           ; BSR set to: 0
 38819                           ;fat16.c: 631: root_entry.secondFractions = 0x00;
 38820  004F32  0E00               	movlw	0
 38821  004F34  6F72               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 38822                           
 38823                           ; BSR set to: 0
 38824                           ;fat16.c: 632: root_entry.createdTime = _get_time();
 38825  004F36  EC6D  F04E         	call	__get_time	;wreg free
 38826  004F3A  C001  F073         	movff	?__get_time,fat_create_file@root_entry+14
 38827  004F3E  C002  F074         	movff	?__get_time+1,fat_create_file@root_entry+15
 38828                           
 38829                           ;fat16.c: 633: root_entry.createdDate = _get_date();
 38830  004F42  EC72  F04E         	call	__get_date	;wreg free
 38831  004F46  C001  F075         	movff	?__get_date,fat_create_file@root_entry+16
 38832  004F4A  C002  F076         	movff	?__get_date+1,fat_create_file@root_entry+17
 38833                           
 38834                           ;fat16.c: 634: root_entry.lastAccessDate = root_entry.createdDate;
 38835  004F4E  C075  F077         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 38836  004F52  C076  F078         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 38837                           
 38838                           ;fat16.c: 635: root_entry.reserved2 = 0x00;
 38839  004F56  0E00               	movlw	0
 38840  004F58  0100               	movlb	0	; () banked
 38841  004F5A  6F7A               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 38842  004F5C  0E00               	movlw	0
 38843  004F5E  6F79               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 38844                           
 38845                           ; BSR set to: 0
 38846                           ;fat16.c: 636: root_entry.modifiedTime = root_entry.createdTime;
 38847  004F60  C073  F07B         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 38848  004F64  C074  F07C         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 38849                           
 38850                           ; BSR set to: 0
 38851                           ;fat16.c: 637: root_entry.modifiedDate = root_entry.createdDate;
 38852  004F68  C075  F07D         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 38853  004F6C  C076  F07E         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 38854                           
 38855                           ; BSR set to: 0
 38856                           ;fat16.c: 638: root_entry.firstCluster = first_cluster;
 38857  004F70  C062  F07F         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 38858  004F74  C063  F080         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 38859                           
 38860                           ; BSR set to: 0
 38861                           ;fat16.c: 639: root_entry.fileSize = size;
 38862  004F78  C051  F081         	movff	fat_create_file@size,fat_create_file@root_entry+28
 38863  004F7C  C052  F082         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 38864  004F80  C053  F083         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 38865  004F84  C054  F084         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 38866                           
 38867                           ; BSR set to: 0
 38868                           ;fat16.c: 642: _write_root(file_number, &root_entry);
 38869  004F88  0E65               	movlw	low fat_create_file@root_entry
 38870  004F8A  6E29               	movwf	__write_root@data,c
 38871  004F8C  0E00               	movlw	high fat_create_file@root_entry
 38872  004F8E  6E2A               	movwf	__write_root@data+1,c
 38873  004F90  5164               	movf	fat_create_file@file_number& (0+255),w,b
 38874  004F92  EC16  F049         	call	__write_root
 38875                           
 38876                           ;fat16.c: 644: return file_number;
 38877  004F96  0100               	movlb	0	; () banked
 38878  004F98  5164               	movf	fat_create_file@file_number& (0+255),w,b
 38879  004F9A  0012               	return	
 38880  004F9C                     __end_of_fat_create_file:
 38881                           	opt stack 0
 38882                           tosu	equ	0xFFF
 38883                           tosh	equ	0xFFE
 38884                           tosl	equ	0xFFD
 38885                           pclath	equ	0xFFA
 38886                           tblptru	equ	0xFF8
 38887                           tblptrh	equ	0xFF7
 38888                           tblptrl	equ	0xFF6
 38889                           tablat	equ	0xFF5
 38890                           prodh	equ	0xFF4
 38891                           prodl	equ	0xFF3
 38892                           intcon	equ	0xFF2
 38893                           intcon2	equ	0xFF1
 38894                           intcon3	equ	0xFF0
 38895                           indf0	equ	0xFEF
 38896                           postinc0	equ	0xFEE
 38897                           fsr0h	equ	0xFEA
 38898                           fsr0l	equ	0xFE9
 38899                           wreg	equ	0xFE8
 38900                           indf1	equ	0xFE7
 38901                           postdec1	equ	0xFE5
 38902                           plusw1	equ	0xFE3
 38903                           fsr1h	equ	0xFE2
 38904                           fsr1l	equ	0xFE1
 38905                           indf2	equ	0xFDF
 38906                           postinc2	equ	0xFDE
 38907                           postdec2	equ	0xFDD
 38908                           plusw2	equ	0xFDB
 38909                           fsr2h	equ	0xFDA
 38910                           fsr2l	equ	0xFD9
 38911                           status	equ	0xFD8
 38912                           
 38913 ;; *************** function _memcpy *****************
 38914 ;; Defined at:
 38915 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 38916 ;; Parameters:    Size  Location     Type
 38917 ;;  d1              2    0[COMRAM] PTR void 
 38918 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 38919 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 38920 ;;  s1              3    2[COMRAM] PTR const void 
 38921 ;;		 -> _spi_external_rx_buffer(64), ROM(49151), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 38922 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 38923 ;;		 -> SetupPkt(8), 
 38924 ;;  n               2    5[COMRAM] unsigned int 
 38925 ;; Auto vars:     Size  Location     Type
 38926 ;;  s               3    7[COMRAM] PTR const unsigned char 
 38927 ;;		 -> _spi_external_rx_buffer(64), ROM(49151), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 38928 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 38929 ;;		 -> SetupPkt(8), 
 38930 ;;  d               2   10[COMRAM] PTR unsigned char 
 38931 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 38932 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 38933 ;;  tmp             1   12[COMRAM] unsigned char 
 38934 ;; Return value:  Size  Location     Type
 38935 ;;                  2    0[COMRAM] PTR void 
 38936 ;; Registers used:
 38937 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 38938 ;; Tracked objects:
 38939 ;;		On entry : 0/0
 38940 ;;		On exit  : 0/0
 38941 ;;		Unchanged: 0/0
 38942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38943 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38944 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38946 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38947 ;;Total ram usage:       13 bytes
 38948 ;; Hardware stack levels used:    1
 38949 ;; This function calls:
 38950 ;;		Nothing
 38951 ;; This function is called by:
 38952 ;;		_USBCtrlEPService
 38953 ;;		_MSDProcessCommandMediaPresent
 38954 ;;		__flash_set_page_size
 38955 ;;		_fat_create_file
 38956 ;;		_internalFlash_read
 38957 ;;		_api_prepare
 38958 ;; This function uses a non-reentrant model
 38959 ;;
 38960                           
 38961                           	psect	text188
 38962  0087DE                     __ptext188:
 38963                           	opt stack 0
 38964  0087DE                     _memcpy:
 38965                           	opt stack 27
 38966                           
 38967                           ;incstack = 0
 38968  0087DE  C003  F008         	movff	memcpy@s1,memcpy@s
 38969  0087E2  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 38970  0087E6  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 38971  0087EA  C001  F00B         	movff	memcpy@d1,memcpy@d
 38972  0087EE  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 38973  0087F2  D01F               	goto	l3764
 38974  0087F4                     l11310:
 38975  0087F4  C008  FFF6         	movff	memcpy@s,tblptrl
 38976  0087F8  C009  FFF7         	movff	memcpy@s+1,tblptrh
 38977  0087FC  C00A  FFF8         	movff	memcpy@s+2,tblptru
 38978  008800  BAF8               	btfsc	tblptru,5,c
 38979  008802  D003               	bra	u8037
 38980  008804  0008               	tblrd		*
 38981  008806  50F5               	movf	tablat,w,c
 38982  008808  D005               	bra	u8030
 38983  00880A                     u8037:
 38984  00880A  CFF6 FFE9          	movff	tblptrl,fsr0l
 38985  00880E  CFF7 FFEA          	movff	tblptrh,fsr0h
 38986  008812  50EF               	movf	indf0,w,c
 38987  008814                     u8030:
 38988  008814  6E0D               	movwf	memcpy@tmp,c
 38989  008816  0E01               	movlw	1
 38990  008818  2608               	addwf	memcpy@s,f,c
 38991  00881A  0E00               	movlw	0
 38992  00881C  2209               	addwfc	memcpy@s+1,f,c
 38993  00881E  0E00               	movlw	0
 38994  008820  220A               	addwfc	memcpy@s+2,f,c
 38995  008822  C00B  FFD9         	movff	memcpy@d,fsr2l
 38996  008826  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 38997  00882A  C00D  FFDF         	movff	memcpy@tmp,indf2
 38998  00882E  4A0B               	infsnz	memcpy@d,f,c
 38999  008830  2A0C               	incf	memcpy@d+1,f,c
 39000  008832                     l3764:
 39001  008832  0606               	decf	memcpy@n,f,c
 39002  008834  A0D8               	btfss	status,0,c
 39003  008836  0607               	decf	memcpy@n+1,f,c
 39004  008838  2806               	incf	memcpy@n,w,c
 39005  00883A  E1DC               	bnz	l11310
 39006  00883C  2807               	incf	memcpy@n+1,w,c
 39007  00883E  B4D8               	btfsc	status,2,c
 39008  008840  0012               	return	
 39009  008842  D7D8               	goto	l3765
 39010  008844                     __end_of_memcpy:
 39011                           	opt stack 0
 39012                           tosu	equ	0xFFF
 39013                           tosh	equ	0xFFE
 39014                           tosl	equ	0xFFD
 39015                           pclath	equ	0xFFA
 39016                           tblptru	equ	0xFF8
 39017                           tblptrh	equ	0xFF7
 39018                           tblptrl	equ	0xFF6
 39019                           tablat	equ	0xFF5
 39020                           prodh	equ	0xFF4
 39021                           prodl	equ	0xFF3
 39022                           intcon	equ	0xFF2
 39023                           intcon2	equ	0xFF1
 39024                           intcon3	equ	0xFF0
 39025                           indf0	equ	0xFEF
 39026                           postinc0	equ	0xFEE
 39027                           fsr0h	equ	0xFEA
 39028                           fsr0l	equ	0xFE9
 39029                           wreg	equ	0xFE8
 39030                           indf1	equ	0xFE7
 39031                           postdec1	equ	0xFE5
 39032                           plusw1	equ	0xFE3
 39033                           fsr1h	equ	0xFE2
 39034                           fsr1l	equ	0xFE1
 39035                           indf2	equ	0xFDF
 39036                           postinc2	equ	0xFDE
 39037                           postdec2	equ	0xFDD
 39038                           plusw2	equ	0xFDB
 39039                           fsr2h	equ	0xFDA
 39040                           fsr2l	equ	0xFD9
 39041                           status	equ	0xFD8
 39042                           
 39043 ;; *************** function _fat_find_file *****************
 39044 ;; Defined at:
 39045 ;;		line 517 in file "fat16.c"
 39046 ;; Parameters:    Size  Location     Type
 39047 ;;  name            2   43[COMRAM] PTR unsigned char 
 39048 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), ReceivedDataBuffer(64), RAM(3759), 
 39049 ;;  extension       2   45[COMRAM] PTR unsigned char 
 39050 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), ReceivedDataBuffer(64), RAM(3759), 
 39051 ;; Auto vars:     Size  Location     Type
 39052 ;;  offset          2   52[COMRAM] unsigned int 
 39053 ;;  sector          2   50[COMRAM] unsigned int 
 39054 ;;  file_number     1   49[COMRAM] unsigned char 
 39055 ;; Return value:  Size  Location     Type
 39056 ;;                  1    wreg      unsigned char 
 39057 ;; Registers used:
 39058 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39059 ;; Tracked objects:
 39060 ;;		On entry : 0/0
 39061 ;;		On exit  : 0/0
 39062 ;;		Unchanged: 0/0
 39063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39065 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39066 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39067 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39068 ;;Total ram usage:       11 bytes
 39069 ;; Hardware stack levels used:    1
 39070 ;; Hardware stack levels required when called:    5
 39071 ;; This function calls:
 39072 ;;		_flash_sector_read
 39073 ;;		_strncmp
 39074 ;; This function is called by:
 39075 ;;		_fat_create_file
 39076 ;;		__bootloader_find_file
 39077 ;;		__fill_buffer_find_file
 39078 ;; This function uses a non-reentrant model
 39079 ;;
 39080                           
 39081                           	psect	text189
 39082  006892                     __ptext189:
 39083                           	opt stack 0
 39084  006892                     _fat_find_file:
 39085                           	opt stack 23
 39086                           
 39087                           ;fat16.c: 519: uint8_t file_number = 0;
 39088                           
 39089                           ;incstack = 0
 39090  006892  0E00               	movlw	0
 39091  006894  6E32               	movwf	fat_find_file@file_number,c
 39092                           
 39093                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 39094  006896  0E00               	movlw	0
 39095  006898  6E34               	movwf	fat_find_file@sector+1,c
 39096  00689A  0E22               	movlw	34
 39097  00689C  6E33               	movwf	fat_find_file@sector,c
 39098  00689E  5034               	movf	fat_find_file@sector+1,w,c
 39099  0068A0  E166               	bnz	l2080
 39100  0068A2  0E26               	movlw	38
 39101  0068A4  5C33               	subwf	fat_find_file@sector,w,c
 39102  0068A6  B0D8               	btfsc	status,0,c
 39103  0068A8  D062               	goto	u8770
 39104                           
 39105                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 39106  0068AA  C033  F028         	movff	fat_find_file@sector,flash_sector_read@page
 39107  0068AE  C034  F029         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 39108  0068B2  0EC0               	movlw	low _buffer
 39109  0068B4  6E2A               	movwf	flash_sector_read@data,c
 39110  0068B6  0E03               	movlw	high _buffer
 39111  0068B8  6E2B               	movwf	flash_sector_read@data+1,c
 39112  0068BA  ECE7  F04A         	call	_flash_sector_read	;wreg free
 39113                           
 39114                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 39115  0068BE  0E00               	movlw	0
 39116  0068C0  6E36               	movwf	fat_find_file@offset+1,c
 39117  0068C2  0E00               	movlw	0
 39118  0068C4  6E35               	movwf	fat_find_file@offset,c
 39119  0068C6                     l11834:
 39120  0068C6  0E02               	movlw	2
 39121  0068C8  5C36               	subwf	fat_find_file@offset+1,w,c
 39122  0068CA  B0D8               	btfsc	status,0,c
 39123  0068CC  D04B               	goto	u8760
 39124                           
 39125                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 39126  0068CE  0EC0               	movlw	low _buffer
 39127  0068D0  2435               	addwf	fat_find_file@offset,w,c
 39128  0068D2  6ED9               	movwf	fsr2l,c
 39129  0068D4  0E03               	movlw	high _buffer
 39130  0068D6  2036               	addwfc	fat_find_file@offset+1,w,c
 39131  0068D8  6EDA               	movwf	fsr2h,c
 39132  0068DA  50DF               	movf	indf2,w,c
 39133  0068DC  A4D8               	btfss	status,2,c
 39134  0068DE  D002               	goto	l2083
 39135                           
 39136                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 39137  0068E0  0EFF               	movlw	255
 39138  0068E2  0012               	return	
 39139  0068E4                     l2083:
 39140                           
 39141                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 39142  0068E4  0EC0               	movlw	low _buffer
 39143  0068E6  2435               	addwf	fat_find_file@offset,w,c
 39144  0068E8  6ED9               	movwf	fsr2l,c
 39145  0068EA  0E03               	movlw	high _buffer
 39146  0068EC  2036               	addwfc	fat_find_file@offset+1,w,c
 39147  0068EE  6EDA               	movwf	fsr2h,c
 39148  0068F0  0EE5               	movlw	229
 39149  0068F2  18DE               	xorwf	postinc2,w,c
 39150  0068F4  B4D8               	btfsc	status,2,c
 39151  0068F6  D030               	goto	l2089
 39152                           
 39153                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 39154                           
 39155                           ;fat16.c: 537: {;fat16.c: 541: }
 39156  0068F8  C02C  F001         	movff	fat_find_file@name,strncmp@s1
 39157  0068FC  C02D  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 39158  006900  0EC0               	movlw	low _buffer
 39159  006902  2435               	addwf	fat_find_file@offset,w,c
 39160  006904  6E03               	movwf	strncmp@s2,c
 39161  006906  0E03               	movlw	high _buffer
 39162  006908  2036               	addwfc	fat_find_file@offset+1,w,c
 39163  00690A  6E04               	movwf	strncmp@s2+1,c
 39164  00690C  0E00               	movlw	0
 39165  00690E  6E06               	movwf	strncmp@len+1,c
 39166  006910  0E08               	movlw	8
 39167  006912  6E05               	movwf	strncmp@len,c
 39168  006914  ECB9  F038         	call	_strncmp	;wreg free
 39169  006918  5001               	movf	?_strncmp,w,c
 39170  00691A  1002               	iorwf	?_strncmp+1,w,c
 39171  00691C  A4D8               	btfss	status,2,c
 39172  00691E  D01C               	goto	l2089
 39173                           
 39174                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 39175  006920  C02E  F001         	movff	fat_find_file@extension,strncmp@s1
 39176  006924  C02F  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 39177  006928  0E08               	movlw	8
 39178  00692A  2435               	addwf	fat_find_file@offset,w,c
 39179  00692C  6E30               	movwf	??_fat_find_file& (0+255),c
 39180  00692E  0E00               	movlw	0
 39181  006930  2036               	addwfc	fat_find_file@offset+1,w,c
 39182  006932  6E31               	movwf	(??_fat_find_file+1)& (0+255),c
 39183  006934  0EC0               	movlw	low _buffer
 39184  006936  2430               	addwf	??_fat_find_file,w,c
 39185  006938  6E03               	movwf	strncmp@s2,c
 39186  00693A  0E03               	movlw	high _buffer
 39187  00693C  2031               	addwfc	??_fat_find_file+1,w,c
 39188  00693E  6E04               	movwf	strncmp@s2+1,c
 39189  006940  0E00               	movlw	0
 39190  006942  6E06               	movwf	strncmp@len+1,c
 39191  006944  0E03               	movlw	3
 39192  006946  6E05               	movwf	strncmp@len,c
 39193  006948  ECB9  F038         	call	_strncmp	;wreg free
 39194  00694C  5001               	movf	?_strncmp,w,c
 39195  00694E  1002               	iorwf	?_strncmp+1,w,c
 39196  006950  A4D8               	btfss	status,2,c
 39197  006952  D002               	goto	l2089
 39198                           
 39199                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 39200  006954  5032               	movf	fat_find_file@file_number,w,c
 39201  006956  0012               	return	
 39202  006958                     l2089:
 39203                           
 39204                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 39205  006958  2A32               	incf	fat_find_file@file_number,f,c
 39206  00695A  0E20               	movlw	32
 39207  00695C  2635               	addwf	fat_find_file@offset,f,c
 39208  00695E  0E00               	movlw	0
 39209  006960  2236               	addwfc	fat_find_file@offset+1,f,c
 39210  006962  D7B1               	goto	l11834
 39211  006964                     u8760:
 39212  006964  4A33               	infsnz	fat_find_file@sector,f,c
 39213  006966  2A34               	incf	fat_find_file@sector+1,f,c
 39214  006968  5034               	movf	fat_find_file@sector+1,w,c
 39215  00696A  E101               	bnz	l11868
 39216  00696C  D79A               	goto	L45
 39217  00696E                     u8770:
 39218  00696E                     l2080:
 39219  00696E                     l11868:
 39220                           
 39221                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 39222  00696E  0EFF               	movlw	255
 39223  006970  0012               	return	
 39224  006972                     __end_of_fat_find_file:
 39225                           	opt stack 0
 39226                           tosu	equ	0xFFF
 39227                           tosh	equ	0xFFE
 39228                           tosl	equ	0xFFD
 39229                           pclath	equ	0xFFA
 39230                           tblptru	equ	0xFF8
 39231                           tblptrh	equ	0xFF7
 39232                           tblptrl	equ	0xFF6
 39233                           tablat	equ	0xFF5
 39234                           prodh	equ	0xFF4
 39235                           prodl	equ	0xFF3
 39236                           intcon	equ	0xFF2
 39237                           intcon2	equ	0xFF1
 39238                           intcon3	equ	0xFF0
 39239                           indf0	equ	0xFEF
 39240                           postinc0	equ	0xFEE
 39241                           fsr0h	equ	0xFEA
 39242                           fsr0l	equ	0xFE9
 39243                           wreg	equ	0xFE8
 39244                           indf1	equ	0xFE7
 39245                           postdec1	equ	0xFE5
 39246                           plusw1	equ	0xFE3
 39247                           fsr1h	equ	0xFE2
 39248                           fsr1l	equ	0xFE1
 39249                           indf2	equ	0xFDF
 39250                           postinc2	equ	0xFDE
 39251                           postdec2	equ	0xFDD
 39252                           plusw2	equ	0xFDB
 39253                           fsr2h	equ	0xFDA
 39254                           fsr2l	equ	0xFD9
 39255                           status	equ	0xFD8
 39256                           
 39257 ;; *************** function _strncmp *****************
 39258 ;; Defined at:
 39259 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 39260 ;; Parameters:    Size  Location     Type
 39261 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 39262 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), ReceivedDataBuffer(64), 
 39263 ;;		 -> RAM(3759), 
 39264 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 39265 ;;		 -> buffer(512), 
 39266 ;;  len             2    4[COMRAM] unsigned int 
 39267 ;; Auto vars:     Size  Location     Type
 39268 ;;		None
 39269 ;; Return value:  Size  Location     Type
 39270 ;;                  2    0[COMRAM] int 
 39271 ;; Registers used:
 39272 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 39273 ;; Tracked objects:
 39274 ;;		On entry : 0/0
 39275 ;;		On exit  : 0/0
 39276 ;;		Unchanged: 0/0
 39277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39278 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39280 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39281 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39282 ;;Total ram usage:        9 bytes
 39283 ;; Hardware stack levels used:    1
 39284 ;; This function calls:
 39285 ;;		Nothing
 39286 ;; This function is called by:
 39287 ;;		_fat_find_file
 39288 ;; This function uses a non-reentrant model
 39289 ;;
 39290                           
 39291                           	psect	text190
 39292  007172                     __ptext190:
 39293                           	opt stack 0
 39294  007172                     _strncmp:
 39295                           	opt stack 27
 39296                           
 39297                           ;incstack = 0
 39298  007172  D053               	goto	l3782
 39299  007174                     l11254:
 39300  007174  C001  FFF6         	movff	strncmp@s1,tblptrl
 39301  007178  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 39302  00717C  6AF8               	clrf	tblptru,c
 39303  00717E  0E0E               	movlw	(high __ramtop+-1)
 39304  007180  64F7               	cpfsgt	tblptrh,c
 39305  007182  D003               	bra	u7927
 39306  007184  0008               	tblrd		*
 39307  007186  50F5               	movf	tablat,w,c
 39308  007188  D005               	bra	u7920
 39309  00718A                     u7927:
 39310  00718A  CFF6 FFE9          	movff	tblptrl,fsr0l
 39311  00718E  CFF7 FFEA          	movff	tblptrh,fsr0h
 39312  007192  50EF               	movf	indf0,w,c
 39313  007194                     u7920:
 39314  007194  0900               	iorlw	0
 39315  007196  B4D8               	btfsc	status,2,c
 39316  007198  D019               	goto	u7940
 39317  00719A  C003  FFD9         	movff	strncmp@s2,fsr2l
 39318  00719E  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 39319  0071A2  50DF               	movf	indf2,w,c
 39320  0071A4  6E07               	movwf	??_strncmp& (0+255),c
 39321  0071A6  C001  FFF6         	movff	strncmp@s1,tblptrl
 39322  0071AA  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 39323  0071AE  6AF8               	clrf	tblptru,c
 39324  0071B0  0E0E               	movlw	(high __ramtop+-1)
 39325  0071B2  64F7               	cpfsgt	tblptrh,c
 39326  0071B4  D003               	bra	u7947
 39327  0071B6  0008               	tblrd		*
 39328  0071B8  50F5               	movf	tablat,w,c
 39329  0071BA  D005               	bra	u7945
 39330  0071BC                     u7947:
 39331  0071BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 39332  0071C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 39333  0071C4  50EF               	movf	indf0,w,c
 39334  0071C6                     u7945:
 39335  0071C6  1807               	xorwf	??_strncmp,w,c
 39336  0071C8  B4D8               	btfsc	status,2,c
 39337  0071CA  D023               	goto	l3784
 39338  0071CC                     u7940:
 39339  0071CC  C003  FFD9         	movff	strncmp@s2,fsr2l
 39340  0071D0  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 39341  0071D4  50DF               	movf	indf2,w,c
 39342  0071D6  6E07               	movwf	??_strncmp& (0+255),c
 39343  0071D8  6A08               	clrf	(??_strncmp+1)& (0+255),c
 39344  0071DA  1E07               	comf	??_strncmp,f,c
 39345  0071DC  1E08               	comf	??_strncmp+1,f,c
 39346  0071DE  4A07               	infsnz	??_strncmp,f,c
 39347  0071E0  2A08               	incf	??_strncmp+1,f,c
 39348  0071E2  C001  FFF6         	movff	strncmp@s1,tblptrl
 39349  0071E6  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 39350  0071EA  6AF8               	clrf	tblptru,c
 39351  0071EC  0E0E               	movlw	(high __ramtop+-1)
 39352  0071EE  64F7               	cpfsgt	tblptrh,c
 39353  0071F0  D003               	bra	u7957
 39354  0071F2  0008               	tblrd		*
 39355  0071F4  50F5               	movf	tablat,w,c
 39356  0071F6  D005               	bra	u7950
 39357  0071F8                     u7957:
 39358  0071F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 39359  0071FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 39360  007200  50EF               	movf	indf0,w,c
 39361  007202                     u7950:
 39362  007202  6E09               	movwf	(??_strncmp+2)& (0+255),c
 39363  007204  5009               	movf	??_strncmp+2,w,c
 39364  007206  2407               	addwf	??_strncmp,w,c
 39365  007208  6E01               	movwf	?_strncmp,c
 39366  00720A  0E00               	movlw	0
 39367  00720C  2008               	addwfc	??_strncmp+1,w,c
 39368  00720E  6E02               	movwf	?_strncmp+1,c
 39369  007210  0012               	return	
 39370  007212                     l3784:
 39371  007212  4A01               	infsnz	strncmp@s1,f,c
 39372  007214  2A02               	incf	strncmp@s1+1,f,c
 39373  007216  4A03               	infsnz	strncmp@s2,f,c
 39374  007218  2A04               	incf	strncmp@s2+1,f,c
 39375  00721A                     l3782:
 39376  00721A  0605               	decf	strncmp@len,f,c
 39377  00721C  A0D8               	btfss	status,0,c
 39378  00721E  0606               	decf	strncmp@len+1,f,c
 39379  007220  2805               	incf	strncmp@len,w,c
 39380  007222  E1A8               	bnz	l11254
 39381  007224  2806               	incf	strncmp@len+1,w,c
 39382  007226  A4D8               	btfss	status,2,c
 39383  007228  D7A5               	goto	l3783
 39384  00722A  0E00               	movlw	0
 39385  00722C  6E02               	movwf	?_strncmp+1,c
 39386  00722E  0E00               	movlw	0
 39387  007230  6E01               	movwf	?_strncmp,c
 39388  007232  0012               	return	
 39389  007234                     __end_of_strncmp:
 39390                           	opt stack 0
 39391                           tosu	equ	0xFFF
 39392                           tosh	equ	0xFFE
 39393                           tosl	equ	0xFFD
 39394                           pclath	equ	0xFFA
 39395                           tblptru	equ	0xFF8
 39396                           tblptrh	equ	0xFF7
 39397                           tblptrl	equ	0xFF6
 39398                           tablat	equ	0xFF5
 39399                           prodh	equ	0xFF4
 39400                           prodl	equ	0xFF3
 39401                           intcon	equ	0xFF2
 39402                           intcon2	equ	0xFF1
 39403                           intcon3	equ	0xFF0
 39404                           indf0	equ	0xFEF
 39405                           postinc0	equ	0xFEE
 39406                           fsr0h	equ	0xFEA
 39407                           fsr0l	equ	0xFE9
 39408                           wreg	equ	0xFE8
 39409                           indf1	equ	0xFE7
 39410                           postdec1	equ	0xFE5
 39411                           plusw1	equ	0xFE3
 39412                           fsr1h	equ	0xFE2
 39413                           fsr1l	equ	0xFE1
 39414                           indf2	equ	0xFDF
 39415                           postinc2	equ	0xFDE
 39416                           postdec2	equ	0xFDD
 39417                           plusw2	equ	0xFDB
 39418                           fsr2h	equ	0xFDA
 39419                           fsr2l	equ	0xFD9
 39420                           status	equ	0xFD8
 39421                           
 39422 ;; *************** function __get_time *****************
 39423 ;; Defined at:
 39424 ;;		line 376 in file "fat16.c"
 39425 ;; Parameters:    Size  Location     Type
 39426 ;;		None
 39427 ;; Auto vars:     Size  Location     Type
 39428 ;;		None
 39429 ;; Return value:  Size  Location     Type
 39430 ;;                  2    0[COMRAM] unsigned int 
 39431 ;; Registers used:
 39432 ;;		wreg, status,2
 39433 ;; Tracked objects:
 39434 ;;		On entry : 0/0
 39435 ;;		On exit  : 0/0
 39436 ;;		Unchanged: 0/0
 39437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39441 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39442 ;;Total ram usage:        2 bytes
 39443 ;; Hardware stack levels used:    1
 39444 ;; This function calls:
 39445 ;;		Nothing
 39446 ;; This function is called by:
 39447 ;;		_fat_create_file
 39448 ;; This function uses a non-reentrant model
 39449 ;;
 39450                           
 39451                           	psect	text191
 39452  009CDA                     __ptext191:
 39453                           	opt stack 0
 39454  009CDA                     __get_time:
 39455                           	opt stack 26
 39456                           
 39457                           ;fat16.c: 388: return 0x0000;
 39458                           
 39459                           ;incstack = 0
 39460  009CDA  0E00               	movlw	0
 39461  009CDC  6E02               	movwf	?__get_time+1,c
 39462  009CDE  0E00               	movlw	0
 39463  009CE0  6E01               	movwf	?__get_time,c
 39464  009CE2  0012               	return	
 39465  009CE4                     __end_of__get_time:
 39466                           	opt stack 0
 39467                           tosu	equ	0xFFF
 39468                           tosh	equ	0xFFE
 39469                           tosl	equ	0xFFD
 39470                           pclath	equ	0xFFA
 39471                           tblptru	equ	0xFF8
 39472                           tblptrh	equ	0xFF7
 39473                           tblptrl	equ	0xFF6
 39474                           tablat	equ	0xFF5
 39475                           prodh	equ	0xFF4
 39476                           prodl	equ	0xFF3
 39477                           intcon	equ	0xFF2
 39478                           intcon2	equ	0xFF1
 39479                           intcon3	equ	0xFF0
 39480                           indf0	equ	0xFEF
 39481                           postinc0	equ	0xFEE
 39482                           fsr0h	equ	0xFEA
 39483                           fsr0l	equ	0xFE9
 39484                           wreg	equ	0xFE8
 39485                           indf1	equ	0xFE7
 39486                           postdec1	equ	0xFE5
 39487                           plusw1	equ	0xFE3
 39488                           fsr1h	equ	0xFE2
 39489                           fsr1l	equ	0xFE1
 39490                           indf2	equ	0xFDF
 39491                           postinc2	equ	0xFDE
 39492                           postdec2	equ	0xFDD
 39493                           plusw2	equ	0xFDB
 39494                           fsr2h	equ	0xFDA
 39495                           fsr2l	equ	0xFD9
 39496                           status	equ	0xFD8
 39497                           
 39498 ;; *************** function __get_date *****************
 39499 ;; Defined at:
 39500 ;;		line 392 in file "fat16.c"
 39501 ;; Parameters:    Size  Location     Type
 39502 ;;		None
 39503 ;; Auto vars:     Size  Location     Type
 39504 ;;		None
 39505 ;; Return value:  Size  Location     Type
 39506 ;;                  2    0[COMRAM] unsigned int 
 39507 ;; Registers used:
 39508 ;;		wreg, status,2
 39509 ;; Tracked objects:
 39510 ;;		On entry : 0/0
 39511 ;;		On exit  : 0/0
 39512 ;;		Unchanged: 0/0
 39513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39518 ;;Total ram usage:        2 bytes
 39519 ;; Hardware stack levels used:    1
 39520 ;; This function calls:
 39521 ;;		Nothing
 39522 ;; This function is called by:
 39523 ;;		_fat_create_file
 39524 ;; This function uses a non-reentrant model
 39525 ;;
 39526                           
 39527                           	psect	text192
 39528  009CE4                     __ptext192:
 39529                           	opt stack 0
 39530  009CE4                     __get_date:
 39531                           	opt stack 26
 39532                           
 39533                           ;fat16.c: 404: return 0x0000;
 39534                           
 39535                           ;incstack = 0
 39536  009CE4  0E00               	movlw	0
 39537  009CE6  6E02               	movwf	?__get_date+1,c
 39538  009CE8  0E00               	movlw	0
 39539  009CEA  6E01               	movwf	?__get_date,c
 39540  009CEC  0012               	return	
 39541  009CEE                     __end_of__get_date:
 39542                           	opt stack 0
 39543                           tosu	equ	0xFFF
 39544                           tosh	equ	0xFFE
 39545                           tosl	equ	0xFFD
 39546                           pclath	equ	0xFFA
 39547                           tblptru	equ	0xFF8
 39548                           tblptrh	equ	0xFF7
 39549                           tblptrl	equ	0xFF6
 39550                           tablat	equ	0xFF5
 39551                           prodh	equ	0xFF4
 39552                           prodl	equ	0xFF3
 39553                           intcon	equ	0xFF2
 39554                           intcon2	equ	0xFF1
 39555                           intcon3	equ	0xFF0
 39556                           indf0	equ	0xFEF
 39557                           postinc0	equ	0xFEE
 39558                           fsr0h	equ	0xFEA
 39559                           fsr0l	equ	0xFE9
 39560                           wreg	equ	0xFE8
 39561                           indf1	equ	0xFE7
 39562                           postdec1	equ	0xFE5
 39563                           plusw1	equ	0xFE3
 39564                           fsr1h	equ	0xFE2
 39565                           fsr1l	equ	0xFE1
 39566                           indf2	equ	0xFDF
 39567                           postinc2	equ	0xFDE
 39568                           postdec2	equ	0xFDD
 39569                           plusw2	equ	0xFDB
 39570                           fsr2h	equ	0xFDA
 39571                           fsr2l	equ	0xFD9
 39572                           status	equ	0xFD8
 39573                           
 39574 ;; *************** function __get_available_root_entry *****************
 39575 ;; Defined at:
 39576 ;;		line 442 in file "fat16.c"
 39577 ;; Parameters:    Size  Location     Type
 39578 ;;		None
 39579 ;; Auto vars:     Size  Location     Type
 39580 ;;  file_number     1   53[COMRAM] unsigned char 
 39581 ;; Return value:  Size  Location     Type
 39582 ;;                  1    wreg      unsigned char 
 39583 ;; Registers used:
 39584 ;;		wreg, status,2, status,0, cstack
 39585 ;; Tracked objects:
 39586 ;;		On entry : 0/0
 39587 ;;		On exit  : 0/0
 39588 ;;		Unchanged: 0/0
 39589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39594 ;;Total ram usage:        1 bytes
 39595 ;; Hardware stack levels used:    1
 39596 ;; Hardware stack levels required when called:    6
 39597 ;; This function calls:
 39598 ;;		__root_is_available
 39599 ;; This function is called by:
 39600 ;;		_fat_create_file
 39601 ;; This function uses a non-reentrant model
 39602 ;;
 39603                           
 39604                           	psect	text193
 39605  00997A                     __ptext193:
 39606                           	opt stack 0
 39607  00997A                     __get_available_root_entry:
 39608                           	opt stack 20
 39609                           
 39610                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 39611                           
 39612                           ;incstack = 0
 39613  00997A  0E00               	movlw	0
 39614  00997C  6E36               	movwf	__get_available_root_entry@file_number,c
 39615  00997E                     l11794:
 39616  00997E  0E3F               	movlw	63
 39617  009980  6436               	cpfsgt	__get_available_root_entry@file_number,c
 39618  009982  D001               	goto	l2061
 39619  009984  D00A               	goto	u8690
 39620  009986                     l2061:
 39621                           
 39622                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 39623  009986  5036               	movf	__get_available_root_entry@file_number,w,c
 39624  009988  EC84  F044         	call	__root_is_available
 39625  00998C  0900               	iorlw	0
 39626  00998E  B4D8               	btfsc	status,2,c
 39627  009990  D002               	goto	l2063
 39628                           
 39629                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 39630  009992  5036               	movf	__get_available_root_entry@file_number,w,c
 39631  009994  0012               	return	
 39632  009996                     l2063:
 39633  009996  2A36               	incf	__get_available_root_entry@file_number,f,c
 39634  009998  D7F2               	goto	l11794
 39635  00999A                     u8690:
 39636                           
 39637                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 39638  00999A  0EFF               	movlw	255
 39639  00999C  0012               	return	
 39640  00999E                     __end_of__get_available_root_entry:
 39641                           	opt stack 0
 39642                           tosu	equ	0xFFF
 39643                           tosh	equ	0xFFE
 39644                           tosl	equ	0xFFD
 39645                           pclath	equ	0xFFA
 39646                           tblptru	equ	0xFF8
 39647                           tblptrh	equ	0xFF7
 39648                           tblptrl	equ	0xFF6
 39649                           tablat	equ	0xFF5
 39650                           prodh	equ	0xFF4
 39651                           prodl	equ	0xFF3
 39652                           intcon	equ	0xFF2
 39653                           intcon2	equ	0xFF1
 39654                           intcon3	equ	0xFF0
 39655                           indf0	equ	0xFEF
 39656                           postinc0	equ	0xFEE
 39657                           fsr0h	equ	0xFEA
 39658                           fsr0l	equ	0xFE9
 39659                           wreg	equ	0xFE8
 39660                           indf1	equ	0xFE7
 39661                           postdec1	equ	0xFE5
 39662                           plusw1	equ	0xFE3
 39663                           fsr1h	equ	0xFE2
 39664                           fsr1l	equ	0xFE1
 39665                           indf2	equ	0xFDF
 39666                           postinc2	equ	0xFDE
 39667                           postdec2	equ	0xFDD
 39668                           plusw2	equ	0xFDB
 39669                           fsr2h	equ	0xFDA
 39670                           fsr2l	equ	0xFD9
 39671                           status	equ	0xFD8
 39672                           
 39673 ;; *************** function _fat_copy_sector_to_buffer *****************
 39674 ;; Defined at:
 39675 ;;		line 1420 in file "fat16.c"
 39676 ;; Parameters:    Size  Location     Type
 39677 ;;  file_number     1    wreg     unsigned char 
 39678 ;;  sector          2   66[COMRAM] unsigned int 
 39679 ;; Auto vars:     Size  Location     Type
 39680 ;;  file_number     1   82[COMRAM] unsigned char 
 39681 ;;  file_size       4   72[COMRAM] unsigned long 
 39682 ;;  cluster         2   80[COMRAM] unsigned int 
 39683 ;;  physical_sec    2   78[COMRAM] unsigned int 
 39684 ;;  number_of_cl    2   76[COMRAM] unsigned int 
 39685 ;; Return value:  Size  Location     Type
 39686 ;;                  1    wreg      unsigned char 
 39687 ;; Registers used:
 39688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39689 ;; Tracked objects:
 39690 ;;		On entry : 0/0
 39691 ;;		On exit  : 0/0
 39692 ;;		Unchanged: 0/0
 39693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39695 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39696 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39697 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39698 ;;Total ram usage:       17 bytes
 39699 ;; Hardware stack levels used:    1
 39700 ;; Hardware stack levels required when called:    7
 39701 ;; This function calls:
 39702 ;;		__data_sector_from_cluster
 39703 ;;		__find_nth_cluster
 39704 ;;		__get_first_cluster
 39705 ;;		__root_is_available
 39706 ;;		_fat_get_file_size
 39707 ;;		_flash_copy_page_to_buffer
 39708 ;; This function is called by:
 39709 ;;		_fat_copy_file
 39710 ;;		__parse_sector_to_buffer
 39711 ;; This function uses a non-reentrant model
 39712 ;;
 39713                           
 39714                           	psect	text194
 39715  0072EC                     __ptext194:
 39716                           	opt stack 0
 39717  0072EC                     _fat_copy_sector_to_buffer:
 39718                           	opt stack 20
 39719                           
 39720                           ;incstack = 0
 39721                           ;fat_copy_sector_to_buffer@file_number stored from wreg
 39722  0072EC  6E53               	movwf	fat_copy_sector_to_buffer@file_number,c
 39723                           
 39724                           ;fat16.c: 1422: uint32_t file_size;;fat16.c: 1423: uint16_t number_of_clusters;;fat16.c:
      +                           1424: uint16_t cluster;;fat16.c: 1425: uint16_t physical_sector;;fat16.c: 1428: if(_roo
      +                          t_is_available(file_number))
 39725  0072EE  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 39726  0072F0  EC84  F044         	call	__root_is_available
 39727  0072F4  0900               	iorlw	0
 39728  0072F6  B4D8               	btfsc	status,2,c
 39729  0072F8  D002               	goto	l2332
 39730                           
 39731                           ;fat16.c: 1429: {;fat16.c: 1431: return 0xFF;
 39732  0072FA  0EFF               	movlw	255
 39733  0072FC  0012               	return	
 39734  0072FE                     l2332:
 39735                           
 39736                           ;fat16.c: 1432: };fat16.c: 1435: file_size = fat_get_file_size(file_number);
 39737  0072FE  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 39738  007300  ECB3  F042         	call	_fat_get_file_size
 39739  007304  C036  F049         	movff	?_fat_get_file_size,fat_copy_sector_to_buffer@file_size
 39740  007308  C037  F04A         	movff	?_fat_get_file_size+1,fat_copy_sector_to_buffer@file_size+1
 39741  00730C  C038  F04B         	movff	?_fat_get_file_size+2,fat_copy_sector_to_buffer@file_size+2
 39742  007310  C039  F04C         	movff	?_fat_get_file_size+3,fat_copy_sector_to_buffer@file_size+3
 39743                           
 39744                           ;fat16.c: 1438: number_of_clusters = (uint16_t) ((file_size + 512 - 1) >> 9);
 39745  007314  0EFF               	movlw	255
 39746  007316  2449               	addwf	fat_copy_sector_to_buffer@file_size,w,c
 39747  007318  6E45               	movwf	??_fat_copy_sector_to_buffer& (0+255),c
 39748  00731A  0E01               	movlw	1
 39749  00731C  204A               	addwfc	fat_copy_sector_to_buffer@file_size+1,w,c
 39750  00731E  6E46               	movwf	(??_fat_copy_sector_to_buffer+1)& (0+255),c
 39751  007320  0E00               	movlw	0
 39752  007322  204B               	addwfc	fat_copy_sector_to_buffer@file_size+2,w,c
 39753  007324  6E47               	movwf	(??_fat_copy_sector_to_buffer+2)& (0+255),c
 39754  007326  0E00               	movlw	0
 39755  007328  204C               	addwfc	fat_copy_sector_to_buffer@file_size+3,w,c
 39756  00732A  6E48               	movwf	(??_fat_copy_sector_to_buffer+3)& (0+255),c
 39757  00732C  0E0A               	movlw	10
 39758  00732E  D005               	goto	u9890
 39759  007330                     u9895:
 39760  007330  90D8               	bcf	status,0,c
 39761  007332  3248               	rrcf	??_fat_copy_sector_to_buffer+3,f,c
 39762  007334  3247               	rrcf	??_fat_copy_sector_to_buffer+2,f,c
 39763  007336  3246               	rrcf	??_fat_copy_sector_to_buffer+1,f,c
 39764  007338  3245               	rrcf	??_fat_copy_sector_to_buffer,f,c
 39765  00733A                     u9890:
 39766  00733A  2EE8               	decfsz	wreg,f,c
 39767  00733C  D7F9               	goto	u9895
 39768  00733E  C045  F04D         	movff	??_fat_copy_sector_to_buffer,fat_copy_sector_to_buffer@number_of_clusters
 39769  007342  C046  F04E         	movff	??_fat_copy_sector_to_buffer+1,fat_copy_sector_to_buffer@number_of_clusters+1
 39770                           
 39771                           ;fat16.c: 1439: if(sector >= number_of_clusters)
 39772  007346  504D               	movf	fat_copy_sector_to_buffer@number_of_clusters,w,c
 39773  007348  5C43               	subwf	fat_copy_sector_to_buffer@sector,w,c
 39774  00734A  504E               	movf	fat_copy_sector_to_buffer@number_of_clusters+1,w,c
 39775  00734C  5844               	subwfb	fat_copy_sector_to_buffer@sector+1,w,c
 39776  00734E  A0D8               	btfss	status,0,c
 39777  007350  D002               	goto	l2334
 39778                           
 39779                           ;fat16.c: 1440: {;fat16.c: 1442: return 0xFE;
 39780  007352  0EFE               	movlw	254
 39781  007354  0012               	return	
 39782  007356                     l2334:
 39783                           
 39784                           ;fat16.c: 1443: };fat16.c: 1446: cluster = _get_first_cluster(file_number);
 39785  007356  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 39786  007358  EC76  F047         	call	__get_first_cluster
 39787  00735C  C030  F051         	movff	?__get_first_cluster,fat_copy_sector_to_buffer@cluster
 39788  007360  C031  F052         	movff	?__get_first_cluster+1,fat_copy_sector_to_buffer@cluster+1
 39789                           
 39790                           ;fat16.c: 1447: cluster = _find_nth_cluster(cluster, sector);
 39791  007364  C051  F038         	movff	fat_copy_sector_to_buffer@cluster,__find_nth_cluster@cluster
 39792  007368  C052  F039         	movff	fat_copy_sector_to_buffer@cluster+1,__find_nth_cluster@cluster+1
 39793  00736C  C043  F03A         	movff	fat_copy_sector_to_buffer@sector,__find_nth_cluster@n
 39794  007370  C044  F03B         	movff	fat_copy_sector_to_buffer@sector+1,__find_nth_cluster@n+1
 39795  007374  EC0A  F03E         	call	__find_nth_cluster	;wreg free
 39796  007378  C038  F051         	movff	?__find_nth_cluster,fat_copy_sector_to_buffer@cluster
 39797  00737C  C039  F052         	movff	?__find_nth_cluster+1,fat_copy_sector_to_buffer@cluster+1
 39798                           
 39799                           ;fat16.c: 1450: physical_sector = _data_sector_from_cluster(cluster);
 39800  007380  C051  F001         	movff	fat_copy_sector_to_buffer@cluster,__data_sector_from_cluster@fat_cluster
 39801  007384  C052  F002         	movff	fat_copy_sector_to_buffer@cluster+1,__data_sector_from_cluster@fat_cluster+1
 39802  007388  EC24  F04E         	call	__data_sector_from_cluster	;wreg free
 39803  00738C  C001  F04F         	movff	?__data_sector_from_cluster,fat_copy_sector_to_buffer@physical_sector
 39804  007390  C002  F050         	movff	?__data_sector_from_cluster+1,fat_copy_sector_to_buffer@physical_sector+1
 39805                           
 39806                           ;fat16.c: 1453: flash_copy_page_to_buffer(physical_sector);
 39807  007394  C04F  F01E         	movff	fat_copy_sector_to_buffer@physical_sector,flash_copy_page_to_buffer@page
 39808  007398  C050  F01F         	movff	fat_copy_sector_to_buffer@physical_sector+1,flash_copy_page_to_buffer@page+1
 39809  00739C  EC40  F04D         	call	_flash_copy_page_to_buffer	;wreg free
 39810                           
 39811                           ;fat16.c: 1456: return 0x00;
 39812  0073A0  0E00               	movlw	0
 39813  0073A2  0012               	return	
 39814  0073A4                     __end_of_fat_copy_sector_to_buffer:
 39815                           	opt stack 0
 39816                           tosu	equ	0xFFF
 39817                           tosh	equ	0xFFE
 39818                           tosl	equ	0xFFD
 39819                           pclath	equ	0xFFA
 39820                           tblptru	equ	0xFF8
 39821                           tblptrh	equ	0xFF7
 39822                           tblptrl	equ	0xFF6
 39823                           tablat	equ	0xFF5
 39824                           prodh	equ	0xFF4
 39825                           prodl	equ	0xFF3
 39826                           intcon	equ	0xFF2
 39827                           intcon2	equ	0xFF1
 39828                           intcon3	equ	0xFF0
 39829                           indf0	equ	0xFEF
 39830                           postinc0	equ	0xFEE
 39831                           fsr0h	equ	0xFEA
 39832                           fsr0l	equ	0xFE9
 39833                           wreg	equ	0xFE8
 39834                           indf1	equ	0xFE7
 39835                           postdec1	equ	0xFE5
 39836                           plusw1	equ	0xFE3
 39837                           fsr1h	equ	0xFE2
 39838                           fsr1l	equ	0xFE1
 39839                           indf2	equ	0xFDF
 39840                           postinc2	equ	0xFDE
 39841                           postdec2	equ	0xFDD
 39842                           plusw2	equ	0xFDB
 39843                           fsr2h	equ	0xFDA
 39844                           fsr2l	equ	0xFD9
 39845                           status	equ	0xFD8
 39846                           
 39847 ;; *************** function _flash_copy_page_to_buffer *****************
 39848 ;; Defined at:
 39849 ;;		line 523 in file "flash.c"
 39850 ;; Parameters:    Size  Location     Type
 39851 ;;  page            2   29[COMRAM] unsigned int 
 39852 ;; Auto vars:     Size  Location     Type
 39853 ;;		None
 39854 ;; Return value:  Size  Location     Type
 39855 ;;                  1    wreg      void 
 39856 ;; Registers used:
 39857 ;;		wreg, status,2, status,0, cstack
 39858 ;; Tracked objects:
 39859 ;;		On entry : 0/0
 39860 ;;		On exit  : 0/0
 39861 ;;		Unchanged: 0/0
 39862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39867 ;;Total ram usage:        2 bytes
 39868 ;; Hardware stack levels used:    1
 39869 ;; Hardware stack levels required when called:    4
 39870 ;; This function calls:
 39871 ;;		__flash_copy_page_to_buffer
 39872 ;;		_spi_set_configuration
 39873 ;; This function is called by:
 39874 ;;		_fat_copy_sector_to_buffer
 39875 ;; This function uses a non-reentrant model
 39876 ;;
 39877                           
 39878                           	psect	text195
 39879  009A80                     __ptext195:
 39880                           	opt stack 0
 39881  009A80                     _flash_copy_page_to_buffer:
 39882                           	opt stack 22
 39883                           
 39884                           ;flash.c: 526: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 39885                           
 39886                           ;incstack = 0
 39887  009A80  0E00               	movlw	0
 39888  009A82  ECAB  F02A         	call	_spi_set_configuration
 39889                           
 39890                           ;flash.c: 528: _flash_copy_page_to_buffer(page, FLASH_BUFFER_2);
 39891  009A86  C01E  F014         	movff	flash_copy_page_to_buffer@page,__flash_copy_page_to_buffer@page
 39892  009A8A  C01F  F015         	movff	flash_copy_page_to_buffer@page+1,__flash_copy_page_to_buffer@page+1
 39893  009A8E  0E01               	movlw	1
 39894  009A90  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 39895  009A92  ECC7  F045         	call	__flash_copy_page_to_buffer	;wreg free
 39896                           
 39897                           ;flash.c: 531: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 39898  009A96  0E01               	movlw	1
 39899  009A98  ECAB  F02A         	call	_spi_set_configuration
 39900  009A9C  0012               	return		;funcret
 39901  009A9E                     __end_of_flash_copy_page_to_buffer:
 39902                           	opt stack 0
 39903                           tosu	equ	0xFFF
 39904                           tosh	equ	0xFFE
 39905                           tosl	equ	0xFFD
 39906                           pclath	equ	0xFFA
 39907                           tblptru	equ	0xFF8
 39908                           tblptrh	equ	0xFF7
 39909                           tblptrl	equ	0xFF6
 39910                           tablat	equ	0xFF5
 39911                           prodh	equ	0xFF4
 39912                           prodl	equ	0xFF3
 39913                           intcon	equ	0xFF2
 39914                           intcon2	equ	0xFF1
 39915                           intcon3	equ	0xFF0
 39916                           indf0	equ	0xFEF
 39917                           postinc0	equ	0xFEE
 39918                           fsr0h	equ	0xFEA
 39919                           fsr0l	equ	0xFE9
 39920                           wreg	equ	0xFE8
 39921                           indf1	equ	0xFE7
 39922                           postdec1	equ	0xFE5
 39923                           plusw1	equ	0xFE3
 39924                           fsr1h	equ	0xFE2
 39925                           fsr1l	equ	0xFE1
 39926                           indf2	equ	0xFDF
 39927                           postinc2	equ	0xFDE
 39928                           postdec2	equ	0xFDD
 39929                           plusw2	equ	0xFDB
 39930                           fsr2h	equ	0xFDA
 39931                           fsr2l	equ	0xFD9
 39932                           status	equ	0xFD8
 39933                           
 39934 ;; *************** function __parse_file_append *****************
 39935 ;; Defined at:
 39936 ;;		line 733 in file "api.c"
 39937 ;; Parameters:    Size  Location     Type
 39938 ;;  data            2   89[COMRAM] PTR unsigned char 
 39939 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39940 ;;  out_buffer      2   91[COMRAM] PTR unsigned char 
 39941 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 39942 ;;  out_idx_ptr     2   93[COMRAM] PTR unsigned char 
 39943 ;;		 -> api_parse@out_idx(1), 
 39944 ;; Auto vars:     Size  Location     Type
 39945 ;;  number_of_by    2   59[BANK0 ] unsigned int 
 39946 ;;  file_number     1   58[BANK0 ] unsigned char 
 39947 ;;  return_value    1   57[BANK0 ] unsigned char 
 39948 ;; Return value:  Size  Location     Type
 39949 ;;                  1    wreg      unsigned char 
 39950 ;; Registers used:
 39951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39952 ;; Tracked objects:
 39953 ;;		On entry : 0/0
 39954 ;;		On exit  : 0/0
 39955 ;;		Unchanged: 0/0
 39956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39957 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39958 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39959 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39960 ;;      Totals:         6       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39961 ;;Total ram usage:       11 bytes
 39962 ;; Hardware stack levels used:    1
 39963 ;; Hardware stack levels required when called:    9
 39964 ;; This function calls:
 39965 ;;		_fat_append_to_file
 39966 ;; This function is called by:
 39967 ;;		__parse_command_long
 39968 ;; This function uses a non-reentrant model
 39969 ;;
 39970                           
 39971                           	psect	text196
 39972  0044EE                     __ptext196:
 39973                           	opt stack 0
 39974  0044EE                     __parse_file_append:
 39975                           	opt stack 19
 39976                           
 39977                           ;api.c: 737: uint8_t file_number;;api.c: 738: uint8_t return_value;;api.c: 739: uint16_t
      +                           number_of_bytes;;api.c: 741: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (d
      +                          ata[4]!=0x4B))
 39978                           
 39979                           ;incstack = 0
 39980  0044EE  C05A  FFD9         	movff	__parse_file_append@data,fsr2l
 39981  0044F2  C05B  FFDA         	movff	__parse_file_append@data+1,fsr2h
 39982  0044F6  0E54               	movlw	84
 39983  0044F8  18DE               	xorwf	postinc2,w,c
 39984  0044FA  A4D8               	btfss	status,2,c
 39985  0044FC  D014               	goto	u11540
 39986  0044FE  EE20 F003          	lfsr	2,3
 39987  004502  505A               	movf	__parse_file_append@data,w,c
 39988  004504  26D9               	addwf	fsr2l,f,c
 39989  004506  505B               	movf	__parse_file_append@data+1,w,c
 39990  004508  22DA               	addwfc	fsr2h,f,c
 39991  00450A  0EFE               	movlw	254
 39992  00450C  18DE               	xorwf	postinc2,w,c
 39993  00450E  A4D8               	btfss	status,2,c
 39994  004510  D00A               	goto	u11540
 39995  004512  EE20 F004          	lfsr	2,4
 39996  004516  505A               	movf	__parse_file_append@data,w,c
 39997  004518  26D9               	addwf	fsr2l,f,c
 39998  00451A  505B               	movf	__parse_file_append@data+1,w,c
 39999  00451C  22DA               	addwfc	fsr2h,f,c
 40000  00451E  0E4B               	movlw	75
 40001  004520  18DE               	xorwf	postinc2,w,c
 40002  004522  B4D8               	btfsc	status,2,c
 40003  004524  D002               	goto	l2889
 40004  004526                     u11540:
 40005                           
 40006                           ;api.c: 742: {;api.c: 744: return 65;
 40007  004526  0E41               	movlw	65
 40008  004528  0012               	return	
 40009  00452A                     l2889:
 40010                           
 40011                           ;api.c: 745: };api.c: 748: file_number = data[1];
 40012  00452A  EE20 F001          	lfsr	2,1
 40013  00452E  505A               	movf	__parse_file_append@data,w,c
 40014  004530  26D9               	addwf	fsr2l,f,c
 40015  004532  505B               	movf	__parse_file_append@data+1,w,c
 40016  004534  22DA               	addwfc	fsr2h,f,c
 40017  004536  50DF               	movf	indf2,w,c
 40018  004538  0100               	movlb	0	; () banked
 40019  00453A  6F9A               	movwf	__parse_file_append@file_number& (0+255),b
 40020                           
 40021                           ;api.c: 751: number_of_bytes = (uint16_t) data[2];
 40022  00453C  EE20 F002          	lfsr	2,2
 40023  004540  505A               	movf	__parse_file_append@data,w,c
 40024  004542  26D9               	addwf	fsr2l,f,c
 40025  004544  505B               	movf	__parse_file_append@data+1,w,c
 40026  004546  22DA               	addwfc	fsr2h,f,c
 40027  004548  50DF               	movf	indf2,w,c
 40028  00454A  6F98               	movwf	??__parse_file_append& (0+255),b
 40029  00454C  5198               	movf	??__parse_file_append& (0+255),w,b
 40030  00454E  6F9B               	movwf	__parse_file_append@number_of_bytes& (0+255),b
 40031  004550  6B9C               	clrf	(__parse_file_append@number_of_bytes+1)& (0+255),b
 40032                           
 40033                           ; BSR set to: 0
 40034                           ;api.c: 754: return_value = fat_append_to_file(file_number, number_of_bytes, &data[5]);
 40035  004552  C09B  F056         	movff	__parse_file_append@number_of_bytes,fat_append_to_file@number_of_bytes
 40036  004556  C09C  F057         	movff	__parse_file_append@number_of_bytes+1,fat_append_to_file@number_of_bytes+1
 40037  00455A  0E05               	movlw	5
 40038  00455C  245A               	addwf	__parse_file_append@data,w,c
 40039  00455E  6E58               	movwf	fat_append_to_file@data,c
 40040  004560  0E00               	movlw	0
 40041  004562  205B               	addwfc	__parse_file_append@data+1,w,c
 40042  004564  6E59               	movwf	fat_append_to_file@data+1,c
 40043  004566  519A               	movf	__parse_file_append@file_number& (0+255),w,b
 40044  004568  ECCC  F03C         	call	_fat_append_to_file
 40045  00456C  0100               	movlb	0	; () banked
 40046  00456E  6F99               	movwf	__parse_file_append@return_value& (0+255),b
 40047                           
 40048                           ; BSR set to: 0
 40049                           ;api.c: 757: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 40050  004570  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 40051  004574  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 40052  004578  50DF               	movf	indf2,w,c
 40053  00457A  B4D8               	btfsc	status,2,c
 40054  00457C  D061               	goto	l2893
 40055                           
 40056                           ; BSR set to: 0
 40057  00457E  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 40058  004582  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 40059  004586  0E3C               	movlw	60
 40060  004588  60DF               	cpfslt	indf2,c
 40061  00458A  D05A               	goto	l2893
 40062                           
 40063                           ; BSR set to: 0
 40064                           ;api.c: 758: {;api.c: 759: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_APPEND;
 40065  00458C  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 40066  004590  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 40067  004594  CFDF F098          	movff	indf2,??__parse_file_append
 40068  004598  0E01               	movlw	1
 40069  00459A  26DF               	addwf	indf2,f,c
 40070  00459C  5198               	movf	??__parse_file_append& (0+255),w,b
 40071  00459E  0D01               	mullw	1
 40072  0045A0  50F3               	movf	prodl,w,c
 40073  0045A2  245C               	addwf	__parse_file_append@out_buffer,w,c
 40074  0045A4  6ED9               	movwf	fsr2l,c
 40075  0045A6  50F4               	movf	prodh,w,c
 40076  0045A8  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 40077  0045AA  6EDA               	movwf	fsr2h,c
 40078  0045AC  0E54               	movlw	84
 40079  0045AE  6EDF               	movwf	indf2,c
 40080                           
 40081                           ;api.c: 760: out_buffer[(*out_idx_ptr)++] = file_number;
 40082  0045B0  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 40083  0045B4  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 40084  0045B8  CFDF F098          	movff	indf2,??__parse_file_append
 40085  0045BC  0E01               	movlw	1
 40086  0045BE  26DF               	addwf	indf2,f,c
 40087  0045C0  5198               	movf	??__parse_file_append& (0+255),w,b
 40088  0045C2  0D01               	mullw	1
 40089  0045C4  50F3               	movf	prodl,w,c
 40090  0045C6  245C               	addwf	__parse_file_append@out_buffer,w,c
 40091  0045C8  6ED9               	movwf	fsr2l,c
 40092  0045CA  50F4               	movf	prodh,w,c
 40093  0045CC  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 40094  0045CE  6EDA               	movwf	fsr2h,c
 40095  0045D0  C09A  FFDF         	movff	__parse_file_append@file_number,indf2
 40096                           
 40097                           ;api.c: 761: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((number_of_bytes)>>8)&0xFF
      +                          ));
 40098  0045D4  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 40099  0045D8  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 40100  0045DC  CFDF F098          	movff	indf2,??__parse_file_append
 40101  0045E0  0E01               	movlw	1
 40102  0045E2  26DF               	addwf	indf2,f,c
 40103  0045E4  5198               	movf	??__parse_file_append& (0+255),w,b
 40104  0045E6  0D01               	mullw	1
 40105  0045E8  50F3               	movf	prodl,w,c
 40106  0045EA  245C               	addwf	__parse_file_append@out_buffer,w,c
 40107  0045EC  6ED9               	movwf	fsr2l,c
 40108  0045EE  50F4               	movf	prodh,w,c
 40109  0045F0  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 40110  0045F2  6EDA               	movwf	fsr2h,c
 40111  0045F4  519C               	movf	(__parse_file_append@number_of_bytes+1)& (0+255),w,b
 40112  0045F6  6EDF               	movwf	indf2,c
 40113                           
 40114                           ;api.c: 762: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((number_of_bytes)&0xFF));
 40115  0045F8  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 40116  0045FC  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 40117  004600  CFDF F098          	movff	indf2,??__parse_file_append
 40118  004604  0E01               	movlw	1
 40119  004606  26DF               	addwf	indf2,f,c
 40120  004608  5198               	movf	??__parse_file_append& (0+255),w,b
 40121  00460A  0D01               	mullw	1
 40122  00460C  50F3               	movf	prodl,w,c
 40123  00460E  245C               	addwf	__parse_file_append@out_buffer,w,c
 40124  004610  6ED9               	movwf	fsr2l,c
 40125  004612  50F4               	movf	prodh,w,c
 40126  004614  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 40127  004616  6EDA               	movwf	fsr2h,c
 40128  004618  C09B  FFDF         	movff	__parse_file_append@number_of_bytes,indf2
 40129                           
 40130                           ;api.c: 763: out_buffer[(*out_idx_ptr)++] = return_value;
 40131  00461C  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 40132  004620  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 40133  004624  CFDF F098          	movff	indf2,??__parse_file_append
 40134  004628  0E01               	movlw	1
 40135  00462A  26DF               	addwf	indf2,f,c
 40136  00462C  5198               	movf	??__parse_file_append& (0+255),w,b
 40137  00462E  0D01               	mullw	1
 40138  004630  50F3               	movf	prodl,w,c
 40139  004632  245C               	addwf	__parse_file_append@out_buffer,w,c
 40140  004634  6ED9               	movwf	fsr2l,c
 40141  004636  50F4               	movf	prodh,w,c
 40142  004638  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 40143  00463A  6EDA               	movwf	fsr2h,c
 40144  00463C  C099  FFDF         	movff	__parse_file_append@return_value,indf2
 40145  004640                     l2893:
 40146                           
 40147                           ; BSR set to: 0
 40148                           ;api.c: 764: };api.c: 766: return data[2] + 5;
 40149                           
 40150                           ; BSR set to: 0
 40151  004640  EE20 F002          	lfsr	2,2
 40152  004644  505A               	movf	__parse_file_append@data,w,c
 40153  004646  26D9               	addwf	fsr2l,f,c
 40154  004648  505B               	movf	__parse_file_append@data+1,w,c
 40155  00464A  22DA               	addwfc	fsr2h,f,c
 40156  00464C  50DF               	movf	indf2,w,c
 40157  00464E  0F05               	addlw	5
 40158  004650  0012               	return	
 40159  004652                     __end_of__parse_file_append:
 40160                           	opt stack 0
 40161                           tosu	equ	0xFFF
 40162                           tosh	equ	0xFFE
 40163                           tosl	equ	0xFFD
 40164                           pclath	equ	0xFFA
 40165                           tblptru	equ	0xFF8
 40166                           tblptrh	equ	0xFF7
 40167                           tblptrl	equ	0xFF6
 40168                           tablat	equ	0xFF5
 40169                           prodh	equ	0xFF4
 40170                           prodl	equ	0xFF3
 40171                           intcon	equ	0xFF2
 40172                           intcon2	equ	0xFF1
 40173                           intcon3	equ	0xFF0
 40174                           indf0	equ	0xFEF
 40175                           postinc0	equ	0xFEE
 40176                           fsr0h	equ	0xFEA
 40177                           fsr0l	equ	0xFE9
 40178                           wreg	equ	0xFE8
 40179                           indf1	equ	0xFE7
 40180                           postdec1	equ	0xFE5
 40181                           plusw1	equ	0xFE3
 40182                           fsr1h	equ	0xFE2
 40183                           fsr1l	equ	0xFE1
 40184                           indf2	equ	0xFDF
 40185                           postinc2	equ	0xFDE
 40186                           postdec2	equ	0xFDD
 40187                           plusw2	equ	0xFDB
 40188                           fsr2h	equ	0xFDA
 40189                           fsr2l	equ	0xFD9
 40190                           status	equ	0xFD8
 40191                           
 40192 ;; *************** function _fat_append_to_file *****************
 40193 ;; Defined at:
 40194 ;;		line 678 in file "fat16.c"
 40195 ;; Parameters:    Size  Location     Type
 40196 ;;  file_number     1    wreg     unsigned char 
 40197 ;;  number_of_by    2   85[COMRAM] unsigned int 
 40198 ;;  data            2   87[COMRAM] PTR unsigned char 
 40199 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 40200 ;; Auto vars:     Size  Location     Type
 40201 ;;  file_number     1   55[BANK0 ] unsigned char 
 40202 ;;  old_file_siz    4   50[BANK0 ] unsigned long 
 40203 ;;  new_file_siz    4   46[BANK0 ] unsigned long 
 40204 ;;  return_code     1   54[BANK0 ] unsigned char 
 40205 ;; Return value:  Size  Location     Type
 40206 ;;                  1    wreg      unsigned char 
 40207 ;; Registers used:
 40208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40209 ;; Tracked objects:
 40210 ;;		On entry : 0/0
 40211 ;;		On exit  : 0/0
 40212 ;;		Unchanged: 0/0
 40213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40215 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40217 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40218 ;;Total ram usage:       14 bytes
 40219 ;; Hardware stack levels used:    1
 40220 ;; Hardware stack levels required when called:    8
 40221 ;; This function calls:
 40222 ;;		__root_is_available
 40223 ;;		_fat_get_file_size
 40224 ;;		_fat_modify_file
 40225 ;;		_fat_resize_file
 40226 ;; This function is called by:
 40227 ;;		__parse_file_append
 40228 ;; This function uses a non-reentrant model
 40229 ;;
 40230                           
 40231                           	psect	text197
 40232  007998                     __ptext197:
 40233                           	opt stack 0
 40234  007998                     _fat_append_to_file:
 40235                           	opt stack 19
 40236                           
 40237                           ;incstack = 0
 40238                           ;fat_append_to_file@file_number stored from wreg
 40239  007998  0100               	movlb	0	; () banked
 40240  00799A  6F97               	movwf	fat_append_to_file@file_number& (0+255),b
 40241                           
 40242                           ;fat16.c: 680: uint32_t old_file_size;;fat16.c: 681: uint32_t new_file_size;;fat16.c: 68
      +                          2: uint8_t return_code;;fat16.c: 685: if(file_number>=64)
 40243  00799C  0E3F               	movlw	63
 40244  00799E  0100               	movlb	0	; () banked
 40245  0079A0  6597               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 40246  0079A2  D002               	goto	l2107
 40247                           
 40248                           ; BSR set to: 0
 40249                           ;fat16.c: 686: {;fat16.c: 688: return 0xFF;
 40250  0079A4  0EFF               	movlw	255
 40251                           
 40252                           ; BSR set to: 0
 40253  0079A6  0012               	return	
 40254  0079A8                     l2107:
 40255                           
 40256                           ; BSR set to: 0
 40257                           ;fat16.c: 689: };fat16.c: 692: if(_root_is_available(file_number))
 40258                           
 40259                           ; BSR set to: 0
 40260  0079A8  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 40261  0079AA  EC84  F044         	call	__root_is_available
 40262  0079AE  0900               	iorlw	0
 40263  0079B0  B4D8               	btfsc	status,2,c
 40264  0079B2  D002               	goto	l2109
 40265                           
 40266                           ;fat16.c: 693: {;fat16.c: 695: return 0xFE;
 40267  0079B4  0EFE               	movlw	254
 40268  0079B6  0012               	return	
 40269  0079B8                     l2109:
 40270                           
 40271                           ;fat16.c: 696: };fat16.c: 699: old_file_size = fat_get_file_size(file_number);
 40272  0079B8  0100               	movlb	0	; () banked
 40273  0079BA  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 40274  0079BC  ECB3  F042         	call	_fat_get_file_size
 40275  0079C0  C036  F092         	movff	?_fat_get_file_size,fat_append_to_file@old_file_size
 40276  0079C4  C037  F093         	movff	?_fat_get_file_size+1,fat_append_to_file@old_file_size+1
 40277  0079C8  C038  F094         	movff	?_fat_get_file_size+2,fat_append_to_file@old_file_size+2
 40278  0079CC  C039  F095         	movff	?_fat_get_file_size+3,fat_append_to_file@old_file_size+3
 40279                           
 40280                           ;fat16.c: 702: new_file_size = old_file_size + number_of_bytes;
 40281  0079D0  5056               	movf	fat_append_to_file@number_of_bytes,w,c
 40282  0079D2  0100               	movlb	0	; () banked
 40283  0079D4  2592               	addwf	fat_append_to_file@old_file_size& (0+255),w,b
 40284  0079D6  6F8E               	movwf	fat_append_to_file@new_file_size& (0+255),b
 40285  0079D8  5057               	movf	fat_append_to_file@number_of_bytes+1,w,c
 40286  0079DA  2193               	addwfc	(fat_append_to_file@old_file_size+1)& (0+255),w,b
 40287  0079DC  6F8F               	movwf	(fat_append_to_file@new_file_size+1)& (0+255),b
 40288  0079DE  0E00               	movlw	0
 40289  0079E0  2194               	addwfc	(fat_append_to_file@old_file_size+2)& (0+255),w,b
 40290  0079E2  6F90               	movwf	(fat_append_to_file@new_file_size+2)& (0+255),b
 40291  0079E4  0E00               	movlw	0
 40292  0079E6  2195               	addwfc	(fat_append_to_file@old_file_size+3)& (0+255),w,b
 40293  0079E8  6F91               	movwf	(fat_append_to_file@new_file_size+3)& (0+255),b
 40294                           
 40295                           ; BSR set to: 0
 40296                           ;fat16.c: 705: return_code = fat_resize_file(file_number, new_file_size);
 40297  0079EA  C08E  F04D         	movff	fat_append_to_file@new_file_size,fat_resize_file@new_file_size
 40298  0079EE  C08F  F04E         	movff	fat_append_to_file@new_file_size+1,fat_resize_file@new_file_size+1
 40299  0079F2  C090  F04F         	movff	fat_append_to_file@new_file_size+2,fat_resize_file@new_file_size+2
 40300  0079F6  C091  F050         	movff	fat_append_to_file@new_file_size+3,fat_resize_file@new_file_size+3
 40301  0079FA  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 40302  0079FC  ECBA  F02F         	call	_fat_resize_file
 40303  007A00  0100               	movlb	0	; () banked
 40304  007A02  6F96               	movwf	fat_append_to_file@return_code& (0+255),b
 40305                           
 40306                           ; BSR set to: 0
 40307                           ;fat16.c: 706: if(return_code!=0x00)
 40308  007A04  5196               	movf	fat_append_to_file@return_code& (0+255),w,b
 40309  007A06  B4D8               	btfsc	status,2,c
 40310  007A08  D003               	goto	l2110
 40311                           
 40312                           ; BSR set to: 0
 40313                           ;fat16.c: 707: {;fat16.c: 709: return return_code - 0x0F;
 40314  007A0A  5196               	movf	fat_append_to_file@return_code& (0+255),w,b
 40315  007A0C  0FF1               	addlw	241
 40316                           
 40317                           ; BSR set to: 0
 40318  007A0E  0012               	return	
 40319  007A10                     l2110:
 40320                           
 40321                           ; BSR set to: 0
 40322                           ;fat16.c: 710: };fat16.c: 713: fat_modify_file(file_number, old_file_size, number_of_byt
      +                          es, data);
 40323                           
 40324                           ; BSR set to: 0
 40325  007A10  C092  F042         	movff	fat_append_to_file@old_file_size,fat_modify_file@start_byte
 40326  007A14  C093  F043         	movff	fat_append_to_file@old_file_size+1,fat_modify_file@start_byte+1
 40327  007A18  C094  F044         	movff	fat_append_to_file@old_file_size+2,fat_modify_file@start_byte+2
 40328  007A1C  C095  F045         	movff	fat_append_to_file@old_file_size+3,fat_modify_file@start_byte+3
 40329  007A20  C056  F046         	movff	fat_append_to_file@number_of_bytes,fat_modify_file@length
 40330  007A24  C057  F047         	movff	fat_append_to_file@number_of_bytes+1,fat_modify_file@length+1
 40331  007A28  C058  F048         	movff	fat_append_to_file@data,fat_modify_file@data
 40332  007A2C  C059  F049         	movff	fat_append_to_file@data+1,fat_modify_file@data+1
 40333  007A30  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 40334  007A32  EC7E  F012         	call	_fat_modify_file
 40335                           
 40336                           ;fat16.c: 716: return 0x00;
 40337  007A36  0E00               	movlw	0
 40338  007A38  0012               	return	
 40339  007A3A                     __end_of_fat_append_to_file:
 40340                           	opt stack 0
 40341                           tosu	equ	0xFFF
 40342                           tosh	equ	0xFFE
 40343                           tosl	equ	0xFFD
 40344                           pclath	equ	0xFFA
 40345                           tblptru	equ	0xFF8
 40346                           tblptrh	equ	0xFF7
 40347                           tblptrl	equ	0xFF6
 40348                           tablat	equ	0xFF5
 40349                           prodh	equ	0xFF4
 40350                           prodl	equ	0xFF3
 40351                           intcon	equ	0xFF2
 40352                           intcon2	equ	0xFF1
 40353                           intcon3	equ	0xFF0
 40354                           indf0	equ	0xFEF
 40355                           postinc0	equ	0xFEE
 40356                           fsr0h	equ	0xFEA
 40357                           fsr0l	equ	0xFE9
 40358                           wreg	equ	0xFE8
 40359                           indf1	equ	0xFE7
 40360                           postdec1	equ	0xFE5
 40361                           plusw1	equ	0xFE3
 40362                           fsr1h	equ	0xFE2
 40363                           fsr1l	equ	0xFE1
 40364                           indf2	equ	0xFDF
 40365                           postinc2	equ	0xFDE
 40366                           postdec2	equ	0xFDD
 40367                           plusw2	equ	0xFDB
 40368                           fsr2h	equ	0xFDA
 40369                           fsr2l	equ	0xFD9
 40370                           status	equ	0xFD8
 40371                           
 40372 ;; *************** function _fat_resize_file *****************
 40373 ;; Defined at:
 40374 ;;		line 910 in file "fat16.c"
 40375 ;; Parameters:    Size  Location     Type
 40376 ;;  file_number     1    wreg     unsigned char 
 40377 ;;  new_file_siz    4   76[COMRAM] unsigned long 
 40378 ;; Auto vars:     Size  Location     Type
 40379 ;;  file_number     1    6[BANK0 ] unsigned char 
 40380 ;;  root           32    7[BANK0 ] struct .
 40381 ;;  first_cluste    2    4[BANK0 ] unsigned int 
 40382 ;;  new_number_o    2    2[BANK0 ] unsigned int 
 40383 ;;  old_number_o    2    0[BANK0 ] unsigned int 
 40384 ;; Return value:  Size  Location     Type
 40385 ;;                  1    wreg      unsigned char 
 40386 ;; Registers used:
 40387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40388 ;; Tracked objects:
 40389 ;;		On entry : 0/0
 40390 ;;		On exit  : 0/0
 40391 ;;		Unchanged: 0/0
 40392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40394 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40395 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40396 ;;      Totals:         8      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40397 ;;Total ram usage:       47 bytes
 40398 ;; Hardware stack levels used:    1
 40399 ;; Hardware stack levels required when called:    7
 40400 ;; This function calls:
 40401 ;;		__make_cluster_chain
 40402 ;;		__root_is_available
 40403 ;;		__write_root
 40404 ;;		_fat_get_file_information
 40405 ;; This function is called by:
 40406 ;;		_fat_append_to_file
 40407 ;;		__parse_file_resize
 40408 ;; This function uses a non-reentrant model
 40409 ;;
 40410                           
 40411                           	psect	text198
 40412  005F74                     __ptext198:
 40413                           	opt stack 0
 40414  005F74                     _fat_resize_file:
 40415                           	opt stack 20
 40416                           
 40417                           ;incstack = 0
 40418                           ;fat_resize_file@file_number stored from wreg
 40419  005F74  0100               	movlb	0	; () banked
 40420  005F76  6F66               	movwf	fat_resize_file@file_number& (0+255),b
 40421                           
 40422                           ;fat16.c: 912: rootEntry_t root;;fat16.c: 913: uint16_t old_number_of_clusters;;fat16.c:
      +                           914: uint16_t new_number_of_clusters;;fat16.c: 915: uint16_t first_cluster;;fat16.c: 91
      +                          8: if(file_number>=64)
 40423  005F78  0E3F               	movlw	63
 40424  005F7A  0100               	movlb	0	; () banked
 40425  005F7C  6566               	cpfsgt	fat_resize_file@file_number& (0+255),b
 40426  005F7E  D002               	goto	l2147
 40427                           
 40428                           ; BSR set to: 0
 40429                           ;fat16.c: 919: {;fat16.c: 921: return 0xFF;
 40430  005F80  0EFF               	movlw	255
 40431                           
 40432                           ; BSR set to: 0
 40433  005F82  0012               	return	
 40434  005F84                     l2147:
 40435                           
 40436                           ; BSR set to: 0
 40437                           ;fat16.c: 922: };fat16.c: 925: if(_root_is_available(file_number))
 40438                           
 40439                           ; BSR set to: 0
 40440  005F84  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 40441  005F86  EC84  F044         	call	__root_is_available
 40442  005F8A  0900               	iorlw	0
 40443  005F8C  B4D8               	btfsc	status,2,c
 40444  005F8E  D002               	goto	l2149
 40445                           
 40446                           ;fat16.c: 926: {;fat16.c: 928: return 0xFE;
 40447  005F90  0EFE               	movlw	254
 40448  005F92  0012               	return	
 40449  005F94                     l2149:
 40450                           
 40451                           ;fat16.c: 929: };fat16.c: 932: fat_get_file_information(file_number, &root);
 40452  005F94  0E67               	movlw	low fat_resize_file@root
 40453  005F96  6E30               	movwf	fat_get_file_information@data,c
 40454  005F98  0E00               	movlw	high fat_resize_file@root
 40455  005F9A  6E31               	movwf	fat_get_file_information@data+1,c
 40456  005F9C  0100               	movlb	0	; () banked
 40457  005F9E  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 40458  005FA0  EC0A  F042         	call	_fat_get_file_information
 40459                           
 40460                           ;fat16.c: 935: old_number_of_clusters = (root.fileSize+512-1)>>9;
 40461  005FA4  EE20  F083         	lfsr	2,fat_resize_file@root+28
 40462  005FA8  0EFF               	movlw	255
 40463  005FAA  24DE               	addwf	postinc2,w,c
 40464  005FAC  6E51               	movwf	??_fat_resize_file& (0+255),c
 40465  005FAE  0E01               	movlw	1
 40466  005FB0  20DE               	addwfc	postinc2,w,c
 40467  005FB2  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 40468  005FB4  0E00               	movlw	0
 40469  005FB6  20DE               	addwfc	postinc2,w,c
 40470  005FB8  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 40471  005FBA  0E00               	movlw	0
 40472  005FBC  20DE               	addwfc	postinc2,w,c
 40473  005FBE  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 40474  005FC0  0E0A               	movlw	10
 40475  005FC2  D005               	goto	u9770
 40476  005FC4                     u9775:
 40477  005FC4  90D8               	bcf	status,0,c
 40478  005FC6  3254               	rrcf	??_fat_resize_file+3,f,c
 40479  005FC8  3253               	rrcf	??_fat_resize_file+2,f,c
 40480  005FCA  3252               	rrcf	??_fat_resize_file+1,f,c
 40481  005FCC  3251               	rrcf	??_fat_resize_file,f,c
 40482  005FCE                     u9770:
 40483  005FCE  2EE8               	decfsz	wreg,f,c
 40484  005FD0  D7F9               	goto	u9775
 40485  005FD2  C051  F060         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 40486  005FD6  C052  F061         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 40487                           
 40488                           ;fat16.c: 936: new_number_of_clusters = (new_file_size+512-1)>>9;
 40489  005FDA  0EFF               	movlw	255
 40490  005FDC  244D               	addwf	fat_resize_file@new_file_size,w,c
 40491  005FDE  6E51               	movwf	??_fat_resize_file& (0+255),c
 40492  005FE0  0E01               	movlw	1
 40493  005FE2  204E               	addwfc	fat_resize_file@new_file_size+1,w,c
 40494  005FE4  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 40495  005FE6  0E00               	movlw	0
 40496  005FE8  204F               	addwfc	fat_resize_file@new_file_size+2,w,c
 40497  005FEA  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 40498  005FEC  0E00               	movlw	0
 40499  005FEE  2050               	addwfc	fat_resize_file@new_file_size+3,w,c
 40500  005FF0  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 40501  005FF2  0E0A               	movlw	10
 40502  005FF4  D005               	goto	u9780
 40503  005FF6                     u9785:
 40504  005FF6  90D8               	bcf	status,0,c
 40505  005FF8  3254               	rrcf	??_fat_resize_file+3,f,c
 40506  005FFA  3253               	rrcf	??_fat_resize_file+2,f,c
 40507  005FFC  3252               	rrcf	??_fat_resize_file+1,f,c
 40508  005FFE  3251               	rrcf	??_fat_resize_file,f,c
 40509  006000                     u9780:
 40510  006000  2EE8               	decfsz	wreg,f,c
 40511  006002  D7F9               	goto	u9785
 40512  006004  C051  F062         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 40513  006008  C052  F063         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 40514                           
 40515                           ;fat16.c: 939: if(old_number_of_clusters!=new_number_of_clusters)
 40516  00600C  0100               	movlb	0	; () banked
 40517  00600E  5162               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 40518  006010  1960               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 40519  006012  E104               	bnz	u9790
 40520  006014  5163               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 40521  006016  1961               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 40522  006018  B4D8               	btfsc	status,2,c
 40523  00601A  D01A               	goto	l2150
 40524  00601C                     u9790:
 40525                           
 40526                           ; BSR set to: 0
 40527                           ;fat16.c: 940: {;fat16.c: 941: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 40528  00601C  C081  F036         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 40529  006020  C082  F037         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 40530  006024  C062  F038         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 40531  006028  C063  F039         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 40532  00602C  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 40533  006030  C036  F064         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 40534  006034  C037  F065         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 40535                           
 40536                           ;fat16.c: 942: if(first_cluster==0xFFFF)
 40537  006038  0100               	movlb	0	; () banked
 40538  00603A  2964               	incf	fat_resize_file@first_cluster& (0+255),w,b
 40539  00603C  E105               	bnz	l2151
 40540  00603E  2965               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 40541  006040  A4D8               	btfss	status,2,c
 40542  006042  D002               	goto	l2151
 40543                           
 40544                           ; BSR set to: 0
 40545                           ;fat16.c: 943: {;fat16.c: 945: return 0xFD;
 40546  006044  0EFD               	movlw	253
 40547                           
 40548                           ; BSR set to: 0
 40549  006046  0012               	return	
 40550  006048                     l2151:
 40551                           
 40552                           ; BSR set to: 0
 40553                           ;fat16.c: 946: };fat16.c: 949: root.firstCluster = first_cluster;
 40554  006048  C064  F081         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 40555  00604C  C065  F082         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 40556  006050                     l2150:
 40557                           
 40558                           ; BSR set to: 0
 40559                           ;fat16.c: 950: };fat16.c: 953: root.fileSize = new_file_size;
 40560  006050  C04D  F083         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 40561  006054  C04E  F084         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 40562  006058  C04F  F085         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 40563  00605C  C050  F086         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 40564                           
 40565                           ; BSR set to: 0
 40566                           ;fat16.c: 956: _write_root(file_number, &root);
 40567  006060  0E67               	movlw	low fat_resize_file@root
 40568  006062  6E29               	movwf	__write_root@data,c
 40569  006064  0E00               	movlw	high fat_resize_file@root
 40570  006066  6E2A               	movwf	__write_root@data+1,c
 40571  006068  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 40572  00606A  EC16  F049         	call	__write_root
 40573                           
 40574                           ;fat16.c: 959: return 0x00;
 40575  00606E  0E00               	movlw	0
 40576  006070  0012               	return	
 40577  006072                     __end_of_fat_resize_file:
 40578                           	opt stack 0
 40579                           tosu	equ	0xFFF
 40580                           tosh	equ	0xFFE
 40581                           tosl	equ	0xFFD
 40582                           pclath	equ	0xFFA
 40583                           tblptru	equ	0xFF8
 40584                           tblptrh	equ	0xFF7
 40585                           tblptrl	equ	0xFF6
 40586                           tablat	equ	0xFF5
 40587                           prodh	equ	0xFF4
 40588                           prodl	equ	0xFF3
 40589                           intcon	equ	0xFF2
 40590                           intcon2	equ	0xFF1
 40591                           intcon3	equ	0xFF0
 40592                           indf0	equ	0xFEF
 40593                           postinc0	equ	0xFEE
 40594                           fsr0h	equ	0xFEA
 40595                           fsr0l	equ	0xFE9
 40596                           wreg	equ	0xFE8
 40597                           indf1	equ	0xFE7
 40598                           postdec1	equ	0xFE5
 40599                           plusw1	equ	0xFE3
 40600                           fsr1h	equ	0xFE2
 40601                           fsr1l	equ	0xFE1
 40602                           indf2	equ	0xFDF
 40603                           postinc2	equ	0xFDE
 40604                           postdec2	equ	0xFDD
 40605                           plusw2	equ	0xFDB
 40606                           fsr2h	equ	0xFDA
 40607                           fsr2l	equ	0xFD9
 40608                           status	equ	0xFD8
 40609                           
 40610 ;; *************** function __write_root *****************
 40611 ;; Defined at:
 40612 ;;		line 473 in file "fat16.c"
 40613 ;; Parameters:    Size  Location     Type
 40614 ;;  file_number     1    wreg     unsigned char 
 40615 ;;  data            2   40[COMRAM] PTR struct .
 40616 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 40617 ;; Auto vars:     Size  Location     Type
 40618 ;;  file_number     1   46[COMRAM] unsigned char 
 40619 ;;  offset          2   44[COMRAM] unsigned int 
 40620 ;;  sector          2   42[COMRAM] unsigned int 
 40621 ;; Return value:  Size  Location     Type
 40622 ;;                  1    wreg      void 
 40623 ;; Registers used:
 40624 ;;		wreg, status,2, status,0, cstack
 40625 ;; Tracked objects:
 40626 ;;		On entry : 0/0
 40627 ;;		On exit  : 0/0
 40628 ;;		Unchanged: 0/0
 40629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40631 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40633 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40634 ;;Total ram usage:        7 bytes
 40635 ;; Hardware stack levels used:    1
 40636 ;; Hardware stack levels required when called:    5
 40637 ;; This function calls:
 40638 ;;		__offset_from_file_number
 40639 ;;		__sector_from_file_number
 40640 ;;		_flash_partial_write
 40641 ;; This function is called by:
 40642 ;;		_fat_create_file
 40643 ;;		_fat_rename_file
 40644 ;;		_fat_resize_file
 40645 ;; This function uses a non-reentrant model
 40646 ;;
 40647                           
 40648                           	psect	text199
 40649  00922C                     __ptext199:
 40650                           	opt stack 0
 40651  00922C                     __write_root:
 40652                           	opt stack 21
 40653                           
 40654                           ;incstack = 0
 40655                           ;__write_root@file_number stored from wreg
 40656  00922C  6E2F               	movwf	__write_root@file_number,c
 40657                           
 40658                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 40659  00922E  502F               	movf	__write_root@file_number,w,c
 40660  009230  ECE7  F04B         	call	__sector_from_file_number
 40661  009234  C001  F02B         	movff	?__sector_from_file_number,__write_root@sector
 40662  009238  C002  F02C         	movff	?__sector_from_file_number+1,__write_root@sector+1
 40663                           
 40664                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 40665  00923C  502F               	movf	__write_root@file_number,w,c
 40666  00923E  EC73  F04C         	call	__offset_from_file_number
 40667  009242  C001  F02D         	movff	?__offset_from_file_number,__write_root@offset
 40668  009246  C002  F02E         	movff	?__offset_from_file_number+1,__write_root@offset+1
 40669                           
 40670                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 40671  00924A  C02B  F020         	movff	__write_root@sector,flash_partial_write@page
 40672  00924E  C02C  F021         	movff	__write_root@sector+1,flash_partial_write@page+1
 40673  009252  C02D  F022         	movff	__write_root@offset,flash_partial_write@start
 40674  009256  C02E  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 40675  00925A  0E00               	movlw	0
 40676  00925C  6E25               	movwf	flash_partial_write@length+1,c
 40677  00925E  0E20               	movlw	32
 40678  009260  6E24               	movwf	flash_partial_write@length,c
 40679  009262  C029  F026         	movff	__write_root@data,flash_partial_write@data
 40680  009266  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 40681  00926A  EC7B  F042         	call	_flash_partial_write	;wreg free
 40682  00926E  0012               	return		;funcret
 40683  009270                     __end_of__write_root:
 40684                           	opt stack 0
 40685                           tosu	equ	0xFFF
 40686                           tosh	equ	0xFFE
 40687                           tosl	equ	0xFFD
 40688                           pclath	equ	0xFFA
 40689                           tblptru	equ	0xFF8
 40690                           tblptrh	equ	0xFF7
 40691                           tblptrl	equ	0xFF6
 40692                           tablat	equ	0xFF5
 40693                           prodh	equ	0xFF4
 40694                           prodl	equ	0xFF3
 40695                           intcon	equ	0xFF2
 40696                           intcon2	equ	0xFF1
 40697                           intcon3	equ	0xFF0
 40698                           indf0	equ	0xFEF
 40699                           postinc0	equ	0xFEE
 40700                           fsr0h	equ	0xFEA
 40701                           fsr0l	equ	0xFE9
 40702                           wreg	equ	0xFE8
 40703                           indf1	equ	0xFE7
 40704                           postdec1	equ	0xFE5
 40705                           plusw1	equ	0xFE3
 40706                           fsr1h	equ	0xFE2
 40707                           fsr1l	equ	0xFE1
 40708                           indf2	equ	0xFDF
 40709                           postinc2	equ	0xFDE
 40710                           postdec2	equ	0xFDD
 40711                           plusw2	equ	0xFDB
 40712                           fsr2h	equ	0xFDA
 40713                           fsr2l	equ	0xFD9
 40714                           status	equ	0xFD8
 40715                           
 40716 ;; *************** function __make_cluster_chain *****************
 40717 ;; Defined at:
 40718 ;;		line 213 in file "fat16.c"
 40719 ;; Parameters:    Size  Location     Type
 40720 ;;  first_cluste    2   53[COMRAM] unsigned int 
 40721 ;;  number_of_cl    2   55[COMRAM] unsigned int 
 40722 ;; Auto vars:     Size  Location     Type
 40723 ;;  next_cluster    2   74[COMRAM] unsigned int 
 40724 ;;  offset          2   72[COMRAM] unsigned int 
 40725 ;;  sector_in_bu    2   70[COMRAM] unsigned int 
 40726 ;;  sector          2   68[COMRAM] unsigned int 
 40727 ;;  remaining_cl    2   66[COMRAM] unsigned int 
 40728 ;;  different_se    2   63[COMRAM] unsigned int 
 40729 ;;  minimum_sect    2   61[COMRAM] unsigned int 
 40730 ;;  next_offset     2   59[COMRAM] unsigned int 
 40731 ;;  data_changed    1   65[COMRAM] unsigned char 
 40732 ;; Return value:  Size  Location     Type
 40733 ;;                  2   53[COMRAM] unsigned int 
 40734 ;; Registers used:
 40735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40736 ;; Tracked objects:
 40737 ;;		On entry : 0/0
 40738 ;;		On exit  : 0/0
 40739 ;;		Unchanged: 0/0
 40740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40742 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40744 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40745 ;;Total ram usage:       23 bytes
 40746 ;; Hardware stack levels used:    1
 40747 ;; Hardware stack levels required when called:    6
 40748 ;; This function calls:
 40749 ;;		__fat_offset_from_cluster
 40750 ;;		__fat_sector_from_cluster
 40751 ;;		__get_available_cluster
 40752 ;;		__get_available_offset_from_buffer
 40753 ;;		__read_value_from_offset
 40754 ;;		__write_value_to_offset
 40755 ;;		_flash_sector_read
 40756 ;;		_flash_sector_write
 40757 ;; This function is called by:
 40758 ;;		_fat_create_file
 40759 ;;		_fat_delete_file
 40760 ;;		_fat_resize_file
 40761 ;; This function uses a non-reentrant model
 40762 ;;
 40763                           
 40764                           	psect	text200
 40765  0015D2                     __ptext200:
 40766                           	opt stack 0
 40767  0015D2                     __make_cluster_chain:
 40768                           	opt stack 20
 40769                           
 40770                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 40771                           
 40772                           ;incstack = 0
 40773  0015D2  0E00               	movlw	0
 40774  0015D4  6E48               	movwf	__make_cluster_chain@sector_in_buffer+1,c
 40775  0015D6  0E00               	movlw	0
 40776  0015D8  6E47               	movwf	__make_cluster_chain@sector_in_buffer,c
 40777                           
 40778                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 40779  0015DA  C038  F043         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 40780  0015DE  C039  F044         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 40781                           
 40782                           ;fat16.c: 228: minimum_sector = 2;
 40783  0015E2  0E00               	movlw	0
 40784  0015E4  6E3F               	movwf	__make_cluster_chain@minimum_sector+1,c
 40785  0015E6  0E02               	movlw	2
 40786  0015E8  6E3E               	movwf	__make_cluster_chain@minimum_sector,c
 40787                           
 40788                           ;fat16.c: 229: data_changed = 0;
 40789  0015EA  0E00               	movlw	0
 40790  0015EC  6E42               	movwf	__make_cluster_chain@data_changed,c
 40791                           
 40792                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 40793  0015EE  5036               	movf	__make_cluster_chain@first_cluster,w,c
 40794  0015F0  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 40795  0015F2  A4D8               	btfss	status,2,c
 40796  0015F4  D023               	goto	l2021
 40797  0015F6  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 40798  0015F8  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 40799  0015FA  B4D8               	btfsc	status,2,c
 40800  0015FC  D01F               	goto	l2021
 40801                           
 40802                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 40803  0015FE  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 40804  001602  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 40805  001606  0E00               	movlw	0
 40806  001608  6E2F               	movwf	__get_available_cluster@skip_sector+1,c
 40807  00160A  0E00               	movlw	0
 40808  00160C  6E2E               	movwf	__get_available_cluster@skip_sector,c
 40809  00160E  EC57  F038         	call	__get_available_cluster	;wreg free
 40810  001612  C02C  F036         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 40811  001616  C02D  F037         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 40812                           
 40813                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 40814  00161A  C036  F001         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 40815  00161E  C037  F002         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 40816  001622  EC9E  F04D         	call	__fat_sector_from_cluster	;wreg free
 40817  001626  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 40818  00162A  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 40819                           
 40820                           ;fat16.c: 237: if(first_cluster == 0)
 40821  00162E  5036               	movf	__make_cluster_chain@first_cluster,w,c
 40822  001630  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 40823  001632  A4D8               	btfss	status,2,c
 40824  001634  D003               	goto	l2021
 40825                           
 40826                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 40827  001636  6836               	setf	?__make_cluster_chain,c
 40828  001638  6837               	setf	?__make_cluster_chain+1,c
 40829  00163A  0012               	return	
 40830  00163C                     l2021:
 40831                           
 40832                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 40833  00163C  C036  F04B         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 40834  001640  C037  F04C         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 40835                           
 40836                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 40837  001644  D0FA               	goto	l2038
 40838  001646                     
 40839                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 40840  001646  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 40841  00164A  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 40842  00164E  EC9E  F04D         	call	__fat_sector_from_cluster	;wreg free
 40843  001652  C001  F045         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 40844  001656  C002  F046         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 40845                           
 40846                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 40847  00165A  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 40848  00165E  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 40849  001662  ECAA  F04D         	call	__fat_offset_from_cluster	;wreg free
 40850  001666  C001  F049         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 40851  00166A  C002  F04A         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 40852                           
 40853                           ;fat16.c: 263: if(sector != sector_in_buffer)
 40854  00166E  5047               	movf	__make_cluster_chain@sector_in_buffer,w,c
 40855  001670  1845               	xorwf	__make_cluster_chain@sector,w,c
 40856  001672  E104               	bnz	u8530
 40857  001674  5048               	movf	__make_cluster_chain@sector_in_buffer+1,w,c
 40858  001676  1846               	xorwf	__make_cluster_chain@sector+1,w,c
 40859  001678  B4D8               	btfsc	status,2,c
 40860  00167A  D035               	goto	l2025
 40861  00167C                     u8530:
 40862                           
 40863                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 40864  00167C  5042               	movf	__make_cluster_chain@data_changed,w,c
 40865  00167E  B4D8               	btfsc	status,2,c
 40866  001680  D00A               	goto	l2026
 40867                           
 40868                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 40869  001682  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 40870  001686  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 40871  00168A  0EC0               	movlw	low _buffer
 40872  00168C  6E22               	movwf	flash_sector_write@data,c
 40873  00168E  0E03               	movlw	high _buffer
 40874  001690  6E23               	movwf	flash_sector_write@data+1,c
 40875  001692  ECCB  F046         	call	_flash_sector_write	;wreg free
 40876  001696                     l2026:
 40877                           
 40878                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 40879  001696  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 40880  00169A  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 40881  00169E  C045  F02E         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 40882  0016A2  C046  F02F         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 40883  0016A6  EC57  F038         	call	__get_available_cluster	;wreg free
 40884  0016AA  C02C  F040         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 40885  0016AE  C02D  F041         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 40886                           
 40887                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 40888  0016B2  C040  F001         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 40889  0016B6  C041  F002         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 40890  0016BA  EC9E  F04D         	call	__fat_sector_from_cluster	;wreg free
 40891  0016BE  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 40892  0016C2  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 40893                           
 40894                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 40895  0016C6  C045  F028         	movff	__make_cluster_chain@sector,flash_sector_read@page
 40896  0016CA  C046  F029         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 40897  0016CE  0EC0               	movlw	low _buffer
 40898  0016D0  6E2A               	movwf	flash_sector_read@data,c
 40899  0016D2  0E03               	movlw	high _buffer
 40900  0016D4  6E2B               	movwf	flash_sector_read@data+1,c
 40901  0016D6  ECE7  F04A         	call	_flash_sector_read	;wreg free
 40902                           
 40903                           ;fat16.c: 279: sector_in_buffer = sector;
 40904  0016DA  C045  F047         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 40905  0016DE  C046  F048         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 40906                           
 40907                           ;fat16.c: 280: data_changed = 0;
 40908  0016E2  0E00               	movlw	0
 40909  0016E4  6E42               	movwf	__make_cluster_chain@data_changed,c
 40910  0016E6                     l2025:
 40911                           
 40912                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 40913  0016E6  5044               	movf	__make_cluster_chain@remaining_clusters+1,w,c
 40914  0016E8  E104               	bnz	u8550
 40915  0016EA  0E02               	movlw	2
 40916  0016EC  5C43               	subwf	__make_cluster_chain@remaining_clusters,w,c
 40917  0016EE  A0D8               	btfss	status,0,c
 40918  0016F0  D05C               	goto	l2027
 40919  0016F2                     u8550:
 40920                           
 40921                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 40922  0016F2  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 40923  0016F6  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 40924  0016FA  0EC0               	movlw	low _buffer
 40925  0016FC  6E03               	movwf	__read_value_from_offset@buffer,c
 40926  0016FE  0E03               	movlw	high _buffer
 40927  001700  6E04               	movwf	__read_value_from_offset@buffer+1,c
 40928  001702  ECD1  F048         	call	__read_value_from_offset	;wreg free
 40929  001706  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 40930  00170A  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 40931                           
 40932                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 40933  00170E  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 40934  001710  E104               	bnz	u8560
 40935  001712  0E02               	movlw	2
 40936  001714  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 40937  001716  A0D8               	btfss	status,0,c
 40938  001718  D006               	goto	u8570
 40939  00171A                     u8560:
 40940  00171A  0EDA               	movlw	218
 40941  00171C  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 40942  00171E  0E1F               	movlw	31
 40943  001720  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 40944  001722  A0D8               	btfss	status,0,c
 40945  001724  D068               	goto	l2037
 40946  001726                     u8570:
 40947                           
 40948                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 40949  001726  0E02               	movlw	2
 40950  001728  2449               	addwf	__make_cluster_chain@offset,w,c
 40951  00172A  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 40952  00172C  0E00               	movlw	0
 40953  00172E  204A               	addwfc	__make_cluster_chain@offset+1,w,c
 40954  001730  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 40955  001732  0EC0               	movlw	low _buffer
 40956  001734  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 40957  001736  0E03               	movlw	high _buffer
 40958  001738  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 40959  00173A  EC42  F045         	call	__get_available_offset_from_buffer	;wreg free
 40960  00173E  C001  F03C         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 40961  001742  C002  F03D         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 40962                           
 40963                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 40964  001746  283C               	incf	__make_cluster_chain@next_offset,w,c
 40965  001748  E103               	bnz	u8580
 40966  00174A  283D               	incf	__make_cluster_chain@next_offset+1,w,c
 40967  00174C  B4D8               	btfsc	status,2,c
 40968  00174E  D013               	goto	l2031
 40969  001750                     u8580:
 40970                           
 40971                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 40972  001750  0EFE               	movlw	254
 40973  001752  2447               	addwf	__make_cluster_chain@sector_in_buffer,w,c
 40974  001754  6E4B               	movwf	__make_cluster_chain@next_cluster,c
 40975  001756  0EFF               	movlw	255
 40976  001758  2048               	addwfc	__make_cluster_chain@sector_in_buffer+1,w,c
 40977  00175A  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 40978                           
 40979                           ;fat16.c: 299: next_cluster <<= 8;
 40980  00175C  504B               	movf	__make_cluster_chain@next_cluster,w,c
 40981  00175E  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 40982  001760  6A4B               	clrf	__make_cluster_chain@next_cluster,c
 40983                           
 40984                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 40985  001762  90D8               	bcf	status,0,c
 40986  001764  303D               	rrcf	__make_cluster_chain@next_offset+1,w,c
 40987  001766  6E3B               	movwf	(??__make_cluster_chain+1)& (0+255),c
 40988  001768  303C               	rrcf	__make_cluster_chain@next_offset,w,c
 40989  00176A  6E3A               	movwf	??__make_cluster_chain& (0+255),c
 40990  00176C  503A               	movf	??__make_cluster_chain,w,c
 40991  00176E  124B               	iorwf	__make_cluster_chain@next_cluster,f,c
 40992  001770  503B               	movf	??__make_cluster_chain+1,w,c
 40993  001772  124C               	iorwf	__make_cluster_chain@next_cluster+1,f,c
 40994                           
 40995                           ;fat16.c: 301: }
 40996  001774  D00B               	goto	l2034
 40997  001776                     l2031:
 40998                           
 40999                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 41000  001776  5040               	movf	__make_cluster_chain@different_sector_cluster,w,c
 41001  001778  1041               	iorwf	__make_cluster_chain@different_sector_cluster+1,w,c
 41002  00177A  A4D8               	btfss	status,2,c
 41003  00177C  D003               	goto	l2033
 41004                           
 41005                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 41006  00177E  6836               	setf	?__make_cluster_chain,c
 41007  001780  6837               	setf	?__make_cluster_chain+1,c
 41008  001782  0012               	return	
 41009  001784                     l2033:
 41010                           
 41011                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 41012  001784  C040  F04B         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 41013  001788  C041  F04C         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 41014  00178C                     l2034:
 41015                           
 41016                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 41017  00178C  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 41018  001790  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 41019  001794  0EC0               	movlw	low _buffer
 41020  001796  6E03               	movwf	__write_value_to_offset@buffer,c
 41021  001798  0E03               	movlw	high _buffer
 41022  00179A  6E04               	movwf	__write_value_to_offset@buffer+1,c
 41023  00179C  C04B  F005         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 41024  0017A0  C04C  F006         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 41025  0017A4  EC9B  F04A         	call	__write_value_to_offset	;wreg free
 41026  0017A8  D024               	goto	L50
 41027  0017AA                     l2027:
 41028                           
 41029                           ;fat16.c: 326: else if(remaining_clusters == 1)
 41030  0017AA  0443               	decf	__make_cluster_chain@remaining_clusters,w,c
 41031  0017AC  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 41032  0017AE  A4D8               	btfss	status,2,c
 41033  0017B0  D026               	goto	l2036
 41034                           
 41035                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 41036  0017B2  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 41037  0017B6  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 41038  0017BA  0EC0               	movlw	low _buffer
 41039  0017BC  6E03               	movwf	__read_value_from_offset@buffer,c
 41040  0017BE  0E03               	movlw	high _buffer
 41041  0017C0  6E04               	movwf	__read_value_from_offset@buffer+1,c
 41042  0017C2  ECD1  F048         	call	__read_value_from_offset	;wreg free
 41043  0017C6  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 41044  0017CA  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 41045                           
 41046                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 41047  0017CE  284B               	incf	__make_cluster_chain@next_cluster,w,c
 41048  0017D0  E103               	bnz	u8610
 41049  0017D2  284C               	incf	__make_cluster_chain@next_cluster+1,w,c
 41050  0017D4  B4D8               	btfsc	status,2,c
 41051  0017D6  D00F               	goto	l2037
 41052  0017D8                     u8610:
 41053                           
 41054                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 41055  0017D8  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 41056  0017DC  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 41057  0017E0  0EC0               	movlw	low _buffer
 41058  0017E2  6E03               	movwf	__write_value_to_offset@buffer,c
 41059  0017E4  0E03               	movlw	high _buffer
 41060  0017E6  6E04               	movwf	__write_value_to_offset@buffer+1,c
 41061  0017E8  0EFF               	movlw	255
 41062  0017EA  6E06               	movwf	__write_value_to_offset@value+1,c
 41063  0017EC  6805               	setf	__write_value_to_offset@value,c
 41064  0017EE  EC9B  F04A         	call	__write_value_to_offset	;wreg free
 41065  0017F2                     L50:
 41066                           
 41067                           ;fat16.c: 336: data_changed = 1;
 41068  0017F2  0E01               	movlw	1
 41069  0017F4  6E42               	movwf	__make_cluster_chain@data_changed,c
 41070  0017F6                     l2037:
 41071                           
 41072                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 41073  0017F6  0643               	decf	__make_cluster_chain@remaining_clusters,f,c
 41074  0017F8  A0D8               	btfss	status,0,c
 41075  0017FA  0644               	decf	__make_cluster_chain@remaining_clusters+1,f,c
 41076                           
 41077                           ;fat16.c: 341: }
 41078  0017FC  D01E               	goto	l2038
 41079  0017FE                     l2036:
 41080                           
 41081                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 41082  0017FE  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 41083  001802  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 41084  001806  0EC0               	movlw	low _buffer
 41085  001808  6E03               	movwf	__read_value_from_offset@buffer,c
 41086  00180A  0E03               	movlw	high _buffer
 41087  00180C  6E04               	movwf	__read_value_from_offset@buffer+1,c
 41088  00180E  ECD1  F048         	call	__read_value_from_offset	;wreg free
 41089  001812  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 41090  001816  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 41091                           
 41092                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 41093  00181A  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 41094  00181E  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 41095  001822  0EC0               	movlw	low _buffer
 41096  001824  6E03               	movwf	__write_value_to_offset@buffer,c
 41097  001826  0E03               	movlw	high _buffer
 41098  001828  6E04               	movwf	__write_value_to_offset@buffer+1,c
 41099  00182A  0E00               	movlw	0
 41100  00182C  6E06               	movwf	__write_value_to_offset@value+1,c
 41101  00182E  0E00               	movlw	0
 41102  001830  6E05               	movwf	__write_value_to_offset@value,c
 41103  001832  EC9B  F04A         	call	__write_value_to_offset	;wreg free
 41104                           
 41105                           ;fat16.c: 352: data_changed = 1;
 41106  001836  0E01               	movlw	1
 41107  001838  6E42               	movwf	__make_cluster_chain@data_changed,c
 41108  00183A                     l2038:
 41109  00183A  5043               	movf	__make_cluster_chain@remaining_clusters,w,c
 41110  00183C  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 41111  00183E  A4D8               	btfss	status,2,c
 41112  001840  D702               	goto	l2024
 41113  001842  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 41114  001844  E104               	bnz	u8630
 41115  001846  0E02               	movlw	2
 41116  001848  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 41117  00184A  A0D8               	btfss	status,0,c
 41118  00184C  D006               	goto	u8640
 41119  00184E                     u8630:
 41120  00184E  0EDA               	movlw	218
 41121  001850  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 41122  001852  0E1F               	movlw	31
 41123  001854  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 41124  001856  A0D8               	btfss	status,0,c
 41125  001858  D6F6               	goto	l2024
 41126  00185A                     u8640:
 41127                           
 41128                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 41129  00185A  5042               	movf	__make_cluster_chain@data_changed,w,c
 41130  00185C  B4D8               	btfsc	status,2,c
 41131  00185E  D00A               	goto	l2042
 41132                           
 41133                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 41134  001860  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 41135  001864  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 41136  001868  0EC0               	movlw	low _buffer
 41137  00186A  6E22               	movwf	flash_sector_write@data,c
 41138  00186C  0E03               	movlw	high _buffer
 41139  00186E  6E23               	movwf	flash_sector_write@data+1,c
 41140  001870  ECCB  F046         	call	_flash_sector_write	;wreg free
 41141  001874                     l2042:
 41142                           
 41143                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 41144  001874  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 41145  001876  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 41146  001878  B4D8               	btfsc	status,2,c
 41147  00187A  D005               	goto	l2043
 41148                           
 41149                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 41150  00187C  C036  F036         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 41151  001880  C037  F037         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 41152                           
 41153                           ;fat16.c: 367: }
 41154  001884  0012               	return	
 41155  001886                     l2043:
 41156                           
 41157                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 41158  001886  0E00               	movlw	0
 41159  001888  6E37               	movwf	?__make_cluster_chain+1,c
 41160  00188A  0E00               	movlw	0
 41161  00188C  6E36               	movwf	?__make_cluster_chain,c
 41162  00188E  0012               	return	
 41163  001890                     __end_of__make_cluster_chain:
 41164                           	opt stack 0
 41165                           tosu	equ	0xFFF
 41166                           tosh	equ	0xFFE
 41167                           tosl	equ	0xFFD
 41168                           pclath	equ	0xFFA
 41169                           tblptru	equ	0xFF8
 41170                           tblptrh	equ	0xFF7
 41171                           tblptrl	equ	0xFF6
 41172                           tablat	equ	0xFF5
 41173                           prodh	equ	0xFF4
 41174                           prodl	equ	0xFF3
 41175                           intcon	equ	0xFF2
 41176                           intcon2	equ	0xFF1
 41177                           intcon3	equ	0xFF0
 41178                           indf0	equ	0xFEF
 41179                           postinc0	equ	0xFEE
 41180                           fsr0h	equ	0xFEA
 41181                           fsr0l	equ	0xFE9
 41182                           wreg	equ	0xFE8
 41183                           indf1	equ	0xFE7
 41184                           postdec1	equ	0xFE5
 41185                           plusw1	equ	0xFE3
 41186                           fsr1h	equ	0xFE2
 41187                           fsr1l	equ	0xFE1
 41188                           indf2	equ	0xFDF
 41189                           postinc2	equ	0xFDE
 41190                           postdec2	equ	0xFDD
 41191                           plusw2	equ	0xFDB
 41192                           fsr2h	equ	0xFDA
 41193                           fsr2l	equ	0xFD9
 41194                           status	equ	0xFD8
 41195                           
 41196 ;; *************** function _flash_sector_write *****************
 41197 ;; Defined at:
 41198 ;;		line 456 in file "flash.c"
 41199 ;; Parameters:    Size  Location     Type
 41200 ;;  page            2   31[COMRAM] unsigned int 
 41201 ;;  data            2   33[COMRAM] PTR unsigned char 
 41202 ;;		 -> buffer(512), msd_buffer(512), 
 41203 ;; Auto vars:     Size  Location     Type
 41204 ;;  match           1   35[COMRAM] enum E6908
 41205 ;; Return value:  Size  Location     Type
 41206 ;;                  1    wreg      void 
 41207 ;; Registers used:
 41208 ;;		wreg, status,2, status,0, cstack
 41209 ;; Tracked objects:
 41210 ;;		On entry : 0/0
 41211 ;;		On exit  : 0/0
 41212 ;;		Unchanged: 0/0
 41213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41215 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41217 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41218 ;;Total ram usage:        5 bytes
 41219 ;; Hardware stack levels used:    1
 41220 ;; Hardware stack levels required when called:    4
 41221 ;; This function calls:
 41222 ;;		__flash_compare_page_to_buffer
 41223 ;;		__flash_write_page_from_buffer
 41224 ;;		__flash_write_to_buffer
 41225 ;;		_spi_set_configuration
 41226 ;; This function is called by:
 41227 ;;		_ExternalFlash_SectorWrite
 41228 ;;		__make_cluster_chain
 41229 ;;		_fat_format
 41230 ;; This function uses a non-reentrant model
 41231 ;;
 41232                           
 41233                           	psect	text201
 41234  008D96                     __ptext201:
 41235                           	opt stack 0
 41236  008D96                     _flash_sector_write:
 41237                           	opt stack 23
 41238                           
 41239                           ;flash.c: 458: flashMatchResult_t match;;flash.c: 461: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 41240                           
 41241                           ;incstack = 0
 41242  008D96  0E00               	movlw	0
 41243  008D98  ECAB  F02A         	call	_spi_set_configuration
 41244                           
 41245                           ;flash.c: 464: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 41246  008D9C  0E00               	movlw	0
 41247  008D9E  6E15               	movwf	__flash_write_to_buffer@start+1,c
 41248  008DA0  0E00               	movlw	0
 41249  008DA2  6E14               	movwf	__flash_write_to_buffer@start,c
 41250  008DA4  C022  F016         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 41251  008DA8  C023  F017         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 41252  008DAC  0E02               	movlw	2
 41253  008DAE  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 41254  008DB0  0E00               	movlw	0
 41255  008DB2  6E18               	movwf	__flash_write_to_buffer@data_length,c
 41256  008DB4  0E00               	movlw	0
 41257  008DB6  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 41258  008DB8  EC19  F048         	call	__flash_write_to_buffer	;wreg free
 41259                           
 41260                           ;flash.c: 467: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 41261  008DBC  C020  F014         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 41262  008DC0  C021  F015         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 41263  008DC4  0E00               	movlw	0
 41264  008DC6  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 41265  008DC8  EC59  F041         	call	__flash_compare_page_to_buffer	;wreg free
 41266  008DCC  6E24               	movwf	flash_sector_write@match,c
 41267                           
 41268                           ;flash.c: 470: if(match==DATA_DOES_NOT_MATCH)
 41269  008DCE  0424               	decf	flash_sector_write@match,w,c
 41270  008DD0  A4D8               	btfss	status,2,c
 41271  008DD2  D008               	goto	l1873
 41272                           
 41273                           ;flash.c: 471: {;flash.c: 472: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 41274  008DD4  C020  F014         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 41275  008DD8  C021  F015         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 41276  008DDC  0E00               	movlw	0
 41277  008DDE  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 41278  008DE0  EC9B  F045         	call	__flash_write_page_from_buffer	;wreg free
 41279  008DE4                     l1873:
 41280                           
 41281                           ;flash.c: 473: };flash.c: 476: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 41282  008DE4  0E01               	movlw	1
 41283  008DE6  ECAB  F02A         	call	_spi_set_configuration
 41284  008DEA  0012               	return		;funcret
 41285  008DEC                     __end_of_flash_sector_write:
 41286                           	opt stack 0
 41287                           tosu	equ	0xFFF
 41288                           tosh	equ	0xFFE
 41289                           tosl	equ	0xFFD
 41290                           pclath	equ	0xFFA
 41291                           tblptru	equ	0xFF8
 41292                           tblptrh	equ	0xFF7
 41293                           tblptrl	equ	0xFF6
 41294                           tablat	equ	0xFF5
 41295                           prodh	equ	0xFF4
 41296                           prodl	equ	0xFF3
 41297                           intcon	equ	0xFF2
 41298                           intcon2	equ	0xFF1
 41299                           intcon3	equ	0xFF0
 41300                           indf0	equ	0xFEF
 41301                           postinc0	equ	0xFEE
 41302                           fsr0h	equ	0xFEA
 41303                           fsr0l	equ	0xFE9
 41304                           wreg	equ	0xFE8
 41305                           indf1	equ	0xFE7
 41306                           postdec1	equ	0xFE5
 41307                           plusw1	equ	0xFE3
 41308                           fsr1h	equ	0xFE2
 41309                           fsr1l	equ	0xFE1
 41310                           indf2	equ	0xFDF
 41311                           postinc2	equ	0xFDE
 41312                           postdec2	equ	0xFDD
 41313                           plusw2	equ	0xFDB
 41314                           fsr2h	equ	0xFDA
 41315                           fsr2l	equ	0xFD9
 41316                           status	equ	0xFD8
 41317                           
 41318 ;; *************** function __write_value_to_offset *****************
 41319 ;; Defined at:
 41320 ;;		line 123 in file "fat16.c"
 41321 ;; Parameters:    Size  Location     Type
 41322 ;;  offset          2    0[COMRAM] unsigned int 
 41323 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 41324 ;;		 -> buffer(512), 
 41325 ;;  value           2    4[COMRAM] unsigned int 
 41326 ;; Auto vars:     Size  Location     Type
 41327 ;;		None
 41328 ;; Return value:  Size  Location     Type
 41329 ;;                  1    wreg      void 
 41330 ;; Registers used:
 41331 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41332 ;; Tracked objects:
 41333 ;;		On entry : 0/0
 41334 ;;		On exit  : 0/0
 41335 ;;		Unchanged: 0/0
 41336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41337 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41340 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41341 ;;Total ram usage:        8 bytes
 41342 ;; Hardware stack levels used:    1
 41343 ;; This function calls:
 41344 ;;		Nothing
 41345 ;; This function is called by:
 41346 ;;		__make_cluster_chain
 41347 ;; This function uses a non-reentrant model
 41348 ;;
 41349                           
 41350                           	psect	text202
 41351  009536                     __ptext202:
 41352                           	opt stack 0
 41353  009536                     __write_value_to_offset:
 41354                           	opt stack 25
 41355                           
 41356                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 41357                           
 41358                           ;incstack = 0
 41359  009536  5001               	movf	__write_value_to_offset@offset,w,c
 41360  009538  2403               	addwf	__write_value_to_offset@buffer,w,c
 41361  00953A  6ED9               	movwf	fsr2l,c
 41362  00953C  5002               	movf	__write_value_to_offset@offset+1,w,c
 41363  00953E  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 41364  009540  6EDA               	movwf	fsr2h,c
 41365  009542  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 41366                           
 41367                           ;fat16.c: 126: value >>= 8;
 41368  009546  5006               	movf	__write_value_to_offset@value+1,w,c
 41369  009548  6E05               	movwf	__write_value_to_offset@value,c
 41370  00954A  6A06               	clrf	__write_value_to_offset@value+1,c
 41371                           
 41372                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 41373  00954C  0E01               	movlw	1
 41374  00954E  2401               	addwf	__write_value_to_offset@offset,w,c
 41375  009550  6E07               	movwf	??__write_value_to_offset& (0+255),c
 41376  009552  0E00               	movlw	0
 41377  009554  2002               	addwfc	__write_value_to_offset@offset+1,w,c
 41378  009556  6E08               	movwf	(??__write_value_to_offset+1)& (0+255),c
 41379  009558  5007               	movf	??__write_value_to_offset,w,c
 41380  00955A  2403               	addwf	__write_value_to_offset@buffer,w,c
 41381  00955C  6ED9               	movwf	fsr2l,c
 41382  00955E  5008               	movf	??__write_value_to_offset+1,w,c
 41383  009560  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 41384  009562  6EDA               	movwf	fsr2h,c
 41385  009564  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 41386  009568  0012               	return		;funcret
 41387  00956A                     __end_of__write_value_to_offset:
 41388                           	opt stack 0
 41389                           tosu	equ	0xFFF
 41390                           tosh	equ	0xFFE
 41391                           tosl	equ	0xFFD
 41392                           pclath	equ	0xFFA
 41393                           tblptru	equ	0xFF8
 41394                           tblptrh	equ	0xFF7
 41395                           tblptrl	equ	0xFF6
 41396                           tablat	equ	0xFF5
 41397                           prodh	equ	0xFF4
 41398                           prodl	equ	0xFF3
 41399                           intcon	equ	0xFF2
 41400                           intcon2	equ	0xFF1
 41401                           intcon3	equ	0xFF0
 41402                           indf0	equ	0xFEF
 41403                           postinc0	equ	0xFEE
 41404                           fsr0h	equ	0xFEA
 41405                           fsr0l	equ	0xFE9
 41406                           wreg	equ	0xFE8
 41407                           indf1	equ	0xFE7
 41408                           postdec1	equ	0xFE5
 41409                           plusw1	equ	0xFE3
 41410                           fsr1h	equ	0xFE2
 41411                           fsr1l	equ	0xFE1
 41412                           indf2	equ	0xFDF
 41413                           postinc2	equ	0xFDE
 41414                           postdec2	equ	0xFDD
 41415                           plusw2	equ	0xFDB
 41416                           fsr2h	equ	0xFDA
 41417                           fsr2l	equ	0xFD9
 41418                           status	equ	0xFD8
 41419                           
 41420 ;; *************** function __get_available_cluster *****************
 41421 ;; Defined at:
 41422 ;;		line 130 in file "fat16.c"
 41423 ;; Parameters:    Size  Location     Type
 41424 ;;  first_sector    2   43[COMRAM] unsigned int 
 41425 ;;  skip_sector     2   45[COMRAM] unsigned int 
 41426 ;; Auto vars:     Size  Location     Type
 41427 ;;  sector          2   51[COMRAM] unsigned int 
 41428 ;;  offset          2   49[COMRAM] unsigned int 
 41429 ;;  cluster         2   47[COMRAM] unsigned int 
 41430 ;; Return value:  Size  Location     Type
 41431 ;;                  2   43[COMRAM] unsigned int 
 41432 ;; Registers used:
 41433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41434 ;; Tracked objects:
 41435 ;;		On entry : 0/0
 41436 ;;		On exit  : 0/0
 41437 ;;		Unchanged: 0/0
 41438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41440 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41442 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41443 ;;Total ram usage:       10 bytes
 41444 ;; Hardware stack levels used:    1
 41445 ;; Hardware stack levels required when called:    5
 41446 ;; This function calls:
 41447 ;;		__cluster_from_sector_and_offset
 41448 ;;		__get_available_offset_from_buffer
 41449 ;;		_flash_sector_read
 41450 ;; This function is called by:
 41451 ;;		__make_cluster_chain
 41452 ;; This function uses a non-reentrant model
 41453 ;;
 41454                           
 41455                           	psect	text203
 41456  0070AE                     __ptext203:
 41457                           	opt stack 0
 41458  0070AE                     __get_available_cluster:
 41459                           	opt stack 20
 41460                           
 41461                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 41462                           
 41463                           ;incstack = 0
 41464  0070AE  C02C  F034         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 41465  0070B2  C02D  F035         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 41466  0070B6                     l11188:
 41467  0070B6  5035               	movf	__get_available_cluster@sector+1,w,c
 41468  0070B8  E157               	bnz	l11220
 41469  0070BA  0E22               	movlw	34
 41470  0070BC  5C34               	subwf	__get_available_cluster@sector,w,c
 41471  0070BE  B0D8               	btfsc	status,0,c
 41472  0070C0  D053               	goto	u7880
 41473                           
 41474                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 41475  0070C2  502E               	movf	__get_available_cluster@skip_sector,w,c
 41476  0070C4  1834               	xorwf	__get_available_cluster@sector,w,c
 41477  0070C6  E104               	bnz	l11196
 41478  0070C8  502F               	movf	__get_available_cluster@skip_sector+1,w,c
 41479  0070CA  1835               	xorwf	__get_available_cluster@sector+1,w,c
 41480  0070CC  B4D8               	btfsc	status,2,c
 41481  0070CE  D049               	goto	l2009
 41482  0070D0                     l11196:
 41483                           
 41484                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 41485  0070D0  C034  F028         	movff	__get_available_cluster@sector,flash_sector_read@page
 41486  0070D4  C035  F029         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 41487  0070D8  0EC0               	movlw	low _buffer
 41488  0070DA  6E2A               	movwf	flash_sector_read@data,c
 41489  0070DC  0E03               	movlw	high _buffer
 41490  0070DE  6E2B               	movwf	flash_sector_read@data+1,c
 41491  0070E0  ECE7  F04A         	call	_flash_sector_read	;wreg free
 41492                           
 41493                           ;fat16.c: 149: if(sector == 2)
 41494  0070E4  0E02               	movlw	2
 41495  0070E6  1834               	xorwf	__get_available_cluster@sector,w,c
 41496  0070E8  1035               	iorwf	__get_available_cluster@sector+1,w,c
 41497  0070EA  A4D8               	btfss	status,2,c
 41498  0070EC  D00B               	goto	l2004
 41499                           
 41500                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 41501  0070EE  0E00               	movlw	0
 41502  0070F0  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 41503  0070F2  0E04               	movlw	4
 41504  0070F4  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 41505  0070F6  0EC0               	movlw	low _buffer
 41506  0070F8  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 41507  0070FA  0E03               	movlw	high _buffer
 41508  0070FC  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 41509  0070FE  EC42  F045         	call	__get_available_offset_from_buffer	;wreg free
 41510  007102  D00A               	goto	L46
 41511  007104                     l2004:
 41512                           
 41513                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 41514  007104  0E00               	movlw	0
 41515  007106  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 41516  007108  0E00               	movlw	0
 41517  00710A  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 41518  00710C  0EC0               	movlw	low _buffer
 41519  00710E  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 41520  007110  0E03               	movlw	high _buffer
 41521  007112  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 41522  007114  EC42  F045         	call	__get_available_offset_from_buffer	;wreg free
 41523  007118                     L46:
 41524  007118  C001  F032         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 41525  00711C  C002  F033         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 41526                           
 41527                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 41528  007120  2832               	incf	__get_available_cluster@offset,w,c
 41529  007122  E103               	bnz	u7860
 41530  007124  2833               	incf	__get_available_cluster@offset+1,w,c
 41531  007126  B4D8               	btfsc	status,2,c
 41532  007128  D01C               	goto	l2009
 41533  00712A                     u7860:
 41534                           
 41535                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 41536  00712A  C034  F001         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 41537  00712E  C035  F002         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 41538  007132  C032  F003         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 41539  007136  C033  F004         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 41540  00713A  EC60  F04C         	call	__cluster_from_sector_and_offset	;wreg free
 41541  00713E  C001  F030         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 41542  007142  C002  F031         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 41543                           
 41544                           ;fat16.c: 165: if(cluster > 8191)
 41545  007146  0E20               	movlw	32
 41546  007148  5C31               	subwf	__get_available_cluster@cluster+1,w,c
 41547  00714A  A0D8               	btfss	status,0,c
 41548  00714C  D005               	goto	l2007
 41549                           
 41550                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 41551  00714E  0E00               	movlw	0
 41552  007150  6E2D               	movwf	?__get_available_cluster+1,c
 41553  007152  0E00               	movlw	0
 41554  007154  6E2C               	movwf	?__get_available_cluster,c
 41555  007156  0012               	return	
 41556  007158                     l2007:
 41557                           
 41558                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 41559  007158  C030  F02C         	movff	__get_available_cluster@cluster,?__get_available_cluster
 41560  00715C  C031  F02D         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 41561  007160  0012               	return	
 41562  007162                     l2009:
 41563  007162  4A34               	infsnz	__get_available_cluster@sector,f,c
 41564  007164  2A35               	incf	__get_available_cluster@sector+1,f,c
 41565  007166  D7A7               	goto	l11188
 41566  007168                     u7880:
 41567  007168                     l11220:
 41568                           
 41569                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 41570  007168  0E00               	movlw	0
 41571  00716A  6E2D               	movwf	?__get_available_cluster+1,c
 41572  00716C  0E00               	movlw	0
 41573  00716E  6E2C               	movwf	?__get_available_cluster,c
 41574  007170  0012               	return	
 41575  007172                     __end_of__get_available_cluster:
 41576                           	opt stack 0
 41577                           tosu	equ	0xFFF
 41578                           tosh	equ	0xFFE
 41579                           tosl	equ	0xFFD
 41580                           pclath	equ	0xFFA
 41581                           tblptru	equ	0xFF8
 41582                           tblptrh	equ	0xFF7
 41583                           tblptrl	equ	0xFF6
 41584                           tablat	equ	0xFF5
 41585                           prodh	equ	0xFF4
 41586                           prodl	equ	0xFF3
 41587                           intcon	equ	0xFF2
 41588                           intcon2	equ	0xFF1
 41589                           intcon3	equ	0xFF0
 41590                           indf0	equ	0xFEF
 41591                           postinc0	equ	0xFEE
 41592                           fsr0h	equ	0xFEA
 41593                           fsr0l	equ	0xFE9
 41594                           wreg	equ	0xFE8
 41595                           indf1	equ	0xFE7
 41596                           postdec1	equ	0xFE5
 41597                           plusw1	equ	0xFE3
 41598                           fsr1h	equ	0xFE2
 41599                           fsr1l	equ	0xFE1
 41600                           indf2	equ	0xFDF
 41601                           postinc2	equ	0xFDE
 41602                           postdec2	equ	0xFDD
 41603                           plusw2	equ	0xFDB
 41604                           fsr2h	equ	0xFDA
 41605                           fsr2l	equ	0xFD9
 41606                           status	equ	0xFD8
 41607                           
 41608 ;; *************** function __get_available_offset_from_buffer *****************
 41609 ;; Defined at:
 41610 ;;		line 98 in file "fat16.c"
 41611 ;; Parameters:    Size  Location     Type
 41612 ;;  minimum_offs    2    0[COMRAM] unsigned int 
 41613 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 41614 ;;		 -> buffer(512), 
 41615 ;; Auto vars:     Size  Location     Type
 41616 ;;  offset          2    6[COMRAM] unsigned int 
 41617 ;; Return value:  Size  Location     Type
 41618 ;;                  2    0[COMRAM] unsigned int 
 41619 ;; Registers used:
 41620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41621 ;; Tracked objects:
 41622 ;;		On entry : 0/0
 41623 ;;		On exit  : 0/0
 41624 ;;		Unchanged: 0/0
 41625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41629 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41630 ;;Total ram usage:        8 bytes
 41631 ;; Hardware stack levels used:    1
 41632 ;; This function calls:
 41633 ;;		Nothing
 41634 ;; This function is called by:
 41635 ;;		__get_available_cluster
 41636 ;;		__make_cluster_chain
 41637 ;; This function uses a non-reentrant model
 41638 ;;
 41639                           
 41640                           	psect	text204
 41641  008A84                     __ptext204:
 41642                           	opt stack 0
 41643  008A84                     __get_available_offset_from_buffer:
 41644                           	opt stack 25
 41645                           
 41646                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 41647                           
 41648                           ;incstack = 0
 41649  008A84  C001  F007         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 41650  008A88  C002  F008         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 41651  008A8C  D021               	goto	L47
 41652  008A8E                     
 41653                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 41654  008A8E  5007               	movf	__get_available_offset_from_buffer@offset,w,c
 41655  008A90  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 41656  008A92  6ED9               	movwf	fsr2l,c
 41657  008A94  5008               	movf	__get_available_offset_from_buffer@offset+1,w,c
 41658  008A96  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 41659  008A98  6EDA               	movwf	fsr2h,c
 41660  008A9A  50DF               	movf	indf2,w,c
 41661  008A9C  A4D8               	btfss	status,2,c
 41662  008A9E  D014               	goto	l1990
 41663  008AA0  0E01               	movlw	1
 41664  008AA2  2407               	addwf	__get_available_offset_from_buffer@offset,w,c
 41665  008AA4  6E05               	movwf	??__get_available_offset_from_buffer& (0+255),c
 41666  008AA6  0E00               	movlw	0
 41667  008AA8  2008               	addwfc	__get_available_offset_from_buffer@offset+1,w,c
 41668  008AAA  6E06               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),c
 41669  008AAC  5005               	movf	??__get_available_offset_from_buffer,w,c
 41670  008AAE  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 41671  008AB0  6ED9               	movwf	fsr2l,c
 41672  008AB2  5006               	movf	??__get_available_offset_from_buffer+1,w,c
 41673  008AB4  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 41674  008AB6  6EDA               	movwf	fsr2h,c
 41675  008AB8  50DF               	movf	indf2,w,c
 41676  008ABA  A4D8               	btfss	status,2,c
 41677  008ABC  D005               	goto	l1990
 41678                           
 41679                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 41680  008ABE  C007  F001         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 41681  008AC2  C008  F002         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 41682  008AC6  0012               	return	
 41683  008AC8                     l1990:
 41684  008AC8  0E02               	movlw	2
 41685  008ACA  2607               	addwf	__get_available_offset_from_buffer@offset,f,c
 41686  008ACC  0E00               	movlw	0
 41687  008ACE  2208               	addwfc	__get_available_offset_from_buffer@offset+1,f,c
 41688  008AD0                     L47:
 41689  008AD0  0E02               	movlw	2
 41690  008AD2  5C08               	subwf	__get_available_offset_from_buffer@offset+1,w,c
 41691  008AD4  A0D8               	btfss	status,0,c
 41692  008AD6  D7DB               	goto	l1988
 41693                           
 41694                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 41695  008AD8  6801               	setf	?__get_available_offset_from_buffer,c
 41696  008ADA  6802               	setf	?__get_available_offset_from_buffer+1,c
 41697  008ADC  0012               	return		;funcret
 41698  008ADE                     __end_of__get_available_offset_from_buffer:
 41699                           	opt stack 0
 41700                           tosu	equ	0xFFF
 41701                           tosh	equ	0xFFE
 41702                           tosl	equ	0xFFD
 41703                           pclath	equ	0xFFA
 41704                           tblptru	equ	0xFF8
 41705                           tblptrh	equ	0xFF7
 41706                           tblptrl	equ	0xFF6
 41707                           tablat	equ	0xFF5
 41708                           prodh	equ	0xFF4
 41709                           prodl	equ	0xFF3
 41710                           intcon	equ	0xFF2
 41711                           intcon2	equ	0xFF1
 41712                           intcon3	equ	0xFF0
 41713                           indf0	equ	0xFEF
 41714                           postinc0	equ	0xFEE
 41715                           fsr0h	equ	0xFEA
 41716                           fsr0l	equ	0xFE9
 41717                           wreg	equ	0xFE8
 41718                           indf1	equ	0xFE7
 41719                           postdec1	equ	0xFE5
 41720                           plusw1	equ	0xFE3
 41721                           fsr1h	equ	0xFE2
 41722                           fsr1l	equ	0xFE1
 41723                           indf2	equ	0xFDF
 41724                           postinc2	equ	0xFDE
 41725                           postdec2	equ	0xFDD
 41726                           plusw2	equ	0xFDB
 41727                           fsr2h	equ	0xFDA
 41728                           fsr2l	equ	0xFD9
 41729                           status	equ	0xFD8
 41730                           
 41731 ;; *************** function __cluster_from_sector_and_offset *****************
 41732 ;; Defined at:
 41733 ;;		line 89 in file "fat16.c"
 41734 ;; Parameters:    Size  Location     Type
 41735 ;;  sector          2    0[COMRAM] unsigned int 
 41736 ;;  offset          2    2[COMRAM] unsigned int 
 41737 ;; Auto vars:     Size  Location     Type
 41738 ;;		None
 41739 ;; Return value:  Size  Location     Type
 41740 ;;                  2    0[COMRAM] unsigned int 
 41741 ;; Registers used:
 41742 ;;		wreg, status,2, status,0
 41743 ;; Tracked objects:
 41744 ;;		On entry : 0/0
 41745 ;;		On exit  : 0/0
 41746 ;;		Unchanged: 0/0
 41747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41751 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41752 ;;Total ram usage:        4 bytes
 41753 ;; Hardware stack levels used:    1
 41754 ;; This function calls:
 41755 ;;		Nothing
 41756 ;; This function is called by:
 41757 ;;		__get_available_cluster
 41758 ;; This function uses a non-reentrant model
 41759 ;;
 41760                           
 41761                           	psect	text205
 41762  0098C0                     __ptext205:
 41763                           	opt stack 0
 41764  0098C0                     __cluster_from_sector_and_offset:
 41765                           	opt stack 24
 41766                           
 41767                           ;fat16.c: 91: offset >>= 1;
 41768                           
 41769                           ;incstack = 0
 41770  0098C0  90D8               	bcf	status,0,c
 41771  0098C2  3204               	rrcf	__cluster_from_sector_and_offset@offset+1,f,c
 41772  0098C4  3203               	rrcf	__cluster_from_sector_and_offset@offset,f,c
 41773                           
 41774                           ;fat16.c: 92: sector -= 2;
 41775  0098C6  0E02               	movlw	2
 41776  0098C8  5E01               	subwf	__cluster_from_sector_and_offset@sector,f,c
 41777  0098CA  0E00               	movlw	0
 41778  0098CC  5A02               	subwfb	__cluster_from_sector_and_offset@sector+1,f,c
 41779                           
 41780                           ;fat16.c: 93: sector <<= 8;
 41781  0098CE  5001               	movf	__cluster_from_sector_and_offset@sector,w,c
 41782  0098D0  6E02               	movwf	__cluster_from_sector_and_offset@sector+1,c
 41783  0098D2  6A01               	clrf	__cluster_from_sector_and_offset@sector,c
 41784                           
 41785                           ;fat16.c: 94: sector |= offset;
 41786  0098D4  5003               	movf	__cluster_from_sector_and_offset@offset,w,c
 41787  0098D6  1201               	iorwf	__cluster_from_sector_and_offset@sector,f,c
 41788  0098D8  5004               	movf	__cluster_from_sector_and_offset@offset+1,w,c
 41789  0098DA  1202               	iorwf	__cluster_from_sector_and_offset@sector+1,f,c
 41790                           
 41791                           ;fat16.c: 95: return sector;
 41792  0098DC  C001  F001         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 41793  0098E0  C002  F002         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 41794  0098E4  0012               	return	
 41795  0098E6                     __end_of__cluster_from_sector_and_offset:
 41796                           	opt stack 0
 41797                           tosu	equ	0xFFF
 41798                           tosh	equ	0xFFE
 41799                           tosl	equ	0xFFD
 41800                           pclath	equ	0xFFA
 41801                           tblptru	equ	0xFF8
 41802                           tblptrh	equ	0xFF7
 41803                           tblptrl	equ	0xFF6
 41804                           tablat	equ	0xFF5
 41805                           prodh	equ	0xFF4
 41806                           prodl	equ	0xFF3
 41807                           intcon	equ	0xFF2
 41808                           intcon2	equ	0xFF1
 41809                           intcon3	equ	0xFF0
 41810                           indf0	equ	0xFEF
 41811                           postinc0	equ	0xFEE
 41812                           fsr0h	equ	0xFEA
 41813                           fsr0l	equ	0xFE9
 41814                           wreg	equ	0xFE8
 41815                           indf1	equ	0xFE7
 41816                           postdec1	equ	0xFE5
 41817                           plusw1	equ	0xFE3
 41818                           fsr1h	equ	0xFE2
 41819                           fsr1l	equ	0xFE1
 41820                           indf2	equ	0xFDF
 41821                           postinc2	equ	0xFDE
 41822                           postdec2	equ	0xFDD
 41823                           plusw2	equ	0xFDB
 41824                           fsr2h	equ	0xFDA
 41825                           fsr2l	equ	0xFD9
 41826                           status	equ	0xFD8
 41827                           
 41828 ;; *************** function _fat_modify_file *****************
 41829 ;; Defined at:
 41830 ;;		line 962 in file "fat16.c"
 41831 ;; Parameters:    Size  Location     Type
 41832 ;;  file_number     1    wreg     unsigned char 
 41833 ;;  start_byte      4   65[COMRAM] unsigned long 
 41834 ;;  length          2   69[COMRAM] unsigned int 
 41835 ;;  data            2   71[COMRAM] PTR unsigned char 
 41836 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 41837 ;; Auto vars:     Size  Location     Type
 41838 ;;  file_number     1    2[BANK0 ] unsigned char 
 41839 ;;  root           32   14[BANK0 ] struct .
 41840 ;;  position        4   10[BANK0 ] unsigned long 
 41841 ;;  number_of_by    2    8[BANK0 ] unsigned int 
 41842 ;;  offset          2    6[BANK0 ] unsigned int 
 41843 ;;  cluster         2    3[BANK0 ] unsigned int 
 41844 ;;  sector          2    0[BANK0 ] unsigned int 
 41845 ;;  return_code     1    5[BANK0 ] unsigned char 
 41846 ;; Return value:  Size  Location     Type
 41847 ;;                  1    wreg      unsigned char 
 41848 ;; Registers used:
 41849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41850 ;; Tracked objects:
 41851 ;;		On entry : 0/0
 41852 ;;		On exit  : 0/0
 41853 ;;		Unchanged: 0/0
 41854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41855 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41856 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41857 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41858 ;;      Totals:        20      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41859 ;;Total ram usage:       66 bytes
 41860 ;; Hardware stack levels used:    1
 41861 ;; Hardware stack levels required when called:    7
 41862 ;; This function calls:
 41863 ;;		__data_sector_from_cluster
 41864 ;;		__find_nth_cluster
 41865 ;;		__read_fat
 41866 ;;		_fat_get_file_information
 41867 ;;		_flash_partial_write
 41868 ;; This function is called by:
 41869 ;;		_fat_append_to_file
 41870 ;;		__parse_file_modify
 41871 ;; This function uses a non-reentrant model
 41872 ;;
 41873                           
 41874                           	psect	text206
 41875  0024FC                     __ptext206:
 41876                           	opt stack 0
 41877  0024FC                     _fat_modify_file:
 41878                           	opt stack 20
 41879                           
 41880                           ;incstack = 0
 41881                           ;fat_modify_file@file_number stored from wreg
 41882  0024FC  0100               	movlb	0	; () banked
 41883  0024FE  6F62               	movwf	fat_modify_file@file_number& (0+255),b
 41884                           
 41885                           ;fat16.c: 964: rootEntry_t root;;fat16.c: 965: uint16_t cluster;;fat16.c: 966: uint32_t 
      +                          position;;fat16.c: 967: uint16_t offset;;fat16.c: 968: uint16_t sector;;fat16.c: 969: ui
      +                          nt16_t number_of_bytes;;fat16.c: 970: uint8_t return_code;;fat16.c: 973: return_code = f
      +                          at_get_file_information(file_number, &root);
 41886  002500  0E6E               	movlw	low fat_modify_file@root
 41887  002502  6E30               	movwf	fat_get_file_information@data,c
 41888  002504  0E00               	movlw	high fat_modify_file@root
 41889  002506  6E31               	movwf	fat_get_file_information@data+1,c
 41890  002508  0100               	movlb	0	; () banked
 41891  00250A  5162               	movf	fat_modify_file@file_number& (0+255),w,b
 41892  00250C  EC0A  F042         	call	_fat_get_file_information
 41893  002510  0100               	movlb	0	; () banked
 41894  002512  6F65               	movwf	fat_modify_file@return_code& (0+255),b
 41895                           
 41896                           ; BSR set to: 0
 41897                           ;fat16.c: 974: if(return_code!=0x00)
 41898  002514  5165               	movf	fat_modify_file@return_code& (0+255),w,b
 41899  002516  B4D8               	btfsc	status,2,c
 41900  002518  D002               	goto	l2154
 41901                           
 41902                           ; BSR set to: 0
 41903                           ;fat16.c: 975: {;fat16.c: 977: return return_code;
 41904  00251A  5165               	movf	fat_modify_file@return_code& (0+255),w,b
 41905                           
 41906                           ; BSR set to: 0
 41907  00251C  0012               	return	
 41908  00251E                     l2154:
 41909                           
 41910                           ; BSR set to: 0
 41911                           ;fat16.c: 978: };fat16.c: 981: if(start_byte>root.fileSize)
 41912                           
 41913                           ; BSR set to: 0
 41914  00251E  5042               	movf	fat_modify_file@start_byte,w,c
 41915  002520  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 41916  002522  5043               	movf	fat_modify_file@start_byte+1,w,c
 41917  002524  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 41918  002526  5044               	movf	fat_modify_file@start_byte+2,w,c
 41919  002528  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 41920  00252A  5045               	movf	fat_modify_file@start_byte+3,w,c
 41921  00252C  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 41922  00252E  B0D8               	btfsc	status,0,c
 41923  002530  D002               	goto	l2156
 41924                           
 41925                           ; BSR set to: 0
 41926                           ;fat16.c: 982: {;fat16.c: 984: return 0xF0;
 41927  002532  0EF0               	movlw	240
 41928                           
 41929                           ; BSR set to: 0
 41930  002534  0012               	return	
 41931  002536                     l2156:
 41932                           
 41933                           ; BSR set to: 0
 41934                           ;fat16.c: 985: };fat16.c: 987: if((start_byte+length) > root.fileSize)
 41935                           
 41936                           ; BSR set to: 0
 41937  002536  5046               	movf	fat_modify_file@length,w,c
 41938  002538  2442               	addwf	fat_modify_file@start_byte,w,c
 41939  00253A  6E4A               	movwf	??_fat_modify_file& (0+255),c
 41940  00253C  5047               	movf	fat_modify_file@length+1,w,c
 41941  00253E  2043               	addwfc	fat_modify_file@start_byte+1,w,c
 41942  002540  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 41943  002542  0E00               	movlw	0
 41944  002544  2044               	addwfc	fat_modify_file@start_byte+2,w,c
 41945  002546  6E4C               	movwf	(??_fat_modify_file+2)& (0+255),c
 41946  002548  0E00               	movlw	0
 41947  00254A  2045               	addwfc	fat_modify_file@start_byte+3,w,c
 41948  00254C  6E4D               	movwf	(??_fat_modify_file+3)& (0+255),c
 41949  00254E  504A               	movf	??_fat_modify_file,w,c
 41950  002550  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 41951  002552  504B               	movf	??_fat_modify_file+1,w,c
 41952  002554  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 41953  002556  504C               	movf	??_fat_modify_file+2,w,c
 41954  002558  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 41955  00255A  504D               	movf	??_fat_modify_file+3,w,c
 41956  00255C  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 41957  00255E  B0D8               	btfsc	status,0,c
 41958  002560  D00E               	goto	l2157
 41959                           
 41960                           ; BSR set to: 0
 41961                           ;fat16.c: 988: {;fat16.c: 990: length = root.fileSize - start_byte;
 41962  002562  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 41963  002566  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 41964  00256A  1E4A               	comf	??_fat_modify_file,f,c
 41965  00256C  1E4B               	comf	??_fat_modify_file+1,f,c
 41966  00256E  4A4A               	infsnz	??_fat_modify_file,f,c
 41967  002570  2A4B               	incf	??_fat_modify_file+1,f,c
 41968  002572  518A               	movf	(fat_modify_file@root+28)& (0+255),w,b
 41969  002574  244A               	addwf	??_fat_modify_file,w,c
 41970  002576  6E46               	movwf	fat_modify_file@length,c
 41971  002578  518B               	movf	(fat_modify_file@root+29)& (0+255),w,b
 41972  00257A  204B               	addwfc	??_fat_modify_file+1,w,c
 41973  00257C  6E47               	movwf	fat_modify_file@length+1,c
 41974  00257E                     l2157:
 41975                           
 41976                           ; BSR set to: 0
 41977                           ;fat16.c: 991: };fat16.c: 994: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 41978                           
 41979                           ; BSR set to: 0
 41980  00257E  C088  F038         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 41981  002582  C089  F039         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 41982  002586  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 41983  00258A  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 41984  00258E  C044  F04C         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 41985  002592  C045  F04D         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 41986  002596  0E0A               	movlw	10
 41987  002598  D005               	goto	u9840
 41988  00259A                     u9845:
 41989  00259A  90D8               	bcf	status,0,c
 41990  00259C  324D               	rrcf	??_fat_modify_file+3,f,c
 41991  00259E  324C               	rrcf	??_fat_modify_file+2,f,c
 41992  0025A0  324B               	rrcf	??_fat_modify_file+1,f,c
 41993  0025A2  324A               	rrcf	??_fat_modify_file,f,c
 41994  0025A4                     u9840:
 41995  0025A4  2EE8               	decfsz	wreg,f,c
 41996  0025A6  D7F9               	goto	u9845
 41997  0025A8  C04A  F03A         	movff	??_fat_modify_file,__find_nth_cluster@n
 41998  0025AC  C04B  F03B         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 41999  0025B0  EC0A  F03E         	call	__find_nth_cluster	;wreg free
 42000  0025B4  C038  F063         	movff	?__find_nth_cluster,fat_modify_file@cluster
 42001  0025B8  C039  F064         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 42002                           
 42003                           ;fat16.c: 997: position = start_byte & 0xFFFFFE00;
 42004  0025BC  0E00               	movlw	0
 42005  0025BE  1442               	andwf	fat_modify_file@start_byte,w,c
 42006  0025C0  0100               	movlb	0	; () banked
 42007  0025C2  6F6A               	movwf	fat_modify_file@position& (0+255),b
 42008  0025C4  0EFE               	movlw	254
 42009  0025C6  1443               	andwf	fat_modify_file@start_byte+1,w,c
 42010  0025C8  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 42011  0025CA  0EFF               	movlw	255
 42012  0025CC  1444               	andwf	fat_modify_file@start_byte+2,w,c
 42013  0025CE  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 42014  0025D0  0EFF               	movlw	255
 42015  0025D2  1445               	andwf	fat_modify_file@start_byte+3,w,c
 42016  0025D4  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 42017                           
 42018                           ; BSR set to: 0
 42019                           ;fat16.c: 1000: offset = (uint16_t) (start_byte-position);
 42020  0025D6  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 42021  0025DA  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 42022  0025DE  1E4A               	comf	??_fat_modify_file,f,c
 42023  0025E0  1E4B               	comf	??_fat_modify_file+1,f,c
 42024  0025E2  4A4A               	infsnz	??_fat_modify_file,f,c
 42025  0025E4  2A4B               	incf	??_fat_modify_file+1,f,c
 42026  0025E6  5042               	movf	fat_modify_file@start_byte,w,c
 42027  0025E8  244A               	addwf	??_fat_modify_file,w,c
 42028  0025EA  6F66               	movwf	fat_modify_file@offset& (0+255),b
 42029  0025EC  5043               	movf	fat_modify_file@start_byte+1,w,c
 42030  0025EE  204B               	addwfc	??_fat_modify_file+1,w,c
 42031  0025F0  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 42032                           
 42033                           ; BSR set to: 0
 42034                           ;fat16.c: 1003: position = 0;
 42035  0025F2  0E00               	movlw	0
 42036  0025F4  6F6A               	movwf	fat_modify_file@position& (0+255),b
 42037  0025F6  0E00               	movlw	0
 42038  0025F8  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 42039  0025FA  0E00               	movlw	0
 42040  0025FC  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 42041  0025FE  0E00               	movlw	0
 42042  002600  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 42043                           
 42044                           ;fat16.c: 1004: while(position < length)
 42045  002602  D089               	goto	l2158
 42046  002604                     
 42047                           ; BSR set to: 0
 42048                           ;fat16.c: 1005: {;fat16.c: 1007: if(offset==512)
 42049                           
 42050                           ; BSR set to: 0
 42051  002604  0E02               	movlw	2
 42052  002606  1967               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 42053  002608  1166               	iorwf	fat_modify_file@offset& (0+255),w,b
 42054  00260A  A4D8               	btfss	status,2,c
 42055  00260C  D00F               	goto	l2160
 42056                           
 42057                           ; BSR set to: 0
 42058                           ;fat16.c: 1008: {;fat16.c: 1010: cluster = _read_fat(cluster);
 42059  00260E  C063  F030         	movff	fat_modify_file@cluster,__read_fat@cluster
 42060  002612  C064  F031         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 42061  002616  ECF6  F046         	call	__read_fat	;wreg free
 42062  00261A  C030  F063         	movff	?__read_fat,fat_modify_file@cluster
 42063  00261E  C031  F064         	movff	?__read_fat+1,fat_modify_file@cluster+1
 42064                           
 42065                           ;fat16.c: 1012: offset = 0;
 42066  002622  0E00               	movlw	0
 42067  002624  0100               	movlb	0	; () banked
 42068  002626  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 42069  002628  0E00               	movlw	0
 42070  00262A  6F66               	movwf	fat_modify_file@offset& (0+255),b
 42071  00262C                     l2160:
 42072                           
 42073                           ; BSR set to: 0
 42074                           ;fat16.c: 1013: };fat16.c: 1016: sector = _data_sector_from_cluster(cluster);
 42075                           
 42076                           ; BSR set to: 0
 42077  00262C  C063  F001         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 42078  002630  C064  F002         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 42079  002634  EC24  F04E         	call	__data_sector_from_cluster	;wreg free
 42080  002638  C001  F060         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 42081  00263C  C002  F061         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 42082                           
 42083                           ;fat16.c: 1019: number_of_bytes = 512 - offset;
 42084  002640  C066  F04A         	movff	fat_modify_file@offset,??_fat_modify_file
 42085  002644  C067  F04B         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 42086  002648  1E4A               	comf	??_fat_modify_file,f,c
 42087  00264A  1E4B               	comf	??_fat_modify_file+1,f,c
 42088  00264C  4A4A               	infsnz	??_fat_modify_file,f,c
 42089  00264E  2A4B               	incf	??_fat_modify_file+1,f,c
 42090  002650  0E00               	movlw	0
 42091  002652  244A               	addwf	??_fat_modify_file,w,c
 42092  002654  0100               	movlb	0	; () banked
 42093  002656  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 42094  002658  0E02               	movlw	2
 42095  00265A  204B               	addwfc	??_fat_modify_file+1,w,c
 42096  00265C  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 42097                           
 42098                           ; BSR set to: 0
 42099                           ;fat16.c: 1020: if(number_of_bytes > (length-position))
 42100  00265E  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 42101  002660  6E4A               	movwf	??_fat_modify_file& (0+255),c
 42102  002662  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 42103  002664  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 42104  002666  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 42105  002668  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 42106  00266A  C06A  F04E         	movff	fat_modify_file@position,??_fat_modify_file+4
 42107  00266E  C06B  F04F         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 42108  002672  C06C  F050         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 42109  002676  C06D  F051         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 42110  00267A  1E4E               	comf	??_fat_modify_file+4,f,c
 42111  00267C  1E4F               	comf	??_fat_modify_file+5,f,c
 42112  00267E  1E50               	comf	??_fat_modify_file+6,f,c
 42113  002680  1E51               	comf	??_fat_modify_file+7,f,c
 42114  002682  2A4E               	incf	??_fat_modify_file+4,f,c
 42115  002684  0E00               	movlw	0
 42116  002686  224F               	addwfc	??_fat_modify_file+5,f,c
 42117  002688  2250               	addwfc	??_fat_modify_file+6,f,c
 42118  00268A  2251               	addwfc	??_fat_modify_file+7,f,c
 42119  00268C  5046               	movf	fat_modify_file@length,w,c
 42120  00268E  244E               	addwf	??_fat_modify_file+4,w,c
 42121  002690  6E52               	movwf	(??_fat_modify_file+8)& (0+255),c
 42122  002692  5047               	movf	fat_modify_file@length+1,w,c
 42123  002694  204F               	addwfc	??_fat_modify_file+5,w,c
 42124  002696  6E53               	movwf	(??_fat_modify_file+9)& (0+255),c
 42125  002698  0E00               	movlw	0
 42126  00269A  2050               	addwfc	??_fat_modify_file+6,w,c
 42127  00269C  6E54               	movwf	(??_fat_modify_file+10)& (0+255),c
 42128  00269E  0E00               	movlw	0
 42129  0026A0  2051               	addwfc	??_fat_modify_file+7,w,c
 42130  0026A2  6E55               	movwf	(??_fat_modify_file+11)& (0+255),c
 42131  0026A4  504A               	movf	??_fat_modify_file,w,c
 42132  0026A6  5C52               	subwf	??_fat_modify_file+8,w,c
 42133  0026A8  504B               	movf	??_fat_modify_file+1,w,c
 42134  0026AA  5853               	subwfb	??_fat_modify_file+9,w,c
 42135  0026AC  504C               	movf	??_fat_modify_file+2,w,c
 42136  0026AE  5854               	subwfb	??_fat_modify_file+10,w,c
 42137  0026B0  504D               	movf	??_fat_modify_file+3,w,c
 42138  0026B2  5855               	subwfb	??_fat_modify_file+11,w,c
 42139  0026B4  B0D8               	btfsc	status,0,c
 42140  0026B6  D00E               	goto	l2161
 42141                           
 42142                           ; BSR set to: 0
 42143                           ;fat16.c: 1021: {;fat16.c: 1022: number_of_bytes = length - position;
 42144  0026B8  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 42145  0026BC  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 42146  0026C0  1E4A               	comf	??_fat_modify_file,f,c
 42147  0026C2  1E4B               	comf	??_fat_modify_file+1,f,c
 42148  0026C4  4A4A               	infsnz	??_fat_modify_file,f,c
 42149  0026C6  2A4B               	incf	??_fat_modify_file+1,f,c
 42150  0026C8  5046               	movf	fat_modify_file@length,w,c
 42151  0026CA  244A               	addwf	??_fat_modify_file,w,c
 42152  0026CC  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 42153  0026CE  5047               	movf	fat_modify_file@length+1,w,c
 42154  0026D0  204B               	addwfc	??_fat_modify_file+1,w,c
 42155  0026D2  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 42156  0026D4                     l2161:
 42157                           
 42158                           ; BSR set to: 0
 42159                           ;fat16.c: 1023: };fat16.c: 1026: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 42160                           
 42161                           ; BSR set to: 0
 42162  0026D4  C060  F020         	movff	fat_modify_file@sector,flash_partial_write@page
 42163  0026D8  C061  F021         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 42164  0026DC  C066  F022         	movff	fat_modify_file@offset,flash_partial_write@start
 42165  0026E0  C067  F023         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 42166  0026E4  C068  F024         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 42167  0026E8  C069  F025         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 42168  0026EC  516A               	movf	fat_modify_file@position& (0+255),w,b
 42169  0026EE  2448               	addwf	fat_modify_file@data,w,c
 42170  0026F0  6E26               	movwf	flash_partial_write@data,c
 42171  0026F2  516B               	movf	(fat_modify_file@position+1)& (0+255),w,b
 42172  0026F4  2049               	addwfc	fat_modify_file@data+1,w,c
 42173  0026F6  6E27               	movwf	flash_partial_write@data+1,c
 42174  0026F8  EC7B  F042         	call	_flash_partial_write	;wreg free
 42175                           
 42176                           ;fat16.c: 1029: position += number_of_bytes;
 42177  0026FC  0100               	movlb	0	; () banked
 42178  0026FE  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 42179  002700  276A               	addwf	fat_modify_file@position& (0+255),f,b
 42180  002702  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 42181  002704  236B               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 42182  002706  0E00               	movlw	0
 42183  002708  236C               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 42184  00270A  0E00               	movlw	0
 42185  00270C  236D               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 42186                           
 42187                           ; BSR set to: 0
 42188                           ;fat16.c: 1030: offset += number_of_bytes;
 42189  00270E  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 42190  002710  2766               	addwf	fat_modify_file@offset& (0+255),f,b
 42191  002712  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 42192  002714  2367               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 42193  002716                     l2158:
 42194                           
 42195                           ; BSR set to: 0
 42196                           
 42197                           ; BSR set to: 0
 42198  002716  5046               	movf	fat_modify_file@length,w,c
 42199  002718  6E4A               	movwf	??_fat_modify_file& (0+255),c
 42200  00271A  5047               	movf	fat_modify_file@length+1,w,c
 42201  00271C  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 42202  00271E  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 42203  002720  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 42204  002722  504A               	movf	??_fat_modify_file,w,c
 42205  002724  5D6A               	subwf	fat_modify_file@position& (0+255),w,b
 42206  002726  504B               	movf	??_fat_modify_file+1,w,c
 42207  002728  596B               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 42208  00272A  504C               	movf	??_fat_modify_file+2,w,c
 42209  00272C  596C               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 42210  00272E  504D               	movf	??_fat_modify_file+3,w,c
 42211  002730  596D               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 42212  002732  A0D8               	btfss	status,0,c
 42213  002734  D767               	goto	l2159
 42214                           
 42215                           ; BSR set to: 0
 42216                           ;fat16.c: 1031: };fat16.c: 1033: return 0x00;
 42217                           
 42218                           ; BSR set to: 0
 42219  002736  0E00               	movlw	0
 42220  002738  0012               	return	
 42221  00273A                     __end_of_fat_modify_file:
 42222                           	opt stack 0
 42223                           tosu	equ	0xFFF
 42224                           tosh	equ	0xFFE
 42225                           tosl	equ	0xFFD
 42226                           pclath	equ	0xFFA
 42227                           tblptru	equ	0xFF8
 42228                           tblptrh	equ	0xFF7
 42229                           tblptrl	equ	0xFF6
 42230                           tablat	equ	0xFF5
 42231                           prodh	equ	0xFF4
 42232                           prodl	equ	0xFF3
 42233                           intcon	equ	0xFF2
 42234                           intcon2	equ	0xFF1
 42235                           intcon3	equ	0xFF0
 42236                           indf0	equ	0xFEF
 42237                           postinc0	equ	0xFEE
 42238                           fsr0h	equ	0xFEA
 42239                           fsr0l	equ	0xFE9
 42240                           wreg	equ	0xFE8
 42241                           indf1	equ	0xFE7
 42242                           postdec1	equ	0xFE5
 42243                           plusw1	equ	0xFE3
 42244                           fsr1h	equ	0xFE2
 42245                           fsr1l	equ	0xFE1
 42246                           indf2	equ	0xFDF
 42247                           postinc2	equ	0xFDE
 42248                           postdec2	equ	0xFDD
 42249                           plusw2	equ	0xFDB
 42250                           fsr2h	equ	0xFDA
 42251                           fsr2l	equ	0xFD9
 42252                           status	equ	0xFD8
 42253                           
 42254 ;; *************** function _flash_partial_write *****************
 42255 ;; Defined at:
 42256 ;;		line 494 in file "flash.c"
 42257 ;; Parameters:    Size  Location     Type
 42258 ;;  page            2   31[COMRAM] unsigned int 
 42259 ;;  start           2   33[COMRAM] unsigned int 
 42260 ;;  length          2   35[COMRAM] unsigned int 
 42261 ;;  data            2   37[COMRAM] PTR unsigned char 
 42262 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 42263 ;;		 -> _delete_root@deleted_value(1), ReceivedDataBuffer(64), 
 42264 ;; Auto vars:     Size  Location     Type
 42265 ;;  match           1   39[COMRAM] enum E6908
 42266 ;; Return value:  Size  Location     Type
 42267 ;;                  1    wreg      void 
 42268 ;; Registers used:
 42269 ;;		wreg, status,2, status,0, cstack
 42270 ;; Tracked objects:
 42271 ;;		On entry : 0/0
 42272 ;;		On exit  : 0/0
 42273 ;;		Unchanged: 0/0
 42274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42275 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42278 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42279 ;;Total ram usage:        9 bytes
 42280 ;; Hardware stack levels used:    1
 42281 ;; Hardware stack levels required when called:    4
 42282 ;; This function calls:
 42283 ;;		__flash_compare_page_to_buffer
 42284 ;;		__flash_copy_page_to_buffer
 42285 ;;		__flash_is_busy
 42286 ;;		__flash_write_page_from_buffer
 42287 ;;		__flash_write_to_buffer
 42288 ;;		_spi_set_configuration
 42289 ;; This function is called by:
 42290 ;;		__write_root
 42291 ;;		__delete_root
 42292 ;;		_fat_modify_file
 42293 ;; This function uses a non-reentrant model
 42294 ;;
 42295                           
 42296                           	psect	text207
 42297  0084F6                     __ptext207:
 42298                           	opt stack 0
 42299  0084F6                     _flash_partial_write:
 42300                           	opt stack 21
 42301                           
 42302                           ;flash.c: 496: flashMatchResult_t match;;flash.c: 499: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 42303                           
 42304                           ; BSR set to: 0
 42305                           ;incstack = 0
 42306  0084F6  0E00               	movlw	0
 42307  0084F8  ECAB  F02A         	call	_spi_set_configuration
 42308  0084FC  ECF1  F04C         	call	__flash_is_busy	;wreg free
 42309  008500  0900               	iorlw	0
 42310  008502  A4D8               	btfss	status,2,c
 42311  008504  D7FB               	goto	l1881
 42312                           
 42313                           ;flash.c: 505: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 42314  008506  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 42315  00850A  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 42316  00850E  0E00               	movlw	0
 42317  008510  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 42318  008512  ECC7  F045         	call	__flash_copy_page_to_buffer	;wreg free
 42319                           
 42320                           ;flash.c: 508: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 42321  008516  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 42322  00851A  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 42323  00851E  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 42324  008522  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 42325  008526  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 42326  00852A  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 42327  00852E  0E00               	movlw	0
 42328  008530  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 42329  008532  EC19  F048         	call	__flash_write_to_buffer	;wreg free
 42330                           
 42331                           ;flash.c: 511: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 42332  008536  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 42333  00853A  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 42334  00853E  0E00               	movlw	0
 42335  008540  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 42336  008542  EC59  F041         	call	__flash_compare_page_to_buffer	;wreg free
 42337  008546  6E28               	movwf	flash_partial_write@match,c
 42338                           
 42339                           ;flash.c: 514: if(match==DATA_DOES_NOT_MATCH)
 42340  008548  0428               	decf	flash_partial_write@match,w,c
 42341  00854A  A4D8               	btfss	status,2,c
 42342  00854C  D008               	goto	l1883
 42343                           
 42344                           ;flash.c: 515: {;flash.c: 516: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 42345  00854E  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 42346  008552  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 42347  008556  0E00               	movlw	0
 42348  008558  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 42349  00855A  EC9B  F045         	call	__flash_write_page_from_buffer	;wreg free
 42350  00855E                     l1883:
 42351                           
 42352                           ;flash.c: 517: };flash.c: 520: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 42353  00855E  0E01               	movlw	1
 42354  008560  ECAB  F02A         	call	_spi_set_configuration
 42355  008564  0012               	return		;funcret
 42356  008566                     __end_of_flash_partial_write:
 42357                           	opt stack 0
 42358                           tosu	equ	0xFFF
 42359                           tosh	equ	0xFFE
 42360                           tosl	equ	0xFFD
 42361                           pclath	equ	0xFFA
 42362                           tblptru	equ	0xFF8
 42363                           tblptrh	equ	0xFF7
 42364                           tblptrl	equ	0xFF6
 42365                           tablat	equ	0xFF5
 42366                           prodh	equ	0xFF4
 42367                           prodl	equ	0xFF3
 42368                           intcon	equ	0xFF2
 42369                           intcon2	equ	0xFF1
 42370                           intcon3	equ	0xFF0
 42371                           indf0	equ	0xFEF
 42372                           postinc0	equ	0xFEE
 42373                           fsr0h	equ	0xFEA
 42374                           fsr0l	equ	0xFE9
 42375                           wreg	equ	0xFE8
 42376                           indf1	equ	0xFE7
 42377                           postdec1	equ	0xFE5
 42378                           plusw1	equ	0xFE3
 42379                           fsr1h	equ	0xFE2
 42380                           fsr1l	equ	0xFE1
 42381                           indf2	equ	0xFDF
 42382                           postinc2	equ	0xFDE
 42383                           postdec2	equ	0xFDD
 42384                           plusw2	equ	0xFDB
 42385                           fsr2h	equ	0xFDA
 42386                           fsr2l	equ	0xFD9
 42387                           status	equ	0xFD8
 42388                           
 42389 ;; *************** function __flash_write_to_buffer *****************
 42390 ;; Defined at:
 42391 ;;		line 235 in file "flash.c"
 42392 ;; Parameters:    Size  Location     Type
 42393 ;;  start           2   19[COMRAM] unsigned int 
 42394 ;;  data            2   21[COMRAM] PTR unsigned char 
 42395 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 42396 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 42397 ;;  data_length     2   23[COMRAM] unsigned int 
 42398 ;;  buffer          1   25[COMRAM] enum E6904
 42399 ;; Auto vars:     Size  Location     Type
 42400 ;;  command         4   26[COMRAM] unsigned char [4]
 42401 ;; Return value:  Size  Location     Type
 42402 ;;                  1    wreg      void 
 42403 ;; Registers used:
 42404 ;;		wreg, status,2, status,0, cstack
 42405 ;; Tracked objects:
 42406 ;;		On entry : 0/0
 42407 ;;		On exit  : 0/0
 42408 ;;		Unchanged: 0/0
 42409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42410 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42411 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42413 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42414 ;;Total ram usage:       11 bytes
 42415 ;; Hardware stack levels used:    1
 42416 ;; Hardware stack levels required when called:    3
 42417 ;; This function calls:
 42418 ;;		__flash_is_busy
 42419 ;;		_spi_tx_tx
 42420 ;; This function is called by:
 42421 ;;		_flash_sector_write
 42422 ;;		_flash_partial_write
 42423 ;;		_flash_write_to_buffer
 42424 ;; This function uses a non-reentrant model
 42425 ;;
 42426                           
 42427                           	psect	text208
 42428  009032                     __ptext208:
 42429                           	opt stack 0
 42430  009032                     __flash_write_to_buffer:
 42431                           	opt stack 23
 42432                           
 42433                           ;flash.c: 237: uint8_t command[4];;flash.c: 240: while(_flash_is_busy());
 42434                           
 42435                           ;incstack = 0
 42436  009032  ECF1  F04C         	call	__flash_is_busy	;wreg free
 42437  009036  0900               	iorlw	0
 42438  009038  A4D8               	btfss	status,2,c
 42439  00903A  D7FB               	goto	__flash_write_to_buffer
 42440                           
 42441                           ;flash.c: 243: if(buffer==FLASH_BUFFER_1)
 42442  00903C  501A               	movf	__flash_write_to_buffer@buffer,w,c
 42443  00903E  A4D8               	btfss	status,2,c
 42444  009040  D002               	goto	l1814
 42445                           
 42446                           ;flash.c: 244: command[0] = 0x84;
 42447  009042  0E84               	movlw	132
 42448  009044  6E1B               	movwf	__flash_write_to_buffer@command,c
 42449  009046                     l1814:
 42450                           
 42451                           ;flash.c: 245: if(buffer==FLASH_BUFFER_2)
 42452  009046  041A               	decf	__flash_write_to_buffer@buffer,w,c
 42453  009048  A4D8               	btfss	status,2,c
 42454  00904A  D002               	goto	l1815
 42455                           
 42456                           ;flash.c: 246: command[0] = 0x87;
 42457  00904C  0E87               	movlw	135
 42458  00904E  6E1B               	movwf	__flash_write_to_buffer@command,c
 42459  009050                     l1815:
 42460                           
 42461                           ;flash.c: 248: command[1] = 0x00;
 42462  009050  0E00               	movlw	0
 42463  009052  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 42464                           
 42465                           ;flash.c: 249: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 42466  009054  5015               	movf	__flash_write_to_buffer@start+1,w,c
 42467  009056  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 42468                           
 42469                           ;flash.c: 250: command[3] = ((unsigned char)((start)&0xFF));
 42470  009058  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 42471                           
 42472                           ;flash.c: 253: spi_tx_tx(command, 4, data, data_length);
 42473  00905C  0E1B               	movlw	low __flash_write_to_buffer@command
 42474  00905E  6E01               	movwf	spi_tx_tx@command,c
 42475  009060  0E00               	movlw	high __flash_write_to_buffer@command
 42476  009062  6E02               	movwf	spi_tx_tx@command+1,c
 42477  009064  0E00               	movlw	0
 42478  009066  6E04               	movwf	spi_tx_tx@command_length+1,c
 42479  009068  0E04               	movlw	4
 42480  00906A  6E03               	movwf	spi_tx_tx@command_length,c
 42481  00906C  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 42482  009070  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 42483  009074  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 42484  009078  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 42485  00907C  EC14  F040         	call	_spi_tx_tx	;wreg free
 42486  009080  0012               	return		;funcret
 42487  009082                     __end_of__flash_write_to_buffer:
 42488                           	opt stack 0
 42489                           tosu	equ	0xFFF
 42490                           tosh	equ	0xFFE
 42491                           tosl	equ	0xFFD
 42492                           pclath	equ	0xFFA
 42493                           tblptru	equ	0xFF8
 42494                           tblptrh	equ	0xFF7
 42495                           tblptrl	equ	0xFF6
 42496                           tablat	equ	0xFF5
 42497                           prodh	equ	0xFF4
 42498                           prodl	equ	0xFF3
 42499                           intcon	equ	0xFF2
 42500                           intcon2	equ	0xFF1
 42501                           intcon3	equ	0xFF0
 42502                           indf0	equ	0xFEF
 42503                           postinc0	equ	0xFEE
 42504                           fsr0h	equ	0xFEA
 42505                           fsr0l	equ	0xFE9
 42506                           wreg	equ	0xFE8
 42507                           indf1	equ	0xFE7
 42508                           postdec1	equ	0xFE5
 42509                           plusw1	equ	0xFE3
 42510                           fsr1h	equ	0xFE2
 42511                           fsr1l	equ	0xFE1
 42512                           indf2	equ	0xFDF
 42513                           postinc2	equ	0xFDE
 42514                           postdec2	equ	0xFDD
 42515                           plusw2	equ	0xFDB
 42516                           fsr2h	equ	0xFDA
 42517                           fsr2l	equ	0xFD9
 42518                           status	equ	0xFD8
 42519                           
 42520 ;; *************** function _spi_tx_tx *****************
 42521 ;; Defined at:
 42522 ;;		line 386 in file "spi.c"
 42523 ;; Parameters:    Size  Location     Type
 42524 ;;  command         2    0[COMRAM] PTR unsigned char 
 42525 ;;		 -> _flash_write_to_buffer@command(4), 
 42526 ;;  command_leng    2    2[COMRAM] unsigned int 
 42527 ;;  data            2    4[COMRAM] PTR unsigned char 
 42528 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 42529 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 42530 ;;  data_length     2    6[COMRAM] unsigned int 
 42531 ;; Auto vars:     Size  Location     Type
 42532 ;;		None
 42533 ;; Return value:  Size  Location     Type
 42534 ;;                  1    wreg      void 
 42535 ;; Registers used:
 42536 ;;		wreg, status,2, status,0
 42537 ;; Tracked objects:
 42538 ;;		On entry : 0/0
 42539 ;;		On exit  : 0/0
 42540 ;;		Unchanged: 0/0
 42541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42542 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42544 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42545 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42546 ;;Total ram usage:       12 bytes
 42547 ;; Hardware stack levels used:    1
 42548 ;; This function calls:
 42549 ;;		Nothing
 42550 ;; This function is called by:
 42551 ;;		__flash_write_to_buffer
 42552 ;; This function uses a non-reentrant model
 42553 ;;
 42554                           
 42555                           	psect	text209
 42556  008028                     __ptext209:
 42557                           	opt stack 0
 42558  008028                     _spi_tx_tx:
 42559                           	opt stack 25
 42560                           
 42561                           ;spi.c: 389: DMACON1bits.SSCON1 = 0;
 42562                           
 42563                           ;incstack = 0
 42564  008028  9E88               	bcf	3976,7,c	;volatile
 42565                           
 42566                           ;spi.c: 390: DMACON1bits.SSCON0 = 0;
 42567  00802A  9C88               	bcf	3976,6,c	;volatile
 42568                           
 42569                           ;spi.c: 392: DMACON1bits.TXINC = 1;
 42570  00802C  8A88               	bsf	3976,5,c	;volatile
 42571                           
 42572                           ;spi.c: 394: DMACON1bits.RXINC = 0;
 42573  00802E  9888               	bcf	3976,4,c	;volatile
 42574                           
 42575                           ;spi.c: 396: DMACON1bits.DUPLEX1 = 0;
 42576  008030  9688               	bcf	3976,3,c	;volatile
 42577                           
 42578                           ;spi.c: 397: DMACON1bits.DUPLEX0 = 1;
 42579  008032  8488               	bsf	3976,2,c	;volatile
 42580                           
 42581                           ;spi.c: 399: DMACON1bits.DLYINTEN = 0;
 42582  008034  9288               	bcf	3976,1,c	;volatile
 42583                           
 42584                           ;spi.c: 401: DMACON2bits.DLYCYC = 0b0000;
 42585  008036  9886               	bcf	3974,4,c	;volatile
 42586  008038  9A86               	bcf	3974,5,c	;volatile
 42587  00803A  9C86               	bcf	3974,6,c	;volatile
 42588  00803C  9E86               	bcf	3974,7,c	;volatile
 42589                           
 42590                           ;spi.c: 403: DMACON2bits.INTLVL = 0b0000;
 42591  00803E  9086               	bcf	3974,0,c	;volatile
 42592  008040  9286               	bcf	3974,1,c	;volatile
 42593  008042  9486               	bcf	3974,2,c	;volatile
 42594  008044  9686               	bcf	3974,3,c	;volatile
 42595                           
 42596                           ;spi.c: 406: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 42597  008046  5002               	movf	spi_tx_tx@command+1,w,c
 42598  008048  6E6A               	movwf	3946,c	;volatile
 42599                           
 42600                           ;spi.c: 407: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 42601  00804A  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 42602                           
 42603                           ;spi.c: 410: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 42604  00804E  0EFF               	movlw	255
 42605  008050  6E09               	movwf	??_spi_tx_tx& (0+255),c
 42606  008052  0EFF               	movlw	255
 42607  008054  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 42608  008056  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 42609  00805A  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 42610  00805E  5009               	movf	??_spi_tx_tx,w,c
 42611  008060  260B               	addwf	??_spi_tx_tx+2,f,c
 42612  008062  500A               	movf	??_spi_tx_tx+1,w,c
 42613  008064  220C               	addwfc	??_spi_tx_tx+3,f,c
 42614  008066  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 42615  00806A  6A0C               	clrf	??_spi_tx_tx+3,c
 42616  00806C  500B               	movf	??_spi_tx_tx+2,w,c
 42617  00806E  6E66               	movwf	3942,c	;volatile
 42618                           
 42619                           ;spi.c: 411: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 42620  008070  0403               	decf	spi_tx_tx@command_length,w,c
 42621  008072  6E67               	movwf	3943,c	;volatile
 42622                           
 42623                           ;spi.c: 414: LATDbits.LD7 = 0;
 42624  008074  9E8C               	bcf	3980,7,c	;volatile
 42625                           
 42626                           ;spi.c: 417: DMACON1bits.DMAEN = 1;
 42627  008076  8088               	bsf	3976,0,c	;volatile
 42628  008078  B088               	btfsc	3976,0,c	;volatile
 42629  00807A  D7FE               	goto	l3071
 42630                           
 42631                           ;spi.c: 421: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 42632  00807C  5006               	movf	spi_tx_tx@data+1,w,c
 42633  00807E  6E6A               	movwf	3946,c	;volatile
 42634                           
 42635                           ;spi.c: 422: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 42636  008080  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 42637                           
 42638                           ;spi.c: 425: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 42639  008084  0EFF               	movlw	255
 42640  008086  6E09               	movwf	??_spi_tx_tx& (0+255),c
 42641  008088  0EFF               	movlw	255
 42642  00808A  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 42643  00808C  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 42644  008090  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 42645  008094  5009               	movf	??_spi_tx_tx,w,c
 42646  008096  260B               	addwf	??_spi_tx_tx+2,f,c
 42647  008098  500A               	movf	??_spi_tx_tx+1,w,c
 42648  00809A  220C               	addwfc	??_spi_tx_tx+3,f,c
 42649  00809C  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 42650  0080A0  6A0C               	clrf	??_spi_tx_tx+3,c
 42651  0080A2  500B               	movf	??_spi_tx_tx+2,w,c
 42652  0080A4  6E66               	movwf	3942,c	;volatile
 42653                           
 42654                           ;spi.c: 426: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 42655  0080A6  0407               	decf	spi_tx_tx@data_length,w,c
 42656  0080A8  6E67               	movwf	3943,c	;volatile
 42657                           
 42658                           ;spi.c: 429: DMACON1bits.DMAEN = 1;
 42659  0080AA  8088               	bsf	3976,0,c	;volatile
 42660  0080AC  B088               	btfsc	3976,0,c	;volatile
 42661  0080AE  D7FE               	goto	l3074
 42662                           
 42663                           ;spi.c: 433: LATDbits.LD7 = 1;
 42664  0080B0  8E8C               	bsf	3980,7,c	;volatile
 42665  0080B2  0012               	return		;funcret
 42666  0080B4                     __end_of_spi_tx_tx:
 42667                           	opt stack 0
 42668                           tosu	equ	0xFFF
 42669                           tosh	equ	0xFFE
 42670                           tosl	equ	0xFFD
 42671                           pclath	equ	0xFFA
 42672                           tblptru	equ	0xFF8
 42673                           tblptrh	equ	0xFF7
 42674                           tblptrl	equ	0xFF6
 42675                           tablat	equ	0xFF5
 42676                           prodh	equ	0xFF4
 42677                           prodl	equ	0xFF3
 42678                           intcon	equ	0xFF2
 42679                           intcon2	equ	0xFF1
 42680                           intcon3	equ	0xFF0
 42681                           indf0	equ	0xFEF
 42682                           postinc0	equ	0xFEE
 42683                           fsr0h	equ	0xFEA
 42684                           fsr0l	equ	0xFE9
 42685                           wreg	equ	0xFE8
 42686                           indf1	equ	0xFE7
 42687                           postdec1	equ	0xFE5
 42688                           plusw1	equ	0xFE3
 42689                           fsr1h	equ	0xFE2
 42690                           fsr1l	equ	0xFE1
 42691                           indf2	equ	0xFDF
 42692                           postinc2	equ	0xFDE
 42693                           postdec2	equ	0xFDD
 42694                           plusw2	equ	0xFDB
 42695                           fsr2h	equ	0xFDA
 42696                           fsr2l	equ	0xFD9
 42697                           status	equ	0xFD8
 42698                           
 42699 ;; *************** function __flash_write_page_from_buffer *****************
 42700 ;; Defined at:
 42701 ;;		line 257 in file "flash.c"
 42702 ;; Parameters:    Size  Location     Type
 42703 ;;  page            2   19[COMRAM] unsigned int 
 42704 ;;  buffer          1   21[COMRAM] enum E6904
 42705 ;; Auto vars:     Size  Location     Type
 42706 ;;  command         4   25[COMRAM] unsigned char [4]
 42707 ;; Return value:  Size  Location     Type
 42708 ;;                  1    wreg      void 
 42709 ;; Registers used:
 42710 ;;		wreg, status,2, status,0, cstack
 42711 ;; Tracked objects:
 42712 ;;		On entry : 0/0
 42713 ;;		On exit  : 0/0
 42714 ;;		Unchanged: 0/0
 42715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42716 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42717 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42718 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42719 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42720 ;;Total ram usage:       10 bytes
 42721 ;; Hardware stack levels used:    1
 42722 ;; Hardware stack levels required when called:    3
 42723 ;; This function calls:
 42724 ;;		__flash_is_busy
 42725 ;;		_spi_tx
 42726 ;; This function is called by:
 42727 ;;		_flash_sector_write
 42728 ;;		_flash_partial_write
 42729 ;;		_flash_write_page_from_buffer
 42730 ;; This function uses a non-reentrant model
 42731 ;;
 42732                           
 42733                           	psect	text210
 42734  008B36                     __ptext210:
 42735                           	opt stack 0
 42736  008B36                     __flash_write_page_from_buffer:
 42737                           	opt stack 23
 42738                           
 42739                           ;flash.c: 259: uint8_t command[4];;flash.c: 262: while(_flash_is_busy());
 42740                           
 42741                           ;incstack = 0
 42742  008B36  ECF1  F04C         	call	__flash_is_busy	;wreg free
 42743  008B3A  0900               	iorlw	0
 42744  008B3C  A4D8               	btfss	status,2,c
 42745  008B3E  D7FB               	goto	__flash_write_page_from_buffer
 42746                           
 42747                           ;flash.c: 265: if(buffer==FLASH_BUFFER_1)
 42748  008B40  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 42749  008B42  A4D8               	btfss	status,2,c
 42750  008B44  D002               	goto	l1822
 42751                           
 42752                           ;flash.c: 266: command[0] = 0x83;
 42753  008B46  0E83               	movlw	131
 42754  008B48  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 42755  008B4A                     l1822:
 42756                           
 42757                           ;flash.c: 267: if(buffer==FLASH_BUFFER_2)
 42758  008B4A  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 42759  008B4C  A4D8               	btfss	status,2,c
 42760  008B4E  D002               	goto	l1823
 42761                           
 42762                           ;flash.c: 268: command[0] = 0x86;
 42763  008B50  0E86               	movlw	134
 42764  008B52  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 42765  008B54                     l1823:
 42766                           
 42767                           ;flash.c: 270: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 42768  008B54  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 42769  008B58  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 42770  008B5C  0E07               	movlw	7
 42771  008B5E  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 42772  008B60                     u7555:
 42773  008B60  90D8               	bcf	status,0,c
 42774  008B62  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 42775  008B64  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 42776  008B66  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 42777  008B68  D7FB               	goto	u7555
 42778  008B6A  5017               	movf	??__flash_write_page_from_buffer,w,c
 42779  008B6C  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 42780                           
 42781                           ;flash.c: 271: command[2] = ((unsigned char)((page<<1)&0xFF));
 42782  008B6E  5014               	movf	__flash_write_page_from_buffer@page,w,c
 42783  008B70  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 42784  008B72  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 42785                           
 42786                           ;flash.c: 272: command[3] = 0x00;
 42787  008B74  0E00               	movlw	0
 42788  008B76  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 42789                           
 42790                           ;flash.c: 275: spi_tx(command, 4);
 42791  008B78  0E1A               	movlw	low __flash_write_page_from_buffer@command
 42792  008B7A  6E01               	movwf	spi_tx@data,c
 42793  008B7C  0E00               	movlw	high __flash_write_page_from_buffer@command
 42794  008B7E  6E02               	movwf	spi_tx@data+1,c
 42795  008B80  0E00               	movlw	0
 42796  008B82  6E04               	movwf	spi_tx@length+1,c
 42797  008B84  0E04               	movlw	4
 42798  008B86  6E03               	movwf	spi_tx@length,c
 42799  008B88  ECF3  F045         	call	_spi_tx	;wreg free
 42800  008B8C  0012               	return		;funcret
 42801  008B8E                     __end_of__flash_write_page_from_buffer:
 42802                           	opt stack 0
 42803                           tosu	equ	0xFFF
 42804                           tosh	equ	0xFFE
 42805                           tosl	equ	0xFFD
 42806                           pclath	equ	0xFFA
 42807                           tblptru	equ	0xFF8
 42808                           tblptrh	equ	0xFF7
 42809                           tblptrl	equ	0xFF6
 42810                           tablat	equ	0xFF5
 42811                           prodh	equ	0xFF4
 42812                           prodl	equ	0xFF3
 42813                           intcon	equ	0xFF2
 42814                           intcon2	equ	0xFF1
 42815                           intcon3	equ	0xFF0
 42816                           indf0	equ	0xFEF
 42817                           postinc0	equ	0xFEE
 42818                           fsr0h	equ	0xFEA
 42819                           fsr0l	equ	0xFE9
 42820                           wreg	equ	0xFE8
 42821                           indf1	equ	0xFE7
 42822                           postdec1	equ	0xFE5
 42823                           plusw1	equ	0xFE3
 42824                           fsr1h	equ	0xFE2
 42825                           fsr1l	equ	0xFE1
 42826                           indf2	equ	0xFDF
 42827                           postinc2	equ	0xFDE
 42828                           postdec2	equ	0xFDD
 42829                           plusw2	equ	0xFDB
 42830                           fsr2h	equ	0xFDA
 42831                           fsr2l	equ	0xFD9
 42832                           status	equ	0xFD8
 42833                           
 42834 ;; *************** function __flash_copy_page_to_buffer *****************
 42835 ;; Defined at:
 42836 ;;		line 153 in file "flash.c"
 42837 ;; Parameters:    Size  Location     Type
 42838 ;;  page            2   19[COMRAM] unsigned int 
 42839 ;;  buffer          1   21[COMRAM] enum E6904
 42840 ;; Auto vars:     Size  Location     Type
 42841 ;;  command         4   25[COMRAM] unsigned char [4]
 42842 ;; Return value:  Size  Location     Type
 42843 ;;                  1    wreg      void 
 42844 ;; Registers used:
 42845 ;;		wreg, status,2, status,0, cstack
 42846 ;; Tracked objects:
 42847 ;;		On entry : 0/0
 42848 ;;		On exit  : 0/0
 42849 ;;		Unchanged: 0/0
 42850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42851 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42852 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42853 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42854 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42855 ;;Total ram usage:       10 bytes
 42856 ;; Hardware stack levels used:    1
 42857 ;; Hardware stack levels required when called:    3
 42858 ;; This function calls:
 42859 ;;		__flash_is_busy
 42860 ;;		_spi_tx
 42861 ;; This function is called by:
 42862 ;;		_flash_partial_write
 42863 ;;		_flash_copy_page_to_buffer
 42864 ;; This function uses a non-reentrant model
 42865 ;;
 42866                           
 42867                           	psect	text211
 42868  008B8E                     __ptext211:
 42869                           	opt stack 0
 42870  008B8E                     __flash_copy_page_to_buffer:
 42871                           	opt stack 22
 42872                           
 42873                           ;flash.c: 155: uint8_t command[4];;flash.c: 158: while(_flash_is_busy());
 42874                           
 42875                           ;incstack = 0
 42876  008B8E  ECF1  F04C         	call	__flash_is_busy	;wreg free
 42877  008B92  0900               	iorlw	0
 42878  008B94  A4D8               	btfss	status,2,c
 42879  008B96  D7FB               	goto	__flash_copy_page_to_buffer
 42880                           
 42881                           ;flash.c: 161: if(buffer==FLASH_BUFFER_1)
 42882  008B98  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 42883  008B9A  A4D8               	btfss	status,2,c
 42884  008B9C  D002               	goto	l1787
 42885                           
 42886                           ;flash.c: 162: command[0] = 0x53;
 42887  008B9E  0E53               	movlw	83
 42888  008BA0  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 42889  008BA2                     l1787:
 42890                           
 42891                           ;flash.c: 163: if(buffer==FLASH_BUFFER_2)
 42892  008BA2  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 42893  008BA4  A4D8               	btfss	status,2,c
 42894  008BA6  D002               	goto	l1788
 42895                           
 42896                           ;flash.c: 164: command[0] = 0x55;
 42897  008BA8  0E55               	movlw	85
 42898  008BAA  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 42899  008BAC                     l1788:
 42900                           
 42901                           ;flash.c: 166: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 42902  008BAC  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 42903  008BB0  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 42904  008BB4  0E07               	movlw	7
 42905  008BB6  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 42906  008BB8                     u7425:
 42907  008BB8  90D8               	bcf	status,0,c
 42908  008BBA  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 42909  008BBC  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 42910  008BBE  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 42911  008BC0  D7FB               	goto	u7425
 42912  008BC2  5017               	movf	??__flash_copy_page_to_buffer,w,c
 42913  008BC4  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 42914                           
 42915                           ;flash.c: 167: command[2] = ((unsigned char)((page<<1)&0xFF));
 42916  008BC6  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 42917  008BC8  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 42918  008BCA  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 42919                           
 42920                           ;flash.c: 168: command[3] = 0x00;
 42921  008BCC  0E00               	movlw	0
 42922  008BCE  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 42923                           
 42924                           ;flash.c: 171: spi_tx(command, 4);
 42925  008BD0  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 42926  008BD2  6E01               	movwf	spi_tx@data,c
 42927  008BD4  0E00               	movlw	high __flash_copy_page_to_buffer@command
 42928  008BD6  6E02               	movwf	spi_tx@data+1,c
 42929  008BD8  0E00               	movlw	0
 42930  008BDA  6E04               	movwf	spi_tx@length+1,c
 42931  008BDC  0E04               	movlw	4
 42932  008BDE  6E03               	movwf	spi_tx@length,c
 42933  008BE0  ECF3  F045         	call	_spi_tx	;wreg free
 42934  008BE4  0012               	return		;funcret
 42935  008BE6                     __end_of__flash_copy_page_to_buffer:
 42936                           	opt stack 0
 42937                           tosu	equ	0xFFF
 42938                           tosh	equ	0xFFE
 42939                           tosl	equ	0xFFD
 42940                           pclath	equ	0xFFA
 42941                           tblptru	equ	0xFF8
 42942                           tblptrh	equ	0xFF7
 42943                           tblptrl	equ	0xFF6
 42944                           tablat	equ	0xFF5
 42945                           prodh	equ	0xFF4
 42946                           prodl	equ	0xFF3
 42947                           intcon	equ	0xFF2
 42948                           intcon2	equ	0xFF1
 42949                           intcon3	equ	0xFF0
 42950                           indf0	equ	0xFEF
 42951                           postinc0	equ	0xFEE
 42952                           fsr0h	equ	0xFEA
 42953                           fsr0l	equ	0xFE9
 42954                           wreg	equ	0xFE8
 42955                           indf1	equ	0xFE7
 42956                           postdec1	equ	0xFE5
 42957                           plusw1	equ	0xFE3
 42958                           fsr1h	equ	0xFE2
 42959                           fsr1l	equ	0xFE1
 42960                           indf2	equ	0xFDF
 42961                           postinc2	equ	0xFDE
 42962                           postdec2	equ	0xFDD
 42963                           plusw2	equ	0xFDB
 42964                           fsr2h	equ	0xFDA
 42965                           fsr2l	equ	0xFD9
 42966                           status	equ	0xFD8
 42967                           
 42968 ;; *************** function __flash_compare_page_to_buffer *****************
 42969 ;; Defined at:
 42970 ;;		line 175 in file "flash.c"
 42971 ;; Parameters:    Size  Location     Type
 42972 ;;  page            2   19[COMRAM] unsigned int 
 42973 ;;  buffer          1   21[COMRAM] enum E6904
 42974 ;; Auto vars:     Size  Location     Type
 42975 ;;  command         4   27[COMRAM] unsigned char [4]
 42976 ;;  status          2   25[COMRAM] unsigned int 
 42977 ;; Return value:  Size  Location     Type
 42978 ;;                  1    wreg      enum E6908
 42979 ;; Registers used:
 42980 ;;		wreg, status,2, status,0, cstack
 42981 ;; Tracked objects:
 42982 ;;		On entry : 0/0
 42983 ;;		On exit  : 0/0
 42984 ;;		Unchanged: 0/0
 42985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42986 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42987 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42988 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42989 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42990 ;;Total ram usage:       12 bytes
 42991 ;; Hardware stack levels used:    1
 42992 ;; Hardware stack levels required when called:    3
 42993 ;; This function calls:
 42994 ;;		__flash_get_status
 42995 ;;		__flash_is_busy
 42996 ;;		_spi_tx
 42997 ;; This function is called by:
 42998 ;;		_flash_sector_write
 42999 ;;		_flash_partial_write
 43000 ;; This function uses a non-reentrant model
 43001 ;;
 43002                           
 43003                           	psect	text212
 43004  0082B2                     __ptext212:
 43005                           	opt stack 0
 43006  0082B2                     __flash_compare_page_to_buffer:
 43007                           	opt stack 23
 43008                           
 43009                           ;flash.c: 177: uint8_t command[4];;flash.c: 178: uint16_t status;;flash.c: 181: while(_f
      +                          lash_is_busy());
 43010                           
 43011                           ;incstack = 0
 43012  0082B2  ECF1  F04C         	call	__flash_is_busy	;wreg free
 43013  0082B6  0900               	iorlw	0
 43014  0082B8  A4D8               	btfss	status,2,c
 43015  0082BA  D7FB               	goto	__flash_compare_page_to_buffer
 43016                           
 43017                           ;flash.c: 184: if(buffer==FLASH_BUFFER_1)
 43018  0082BC  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 43019  0082BE  A4D8               	btfss	status,2,c
 43020  0082C0  D002               	goto	l1795
 43021                           
 43022                           ;flash.c: 185: command[0] = 0x60;
 43023  0082C2  0E60               	movlw	96
 43024  0082C4  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 43025  0082C6                     l1795:
 43026                           
 43027                           ;flash.c: 186: if(buffer==FLASH_BUFFER_2)
 43028  0082C6  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 43029  0082C8  A4D8               	btfss	status,2,c
 43030  0082CA  D002               	goto	l1796
 43031                           
 43032                           ;flash.c: 187: command[0] = 0x60;
 43033  0082CC  0E60               	movlw	96
 43034  0082CE  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 43035  0082D0                     l1796:
 43036                           
 43037                           ;flash.c: 189: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 43038  0082D0  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 43039  0082D4  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 43040  0082D8  0E07               	movlw	7
 43041  0082DA  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 43042  0082DC                     u7465:
 43043  0082DC  90D8               	bcf	status,0,c
 43044  0082DE  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 43045  0082E0  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 43046  0082E2  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 43047  0082E4  D7FB               	goto	u7465
 43048  0082E6  5017               	movf	??__flash_compare_page_to_buffer,w,c
 43049  0082E8  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 43050                           
 43051                           ;flash.c: 190: command[2] = ((unsigned char)((page<<1)&0xFF));
 43052  0082EA  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 43053  0082EC  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 43054  0082EE  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 43055                           
 43056                           ;flash.c: 191: command[3] = 0x00;
 43057  0082F0  0E00               	movlw	0
 43058  0082F2  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 43059                           
 43060                           ;flash.c: 194: spi_tx(command, 4);
 43061  0082F4  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 43062  0082F6  6E01               	movwf	spi_tx@data,c
 43063  0082F8  0E00               	movlw	high __flash_compare_page_to_buffer@command
 43064  0082FA  6E02               	movwf	spi_tx@data+1,c
 43065  0082FC  0E00               	movlw	0
 43066  0082FE  6E04               	movwf	spi_tx@length+1,c
 43067  008300  0E04               	movlw	4
 43068  008302  6E03               	movwf	spi_tx@length,c
 43069  008304  ECF3  F045         	call	_spi_tx	;wreg free
 43070  008308  ECF1  F04C         	call	__flash_is_busy	;wreg free
 43071  00830C  0900               	iorlw	0
 43072  00830E  A4D8               	btfss	status,2,c
 43073  008310  D7FB               	goto	l1798
 43074                           
 43075                           ;flash.c: 200: status = _flash_get_status();
 43076  008312  EC19  F04B         	call	__flash_get_status	;wreg free
 43077  008316  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 43078  00831A  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 43079                           
 43080                           ;flash.c: 203: if(status & 0b0000000001000000)
 43081  00831E  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 43082  008320  D002               	goto	l1800
 43083                           
 43084                           ;flash.c: 204: {;flash.c: 206: return DATA_DOES_NOT_MATCH;
 43085  008322  0E01               	movlw	1
 43086                           
 43087                           ;flash.c: 207: }
 43088  008324  0012               	return	
 43089  008326                     l1800:
 43090                           
 43091                           ;flash.c: 208: else;flash.c: 209: {;flash.c: 211: return DATA_DOES_MATCH;
 43092  008326  0E00               	movlw	0
 43093  008328  0012               	return	
 43094  00832A                     __end_of__flash_compare_page_to_buffer:
 43095                           	opt stack 0
 43096                           tosu	equ	0xFFF
 43097                           tosh	equ	0xFFE
 43098                           tosl	equ	0xFFD
 43099                           pclath	equ	0xFFA
 43100                           tblptru	equ	0xFF8
 43101                           tblptrh	equ	0xFF7
 43102                           tblptrl	equ	0xFF6
 43103                           tablat	equ	0xFF5
 43104                           prodh	equ	0xFF4
 43105                           prodl	equ	0xFF3
 43106                           intcon	equ	0xFF2
 43107                           intcon2	equ	0xFF1
 43108                           intcon3	equ	0xFF0
 43109                           indf0	equ	0xFEF
 43110                           postinc0	equ	0xFEE
 43111                           fsr0h	equ	0xFEA
 43112                           fsr0l	equ	0xFE9
 43113                           wreg	equ	0xFE8
 43114                           indf1	equ	0xFE7
 43115                           postdec1	equ	0xFE5
 43116                           plusw1	equ	0xFE3
 43117                           fsr1h	equ	0xFE2
 43118                           fsr1l	equ	0xFE1
 43119                           indf2	equ	0xFDF
 43120                           postinc2	equ	0xFDE
 43121                           postdec2	equ	0xFDD
 43122                           plusw2	equ	0xFDB
 43123                           fsr2h	equ	0xFDA
 43124                           fsr2l	equ	0xFD9
 43125                           status	equ	0xFD8
 43126                           
 43127 ;; *************** function _fat_get_file_information *****************
 43128 ;; Defined at:
 43129 ;;		line 1391 in file "fat16.c"
 43130 ;; Parameters:    Size  Location     Type
 43131 ;;  file_number     1    wreg     unsigned char 
 43132 ;;  data            2   47[COMRAM] PTR struct .
 43133 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@roo
      +t(32), 
 43134 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), RAM(3759), 
 43135 ;; Auto vars:     Size  Location     Type
 43136 ;;  file_number     1   54[COMRAM] unsigned char 
 43137 ;;  offset          2   52[COMRAM] unsigned int 
 43138 ;;  root_sector     2   50[COMRAM] unsigned int 
 43139 ;; Return value:  Size  Location     Type
 43140 ;;                  1    wreg      unsigned char 
 43141 ;; Registers used:
 43142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43143 ;; Tracked objects:
 43144 ;;		On entry : 0/0
 43145 ;;		On exit  : 0/0
 43146 ;;		Unchanged: 0/0
 43147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43149 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43151 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43152 ;;Total ram usage:        8 bytes
 43153 ;; Hardware stack levels used:    1
 43154 ;; Hardware stack levels required when called:    5
 43155 ;; This function calls:
 43156 ;;		__offset_from_file_number
 43157 ;;		__sector_from_file_number
 43158 ;;		_flash_partial_read
 43159 ;; This function is called by:
 43160 ;;		_fat_rename_file
 43161 ;;		_fat_read_from_file
 43162 ;;		_fat_resize_file
 43163 ;;		_fat_modify_file
 43164 ;;		__bootloader_verify_file
 43165 ;;		__bootloader_program
 43166 ;;		__fill_buffer_get_file_details
 43167 ;; This function uses a non-reentrant model
 43168 ;;
 43169                           
 43170                           	psect	text213
 43171  008414                     __ptext213:
 43172                           	opt stack 0
 43173  008414                     _fat_get_file_information:
 43174                           	opt stack 23
 43175                           
 43176                           ;incstack = 0
 43177                           ;fat_get_file_information@file_number stored from wreg
 43178  008414  6E37               	movwf	fat_get_file_information@file_number,c
 43179                           
 43180                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
 43181  008416  0E3F               	movlw	63
 43182  008418  6437               	cpfsgt	fat_get_file_information@file_number,c
 43183  00841A  D002               	goto	l2325
 43184                           
 43185                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 43186  00841C  0E01               	movlw	1
 43187  00841E  0012               	return	
 43188  008420                     l2325:
 43189                           
 43190                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 43191  008420  5037               	movf	fat_get_file_information@file_number,w,c
 43192  008422  ECE7  F04B         	call	__sector_from_file_number
 43193  008426  C001  F033         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 43194  00842A  C002  F034         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 43195                           
 43196                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 43197  00842E  5037               	movf	fat_get_file_information@file_number,w,c
 43198  008430  EC73  F04C         	call	__offset_from_file_number
 43199  008434  C001  F035         	movff	?__offset_from_file_number,fat_get_file_information@offset
 43200  008438  C002  F036         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 43201                           
 43202                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 43203  00843C  C033  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 43204  008440  C034  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 43205  008444  C035  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 43206  008448  C036  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 43207  00844C  0E00               	movlw	0
 43208  00844E  6E2D               	movwf	flash_partial_read@length+1,c
 43209  008450  0E20               	movlw	32
 43210  008452  6E2C               	movwf	flash_partial_read@length,c
 43211  008454  C030  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 43212  008458  C031  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 43213  00845C  EC00  F04B         	call	_flash_partial_read	;wreg free
 43214                           
 43215                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 43216  008460  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 43217  008464  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 43218  008468  50DF               	movf	indf2,w,c
 43219  00846A  B4D8               	btfsc	status,2,c
 43220  00846C  D008               	goto	u8810
 43221  00846E  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 43222  008472  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 43223  008476  0EE5               	movlw	229
 43224  008478  18DE               	xorwf	postinc2,w,c
 43225  00847A  A4D8               	btfss	status,2,c
 43226  00847C  D002               	goto	l2327
 43227  00847E                     u8810:
 43228                           
 43229                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 43230  00847E  0E02               	movlw	2
 43231  008480  0012               	return	
 43232  008482                     l2327:
 43233                           
 43234                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 43235  008482  0E00               	movlw	0
 43236  008484  0012               	return	
 43237  008486                     __end_of_fat_get_file_information:
 43238                           	opt stack 0
 43239                           tosu	equ	0xFFF
 43240                           tosh	equ	0xFFE
 43241                           tosl	equ	0xFFD
 43242                           pclath	equ	0xFFA
 43243                           tblptru	equ	0xFF8
 43244                           tblptrh	equ	0xFF7
 43245                           tblptrl	equ	0xFF6
 43246                           tablat	equ	0xFF5
 43247                           prodh	equ	0xFF4
 43248                           prodl	equ	0xFF3
 43249                           intcon	equ	0xFF2
 43250                           intcon2	equ	0xFF1
 43251                           intcon3	equ	0xFF0
 43252                           indf0	equ	0xFEF
 43253                           postinc0	equ	0xFEE
 43254                           fsr0h	equ	0xFEA
 43255                           fsr0l	equ	0xFE9
 43256                           wreg	equ	0xFE8
 43257                           indf1	equ	0xFE7
 43258                           postdec1	equ	0xFE5
 43259                           plusw1	equ	0xFE3
 43260                           fsr1h	equ	0xFE2
 43261                           fsr1l	equ	0xFE1
 43262                           indf2	equ	0xFDF
 43263                           postinc2	equ	0xFDE
 43264                           postdec2	equ	0xFDD
 43265                           plusw2	equ	0xFDB
 43266                           fsr2h	equ	0xFDA
 43267                           fsr2l	equ	0xFD9
 43268                           status	equ	0xFD8
 43269                           
 43270 ;; *************** function __find_nth_cluster *****************
 43271 ;; Defined at:
 43272 ;;		line 182 in file "fat16.c"
 43273 ;; Parameters:    Size  Location     Type
 43274 ;;  cluster         2   55[COMRAM] unsigned int 
 43275 ;;  n               2   57[COMRAM] unsigned int 
 43276 ;; Auto vars:     Size  Location     Type
 43277 ;;  sector          2   63[COMRAM] unsigned int 
 43278 ;;  sector_in_bu    2   61[COMRAM] unsigned int 
 43279 ;;  offset          2   59[COMRAM] unsigned int 
 43280 ;; Return value:  Size  Location     Type
 43281 ;;                  2   55[COMRAM] unsigned int 
 43282 ;; Registers used:
 43283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43284 ;; Tracked objects:
 43285 ;;		On entry : 0/0
 43286 ;;		On exit  : 0/0
 43287 ;;		Unchanged: 0/0
 43288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43290 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43292 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43293 ;;Total ram usage:       10 bytes
 43294 ;; Hardware stack levels used:    1
 43295 ;; Hardware stack levels required when called:    6
 43296 ;; This function calls:
 43297 ;;		__fat_offset_from_cluster
 43298 ;;		__fat_sector_from_cluster
 43299 ;;		__read_fat
 43300 ;;		__read_value_from_offset
 43301 ;;		_flash_sector_read
 43302 ;; This function is called by:
 43303 ;;		_fat_read_from_file_fast
 43304 ;;		_fat_modify_file
 43305 ;;		_fat_copy_sector_to_buffer
 43306 ;; This function uses a non-reentrant model
 43307 ;;
 43308                           
 43309                           	psect	text214
 43310  007C14                     __ptext214:
 43311                           	opt stack 0
 43312  007C14                     __find_nth_cluster:
 43313                           	opt stack 21
 43314                           
 43315                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 43316                           
 43317                           ;incstack = 0
 43318  007C14  0E00               	movlw	0
 43319  007C16  6E3F               	movwf	__find_nth_cluster@sector_in_buffer+1,c
 43320  007C18  0E00               	movlw	0
 43321  007C1A  6E3E               	movwf	__find_nth_cluster@sector_in_buffer,c
 43322                           
 43323                           ;fat16.c: 189: if(n==1)
 43324  007C1C  043A               	decf	__find_nth_cluster@n,w,c
 43325  007C1E  103B               	iorwf	__find_nth_cluster@n+1,w,c
 43326  007C20  A4D8               	btfss	status,2,c
 43327  007C22  D03E               	goto	l2014
 43328                           
 43329                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 43330  007C24  C038  F030         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 43331  007C28  C039  F031         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 43332  007C2C  ECF6  F046         	call	__read_fat	;wreg free
 43333  007C30  C030  F038         	movff	?__read_fat,?__find_nth_cluster
 43334  007C34  C031  F039         	movff	?__read_fat+1,?__find_nth_cluster+1
 43335  007C38  0012               	return	
 43336  007C3A                     
 43337                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
 43338  007C3A  C038  F001         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 43339  007C3E  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 43340  007C42  EC9E  F04D         	call	__fat_sector_from_cluster	;wreg free
 43341  007C46  C001  F040         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 43342  007C4A  C002  F041         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 43343                           
 43344                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 43345  007C4E  C038  F001         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 43346  007C52  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 43347  007C56  ECAA  F04D         	call	__fat_offset_from_cluster	;wreg free
 43348  007C5A  C001  F03C         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 43349  007C5E  C002  F03D         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 43350                           
 43351                           ;fat16.c: 201: if(sector != sector_in_buffer)
 43352  007C62  503E               	movf	__find_nth_cluster@sector_in_buffer,w,c
 43353  007C64  1840               	xorwf	__find_nth_cluster@sector,w,c
 43354  007C66  E104               	bnz	u8480
 43355  007C68  503F               	movf	__find_nth_cluster@sector_in_buffer+1,w,c
 43356  007C6A  1841               	xorwf	__find_nth_cluster@sector+1,w,c
 43357  007C6C  B4D8               	btfsc	status,2,c
 43358  007C6E  D00A               	goto	l2016
 43359  007C70                     u8480:
 43360                           
 43361                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 43362  007C70  C040  F028         	movff	__find_nth_cluster@sector,flash_sector_read@page
 43363  007C74  C041  F029         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 43364  007C78  0EC0               	movlw	low _buffer
 43365  007C7A  6E2A               	movwf	flash_sector_read@data,c
 43366  007C7C  0E03               	movlw	high _buffer
 43367  007C7E  6E2B               	movwf	flash_sector_read@data+1,c
 43368  007C80  ECE7  F04A         	call	_flash_sector_read	;wreg free
 43369  007C84                     l2016:
 43370                           
 43371                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 43372  007C84  C03C  F001         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 43373  007C88  C03D  F002         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 43374  007C8C  0EC0               	movlw	low _buffer
 43375  007C8E  6E03               	movwf	__read_value_from_offset@buffer,c
 43376  007C90  0E03               	movlw	high _buffer
 43377  007C92  6E04               	movwf	__read_value_from_offset@buffer+1,c
 43378  007C94  ECD1  F048         	call	__read_value_from_offset	;wreg free
 43379  007C98  C001  F038         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 43380  007C9C  C002  F039         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 43381  007CA0                     l2014:
 43382  007CA0  503A               	movf	__find_nth_cluster@n,w,c
 43383  007CA2  103B               	iorwf	__find_nth_cluster@n+1,w,c
 43384  007CA4  A4D8               	btfss	status,2,c
 43385  007CA6  D7C9               	goto	l2015
 43386                           
 43387                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 43388  007CA8  C038  F038         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 43389  007CAC  C039  F039         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 43390  007CB0  0012               	return		;funcret
 43391  007CB2                     __end_of__find_nth_cluster:
 43392                           	opt stack 0
 43393                           tosu	equ	0xFFF
 43394                           tosh	equ	0xFFE
 43395                           tosl	equ	0xFFD
 43396                           pclath	equ	0xFFA
 43397                           tblptru	equ	0xFF8
 43398                           tblptrh	equ	0xFF7
 43399                           tblptrl	equ	0xFF6
 43400                           tablat	equ	0xFF5
 43401                           prodh	equ	0xFF4
 43402                           prodl	equ	0xFF3
 43403                           intcon	equ	0xFF2
 43404                           intcon2	equ	0xFF1
 43405                           intcon3	equ	0xFF0
 43406                           indf0	equ	0xFEF
 43407                           postinc0	equ	0xFEE
 43408                           fsr0h	equ	0xFEA
 43409                           fsr0l	equ	0xFE9
 43410                           wreg	equ	0xFE8
 43411                           indf1	equ	0xFE7
 43412                           postdec1	equ	0xFE5
 43413                           plusw1	equ	0xFE3
 43414                           fsr1h	equ	0xFE2
 43415                           fsr1l	equ	0xFE1
 43416                           indf2	equ	0xFDF
 43417                           postinc2	equ	0xFDE
 43418                           postdec2	equ	0xFDD
 43419                           plusw2	equ	0xFDB
 43420                           fsr2h	equ	0xFDA
 43421                           fsr2l	equ	0xFD9
 43422                           status	equ	0xFD8
 43423                           
 43424 ;; *************** function _flash_sector_read *****************
 43425 ;; Defined at:
 43426 ;;		line 442 in file "flash.c"
 43427 ;; Parameters:    Size  Location     Type
 43428 ;;  page            2   39[COMRAM] unsigned int 
 43429 ;;  data            2   41[COMRAM] PTR unsigned char 
 43430 ;;		 -> buffer(512), msd_buffer(512), 
 43431 ;; Auto vars:     Size  Location     Type
 43432 ;;		None
 43433 ;; Return value:  Size  Location     Type
 43434 ;;                  1    wreg      void 
 43435 ;; Registers used:
 43436 ;;		wreg, status,2, status,0, cstack
 43437 ;; Tracked objects:
 43438 ;;		On entry : 0/0
 43439 ;;		On exit  : 0/0
 43440 ;;		Unchanged: 0/0
 43441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43446 ;;Total ram usage:        4 bytes
 43447 ;; Hardware stack levels used:    1
 43448 ;; Hardware stack levels required when called:    4
 43449 ;; This function calls:
 43450 ;;		__flash_partial_read
 43451 ;;		_spi_set_configuration
 43452 ;; This function is called by:
 43453 ;;		_ExternalFlash_SectorRead
 43454 ;;		__get_available_cluster
 43455 ;;		__find_nth_cluster
 43456 ;;		__make_cluster_chain
 43457 ;;		_fat_find_file
 43458 ;;		_fat_get_format_status
 43459 ;; This function uses a non-reentrant model
 43460 ;;
 43461                           
 43462                           	psect	text215
 43463  0095CE                     __ptext215:
 43464                           	opt stack 0
 43465  0095CE                     _flash_sector_read:
 43466                           	opt stack 23
 43467                           
 43468                           ;flash.c: 445: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 43469                           
 43470                           ;incstack = 0
 43471  0095CE  0E00               	movlw	0
 43472  0095D0  ECAB  F02A         	call	_spi_set_configuration
 43473                           
 43474                           ;flash.c: 448: _flash_partial_read(page, 0, 512, data);
 43475  0095D4  C028  F014         	movff	flash_sector_read@page,__flash_partial_read@page
 43476  0095D8  C029  F015         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 43477  0095DC  0E00               	movlw	0
 43478  0095DE  6E17               	movwf	__flash_partial_read@start+1,c
 43479  0095E0  0E00               	movlw	0
 43480  0095E2  6E16               	movwf	__flash_partial_read@start,c
 43481  0095E4  0E02               	movlw	2
 43482  0095E6  6E19               	movwf	__flash_partial_read@length+1,c
 43483  0095E8  0E00               	movlw	0
 43484  0095EA  6E18               	movwf	__flash_partial_read@length,c
 43485  0095EC  C02A  F01A         	movff	flash_sector_read@data,__flash_partial_read@data
 43486  0095F0  C02B  F01B         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 43487  0095F4  EC95  F041         	call	__flash_partial_read	;wreg free
 43488                           
 43489                           ;flash.c: 451: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 43490  0095F8  0E01               	movlw	1
 43491  0095FA  ECAB  F02A         	call	_spi_set_configuration
 43492  0095FE  0012               	return		;funcret
 43493  009600                     __end_of_flash_sector_read:
 43494                           	opt stack 0
 43495                           tosu	equ	0xFFF
 43496                           tosh	equ	0xFFE
 43497                           tosl	equ	0xFFD
 43498                           pclath	equ	0xFFA
 43499                           tblptru	equ	0xFF8
 43500                           tblptrh	equ	0xFF7
 43501                           tblptrl	equ	0xFF6
 43502                           tablat	equ	0xFF5
 43503                           prodh	equ	0xFF4
 43504                           prodl	equ	0xFF3
 43505                           intcon	equ	0xFF2
 43506                           intcon2	equ	0xFF1
 43507                           intcon3	equ	0xFF0
 43508                           indf0	equ	0xFEF
 43509                           postinc0	equ	0xFEE
 43510                           fsr0h	equ	0xFEA
 43511                           fsr0l	equ	0xFE9
 43512                           wreg	equ	0xFE8
 43513                           indf1	equ	0xFE7
 43514                           postdec1	equ	0xFE5
 43515                           plusw1	equ	0xFE3
 43516                           fsr1h	equ	0xFE2
 43517                           fsr1l	equ	0xFE1
 43518                           indf2	equ	0xFDF
 43519                           postinc2	equ	0xFDE
 43520                           postdec2	equ	0xFDD
 43521                           plusw2	equ	0xFDB
 43522                           fsr2h	equ	0xFDA
 43523                           fsr2l	equ	0xFD9
 43524                           status	equ	0xFD8
 43525                           
 43526 ;; *************** function __read_value_from_offset *****************
 43527 ;; Defined at:
 43528 ;;		line 114 in file "fat16.c"
 43529 ;; Parameters:    Size  Location     Type
 43530 ;;  offset          2    0[COMRAM] unsigned int 
 43531 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 43532 ;;		 -> buffer(512), 
 43533 ;; Auto vars:     Size  Location     Type
 43534 ;;  value           2    7[COMRAM] unsigned int 
 43535 ;; Return value:  Size  Location     Type
 43536 ;;                  2    0[COMRAM] unsigned int 
 43537 ;; Registers used:
 43538 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43539 ;; Tracked objects:
 43540 ;;		On entry : 0/0
 43541 ;;		On exit  : 0/0
 43542 ;;		Unchanged: 0/0
 43543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43546 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43547 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43548 ;;Total ram usage:        9 bytes
 43549 ;; Hardware stack levels used:    1
 43550 ;; This function calls:
 43551 ;;		Nothing
 43552 ;; This function is called by:
 43553 ;;		__find_nth_cluster
 43554 ;;		__make_cluster_chain
 43555 ;; This function uses a non-reentrant model
 43556 ;;
 43557                           
 43558                           	psect	text216
 43559  0091A2                     __ptext216:
 43560                           	opt stack 0
 43561  0091A2                     __read_value_from_offset:
 43562                           	opt stack 26
 43563                           
 43564                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 43565                           
 43566                           ;incstack = 0
 43567  0091A2  0E01               	movlw	1
 43568  0091A4  2401               	addwf	__read_value_from_offset@offset,w,c
 43569  0091A6  6E05               	movwf	??__read_value_from_offset& (0+255),c
 43570  0091A8  0E00               	movlw	0
 43571  0091AA  2002               	addwfc	__read_value_from_offset@offset+1,w,c
 43572  0091AC  6E06               	movwf	(??__read_value_from_offset+1)& (0+255),c
 43573  0091AE  5005               	movf	??__read_value_from_offset,w,c
 43574  0091B0  2403               	addwf	__read_value_from_offset@buffer,w,c
 43575  0091B2  6ED9               	movwf	fsr2l,c
 43576  0091B4  5006               	movf	??__read_value_from_offset+1,w,c
 43577  0091B6  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 43578  0091B8  6EDA               	movwf	fsr2h,c
 43579  0091BA  50DF               	movf	indf2,w,c
 43580  0091BC  6E07               	movwf	(??__read_value_from_offset+2)& (0+255),c
 43581  0091BE  5007               	movf	??__read_value_from_offset+2,w,c
 43582  0091C0  6E08               	movwf	__read_value_from_offset@value,c
 43583  0091C2  6A09               	clrf	__read_value_from_offset@value+1,c
 43584                           
 43585                           ;fat16.c: 118: value <<= 8;
 43586  0091C4  5008               	movf	__read_value_from_offset@value,w,c
 43587  0091C6  6E09               	movwf	__read_value_from_offset@value+1,c
 43588  0091C8  6A08               	clrf	__read_value_from_offset@value,c
 43589                           
 43590                           ;fat16.c: 119: value |= buffer[offset];
 43591  0091CA  5001               	movf	__read_value_from_offset@offset,w,c
 43592  0091CC  2403               	addwf	__read_value_from_offset@buffer,w,c
 43593  0091CE  6ED9               	movwf	fsr2l,c
 43594  0091D0  5002               	movf	__read_value_from_offset@offset+1,w,c
 43595  0091D2  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 43596  0091D4  6EDA               	movwf	fsr2h,c
 43597  0091D6  50DF               	movf	indf2,w,c
 43598  0091D8  6E05               	movwf	??__read_value_from_offset& (0+255),c
 43599  0091DA  5005               	movf	??__read_value_from_offset,w,c
 43600  0091DC  1208               	iorwf	__read_value_from_offset@value,f,c
 43601                           
 43602                           ;fat16.c: 120: return value;
 43603  0091DE  C008  F001         	movff	__read_value_from_offset@value,?__read_value_from_offset
 43604  0091E2  C009  F002         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 43605  0091E6  0012               	return	
 43606  0091E8                     __end_of__read_value_from_offset:
 43607                           	opt stack 0
 43608                           tosu	equ	0xFFF
 43609                           tosh	equ	0xFFE
 43610                           tosl	equ	0xFFD
 43611                           pclath	equ	0xFFA
 43612                           tblptru	equ	0xFF8
 43613                           tblptrh	equ	0xFF7
 43614                           tblptrl	equ	0xFF6
 43615                           tablat	equ	0xFF5
 43616                           prodh	equ	0xFF4
 43617                           prodl	equ	0xFF3
 43618                           intcon	equ	0xFF2
 43619                           intcon2	equ	0xFF1
 43620                           intcon3	equ	0xFF0
 43621                           indf0	equ	0xFEF
 43622                           postinc0	equ	0xFEE
 43623                           fsr0h	equ	0xFEA
 43624                           fsr0l	equ	0xFE9
 43625                           wreg	equ	0xFE8
 43626                           indf1	equ	0xFE7
 43627                           postdec1	equ	0xFE5
 43628                           plusw1	equ	0xFE3
 43629                           fsr1h	equ	0xFE2
 43630                           fsr1l	equ	0xFE1
 43631                           indf2	equ	0xFDF
 43632                           postinc2	equ	0xFDE
 43633                           postdec2	equ	0xFDD
 43634                           plusw2	equ	0xFDB
 43635                           fsr2h	equ	0xFDA
 43636                           fsr2l	equ	0xFD9
 43637                           status	equ	0xFD8
 43638                           
 43639 ;; *************** function __read_fat *****************
 43640 ;; Defined at:
 43641 ;;		line 456 in file "fat16.c"
 43642 ;; Parameters:    Size  Location     Type
 43643 ;;  cluster         2   47[COMRAM] unsigned int 
 43644 ;; Auto vars:     Size  Location     Type
 43645 ;;  value           2   53[COMRAM] unsigned int 
 43646 ;;  offset          2   51[COMRAM] unsigned int 
 43647 ;;  sector          2   49[COMRAM] unsigned int 
 43648 ;; Return value:  Size  Location     Type
 43649 ;;                  2   47[COMRAM] unsigned int 
 43650 ;; Registers used:
 43651 ;;		wreg, status,2, status,0, cstack
 43652 ;; Tracked objects:
 43653 ;;		On entry : 0/0
 43654 ;;		On exit  : 0/0
 43655 ;;		Unchanged: 0/0
 43656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43658 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43660 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43661 ;;Total ram usage:        8 bytes
 43662 ;; Hardware stack levels used:    1
 43663 ;; Hardware stack levels required when called:    5
 43664 ;; This function calls:
 43665 ;;		__fat_offset_from_cluster
 43666 ;;		__fat_sector_from_cluster
 43667 ;;		_flash_partial_read
 43668 ;; This function is called by:
 43669 ;;		__find_nth_cluster
 43670 ;;		_fat_read_from_file_fast
 43671 ;;		_fat_modify_file
 43672 ;; This function uses a non-reentrant model
 43673 ;;
 43674                           
 43675                           	psect	text217
 43676  008DEC                     __ptext217:
 43677                           	opt stack 0
 43678  008DEC                     __read_fat:
 43679                           	opt stack 22
 43680                           
 43681                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 43682                           
 43683                           ;incstack = 0
 43684  008DEC  C030  F001         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 43685  008DF0  C031  F002         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 43686  008DF4  EC9E  F04D         	call	__fat_sector_from_cluster	;wreg free
 43687  008DF8  C001  F032         	movff	?__fat_sector_from_cluster,__read_fat@sector
 43688  008DFC  C002  F033         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 43689                           
 43690                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 43691  008E00  C030  F001         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 43692  008E04  C031  F002         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 43693  008E08  ECAA  F04D         	call	__fat_offset_from_cluster	;wreg free
 43694  008E0C  C001  F034         	movff	?__fat_offset_from_cluster,__read_fat@offset
 43695  008E10  C002  F035         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 43696                           
 43697                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 43698  008E14  C032  F028         	movff	__read_fat@sector,flash_partial_read@page
 43699  008E18  C033  F029         	movff	__read_fat@sector+1,flash_partial_read@page+1
 43700  008E1C  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 43701  008E20  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 43702  008E24  0E00               	movlw	0
 43703  008E26  6E2D               	movwf	flash_partial_read@length+1,c
 43704  008E28  0E02               	movlw	2
 43705  008E2A  6E2C               	movwf	flash_partial_read@length,c
 43706  008E2C  0E36               	movlw	low __read_fat@value
 43707  008E2E  6E2E               	movwf	flash_partial_read@data,c
 43708  008E30  0E00               	movlw	high __read_fat@value
 43709  008E32  6E2F               	movwf	flash_partial_read@data+1,c
 43710  008E34  EC00  F04B         	call	_flash_partial_read	;wreg free
 43711                           
 43712                           ;fat16.c: 470: return value;
 43713  008E38  C036  F030         	movff	__read_fat@value,?__read_fat
 43714  008E3C  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 43715  008E40  0012               	return	
 43716  008E42                     __end_of__read_fat:
 43717                           	opt stack 0
 43718                           tosu	equ	0xFFF
 43719                           tosh	equ	0xFFE
 43720                           tosl	equ	0xFFD
 43721                           pclath	equ	0xFFA
 43722                           tblptru	equ	0xFF8
 43723                           tblptrh	equ	0xFF7
 43724                           tblptrl	equ	0xFF6
 43725                           tablat	equ	0xFF5
 43726                           prodh	equ	0xFF4
 43727                           prodl	equ	0xFF3
 43728                           intcon	equ	0xFF2
 43729                           intcon2	equ	0xFF1
 43730                           intcon3	equ	0xFF0
 43731                           indf0	equ	0xFEF
 43732                           postinc0	equ	0xFEE
 43733                           fsr0h	equ	0xFEA
 43734                           fsr0l	equ	0xFE9
 43735                           wreg	equ	0xFE8
 43736                           indf1	equ	0xFE7
 43737                           postdec1	equ	0xFE5
 43738                           plusw1	equ	0xFE3
 43739                           fsr1h	equ	0xFE2
 43740                           fsr1l	equ	0xFE1
 43741                           indf2	equ	0xFDF
 43742                           postinc2	equ	0xFDE
 43743                           postdec2	equ	0xFDD
 43744                           plusw2	equ	0xFDB
 43745                           fsr2h	equ	0xFDA
 43746                           fsr2l	equ	0xFD9
 43747                           status	equ	0xFD8
 43748                           
 43749 ;; *************** function __fat_sector_from_cluster *****************
 43750 ;; Defined at:
 43751 ;;		line 75 in file "fat16.c"
 43752 ;; Parameters:    Size  Location     Type
 43753 ;;  cluster         2    0[COMRAM] unsigned int 
 43754 ;; Auto vars:     Size  Location     Type
 43755 ;;		None
 43756 ;; Return value:  Size  Location     Type
 43757 ;;                  2    0[COMRAM] unsigned int 
 43758 ;; Registers used:
 43759 ;;		wreg, status,2, status,0
 43760 ;; Tracked objects:
 43761 ;;		On entry : 0/0
 43762 ;;		On exit  : 0/0
 43763 ;;		Unchanged: 0/0
 43764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43769 ;;Total ram usage:        2 bytes
 43770 ;; Hardware stack levels used:    1
 43771 ;; This function calls:
 43772 ;;		Nothing
 43773 ;; This function is called by:
 43774 ;;		__find_nth_cluster
 43775 ;;		__make_cluster_chain
 43776 ;;		__read_fat
 43777 ;; This function uses a non-reentrant model
 43778 ;;
 43779                           
 43780                           	psect	text218
 43781  009B3C                     __ptext218:
 43782                           	opt stack 0
 43783  009B3C                     __fat_sector_from_cluster:
 43784                           	opt stack 26
 43785                           
 43786                           ;fat16.c: 77: cluster >>= 8;
 43787                           
 43788                           ;incstack = 0
 43789  009B3C  5002               	movf	__fat_sector_from_cluster@cluster+1,w,c
 43790  009B3E  6E01               	movwf	__fat_sector_from_cluster@cluster,c
 43791  009B40  6A02               	clrf	__fat_sector_from_cluster@cluster+1,c
 43792                           
 43793                           ;fat16.c: 78: cluster += 2;
 43794  009B42  0E02               	movlw	2
 43795  009B44  2601               	addwf	__fat_sector_from_cluster@cluster,f,c
 43796  009B46  0E00               	movlw	0
 43797  009B48  2202               	addwfc	__fat_sector_from_cluster@cluster+1,f,c
 43798                           
 43799                           ;fat16.c: 79: return cluster;
 43800  009B4A  C001  F001         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 43801  009B4E  C002  F002         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 43802  009B52  0012               	return	
 43803  009B54                     __end_of__fat_sector_from_cluster:
 43804                           	opt stack 0
 43805                           tosu	equ	0xFFF
 43806                           tosh	equ	0xFFE
 43807                           tosl	equ	0xFFD
 43808                           pclath	equ	0xFFA
 43809                           tblptru	equ	0xFF8
 43810                           tblptrh	equ	0xFF7
 43811                           tblptrl	equ	0xFF6
 43812                           tablat	equ	0xFF5
 43813                           prodh	equ	0xFF4
 43814                           prodl	equ	0xFF3
 43815                           intcon	equ	0xFF2
 43816                           intcon2	equ	0xFF1
 43817                           intcon3	equ	0xFF0
 43818                           indf0	equ	0xFEF
 43819                           postinc0	equ	0xFEE
 43820                           fsr0h	equ	0xFEA
 43821                           fsr0l	equ	0xFE9
 43822                           wreg	equ	0xFE8
 43823                           indf1	equ	0xFE7
 43824                           postdec1	equ	0xFE5
 43825                           plusw1	equ	0xFE3
 43826                           fsr1h	equ	0xFE2
 43827                           fsr1l	equ	0xFE1
 43828                           indf2	equ	0xFDF
 43829                           postinc2	equ	0xFDE
 43830                           postdec2	equ	0xFDD
 43831                           plusw2	equ	0xFDB
 43832                           fsr2h	equ	0xFDA
 43833                           fsr2l	equ	0xFD9
 43834                           status	equ	0xFD8
 43835                           
 43836 ;; *************** function __fat_offset_from_cluster *****************
 43837 ;; Defined at:
 43838 ;;		line 82 in file "fat16.c"
 43839 ;; Parameters:    Size  Location     Type
 43840 ;;  cluster         2    0[COMRAM] unsigned int 
 43841 ;; Auto vars:     Size  Location     Type
 43842 ;;		None
 43843 ;; Return value:  Size  Location     Type
 43844 ;;                  2    0[COMRAM] unsigned int 
 43845 ;; Registers used:
 43846 ;;		wreg, status,2, status,0
 43847 ;; Tracked objects:
 43848 ;;		On entry : 0/0
 43849 ;;		On exit  : 0/0
 43850 ;;		Unchanged: 0/0
 43851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43856 ;;Total ram usage:        2 bytes
 43857 ;; Hardware stack levels used:    1
 43858 ;; This function calls:
 43859 ;;		Nothing
 43860 ;; This function is called by:
 43861 ;;		__find_nth_cluster
 43862 ;;		__make_cluster_chain
 43863 ;;		__read_fat
 43864 ;; This function uses a non-reentrant model
 43865 ;;
 43866                           
 43867                           	psect	text219
 43868  009B54                     __ptext219:
 43869                           	opt stack 0
 43870  009B54                     __fat_offset_from_cluster:
 43871                           	opt stack 26
 43872                           
 43873                           ;fat16.c: 84: cluster &= 0xFF;
 43874                           
 43875                           ;incstack = 0
 43876  009B54  0EFF               	movlw	255
 43877  009B56  1601               	andwf	__fat_offset_from_cluster@cluster,f,c
 43878  009B58  0E00               	movlw	0
 43879  009B5A  1602               	andwf	__fat_offset_from_cluster@cluster+1,f,c
 43880                           
 43881                           ;fat16.c: 85: cluster <<= 1;
 43882  009B5C  90D8               	bcf	status,0,c
 43883  009B5E  3601               	rlcf	__fat_offset_from_cluster@cluster,f,c
 43884  009B60  3602               	rlcf	__fat_offset_from_cluster@cluster+1,f,c
 43885                           
 43886                           ;fat16.c: 86: return cluster;
 43887  009B62  C001  F001         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 43888  009B66  C002  F002         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 43889  009B6A  0012               	return	
 43890  009B6C                     __end_of__fat_offset_from_cluster:
 43891                           	opt stack 0
 43892                           tosu	equ	0xFFF
 43893                           tosh	equ	0xFFE
 43894                           tosl	equ	0xFFD
 43895                           pclath	equ	0xFFA
 43896                           tblptru	equ	0xFF8
 43897                           tblptrh	equ	0xFF7
 43898                           tblptrl	equ	0xFF6
 43899                           tablat	equ	0xFF5
 43900                           prodh	equ	0xFF4
 43901                           prodl	equ	0xFF3
 43902                           intcon	equ	0xFF2
 43903                           intcon2	equ	0xFF1
 43904                           intcon3	equ	0xFF0
 43905                           indf0	equ	0xFEF
 43906                           postinc0	equ	0xFEE
 43907                           fsr0h	equ	0xFEA
 43908                           fsr0l	equ	0xFE9
 43909                           wreg	equ	0xFE8
 43910                           indf1	equ	0xFE7
 43911                           postdec1	equ	0xFE5
 43912                           plusw1	equ	0xFE3
 43913                           fsr1h	equ	0xFE2
 43914                           fsr1l	equ	0xFE1
 43915                           indf2	equ	0xFDF
 43916                           postinc2	equ	0xFDE
 43917                           postdec2	equ	0xFDD
 43918                           plusw2	equ	0xFDB
 43919                           fsr2h	equ	0xFDA
 43920                           fsr2l	equ	0xFD9
 43921                           status	equ	0xFD8
 43922                           
 43923 ;; *************** function __data_sector_from_cluster *****************
 43924 ;; Defined at:
 43925 ;;		line 70 in file "fat16.c"
 43926 ;; Parameters:    Size  Location     Type
 43927 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 43928 ;; Auto vars:     Size  Location     Type
 43929 ;;		None
 43930 ;; Return value:  Size  Location     Type
 43931 ;;                  2    0[COMRAM] unsigned int 
 43932 ;; Registers used:
 43933 ;;		wreg, status,2, status,0
 43934 ;; Tracked objects:
 43935 ;;		On entry : 0/0
 43936 ;;		On exit  : 0/0
 43937 ;;		Unchanged: 0/0
 43938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43943 ;;Total ram usage:        2 bytes
 43944 ;; Hardware stack levels used:    1
 43945 ;; This function calls:
 43946 ;;		Nothing
 43947 ;; This function is called by:
 43948 ;;		_fat_read_from_file_fast
 43949 ;;		_fat_modify_file
 43950 ;;		_fat_copy_sector_to_buffer
 43951 ;; This function uses a non-reentrant model
 43952 ;;
 43953                           
 43954                           	psect	text220
 43955  009C48                     __ptext220:
 43956                           	opt stack 0
 43957  009C48                     __data_sector_from_cluster:
 43958                           	opt stack 27
 43959                           
 43960                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 43961                           
 43962                           ;incstack = 0
 43963  009C48  0E24               	movlw	36
 43964  009C4A  2401               	addwf	__data_sector_from_cluster@fat_cluster,w,c
 43965  009C4C  6E01               	movwf	?__data_sector_from_cluster,c
 43966  009C4E  0E00               	movlw	0
 43967  009C50  2002               	addwfc	__data_sector_from_cluster@fat_cluster+1,w,c
 43968  009C52  6E02               	movwf	?__data_sector_from_cluster+1,c
 43969  009C54  0012               	return	
 43970  009C56                     __end_of__data_sector_from_cluster:
 43971                           	opt stack 0
 43972                           tosu	equ	0xFFF
 43973                           tosh	equ	0xFFE
 43974                           tosl	equ	0xFFD
 43975                           pclath	equ	0xFFA
 43976                           tblptru	equ	0xFF8
 43977                           tblptrh	equ	0xFF7
 43978                           tblptrl	equ	0xFF6
 43979                           tablat	equ	0xFF5
 43980                           prodh	equ	0xFF4
 43981                           prodl	equ	0xFF3
 43982                           intcon	equ	0xFF2
 43983                           intcon2	equ	0xFF1
 43984                           intcon3	equ	0xFF0
 43985                           indf0	equ	0xFEF
 43986                           postinc0	equ	0xFEE
 43987                           fsr0h	equ	0xFEA
 43988                           fsr0l	equ	0xFE9
 43989                           wreg	equ	0xFE8
 43990                           indf1	equ	0xFE7
 43991                           postdec1	equ	0xFE5
 43992                           plusw1	equ	0xFE3
 43993                           fsr1h	equ	0xFE2
 43994                           fsr1l	equ	0xFE1
 43995                           indf2	equ	0xFDF
 43996                           postinc2	equ	0xFDE
 43997                           postdec2	equ	0xFDD
 43998                           plusw2	equ	0xFDB
 43999                           fsr2h	equ	0xFDA
 44000                           fsr2l	equ	0xFD9
 44001                           status	equ	0xFD8
 44002                           
 44003 ;; *************** function __parse_buffer_to_sector *****************
 44004 ;; Defined at:
 44005 ;;		line 876 in file "api.c"
 44006 ;; Parameters:    Size  Location     Type
 44007 ;;  data            2   81[COMRAM] PTR unsigned char 
 44008 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 44009 ;;  out_buffer      2   83[COMRAM] PTR unsigned char 
 44010 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 44011 ;;  out_idx_ptr     2   85[COMRAM] PTR unsigned char 
 44012 ;;		 -> api_parse@out_idx(1), 
 44013 ;; Auto vars:     Size  Location     Type
 44014 ;;  sector          2   90[COMRAM] unsigned int 
 44015 ;;  file_number     1   89[COMRAM] unsigned char 
 44016 ;;  return_value    1   88[COMRAM] unsigned char 
 44017 ;; Return value:  Size  Location     Type
 44018 ;;                  1    wreg      unsigned char 
 44019 ;; Registers used:
 44020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44021 ;; Tracked objects:
 44022 ;;		On entry : 0/0
 44023 ;;		On exit  : 0/0
 44024 ;;		Unchanged: 0/0
 44025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44026 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44027 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44029 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44030 ;;Total ram usage:       11 bytes
 44031 ;; Hardware stack levels used:    1
 44032 ;; Hardware stack levels required when called:    8
 44033 ;; This function calls:
 44034 ;;		_fat_write_sector_from_buffer
 44035 ;; This function is called by:
 44036 ;;		__parse_command_long
 44037 ;; This function uses a non-reentrant model
 44038 ;;
 44039                           
 44040                           	psect	text221
 44041  004652                     __ptext221:
 44042                           	opt stack 0
 44043  004652                     __parse_buffer_to_sector:
 44044                           	opt stack 20
 44045                           
 44046                           ;api.c: 879: uint8_t file_number;;api.c: 880: uint16_t sector;;api.c: 881: uint8_t retur
      +                          n_value;;api.c: 883: if((data[0]!=COMMAND_BUFFER_TO_SECTOR) || (data[4]!=0x6A) || (data[
      +                          5]!=0x6D))
 44047                           
 44048                           ;incstack = 0
 44049  004652  C052  FFD9         	movff	__parse_buffer_to_sector@data,fsr2l
 44050  004656  C053  FFDA         	movff	__parse_buffer_to_sector@data+1,fsr2h
 44051  00465A  0E58               	movlw	88
 44052  00465C  18DE               	xorwf	postinc2,w,c
 44053  00465E  A4D8               	btfss	status,2,c
 44054  004660  D014               	goto	u11740
 44055  004662  EE20 F004          	lfsr	2,4
 44056  004666  5052               	movf	__parse_buffer_to_sector@data,w,c
 44057  004668  26D9               	addwf	fsr2l,f,c
 44058  00466A  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 44059  00466C  22DA               	addwfc	fsr2h,f,c
 44060  00466E  0E6A               	movlw	106
 44061  004670  18DE               	xorwf	postinc2,w,c
 44062  004672  A4D8               	btfss	status,2,c
 44063  004674  D00A               	goto	u11740
 44064  004676  EE20 F005          	lfsr	2,5
 44065  00467A  5052               	movf	__parse_buffer_to_sector@data,w,c
 44066  00467C  26D9               	addwf	fsr2l,f,c
 44067  00467E  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 44068  004680  22DA               	addwfc	fsr2h,f,c
 44069  004682  0E6D               	movlw	109
 44070  004684  18DE               	xorwf	postinc2,w,c
 44071  004686  B4D8               	btfsc	status,2,c
 44072  004688  D002               	goto	l2917
 44073  00468A                     u11740:
 44074                           
 44075                           ;api.c: 884: {;api.c: 885: return 6;
 44076  00468A  0E06               	movlw	6
 44077  00468C  0012               	return	
 44078  00468E                     l2917:
 44079                           
 44080                           ;api.c: 886: };api.c: 889: file_number = data[1];
 44081  00468E  EE20 F001          	lfsr	2,1
 44082  004692  5052               	movf	__parse_buffer_to_sector@data,w,c
 44083  004694  26D9               	addwf	fsr2l,f,c
 44084  004696  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 44085  004698  22DA               	addwfc	fsr2h,f,c
 44086  00469A  50DF               	movf	indf2,w,c
 44087  00469C  6E5A               	movwf	__parse_buffer_to_sector@file_number,c
 44088                           
 44089                           ;api.c: 892: sector = data[2];
 44090  00469E  EE20 F002          	lfsr	2,2
 44091  0046A2  5052               	movf	__parse_buffer_to_sector@data,w,c
 44092  0046A4  26D9               	addwf	fsr2l,f,c
 44093  0046A6  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 44094  0046A8  22DA               	addwfc	fsr2h,f,c
 44095  0046AA  50DF               	movf	indf2,w,c
 44096  0046AC  6E58               	movwf	??__parse_buffer_to_sector& (0+255),c
 44097  0046AE  5058               	movf	??__parse_buffer_to_sector,w,c
 44098  0046B0  6E5B               	movwf	__parse_buffer_to_sector@sector,c
 44099  0046B2  6A5C               	clrf	__parse_buffer_to_sector@sector+1,c
 44100                           
 44101                           ;api.c: 893: sector <<= 8;
 44102  0046B4  505B               	movf	__parse_buffer_to_sector@sector,w,c
 44103  0046B6  6E5C               	movwf	__parse_buffer_to_sector@sector+1,c
 44104  0046B8  6A5B               	clrf	__parse_buffer_to_sector@sector,c
 44105                           
 44106                           ;api.c: 894: sector |= data[3];
 44107  0046BA  EE20 F003          	lfsr	2,3
 44108  0046BE  5052               	movf	__parse_buffer_to_sector@data,w,c
 44109  0046C0  26D9               	addwf	fsr2l,f,c
 44110  0046C2  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 44111  0046C4  22DA               	addwfc	fsr2h,f,c
 44112  0046C6  50DF               	movf	indf2,w,c
 44113  0046C8  6E58               	movwf	??__parse_buffer_to_sector& (0+255),c
 44114  0046CA  5058               	movf	??__parse_buffer_to_sector,w,c
 44115  0046CC  125B               	iorwf	__parse_buffer_to_sector@sector,f,c
 44116                           
 44117                           ;api.c: 897: return_value = fat_write_sector_from_buffer(file_number, sector);
 44118  0046CE  C05B  F043         	movff	__parse_buffer_to_sector@sector,fat_write_sector_from_buffer@sector
 44119  0046D2  C05C  F044         	movff	__parse_buffer_to_sector@sector+1,fat_write_sector_from_buffer@sector+1
 44120  0046D6  505A               	movf	__parse_buffer_to_sector@file_number,w,c
 44121  0046D8  ECDE  F040         	call	_fat_write_sector_from_buffer
 44122  0046DC  6E59               	movwf	__parse_buffer_to_sector@return_value,c
 44123                           
 44124                           ;api.c: 900: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 44125  0046DE  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 44126  0046E2  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 44127  0046E6  50DF               	movf	indf2,w,c
 44128  0046E8  B4D8               	btfsc	status,2,c
 44129  0046EA  D061               	goto	l2921
 44130  0046EC  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 44131  0046F0  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 44132  0046F4  0E3C               	movlw	60
 44133  0046F6  60DF               	cpfslt	indf2,c
 44134  0046F8  D05A               	goto	l2921
 44135                           
 44136                           ;api.c: 901: {;api.c: 902: out_buffer[(*out_idx_ptr)++] = COMMAND_BUFFER_TO_SECTOR;
 44137  0046FA  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 44138  0046FE  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 44139  004702  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 44140  004706  0E01               	movlw	1
 44141  004708  26DF               	addwf	indf2,f,c
 44142  00470A  5058               	movf	??__parse_buffer_to_sector,w,c
 44143  00470C  0D01               	mullw	1
 44144  00470E  50F3               	movf	prodl,w,c
 44145  004710  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 44146  004712  6ED9               	movwf	fsr2l,c
 44147  004714  50F4               	movf	prodh,w,c
 44148  004716  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 44149  004718  6EDA               	movwf	fsr2h,c
 44150  00471A  0E58               	movlw	88
 44151  00471C  6EDF               	movwf	indf2,c
 44152                           
 44153                           ;api.c: 903: out_buffer[(*out_idx_ptr)++] = file_number;
 44154  00471E  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 44155  004722  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 44156  004726  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 44157  00472A  0E01               	movlw	1
 44158  00472C  26DF               	addwf	indf2,f,c
 44159  00472E  5058               	movf	??__parse_buffer_to_sector,w,c
 44160  004730  0D01               	mullw	1
 44161  004732  50F3               	movf	prodl,w,c
 44162  004734  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 44163  004736  6ED9               	movwf	fsr2l,c
 44164  004738  50F4               	movf	prodh,w,c
 44165  00473A  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 44166  00473C  6EDA               	movwf	fsr2h,c
 44167  00473E  C05A  FFDF         	movff	__parse_buffer_to_sector@file_number,indf2
 44168                           
 44169                           ;api.c: 904: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((sector)>>8)&0xFF));
 44170  004742  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 44171  004746  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 44172  00474A  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 44173  00474E  0E01               	movlw	1
 44174  004750  26DF               	addwf	indf2,f,c
 44175  004752  5058               	movf	??__parse_buffer_to_sector,w,c
 44176  004754  0D01               	mullw	1
 44177  004756  50F3               	movf	prodl,w,c
 44178  004758  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 44179  00475A  6ED9               	movwf	fsr2l,c
 44180  00475C  50F4               	movf	prodh,w,c
 44181  00475E  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 44182  004760  6EDA               	movwf	fsr2h,c
 44183  004762  505C               	movf	__parse_buffer_to_sector@sector+1,w,c
 44184  004764  6EDF               	movwf	indf2,c
 44185                           
 44186                           ;api.c: 905: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((sector)&0xFF));
 44187  004766  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 44188  00476A  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 44189  00476E  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 44190  004772  0E01               	movlw	1
 44191  004774  26DF               	addwf	indf2,f,c
 44192  004776  5058               	movf	??__parse_buffer_to_sector,w,c
 44193  004778  0D01               	mullw	1
 44194  00477A  50F3               	movf	prodl,w,c
 44195  00477C  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 44196  00477E  6ED9               	movwf	fsr2l,c
 44197  004780  50F4               	movf	prodh,w,c
 44198  004782  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 44199  004784  6EDA               	movwf	fsr2h,c
 44200  004786  C05B  FFDF         	movff	__parse_buffer_to_sector@sector,indf2
 44201                           
 44202                           ;api.c: 906: out_buffer[(*out_idx_ptr)++] = return_value;
 44203  00478A  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 44204  00478E  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 44205  004792  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 44206  004796  0E01               	movlw	1
 44207  004798  26DF               	addwf	indf2,f,c
 44208  00479A  5058               	movf	??__parse_buffer_to_sector,w,c
 44209  00479C  0D01               	mullw	1
 44210  00479E  50F3               	movf	prodl,w,c
 44211  0047A0  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 44212  0047A2  6ED9               	movwf	fsr2l,c
 44213  0047A4  50F4               	movf	prodh,w,c
 44214  0047A6  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 44215  0047A8  6EDA               	movwf	fsr2h,c
 44216  0047AA  C059  FFDF         	movff	__parse_buffer_to_sector@return_value,indf2
 44217  0047AE                     l2921:
 44218                           
 44219                           ;api.c: 907: };api.c: 909: return 6;
 44220  0047AE  0E06               	movlw	6
 44221  0047B0  0012               	return	
 44222  0047B2                     __end_of__parse_buffer_to_sector:
 44223                           	opt stack 0
 44224                           tosu	equ	0xFFF
 44225                           tosh	equ	0xFFE
 44226                           tosl	equ	0xFFD
 44227                           pclath	equ	0xFFA
 44228                           tblptru	equ	0xFF8
 44229                           tblptrh	equ	0xFF7
 44230                           tblptrl	equ	0xFF6
 44231                           tablat	equ	0xFF5
 44232                           prodh	equ	0xFF4
 44233                           prodl	equ	0xFF3
 44234                           intcon	equ	0xFF2
 44235                           intcon2	equ	0xFF1
 44236                           intcon3	equ	0xFF0
 44237                           indf0	equ	0xFEF
 44238                           postinc0	equ	0xFEE
 44239                           fsr0h	equ	0xFEA
 44240                           fsr0l	equ	0xFE9
 44241                           wreg	equ	0xFE8
 44242                           indf1	equ	0xFE7
 44243                           postdec1	equ	0xFE5
 44244                           plusw1	equ	0xFE3
 44245                           fsr1h	equ	0xFE2
 44246                           fsr1l	equ	0xFE1
 44247                           indf2	equ	0xFDF
 44248                           postinc2	equ	0xFDE
 44249                           postdec2	equ	0xFDD
 44250                           plusw2	equ	0xFDB
 44251                           fsr2h	equ	0xFDA
 44252                           fsr2l	equ	0xFD9
 44253                           status	equ	0xFD8
 44254                           
 44255 ;; *************** function _fat_write_sector_from_buffer *****************
 44256 ;; Defined at:
 44257 ;;		line 1459 in file "fat16.c"
 44258 ;; Parameters:    Size  Location     Type
 44259 ;;  file_number     1    wreg     unsigned char 
 44260 ;;  sector          2   66[COMRAM] unsigned int 
 44261 ;; Auto vars:     Size  Location     Type
 44262 ;;  file_number     1   80[COMRAM] unsigned char 
 44263 ;;  file_size       4   74[COMRAM] unsigned long 
 44264 ;;  number_of_cl    2   78[COMRAM] unsigned int 
 44265 ;;  cluster         2   72[COMRAM] unsigned int 
 44266 ;;  physical_sec    2    0        unsigned int 
 44267 ;; Return value:  Size  Location     Type
 44268 ;;                  1    wreg      unsigned char 
 44269 ;; Registers used:
 44270 ;;		wreg, status,2, status,0, cstack
 44271 ;; Tracked objects:
 44272 ;;		On entry : 0/0
 44273 ;;		On exit  : 0/0
 44274 ;;		Unchanged: 0/0
 44275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44277 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44278 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44279 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44280 ;;Total ram usage:       15 bytes
 44281 ;; Hardware stack levels used:    1
 44282 ;; Hardware stack levels required when called:    7
 44283 ;; This function calls:
 44284 ;;		__get_first_cluster
 44285 ;;		__root_is_available
 44286 ;;		_fat_get_file_size
 44287 ;; This function is called by:
 44288 ;;		_fat_copy_file
 44289 ;;		__parse_buffer_to_sector
 44290 ;; This function uses a non-reentrant model
 44291 ;;
 44292                           
 44293                           	psect	text222
 44294  0081BC                     __ptext222:
 44295                           	opt stack 0
 44296  0081BC                     _fat_write_sector_from_buffer:
 44297                           	opt stack 19
 44298                           
 44299                           ;incstack = 0
 44300                           ;fat_write_sector_from_buffer@file_number stored from wreg
 44301  0081BC  6E51               	movwf	fat_write_sector_from_buffer@file_number,c
 44302                           
 44303                           ;fat16.c: 1461: uint32_t file_size;;fat16.c: 1462: uint16_t number_of_clusters;;fat16.c:
      +                           1463: uint16_t cluster;;fat16.c: 1464: uint16_t physical_sector;;fat16.c: 1467: if(_roo
      +                          t_is_available(file_number))
 44304  0081BE  5051               	movf	fat_write_sector_from_buffer@file_number,w,c
 44305  0081C0  EC84  F044         	call	__root_is_available
 44306  0081C4  0900               	iorlw	0
 44307  0081C6  B4D8               	btfsc	status,2,c
 44308  0081C8  D002               	goto	l2337
 44309                           
 44310                           ;fat16.c: 1468: {;fat16.c: 1470: return 0xFF;
 44311  0081CA  0EFF               	movlw	255
 44312  0081CC  0012               	return	
 44313  0081CE                     l2337:
 44314                           
 44315                           ;fat16.c: 1471: };fat16.c: 1474: file_size = fat_get_file_size(file_number);
 44316  0081CE  5051               	movf	fat_write_sector_from_buffer@file_number,w,c
 44317  0081D0  ECB3  F042         	call	_fat_get_file_size
 44318  0081D4  C036  F04B         	movff	?_fat_get_file_size,fat_write_sector_from_buffer@file_size
 44319  0081D8  C037  F04C         	movff	?_fat_get_file_size+1,fat_write_sector_from_buffer@file_size+1
 44320  0081DC  C038  F04D         	movff	?_fat_get_file_size+2,fat_write_sector_from_buffer@file_size+2
 44321  0081E0  C039  F04E         	movff	?_fat_get_file_size+3,fat_write_sector_from_buffer@file_size+3
 44322                           
 44323                           ;fat16.c: 1477: number_of_clusters = (file_size + 512 - 1) >> 9;
 44324  0081E4  0EFF               	movlw	255
 44325  0081E6  244B               	addwf	fat_write_sector_from_buffer@file_size,w,c
 44326  0081E8  6E45               	movwf	??_fat_write_sector_from_buffer& (0+255),c
 44327  0081EA  0E01               	movlw	1
 44328  0081EC  204C               	addwfc	fat_write_sector_from_buffer@file_size+1,w,c
 44329  0081EE  6E46               	movwf	(??_fat_write_sector_from_buffer+1)& (0+255),c
 44330  0081F0  0E00               	movlw	0
 44331  0081F2  204D               	addwfc	fat_write_sector_from_buffer@file_size+2,w,c
 44332  0081F4  6E47               	movwf	(??_fat_write_sector_from_buffer+2)& (0+255),c
 44333  0081F6  0E00               	movlw	0
 44334  0081F8  204E               	addwfc	fat_write_sector_from_buffer@file_size+3,w,c
 44335  0081FA  6E48               	movwf	(??_fat_write_sector_from_buffer+3)& (0+255),c
 44336  0081FC  0E0A               	movlw	10
 44337  0081FE  D005               	goto	u9920
 44338  008200                     u9925:
 44339  008200  90D8               	bcf	status,0,c
 44340  008202  3248               	rrcf	??_fat_write_sector_from_buffer+3,f,c
 44341  008204  3247               	rrcf	??_fat_write_sector_from_buffer+2,f,c
 44342  008206  3246               	rrcf	??_fat_write_sector_from_buffer+1,f,c
 44343  008208  3245               	rrcf	??_fat_write_sector_from_buffer,f,c
 44344  00820A                     u9920:
 44345  00820A  2EE8               	decfsz	wreg,f,c
 44346  00820C  D7F9               	goto	u9925
 44347  00820E  C045  F04F         	movff	??_fat_write_sector_from_buffer,fat_write_sector_from_buffer@number_of_clusters
 44348  008212  C046  F050         	movff	??_fat_write_sector_from_buffer+1,fat_write_sector_from_buffer@number_of_clusters
      +                          +1
 44349                           
 44350                           ;fat16.c: 1478: if(sector >= number_of_clusters)
 44351  008216  504F               	movf	fat_write_sector_from_buffer@number_of_clusters,w,c
 44352  008218  5C43               	subwf	fat_write_sector_from_buffer@sector,w,c
 44353  00821A  5050               	movf	fat_write_sector_from_buffer@number_of_clusters+1,w,c
 44354  00821C  5844               	subwfb	fat_write_sector_from_buffer@sector+1,w,c
 44355  00821E  A0D8               	btfss	status,0,c
 44356  008220  D002               	goto	l2339
 44357                           
 44358                           ;fat16.c: 1479: {;fat16.c: 1481: return 0xFE;
 44359  008222  0EFE               	movlw	254
 44360  008224  0012               	return	
 44361  008226                     l2339:
 44362                           
 44363                           ;fat16.c: 1482: };fat16.c: 1485: cluster = _get_first_cluster(file_number);
 44364  008226  5051               	movf	fat_write_sector_from_buffer@file_number,w,c
 44365  008228  EC76  F047         	call	__get_first_cluster
 44366  00822C  C030  F049         	movff	?__get_first_cluster,fat_write_sector_from_buffer@cluster
 44367  008230  C031  F04A         	movff	?__get_first_cluster+1,fat_write_sector_from_buffer@cluster+1
 44368                           
 44369                           ;fat16.c: 1495: return 0x00;
 44370  008234  0E00               	movlw	0
 44371  008236  0012               	return	
 44372  008238                     __end_of_fat_write_sector_from_buffer:
 44373                           	opt stack 0
 44374                           tosu	equ	0xFFF
 44375                           tosh	equ	0xFFE
 44376                           tosl	equ	0xFFD
 44377                           pclath	equ	0xFFA
 44378                           tblptru	equ	0xFF8
 44379                           tblptrh	equ	0xFF7
 44380                           tblptrl	equ	0xFF6
 44381                           tablat	equ	0xFF5
 44382                           prodh	equ	0xFF4
 44383                           prodl	equ	0xFF3
 44384                           intcon	equ	0xFF2
 44385                           intcon2	equ	0xFF1
 44386                           intcon3	equ	0xFF0
 44387                           indf0	equ	0xFEF
 44388                           postinc0	equ	0xFEE
 44389                           fsr0h	equ	0xFEA
 44390                           fsr0l	equ	0xFE9
 44391                           wreg	equ	0xFE8
 44392                           indf1	equ	0xFE7
 44393                           postdec1	equ	0xFE5
 44394                           plusw1	equ	0xFE3
 44395                           fsr1h	equ	0xFE2
 44396                           fsr1l	equ	0xFE1
 44397                           indf2	equ	0xFDF
 44398                           postinc2	equ	0xFDE
 44399                           postdec2	equ	0xFDD
 44400                           plusw2	equ	0xFDB
 44401                           fsr2h	equ	0xFDA
 44402                           fsr2l	equ	0xFD9
 44403                           status	equ	0xFD8
 44404                           
 44405 ;; *************** function _fat_get_file_size *****************
 44406 ;; Defined at:
 44407 ;;		line 562 in file "fat16.c"
 44408 ;; Parameters:    Size  Location     Type
 44409 ;;  file_number     1    wreg     unsigned char 
 44410 ;; Auto vars:     Size  Location     Type
 44411 ;;  file_number     1   65[COMRAM] unsigned char 
 44412 ;;  file_size       4   61[COMRAM] unsigned long 
 44413 ;;  offset          2   59[COMRAM] unsigned int 
 44414 ;;  sector          2   57[COMRAM] unsigned int 
 44415 ;; Return value:  Size  Location     Type
 44416 ;;                  4   53[COMRAM] unsigned long 
 44417 ;; Registers used:
 44418 ;;		wreg, status,2, status,0, cstack
 44419 ;; Tracked objects:
 44420 ;;		On entry : 0/0
 44421 ;;		On exit  : 0/0
 44422 ;;		Unchanged: 0/0
 44423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44425 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44427 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44428 ;;Total ram usage:       13 bytes
 44429 ;; Hardware stack levels used:    1
 44430 ;; Hardware stack levels required when called:    6
 44431 ;; This function calls:
 44432 ;;		__offset_from_file_number
 44433 ;;		__root_is_available
 44434 ;;		__sector_from_file_number
 44435 ;;		_flash_partial_read
 44436 ;; This function is called by:
 44437 ;;		_fat_append_to_file
 44438 ;;		_fat_copy_file
 44439 ;;		_fat_copy_sector_to_buffer
 44440 ;;		_fat_write_sector_from_buffer
 44441 ;;		__bootloader_find_file
 44442 ;;		__bootloader_verify_file
 44443 ;;		__fill_buffer_read_file
 44444 ;; This function uses a non-reentrant model
 44445 ;;
 44446                           
 44447                           	psect	text223
 44448  008566                     __ptext223:
 44449                           	opt stack 0
 44450  008566                     _fat_get_file_size:
 44451                           	opt stack 22
 44452                           
 44453                           ;incstack = 0
 44454                           ;fat_get_file_size@file_number stored from wreg
 44455  008566  6E42               	movwf	fat_get_file_size@file_number,c
 44456                           
 44457                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 44458  008568  5042               	movf	fat_get_file_size@file_number,w,c
 44459  00856A  EC84  F044         	call	__root_is_available
 44460  00856E  0900               	iorlw	0
 44461  008570  B4D8               	btfsc	status,2,c
 44462  008572  D005               	goto	l2092
 44463                           
 44464                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 44465  008574  6836               	setf	?_fat_get_file_size,c
 44466  008576  6837               	setf	?_fat_get_file_size+1,c
 44467  008578  6838               	setf	?_fat_get_file_size+2,c
 44468  00857A  6839               	setf	?_fat_get_file_size+3,c
 44469  00857C  0012               	return	
 44470  00857E                     l2092:
 44471                           
 44472                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 44473  00857E  5042               	movf	fat_get_file_size@file_number,w,c
 44474  008580  ECE7  F04B         	call	__sector_from_file_number
 44475  008584  C001  F03A         	movff	?__sector_from_file_number,fat_get_file_size@sector
 44476  008588  C002  F03B         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 44477                           
 44478                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 44479  00858C  5042               	movf	fat_get_file_size@file_number,w,c
 44480  00858E  EC73  F04C         	call	__offset_from_file_number
 44481  008592  C001  F03C         	movff	?__offset_from_file_number,fat_get_file_size@offset
 44482  008596  C002  F03D         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 44483                           
 44484                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 44485  00859A  C03A  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 44486  00859E  C03B  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 44487  0085A2  0E1C               	movlw	28
 44488  0085A4  243C               	addwf	fat_get_file_size@offset,w,c
 44489  0085A6  6E2A               	movwf	flash_partial_read@start,c
 44490  0085A8  0E00               	movlw	0
 44491  0085AA  203D               	addwfc	fat_get_file_size@offset+1,w,c
 44492  0085AC  6E2B               	movwf	flash_partial_read@start+1,c
 44493  0085AE  0E00               	movlw	0
 44494  0085B0  6E2D               	movwf	flash_partial_read@length+1,c
 44495  0085B2  0E04               	movlw	4
 44496  0085B4  6E2C               	movwf	flash_partial_read@length,c
 44497  0085B6  0E3E               	movlw	low fat_get_file_size@file_size
 44498  0085B8  6E2E               	movwf	flash_partial_read@data,c
 44499  0085BA  0E00               	movlw	high fat_get_file_size@file_size
 44500  0085BC  6E2F               	movwf	flash_partial_read@data+1,c
 44501  0085BE  EC00  F04B         	call	_flash_partial_read	;wreg free
 44502                           
 44503                           ;fat16.c: 583: return file_size;
 44504  0085C2  C03E  F036         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 44505  0085C6  C03F  F037         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 44506  0085CA  C040  F038         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 44507  0085CE  C041  F039         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 44508  0085D2  0012               	return	
 44509  0085D4                     __end_of_fat_get_file_size:
 44510                           	opt stack 0
 44511                           tosu	equ	0xFFF
 44512                           tosh	equ	0xFFE
 44513                           tosl	equ	0xFFD
 44514                           pclath	equ	0xFFA
 44515                           tblptru	equ	0xFF8
 44516                           tblptrh	equ	0xFF7
 44517                           tblptrl	equ	0xFF6
 44518                           tablat	equ	0xFF5
 44519                           prodh	equ	0xFF4
 44520                           prodl	equ	0xFF3
 44521                           intcon	equ	0xFF2
 44522                           intcon2	equ	0xFF1
 44523                           intcon3	equ	0xFF0
 44524                           indf0	equ	0xFEF
 44525                           postinc0	equ	0xFEE
 44526                           fsr0h	equ	0xFEA
 44527                           fsr0l	equ	0xFE9
 44528                           wreg	equ	0xFE8
 44529                           indf1	equ	0xFE7
 44530                           postdec1	equ	0xFE5
 44531                           plusw1	equ	0xFE3
 44532                           fsr1h	equ	0xFE2
 44533                           fsr1l	equ	0xFE1
 44534                           indf2	equ	0xFDF
 44535                           postinc2	equ	0xFDE
 44536                           postdec2	equ	0xFDD
 44537                           plusw2	equ	0xFDB
 44538                           fsr2h	equ	0xFDA
 44539                           fsr2l	equ	0xFD9
 44540                           status	equ	0xFD8
 44541                           
 44542 ;; *************** function __root_is_available *****************
 44543 ;; Defined at:
 44544 ;;		line 408 in file "fat16.c"
 44545 ;; Parameters:    Size  Location     Type
 44546 ;;  file_number     1    wreg     unsigned char 
 44547 ;; Auto vars:     Size  Location     Type
 44548 ;;  file_number     1   51[COMRAM] unsigned char 
 44549 ;;  offset          2   49[COMRAM] unsigned int 
 44550 ;;  root_sector     2   47[COMRAM] unsigned int 
 44551 ;;  first_byte      1   52[COMRAM] unsigned char 
 44552 ;; Return value:  Size  Location     Type
 44553 ;;                  1    wreg      unsigned char 
 44554 ;; Registers used:
 44555 ;;		wreg, status,2, status,0, cstack
 44556 ;; Tracked objects:
 44557 ;;		On entry : 0/0
 44558 ;;		On exit  : 0/0
 44559 ;;		Unchanged: 0/0
 44560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44562 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44564 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44565 ;;Total ram usage:        6 bytes
 44566 ;; Hardware stack levels used:    1
 44567 ;; Hardware stack levels required when called:    5
 44568 ;; This function calls:
 44569 ;;		__offset_from_file_number
 44570 ;;		__sector_from_file_number
 44571 ;;		_flash_partial_read
 44572 ;; This function is called by:
 44573 ;;		__get_available_root_entry
 44574 ;;		_fat_get_file_size
 44575 ;;		_fat_delete_file
 44576 ;;		_fat_append_to_file
 44577 ;;		_fat_copy_file
 44578 ;;		_fat_resize_file
 44579 ;;		_fat_copy_sector_to_buffer
 44580 ;;		_fat_write_sector_from_buffer
 44581 ;; This function uses a non-reentrant model
 44582 ;;
 44583                           
 44584                           	psect	text224
 44585  008908                     __ptext224:
 44586                           	opt stack 0
 44587  008908                     __root_is_available:
 44588                           	opt stack 22
 44589                           
 44590                           ;incstack = 0
 44591                           ;__root_is_available@file_number stored from wreg
 44592  008908  6E34               	movwf	__root_is_available@file_number,c
 44593                           
 44594                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 44595  00890A  0E3F               	movlw	63
 44596  00890C  6434               	cpfsgt	__root_is_available@file_number,c
 44597  00890E  D002               	goto	l2053
 44598                           
 44599                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 44600  008910  0E00               	movlw	0
 44601  008912  0012               	return	
 44602  008914                     l2053:
 44603                           
 44604                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 44605  008914  5034               	movf	__root_is_available@file_number,w,c
 44606  008916  ECE7  F04B         	call	__sector_from_file_number
 44607  00891A  C001  F030         	movff	?__sector_from_file_number,__root_is_available@root_sector
 44608  00891E  C002  F031         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 44609                           
 44610                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 44611  008922  5034               	movf	__root_is_available@file_number,w,c
 44612  008924  EC73  F04C         	call	__offset_from_file_number
 44613  008928  C001  F032         	movff	?__offset_from_file_number,__root_is_available@offset
 44614  00892C  C002  F033         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 44615                           
 44616                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 44617  008930  C030  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 44618  008934  C031  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 44619  008938  C032  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 44620  00893C  C033  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 44621  008940  0E00               	movlw	0
 44622  008942  6E2D               	movwf	flash_partial_read@length+1,c
 44623  008944  0E01               	movlw	1
 44624  008946  6E2C               	movwf	flash_partial_read@length,c
 44625  008948  0E35               	movlw	low __root_is_available@first_byte
 44626  00894A  6E2E               	movwf	flash_partial_read@data,c
 44627  00894C  0E00               	movlw	high __root_is_available@first_byte
 44628  00894E  6E2F               	movwf	flash_partial_read@data+1,c
 44629  008950  EC00  F04B         	call	_flash_partial_read	;wreg free
 44630                           
 44631                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 44632  008954  5035               	movf	__root_is_available@first_byte,w,c
 44633  008956  B4D8               	btfsc	status,2,c
 44634  008958  D004               	goto	u7910
 44635  00895A  0EE5               	movlw	229
 44636  00895C  1835               	xorwf	__root_is_available@first_byte,w,c
 44637  00895E  A4D8               	btfss	status,2,c
 44638  008960  D002               	goto	l2055
 44639  008962                     u7910:
 44640                           
 44641                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 44642  008962  0E01               	movlw	1
 44643                           
 44644                           ;fat16.c: 434: }
 44645  008964  0012               	return	
 44646  008966                     l2055:
 44647                           
 44648                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 44649  008966  0E00               	movlw	0
 44650  008968  0012               	return	
 44651  00896A                     __end_of__root_is_available:
 44652                           	opt stack 0
 44653                           tosu	equ	0xFFF
 44654                           tosh	equ	0xFFE
 44655                           tosl	equ	0xFFD
 44656                           pclath	equ	0xFFA
 44657                           tblptru	equ	0xFF8
 44658                           tblptrh	equ	0xFF7
 44659                           tblptrl	equ	0xFF6
 44660                           tablat	equ	0xFF5
 44661                           prodh	equ	0xFF4
 44662                           prodl	equ	0xFF3
 44663                           intcon	equ	0xFF2
 44664                           intcon2	equ	0xFF1
 44665                           intcon3	equ	0xFF0
 44666                           indf0	equ	0xFEF
 44667                           postinc0	equ	0xFEE
 44668                           fsr0h	equ	0xFEA
 44669                           fsr0l	equ	0xFE9
 44670                           wreg	equ	0xFE8
 44671                           indf1	equ	0xFE7
 44672                           postdec1	equ	0xFE5
 44673                           plusw1	equ	0xFE3
 44674                           fsr1h	equ	0xFE2
 44675                           fsr1l	equ	0xFE1
 44676                           indf2	equ	0xFDF
 44677                           postinc2	equ	0xFDE
 44678                           postdec2	equ	0xFDD
 44679                           plusw2	equ	0xFDB
 44680                           fsr2h	equ	0xFDA
 44681                           fsr2l	equ	0xFD9
 44682                           status	equ	0xFD8
 44683                           
 44684 ;; *************** function __get_first_cluster *****************
 44685 ;; Defined at:
 44686 ;;		line 501 in file "fat16.c"
 44687 ;; Parameters:    Size  Location     Type
 44688 ;;  file_number     1    wreg     unsigned char 
 44689 ;; Auto vars:     Size  Location     Type
 44690 ;;  file_number     1   55[COMRAM] unsigned char 
 44691 ;;  first_cluste    2   53[COMRAM] unsigned int 
 44692 ;;  offset          2   51[COMRAM] unsigned int 
 44693 ;;  sector          2   49[COMRAM] unsigned int 
 44694 ;; Return value:  Size  Location     Type
 44695 ;;                  2   47[COMRAM] unsigned int 
 44696 ;; Registers used:
 44697 ;;		wreg, status,2, status,0, cstack
 44698 ;; Tracked objects:
 44699 ;;		On entry : 0/0
 44700 ;;		On exit  : 0/0
 44701 ;;		Unchanged: 0/0
 44702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44704 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44706 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44707 ;;Total ram usage:        9 bytes
 44708 ;; Hardware stack levels used:    1
 44709 ;; Hardware stack levels required when called:    5
 44710 ;; This function calls:
 44711 ;;		__offset_from_file_number
 44712 ;;		__sector_from_file_number
 44713 ;;		_flash_partial_read
 44714 ;; This function is called by:
 44715 ;;		_fat_delete_file
 44716 ;;		_fat_copy_sector_to_buffer
 44717 ;;		_fat_write_sector_from_buffer
 44718 ;; This function uses a non-reentrant model
 44719 ;;
 44720                           
 44721                           	psect	text225
 44722  008EEC                     __ptext225:
 44723                           	opt stack 0
 44724  008EEC                     __get_first_cluster:
 44725                           	opt stack 21
 44726                           
 44727                           ;incstack = 0
 44728                           ;__get_first_cluster@file_number stored from wreg
 44729  008EEC  6E38               	movwf	__get_first_cluster@file_number,c
 44730                           
 44731                           ;fat16.c: 503: uint16_t first_cluster;;fat16.c: 504: uint16_t sector;;fat16.c: 505: uint
      +                          16_t offset;;fat16.c: 508: sector = _sector_from_file_number(file_number);
 44732  008EEE  5038               	movf	__get_first_cluster@file_number,w,c
 44733  008EF0  ECE7  F04B         	call	__sector_from_file_number
 44734  008EF4  C001  F032         	movff	?__sector_from_file_number,__get_first_cluster@sector
 44735  008EF8  C002  F033         	movff	?__sector_from_file_number+1,__get_first_cluster@sector+1
 44736                           
 44737                           ;fat16.c: 509: offset = _offset_from_file_number(file_number);
 44738  008EFC  5038               	movf	__get_first_cluster@file_number,w,c
 44739  008EFE  EC73  F04C         	call	__offset_from_file_number
 44740  008F02  C001  F034         	movff	?__offset_from_file_number,__get_first_cluster@offset
 44741  008F06  C002  F035         	movff	?__offset_from_file_number+1,__get_first_cluster@offset+1
 44742                           
 44743                           ;fat16.c: 510: offset += 26;
 44744  008F0A  0E1A               	movlw	26
 44745  008F0C  2634               	addwf	__get_first_cluster@offset,f,c
 44746  008F0E  0E00               	movlw	0
 44747  008F10  2235               	addwfc	__get_first_cluster@offset+1,f,c
 44748                           
 44749                           ;fat16.c: 513: flash_partial_read(sector, offset, 2, &first_cluster);
 44750  008F12  C032  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 44751  008F16  C033  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 44752  008F1A  C034  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 44753  008F1E  C035  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 44754  008F22  0E00               	movlw	0
 44755  008F24  6E2D               	movwf	flash_partial_read@length+1,c
 44756  008F26  0E02               	movlw	2
 44757  008F28  6E2C               	movwf	flash_partial_read@length,c
 44758  008F2A  0E36               	movlw	low __get_first_cluster@first_cluster
 44759  008F2C  6E2E               	movwf	flash_partial_read@data,c
 44760  008F2E  0E00               	movlw	high __get_first_cluster@first_cluster
 44761  008F30  6E2F               	movwf	flash_partial_read@data+1,c
 44762  008F32  EC00  F04B         	call	_flash_partial_read	;wreg free
 44763                           
 44764                           ;fat16.c: 514: return first_cluster;
 44765  008F36  C036  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 44766  008F3A  C037  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 44767  008F3E  0012               	return	
 44768  008F40                     __end_of__get_first_cluster:
 44769                           	opt stack 0
 44770                           tosu	equ	0xFFF
 44771                           tosh	equ	0xFFE
 44772                           tosl	equ	0xFFD
 44773                           pclath	equ	0xFFA
 44774                           tblptru	equ	0xFF8
 44775                           tblptrh	equ	0xFF7
 44776                           tblptrl	equ	0xFF6
 44777                           tablat	equ	0xFF5
 44778                           prodh	equ	0xFF4
 44779                           prodl	equ	0xFF3
 44780                           intcon	equ	0xFF2
 44781                           intcon2	equ	0xFF1
 44782                           intcon3	equ	0xFF0
 44783                           indf0	equ	0xFEF
 44784                           postinc0	equ	0xFEE
 44785                           fsr0h	equ	0xFEA
 44786                           fsr0l	equ	0xFE9
 44787                           wreg	equ	0xFE8
 44788                           indf1	equ	0xFE7
 44789                           postdec1	equ	0xFE5
 44790                           plusw1	equ	0xFE3
 44791                           fsr1h	equ	0xFE2
 44792                           fsr1l	equ	0xFE1
 44793                           indf2	equ	0xFDF
 44794                           postinc2	equ	0xFDE
 44795                           postdec2	equ	0xFDD
 44796                           plusw2	equ	0xFDB
 44797                           fsr2h	equ	0xFDA
 44798                           fsr2l	equ	0xFD9
 44799                           status	equ	0xFD8
 44800                           
 44801 ;; *************** function _flash_partial_read *****************
 44802 ;; Defined at:
 44803 ;;		line 480 in file "flash.c"
 44804 ;; Parameters:    Size  Location     Type
 44805 ;;  page            2   39[COMRAM] unsigned int 
 44806 ;;  start           2   41[COMRAM] unsigned int 
 44807 ;;  length          2   43[COMRAM] unsigned int 
 44808 ;;  data            2   45[COMRAM] PTR unsigned char 
 44809 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 44810 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 44811 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 44812 ;;		 -> RAM(3759), 
 44813 ;; Auto vars:     Size  Location     Type
 44814 ;;		None
 44815 ;; Return value:  Size  Location     Type
 44816 ;;                  1    wreg      void 
 44817 ;; Registers used:
 44818 ;;		wreg, status,2, status,0, cstack
 44819 ;; Tracked objects:
 44820 ;;		On entry : 0/0
 44821 ;;		On exit  : 0/0
 44822 ;;		Unchanged: 0/0
 44823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44824 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44827 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44828 ;;Total ram usage:        8 bytes
 44829 ;; Hardware stack levels used:    1
 44830 ;; Hardware stack levels required when called:    4
 44831 ;; This function calls:
 44832 ;;		__flash_partial_read
 44833 ;;		_spi_set_configuration
 44834 ;; This function is called by:
 44835 ;;		__root_is_available
 44836 ;;		__read_fat
 44837 ;;		__get_first_cluster
 44838 ;;		_fat_get_file_size
 44839 ;;		_fat_read_from_file_fast
 44840 ;;		_fat_get_file_information
 44841 ;; This function uses a non-reentrant model
 44842 ;;
 44843                           
 44844                           	psect	text226
 44845  009600                     __ptext226:
 44846                           	opt stack 0
 44847  009600                     _flash_partial_read:
 44848                           	opt stack 23
 44849                           
 44850                           ;flash.c: 483: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 44851                           
 44852                           ;incstack = 0
 44853  009600  0E00               	movlw	0
 44854  009602  ECAB  F02A         	call	_spi_set_configuration
 44855                           
 44856                           ;flash.c: 486: _flash_partial_read(page, start, length, data);
 44857  009606  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 44858  00960A  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 44859  00960E  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 44860  009612  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 44861  009616  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 44862  00961A  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 44863  00961E  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 44864  009622  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 44865  009626  EC95  F041         	call	__flash_partial_read	;wreg free
 44866                           
 44867                           ;flash.c: 489: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 44868  00962A  0E01               	movlw	1
 44869  00962C  ECAB  F02A         	call	_spi_set_configuration
 44870  009630  0012               	return		;funcret
 44871  009632                     __end_of_flash_partial_read:
 44872                           	opt stack 0
 44873                           tosu	equ	0xFFF
 44874                           tosh	equ	0xFFE
 44875                           tosl	equ	0xFFD
 44876                           pclath	equ	0xFFA
 44877                           tblptru	equ	0xFF8
 44878                           tblptrh	equ	0xFF7
 44879                           tblptrl	equ	0xFF6
 44880                           tablat	equ	0xFF5
 44881                           prodh	equ	0xFF4
 44882                           prodl	equ	0xFF3
 44883                           intcon	equ	0xFF2
 44884                           intcon2	equ	0xFF1
 44885                           intcon3	equ	0xFF0
 44886                           indf0	equ	0xFEF
 44887                           postinc0	equ	0xFEE
 44888                           fsr0h	equ	0xFEA
 44889                           fsr0l	equ	0xFE9
 44890                           wreg	equ	0xFE8
 44891                           indf1	equ	0xFE7
 44892                           postdec1	equ	0xFE5
 44893                           plusw1	equ	0xFE3
 44894                           fsr1h	equ	0xFE2
 44895                           fsr1l	equ	0xFE1
 44896                           indf2	equ	0xFDF
 44897                           postinc2	equ	0xFDE
 44898                           postdec2	equ	0xFDD
 44899                           plusw2	equ	0xFDB
 44900                           fsr2h	equ	0xFDA
 44901                           fsr2l	equ	0xFD9
 44902                           status	equ	0xFD8
 44903                           
 44904 ;; *************** function _spi_set_configuration *****************
 44905 ;; Defined at:
 44906 ;;		line 139 in file "spi.c"
 44907 ;; Parameters:    Size  Location     Type
 44908 ;;  configuratio    1    wreg     enum E6749
 44909 ;; Auto vars:     Size  Location     Type
 44910 ;;  configuratio    1    0[COMRAM] enum E6749
 44911 ;;  cntr            1    0        unsigned char 
 44912 ;; Return value:  Size  Location     Type
 44913 ;;                  1    wreg      void 
 44914 ;; Registers used:
 44915 ;;		wreg, status,2, status,0
 44916 ;; Tracked objects:
 44917 ;;		On entry : 0/0
 44918 ;;		On exit  : 0/0
 44919 ;;		Unchanged: 0/0
 44920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44925 ;;Total ram usage:        1 bytes
 44926 ;; Hardware stack levels used:    1
 44927 ;; This function calls:
 44928 ;;		Nothing
 44929 ;; This function is called by:
 44930 ;;		_flash_init
 44931 ;;		_flash_is_busy
 44932 ;;		_flash_sector_read
 44933 ;;		_flash_sector_write
 44934 ;;		_flash_partial_read
 44935 ;;		_flash_partial_write
 44936 ;;		_flash_copy_page_to_buffer
 44937 ;;		_flash_read_from_buffer
 44938 ;;		_flash_write_to_buffer
 44939 ;;		_flash_set_power_state
 44940 ;;		_flash_write_page_from_buffer
 44941 ;; This function uses a non-reentrant model
 44942 ;;
 44943                           
 44944                           	psect	text227
 44945  005556                     __ptext227:
 44946                           	opt stack 0
 44947  005556                     _spi_set_configuration:
 44948                           	opt stack 28
 44949                           
 44950                           ;incstack = 0
 44951                           ;spi_set_configuration@configuration stored from wreg
 44952  005556  6E01               	movwf	spi_set_configuration@configuration,c
 44953                           
 44954                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 44955  005558  D07B               	goto	l3051
 44956  00555A                     l3052:
 44957                           
 44958                           ;spi.c: 152: LATDbits.LD2 = 1;
 44959  00555A  848C               	bsf	3980,2,c	;volatile
 44960                           
 44961                           ;spi.c: 153: TRISDbits.TRISD2 = 0;
 44962  00555C  9495               	bcf	3989,2,c	;volatile
 44963                           
 44964                           ;spi.c: 154: TRISDbits.TRISD2 = 1;
 44965  00555E  8495               	bsf	3989,2,c	;volatile
 44966  005560  A483               	btfss	3971,2,c	;volatile
 44967  005562  D7FE               	goto	l3054
 44968                           
 44969                           ;spi.c: 159: DMACON1bits.DMAEN = 0;
 44970  005564  9088               	bcf	3976,0,c	;volatile
 44971                           
 44972                           ;spi.c: 160: SSP2CON1bits.SSPEN = 0;
 44973  005566  9A72               	bcf	3954,5,c	;volatile
 44974                           
 44975                           ;spi.c: 163: TRISDbits.TRISD6 = 1;
 44976  005568  8C95               	bsf	3989,6,c	;volatile
 44977                           
 44978                           ;spi.c: 164: TRISDbits.TRISD4 = 0;
 44979  00556A  9895               	bcf	3989,4,c	;volatile
 44980                           
 44981                           ;spi.c: 165: LATDbits.LD4 = 0;
 44982  00556C  988C               	bcf	3980,4,c	;volatile
 44983                           
 44984                           ;spi.c: 166: TRISDbits.TRISD5 = 0;
 44985  00556E  9A95               	bcf	3989,5,c	;volatile
 44986                           
 44987                           ;spi.c: 167: LATDbits.LD5 = 0;
 44988  005570  9A8C               	bcf	3980,5,c	;volatile
 44989                           
 44990                           ;spi.c: 168: TRISDbits.TRISD7 = 0;
 44991  005572  9E95               	bcf	3989,7,c	;volatile
 44992                           
 44993                           ;spi.c: 169: LATDbits.LD7 = 1;
 44994  005574  8E8C               	bsf	3980,7,c	;volatile
 44995                           
 44996                           ;spi.c: 172: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 44997  005576  0E55               	movlw	85
 44998  005578  6EA7               	movwf	4007,c	;volsfr
 44999  00557A  0EAA               	movlw	170
 45000  00557C  6EA7               	movwf	4007,c	;volsfr
 45001  00557E  010E               	movlb	14	; () banked
 45002  005580  91BF               	bcf	191,0,b	;volatile
 45003                           
 45004                           ;spi.c: 174: RPOR23 = 0b00000;
 45005  005582  0E00               	movlw	0
 45006  005584  6FD7               	movwf	215,b	;volatile
 45007                           
 45008                           ;spi.c: 175: RPINR21 = 0b11111;
 45009  005586  0E1F               	movlw	31
 45010  005588  6FFC               	movwf	252,b	;volatile
 45011                           
 45012                           ;spi.c: 176: RPINR23 = 0b11111;
 45013  00558A  0E1F               	movlw	31
 45014  00558C  6FFE               	movwf	254,b	;volatile
 45015                           
 45016                           ;spi.c: 178: RPINR21 = 23;
 45017  00558E  0E17               	movlw	23
 45018  005590  6FFC               	movwf	252,b	;volatile
 45019                           
 45020                           ;spi.c: 179: RPOR21 = 10;
 45021  005592  0E0A               	movlw	10
 45022  005594  6FD5               	movwf	213,b	;volatile
 45023                           
 45024                           ;spi.c: 181: RPOR22 = 11;
 45025  005596  0E0B               	movlw	11
 45026  005598  6FD6               	movwf	214,b	;volatile
 45027                           
 45028                           ;spi.c: 182: RPINR22 = 22;
 45029  00559A  0E16               	movlw	22
 45030  00559C  6FFD               	movwf	253,b	;volatile
 45031                           
 45032                           ;spi.c: 183: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 45033  00559E  0E55               	movlw	85
 45034  0055A0  6EA7               	movwf	4007,c	;volsfr
 45035  0055A2  0EAA               	movlw	170
 45036  0055A4  6EA7               	movwf	4007,c	;volsfr
 45037                           
 45038                           ; BSR set to: 14
 45039  0055A6  81BF               	bsf	191,0,b	;volatile
 45040                           
 45041                           ; BSR set to: 14
 45042                           ;spi.c: 186: SSP2STATbits.SMP = 1;
 45043  0055A8  8E73               	bsf	3955,7,c	;volatile
 45044                           
 45045                           ; BSR set to: 14
 45046                           ;spi.c: 187: SSP2STATbits.CKE = 1;
 45047  0055AA  8C73               	bsf	3955,6,c	;volatile
 45048                           
 45049                           ; BSR set to: 14
 45050                           ;spi.c: 188: SSP2CON1bits.WCOL = 0;
 45051  0055AC  9E72               	bcf	3954,7,c	;volatile
 45052                           
 45053                           ; BSR set to: 14
 45054                           ;spi.c: 189: SSP2CON1bits.SSPOV = 0;
 45055  0055AE  9C72               	bcf	3954,6,c	;volatile
 45056                           
 45057                           ; BSR set to: 14
 45058                           ;spi.c: 190: SSP2CON1bits.CKP = 0;
 45059  0055B0  9872               	bcf	3954,4,c	;volatile
 45060                           
 45061                           ; BSR set to: 14
 45062                           ;spi.c: 191: SSP2CON1bits.SSPM =0b0000;
 45063  0055B2  9072               	bcf	3954,0,c	;volatile
 45064  0055B4  9272               	bcf	3954,1,c	;volatile
 45065  0055B6  9472               	bcf	3954,2,c	;volatile
 45066  0055B8  9672               	bcf	3954,3,c	;volatile
 45067                           
 45068                           ; BSR set to: 14
 45069                           ;spi.c: 192: SSP2CON1bits.SSPEN = 1;
 45070  0055BA  8A72               	bsf	3954,5,c	;volatile
 45071                           
 45072                           ;spi.c: 195: active_configuration = SPI_CONFIGURATION_INTERNAL;
 45073  0055BC  0E00               	movlw	0
 45074  0055BE  0101               	movlb	1	; () banked
 45075  0055C0  6F8A               	movwf	_active_configuration& (0+255),b
 45076                           
 45077                           ;spi.c: 196: break;
 45078  0055C2  0012               	return	
 45079  0055C4                     l3057:
 45080                           
 45081                           ;spi.c: 200: DMACON1bits.DMAEN = 0;
 45082  0055C4  9088               	bcf	3976,0,c	;volatile
 45083                           
 45084                           ;spi.c: 201: SSP2CON1bits.SSPEN = 0;
 45085  0055C6  9A72               	bcf	3954,5,c	;volatile
 45086                           
 45087                           ;spi.c: 204: ODCON3bits.SPI2OD = 0;
 45088  0055C8  010F               	movlb	15	; () banked
 45089  0055CA  9340               	bcf	64,1,b	;volatile
 45090                           
 45091                           ; BSR set to: 15
 45092                           ;spi.c: 207: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 45093  0055CC  0E55               	movlw	85
 45094  0055CE  6EA7               	movwf	4007,c	;volsfr
 45095  0055D0  0EAA               	movlw	170
 45096  0055D2  6EA7               	movwf	4007,c	;volsfr
 45097                           
 45098                           ; BSR set to: 15
 45099  0055D4  010E               	movlb	14	; () banked
 45100  0055D6  91BF               	bcf	191,0,b	;volatile
 45101                           
 45102                           ;spi.c: 208: RPOR23 = 10;
 45103  0055D8  0E0A               	movlw	10
 45104  0055DA  6FD7               	movwf	215,b	;volatile
 45105                           
 45106                           ;spi.c: 209: RPINR21 = 21;
 45107  0055DC  0E15               	movlw	21
 45108  0055DE  6FFC               	movwf	252,b	;volatile
 45109                           
 45110                           ;spi.c: 210: RPINR22 = 22;
 45111  0055E0  0E16               	movlw	22
 45112  0055E2  6FFD               	movwf	253,b	;volatile
 45113                           
 45114                           ;spi.c: 211: RPINR23 = 19;
 45115  0055E4  0E13               	movlw	19
 45116  0055E6  6FFE               	movwf	254,b	;volatile
 45117                           
 45118                           ;spi.c: 212: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 45119  0055E8  0E55               	movlw	85
 45120  0055EA  6EA7               	movwf	4007,c	;volsfr
 45121  0055EC  0EAA               	movlw	170
 45122  0055EE  6EA7               	movwf	4007,c	;volsfr
 45123                           
 45124                           ; BSR set to: 14
 45125  0055F0  81BF               	bsf	191,0,b	;volatile
 45126                           
 45127                           ; BSR set to: 14
 45128                           ;spi.c: 214: SSP2CON1bits.SSPEN = 0;
 45129  0055F2  9A72               	bcf	3954,5,c	;volatile
 45130                           
 45131                           ; BSR set to: 14
 45132                           ;spi.c: 222: TRISDbits.TRISD5 = 1;
 45133  0055F4  8A95               	bsf	3989,5,c	;volatile
 45134                           
 45135                           ; BSR set to: 14
 45136                           ;spi.c: 223: TRISDbits.TRISD4 = 1;
 45137  0055F6  8895               	bsf	3989,4,c	;volatile
 45138                           
 45139                           ; BSR set to: 14
 45140                           ;spi.c: 226: TRISDbits.TRISD6 = 0;
 45141  0055F8  9C95               	bcf	3989,6,c	;volatile
 45142                           
 45143                           ; BSR set to: 14
 45144                           ;spi.c: 227: LATDbits.LD6 = 1;
 45145  0055FA  8C8C               	bsf	3980,6,c	;volatile
 45146                           
 45147                           ; BSR set to: 14
 45148                           ;spi.c: 230: TRISDbits.TRISD2 = 1;
 45149  0055FC  8495               	bsf	3989,2,c	;volatile
 45150                           
 45151                           ; BSR set to: 14
 45152                           ;spi.c: 236: SSP2STATbits.SMP = 0;
 45153  0055FE  9E73               	bcf	3955,7,c	;volatile
 45154                           
 45155                           ; BSR set to: 14
 45156                           ;spi.c: 237: SSP2STATbits.CKE = 1;
 45157  005600  8C73               	bsf	3955,6,c	;volatile
 45158                           
 45159                           ; BSR set to: 14
 45160                           ;spi.c: 238: SSP2CON1bits.WCOL = 0;
 45161  005602  9E72               	bcf	3954,7,c	;volatile
 45162                           
 45163                           ; BSR set to: 14
 45164                           ;spi.c: 239: SSP2CON1bits.SSPOV = 0;
 45165  005604  9C72               	bcf	3954,6,c	;volatile
 45166                           
 45167                           ; BSR set to: 14
 45168                           ;spi.c: 240: SSP2CON1bits.CKP = 0;
 45169  005606  9872               	bcf	3954,4,c	;volatile
 45170                           
 45171                           ; BSR set to: 14
 45172                           ;spi.c: 241: SSP2CON1bits.SSPM =0b0100;
 45173  005608  5072               	movf	3954,w,c	;volatile
 45174  00560A  0BF0               	andlw	-16
 45175  00560C  0904               	iorlw	4
 45176  00560E  6E72               	movwf	3954,c	;volatile
 45177                           
 45178                           ; BSR set to: 14
 45179                           ;spi.c: 242: PIR3bits.SSP2IF = 0;
 45180  005610  9EA4               	bcf	4004,7,c	;volatile
 45181                           
 45182                           ; BSR set to: 14
 45183                           ;spi.c: 243: SSP2CON1bits.SSPEN = 1;
 45184  005612  8A72               	bsf	3954,5,c	;volatile
 45185                           
 45186                           ; BSR set to: 14
 45187                           ;spi.c: 246: DMACON1bits.TXINC = 1;
 45188  005614  8A88               	bsf	3976,5,c	;volatile
 45189                           
 45190                           ; BSR set to: 14
 45191                           ;spi.c: 247: DMACON1bits.RXINC = 1;
 45192  005616  8888               	bsf	3976,4,c	;volatile
 45193                           
 45194                           ; BSR set to: 14
 45195                           ;spi.c: 248: DMACON1bits.DUPLEX1 = 1;
 45196  005618  8688               	bsf	3976,3,c	;volatile
 45197                           
 45198                           ; BSR set to: 14
 45199                           ;spi.c: 249: DMACON1bits.DUPLEX0 = 0;
 45200  00561A  9488               	bcf	3976,2,c	;volatile
 45201                           
 45202                           ; BSR set to: 14
 45203                           ;spi.c: 250: DMACON1bits.DLYINTEN = 0;
 45204  00561C  9288               	bcf	3976,1,c	;volatile
 45205                           
 45206                           ; BSR set to: 14
 45207                           ;spi.c: 252: DMACON2bits.DLYCYC = 0b0000;
 45208  00561E  9886               	bcf	3974,4,c	;volatile
 45209  005620  9A86               	bcf	3974,5,c	;volatile
 45210  005622  9C86               	bcf	3974,6,c	;volatile
 45211  005624  9E86               	bcf	3974,7,c	;volatile
 45212                           
 45213                           ; BSR set to: 14
 45214                           ;spi.c: 253: DMACON2bits.INTLVL = 0b0000;
 45215  005626  9086               	bcf	3974,0,c	;volatile
 45216  005628  9286               	bcf	3974,1,c	;volatile
 45217  00562A  9486               	bcf	3974,2,c	;volatile
 45218  00562C  9686               	bcf	3974,3,c	;volatile
 45219                           
 45220                           ; BSR set to: 14
 45221                           ;spi.c: 256: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 45222  00562E  0E00               	movlw	0
 45223  005630  6E66               	movwf	3942,c	;volatile
 45224                           
 45225                           ; BSR set to: 14
 45226                           ;spi.c: 257: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 45227  005632  0E3F               	movlw	63
 45228  005634  6E67               	movwf	3943,c	;volatile
 45229                           
 45230                           ; BSR set to: 14
 45231                           ;spi.c: 260: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 45232  005636  0E03               	movlw	high __spi_external_tx_buffer
 45233  005638  6E6A               	movwf	3946,c	;volatile
 45234                           
 45235                           ; BSR set to: 14
 45236                           ;spi.c: 261: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 45237  00563A  0E40               	movlw	low (low __spi_external_tx_buffer)
 45238  00563C  6E6B               	movwf	3947,c	;volatile
 45239                           
 45240                           ; BSR set to: 14
 45241                           ;spi.c: 264: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 45242  00563E  0E03               	movlw	high __spi_external_rx_buffer
 45243  005640  6E68               	movwf	3944,c	;volatile
 45244                           
 45245                           ; BSR set to: 14
 45246                           ;spi.c: 265: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 45247  005642  0E00               	movlw	low (low __spi_external_rx_buffer)
 45248  005644  6E69               	movwf	3945,c	;volatile
 45249                           
 45250                           ; BSR set to: 14
 45251                           ;spi.c: 267: DMACON1bits.DMAEN = 1;
 45252  005646  8088               	bsf	3976,0,c	;volatile
 45253                           
 45254                           ; BSR set to: 14
 45255                           ;spi.c: 335: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 45256  005648  0E01               	movlw	1
 45257  00564A  0101               	movlb	1	; () banked
 45258  00564C  6F8A               	movwf	_active_configuration& (0+255),b
 45259                           
 45260                           ; BSR set to: 1
 45261                           ;spi.c: 337: }
 45262                           
 45263                           ;spi.c: 336: break;
 45264  00564E  0012               	return	
 45265  005650                     l3051:
 45266                           
 45267                           ; BSR set to: 1
 45268  005650  5001               	movf	spi_set_configuration@configuration,w,c
 45269                           
 45270                           ; Switch size 1, requested type "space"
 45271                           ; Number of cases is 2, Range of values is 0 to 1
 45272                           ; switch strategies available:
 45273                           ; Name         Instructions Cycles
 45274                           ; simple_byte            7     4 (average)
 45275                           ;	Chosen strategy is simple_byte
 45276  005652  0A00               	xorlw	0	; case 0
 45277  005654  B4D8               	btfsc	status,2,c
 45278  005656  D781               	goto	l3052
 45279  005658  0A01               	xorlw	1	; case 1
 45280  00565A  A4D8               	btfss	status,2,c
 45281  00565C  0012               	return	
 45282  00565E  D7B2               	goto	l3057
 45283  005660                     __end_of_spi_set_configuration:
 45284                           	opt stack 0
 45285                           tosu	equ	0xFFF
 45286                           tosh	equ	0xFFE
 45287                           tosl	equ	0xFFD
 45288                           pclath	equ	0xFFA
 45289                           tblptru	equ	0xFF8
 45290                           tblptrh	equ	0xFF7
 45291                           tblptrl	equ	0xFF6
 45292                           tablat	equ	0xFF5
 45293                           prodh	equ	0xFF4
 45294                           prodl	equ	0xFF3
 45295                           intcon	equ	0xFF2
 45296                           intcon2	equ	0xFF1
 45297                           intcon3	equ	0xFF0
 45298                           indf0	equ	0xFEF
 45299                           postinc0	equ	0xFEE
 45300                           fsr0h	equ	0xFEA
 45301                           fsr0l	equ	0xFE9
 45302                           wreg	equ	0xFE8
 45303                           indf1	equ	0xFE7
 45304                           postdec1	equ	0xFE5
 45305                           plusw1	equ	0xFE3
 45306                           fsr1h	equ	0xFE2
 45307                           fsr1l	equ	0xFE1
 45308                           indf2	equ	0xFDF
 45309                           postinc2	equ	0xFDE
 45310                           postdec2	equ	0xFDD
 45311                           plusw2	equ	0xFDB
 45312                           fsr2h	equ	0xFDA
 45313                           fsr2l	equ	0xFD9
 45314                           status	equ	0xFD8
 45315                           
 45316 ;; *************** function __flash_partial_read *****************
 45317 ;; Defined at:
 45318 ;;		line 308 in file "flash.c"
 45319 ;; Parameters:    Size  Location     Type
 45320 ;;  page            2   19[COMRAM] unsigned int 
 45321 ;;  start           2   21[COMRAM] unsigned int 
 45322 ;;  length          2   23[COMRAM] unsigned int 
 45323 ;;  data            2   25[COMRAM] PTR unsigned char 
 45324 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 45325 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 45326 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 45327 ;;		 -> buffer(512), msd_buffer(512), RAM(3759), 
 45328 ;; Auto vars:     Size  Location     Type
 45329 ;;  command         4   31[COMRAM] unsigned char [4]
 45330 ;;  address         4   35[COMRAM] unsigned long 
 45331 ;; Return value:  Size  Location     Type
 45332 ;;                  1    wreg      void 
 45333 ;; Registers used:
 45334 ;;		wreg, status,2, status,0, cstack
 45335 ;; Tracked objects:
 45336 ;;		On entry : 0/0
 45337 ;;		On exit  : 0/0
 45338 ;;		Unchanged: 0/0
 45339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45340 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45341 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45342 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45343 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45344 ;;Total ram usage:       20 bytes
 45345 ;; Hardware stack levels used:    1
 45346 ;; Hardware stack levels required when called:    3
 45347 ;; This function calls:
 45348 ;;		__flash_is_busy
 45349 ;;		_spi_tx_rx
 45350 ;; This function is called by:
 45351 ;;		_flash_sector_read
 45352 ;;		_flash_partial_read
 45353 ;; This function uses a non-reentrant model
 45354 ;;
 45355                           
 45356                           	psect	text228
 45357  00832A                     __ptext228:
 45358                           	opt stack 0
 45359  00832A                     __flash_partial_read:
 45360                           	opt stack 23
 45361                           
 45362                           ;flash.c: 310: uint32_t address;;flash.c: 311: uint8_t command[4];;flash.c: 314: while(_
      +                          flash_is_busy());
 45363                           
 45364                           ;incstack = 0
 45365  00832A  ECF1  F04C         	call	__flash_is_busy	;wreg free
 45366  00832E  0900               	iorlw	0
 45367  008330  A4D8               	btfss	status,2,c
 45368  008332  D7FB               	goto	__flash_partial_read
 45369                           
 45370                           ;flash.c: 317: address = page;
 45371  008334  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 45372  008338  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 45373  00833C  6A26               	clrf	__flash_partial_read@address+2,c
 45374  00833E  6A27               	clrf	__flash_partial_read@address+3,c
 45375                           
 45376                           ;flash.c: 318: address <<= 9;
 45377  008340  0E09               	movlw	9
 45378  008342                     u7195:
 45379  008342  90D8               	bcf	status,0,c
 45380  008344  3624               	rlcf	__flash_partial_read@address,f,c
 45381  008346  3625               	rlcf	__flash_partial_read@address+1,f,c
 45382  008348  3626               	rlcf	__flash_partial_read@address+2,f,c
 45383  00834A  3627               	rlcf	__flash_partial_read@address+3,f,c
 45384  00834C  2EE8               	decfsz	wreg,f,c
 45385  00834E  D7F9               	goto	u7195
 45386                           
 45387                           ;flash.c: 319: address |= start;
 45388  008350  5016               	movf	__flash_partial_read@start,w,c
 45389  008352  6E1C               	movwf	??__flash_partial_read& (0+255),c
 45390  008354  5017               	movf	__flash_partial_read@start+1,w,c
 45391  008356  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 45392  008358  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 45393  00835A  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 45394  00835C  501C               	movf	??__flash_partial_read,w,c
 45395  00835E  1224               	iorwf	__flash_partial_read@address,f,c
 45396  008360  501D               	movf	??__flash_partial_read+1,w,c
 45397  008362  1225               	iorwf	__flash_partial_read@address+1,f,c
 45398  008364  501E               	movf	??__flash_partial_read+2,w,c
 45399  008366  1226               	iorwf	__flash_partial_read@address+2,f,c
 45400  008368  501F               	movf	??__flash_partial_read+3,w,c
 45401  00836A  1227               	iorwf	__flash_partial_read@address+3,f,c
 45402                           
 45403                           ;flash.c: 322: command[0] = 0x03;
 45404  00836C  0E03               	movlw	3
 45405  00836E  6E20               	movwf	__flash_partial_read@command,c
 45406                           
 45407                           ;flash.c: 323: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 45408  008370  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 45409                           
 45410                           ;flash.c: 324: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 45411  008374  5025               	movf	__flash_partial_read@address+1,w,c
 45412  008376  6E22               	movwf	__flash_partial_read@command+2,c
 45413                           
 45414                           ;flash.c: 325: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 45415  008378  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 45416                           
 45417                           ;flash.c: 328: spi_tx_rx(command, 4, data, length);
 45418  00837C  0E20               	movlw	low __flash_partial_read@command
 45419  00837E  6E01               	movwf	spi_tx_rx@command,c
 45420  008380  0E00               	movlw	high __flash_partial_read@command
 45421  008382  6E02               	movwf	spi_tx_rx@command+1,c
 45422  008384  0E00               	movlw	0
 45423  008386  6E04               	movwf	spi_tx_rx@command_length+1,c
 45424  008388  0E04               	movlw	4
 45425  00838A  6E03               	movwf	spi_tx_rx@command_length,c
 45426  00838C  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 45427  008390  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 45428  008394  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 45429  008398  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 45430  00839C  EC3C  F03F         	call	_spi_tx_rx	;wreg free
 45431  0083A0  0012               	return		;funcret
 45432  0083A2                     __end_of__flash_partial_read:
 45433                           	opt stack 0
 45434                           tosu	equ	0xFFF
 45435                           tosh	equ	0xFFE
 45436                           tosl	equ	0xFFD
 45437                           pclath	equ	0xFFA
 45438                           tblptru	equ	0xFF8
 45439                           tblptrh	equ	0xFF7
 45440                           tblptrl	equ	0xFF6
 45441                           tablat	equ	0xFF5
 45442                           prodh	equ	0xFF4
 45443                           prodl	equ	0xFF3
 45444                           intcon	equ	0xFF2
 45445                           intcon2	equ	0xFF1
 45446                           intcon3	equ	0xFF0
 45447                           indf0	equ	0xFEF
 45448                           postinc0	equ	0xFEE
 45449                           fsr0h	equ	0xFEA
 45450                           fsr0l	equ	0xFE9
 45451                           wreg	equ	0xFE8
 45452                           indf1	equ	0xFE7
 45453                           postdec1	equ	0xFE5
 45454                           plusw1	equ	0xFE3
 45455                           fsr1h	equ	0xFE2
 45456                           fsr1l	equ	0xFE1
 45457                           indf2	equ	0xFDF
 45458                           postinc2	equ	0xFDE
 45459                           postdec2	equ	0xFDD
 45460                           plusw2	equ	0xFDB
 45461                           fsr2h	equ	0xFDA
 45462                           fsr2l	equ	0xFD9
 45463                           status	equ	0xFD8
 45464                           
 45465 ;; *************** function __flash_is_busy *****************
 45466 ;; Defined at:
 45467 ;;		line 280 in file "flash.c"
 45468 ;; Parameters:    Size  Location     Type
 45469 ;;		None
 45470 ;; Auto vars:     Size  Location     Type
 45471 ;;  status          2   17[COMRAM] unsigned int 
 45472 ;; Return value:  Size  Location     Type
 45473 ;;                  1    wreg      unsigned char 
 45474 ;; Registers used:
 45475 ;;		wreg, status,2, status,0, cstack
 45476 ;; Tracked objects:
 45477 ;;		On entry : 0/0
 45478 ;;		On exit  : 0/0
 45479 ;;		Unchanged: 0/0
 45480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45482 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45485 ;;Total ram usage:        2 bytes
 45486 ;; Hardware stack levels used:    1
 45487 ;; Hardware stack levels required when called:    2
 45488 ;; This function calls:
 45489 ;;		__flash_get_status
 45490 ;;		__flash_wakeup
 45491 ;; This function is called by:
 45492 ;;		__flash_set_page_size
 45493 ;;		__flash_copy_page_to_buffer
 45494 ;;		__flash_compare_page_to_buffer
 45495 ;;		__flash_write_to_buffer
 45496 ;;		__flash_write_page_from_buffer
 45497 ;;		__flash_partial_read
 45498 ;;		__flash_buffer_read
 45499 ;;		_flash_is_busy
 45500 ;;		_flash_partial_write
 45501 ;;		__flash_erase_page
 45502 ;;		_flash_set_power_state
 45503 ;; This function uses a non-reentrant model
 45504 ;;
 45505                           
 45506                           	psect	text229
 45507  0099E2                     __ptext229:
 45508                           	opt stack 0
 45509  0099E2                     __flash_is_busy:
 45510                           	opt stack 25
 45511                           
 45512                           ;flash.c: 282: uint16_t status;;flash.c: 285: if(power_state!=FLASH_POWER_STATE_NORMAL)
 45513                           
 45514                           ;incstack = 0
 45515  0099E2  0100               	movlb	0	; () banked
 45516  0099E4  51E5               	movf	_power_state& (0+255),w,b
 45517  0099E6  A4D8               	btfss	status,2,c
 45518                           
 45519                           ; BSR set to: 0
 45520                           ;flash.c: 286: {;flash.c: 287: _flash_wakeup();
 45521  0099E8  EC21  F047         	call	__flash_wakeup	;wreg free
 45522                           
 45523                           ;flash.c: 288: };flash.c: 291: status = _flash_get_status();
 45524  0099EC  EC19  F04B         	call	__flash_get_status	;wreg free
 45525  0099F0  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 45526  0099F4  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 45527                           
 45528                           ;flash.c: 294: if(status & 0b0000000010000000)
 45529  0099F8  AE12               	btfss	__flash_is_busy@status,7,c
 45530  0099FA  D002               	goto	l1828
 45531                           
 45532                           ;flash.c: 295: {;flash.c: 297: return 0;
 45533  0099FC  0E00               	movlw	0
 45534                           
 45535                           ;flash.c: 298: }
 45536  0099FE  0012               	return	
 45537  009A00                     l1828:
 45538                           
 45539                           ;flash.c: 299: else;flash.c: 300: {;flash.c: 302: return 1;
 45540  009A00  0E01               	movlw	1
 45541  009A02  0012               	return	
 45542  009A04                     __end_of__flash_is_busy:
 45543                           	opt stack 0
 45544                           tosu	equ	0xFFF
 45545                           tosh	equ	0xFFE
 45546                           tosl	equ	0xFFD
 45547                           pclath	equ	0xFFA
 45548                           tblptru	equ	0xFF8
 45549                           tblptrh	equ	0xFF7
 45550                           tblptrl	equ	0xFF6
 45551                           tablat	equ	0xFF5
 45552                           prodh	equ	0xFF4
 45553                           prodl	equ	0xFF3
 45554                           intcon	equ	0xFF2
 45555                           intcon2	equ	0xFF1
 45556                           intcon3	equ	0xFF0
 45557                           indf0	equ	0xFEF
 45558                           postinc0	equ	0xFEE
 45559                           fsr0h	equ	0xFEA
 45560                           fsr0l	equ	0xFE9
 45561                           wreg	equ	0xFE8
 45562                           indf1	equ	0xFE7
 45563                           postdec1	equ	0xFE5
 45564                           plusw1	equ	0xFE3
 45565                           fsr1h	equ	0xFE2
 45566                           fsr1l	equ	0xFE1
 45567                           indf2	equ	0xFDF
 45568                           postinc2	equ	0xFDE
 45569                           postdec2	equ	0xFDD
 45570                           plusw2	equ	0xFDB
 45571                           fsr2h	equ	0xFDA
 45572                           fsr2l	equ	0xFD9
 45573                           status	equ	0xFD8
 45574                           
 45575 ;; *************** function __flash_wakeup *****************
 45576 ;; Defined at:
 45577 ;;		line 127 in file "flash.c"
 45578 ;; Parameters:    Size  Location     Type
 45579 ;;		None
 45580 ;; Auto vars:     Size  Location     Type
 45581 ;;  command         1    8[COMRAM] unsigned char 
 45582 ;; Return value:  Size  Location     Type
 45583 ;;                  1    wreg      void 
 45584 ;; Registers used:
 45585 ;;		wreg, status,2, status,0, cstack
 45586 ;; Tracked objects:
 45587 ;;		On entry : 0/0
 45588 ;;		On exit  : 0/0
 45589 ;;		Unchanged: 0/0
 45590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45595 ;;Total ram usage:        1 bytes
 45596 ;; Hardware stack levels used:    1
 45597 ;; Hardware stack levels required when called:    1
 45598 ;; This function calls:
 45599 ;;		_spi_tx
 45600 ;; This function is called by:
 45601 ;;		__flash_is_busy
 45602 ;;		_flash_set_power_state
 45603 ;; This function uses a non-reentrant model
 45604 ;;
 45605                           
 45606                           	psect	text230
 45607  008E42                     __ptext230:
 45608                           	opt stack 0
 45609  008E42                     __flash_wakeup:
 45610                           	opt stack 25
 45611                           
 45612                           ;flash.c: 129: uint8_t command;;flash.c: 131: switch(power_state)
 45613                           
 45614                           ;incstack = 0
 45615  008E42  D021               	goto	l1777
 45616  008E44                     
 45617                           ;flash.c: 134: command = 0xAB;
 45618  008E44  0EAB               	movlw	171
 45619  008E46  6E09               	movwf	__flash_wakeup@command,c
 45620                           
 45621                           ;flash.c: 135: spi_tx(&command, 1);
 45622  008E48  0E09               	movlw	low __flash_wakeup@command
 45623  008E4A  6E01               	movwf	spi_tx@data,c
 45624  008E4C  0E00               	movlw	high __flash_wakeup@command
 45625  008E4E  6E02               	movwf	spi_tx@data+1,c
 45626  008E50  0E00               	movlw	0
 45627  008E52  6E04               	movwf	spi_tx@length+1,c
 45628  008E54  0E01               	movlw	1
 45629  008E56  6E03               	movwf	spi_tx@length,c
 45630  008E58  ECF3  F045         	call	_spi_tx	;wreg free
 45631                           
 45632                           ;flash.c: 136: _delay((unsigned long)((35)*(8000000/4000000.0)));
 45633  008E5C  0E17               	movlw	23
 45634  008E5E                     u14097:
 45635  008E5E  2EE8               	decfsz	wreg,f,c
 45636  008E60  D7FE               	bra	u14097
 45637  008E62  F000               	nop	
 45638                           
 45639                           ;flash.c: 137: power_state = FLASH_POWER_STATE_NORMAL;
 45640  008E64  0E00               	movlw	0
 45641  008E66  0100               	movlb	0	; () banked
 45642  008E68  6FE5               	movwf	_power_state& (0+255),b
 45643                           
 45644                           ;flash.c: 138: break;
 45645  008E6A  0012               	return	
 45646  008E6C                     l1780:
 45647                           
 45648                           ; BSR set to: 0
 45649                           ;flash.c: 143: LATDbits.LD7 = 0;
 45650  008E6C  9E8C               	bcf	3980,7,c	;volatile
 45651                           
 45652                           ; BSR set to: 0
 45653                           ;flash.c: 144: _delay((unsigned long)((20)*(8000000/4000000.0)));
 45654  008E6E  0E0D               	movlw	13
 45655  008E70                     u14107:
 45656  008E70  2EE8               	decfsz	wreg,f,c
 45657  008E72  D7FE               	bra	u14107
 45658  008E74  F000               	nop	
 45659                           
 45660                           ;flash.c: 145: LATDbits.LD7 = 1;
 45661  008E76  8E8C               	bsf	3980,7,c	;volatile
 45662                           
 45663                           ;flash.c: 146: _delay((unsigned long)((120)*(8000000/4000000.0)));
 45664  008E78  0E50               	movlw	80
 45665  008E7A                     u14117:
 45666  008E7A  2EE8               	decfsz	wreg,f,c
 45667  008E7C  D7FE               	bra	u14117
 45668                           
 45669                           ;flash.c: 147: power_state = FLASH_POWER_STATE_NORMAL;
 45670  008E7E  0E00               	movlw	0
 45671  008E80  0100               	movlb	0	; () banked
 45672  008E82  6FE5               	movwf	_power_state& (0+255),b
 45673                           
 45674                           ; BSR set to: 0
 45675                           ;flash.c: 149: }
 45676                           
 45677                           ;flash.c: 148: break;
 45678  008E84  0012               	return	
 45679  008E86                     l1777:
 45680                           
 45681                           ; BSR set to: 0
 45682  008E86  0100               	movlb	0	; () banked
 45683  008E88  51E5               	movf	_power_state& (0+255),w,b
 45684                           
 45685                           ; Switch size 1, requested type "space"
 45686                           ; Number of cases is 2, Range of values is 1 to 2
 45687                           ; switch strategies available:
 45688                           ; Name         Instructions Cycles
 45689                           ; simple_byte            7     4 (average)
 45690                           ;	Chosen strategy is simple_byte
 45691  008E8A  0A01               	xorlw	1	; case 1
 45692  008E8C  B4D8               	btfsc	status,2,c
 45693  008E8E  D7DA               	goto	l1778
 45694  008E90  0A03               	xorlw	3	; case 2
 45695  008E92  A4D8               	btfss	status,2,c
 45696  008E94  0012               	return	
 45697  008E96  D7EA               	goto	l1780
 45698  008E98                     __end_of__flash_wakeup:
 45699                           	opt stack 0
 45700                           tosu	equ	0xFFF
 45701                           tosh	equ	0xFFE
 45702                           tosl	equ	0xFFD
 45703                           pclath	equ	0xFFA
 45704                           tblptru	equ	0xFF8
 45705                           tblptrh	equ	0xFF7
 45706                           tblptrl	equ	0xFF6
 45707                           tablat	equ	0xFF5
 45708                           prodh	equ	0xFF4
 45709                           prodl	equ	0xFF3
 45710                           intcon	equ	0xFF2
 45711                           intcon2	equ	0xFF1
 45712                           intcon3	equ	0xFF0
 45713                           indf0	equ	0xFEF
 45714                           postinc0	equ	0xFEE
 45715                           fsr0h	equ	0xFEA
 45716                           fsr0l	equ	0xFE9
 45717                           wreg	equ	0xFE8
 45718                           indf1	equ	0xFE7
 45719                           postdec1	equ	0xFE5
 45720                           plusw1	equ	0xFE3
 45721                           fsr1h	equ	0xFE2
 45722                           fsr1l	equ	0xFE1
 45723                           indf2	equ	0xFDF
 45724                           postinc2	equ	0xFDE
 45725                           postdec2	equ	0xFDD
 45726                           plusw2	equ	0xFDB
 45727                           fsr2h	equ	0xFDA
 45728                           fsr2l	equ	0xFD9
 45729                           status	equ	0xFD8
 45730                           
 45731 ;; *************** function _spi_tx *****************
 45732 ;; Defined at:
 45733 ;;		line 348 in file "spi.c"
 45734 ;; Parameters:    Size  Location     Type
 45735 ;;  data            2    0[COMRAM] PTR unsigned char 
 45736 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 45737 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 45738 ;;  length          2    2[COMRAM] unsigned int 
 45739 ;; Auto vars:     Size  Location     Type
 45740 ;;		None
 45741 ;; Return value:  Size  Location     Type
 45742 ;;                  1    wreg      void 
 45743 ;; Registers used:
 45744 ;;		wreg, status,2, status,0
 45745 ;; Tracked objects:
 45746 ;;		On entry : 0/0
 45747 ;;		On exit  : 0/0
 45748 ;;		Unchanged: 0/0
 45749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45752 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45753 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45754 ;;Total ram usage:        8 bytes
 45755 ;; Hardware stack levels used:    1
 45756 ;; This function calls:
 45757 ;;		Nothing
 45758 ;; This function is called by:
 45759 ;;		__flash_set_page_size
 45760 ;;		__flash_wakeup
 45761 ;;		__flash_copy_page_to_buffer
 45762 ;;		__flash_compare_page_to_buffer
 45763 ;;		__flash_write_page_from_buffer
 45764 ;;		__flash_erase_page
 45765 ;;		_flash_set_power_state
 45766 ;; This function uses a non-reentrant model
 45767 ;;
 45768                           
 45769                           	psect	text231
 45770  008BE6                     __ptext231:
 45771                           	opt stack 0
 45772  008BE6                     _spi_tx:
 45773                           	opt stack 27
 45774                           
 45775                           ;spi.c: 351: DMACON1bits.SSCON1 = 0;
 45776                           
 45777                           ; BSR set to: 0
 45778                           ;incstack = 0
 45779  008BE6  9E88               	bcf	3976,7,c	;volatile
 45780                           
 45781                           ;spi.c: 352: DMACON1bits.SSCON0 = 0;
 45782  008BE8  9C88               	bcf	3976,6,c	;volatile
 45783                           
 45784                           ;spi.c: 354: DMACON1bits.TXINC = 1;
 45785  008BEA  8A88               	bsf	3976,5,c	;volatile
 45786                           
 45787                           ;spi.c: 356: DMACON1bits.RXINC = 0;
 45788  008BEC  9888               	bcf	3976,4,c	;volatile
 45789                           
 45790                           ;spi.c: 358: DMACON1bits.DUPLEX1 = 0;
 45791  008BEE  9688               	bcf	3976,3,c	;volatile
 45792                           
 45793                           ;spi.c: 359: DMACON1bits.DUPLEX0 = 1;
 45794  008BF0  8488               	bsf	3976,2,c	;volatile
 45795                           
 45796                           ;spi.c: 361: DMACON1bits.DLYINTEN = 0;
 45797  008BF2  9288               	bcf	3976,1,c	;volatile
 45798                           
 45799                           ;spi.c: 363: DMACON2bits.DLYCYC = 0b0000;
 45800  008BF4  9886               	bcf	3974,4,c	;volatile
 45801  008BF6  9A86               	bcf	3974,5,c	;volatile
 45802  008BF8  9C86               	bcf	3974,6,c	;volatile
 45803  008BFA  9E86               	bcf	3974,7,c	;volatile
 45804                           
 45805                           ;spi.c: 365: DMACON2bits.INTLVL = 0b0000;
 45806  008BFC  9086               	bcf	3974,0,c	;volatile
 45807  008BFE  9286               	bcf	3974,1,c	;volatile
 45808  008C00  9486               	bcf	3974,2,c	;volatile
 45809  008C02  9686               	bcf	3974,3,c	;volatile
 45810                           
 45811                           ;spi.c: 368: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 45812  008C04  5002               	movf	spi_tx@data+1,w,c
 45813  008C06  6E6A               	movwf	3946,c	;volatile
 45814                           
 45815                           ;spi.c: 369: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 45816  008C08  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 45817                           
 45818                           ;spi.c: 372: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 45819  008C0C  0EFF               	movlw	255
 45820  008C0E  6E05               	movwf	??_spi_tx& (0+255),c
 45821  008C10  0EFF               	movlw	255
 45822  008C12  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 45823  008C14  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 45824  008C18  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 45825  008C1C  5005               	movf	??_spi_tx,w,c
 45826  008C1E  2607               	addwf	??_spi_tx+2,f,c
 45827  008C20  5006               	movf	??_spi_tx+1,w,c
 45828  008C22  2208               	addwfc	??_spi_tx+3,f,c
 45829  008C24  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 45830  008C28  6A08               	clrf	??_spi_tx+3,c
 45831  008C2A  5007               	movf	??_spi_tx+2,w,c
 45832  008C2C  6E66               	movwf	3942,c	;volatile
 45833                           
 45834                           ;spi.c: 373: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 45835  008C2E  0403               	decf	spi_tx@length,w,c
 45836  008C30  6E67               	movwf	3943,c	;volatile
 45837                           
 45838                           ;spi.c: 376: LATDbits.LD7 = 0;
 45839  008C32  9E8C               	bcf	3980,7,c	;volatile
 45840                           
 45841                           ;spi.c: 377: DMACON1bits.DMAEN = 1;
 45842  008C34  8088               	bsf	3976,0,c	;volatile
 45843  008C36  B088               	btfsc	3976,0,c	;volatile
 45844  008C38  D7FE               	goto	l3065
 45845                           
 45846                           ;spi.c: 379: LATDbits.LD7 = 1;
 45847  008C3A  8E8C               	bsf	3980,7,c	;volatile
 45848  008C3C  0012               	return		;funcret
 45849  008C3E                     __end_of_spi_tx:
 45850                           	opt stack 0
 45851                           tosu	equ	0xFFF
 45852                           tosh	equ	0xFFE
 45853                           tosl	equ	0xFFD
 45854                           pclath	equ	0xFFA
 45855                           tblptru	equ	0xFF8
 45856                           tblptrh	equ	0xFF7
 45857                           tblptrl	equ	0xFF6
 45858                           tablat	equ	0xFF5
 45859                           prodh	equ	0xFF4
 45860                           prodl	equ	0xFF3
 45861                           intcon	equ	0xFF2
 45862                           intcon2	equ	0xFF1
 45863                           intcon3	equ	0xFF0
 45864                           indf0	equ	0xFEF
 45865                           postinc0	equ	0xFEE
 45866                           fsr0h	equ	0xFEA
 45867                           fsr0l	equ	0xFE9
 45868                           wreg	equ	0xFE8
 45869                           indf1	equ	0xFE7
 45870                           postdec1	equ	0xFE5
 45871                           plusw1	equ	0xFE3
 45872                           fsr1h	equ	0xFE2
 45873                           fsr1l	equ	0xFE1
 45874                           indf2	equ	0xFDF
 45875                           postinc2	equ	0xFDE
 45876                           postdec2	equ	0xFDD
 45877                           plusw2	equ	0xFDB
 45878                           fsr2h	equ	0xFDA
 45879                           fsr2l	equ	0xFD9
 45880                           status	equ	0xFD8
 45881                           
 45882 ;; *************** function __flash_get_status *****************
 45883 ;; Defined at:
 45884 ;;		line 116 in file "flash.c"
 45885 ;; Parameters:    Size  Location     Type
 45886 ;;		None
 45887 ;; Auto vars:     Size  Location     Type
 45888 ;;  status          2   15[COMRAM] unsigned int 
 45889 ;;  command         1   14[COMRAM] unsigned char 
 45890 ;; Return value:  Size  Location     Type
 45891 ;;                  2   12[COMRAM] unsigned int 
 45892 ;; Registers used:
 45893 ;;		wreg, status,2, status,0, cstack
 45894 ;; Tracked objects:
 45895 ;;		On entry : 0/0
 45896 ;;		On exit  : 0/0
 45897 ;;		Unchanged: 0/0
 45898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45900 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45902 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45903 ;;Total ram usage:        5 bytes
 45904 ;; Hardware stack levels used:    1
 45905 ;; Hardware stack levels required when called:    1
 45906 ;; This function calls:
 45907 ;;		_spi_tx_rx
 45908 ;; This function is called by:
 45909 ;;		__flash_compare_page_to_buffer
 45910 ;;		__flash_is_busy
 45911 ;; This function uses a non-reentrant model
 45912 ;;
 45913                           
 45914                           	psect	text232
 45915  009632                     __ptext232:
 45916                           	opt stack 0
 45917  009632                     __flash_get_status:
 45918                           	opt stack 25
 45919                           
 45920                           ;flash.c: 120: uint8_t command = 0xD7;
 45921                           
 45922                           ;incstack = 0
 45923  009632  0ED7               	movlw	215
 45924  009634  6E0F               	movwf	__flash_get_status@command,c
 45925                           
 45926                           ;flash.c: 121: uint16_t status;;flash.c: 122: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 45927  009636  0E0F               	movlw	low __flash_get_status@command
 45928  009638  6E01               	movwf	spi_tx_rx@command,c
 45929  00963A  0E00               	movlw	high __flash_get_status@command
 45930  00963C  6E02               	movwf	spi_tx_rx@command+1,c
 45931  00963E  0E00               	movlw	0
 45932  009640  6E04               	movwf	spi_tx_rx@command_length+1,c
 45933  009642  0E01               	movlw	1
 45934  009644  6E03               	movwf	spi_tx_rx@command_length,c
 45935  009646  0E10               	movlw	low __flash_get_status@status
 45936  009648  6E05               	movwf	spi_tx_rx@data,c
 45937  00964A  0E00               	movlw	high __flash_get_status@status
 45938  00964C  6E06               	movwf	spi_tx_rx@data+1,c
 45939  00964E  0E00               	movlw	0
 45940  009650  6E08               	movwf	spi_tx_rx@data_length+1,c
 45941  009652  0E02               	movlw	2
 45942  009654  6E07               	movwf	spi_tx_rx@data_length,c
 45943  009656  EC3C  F03F         	call	_spi_tx_rx	;wreg free
 45944                           
 45945                           ;flash.c: 123: return status;
 45946  00965A  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 45947  00965E  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 45948  009662  0012               	return	
 45949  009664                     __end_of__flash_get_status:
 45950                           	opt stack 0
 45951                           tosu	equ	0xFFF
 45952                           tosh	equ	0xFFE
 45953                           tosl	equ	0xFFD
 45954                           pclath	equ	0xFFA
 45955                           tblptru	equ	0xFF8
 45956                           tblptrh	equ	0xFF7
 45957                           tblptrl	equ	0xFF6
 45958                           tablat	equ	0xFF5
 45959                           prodh	equ	0xFF4
 45960                           prodl	equ	0xFF3
 45961                           intcon	equ	0xFF2
 45962                           intcon2	equ	0xFF1
 45963                           intcon3	equ	0xFF0
 45964                           indf0	equ	0xFEF
 45965                           postinc0	equ	0xFEE
 45966                           fsr0h	equ	0xFEA
 45967                           fsr0l	equ	0xFE9
 45968                           wreg	equ	0xFE8
 45969                           indf1	equ	0xFE7
 45970                           postdec1	equ	0xFE5
 45971                           plusw1	equ	0xFE3
 45972                           fsr1h	equ	0xFE2
 45973                           fsr1l	equ	0xFE1
 45974                           indf2	equ	0xFDF
 45975                           postinc2	equ	0xFDE
 45976                           postdec2	equ	0xFDD
 45977                           plusw2	equ	0xFDB
 45978                           fsr2h	equ	0xFDA
 45979                           fsr2l	equ	0xFD9
 45980                           status	equ	0xFD8
 45981                           
 45982 ;; *************** function _spi_tx_rx *****************
 45983 ;; Defined at:
 45984 ;;		line 439 in file "spi.c"
 45985 ;; Parameters:    Size  Location     Type
 45986 ;;  command         2    0[COMRAM] PTR unsigned char 
 45987 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 45988 ;;  command_leng    2    2[COMRAM] unsigned int 
 45989 ;;  data            2    4[COMRAM] PTR unsigned char 
 45990 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 45991 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 45992 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 45993 ;;		 -> buffer(512), _flash_get_status@status(2), msd_buffer(512), RAM(3759), 
 45994 ;;  data_length     2    6[COMRAM] unsigned int 
 45995 ;; Auto vars:     Size  Location     Type
 45996 ;;		None
 45997 ;; Return value:  Size  Location     Type
 45998 ;;                  1    wreg      void 
 45999 ;; Registers used:
 46000 ;;		wreg, status,2, status,0
 46001 ;; Tracked objects:
 46002 ;;		On entry : 0/0
 46003 ;;		On exit  : 0/0
 46004 ;;		Unchanged: 0/0
 46005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46006 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46008 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46009 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46010 ;;Total ram usage:       12 bytes
 46011 ;; Hardware stack levels used:    1
 46012 ;; This function calls:
 46013 ;;		Nothing
 46014 ;; This function is called by:
 46015 ;;		__flash_get_status
 46016 ;;		__flash_partial_read
 46017 ;;		__flash_buffer_read
 46018 ;; This function uses a non-reentrant model
 46019 ;;
 46020                           
 46021                           	psect	text233
 46022  007E78                     __ptext233:
 46023                           	opt stack 0
 46024  007E78                     _spi_tx_rx:
 46025                           	opt stack 25
 46026                           
 46027                           ;spi.c: 442: DMACON1bits.SSCON1 = 0;
 46028                           
 46029                           ;incstack = 0
 46030  007E78  9E88               	bcf	3976,7,c	;volatile
 46031                           
 46032                           ;spi.c: 443: DMACON1bits.SSCON0 = 0;
 46033  007E7A  9C88               	bcf	3976,6,c	;volatile
 46034                           
 46035                           ;spi.c: 445: DMACON1bits.TXINC = 1;
 46036  007E7C  8A88               	bsf	3976,5,c	;volatile
 46037                           
 46038                           ;spi.c: 447: DMACON1bits.RXINC = 0;
 46039  007E7E  9888               	bcf	3976,4,c	;volatile
 46040                           
 46041                           ;spi.c: 449: DMACON1bits.DUPLEX1 = 0;
 46042  007E80  9688               	bcf	3976,3,c	;volatile
 46043                           
 46044                           ;spi.c: 450: DMACON1bits.DUPLEX0 = 1;
 46045  007E82  8488               	bsf	3976,2,c	;volatile
 46046                           
 46047                           ;spi.c: 452: DMACON1bits.DLYINTEN = 0;
 46048  007E84  9288               	bcf	3976,1,c	;volatile
 46049                           
 46050                           ;spi.c: 454: DMACON2bits.DLYCYC = 0b0000;
 46051  007E86  9886               	bcf	3974,4,c	;volatile
 46052  007E88  9A86               	bcf	3974,5,c	;volatile
 46053  007E8A  9C86               	bcf	3974,6,c	;volatile
 46054  007E8C  9E86               	bcf	3974,7,c	;volatile
 46055                           
 46056                           ;spi.c: 456: DMACON2bits.INTLVL = 0b0000;
 46057  007E8E  9086               	bcf	3974,0,c	;volatile
 46058  007E90  9286               	bcf	3974,1,c	;volatile
 46059  007E92  9486               	bcf	3974,2,c	;volatile
 46060  007E94  9686               	bcf	3974,3,c	;volatile
 46061                           
 46062                           ;spi.c: 459: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 46063  007E96  5002               	movf	spi_tx_rx@command+1,w,c
 46064  007E98  6E6A               	movwf	3946,c	;volatile
 46065                           
 46066                           ;spi.c: 460: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 46067  007E9A  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 46068                           
 46069                           ;spi.c: 463: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 46070  007E9E  0EFF               	movlw	255
 46071  007EA0  6E09               	movwf	??_spi_tx_rx& (0+255),c
 46072  007EA2  0EFF               	movlw	255
 46073  007EA4  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 46074  007EA6  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 46075  007EAA  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 46076  007EAE  5009               	movf	??_spi_tx_rx,w,c
 46077  007EB0  260B               	addwf	??_spi_tx_rx+2,f,c
 46078  007EB2  500A               	movf	??_spi_tx_rx+1,w,c
 46079  007EB4  220C               	addwfc	??_spi_tx_rx+3,f,c
 46080  007EB6  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 46081  007EBA  6A0C               	clrf	??_spi_tx_rx+3,c
 46082  007EBC  500B               	movf	??_spi_tx_rx+2,w,c
 46083  007EBE  6E66               	movwf	3942,c	;volatile
 46084                           
 46085                           ;spi.c: 464: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 46086  007EC0  0403               	decf	spi_tx_rx@command_length,w,c
 46087  007EC2  6E67               	movwf	3943,c	;volatile
 46088                           
 46089                           ;spi.c: 467: LATDbits.LD7 = 0;
 46090  007EC4  9E8C               	bcf	3980,7,c	;volatile
 46091                           
 46092                           ;spi.c: 470: DMACON1bits.DMAEN = 1;
 46093  007EC6  8088               	bsf	3976,0,c	;volatile
 46094  007EC8  B088               	btfsc	3976,0,c	;volatile
 46095  007ECA  D7FE               	goto	l3080
 46096                           
 46097                           ;spi.c: 474: DMACON1bits.TXINC = 0;
 46098  007ECC  9A88               	bcf	3976,5,c	;volatile
 46099                           
 46100                           ;spi.c: 476: DMACON1bits.RXINC = 1;
 46101  007ECE  8888               	bsf	3976,4,c	;volatile
 46102                           
 46103                           ;spi.c: 478: DMACON1bits.DUPLEX1 = 0;
 46104  007ED0  9688               	bcf	3976,3,c	;volatile
 46105                           
 46106                           ;spi.c: 479: DMACON1bits.DUPLEX0 = 0;
 46107  007ED2  9488               	bcf	3976,2,c	;volatile
 46108                           
 46109                           ;spi.c: 482: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 46110  007ED4  5006               	movf	spi_tx_rx@data+1,w,c
 46111  007ED6  6E68               	movwf	3944,c	;volatile
 46112                           
 46113                           ;spi.c: 483: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 46114  007ED8  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 46115                           
 46116                           ;spi.c: 486: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 46117  007EDC  0EFF               	movlw	255
 46118  007EDE  6E09               	movwf	??_spi_tx_rx& (0+255),c
 46119  007EE0  0EFF               	movlw	255
 46120  007EE2  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 46121  007EE4  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 46122  007EE8  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 46123  007EEC  5009               	movf	??_spi_tx_rx,w,c
 46124  007EEE  260B               	addwf	??_spi_tx_rx+2,f,c
 46125  007EF0  500A               	movf	??_spi_tx_rx+1,w,c
 46126  007EF2  220C               	addwfc	??_spi_tx_rx+3,f,c
 46127  007EF4  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 46128  007EF8  6A0C               	clrf	??_spi_tx_rx+3,c
 46129  007EFA  500B               	movf	??_spi_tx_rx+2,w,c
 46130  007EFC  6E66               	movwf	3942,c	;volatile
 46131                           
 46132                           ;spi.c: 487: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 46133  007EFE  0407               	decf	spi_tx_rx@data_length,w,c
 46134  007F00  6E67               	movwf	3943,c	;volatile
 46135                           
 46136                           ;spi.c: 490: DMACON1bits.DMAEN = 1;
 46137  007F02  8088               	bsf	3976,0,c	;volatile
 46138  007F04  B088               	btfsc	3976,0,c	;volatile
 46139  007F06  D7FE               	goto	l3083
 46140                           
 46141                           ;spi.c: 494: LATDbits.LD7 = 1;
 46142  007F08  8E8C               	bsf	3980,7,c	;volatile
 46143  007F0A  0012               	return		;funcret
 46144  007F0C                     __end_of_spi_tx_rx:
 46145                           	opt stack 0
 46146                           tosu	equ	0xFFF
 46147                           tosh	equ	0xFFE
 46148                           tosl	equ	0xFFD
 46149                           pclath	equ	0xFFA
 46150                           tblptru	equ	0xFF8
 46151                           tblptrh	equ	0xFF7
 46152                           tblptrl	equ	0xFF6
 46153                           tablat	equ	0xFF5
 46154                           prodh	equ	0xFF4
 46155                           prodl	equ	0xFF3
 46156                           intcon	equ	0xFF2
 46157                           intcon2	equ	0xFF1
 46158                           intcon3	equ	0xFF0
 46159                           indf0	equ	0xFEF
 46160                           postinc0	equ	0xFEE
 46161                           fsr0h	equ	0xFEA
 46162                           fsr0l	equ	0xFE9
 46163                           wreg	equ	0xFE8
 46164                           indf1	equ	0xFE7
 46165                           postdec1	equ	0xFE5
 46166                           plusw1	equ	0xFE3
 46167                           fsr1h	equ	0xFE2
 46168                           fsr1l	equ	0xFE1
 46169                           indf2	equ	0xFDF
 46170                           postinc2	equ	0xFDE
 46171                           postdec2	equ	0xFDD
 46172                           plusw2	equ	0xFDB
 46173                           fsr2h	equ	0xFDA
 46174                           fsr2l	equ	0xFD9
 46175                           status	equ	0xFD8
 46176                           
 46177 ;; *************** function __sector_from_file_number *****************
 46178 ;; Defined at:
 46179 ;;		line 52 in file "fat16.c"
 46180 ;; Parameters:    Size  Location     Type
 46181 ;;  file_number     1    wreg     unsigned char 
 46182 ;; Auto vars:     Size  Location     Type
 46183 ;;  file_number     1    2[COMRAM] unsigned char 
 46184 ;;  sector          2    3[COMRAM] unsigned int 
 46185 ;; Return value:  Size  Location     Type
 46186 ;;                  2    0[COMRAM] unsigned int 
 46187 ;; Registers used:
 46188 ;;		wreg, status,2, status,0
 46189 ;; Tracked objects:
 46190 ;;		On entry : 0/0
 46191 ;;		On exit  : 0/0
 46192 ;;		Unchanged: 0/0
 46193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46195 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46197 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46198 ;;Total ram usage:        5 bytes
 46199 ;; Hardware stack levels used:    1
 46200 ;; This function calls:
 46201 ;;		Nothing
 46202 ;; This function is called by:
 46203 ;;		__root_is_available
 46204 ;;		__write_root
 46205 ;;		__delete_root
 46206 ;;		__get_first_cluster
 46207 ;;		_fat_get_file_size
 46208 ;;		_fat_get_file_information
 46209 ;; This function uses a non-reentrant model
 46210 ;;
 46211                           
 46212                           	psect	text234
 46213  0097CE                     __ptext234:
 46214                           	opt stack 0
 46215  0097CE                     __sector_from_file_number:
 46216                           	opt stack 27
 46217                           
 46218                           ;incstack = 0
 46219                           ;__sector_from_file_number@file_number stored from wreg
 46220  0097CE  6E03               	movwf	__sector_from_file_number@file_number,c
 46221                           
 46222                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 46223  0097D0  C003  F004         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 46224  0097D4  6A05               	clrf	__sector_from_file_number@sector+1,c
 46225                           
 46226                           ;fat16.c: 56: sector >>= 4;
 46227  0097D6  3A04               	swapf	__sector_from_file_number@sector,f,c
 46228  0097D8  3A05               	swapf	__sector_from_file_number@sector+1,f,c
 46229  0097DA  0E0F               	movlw	15
 46230  0097DC  1604               	andwf	__sector_from_file_number@sector,f,c
 46231  0097DE  5005               	movf	__sector_from_file_number@sector+1,w,c
 46232  0097E0  0BF0               	andlw	240
 46233  0097E2  1204               	iorwf	__sector_from_file_number@sector,f,c
 46234  0097E4  0E0F               	movlw	15
 46235  0097E6  1605               	andwf	__sector_from_file_number@sector+1,f,c
 46236                           
 46237                           ;fat16.c: 57: sector += 34;
 46238  0097E8  0E22               	movlw	34
 46239  0097EA  2604               	addwf	__sector_from_file_number@sector,f,c
 46240  0097EC  0E00               	movlw	0
 46241  0097EE  2205               	addwfc	__sector_from_file_number@sector+1,f,c
 46242                           
 46243                           ;fat16.c: 58: return sector;
 46244  0097F0  C004  F001         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 46245  0097F4  C005  F002         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 46246  0097F8  0012               	return	
 46247  0097FA                     __end_of__sector_from_file_number:
 46248                           	opt stack 0
 46249                           tosu	equ	0xFFF
 46250                           tosh	equ	0xFFE
 46251                           tosl	equ	0xFFD
 46252                           pclath	equ	0xFFA
 46253                           tblptru	equ	0xFF8
 46254                           tblptrh	equ	0xFF7
 46255                           tblptrl	equ	0xFF6
 46256                           tablat	equ	0xFF5
 46257                           prodh	equ	0xFF4
 46258                           prodl	equ	0xFF3
 46259                           intcon	equ	0xFF2
 46260                           intcon2	equ	0xFF1
 46261                           intcon3	equ	0xFF0
 46262                           indf0	equ	0xFEF
 46263                           postinc0	equ	0xFEE
 46264                           fsr0h	equ	0xFEA
 46265                           fsr0l	equ	0xFE9
 46266                           wreg	equ	0xFE8
 46267                           indf1	equ	0xFE7
 46268                           postdec1	equ	0xFE5
 46269                           plusw1	equ	0xFE3
 46270                           fsr1h	equ	0xFE2
 46271                           fsr1l	equ	0xFE1
 46272                           indf2	equ	0xFDF
 46273                           postinc2	equ	0xFDE
 46274                           postdec2	equ	0xFDD
 46275                           plusw2	equ	0xFDB
 46276                           fsr2h	equ	0xFDA
 46277                           fsr2l	equ	0xFD9
 46278                           status	equ	0xFD8
 46279                           
 46280 ;; *************** function __offset_from_file_number *****************
 46281 ;; Defined at:
 46282 ;;		line 61 in file "fat16.c"
 46283 ;; Parameters:    Size  Location     Type
 46284 ;;  file_number     1    wreg     unsigned char 
 46285 ;; Auto vars:     Size  Location     Type
 46286 ;;  file_number     1    2[COMRAM] unsigned char 
 46287 ;;  offset          2    3[COMRAM] unsigned int 
 46288 ;; Return value:  Size  Location     Type
 46289 ;;                  2    0[COMRAM] unsigned int 
 46290 ;; Registers used:
 46291 ;;		wreg, status,2, status,0
 46292 ;; Tracked objects:
 46293 ;;		On entry : 0/0
 46294 ;;		On exit  : 0/0
 46295 ;;		Unchanged: 0/0
 46296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46298 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46300 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46301 ;;Total ram usage:        5 bytes
 46302 ;; Hardware stack levels used:    1
 46303 ;; This function calls:
 46304 ;;		Nothing
 46305 ;; This function is called by:
 46306 ;;		__root_is_available
 46307 ;;		__write_root
 46308 ;;		__delete_root
 46309 ;;		__get_first_cluster
 46310 ;;		_fat_get_file_size
 46311 ;;		_fat_get_file_information
 46312 ;; This function uses a non-reentrant model
 46313 ;;
 46314                           
 46315                           	psect	text235
 46316  0098E6                     __ptext235:
 46317                           	opt stack 0
 46318  0098E6                     __offset_from_file_number:
 46319                           	opt stack 26
 46320                           
 46321                           ;incstack = 0
 46322                           ;__offset_from_file_number@file_number stored from wreg
 46323  0098E6  6E03               	movwf	__offset_from_file_number@file_number,c
 46324                           
 46325                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 46326  0098E8  C003  F004         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 46327  0098EC  6A05               	clrf	__offset_from_file_number@offset+1,c
 46328                           
 46329                           ;fat16.c: 65: offset &= 0b1111;
 46330  0098EE  0E0F               	movlw	15
 46331  0098F0  1604               	andwf	__offset_from_file_number@offset,f,c
 46332  0098F2  0E00               	movlw	0
 46333  0098F4  1605               	andwf	__offset_from_file_number@offset+1,f,c
 46334                           
 46335                           ;fat16.c: 66: offset <<= 5;
 46336  0098F6  0E05               	movlw	5
 46337  0098F8                     u7565:
 46338  0098F8  90D8               	bcf	status,0,c
 46339  0098FA  3604               	rlcf	__offset_from_file_number@offset,f,c
 46340  0098FC  3605               	rlcf	__offset_from_file_number@offset+1,f,c
 46341  0098FE  2EE8               	decfsz	wreg,f,c
 46342  009900  D7FB               	goto	u7565
 46343                           
 46344                           ;fat16.c: 67: return offset;
 46345  009902  C004  F001         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 46346  009906  C005  F002         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 46347  00990A  0012               	return	
 46348  00990C                     __end_of__offset_from_file_number:
 46349                           	opt stack 0
 46350                           tosu	equ	0xFFF
 46351                           tosh	equ	0xFFE
 46352                           tosl	equ	0xFFD
 46353                           pclath	equ	0xFFA
 46354                           tblptru	equ	0xFF8
 46355                           tblptrh	equ	0xFF7
 46356                           tblptrl	equ	0xFF6
 46357                           tablat	equ	0xFF5
 46358                           prodh	equ	0xFF4
 46359                           prodl	equ	0xFF3
 46360                           intcon	equ	0xFF2
 46361                           intcon2	equ	0xFF1
 46362                           intcon3	equ	0xFF0
 46363                           indf0	equ	0xFEF
 46364                           postinc0	equ	0xFEE
 46365                           fsr0h	equ	0xFEA
 46366                           fsr0l	equ	0xFE9
 46367                           wreg	equ	0xFE8
 46368                           indf1	equ	0xFE7
 46369                           postdec1	equ	0xFE5
 46370                           plusw1	equ	0xFE3
 46371                           fsr1h	equ	0xFE2
 46372                           fsr1l	equ	0xFE1
 46373                           indf2	equ	0xFDF
 46374                           postinc2	equ	0xFDE
 46375                           postdec2	equ	0xFDD
 46376                           plusw2	equ	0xFDB
 46377                           fsr2h	equ	0xFDA
 46378                           fsr2l	equ	0xFD9
 46379                           status	equ	0xFD8
 46380                           
 46381 ;; *************** function _USBTransferOnePacket *****************
 46382 ;; Defined at:
 46383 ;;		line 995 in file "usb_device.c"
 46384 ;; Parameters:    Size  Location     Type
 46385 ;;  ep              1    wreg     unsigned char 
 46386 ;;  dir             1    0[COMRAM] unsigned char 
 46387 ;;  data            2    1[COMRAM] PTR unsigned char 
 46388 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 46389 ;;		 -> msd_cbw(31), NULL(0), 
 46390 ;;  len             1    3[COMRAM] unsigned char 
 46391 ;; Auto vars:     Size  Location     Type
 46392 ;;  ep              1    8[COMRAM] unsigned char 
 46393 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 46394 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46395 ;; Return value:  Size  Location     Type
 46396 ;;                  2    0[COMRAM] PTR void 
 46397 ;; Registers used:
 46398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46399 ;; Tracked objects:
 46400 ;;		On entry : 0/0
 46401 ;;		On exit  : 0/0
 46402 ;;		Unchanged: 0/0
 46403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46405 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46406 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46407 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46408 ;;Total ram usage:       11 bytes
 46409 ;; Hardware stack levels used:    1
 46410 ;; This function calls:
 46411 ;;		Nothing
 46412 ;; This function is called by:
 46413 ;;		_USBMSDInit
 46414 ;;		_USBCheckMSDRequest
 46415 ;;		_MSDTasks
 46416 ;;		_MSDProcessCommandMediaPresent
 46417 ;;		_MSDReadHandler
 46418 ;;		_MSDWriteHandler
 46419 ;;		_MSDTransferTerminated
 46420 ;;		_APP_DeviceCustomHIDInitialize
 46421 ;;		_APP_DeviceCustomHIDTasks
 46422 ;; This function uses a non-reentrant model
 46423 ;;
 46424                           
 46425                           	psect	text236
 46426  005A76                     __ptext236:
 46427                           	opt stack 0
 46428  005A76                     _USBTransferOnePacket:
 46429                           	opt stack 27
 46430                           
 46431                           ;incstack = 0
 46432                           ;USBTransferOnePacket@ep stored from wreg
 46433  005A76  6E09               	movwf	USBTransferOnePacket@ep,c
 46434                           
 46435                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 46436  005A78  5001               	movf	USBTransferOnePacket@dir,w,c
 46437  005A7A  B4D8               	btfsc	status,2,c
 46438  005A7C  D007               	goto	l183
 46439                           
 46440                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 46441  005A7E  5009               	movf	USBTransferOnePacket@ep,w,c
 46442  005A80  0D02               	mullw	2
 46443  005A82  0ED1               	movlw	low _pBDTEntryIn
 46444  005A84  24F3               	addwf	prodl,w,c
 46445  005A86  6ED9               	movwf	fsr2l,c
 46446  005A88  0E00               	movlw	high _pBDTEntryIn
 46447  005A8A  D006               	goto	L48
 46448  005A8C                     l183:
 46449                           
 46450                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 46451  005A8C  5009               	movf	USBTransferOnePacket@ep,w,c
 46452  005A8E  0D02               	mullw	2
 46453  005A90  0E40               	movlw	low _pBDTEntryOut
 46454  005A92  24F3               	addwf	prodl,w,c
 46455  005A94  6ED9               	movwf	fsr2l,c
 46456  005A96  0E01               	movlw	high _pBDTEntryOut
 46457  005A98                     L48:
 46458  005A98  20F4               	addwfc	prodh,w,c
 46459  005A9A  6EDA               	movwf	fsr2h,c
 46460  005A9C  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 46461  005AA0  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 46462                           
 46463                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 46464  005AA4  500A               	movf	USBTransferOnePacket@handle,w,c
 46465  005AA6  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 46466  005AA8  A4D8               	btfss	status,2,c
 46467  005AAA  D005               	goto	l185
 46468                           
 46469                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 46470  005AAC  0E00               	movlw	0
 46471  005AAE  6E01               	movwf	?_USBTransferOnePacket,c
 46472  005AB0  0E00               	movlw	0
 46473  005AB2  6E02               	movwf	?_USBTransferOnePacket+1,c
 46474  005AB4  0012               	return	
 46475  005AB6                     l185:
 46476                           
 46477                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 46478  005AB6  EE20 F002          	lfsr	2,2
 46479  005ABA  500A               	movf	USBTransferOnePacket@handle,w,c
 46480  005ABC  26D9               	addwf	fsr2l,f,c
 46481  005ABE  500B               	movf	USBTransferOnePacket@handle+1,w,c
 46482  005AC0  22DA               	addwfc	fsr2h,f,c
 46483  005AC2  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 46484  005AC6  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 46485                           
 46486                           ;usb_device.c: 1030: handle->CNT = len;
 46487  005ACA  EE20 F001          	lfsr	2,1
 46488  005ACE  500A               	movf	USBTransferOnePacket@handle,w,c
 46489  005AD0  26D9               	addwf	fsr2l,f,c
 46490  005AD2  500B               	movf	USBTransferOnePacket@handle+1,w,c
 46491  005AD4  22DA               	addwfc	fsr2h,f,c
 46492  005AD6  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 46493                           
 46494                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 46495  005ADA  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46496  005ADE  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46497  005AE2  0E40               	movlw	64
 46498  005AE4  16DF               	andwf	indf2,f,c
 46499                           
 46500                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 46501  005AE6  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46502  005AEA  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46503  005AEE  0E00               	movlw	0
 46504  005AF0  86DB               	bsf	plusw2,3,c
 46505                           
 46506                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 46507  005AF2  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46508  005AF6  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46509  005AFA  0E00               	movlw	0
 46510  005AFC  8EDB               	bsf	plusw2,7,c
 46511                           
 46512                           ;usb_device.c: 1036: if(dir != 0)
 46513  005AFE  5001               	movf	USBTransferOnePacket@dir,w,c
 46514  005B00  B4D8               	btfsc	status,2,c
 46515  005B02  D018               	goto	l187
 46516                           
 46517                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 46518  005B04  5009               	movf	USBTransferOnePacket@ep,w,c
 46519  005B06  0D02               	mullw	2
 46520  005B08  0ED1               	movlw	low _pBDTEntryIn
 46521  005B0A  24F3               	addwf	prodl,w,c
 46522  005B0C  6ED9               	movwf	fsr2l,c
 46523  005B0E  0E00               	movlw	high _pBDTEntryIn
 46524  005B10  20F4               	addwfc	prodh,w,c
 46525  005B12  6EDA               	movwf	fsr2h,c
 46526  005B14  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 46527  005B18  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 46528  005B1C  0E04               	movlw	4
 46529  005B1E  1805               	xorwf	??_USBTransferOnePacket,w,c
 46530  005B20  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 46531  005B22  5006               	movf	??_USBTransferOnePacket+1,w,c
 46532  005B24  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 46533  005B26  5009               	movf	USBTransferOnePacket@ep,w,c
 46534  005B28  0D02               	mullw	2
 46535  005B2A  0ED1               	movlw	low _pBDTEntryIn
 46536  005B2C  24F3               	addwf	prodl,w,c
 46537  005B2E  6ED9               	movwf	fsr2l,c
 46538  005B30  0E00               	movlw	high _pBDTEntryIn
 46539  005B32  D017               	goto	L49
 46540  005B34                     l187:
 46541                           
 46542                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 46543  005B34  5009               	movf	USBTransferOnePacket@ep,w,c
 46544  005B36  0D02               	mullw	2
 46545  005B38  0E40               	movlw	low _pBDTEntryOut
 46546  005B3A  24F3               	addwf	prodl,w,c
 46547  005B3C  6ED9               	movwf	fsr2l,c
 46548  005B3E  0E01               	movlw	high _pBDTEntryOut
 46549  005B40  20F4               	addwfc	prodh,w,c
 46550  005B42  6EDA               	movwf	fsr2h,c
 46551  005B44  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 46552  005B48  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 46553  005B4C  0E04               	movlw	4
 46554  005B4E  1805               	xorwf	??_USBTransferOnePacket,w,c
 46555  005B50  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 46556  005B52  5006               	movf	??_USBTransferOnePacket+1,w,c
 46557  005B54  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 46558  005B56  5009               	movf	USBTransferOnePacket@ep,w,c
 46559  005B58  0D02               	mullw	2
 46560  005B5A  0E40               	movlw	low _pBDTEntryOut
 46561  005B5C  24F3               	addwf	prodl,w,c
 46562  005B5E  6ED9               	movwf	fsr2l,c
 46563  005B60  0E01               	movlw	high _pBDTEntryOut
 46564  005B62                     L49:
 46565  005B62  20F4               	addwfc	prodh,w,c
 46566  005B64  6EDA               	movwf	fsr2h,c
 46567  005B66  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 46568  005B6A  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 46569                           
 46570                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 46571  005B6E  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 46572  005B72  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 46573  005B76  0012               	return	
 46574  005B78                     __end_of_USBTransferOnePacket:
 46575                           	opt stack 0
 46576                           tosu	equ	0xFFF
 46577                           tosh	equ	0xFFE
 46578                           tosl	equ	0xFFD
 46579                           pclath	equ	0xFFA
 46580                           tblptru	equ	0xFF8
 46581                           tblptrh	equ	0xFF7
 46582                           tblptrl	equ	0xFF6
 46583                           tablat	equ	0xFF5
 46584                           prodh	equ	0xFF4
 46585                           prodl	equ	0xFF3
 46586                           intcon	equ	0xFF2
 46587                           intcon2	equ	0xFF1
 46588                           intcon3	equ	0xFF0
 46589                           indf0	equ	0xFEF
 46590                           postinc0	equ	0xFEE
 46591                           fsr0h	equ	0xFEA
 46592                           fsr0l	equ	0xFE9
 46593                           wreg	equ	0xFE8
 46594                           indf1	equ	0xFE7
 46595                           postdec1	equ	0xFE5
 46596                           plusw1	equ	0xFE3
 46597                           fsr1h	equ	0xFE2
 46598                           fsr1l	equ	0xFE1
 46599                           indf2	equ	0xFDF
 46600                           postinc2	equ	0xFDE
 46601                           postdec2	equ	0xFDD
 46602                           plusw2	equ	0xFDB
 46603                           fsr2h	equ	0xFDA
 46604                           fsr2l	equ	0xFD9
 46605                           status	equ	0xFD8
 46606                           tosu	equ	0xFFF
 46607                           tosh	equ	0xFFE
 46608                           tosl	equ	0xFFD
 46609                           pclath	equ	0xFFA
 46610                           tblptru	equ	0xFF8
 46611                           tblptrh	equ	0xFF7
 46612                           tblptrl	equ	0xFF6
 46613                           tablat	equ	0xFF5
 46614                           prodh	equ	0xFF4
 46615                           prodl	equ	0xFF3
 46616                           intcon	equ	0xFF2
 46617                           intcon2	equ	0xFF1
 46618                           intcon3	equ	0xFF0
 46619                           indf0	equ	0xFEF
 46620                           postinc0	equ	0xFEE
 46621                           fsr0h	equ	0xFEA
 46622                           fsr0l	equ	0xFE9
 46623                           wreg	equ	0xFE8
 46624                           indf1	equ	0xFE7
 46625                           postdec1	equ	0xFE5
 46626                           plusw1	equ	0xFE3
 46627                           fsr1h	equ	0xFE2
 46628                           fsr1l	equ	0xFE1
 46629                           indf2	equ	0xFDF
 46630                           postinc2	equ	0xFDE
 46631                           postdec2	equ	0xFDD
 46632                           plusw2	equ	0xFDB
 46633                           fsr2h	equ	0xFDA
 46634                           fsr2l	equ	0xFD9
 46635                           status	equ	0xFD8
 46636                           
 46637                           	psect	text237
 46638  000000                     __ptext237:
 46639                           	opt stack 0
 46640                           tosu	equ	0xFFF
 46641                           tosh	equ	0xFFE
 46642                           tosl	equ	0xFFD
 46643                           pclath	equ	0xFFA
 46644                           tblptru	equ	0xFF8
 46645                           tblptrh	equ	0xFF7
 46646                           tblptrl	equ	0xFF6
 46647                           tablat	equ	0xFF5
 46648                           prodh	equ	0xFF4
 46649                           prodl	equ	0xFF3
 46650                           intcon	equ	0xFF2
 46651                           intcon2	equ	0xFF1
 46652                           intcon3	equ	0xFF0
 46653                           indf0	equ	0xFEF
 46654                           postinc0	equ	0xFEE
 46655                           fsr0h	equ	0xFEA
 46656                           fsr0l	equ	0xFE9
 46657                           wreg	equ	0xFE8
 46658                           indf1	equ	0xFE7
 46659                           postdec1	equ	0xFE5
 46660                           plusw1	equ	0xFE3
 46661                           fsr1h	equ	0xFE2
 46662                           fsr1l	equ	0xFE1
 46663                           indf2	equ	0xFDF
 46664                           postinc2	equ	0xFDE
 46665                           postdec2	equ	0xFDD
 46666                           plusw2	equ	0xFDB
 46667                           fsr2h	equ	0xFDA
 46668                           fsr2l	equ	0xFD9
 46669                           status	equ	0xFD8
 46670                           
 46671                           	psect	rparam
 46672  0000                     tosu	equ	0xFFF
 46673                           tosh	equ	0xFFE
 46674                           tosl	equ	0xFFD
 46675                           pclath	equ	0xFFA
 46676                           tblptru	equ	0xFF8
 46677                           tblptrh	equ	0xFF7
 46678                           tblptrl	equ	0xFF6
 46679                           tablat	equ	0xFF5
 46680                           prodh	equ	0xFF4
 46681                           prodl	equ	0xFF3
 46682                           intcon	equ	0xFF2
 46683                           intcon2	equ	0xFF1
 46684                           intcon3	equ	0xFF0
 46685                           indf0	equ	0xFEF
 46686                           postinc0	equ	0xFEE
 46687                           fsr0h	equ	0xFEA
 46688                           fsr0l	equ	0xFE9
 46689                           wreg	equ	0xFE8
 46690                           indf1	equ	0xFE7
 46691                           postdec1	equ	0xFE5
 46692                           plusw1	equ	0xFE3
 46693                           fsr1h	equ	0xFE2
 46694                           fsr1l	equ	0xFE1
 46695                           indf2	equ	0xFDF
 46696                           postinc2	equ	0xFDE
 46697                           postdec2	equ	0xFDD
 46698                           plusw2	equ	0xFDB
 46699                           fsr2h	equ	0xFDA
 46700                           fsr2l	equ	0xFD9
 46701                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    866
    Data        38
    BSS         2159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    101     160
    BANK1           256      0     216
    BANK2           256      0     194
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), 
		 -> RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 49151
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[49151]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 49151
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[49151]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_file_copy@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_copy@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_copy@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_write_buffer@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_write_buffer@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_write_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_buffer_to_sector@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_buffer_to_sector@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_buffer_to_sector@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_sector_to_buffer@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_sector_to_buffer@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_sector_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_format_drive@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_format_drive@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_modify@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_modify@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_append@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_append@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_rename@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_rename@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_create@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_create@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_delete@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_delete@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_resize@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_resize@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_resize@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_read_buffer@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_buffer@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(BANK0[32]), 
		 -> fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), RAM(DATA[3759]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_copy_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_copy_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    flash_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), ReceivedDataBuffer(BANK2[64]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> RAM(DATA[3759]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_buffer_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _system_minimal_init->_system_delay_ms
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->_internalFlash_addressFromPage
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->_internalFlash_addressFromPage
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_get_file_size
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __fill_buffer_read_buffer->_fat_read_from_buffer
    _fat_read_from_buffer->_flash_read_from_buffer
    _flash_read_from_buffer->__flash_buffer_read
    __flash_buffer_read->__flash_is_busy
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u32
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_append
    __parse_command_long->__parse_file_copy
    __parse_command_long->__parse_file_create
    __parse_command_long->__parse_file_rename
    __parse_write_buffer->_fat_write_to_buffer
    _fat_write_to_buffer->_flash_write_to_buffer
    _flash_write_to_buffer->__flash_write_to_buffer
    __parse_sector_to_buffer->_fat_copy_sector_to_buffer
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    __parse_file_resize->_fat_resize_file
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_modify->_fat_modify_file
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__make_cluster_chain
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    __parse_file_copy->_fat_copy_file
    _fat_copy_file->_fat_create_file
    _fat_create_file->__make_cluster_chain
    _fat_find_file->_flash_sector_read
    __get_available_root_entry->__root_is_available
    _fat_copy_sector_to_buffer->_fat_get_file_size
    _flash_copy_page_to_buffer->__flash_copy_page_to_buffer
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    __write_root->_flash_partial_write
    __make_cluster_chain->__get_available_cluster
    _flash_sector_write->__flash_compare_page_to_buffer
    __get_available_cluster->_flash_sector_read
    _fat_modify_file->__find_nth_cluster
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _fat_get_file_information->_flash_partial_read
    __find_nth_cluster->__read_fat
    _flash_sector_read->__flash_partial_read
    __read_fat->_flash_partial_read
    __parse_buffer_to_sector->_fat_write_sector_from_buffer
    _fat_write_sector_from_buffer->_fat_get_file_size
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    __get_first_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _api_parse->__parse_command_long
    __parse_command_long->__parse_file_append
    __parse_file_resize->_fat_resize_file
    __parse_file_modify->_fat_modify_file
    __parse_file_create->_fat_create_file
    __parse_file_copy->_fat_copy_file
    _fat_copy_file->_fat_create_file
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 2518115
                                             91 BANK0     10    10      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   94126
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   86816
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      90
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   32179
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6660
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6416
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25519
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6791
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  138965
                                             91 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   62492
                                             14 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   53912
                                             14 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             16    14      2     830
                                              8 COMRAM    14    12      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3437
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                             10     8      2     714
                                              8 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     670
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     402
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   22495
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5816
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  106716
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  106716
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  101552
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   51527
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   49769
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24985
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17397
                                             36 COMRAM    11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13888
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6492
                                             43 COMRAM    10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  957449
                                             87 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   90554
                                             82 BANK0      5     1      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
           __fill_buffer_read_buffer
             __fill_buffer_read_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   59834
                                             62 BANK0     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   44218
                                             91 COMRAM     4     4      0
                                             14 BANK0     48    38     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             40    26     14   35519
                                             65 COMRAM    26    12     14
                                              0 BANK0     14    14      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_buffer                            10     6      4    5742
                                             42 COMRAM    10     6      4
               _fat_read_from_buffer
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_buffer                                 6     0      6    5207
                                             36 COMRAM     6     0      6
             _flash_read_from_buffer
 ---------------------------------------------------------------------------------
 (4) _flash_read_from_buffer                               6     0      6    4874
                                             30 COMRAM     6     0      6
                 __flash_buffer_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_buffer_read                                  11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    3133
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (3) _flash_is_busy                                        1     1      0    2736
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        6     2      4    8417
                                             55 COMRAM     6     2      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    8127
                                             54 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                           11     6      5  863582
                                             68 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   86838
                                             43 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   83607
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   80419
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                 __display_suspended
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_suspended                                   1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0   15330
                                             36 COMRAM     1     1      0
                  __display_itoa_u32
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0   15351
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   21962
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    6     0      6   14943
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3163
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  7     1      6  775623
                                             61 BANK0      7     1      6
            __parse_buffer_to_sector
                 __parse_file_append
                   __parse_file_copy
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
                 __parse_file_resize
                __parse_format_drive
            __parse_sector_to_buffer
                __parse_write_buffer
 ---------------------------------------------------------------------------------
 (3) __parse_write_buffer                                 11     5      6    5984
                                             42 COMRAM    11     5      6
                _fat_write_to_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_write_to_buffer                                  6     0      6    5207
                                             36 COMRAM     6     0      6
              _flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_write_to_buffer                                6     0      6    4874
                                             30 COMRAM     6     0      6
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) __parse_sector_to_buffer                             11     5      6   52653
                                             83 COMRAM    11     5      6
          _fat_copy_sector_to_buffer
 ---------------------------------------------------------------------------------
 (3) __parse_format_drive                                  8     2      6   19216
                                             38 COMRAM     8     2      6
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18728
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_resize                                  13     7      6   76909
                                             84 COMRAM     7     1      6
                                             39 BANK0      6     6      0
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   9     3      6   33403
                                             94 COMRAM     1     1      0
                                              0 BANK0      8     2      6
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     39    35      4   32760
                                             55 COMRAM    39    35      4
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                  15     9      6   59659
                                             85 COMRAM     7     1      6
                                             46 BANK0      8     8      0
                    _fat_modify_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   9     3      6   75144
                                             79 COMRAM     9     3      6
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      3     3      0   74545
                                             76 COMRAM     3     3      0
                       __delete_root
                 __get_first_cluster
                __make_cluster_chain
                 __root_is_available
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         6     6      0   23869
                                             40 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                  12     6      6   79229
                                             88 COMRAM     7     1      6
                                             37 BANK0      5     5      0
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_copy                                     9     3      6  183758
                                             92 COMRAM     3     3      0
                                             52 BANK0      6     0      6
                      _fat_copy_file
 ---------------------------------------------------------------------------------
 (4) _fat_copy_file                                       19    15      4  183115
                                             88 COMRAM     4     0      4
                                             37 BANK0     15    15      0
                 __root_is_available
          _fat_copy_sector_to_buffer
                    _fat_create_file
                  _fat_get_file_size
       _fat_write_sector_from_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     49    41      8   78580
                                             76 COMRAM    12     4      8
                                              0 BANK0     37    37      0
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7683
                                             43 COMRAM    11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_time                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    7507
                                             53 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (4) _fat_copy_sector_to_buffer                           17    15      2   51853
                                             66 COMRAM    17    15      2
          __data_sector_from_cluster
                  __find_nth_cluster
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
          _flash_copy_page_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_copy_page_to_buffer                            2     0      2    4698
                                             29 COMRAM     2     0      2
         __flash_copy_page_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                  11     5      6  157903
                                             89 COMRAM     6     0      6
                                             56 BANK0      5     5      0
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  14    10      4  157083
                                             85 COMRAM     4     0      4
                                             46 BANK0     10    10      0
                 __root_is_available
                  _fat_get_file_size
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (4) _fat_resize_file                                     47    43      4   75929
                                             76 COMRAM     8     4      4
                                              0 BANK0     39    39      0
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (5) __write_root                                          7     5      2   24135
                                             40 COMRAM     7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __make_cluster_chain                                 23    19      4   35774
                                             53 COMRAM    23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17052
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (6) __write_value_to_offset                               8     2      6     934
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) __get_available_cluster                              10     6      4    7774
                                             43 COMRAM    10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (6) __get_available_offset_from_buffer                    8     4      4     712
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _fat_modify_file                                     66    58      8   58458
                                             65 COMRAM    20    12      8
                                              0 BANK0     46    46      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   23662
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2    8040
                                             47 COMRAM     8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16860
                                             55 COMRAM    10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6211
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8306
                                             47 COMRAM     8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_buffer_to_sector                             11     5      6   30716
                                             81 COMRAM    11     5      6
       _fat_write_sector_from_buffer
 ---------------------------------------------------------------------------------
 (5) _fat_write_sector_from_buffer                        17    15      2   29916
                                             66 COMRAM    15    13      2
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14812
                                             53 COMRAM    13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7417
                                             47 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                   9     7      2    7374
                                             47 COMRAM     9     7      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7145
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) __sector_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_buffer_to_sector
           _fat_write_sector_from_buffer
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_append
           _fat_append_to_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_modify_file
               __data_sector_from_cluster
               __find_nth_cluster
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_resize_file
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_copy
           _fat_copy_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_copy_sector_to_buffer
               __data_sector_from_cluster
               __find_nth_cluster
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_first_cluster
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_size
                 __offset_from_file_number
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_copy_page_to_buffer
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 _spi_set_configuration
             _fat_create_file
               __get_available_root_entry
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
               __get_date
               __get_time
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_find_file
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _strncmp
               _memcpy
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_write_sector_from_buffer
               __get_first_cluster
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_size
                 __offset_from_file_number
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_time
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_modify
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_rename
           _fat_rename_file
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_resize
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_sector_to_buffer
           _fat_copy_sector_to_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_copy_page_to_buffer
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               _spi_set_configuration
         __parse_write_buffer
           _fat_write_to_buffer
             _flash_write_to_buffer
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
             __display_suspended
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_buffer
         _fat_read_from_buffer
           _flash_read_from_buffer
             __flash_buffer_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_read_file
         _fat_get_file_size
           __offset_from_file_number
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_buffer_to_sector
         _fat_write_sector_from_buffer
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_append
         _fat_append_to_file
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
       __parse_file_copy
         _fat_copy_file
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_copy_sector_to_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_copy_page_to_buffer
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               _spi_set_configuration
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_time
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _memcpy
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_write_sector_from_buffer
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_time
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_find_file
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_modify
         _fat_modify_file
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_file_rename
         _fat_rename_file
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_resize
         _fat_resize_file
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_format_drive
         _fat_format
           __get_data
           __get_fat
           __get_fbr
           __get_mbr
           __get_root
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_sector_to_buffer
         _fat_copy_sector_to_buffer
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_copy_page_to_buffer
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             _spi_set_configuration
       __parse_write_buffer
         _fat_write_to_buffer
           _flash_write_to_buffer
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_suspended
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_buffer
       _fat_read_from_buffer
         _flash_read_from_buffer
           __flash_buffer_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_read_file
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_suspended
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _system_delay_ms
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_suspended
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C2       9       75.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D8       7       84.4%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     359      31        0.0%
DATA                 0      0     959       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Oct 03 00:09:11 2018

                          __end_of_fat_read_from_file 6348  
                           ??_internalFlash_getBuffer 0003  
                 __parse_buffer_to_sector@out_idx_ptr 0056  
                     __size_of__write_value_to_offset 0034  
                                          _USB_SD_Ptr BE79  
                            fat_create_file@extension 004F  
              __end_of_i2c_display_send_init_sequence 974A  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 971E  
                        __end_of_fat_read_from_buffer 9A62  
                                 __system_timer0_init 9A04  
                          flash_read_from_buffer@data 0023  
                      __parse_file_delete@out_idx_ptr 0054  
                     __parse_file_resize@return_value 0087  
                                                  _os 00C5  
                                       _USBDeviceInit 4CFE  
                                  _USBCheckHIDRequest 650C  
                         ??__data_sector_from_cluster 0003  
                __bootloader_verify_file@return_value 0097  
                                    ??__flash_is_busy 0012  
                          ??__sector_from_file_number 0003  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0030  
                           ??_internalFlash_erasePage 000B  
                    __size_of__parse_sector_to_buffer 016C  
                            ?_i2c_display_write_fixed 0006  
                             fat_modify_file@position 006A  
                                     _fat_resize_file 5F74  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 6D14  
                                                 l210 7AA4  
                                                 l220 5CA0  
                                                 l141 4D6C  
                                                 l214 7E46  
                                                 l310 759E  
                                                 l150 3C54  
                                                 l143 4DAA  
                                                 l303 948C  
                                                 l151 3C4A  
                                                 l320 8722  
                                                 l208 7A8A  
                                                 l224 5D22  
                                                 l304 948A  
                                                 l152 3C48  
                                                 l241 6BF6  
                                                 l233 6B4A  
                                                 l161 3CD0  
                                                 l242 6BBE  
                                                 l330 6E52  
                                                 l322 8770  
                                                 l235 6B54  
                                                 l331 6E18  
                                                 l251 53F4  
                                                 l411 655A  
                                                 l219 5CF8  
                                                 l139 4D44  
                                                 l171 3D60  
                                                 l163 3CE6  
                                                 l155 3C70  
                                                 l252 53DA  
                                                 l412 6528  
                                                 l260 6474  
                                                 l164 3CF2  
                                                 l156 3C80  
                                                 l237 6BB6  
                                                 l333 6E38  
                                                 l309 75A4  
                                                 l173 3D84  
                                                 l165 3D1A  
                                                 l157 3C88  
                                                 l238 6B7E  
                                                 l422 657C  
                                                 l414 656C  
                         __end_of_USBStdGetDscHandler 50D6  
                                                 l262 64E8  
                                                 l350 6388  
                                                 l166 3D26  
                                                 l158 3C9E  
                                                 l183 5A8C  
                                                 l191 56C0  
                                                 l423 6594  
                                                 l415 6546  
                                                 l271 4FC2  
                                                 l343 63E6  
                                                 l175 3DA0  
                                                 l159 3CAA  
                                                 l328 6DD0  
                                                 l248 537E  
                                                 l424 65A0  
                                                 l360 1B6C  
                                                 l272 5050  
                                                 l352 638E  
                                                 l344 6358  
                                                 l168 3D38  
                                                 l185 5AB6  
                                                 l329 6DD6  
                                                 l249 535C  
                                                 l521 5A66  
                                                 l425 65B8  
                                                 l361 1B72  
                                                 l281 7634  
                                                 l353 63AC  
                                                 l610 887A  
                                                 l178 93C2  
                                                 l418 65C4  
                                                 l530 6F3A  
                                                 l274 5058  
                                                 l282 75C2  
                                                 l354 63C8  
                                                 l346 6362  
                                                 l187 5B34  
                                                 l603 8882  
                                                 l179 93D0  
                                                 l371 1C92  
                                                 l363 1BDE  
                                                 l275 50AE  
                                                 l347 6368  
                                                 l620 088E  
                                                 l604 8846  
                                                 l372 1CAE  
                                                 l268 50BE  
                                                 l348 636E  
                                                 l621 0898  
                                                 l381 1DA6  
                                                 l365 1C26  
                                                 l277 50B6  
                                                 l269 4FAE  
                                                 l285 764A  
                                                 l349 6382  
                                                 l710 65FE  
                                                 l702 1AD6  
                                                 l614 0BE0  
                                                 l630 0A3E  
                                                 l606 8862  
                                                 l518 5A6E  
                                                 l534 6FA2  
                                                 l374 1D14  
                                                 l286 75D4  
                                                 l703 1AEE  
                                                 l623 08F0  
                                                 l615 086E  
                                                 l519 59E2  
                                                 l375 1D20  
                                                 l367 1C48  
                                                 l287 75DA  
                                                 l295 9228  
                                                 l712 6614  
                                                 l704 1B08  
                                                 l640 0B08  
                                                 l624 09AA  
                                                 l608 886E  
                                                 l800 80E8  
                                                 l376 1D9A  
                                                 l288 75F8  
                                                 l296 9226  
                                                 l721 66A0  
                                                 l633 0A72  
                                                 l625 09B4  
                                                 l609 8874  
                                                 l561 23F2  
                                                 l529 6FD8  
                                                 l369 1CC8  
                                                 l722 668A  
                                                 l650 0B88  
                                                 l634 0AA0  
                                                 l626 09D4  
                                                 l618 087E  
                                                 l554 24DE  
                                                 l562 23DC  
                                                 l546 6FAA  
                                                 l810 80DA  
                                                 l715 6644  
                                                 l651 0B9C  
                                                 l571 240E  
                                                 l563 23B0  
                                                 l555 22B4  
                                                 l379 1D54  
                                                 l644 0B40  
                                                 l636 0AD4  
                                                 l628 0A04  
                                                 l564 23B8  
                                                 l804 80B6  
                                                 l900 4096  
                                                 l661 7D06  
                                                 l741 589A  
                                                 l733 66B2  
                                                 l645 0B54  
                                                 l573 2420  
                                                 l805 80BE  
                                                 l901 4010  
                                                 l750 58CE  
                                                 l718 6650  
                                                 l670 359E  
                                                 l654 0BD8  
                                                 l646 0B72  
                                                 l638 0AF0  
                                                 l566 23D0  
                                                 l806 80C6  
                                                 l902 4018  
                                                 l751 58DA  
                                                 l719 666A  
                                                 l671 35A8  
                                                 l575 2442  
                                                 l559 22D4  
                                                 l903 4020  
                                                 l752 58EC  
                                                 l680 36D6  
                                                 l672 35BC  
                                                 l648 0B9E  
                                                 l592 54B4  
                                                 l576 244A  
                                                 l808 80D0  
                                                 l904 4028  
                                                 l753 58F8  
                                                 l737 66C2  
                                                 l665 36EC  
                                                 l649 0B78  
                                                 l577 246E  
                                                 l905 4030  
                                                 l754 590A  
                                                 l674 3606  
                                                 l666 353E  
                                                 l690 1938  
                                                 l586 24C0  
                                                 l914 89F0  
                                                 l906 4038  
                                                 l659 7CF0  
                                                 l747 594C  
                                                 l755 5940  
                                                 l675 362E  
                                                 l691 1944  
                                                 l907 4042  
                                                 l748 58C6  
                                                 l668 3710  
                                                 l676 365E  
                                                 l684 1B1E  
                                                 l692 1964  
                                                 l596 554C  
                                                 l764 8C5C  
                                                 _BDT 000D00  
                                                 l677 3670  
                                                 l669 3592  
                                                 l693 19AE  
                                                 l685 1892  
                                                 l597 5546  
                                                 l589 24C8  
                                                 l933 8EB8  
                                                 l917 8A16  
                                                 l678 3676  
                                                 l694 1988  
                                                 l926 8ED6  
                                                 l918 8A24  
                                                 l679 368A  
                                                 l687 1B42  
                                                 l695 19F4  
                                                 l599 5550  
                                                 l767 8C92  
                                                 l935 8EC4  
                                                 l927 8E9C  
                                                 l696 19EC  
                                                 l688 1932  
                                                 l929 8EA6  
                                                 l698 1A08  
                                                 l699 1A70  
                                                 l972 74D0  
                                                 l893 3F5C  
                                                 l966 7462  
                                                 l894 3F6A  
                                                 l896 3FFA  
                                                 l898 4052  
                                                 l899 4008  
                                                 _LBA 015E  
                                                 _LUN 01B3  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                                _i2c_digipot_reset_on 999E  
                                   main@tx_start_addr 00BD  
                            __size_of__display_failed 02F6  
                                         _start_line1 BDE8  
                                         _start_line2 BE60  
                                         _start_line3 BEA6  
                                         _start_line4 BE16  
                                  api_prepare@command 00B6  
                                          _USBSuspend 9664  
                       ?_fat_write_sector_from_buffer 0043  
                         flash_read_from_buffer@start 001F  
                                  _internalFlash_read 9498  
                              __end_of_display_update 86AA  
                                USBStdSetCfgHandler@i 0018  
                                ?__parse_format_drive 0027  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 3C28  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 00F8  
                                        ?__write_root 0029  
                      __parse_file_resize@out_idx_ptr 0059  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 5556  
                               ??_USBCtrlTrfRxService 0001  
                                       _hex_file_size 014A  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   __find_nth_cluster 7C14  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                   __size_of__fill_buffer_read_buffer 00F6  
                        __parse_file_resize@file_size 0089  
                                 api_prepare@inBuffer 00B2  
                   __size_of__offset_from_file_number 0026  
                         __flash_write_to_buffer@data 0016  
                                                l1008 9BCC  
                                                l1210 7FBC  
                                                l1203 9104  
                                                l2004 7104  
                                                l1204 90E8  
                                                l1300 5BB4  
                                                l2021 163C  
                                                l1117 9B22  
                                                l2014 7CA0  
                                                l2110 7A10  
                                                l2102 911E  
                                                l1310 5C22  
                                                l1302 5BC4  
                                                l2015 7C3A  
                                                l2007 7158  
                                                l2031 1776  
                                                l2016 7C84  
                                                l2024 1646  
                                                l2104 912E  
                                                l2200 20B4  
                                                l1232 8CDC  
                                                l1304 5BD4  
                                                l2009 7162  
                                                l2033 1784  
                                                l2025 16E6  
                                                l2113 7B92  
                                                l2201 20C4  
                                                l1233 8CC0  
                                                l2121 627C  
                                                l1209 7FD8  
                                                l1321 5844  
                                                l2042 1874  
                                                l2034 178C  
                                                l2026 1696  
                                                l2210 20F4  
                                                l2202 20D4  
                                                l1154 9CF8  
                                                l1090 994C  
                                                l2130 2836  
                                                l1306 5BEC  
                                                l1330 57F8  
                                                l1322 576A  
                                                l2043 1886  
                                                l2027 17AA  
                                                l2107 79A8  
                                                l2115 7B9E  
                                                l2211 20F8  
                                                l2203 20D8  
                                                l1091 993A  
                                                l2131 285E  
                                                l2123 6294  
                                                l1163 9C8C  
                                                l1083 94EC  
                                                l2036 17FE  
                                                l2140 624A  
                                                l2220 211C  
                                                l2212 20FC  
                                                l2204 20DC  
                                                l2132 2906  
                                                l2124 62FA  
                                                l1084 94F6  
                                                l1308 5BFC  
                                                l1332 5814  
                                                l2053 8914  
                                                l2037 17F6  
                                                l2109 79B8  
                                                l2061 9986  
                                                l2141 620E  
                                                l2117 7BD2  
                                                l2221 2120  
                                                l2213 2100  
                                                l2205 20E0  
                                                l1181 9C84  
                                                l1333 5834  
                                                l1325 577E  
                                                l2038 183A  
                                                l2150 6050  
                                                l2142 622A  
                                                l2230 2140  
                                                l2222 2124  
                                                l2214 2104  
                                                l2206 20E4  
                                                l1326 5792  
                                                l2055 8966  
                                                l2151 6048  
                                                l2063 9996  
                                                l2143 6246  
                                                l2231 2144  
                                                l2223 2128  
                                                l2215 2108  
                                                l2207 20E8  
                                                l2127 277E  
                                                l1175 9C98  
                                                l1327 57A8  
                           ?__fill_buffer_read_buffer 002B  
                                                l2160 262C  
                                                l2080 696E  
                                                l2136 6178  
                                                l2232 2148  
                                                l2224 212C  
                                                l2216 210C  
                                                l2208 20EC  
                                                l3120 819C  
                                                l1520 0C52  
                                                l1600 4B5C  
                                                l2161 26D4  
                                                l2233 214C  
                                                l2225 2130  
                                                l2217 2110  
                                                l2209 20F0  
                                                l1169 9CF0  
                                                l3121 81AA  
                                                l2129 2948  
                                                l1329 57D0  
                                                l2154 251E  
                                                l2138 6188  
                                                l2250 8D56  
                                                l2234 2150  
                                                l2226 2134  
                                                l2218 2114  
                                                l2170 6C0C  
                                                l1522 0CFC  
                                                l3051 5650  
                                                l2147 5F84  
                                                l2083 68E4  
                                                l2139 61D2  
                                                l2243 8D5E  
                                                l2251 8D5A  
                                                l2235 2154  
                                                l2227 2138  
                                                l2219 2118  
                                                l2171 6C10  
                                                l1195 97B4  
                                                l1611 343A  
                                                l3052 555A  
                                                l2092 857E  
                                                l2156 2536  
                                                l2332 72FE  
                                                l2244 8D42  
                                                l2236 2158  
                                                l2180 6C34  
                                                l2172 6C14  
                                                l2260 3B08  
                                                l1196 97A6  
                                                l1700 40A4  
                                                l3116 8168  
                                                l1524 0DA8  
                                                l1612 340C  
                                                l3044 939E  
                                                l1292 5C3C  
                                                l2325 8420  
                                                l2157 257E  
                                                l2149 5F94  
                                                l2237 215C  
                                                l2229 213C  
                                                l2165 6C4C  
                                                l2181 6C38  
                                                l2173 6C18  
                                                l1197 97C8  
                                                l3117 815C  
                                                l1605 3392  
                                                l3045 937A  
                                                l1293 5B7A  
                                                l3054 5560  
                                                l2158 2716  
                                                l2334 7356  
                                                l2246 8D46  
                                                l2238 2160  
                                                l2190 2046  
                                                l2182 6C3C  
                                                l2174 6C1C  
                                                l2166 6C00  
                                                l2262 3B98  
                                                l2270 3B60  
                                                l1198 97AA  
                                                l1702 4126  
                                                l1526 0E54  
                                                l1614 34C6  
                                                l1606 3364  
                                                l1630 5184  
                                                l2350 9764  
                                                l2510 0660  
                                                l2502 04E2  
                                                l3046 93AC  
                                                l2327 8482  
                                                l3071 8078  
                                                l2159 2604  
                                                l2247 8D4A  
                                                l2239 2164  
                                                l2183 6C40  
                                                l2175 6C20  
                                                l2271 3B64  
                                                l2263 3B44  
                                                l1199 97AE  
                                                l1703 40F8  
                                                l1615 348E  
                                                l1623 510A  
                                                l3047 938C  
                                                l3080 7EC8  
                                                l1800 8326  
                                                l2096 4E6C  
                                                l2248 8D4E  
                                                l2192 204A  
                                                l2184 6C44  
                                                l2176 6C24  
                                                l2168 6C04  
                                                l2280 3B88  
                                                l2272 3B68  
                                                l2264 3B48  
                                                l2256 3AC2  
                                                l1528 0F00  
                                                l1608 33E6  
                                                l1720 493C  
                                                l1624 50DC  
                                                l1560 6992  
                                                l2352 9772  
                                                l2504 057C  
                                                l1296 5B8C  
                                                l3065 8C36  
                                                l3057 55C4  
                                                l2337 81CE  
                                                l2089 6958  
                                                l2249 8D52  
                                                l2193 204E  
                                                l2185 6C48  
                                                l2177 6C28  
                                                l2169 6C08  
                                                l2281 3B8C  
                                                l2273 3B6C  
                                                l2265 3B4C  
                                                l1641 3EAE  
                                                l1705 417A  
                                                l1617 351A  
                                                l1609 33B8  
                                                l1721 490E  
                                                l1561 6998  
                                                l2601 863E  
                                                l2521 0820  
                                                l2513 069C  
                                                l2505 05F4  
                                                l3074 80AC  
                                                l2098 4E7E  
                                                l2194 2052  
                                                l2178 6C2C  
                                                l2282 3B90  
                                                l2274 3B70  
                                                l2266 3B50  
                                                l2258 3AD0  
                                                l1490 709A  
                                                l1642 3E76  
                                                l1706 414C  
                                                l1650 1310  
                                                l1618 34EC  
                                                l1714 8D1E  
                                                l1730 4A0A  
                                                l1626 515E  
                                                l1570 6A44  
                                                l1554 69B6  
                                                l1562 699E  
                                                l2610 72B4  
                                                l2370 0310  
                                                l2506 064E  
                                                l1298 5B9C  
                                                l3083 7F04  
                                                l2339 8226  
                                                l2099 4EDC  
                                                l2195 2064  
                                                l2179 6C30  
                                                l2283 3B94  
                                                l2275 3B74  
                                                l2267 3B54  
                                                l1483 702C  
                                                l1635 3DDC  
                                                l1651 12E2  
                                                l1715 8CF0  
                                                l1723 4990  
                                                l1627 5130  
                                                l1563 69A4  
                                                l1555 697A  
                                                l2363 003E  
                                                l2515 0746  
                                                l2196 2074  
                                                l2284 3C24  
                                                l2276 3B78  
                                                l2268 3B58  
                                                l1644 3F02  
                                                l1636 3DAE  
                                                l1476 908E  
                                                l1708 41F2  
                                                l1724 4962  
                                                l1564 69AA  
                                                l2348 975A  
                                                l2372 039C  
                                                l2516 080A  
                          USBConfigureEndpoint@handle 0007  
                                                l2189 2168  
                                                l2197 2084  
                                                l2277 3B7C  
                                                l2269 3B5C  
                                                l1645 3ED4  
                                                l1709 41C4  
                                                l3501 87BE  
                                                l1661 1558  
                                                l1653 1364  
                                                l1581 30FA  
                                                l1629 51B2  
                                                l1565 69B0  
                                                l1557 6980  
                                                l2373 03C0  
                                                l2365 00B4  
                                                l2509 0854  
                                                l2517 0750  
                                                l2453 86E0  
                                                l2293 7754  
                                                l1822 8B4A  
                                                l1814 9046  
                                                l2198 2094  
                                                l2278 3B80  
                                                l1486 7052  
                                                l1638 3E30  
                                                l1478 909A  
                                                l3502 87CC  
                                                l1654 1336  
                                                l1590 4A8E  
                                                l1582 30CC  
                                                l1726 49E4  
                                                l1566 6A1A  
                                                l1558 6986  
                                                l2470 6AB0  
                                                l2614 9832  
                                                l2366 0202  
                                                l2518 07C8  
                                                l2462 86D4  
                                                l2454 86B6  
                                                l1823 8B54  
                                                l1815 9050  
                                                l2287 9870  
                                                l2199 20A4  
                                                l2279 3B84  
                                                l1639 3E02  
                                                l1671 14A8  
                                                l1663 1408  
                                                l1591 4A60  
                                                l1575 2FB4  
                                                l1727 49B6  
                                                l1567 6A06  
                                                l1559 698C  
                                                l2623 94CC  
                                                l2607 72EA  
                                                l2375 0426  
                                                l2367 0188  
                                                l2519 0804  
                                                l1488 7076  
                                                l1656 1536  
                                                l1672 147A  
                                                l1664 13DA  
                                                l1584 314E  
                                                l1576 2F86  
                                                l1568 6A0C  
                                                l2800 7406  
                                                l2480 7834  
                                                l2472 6B06  
                                                l2608 72A8  
                                                l1593 4AE2  
                                                l1585 3120  
                                                l1729 4A38  
                                                l1569 6A12  
                                                l2473 6B08  
                                                l2377 0458  
                                                l2369 033E  
                                                l2457 86C2  
                                                l2297 77A4  
                                                l1658 13B8  
                                                l1690 37F2  
                                                l1594 4AB4  
                                                l1578 3008  
                                                l1842 8FF6  
                                                l2474 6B12  
                                                l2490 1184  
                                                l1770 829C  
                                                l1675 14F8  
                                                l1667 1458  
                                                l1659 138A  
                                                l1691 37C4  
                                                l1579 2FDA  
                                                l1843 9000  
                                                l2379 048A  
                                                l2459 86CE  
                                                l1780 8E6C  
                                                l1828 9A00  
                                                l2900 203E  
                                                l1676 14CA  
                                                l1668 142A  
                                                l1684 374A  
                                                l1596 4B36  
                                                l1924 95B6  
                                                l2468 6B1E  
                                                l2492 11E4  
                                                l1693 38A6  
                                                l1685 371C  
                                                l1597 4B08  
                                                l2469 6A5A  
                                                l2493 1216  
                                                l2485 0FD6  
                                                l2910 43BE  
                                                l1678 158C  
                                                l1694 3878  
                                                l2806 3326  
                                                l2494 1246  
                                                l2486 0FFA  
                                                l2903 769C  
                                                l1679 155E  
                                                l1687 379E  
                                                l1599 4B8A  
                                                l2807 3354  
                                                l2495 12A2  
                                                l1688 3770  
                                                l2832 6EF2  
                                                l2840 6EE6  
                                                l2808 332C  
                                                l2824 2B18  
                                                l2760 4282  
                                                l1928 9584  
                                                l2488 1092  
                                                l1777 8E86  
                                                l2921 47AE  
                                                l1881 84FC  
                                                l1873 8DE4  
                                                l2841 6EEC  
                                                l2833 6E64  
                                                l2497 12C8  
                                                l2489 110A  
                                                l1769 8270  
                                                l1778 8E44  
                                                l2914 44EA  
                                                l2850 394E  
                                                l2762 4354  
                                                l2770 430C  
                                                l2754 42A2  
                                                l1795 82C6  
                                                l1787 8BA2  
                                                l1883 855E  
                                                l2931 5EB4  
                                                l2907 7706  
                                                l2851 396C  
                                                l1699 40D2  
                                                l2835 6E80  
                                                l2819 795C  
                                                l2771 4334  
                                                l2755 422A  
                                                l1796 82D0  
                                                l1788 8BAC  
                                                l2924 4BE8  
                                                l2852 398A  
                                                l3572 8F7E  
                                                l2836 6E9C  
                                                l2780 5274  
                                                l2828 6136  
                                                l2917 468E  
                                                l2861 2BB8  
                                                l2845 3A42  
                                                l2853 39A8  
                                                l3573 8F88  
                                                l2837 6EB8  
                                                l2765 42BE  
                                                l2757 4240  
                                                l1798 8308  
                                                l1990 8AC8  
                                                l2854 39C6  
                                                l2846 38F4  
                                                l3582 9322  
                                                l2838 6ED4  
                                                l2782 52EC  
                                                l2766 42CC  
                                                l2758 4256  
                                                l2935 5F70  
                                                l2847 3A8E  
                                                l2855 39E4  
                                                l3583 932C  
                                                l2839 6EE0  
                                                l2783 528E  
                                                l2775 5220  
                                                l2767 42DE  
                                                l2759 426C  
                                                l2872 688E  
                                                l2928 4CF8  
                                                l2856 3A02  
                                                l2848 3912  
                                                l3568 8F5E  
                                                l3752 92D6  
                                                l2784 5322  
                                                l2768 42F0  
                                                l2865 2D7C  
                                                l2857 3A20  
                                                l2849 3930  
                                                l3569 8F56  
                                                l3497 8796  
                                                l2785 52A6  
                                                l2769 42FE  
                                                l2882 5DB6  
                                                l3578 930A  
                                                l3498 878A  
                                                l2786 52C2  
                                                l2778 526E  
                                                l2794 73B6  
                                                l3770 9790  
                                                l2875 47EE  
                                                l3579 9302  
                                                l3771 9780  
                                                l1988 8A8E  
                                                l3764 8832  
                                                l2868 67EE  
                                                l3756 785A  
                                                l2796 73F0  
                                                l2893 4640  
                                                l3765 87F4  
                           ?__offset_from_file_number 0001  
                                                l3782 721A  
                                                l2886 5E72  
                                                l3758 7894  
                                                l2798 742E  
                                                l3783 7174  
                                                l2879 4904  
                                                l3759 78D2  
                                                l2799 73FA  
                                                l3784 7212  
                                                l2896 1E08  
                                                l2889 452A  
                                                STR_1 BFF1  
                                                STR_2 BFF1  
                                                STR_3 BFF1  
                                                STR_4 BFF1  
                                                STR_5 BFF1  
                                                STR_6 BFF1  
                                                STR_7 BFF1  
                               __end_of_checked_line1 BDB8  
                                                STR_8 BFF1  
                               __end_of_checked_line2 BC82  
                                                STR_9 BFDC  
                               __end_of_checked_line3 BE79  
                               __end_of_checked_line4 BD17  
                                      _bootloader_run 86AA  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 018D  
                                                u7110 8F62  
                                                u8010 879A  
                                                u7300 8AF4  
                                                u7140 930E  
                                                u8030 8814  
                                                u7310 8B00  
                                                u7320 8B0C  
                                                u7330 8B18  
                                                u7340 8B22  
                                                u7308 8AF6  
                                                u8037 880A  
                                                u7318 8B02  
                                                u8310 669C  
                                                u8150 6F84  
                               ??_USBCtrlTrfTxService 0001  
                                                u7328 8B0E  
                                                u7425 8BB8  
                                                u9025 18B8  
                                                u7346 8B24  
                                                u7338 8B1A  
                                                u7290 8AE8  
                                                u8330 66AE  
                                                u7195 8342  
                                                u8420 0D10  
                                                u7700 5886  
                                                u9108 19BA  
                                                u9109 19CE  
                                                u8430 0DBC  
                                                u8350 66BE  
                                                u9150 1AAA  
                                                _UCFG 000F39  
                                                u8440 0E68  
                                                u8280 6686  
                                                u9160 1AAC  
                                                u9048 18EC  
                                                u7465 82DC  
                                                u9049 1900  
                                                u8610 17D8  
                                                u8530 167C  
                                                u7298 8AEA  
                                                u9250 90C6  
                                                u8450 95B2  
                                                u7555 8B60  
                                                u8460 9580  
                                                _UEP0 000F26  
                                                u7565 98F8  
                                                _UEP1 000F27  
                                                u7910 8962  
                                                u8630 184E  
                                                u8550 16F2  
                                                u7638 5A02  
                                    ?_fat_create_file 004D  
                                                u7639 5A14  
                                                u8480 7C70  
                                                u8640 185A  
                                                u8560 171A  
                                                u7920 7194  
                                                u7760 7018  
                                                u8810 847E  
                                                u8570 1726  
                                                u7770 703E  
                                                u9178 1AB2  
                                                u7674 5A58  
                                                u7658 5A26  
                                                u9179 1AC4  
                                                u7675 5A52  
                                                u7659 5A3A  
                                                _UEIE 000F37  
                                                u7860 712A  
                                                u8580 1750  
                                                u7940 71CC  
                                                u7780 7062  
                                                u7950 7202  
                                                u7790 7086  
                                                u7927 718A  
                                                u7880 7168  
                                                u8760 6964  
                                                u7945 71C6  
                                                u8690 999A  
                                                u8770 696E  
                                                u9730 4EA4  
                                                u7947 71BC  
                                                u8915 3564  
                                                u7980 816C  
                                                u7957 71F8  
                                                u8870 6BA6  
                                                u9735 4E9A  
                                                u9920 820A  
                                                u9840 25A4  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u9770 5FCE  
                                                u8890 6BE6  
                                                u9780 6000  
                                                u9925 8200  
                                                u9845 259A  
                                                u8877 6B9C  
                                                u9790 601C  
                                                u9775 5FC4  
                                                u8968 35E0  
                                                u9785 5FF6  
                                                u8969 35F4  
                                                u8897 6BDC  
                                                u9890 733A  
                                                u9971 3ADA  
                                                u9895 7330  
                               _i2c_digipot_reset_off 99C0  
                                  ?__find_nth_cluster 0038  
                             ??_fat_get_format_status 002C  
                        flash_read_from_buffer@length 0021  
                               __size_of__delete_root 0048  
                                api_parse@out_idx_ptr 00AB  
                                      _ResetSenseData 88A6  
              __end_of__fill_buffer_get_configuration 7B76  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 7AD8  
                     __size_of_flash_read_from_buffer 002E  
              USBStdFeatureReqHandler@current_ep_data 001B  
                                                _pDst 0188  
                             fat_write_to_buffer@data 0029  
                                                _main 3F24  
                                                _itoa 92B2  
                          __end_of_fat_append_to_file 7A3A  
                     __parse_file_modify@return_value 008E  
                      __parse_file_create@out_idx_ptr 005D  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 6A50  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 7852  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 003F  
                             __bootloader_verify_file 0F98  
                           _ExternalFlash_MediaDetect 9D2E  
                                                prodh 000FF4  
                                                prodl 000FF3  
    __get_available_offset_from_buffer@minimum_offset 0001  
                      fat_modify_file@number_of_bytes 0068  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 9C3A  
                               _display_get_character 97FA  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 BDA8  
                                __end_of_failed_line2 BCF4  
                                __end_of_failed_line4 BE71  
                             __end_of_fat_modify_file 273A  
                                 ??__find_nth_cluster 003C  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 642A  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 049C  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0039  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0180  
                    __end_of__fat_sector_from_cluster 9B54  
                internalFlash_addressFromPage@address 0005  
                              __get_available_cluster 70AE  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 3F24  
                       __write_value_to_offset@buffer 0003  
                                      _hex_file_entry 0193  
                              _bootloader_get_entries 9CBC  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                       __write_value_to_offset@offset 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 9632  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                __make_cluster_chain@sector_in_buffer 0047  
                    __fat_offset_from_cluster@cluster 0001  
                            _system_ui_inactive_count 017C  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 8F40  
                                               l11220 7168  
                                               l11310 87F4  
                                               l12200 9092  
                                               l12050 36E6  
                                               l11254 7174  
                            __end_of__parse_file_copy 5F74  
                                               l11338 6540  
                                               l11196 70D0  
                                               l11188 70B6  
                                               l13140 3AD0  
                                               l11524 8EA6  
                              ?_i2c_digipot_backlight 0001  
                                               l13134 3AC2  
                                               l13240 3B98  
                                               l11456 6650  
                                               l11528 8EC4  
                                               l12194 9086  
                                               l15002 72A0  
                                               l13148 3B08  
                                               l13324 646C  
                             ?__fill_buffer_find_file 0037  
                                               l12630 4EDC  
                                               l11558 0C52  
                                               l13256 9870  
                                               l11904 9780  
                                               l15008 72AC  
                                               l11834 68C6  
                                               l15052 7954  
                                               l11952 6B54  
                                               l16120 3D30  
                                               l11794 997E  
                                               l11868 696E  
                                               l15180 73FE  
                                               l13556 09CC  
                                               l13912 2E10  
                                               l15504 22CC  
                                               l13770 7BCA  
                                               l14812 7726  
                                               l13758 7B96  
                                               l13950 2EA8  
                                               l13926 2E54  
                                               l15366 4D3C  
                                               l14830 7776  
                                        spi_tx@length 0003  
                                               l13938 2E7A  
                                               l15554 23F2  
                                               l15394 4DA2  
                                               l13964 2EEC  
                                               l13948 2EA0  
                                               l13884 2D88  
                                               l15670 52BC  
                                               l13976 2F12  
                                               l14936 6AB0  
                                               l14784 823A  
                                               l13986 2F38  
                                               l13898 2DCC  
                                               l13988 2F40  
                                               l15862 0FF2  
                                               l16870 2180  
                                               l16872 2298  
                                               l16856 8100  
                                               l16858 8134  
                                               l15994 07C8  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 7C14  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 BFE8  
                                               STR_11 BFFA  
                                               STR_12 BFCF  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 81BC  
                                               ?_utoa 0008  
                                               u10120 501A  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u11010 2F68  
                                               u10130 504A  
                                               u10150 50A2  
                                               u10127 5010  
                                               u10080 64A0  
                                               u10137 5040  
                                               u12100 775A  
                                               u10157 5098  
                                               u12034 551C  
                                               u12018 54EC  
                                               u10370 1D3A  
                                               u12130 77AA  
                                               u12035 5516  
                                               u12019 54FE  
                                               u10700 7C02  
                                               u11340 2BB4  
                                               u10540 0B1C  
                                               u10710 2758  
                                               u10550 0B2E  
                                               u10470 09FC  
                                               u10438 08FC  
                                               u12230 6A80  
                                               u12310 860A  
                                               u12150 00A2  
                                               u10439 0910  
                                               u10800 61F8  
                                               u11440 47EA  
                                               u10448 092C  
                                               u11185 9342  
                                     __end_of___llmod 87DE  
                                               u10449 0940  
                                               u12305 9ABE  
                                               u12410 2B08  
                              __end_of_USBDeviceTasks 3DA8  
                                               u12250 6ADC  
                                               u12330 726A  
                                               u10715 274E  
                                               u11275 8494  
                                               u11540 4526  
                                               u12420 612E  
                                               u10580 0BA6  
                                               u10805 61EE  
                                               u11390 67EA  
                                               u10910 2E72  
                                               u12510 4D60  
                                               u13070 1054  
                                               u10735 27F0  
                                               u11295 96A2  
                                               u10680 7BC6  
                                               u11640 7698  
                                               u10488 0A1C  
                                               u10489 0A30  
                                               u11490 5DB2  
                                               u10930 2EA0  
                                               u10850 2DB0  
                                               u12370 72CE  
                                               u13170 053E  
                                               u14107 8E70  
                                               u11740 468A  
                                               u12460 742C  
                                               u12540 4E06  
                                               u14117 8E7A  
                                               u11590 1E04  
                                               u10950 2ED0  
                                               u10870 2DF4  
                                               u11840 5EB0  
                                               u13600 7490  
                                               u10970 2F0A  
                                               u10890 2E38  
                                               u11690 43BA  
                                               u12660 22C8  
                                               u10990 2F38  
                                               u11790 4BE4  
                                               u14087 9940  
                                               u12680 22FC  
                                               u14097 8E5E  
                                               u11970 5482  
                                               u12850 24A2  
                                               u13490 3DA4  
                                               u13730 582E  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u13580 747C  
                                               u12925 8F9E  
                                               u12941 9728  
                                               u11958 5450  
                                               u11959 5464  
                                               u11984 5498  
                                               u13680 57BA  
                                               u11985 5492  
                                               u11994 54CA  
                                               u11995 54C4  
                                     __end_of___lwdiv 8F92  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 9336  
                                       __CFG_WDTEN$ON 000000  
                                   fat_copy_file@name 0059  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                               ??__parse_format_drive 002D  
                                _file_minimum_address 0152  
                                    ??__display_start 0025  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00A5  
                            __find_nth_cluster@offset 003C  
                  __size_of_USBCtrlEPAllowStatusStage 00CC  
                      __get_first_cluster@file_number 0038  
                                ?__bootloader_program 0001  
                                        __delete_root 915A  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 007C  
                           __end_of__find_nth_cluster 7CB2  
                            __find_nth_cluster@sector 0040  
                                    __end_of_MSDTasks 24FC  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 6F26  
                     __end_of_internalFlash_getBuffer 9C80  
                     __end_of_USBCtrlEPAllowDataStage 7AD8  
                                               _sd000 BFCB  
                              __write_value_to_offset 9536  
                                               _sd001 BEE7  
                                               _sd002 BF1B  
                                               _sd003 BF8A  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 8712  
                 i2c_display_send_init_sequence@F6810 01C7  
                       __end_of_MSDTransferTerminated 8C94  
                                        _gblCBWLength 018F  
                          __end_of__parse_file_delete 6892  
                           ??_internalFlash_writePage 000B  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 4652  
                          __end_of__parse_file_create 4908  
                              __end_of_ResetSenseData 8908  
                          __end_of__parse_file_modify 2044  
                          __end_of__parse_file_rename 5E76  
                           internalFlash_read@address 000E  
                            fat_write_to_buffer@start 0025  
                            __parse_command_long@data 009D  
                           __data_sector_from_cluster 9C48  
                           fat_get_format_status@cntr 002E  
                          __end_of__parse_file_resize 2D80  
                             ?__fill_buffer_read_file 009E  
                                               pclath 000FFA  
                                     __end_of_ui_init 9BC2  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00EC  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 8640  
                      __parse_file_rename@file_number 0067  
                          __end_of__display_rebooting 8D40  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
            fat_copy_sector_to_buffer@physical_sector 004F  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 7234  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 009E  
                  __fill_buffer_read_buffer@outBuffer 002D  
                          fat_read_from_buffer@length 0027  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 989A  
             __fill_buffer_get_file_details@outBuffer 003A  
                                      _MSDReadHandler 353C  
                     fat_append_to_file@old_file_size 0092  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 0060  
               __bootloader_check_address@byte_status 000B  
                         __end_of__make_cluster_chain 1890  
                __parse_sector_to_buffer@return_value 005C  
                       internalFlash_readPage@address 0018  
                   __make_cluster_chain@first_cluster 0036  
                                     __initialization 7F0C  
                       fat_read_from_file@file_number 0078  
                            __parse_write_buffer@data 002B  
                           __end_of__flash_get_status 9664  
                        fat_get_file_information@data 0030  
                         fat_read_from_file_fast@data 004A  
                  spi_set_configuration@configuration 0001  
                                 _system_minimal_init 9B6C  
               __end_of_ExternalFlash_MediaInitialize 9B0A  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 9AF0  
                __offset_from_file_number@file_number 0003  
                      __size_of_system_encoder_enable 0010  
                             __end_of_fat_resize_file 6072  
                                         _FileAddress 0172  
                                        __end_of_main 409E  
                                        __end_of_itoa 92F4  
                       __end_of_system_encoder_enable 9C0A  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 8CEA  
                                        __end_of_utoa 78F6  
                       fat_read_from_file_fast@length 0046  
                                __end_of__normal_mode 8A28  
                                    _timer_pseudo_isr 94CE  
                       fat_read_from_file_fast@offset 0064  
                            __parse_command_short@cmd 002C  
                  fat_read_from_file_fast@read_length 0068  
                                    __end_of_i2c_init 9C62  
                                  __flash_buffer_read 8FE2  
                  __size_of_flash_copy_page_to_buffer 001E  
                       fat_read_from_file_fast@sector 0060  
                            __end_of__i2c_acknowledge 9C9E  
                      __end_of__fill_buffer_find_file 7998  
                     fat_append_to_file@new_file_size 008E  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 00D7  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                              _flash_read_from_buffer 96C2  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 9B98  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 017A  
                                api_prepare@outBuffer 00B4  
                                              ??_main 00BB  
                                    __end_of__i2c_get 9C94  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 0100  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 0076  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00BF  
                            _fat_get_file_information 8414  
                            __flash_buffer_read@start 0014  
                                  __write_root@offset 002D  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 9D2E  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 9D2A  
                                 __find_nth_cluster@n 003A  
                                 ?__flash_buffer_read 0014  
                                         ?_USBSuspend 0001  
                                  __write_root@sector 002B  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 016E  
                               ??__bootloader_program 006E  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                       __get_available_cluster@offset 0032  
                              ?_spi_set_configuration 0001  
             fat_write_sector_from_buffer@file_number 0051  
                       __get_available_cluster@sector 0034  
                fat_copy_sector_to_buffer@file_number 0053  
                                _i2c_eeprom_writeByte 9336  
                         ?_spi_get_external_tx_buffer 0001  
                                ?_system_minimal_init 0001  
                  fat_write_sector_from_buffer@sector 0043  
                                     ?_bootloader_run 0001  
                          __end_of__display_suspended 4A5A  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 9932  
                              __flash_write_to_buffer 9032  
                     i2c_digipot_reset_off@data_array 000B  
                      __end_of__fill_buffer_read_file 2B7C  
                                _start_from_byte_next 018B  
                                    ___llmod@dividend 0001  
                    __end_of__fat_offset_from_cluster 9B6C  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                          ?_fat_copy_sector_to_buffer 0043  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0036  
                                          __i2c_start 9CF6  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 90CA  
                                _fat_read_from_buffer 9A44  
                           fat_read_from_file@cluster 0079  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 006E  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 8D96  
                                    __end_of__get_fbr 22A8  
                                    __end_of__get_mbr 6CCC  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 005C  
                                   ??__display_verify 001F  
                                  __size_of_i2c_reset 000E  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 3716  
                                 _flash_pages_written 0174  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                                ??__flash_buffer_read 001B  
            __fill_buffer_get_bootloader_details@cntr 000B  
                               __parse_file_copy@data 0094  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 77AE  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 9C2A  
                   __bootloader_program@page_to_write 00A7  
                                    __read_fat@sector 0032  
                                   _shortPacketStatus 00F7  
                   fat_append_to_file@number_of_bytes 0056  
                                      __CFG_XINST$OFF 000000  
                                    ?_fat_modify_file 0042  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 72EC  
                        __end_of__flash_set_page_size 82B2  
                                     _hexCharsToUint8 9A9E  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                  __parse_buffer_to_sector@out_buffer 0054  
                                              _gblCBW 0100  
                                   _fat_get_file_size 8566  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                      __read_value_from_offset@buffer 0003  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3116 0003  
                       __parse_file_delete@out_buffer 0052  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 00E8  
                                           ??___lwmod 0005  
                                              _buffer 03C0  
                                   _USBEnableEndpoint 93B2  
                       __bootloader_program@address32 00A0  
                      __read_value_from_offset@offset 0001  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 87DE  
                                  ?_fat_get_file_size 0036  
                                              _memset 9776  
                    __end_of__sector_from_file_number 97FA  
                             __parse_sector_to_buffer 4382  
                                              clear_0 7F46  
                                              clear_1 7F5A  
                                              clear_2 7F6C  
                                              clear_3 7F78  
                                              clear_4 7F84  
                                              clear_5 7F90  
                           _ExternalFlash_SectorWrite 956A  
                                   api_parse@inBuffer 00A4  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp BF6D  
                                              _reboot 9B0A  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                   __end_of_flash_copy_page_to_buffer 9A9E  
                                              _ui_run 5768  
                                              _spi_tx 8BE6  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0009  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 9600  
              __make_cluster_chain@number_of_clusters 0038  
                                              _tx_buf 01D0  
                       __parse_file_resize@out_buffer 0057  
                                    ?_fat_rename_file 0038  
                          __parse_command_long@length 00A3  
                           fat_copy_file@return_value 0090  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0102  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 97A2  
                        __end_of_jump_to_main_program 9D0C  
                               __end_of_fat_find_file 6972  
                      __parse_command_long@out_buffer 009F  
                                 ??_fat_get_file_size 003A  
                       __size_of__parse_command_short 00C6  
                    __size_of__read_value_from_offset 0046  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0226  
                                        __mediumconst BC6C  
                                 __end_of__i2c_open_1 9B3C  
                          __size_of__find_nth_cluster 009E  
                   __fill_buffer_read_buffer@inBuffer 002B  
                      i2c_digipot_reset_on@data_array 000B  
                               ??_system_minimal_init 0004  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 89CA  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 896A  
                                              tblptru 000FF8  
                                    __end_of_spi_init 93B2  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00C1  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                                       spi_tx_rx@data 0005  
                   __size_of__fat_sector_from_cluster 0018  
                          __end_of__root_is_available 896A  
                             __spi_external_rx_buffer 0300  
                           ?__fat_sector_from_cluster 0001  
                                       spi_tx_tx@data 0005  
                               __end_of_fat_copy_file 625A  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0044  
                                       main@tx_buffer 00C3  
                         __end_of_fat_write_to_buffer 9A80  
                               ?_fat_read_from_buffer 0025  
                               __end_of_ui_get_status 9D24  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00F6  
                          ??_APP_DeviceCustomHIDTasks 00B7  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0340  
                                   _SYSTEM_Initialize 8E98  
                               fat_modify_file@length 0046  
                               fat_modify_file@offset 0066  
                                 ??_i2c_set_frequency 0001  
                                          __accesstop 0060  
                             __end_of__initialization 7F96  
                               fat_modify_file@sector 0060  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                        fat_resize_file@first_cluster 0064  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 9C8A  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00A6  
                         __end_of__parse_command_long 3A92  
                   __end_of_failed_line3_noNextRecord BE16  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 85D4  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                                ??_flash_partial_read 0030  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 93EE  
                    __size_of__parse_buffer_to_sector 0160  
                            _bootloader_get_file_size 9BE8  
                 __size_of_ExternalFlash_CapacityRead 0012  
                           fat_read_from_buffer@start 0025  
                                       __end_of_sd000 BFCF  
                                       __end_of_sd001 BF1B  
                                       __end_of_sd002 BF49  
                                       __end_of_sd003 BFA4  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 9D32  
                                        __pidataBANK1 990C  
                           ??_bootloader_get_rec_data 0001  
                                    ?_fat_resize_file 004D  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 9CD0  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 9CC6  
                           __get_available_root_entry 997A  
                                 fat_rename_file@cntr 005E  
                                 fat_rename_file@name 0038  
                ExternalFlash_SectorWrite@sector_addr 0027  
                      __parse_file_modify@file_number 008F  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 003E  
                                  __size_of__read_fat 0056  
                                     _active_protocol 01B1  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 12DC  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 6E60  
                                 _userInterfaceStatus 00E6  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                        fat_copy_file@new_file_number 008F  
                                     _MSDErrorHandler 586E  
                      ?_ExternalFlash_MediaInitialize 0001  
                __sector_from_file_number@file_number 0003  
                          flash_write_to_buffer@start 001F  
                           __end_of_i2c_set_frequency 97CE  
                       __size_of__display_programming 01D6  
                                   __end_of_i2c_reset 9C48  
                             __end_of_system_delay_ms 9956  
                                  __size_of_api_parse 012A  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0178  
                      __end_of_failed_line3_startCode BCBD  
                               _communicationSettings 0139  
                                  _flash_sector_write 8D96  
                                  _fat_read_from_file 625A  
                  __parse_sector_to_buffer@out_buffer 0056  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 004F  
                             flash_sector_write@match 0024  
               __end_of_MSDProcessCommandMediaPresent 0C2A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 086C  
                                        _failed_line1 BD98  
                                        _failed_line2 BCE2  
                                        _failed_line4 BE69  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 0190  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 8EEC  
                                   __end_of__i2c_read 8028  
                                   __end_of__i2c_send 9D06  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 75B6  
                                 ?_flash_sector_write 0020  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 9CF6  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 006E  
                                         ?__i2c_write 0006  
                       __read_value_from_offset@value 0008  
                                          __pbssBANK0 00C5  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                               _flash_write_to_buffer 96F0  
                 __parse_sector_to_buffer@file_number 005B  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 5660  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 015A  
                                           ?_i2c_init 0001  
                      __parse_sector_to_buffer@sector 005D  
                    __fill_buffer_read_file@outBuffer 00A0  
                                    _mediaInformation 01AA  
                             __end_of_hexCharsToUint8 9ABA  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 0035  
                              ?__bootloader_find_file 0001  
                      __get_available_cluster@cluster 0030  
                       __end_of_fat_get_format_status 77AE  
                     ??__fill_buffer_get_file_details 003C  
                                       __flash_wakeup 8E42  
                            __fill_buffer_get_display 73A4  
                             ?__get_available_cluster 002C  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 00D1  
                               __size_of__normal_mode 005E  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                    __end_of_USBCtrlEPServiceComplete 5D78  
               __end_of_APP_DeviceCustomHIDInitialize 9536  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 9502  
                         MSDTransferTerminated@handle 000C  
                  __size_of__data_sector_from_cluster 000E  
                        __size_of__parse_write_buffer 0152  
                           __bootloader_check_address 6A50  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                           ??__parse_sector_to_buffer 005A  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 2D80  
                                   ?__display_checked 0001  
                                ??_flash_sector_write 0024  
                   __size_of__fat_offset_from_cluster 0018  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 005C  
                        __size_of__flash_partial_read 0078  
                           ?__fat_offset_from_cluster 0001  
                            __size_of_fat_delete_file 0048  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 7998  
                                             ?_memset 0001  
                                          _device_dsc BFA4  
                 fat_get_file_information@file_number 0037  
                                    ??_display_update 0011  
                      __parse_buffer_to_sector@sector 005B  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 9B24  
                                    _USBCtrlEPService 750A  
                                             ?_ui_run 0001  
                                          _ep_data_in 016F  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0146  
                                  __display_clear@row 0003  
                            __delete_root@file_number 002E  
                                   ?__parse_file_copy 0094  
                       fat_append_to_file@file_number 0097  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 409E  
               __data_sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 5444  
                             ?__write_value_to_offset 0001  
                                  _USBCheckStdRequest 6348  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 BEA7  
                     __size_of_internalFlash_readPage 0042  
                  __parse_file_append@number_of_bytes 009B  
                             ??_MSDCheckForErrorCases 000F  
                                  ??__parse_file_copy 005D  
                                 ?_fat_append_to_file 0056  
                              fat_append_to_file@data 0058  
                                          _flash_init 9AD6  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 6BFE  
                                   __end_of__get_data 9874  
                                   __end_of__get_date 9CEE  
                                 _USBStdSetCfgHandler 642A  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 9CE4  
                                 fat_copy_file@sector 0091  
                                   __end_of__get_root 3C28  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 BD68  
                                          _done_line2 BE9D  
                                          _done_line3 BD58  
                                          _done_line4 BD48  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                              ??_fat_read_from_buffer 002B  
                     __end_of_bootloader_get_rec_data 9BAE  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0176  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 8238  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 9502  
                     __parse_file_append@return_value 0099  
                                  __get_first_cluster 8EEC  
                                        __normal_mode 89CA  
                          __end_of_APP_DeviceMSDTasks 9BD6  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 8E42  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 9C0A  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 0096  
                             __size_of_hexCharToUint8 002C  
                   __size_of__sector_from_file_number 002C  
               __end_of__flash_compare_page_to_buffer 832A  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 82B2  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename BFB6  
                           ?__sector_from_file_number 0001  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                       flash_copy_page_to_buffer@page 001E  
                          __flash_buffer_read@command 001B  
                       fat_read_from_file@return_code 007D  
                                    _system_full_init 8A28  
                                   __read_fat@cluster 0030  
                      __end_of__get_available_cluster 7172  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 0062  
                      __end_of_bootloader_get_entries 9CC6  
                              fat_find_file@extension 002E  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 532C  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 5444  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 005A  
                            fat_find_file@file_number 0032  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 67B2  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 006E  
           __end_of__get_available_offset_from_buffer 8ADE  
          __size_of__get_available_offset_from_buffer 005A  
                 ??__get_available_offset_from_buffer 0005  
                  ?__get_available_offset_from_buffer 0001  
                   __get_available_offset_from_buffer 8A84  
                                   __end_of__spi_init 9460  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 44EE  
                                             __Lparam 0000  
                                  __parse_file_create 47B2  
                                _jump_to_main_program 9D06  
                      __parse_file_rename@out_idx_ptr 0064  
                            __size_of_fat_create_file 014E  
                                   __end_of_hid_rpt01 BF8A  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 5974  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                  __parse_file_modify 1DCC  
                             ?_flash_read_from_buffer 001F  
                                  __parse_file_rename 5D78  
                          ??_fat_get_file_information 0032  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 8486  
                                  __parse_file_resize 2B7C  
                                          _last_error 018C  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0066  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0380  
                   __end_of__data_sector_from_cluster 9C56  
                            ?_internalFlash_erasePage 0009  
                                __end_of_found_line3b BE96  
                                             ___lldiv 813A  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 8778  
                                             ___lwdiv 8F40  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 92F4  
                                   _fast_read_cluster 00FB  
                                  __display_rebooting 8CEA  
                         __end_of__parse_format_drive 770A  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 0050  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 005A  
                                 ?__parse_file_create 0059  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 9428  
                                             __pcinit 7F0C  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 BEE7  
                      __end_of__write_value_to_offset 956A  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 3F24  
                                             __ptext1 5768  
                                     __display_failed 12DC  
                                             __ptext2 9BFA  
                                             __ptext3 971E  
                                             __ptext4 999E  
                                             __ptext5 99C0  
                                             __ptext6 9874  
                                             __ptext7 5B78  
                                             __ptext8 94CE  
                                 ?__parse_file_modify 0056  
                                             __ptext9 9C0A  
                                             _inPipes 00CB  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0060  
                                     __size_of_ui_run 0106  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00EE  
                                 ?__parse_file_resize 0055  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005C  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 9A24  
                                ??__get_first_cluster 0032  
                             __read_value_from_offset 91A2  
                             _fat_read_from_file_fast 273A  
                                        ??_USBSuspend 0018  
                                     __display_search 4A5A  
                                  __end_of_USBMSDInit 5A76  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 9C2A  
                                             _msd_cbw 000D40  
                                     __display_verify 50D6  
                                             _msd_csw 000D80  
                            __fill_buffer_read_buffer 6072  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 9C80  
                            __offset_from_file_number 98E6  
                                             _ui_init 9BAE  
                                          ??_fat_init 0030  
                      __parse_file_append@file_number 009A  
                     __end_of__parse_sector_to_buffer 44EE  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 9B98  
                                  __end_of_USB_CD_Ptr BEA5  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0096  
                              ?_flash_write_to_buffer 001F  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 0042  
                                             _strncmp 7172  
                                 _flash_partial_write 84F6  
                         ??_fat_copy_sector_to_buffer 0045  
                                end_of_initialization 7F96  
                                ??__parse_file_delete 0056  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 8C3E  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 335E  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 3170  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 0098  
                                ??__parse_file_create 005F  
                                  __end_of_USB_SD_Ptr BE81  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                 _pBDTEntryEP0OutNext 00E1  
                                ??__parse_file_modify 005C  
                           __end_of_MSDProcessCommand 5556  
                                             itoa@buf 0011  
                                ??__parse_file_rename 005F  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 004D  
                                ??__parse_file_resize 005B  
                                     _USB1msTickCount 0162  
                                    ?_hexCharsToUint8 0003  
                            __flash_partial_read@data 001A  
                              _internalFlash_readPage 9270  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                         i2c_eeprom_writeByte@address 000B  
           __fill_buffer_get_file_details@file_number 003D  
                               ??_USBStdSetCfgHandler 0018  
                     __parse_command_long@out_idx_ptr 00A1  
                                     ___lldiv@divisor 0005  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                                  __display_suspended 4908  
                      __end_of_flash_read_from_buffer 96F0  
                             __parse_buffer_to_sector 4652  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 9694  
                             _USBCtrlEPAllowDataStage 7A3A  
                                   __end_of_spi_tx_rx 7F0C  
                                   __end_of_spi_tx_tx 80B4  
               __end_of__fill_buffer_get_file_details 8414  
              __size_of__fill_buffer_get_file_details 0072  
                       __fill_buffer_get_file_details 83A2  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
        __make_cluster_chain@different_sector_cluster 0040  
                __end_of_ExternalFlash_SectorSizeRead 9CA8  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 9C9E  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 002C  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 5C78  
                                             utoa@val 000A  
                                           _MSD_State 00ED  
                                 ?__display_suspended 0001  
             __end_of__cluster_from_sector_and_offset 98E6  
            __size_of__cluster_from_sector_and_offset 0026  
                   ??__cluster_from_sector_and_offset 0005  
                    ?__cluster_from_sector_and_offset 0001  
                     __cluster_from_sector_and_offset 98C0  
                         __end_of__bootloader_program 086C  
                       __parse_file_modify@out_buffer 0058  
                               _system_encoder_enable 9BFA  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C4  
                                       ??_api_prepare 0060  
                          _USBStatusStageEnabledFlag1 00F1  
                          _USBStatusStageEnabledFlag2 00F0  
                      __parse_format_drive@out_buffer 0029  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                        __size_of__make_cluster_chain 02BE  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                      __end_of__flash_write_to_buffer 9082  
                                    __CFG_DSBOREN$OFF 000000  
                      internalFlash_writePage@address 0013  
                            ?_internalFlash_writePage 0009  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                                   ??_fat_delete_file 004D  
                       __parse_file_modify@start_byte 0092  
                    __make_cluster_chain@next_cluster 004B  
                              fat_modify_file@cluster 0063  
                                         ?_flash_init 0001  
                                    __CFG_CPUDIV$OSC1 000000  
                     __fill_buffer_find_file@inBuffer 0037  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                  api_parse@outBuffer 00A7  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0250  
                                  _BothEP0OutUOWNsSet 0191  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 03C0  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 8C94  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                                ??__display_suspended 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00FD  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 BDA8  
                                       _checked_line2 BC6D  
                                       _checked_line3 BE71  
                                       _checked_line4 BD06  
                                 __delete_root@offset 002B  
                          ??_bootloader_get_file_size 0005  
                 __parse_write_buffer@number_of_bytes 0032  
                                 __delete_root@sector 0029  
                            _failed_line3_dataTooLong BE25  
                             __size_of__display_start 01F0  
                                     _suspended_line1 BD38  
                                     _suspended_line2 BE4D  
                                     _suspended_line3 BEA5  
                                     _suspended_line4 BD28  
                        __end_of_USBTransferOnePacket 5B78  
                              i2c_display_cursor@line 000F  
                    __fat_sector_from_cluster@cluster 0001  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 0011  
                        __end_of__parse_command_short 6F26  
                         __size_of__flash_buffer_read 0050  
               __end_of_internalFlash_pageFromAddress 9AD6  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 9ABA  
                                __end_of_reboot_line1 BE40  
                                __end_of_search_line1 BDE8  
                                __end_of_search_line2 BD28  
                                __end_of_search_line3 BCAA  
                                __end_of_search_line4 BE60  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 8908  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                  __make_cluster_chain@minimum_sector 003E  
                             __end_of__display_failed 15D2  
                                    ?_MSDErrorHandler 0001  
               fat_resize_file@new_number_of_clusters 0062  
                  __find_nth_cluster@sector_in_buffer 003E  
                        fat_resize_file@new_file_size 004D  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 7D4E  
                               ??_flash_partial_write 0028  
                        __write_value_to_offset@value 0005  
                       ??_bootloader_get_rec_checksum 0001  
                __parse_buffer_to_sector@return_value 0059  
                           _fat_copy_sector_to_buffer 72EC  
                      __bootloader_program@entry_page 0078  
                  fat_copy_sector_to_buffer@file_size 0049  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00DE  
                             __end_of__display_search 4BAC  
                               __end_of_USBDeviceInit 4E4E  
               __end_of_USBIncrement1msInternalTimers 9A44  
              __size_of_USBIncrement1msInternalTimers 0020  
                       _USBIncrement1msInternalTimers 9A24  
                                     ??__display_done 001F  
                     __sector_from_file_number@sector 0004  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 5202  
                           ??__read_value_from_offset 0005  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0254  
                           ??_fat_read_from_file_fast 0050  
                            __end_of_USBStallEndpoint 5768  
                                 _i2c_eeprom_readByte 8F92  
                                   ??_fat_create_file 0055  
                 __bootloader_program@start_from_byte 00A4  
                  __fill_buffer_read_file@data_length 00AA  
                         __end_of_system_minimal_init 9B82  
                            __size_of_fat_modify_file 023E  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange BC82  
                     __parse_write_buffer@out_idx_ptr 002F  
                                      __end_of_memcpy 8844  
                                     _MSDRetryAttempt 00E9  
                                      __end_of_memset 97A2  
                      __parse_file_modify@out_idx_ptr 005A  
                                      __end_of_reboot 9B24  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                          ?_flash_copy_page_to_buffer 001E  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 0192  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 586E  
                                      __end_of_spi_tx 8C3E  
               __get_available_root_entry@file_number 0036  
                                 fat_modify_file@data 0048  
                       __parse_file_append@out_buffer 005C  
                                 __end_of__ui_encoder 5C78  
                           __flash_set_page_size@size 0018  
                         flash_write_to_buffer@length 0021  
                                 start_initialization 7F0C  
                            fat_copy_file@file_number 0093  
                                 fat_modify_file@root 006E  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                 __parse_write_buffer 4BAC  
                                   ??_MSDWriteHandler 0030  
                                           _i2c_reset 9C3A  
                                 __end_of_api_prepare 4382  
                   __end_of__get_available_root_entry 999E  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 009E  
                                     _USBMSDOutHandle 00DF  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 7E78  
                                        ??__i2c_start 0001  
                             __flash_buffer_read@data 0018  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1DCC  
                                 __flash_partial_read 832A  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 0200  
                             ??__bootloader_find_file 0043  
                                       _MSDHostNoData 00E7  
                                      _hexCharToUint8 974A  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                   __end_of_USBCtrlEPAllowStatusStage 6D98  
                            _fast_read_cluster_number 00F9  
                                ?_i2c_eeprom_readByte 0012  
                        __end_of__display_programming 38EC  
                            __end_of_USBCtrlEPService 75B6  
                          __size_of_MSDProcessCommand 0112  
                      ??_fat_write_sector_from_buffer 0045  
                                __system_encoder_init 93EE  
                                           __i2c_read 7F9C  
                                           __i2c_send 9CFE  
                           ??__parse_buffer_to_sector 0058  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 9CEE  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                 __parse_sector_to_buffer@out_idx_ptr 0058  
                        __size_of_fat_write_to_buffer 001E  
                            ??__fill_buffer_find_file 003B  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 9D2A  
                          __flash_partial_read@length 0018  
                                ?__parse_write_buffer 002B  
                       __end_of_failed_line3_checksum BE07  
                       __root_is_available@first_byte 0035  
                              _pBDTEntryEP0OutCurrent 00E3  
                              __size_of_fat_find_file 00E0  
                    __end_of_fat_get_file_information 8486  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 BD88  
                                   _programming_line2 BCD0  
                                   _programming_line3 BE81  
                                   _programming_line4 BD78  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                               spi_init@configuration 0004  
                       fat_append_to_file@return_code 0096  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 4F9C  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00B2  
                          fat_get_file_size@file_size 003E  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01B3  
                           ?_APP_DeviceCustomHIDTasks 0001  
                      __size_of_i2c_digipot_backlight 0026  
                              __size_of_fat_copy_file 00F2  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 01A6  
                       __end_of_i2c_digipot_backlight 989A  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 002C  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 002C  
                                  __end_of__i2c_start 9CFE  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 0038  
                                  __end_of__i2c_write 9112  
                            __end_of_system_full_init 8A84  
                           __root_is_available@offset 0032  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00FE  
                            ??__fill_buffer_read_file 00A2  
                      __end_of_USBStdGetStatusHandler 7660  
                          ??_system_minimal_init_undo 0001  
                            __size_of_fat_resize_file 00FE  
                            __fat_sector_from_cluster 9B3C  
                         api_parse@receivedDataLength 00A6  
                                    api_parse@out_idx 00AE  
                   __end_of__bootloader_check_address 6B2A  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 96C2  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 9694  
         fat_copy_sector_to_buffer@number_of_clusters 004D  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 0060  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                          ?_i2c_reset 0001  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension BFCB  
            __get_available_offset_from_buffer@buffer 0003  
                       __end_of_MSDCheckForErrorCases 66D0  
             __bootloader_program@address_within_page 007A  
                             __end_of_suspended_line1 BD48  
                             __end_of_suspended_line2 BE57  
                             __end_of_suspended_line3 BEA6  
                             __end_of_suspended_line4 BD38  
                          fat_create_file@file_number 0064  
                              __end_of_hexCharToUint8 9776  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 0156  
            __get_available_offset_from_buffer@offset 0007  
                  __end_of_flash_command_pagesize_512 BFC7  
                          _flash_command_pagesize_512 BFC3  
                  __end_of_flash_command_pagesize_528 BFC3  
                          _flash_command_pagesize_528 BFBF  
                                      __flash_is_busy 99E2  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 84F6  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b BE8F  
                                           __get_data 984C  
                                           __get_date 9CE4  
                                   _flash_sector_read 95CE  
                    __bootloader_program@return_value 009C  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 0033  
                                   ?_timer_pseudo_isr 0001  
                     __end_of__read_value_from_offset 91E8  
                     __end_of_fat_read_from_file_fast 2960  
                                           __get_time 9CDA  
                                           __get_root 3A92  
                              flash_sector_write@data 0022  
                              flash_sector_write@page 0020  
                                 __end_of__write_root 9270  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 9498  
                           __size_of__parse_file_copy 00FE  
                                  ?_flash_sector_read 0028  
                          __end_of_i2c_display_cursor 997A  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 91E8  
                                        _pBDTEntryOut 0140  
                                          ?__i2c_stop 0001  
                          fat_modify_file@file_number 0062  
                          fat_rename_file@file_number 003C  
                                           __read_fat 8DEC  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 BD98  
                           __end_of_programming_line2 BCE2  
                           __end_of_programming_line3 BE88  
                           __end_of_programming_line4 BD88  
                    __end_of_ExternalFlash_SectorRead 95CE  
                               ??__parse_write_buffer 0031  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 9CDA  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 9CD0  
                  __get_available_cluster@skip_sector 002E  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 770A  
                   fat_read_from_file_fast@start_byte 0042  
                                   fat_find_file@name 002C  
                      MSDProcessCommandMediaPresent@i 0047  
                                 ??_flash_sector_read 002C  
                                           _api_parse 5202  
                           fat_create_file@root_entry 0065  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 66D0  
                                  _APP_DeviceMSDTasks 9BC2  
                                       __pmediumconst BC6C  
                                 fat_find_file@offset 0035  
                               ??__flash_partial_read 001C  
                                           __ptext100 9D2E  
                                           __ptext101 7458  
                                           __ptext110 66D0  
                                           __ptext102 4214  
                                           __ptext111 9B82  
                                           __ptext103 2960  
                                           __ptext200 15D2  
                                           __ptext120 9D12  
                                           __ptext112 83A2  
                                           __ptext104 625A  
                                           __ptext201 8D96  
                                           __ptext121 9D18  
                                           __ptext113 73A4  
                                           __ptext105 273A  
                                           __ptext210 8B36  
                                           __ptext202 9536  
                                           __ptext130 9956  
                                           __ptext122 78F6  
                                           __ptext114 97FA  
                                           __ptext106 6072  
                                           __ptext211 8B8E  
                                           __ptext203 70AE  
                                           __ptext131 989A  
                                           __ptext123 5202  
                                           __ptext115 7AD8  
                                           __ptext107 9A44  
                                           __ptext220 9C48  
                                           __ptext212 82B2  
                                           __ptext204 8A84  
                                           __ptext140 9BE8  
                                           __ptext132 6972  
                                           __ptext124 6E60  
                                           __ptext116 3170  
                                           __ptext108 96C2  
                                           __ptext221 4652  
                                           __ptext213 8414  
                                           __ptext205 98C0  
                                           __ptext141 12DC  
                                           __ptext133 50D6  
                                           __ptext125 9932  
                                           __ptext117 9D0C  
                                           __ptext109 8FE2  
                                           __ptext230 8E42  
                                           __ptext222 81BC  
                                           __ptext214 7C14  
                                           __ptext206 24FC  
                                           __ptext150 9082  
                                           __ptext142 9CB2  
                                           __ptext134 4908  
                                           __ptext126 9B0A  
                                           __ptext118 9CA8  
                                           __ptext231 8BE6  
                                           __ptext223 8566  
                                           __ptext215 95CE  
                                           __ptext207 84F6  
                                           __ptext151 3DA8  
                                           __ptext143 9D24  
                                           __ptext135 2F80  
                                           __ptext127 9D1E  
                                           __ptext119 9B98  
                                           __ptext232 9632  
                                           __ptext224 8908  
                                           __ptext216 91A2  
                                           __ptext208 9032  
                                           __ptext160 90CA  
                                           __ptext152 9CD0  
                                           __ptext144 9CBC  
                                           __ptext136 4A5A  
                                           __ptext128 8640  
                                           __ptext233 7E78  
                                           __ptext225 8EEC  
                                           __ptext217 8DEC  
                                           __ptext209 8028  
                                           __ptext161 8ADE  
                                           __ptext153 6FEA  
                                           __ptext145 0C2A  
                                           __ptext137 8CEA  
                                           __ptext129 8C94  
                                           __ptext234 97CE  
                                           __ptext226 9600  
                                           __ptext218 9B3C  
                                           __ptext170 7660  
                                           __ptext162 9CEE  
                                           __ptext154 92B2  
                                           __ptext146 8778  
                                           __ptext138 3716  
                                           __ptext235 98E6  
                                           __ptext227 5556  
                                           __ptext219 9B54  
                                           __ptext171 2D80  
                                           __ptext163 9CF6  
                                           __ptext155 7852  
                                           __ptext147 813A  
                                           __ptext139 335E  
                                           __ptext236 5A76  
                                           __ptext228 832A  
                                           __ptext180 1DCC  
                                           __ptext172 3A92  
                                           __ptext164 9CFE  
                                           __ptext156 92F4  
                                           __ptext148 409E  
                                           __ptext237 0000  
                                           __ptext229 99E2  
                                           __ptext181 67B2  
                                           __ptext173 6BFE  
                                           __ptext165 38EC  
                                           __ptext157 8F40  
                                           __ptext149 9CC6  
                                           __ptext190 7172  
                                           __ptext182 9112  
                                           __ptext174 2044  
                                           __ptext166 4BAC  
                                           __ptext158 9336  
                                           __ptext191 9CDA  
                                           __ptext183 915A  
                                           __ptext175 8D40  
                                           __ptext167 9A62  
                                           __ptext159 97A2  
                                           __ptext192 9CE4  
                                           __ptext184 47B2  
                                           __ptext176 984C  
                                           __ptext168 96F0  
                                           __ptext193 997A  
                                           __ptext185 5E76  
                                           __ptext177 2B7C  
                                           __ptext169 4382  
                                           __ptext194 72EC  
                                           __ptext186 6168  
                                           __ptext178 5D78  
                                           __ptext195 9A80  
                                           __ptext187 4E4E  
                                           __ptext179 7B76  
                                           __ptext196 44EE  
                                           __ptext188 87DE  
                                           __ptext197 7998  
                                           __ptext189 6892  
                                           __ptext198 5F74  
                                           __ptext199 922C  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0033  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                         __size_of_flash_sector_write 0056  
                                            ?___lwdiv 0001  
                                           __spi_init 9428  
                          ??__fill_buffer_read_buffer 002F  
                                            ?___lwmod 0001  
                          ??__offset_from_file_number 0003  
                         __size_of_fat_read_from_file 00EE  
                                    ?__display_search 0001  
                                           _hid_rpt01 BF6D  
                                         __ui_encoder 5B78  
                           __get_first_cluster@offset 0034  
                                           _idle_rate 01B2  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0032  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 4214  
                             __parse_file_delete@data 0050  
                           fat_modify_file@start_byte 0042  
                     __end_of__parse_buffer_to_sector 47B2  
                                     __i2c_write@data 0006  
                                _file_maximum_address 014E  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 004D  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0051  
                      internalFlash_erasePage@address 000F  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 5A76  
                          __make_cluster_chain@offset 0049  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 010A  
                          __make_cluster_chain@sector 0045  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 5660  
                             ??_flash_write_to_buffer 0025  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 6E60  
                        ??_spi_get_external_rx_buffer 0003  
                 __fill_buffer_get_display@secondHalf 0007  
                              fat_read_from_file@data 0076  
                              __end_of__flash_is_busy 9A04  
                                       _fat_find_file 6892  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 007E  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 0C2A  
                                   __display_itoa_u16 6FEA  
                    __size_of_internalFlash_erasePage 006C  
                        __end_of_USBCtrlTrfOutHandler 8778  
                                   ??_fat_modify_file 004A  
                           __end_of_flash_sector_read 9600  
                               ??_USBStdGetDscHandler 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 BDD8  
                                 __end_of_found_line2 BCD0  
                                 __end_of_found_line3 BE9D  
                                 __end_of_found_line4 BD06  
                                         _ep_data_out 016C  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 9CB2  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 99E2  
                       _bootloader_get_rec_dataLength 9CA8  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 00EA  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 9082  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
              __cluster_from_sector_and_offset@offset 0003  
                       __size_of_fat_read_from_buffer 001E  
                                       _fat_copy_file 6168  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 335E  
                    __end_of_bootloader_get_file_size 9BFA  
                                         _file_buffer 0290  
              __cluster_from_sector_and_offset@sector 0001  
                                     _config_internal 0169  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                        __parse_file_copy@file_number 005F  
                                       _ui_get_status 9D1E  
                                     _config_external 0166  
                                      __display_start 2F80  
                      __parse_file_append@out_idx_ptr 005E  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                 __make_cluster_chain 15D2  
                     fat_copy_file@number_of_clusters 0089  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 9824  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 65EE  
                      __root_is_available@file_number 0034  
                 __parse_buffer_to_sector@file_number 005A  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 003C  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                            ?__parse_sector_to_buffer 0054  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 00A2  
                       __parse_file_create@out_buffer 005B  
                            __fat_offset_from_cluster 9B54  
                     __size_of__fill_buffer_find_file 00A2  
                      __parse_file_delete@file_number 0058  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 0038  
                   __bootloader_verify_file@address32 009B  
                          __end_of_internalFlash_read 94CE  
                                          ?_api_parse 00A4  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 005A  
                                            _MSDTasks 22A8  
                          _USBDeferINDataStagePackets 00EF  
                                        ??_fat_format 0025  
                                     _fat_delete_file 9112  
                                _active_configuration 018A  
                           ?__ic2_display_set_address 0001  
                                            _SSP1CON1 000FC6  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0059  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                     __parse_file_rename@return_value 0066  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 7DE4  
                          ?__data_sector_from_cluster 0001  
                                   __i2c_write@length 0008  
                                           _spi_tx_rx 7E78  
                                           _spi_tx_tx 8028  
                                __display_verify@cntr 0021  
                                ?__make_cluster_chain 0036  
                     __make_cluster_chain@next_offset 003C  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 00DD  
                 __size_of_spi_get_external_tx_buffer 000A  
                               flash_sector_read@data 002A  
                                __display_programming 3716  
                      __parse_file_resize@file_number 0088  
                               ?_USBTransferOnePacket 0001  
                               flash_sector_read@page 0028  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 0054  
                           __end_of__display_itoa_u16 70AE  
                           __end_of__display_itoa_u32 0F98  
                     __size_of__fill_buffer_read_file 021C  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 BDC8  
                                __end_of_verify_line2 BE4D  
                                __end_of_verify_line3 BE8F  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 002C  
                            fat_rename_file@extension 003A  
                  __size_of_fat_copy_sector_to_buffer 00B8  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00F5  
                   __end_of_ExternalFlash_MediaDetect 9D32  
                        __size_of__parse_format_drive 00AA  
                                        _reboot_line1 BE33  
                                        _search_line1 BDD8  
                                        _search_line2 BD17  
                                        _search_line3 BC96  
                                        _search_line4 BE57  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 006A  
                                     ?__flash_is_busy 0001  
                                         ??_i2c_reset 0001  
                    __end_of__fill_buffer_get_display 7458  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 922C  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 90CA  
                   __size_of_fat_get_file_information 0072  
                                _bootloader_get_error 9D24  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0030  
                              __end_of__display_found 353C  
                             __end_of_USBStallHandler 922C  
                            __sector_from_file_number 97CE  
                      __end_of_internalFlash_readPage 92B2  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                      __parse_file_create@file_number 0085  
                              __end_of__display_start 3170  
                      __parse_write_buffer@out_buffer 002D  
                                         _INTCON2bits 000FF1  
                                      ?_fat_copy_file 0059  
                                         _INTCON3bits 000FF0  
                                           copy_data0 7F20  
                        __size_of__system_timer0_init 0020  
                                   ??_fat_resize_file 0051  
                            __size_of_system_delay_ms 0024  
                __fill_buffer_read_buffer@data_length 0033  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                           __find_nth_cluster@cluster 0038  
                         __end_of_USBStdSetCfgHandler 650C  
                         __size_of__parse_file_delete 00E0  
                                  __end_of_fat_format 2F80  
                         __size_of__parse_file_append 0164  
                         __size_of__parse_file_create 0156  
                                 __display_found@cntr 0028  
                                            _i2c_init 9C56  
                  __parse_file_modify@number_of_bytes 0090  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 0278  
                    __size_of_internalFlash_writePage 00B8  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00EB  
                         __size_of__parse_file_rename 00FE  
                                         ??__i2c_stop 0001  
                         __size_of__parse_file_resize 0204  
                      __parse_write_buffer@start_byte 0034  
                                  __end_of_device_dsc BFB6  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 9C8A  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 0012  
                                     _fat_create_file 4E4E  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0072  
                                            __Hrparam 0000  
                        __parse_file_create@file_size 0086  
                         __end_of_bootloader_filename BFBF  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 9AF0  
                                      _TransferLength 00DB  
                                _bootloader_extension BFC7  
                           fat_write_to_buffer@length 0027  
                          __end_of_USBCheckMSDRequest 6FEA  
                                     api_parse@in_idx 00AD  
               fat_read_from_file_fast@cluster_number 004E  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 959C  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 BD78  
                                  __end_of_done_line2 BEA3  
                                  __end_of_done_line3 BD68  
                                  __end_of_done_line4 BD58  
                                      __i2c_wait_idle 8ADE  
                                     _MSDWriteHandler 1890  
                        fat_create_file@first_cluster 0062  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                               ??__make_cluster_chain 003A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 018E  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 9C1A  
                                         _found_line1 BDC8  
                                         _found_line2 BCBD  
                                         _found_line3 BE96  
                                         _found_line4 BCF4  
                                            __get_fat 8D40  
                                            __get_fbr 2044  
                                            __get_mbr 6BFE  
                                __size_of__i2c_open_1 0018  
                         ??_flash_copy_page_to_buffer 0020  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 9BE8  
                          _ExternalFlash_CapacityRead 9BD6  
                                 _fat_write_to_buffer 9A62  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 78F6  
                             __display_suspended@cntr 0001  
                        __size_of__bootloader_program 03D0  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 9C1A  
                    __get_first_cluster@first_cluster 0036  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                   __end_of_fat_copy_sector_to_buffer 73A4  
                          __size_of_flash_sector_read 0032  
                                    __display_checked 3DA8  
               __end_of_bootloader_get_rec_recordType 9D12  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 9D0C  
                            ??__get_available_cluster 0030  
                                            __ptext10 9C3A  
                                            __ptext11 9B6C  
                                            __ptext20 9C1A  
                                            __ptext12 9C56  
                                            __ptext21 770A  
                                            __ptext13 9B24  
                                            __ptext30 0020  
                                            __ptext22 9A04  
                                            __ptext14 8A28  
                                            __ptext31 9A9E  
                                            __ptext23 93EE  
                                            __ptext15 9BAE  
                            fat_read_from_buffer@data 0029  
                                            __ptext40 9824  
                                            __ptext32 8486  
                                            __ptext24 9C62  
                                            __ptext16 9AD6  
                                            __ptext41 896A  
                                            __ptext33 974A  
                                            __ptext25 9C6C  
                                            __ptext17 9376  
                                            __ptext50 9C94  
                                            __ptext42 9694  
                                            __ptext34 7234  
                                            __ptext26 9D06  
                                            __ptext18 9428  
                                            __ptext51 3C28  
                                            __ptext43 6A50  
                                            __ptext35 9270  
                                            __ptext27 86AA  
                                            __ptext19 8238  
                                            __ptext60 7A3A  
                                            __ptext52 9460  
                                            __ptext44 77AE  
                                            __ptext36 9498  
                                            __ptext28 0F98  
                                            __ptext61 6348  
                                            __ptext53 9664  
                                            __ptext45 89CA  
                                            __ptext37 9ABA  
                                            __ptext29 049C  
                                            __ptext70 8E98  
                                            __ptext62 642A  
                                            __ptext54 91E8  
                                            __ptext46 8F92  
                                            __ptext38 9C76  
                                            __ptext71 8C3E  
                                            __ptext63 9776  
                                            __ptext55 9A24  
                                            __ptext47 7F9C  
                                            __ptext39 85D4  
                                            __ptext80 6D98  
                                            __ptext72 9C2A  
                                            __ptext64 75B6  
                                            __ptext56 4CFE  
                                            __ptext48 9C80  
                                            __ptext81 6B2A  
                                            __ptext73 5974  
                                            __ptext65 4F9C  
                                            __ptext57 750A  
                                            __ptext49 9C8A  
                                            __ptext90 353C  
                                            __ptext82 9BC2  
                                            __ptext74 9502  
                                            __ptext66 1B48  
                                            __ptext58 7D4E  
                                            __ptext91 65EE  
                                            __ptext83 22A8  
                                            __ptext75 93B2  
                                            __ptext67 80B4  
                                            __ptext59 5C78  
                                            __ptext92 586E  
                                            __ptext84 5444  
                                            __ptext76 7DE4  
                                            __ptext68 6F26  
                                            __ptext93 5660  
                                            __ptext85 8844  
                                            __ptext77 8712  
                                            __ptext69 650C  
                                            __ptext94 88A6  
                                            __ptext86 086C  
                                            __ptext78 532C  
                                            __ptext95 959C  
                                            __ptext87 1890  
                                            __ptext79 6CCC  
                                            __ptext96 7CB2  
                                            __ptext88 9D2A  
                                            __ptext97 9C9E  
                                            __ptext89 956A  
                                            __ptext98 9BD6  
                                            __ptext99 9AF0  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 88A6  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 8844  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                    fat_copy_sector_to_buffer@cluster 0051  
                           flash_write_to_buffer@data 0023  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                         __size_of__display_suspended 0152  
                             __size_of_bootloader_run 0068  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 38EC  
                   __end_of_failed_line3_addressRange BC96  
                          ?_ExternalFlash_SectorWrite 0025  
               fat_write_sector_from_buffer@file_size 004B  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                    __parse_file_copy 5E76  
                          __end_of__flash_buffer_read 9032  
                      __size_of__bootloader_find_file 00A4  
                  __end_of__flash_copy_page_to_buffer 8BE6  
                          __flash_copy_page_to_buffer 8B8E  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 750A  
                       __end_of__bootloader_find_file 7852  
                        __end_of_i2c_digipot_reset_on 99C0  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 8E98  
                      __end_of_USBCtrlTrfSetupHandler 7DE4  
                                       __size_of_main 017A  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp BF49  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 915A  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 2960  
                         __end_of_flash_partial_write 8566  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003C  
                                ?_fat_write_to_buffer 0025  
                             fat_get_file_size@sector 003A  
               fat_read_from_file_fast@needed_cluster 0066  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 91A2  
                    __size_of__bootloader_verify_file 0344  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 9D18  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 9D12  
                      __fill_buffer_read_buffer@start 0031  
                                 _USBCtrlTrfInHandler 6D98  
                  _MSDProcessCommandMediaPresent$2390 003C  
                            ??__write_value_to_offset 0007  
                      fat_read_from_file_fast@cluster 004C  
                                         ??_api_parse 00A9  
                              __end_of__i2c_wait_idle 8B36  
               fat_resize_file@old_number_of_clusters 0060  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 9376  
                    __end_of__fill_buffer_read_buffer 6168  
                                _USBCtrlTrfOutHandler 8712  
                    __end_of__offset_from_file_number 990C  
                          ??__fat_sector_from_cluster 0003  
                           _USBCtrlEPAllowStatusStage 6CCC  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 9C76  
                                ?__parse_command_long 009D  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                    __parse_format_drive@return_value 002E  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
              __make_cluster_chain@remaining_clusters 0043  
                                 __display_start@cntr 0025  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 4214  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0030  
                              ??__parse_command_short 002C  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                              fat_copy_file@file_size 008B  
                           _USBDeferStatusStagePacket 00F2  
                  __end_of_spi_get_external_rx_buffer 9C76  
                          _spi_get_external_rx_buffer 9C6C  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 67B2  
                             __parse_file_modify@data 0056  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 984C  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 9824  
                             _internalFlash_erasePage 85D4  
                            __parse_format_drive@data 0027  
                                  ??_system_full_init 0030  
                           __flash_buffer_read@buffer 001A  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                           __flash_buffer_read@length 0016  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 9C6C  
                          _spi_get_external_tx_buffer 9C62  
                                     ??_fat_copy_file 0085  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                       __parse_file_rename@out_buffer 0062  
                        __size_of_system_minimal_init 0016  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                    fat_read_from_file@cluster_number 007B  
                __end_of_MSDComputeDeviceInAndResidue 7D4E  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 7CB2  
                          fat_modify_file@return_code 0065  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 BDF8  
                                 __end_of_start_line2 BE69  
                                 __end_of_start_line3 BEA7  
                                 __end_of_start_line4 BE25  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                          fat_rename_file@return_code 003D  
                                       _flash_is_busy 9B82  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 9C94  
                              bootloader_run@timeslot 005C  
                             __end_of_fat_create_file 4F9C  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                            ??_flash_read_from_buffer 0025  
                         __size_of__root_is_available 0062  
                             __parse_file_rename@data 0060  
                              __size_of_USBDeviceInit 0150  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 813A  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 80B4  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 959C  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 8B8E  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 8B36  
                 fat_write_sector_from_buffer@cluster 0049  
                           _flash_copy_page_to_buffer 9A80  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               ??_fat_write_to_buffer 002B  
                        fat_read_from_file@start_byte 006E  
                                     _display_content 0200  
                     fat_copy_sector_to_buffer@sector 0043  
      fat_write_sector_from_buffer@number_of_clusters 004F  
                          __end_of_flash_partial_read 9632  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 1B48  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                             __write_root@file_number 002F  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 9D1E  
                         _bootloader_get_rec_checksum 9D18  
                        __parse_sector_to_buffer@data 0054  
                              fat_copy_file@extension 005B  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                       __parse_file_copy@return_value 005E  
                                 fat_resize_file@root 0067  
                        __bootloader_verify_file@root 0076  
                   __size_of__fill_buffer_get_display 00B4  
                            ?__read_value_from_offset 0001  
                            ?_fat_read_from_file_fast 0042  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                        __parse_buffer_to_sector@data 0052  
                                     _display_prepare 6972  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum BDF8  
                                 _USBCtrlTrfRxService 532C  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 9460  
                               ??__parse_command_long 0060  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 000F  
                         internalFlash_writePage@page 0009  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 9956  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1B48  
                                     _fat_modify_file 24FC  
                        __fill_buffer_read_file@start 00AE  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 6B2A  
                                        ?_api_prepare 00B2  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                __end_of_fat_write_sector_from_buffer 8238  
               __size_of_fat_write_sector_from_buffer 007C  
                        _fat_write_sector_from_buffer 81BC  
                                     _gblMediaPresent 0182  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 9874  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong BE33  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 9CBC  
                          _bootloader_get_rec_address 9CB2  
                               _USBAlternateInterface 01AF  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 8FE2  
                          __delete_root@deleted_value 002D  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0186  
                    __make_cluster_chain@data_changed 0042  
                             __parse_file_resize@data 0055  
                           _failed_line3_noNextRecord BE07  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 7B76  
                     __parse_format_drive@out_idx_ptr 002B  
                      __size_of_flash_write_to_buffer 002E  
                     __parse_file_delete@return_value 0057  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00F4  
                                      _display_update 8640  
                       __end_of_flash_write_to_buffer 971E  
                                      ??__normal_mode 0019  
                 __get_available_cluster@first_sector 002C  
                                      ?_flash_is_busy 0001  
                     __size_of__get_available_cluster 00C4  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode BCAA  
                            ?__parse_buffer_to_sector 0052  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 65EE  
                          ??__fat_offset_from_cluster 0003  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 98C0  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0184  
                             _internalFlash_writePage 7234  
                         __end_of__parse_write_buffer 4CFE  
                                ?_USBCtrlTrfTxService 0001  
                     __offset_from_file_number@offset 0004  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 5974  
                        _USBStatusStageTimeoutCounter 00F3  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 0010  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 83A2  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __parse_file_copy@out_idx_ptr 0098  
                        __end_of_i2c_eeprom_writeByte 9376  
                         __parse_file_copy@out_buffer 0096  
                                        _verify_line1 BDB8  
                                        _verify_line2 BE40  
                                        _verify_line3 BE88  
                                 __parse_format_drive 7660  
                          fat_resize_file@file_number 0066  
                                          _USB_CD_Ptr BEA3  
                                         _power_state 00E5  
                                         _USBInHandle 017E  
                            _APP_DeviceCustomHIDTasks 7458  
                          __end_of_flash_sector_write 8DEC  
