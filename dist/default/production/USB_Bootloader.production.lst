

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Sep 09 01:38:42 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=2
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=2
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1,group=2
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1,group=2
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	text203,global,reloc=2,class=CODE,delta=1
   225                           	psect	text204,global,reloc=2,class=CODE,delta=1
   226                           	psect	text205,global,reloc=2,class=CODE,delta=1
   227                           	psect	text206,global,reloc=2,class=CODE,delta=1
   228                           	psect	text207,global,reloc=2,class=CODE,delta=1
   229                           	psect	text208,global,reloc=2,class=CODE,delta=1
   230                           	psect	text209,global,reloc=2,class=CODE,delta=1
   231                           	psect	text210,global,reloc=2,class=CODE,delta=1
   232                           	psect	text211,global,reloc=2,class=CODE,delta=1
   233                           	psect	text212,global,reloc=2,class=CODE,delta=1
   234                           	psect	text213,global,reloc=2,class=CODE,delta=1
   235                           	psect	text214,global,reloc=2,class=CODE,delta=1
   236                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   237                           	psect	text215,global,reloc=2,class=CODE,delta=1
   238                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   239                           	dabs	1,0x600,512,_msd_buffer
   240                           	dabs	1,0xD00,48,_BDT
   241                           	dabs	1,0xD40,31,_msd_cbw
   242                           	dabs	1,0xD80,13,_msd_csw
   243                           	dabs	1,0xD38,8,_CtrlTrfData
   244                           	dabs	1,0xD30,8,_SetupPkt
   245  0000                     
   246                           ; Version 2.00
   247                           ; Generated 27/05/2018 GMT
   248                           ; 
   249                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   250                           ; All rights reserved.
   251                           ; 
   252                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   253                           ; 
   254                           ; Redistribution and use in source and binary forms, with or without modification, are
   255                           ; permitted provided that the following conditions are met:
   256                           ; 
   257                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   258                           ;        conditions and the following disclaimer.
   259                           ; 
   260                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   261                           ;        of conditions and the following disclaimer in the documentation and/or other
   262                           ;        materials provided with the distribution.
   263                           ; 
   264                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   265                           ;        software without specific prior written permission.
   266                           ; 
   267                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   268                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   269                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   270                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   271                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   272                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   273                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   274                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   275                           ; 
   276                           ; 
   277                           ; Code-generator required, PIC18F47J53 Definitions
   278                           ; 
   279                           ; SFR Addresses
   280  0000                     
   281                           	psect	intcode
   282  000008  EF04 F048          	goto	36872	;# 
   283                           
   284                           	psect	intcodelo
   285  000018  EF0C F048          	goto	36888	; ;# 
   286  0000                     
   287                           	psect	idataBANK0
   288  0089C4                     __pidataBANK0:
   289                           	opt stack 0
   290                           
   291                           ;initializer for _file_number
   292  0089C4  FF                 	db	255
   293                           
   294                           	psect	idataBANK1
   295  00862C                     __pidataBANK1:
   296                           	opt stack 0
   297                           
   298                           ;initializer for _LUN
   299  00862C  B8                 	db	low _ExternalFlash_MediaInitialize
   300  00862D  87                 	db	high _ExternalFlash_MediaInitialize
   301  00862E  58                 	db	low _ExternalFlash_CapacityRead
   302  00862F  88                 	db	high _ExternalFlash_CapacityRead
   303  008630  30                 	db	low _ExternalFlash_SectorSizeRead
   304  008631  89                 	db	high _ExternalFlash_SectorSizeRead
   305  008632  C0                 	db	low _ExternalFlash_MediaDetect
   306  008633  89                 	db	high _ExternalFlash_MediaDetect
   307  008634  5E                 	db	low _ExternalFlash_SectorRead
   308  008635  83                 	db	high _ExternalFlash_SectorRead
   309  008636  BC                 	db	low _ExternalFlash_WriteProtectStateGet
   310  008637  89                 	db	high _ExternalFlash_WriteProtectStateGet
   311  008638  2C                 	db	low _ExternalFlash_SectorWrite
   312  008639  83                 	db	high _ExternalFlash_SectorWrite
   313  00863A  00                 	db	0
   314  00863B  00                 	db	0
   315  00863C  00                 	db	0
   316  00863D  00                 	db	0
   317  00863E  00                 	db	0
   318  00863F  00                 	db	0
   319                           
   320                           ;initializer for i2c_display_send_init_sequence@F6808
   321  008640  3A                 	db	58
   322  008641  1E                 	db	30
   323  008642  39                 	db	57
   324  008643  0C                 	db	12
   325  008644  74                 	db	116
   326  008645  5C                 	db	92
   327  008646  6D                 	db	109
   328  008647  0C                 	db	12
   329  008648  01                 	db	1
   330                           
   331                           ;initializer for _tx_buf
   332  008649  01                 	db	1
   333  00864A  02                 	db	2
   334  00864B  03                 	db	3
   335  00864C  04                 	db	4
   336  00864D  05                 	db	5
   337  00864E  06                 	db	6
   338  00864F  07                 	db	7
   339  008650  08                 	db	8
   340                           
   341                           	psect	mediumconst
   342  008C98                     __pmediumconst:
   343                           	opt stack 0
   344  008C98  00                 	db	0
   345  008C99                     _checked_line2:
   346                           	opt stack 0
   347  008C99  46                 	db	70
   348  008C9A  69                 	db	105
   349  008C9B  6C                 	db	108
   350  008C9C  65                 	db	101
   351  008C9D  20                 	db	32
   352  008C9E  63                 	db	99
   353  008C9F  68                 	db	104
   354  008CA0  65                 	db	101
   355  008CA1  63                 	db	99
   356  008CA2  6B                 	db	107
   357  008CA3  20                 	db	32
   358  008CA4  63                 	db	99
   359  008CA5  6F                 	db	111
   360  008CA6  6D                 	db	109
   361  008CA7  70                 	db	112
   362  008CA8  6C                 	db	108
   363  008CA9  65                 	db	101
   364  008CAA  74                 	db	116
   365  008CAB  65                 	db	101
   366  008CAC  64                 	db	100
   367  008CAD  00                 	db	0
   368  008CAE                     __end_of_checked_line2:
   369                           	opt stack 0
   370  008CAE                     _failed_line3_addressRange:
   371                           	opt stack 0
   372  008CAE  41                 	db	65
   373  008CAF  64                 	db	100
   374  008CB0  64                 	db	100
   375  008CB1  72                 	db	114
   376  008CB2  2E                 	db	46
   377  008CB3  20                 	db	32
   378  008CB4  6F                 	db	111
   379  008CB5  75                 	db	117
   380  008CB6  74                 	db	116
   381  008CB7  73                 	db	115
   382  008CB8  69                 	db	105
   383  008CB9  64                 	db	100
   384  008CBA  65                 	db	101
   385  008CBB  20                 	db	32
   386  008CBC  72                 	db	114
   387  008CBD  61                 	db	97
   388  008CBE  6E                 	db	110
   389  008CBF  67                 	db	103
   390  008CC0  65                 	db	101
   391  008CC1  00                 	db	0
   392  008CC2                     __end_of_failed_line3_addressRange:
   393                           	opt stack 0
   394  008CC2                     _search_line3:
   395                           	opt stack 0
   396  008CC2  46                 	db	70
   397  008CC3  49                 	db	73
   398  008CC4  52                 	db	82
   399  008CC5  4D                 	db	77
   400  008CC6  57                 	db	87
   401  008CC7  41                 	db	65
   402  008CC8  52                 	db	82
   403  008CC9  45                 	db	69
   404  008CCA  2E                 	db	46
   405  008CCB  48                 	db	72
   406  008CCC  45                 	db	69
   407  008CCD  58                 	db	88
   408  008CCE  20                 	db	32
   409  008CCF  6F                 	db	111
   410  008CD0  6E                 	db	110
   411  008CD1  20                 	db	32
   412  008CD2  55                 	db	85
   413  008CD3  53                 	db	83
   414  008CD4  42                 	db	66
   415  008CD5  00                 	db	0
   416  008CD6                     __end_of_search_line3:
   417                           	opt stack 0
   418  008CD6                     _failed_line3_startCode:
   419                           	opt stack 0
   420  008CD6  4D                 	db	77
   421  008CD7  69                 	db	105
   422  008CD8  73                 	db	115
   423  008CD9  73                 	db	115
   424  008CDA  69                 	db	105
   425  008CDB  6E                 	db	110
   426  008CDC  67                 	db	103
   427  008CDD  20                 	db	32
   428  008CDE  73                 	db	115
   429  008CDF  74                 	db	116
   430  008CE0  61                 	db	97
   431  008CE1  72                 	db	114
   432  008CE2  74                 	db	116
   433  008CE3  20                 	db	32
   434  008CE4  63                 	db	99
   435  008CE5  6F                 	db	111
   436  008CE6  64                 	db	100
   437  008CE7  65                 	db	101
   438  008CE8  00                 	db	0
   439  008CE9                     __end_of_failed_line3_startCode:
   440                           	opt stack 0
   441  008CE9                     _found_line2:
   442                           	opt stack 0
   443  008CE9  46                 	db	70
   444  008CEA  49                 	db	73
   445  008CEB  52                 	db	82
   446  008CEC  4D                 	db	77
   447  008CED  57                 	db	87
   448  008CEE  41                 	db	65
   449  008CEF  52                 	db	82
   450  008CF0  45                 	db	69
   451  008CF1  2E                 	db	46
   452  008CF2  48                 	db	72
   453  008CF3  45                 	db	69
   454  008CF4  58                 	db	88
   455  008CF5  20                 	db	32
   456  008CF6  66                 	db	102
   457  008CF7  6F                 	db	111
   458  008CF8  75                 	db	117
   459  008CF9  6E                 	db	110
   460  008CFA  64                 	db	100
   461  008CFB  00                 	db	0
   462  008CFC                     __end_of_found_line2:
   463                           	opt stack 0
   464  008CFC                     _programming_line2:
   465                           	opt stack 0
   466  008CFC  50                 	db	80
   467  008CFD  72                 	db	114
   468  008CFE  6F                 	db	111
   469  008CFF  67                 	db	103
   470  008D00  72                 	db	114
   471  008D01  61                 	db	97
   472  008D02  6D                 	db	109
   473  008D03  6D                 	db	109
   474  008D04  69                 	db	105
   475  008D05  6E                 	db	110
   476  008D06  67                 	db	103
   477  008D07  20                 	db	32
   478  008D08  66                 	db	102
   479  008D09  6C                 	db	108
   480  008D0A  61                 	db	97
   481  008D0B  73                 	db	115
   482  008D0C  68                 	db	104
   483  008D0D  00                 	db	0
   484  008D0E                     __end_of_programming_line2:
   485                           	opt stack 0
   486  008D0E                     _failed_line2:
   487                           	opt stack 0
   488  008D0E  46                 	db	70
   489  008D0F  69                 	db	105
   490  008D10  6C                 	db	108
   491  008D11  65                 	db	101
   492  008D12  20                 	db	32
   493  008D13  63                 	db	99
   494  008D14  68                 	db	104
   495  008D15  65                 	db	101
   496  008D16  63                 	db	99
   497  008D17  6B                 	db	107
   498  008D18  20                 	db	32
   499  008D19  66                 	db	102
   500  008D1A  61                 	db	97
   501  008D1B  69                 	db	105
   502  008D1C  6C                 	db	108
   503  008D1D  65                 	db	101
   504  008D1E  64                 	db	100
   505  008D1F  00                 	db	0
   506  008D20                     __end_of_failed_line2:
   507                           	opt stack 0
   508  008D20                     _found_line4:
   509                           	opt stack 0
   510  008D20  50                 	db	80
   511  008D21  72                 	db	114
   512  008D22  65                 	db	101
   513  008D23  73                 	db	115
   514  008D24  73                 	db	115
   515  008D25  20                 	db	32
   516  008D26  74                 	db	116
   517  008D27  6F                 	db	111
   518  008D28  20                 	db	32
   519  008D29  75                 	db	117
   520  008D2A  73                 	db	115
   521  008D2B  65                 	db	101
   522  008D2C  20                 	db	32
   523  008D2D  66                 	db	102
   524  008D2E  69                 	db	105
   525  008D2F  6C                 	db	108
   526  008D30  65                 	db	101
   527  008D31  00                 	db	0
   528  008D32                     __end_of_found_line4:
   529                           	opt stack 0
   530  008D32                     _checked_line4:
   531                           	opt stack 0
   532  008D32  50                 	db	80
   533  008D33  72                 	db	114
   534  008D34  65                 	db	101
   535  008D35  73                 	db	115
   536  008D36  73                 	db	115
   537  008D37  20                 	db	32
   538  008D38  74                 	db	116
   539  008D39  6F                 	db	111
   540  008D3A  20                 	db	32
   541  008D3B  70                 	db	112
   542  008D3C  72                 	db	114
   543  008D3D  6F                 	db	111
   544  008D3E  67                 	db	103
   545  008D3F  72                 	db	114
   546  008D40  61                 	db	97
   547  008D41  6D                 	db	109
   548  008D42  00                 	db	0
   549  008D43                     __end_of_checked_line4:
   550                           	opt stack 0
   551  008D43                     _search_line2:
   552                           	opt stack 0
   553  008D43  4C                 	db	76
   554  008D44  6F                 	db	111
   555  008D45  6F                 	db	111
   556  008D46  6B                 	db	107
   557  008D47  69                 	db	105
   558  008D48  6E                 	db	110
   559  008D49  67                 	db	103
   560  008D4A  20                 	db	32
   561  008D4B  66                 	db	102
   562  008D4C  6F                 	db	111
   563  008D4D  72                 	db	114
   564  008D4E  20                 	db	32
   565  008D4F  66                 	db	102
   566  008D50  69                 	db	105
   567  008D51  6C                 	db	108
   568  008D52  65                 	db	101
   569  008D53  00                 	db	0
   570  008D54                     __end_of_search_line2:
   571                           	opt stack 0
   572  008D54                     _done_line4:
   573                           	opt stack 0
   574  008D54  50                 	db	80
   575  008D55  72                 	db	114
   576  008D56  65                 	db	101
   577  008D57  73                 	db	115
   578  008D58  73                 	db	115
   579  008D59  20                 	db	32
   580  008D5A  74                 	db	116
   581  008D5B  6F                 	db	111
   582  008D5C  20                 	db	32
   583  008D5D  72                 	db	114
   584  008D5E  65                 	db	101
   585  008D5F  62                 	db	98
   586  008D60  6F                 	db	111
   587  008D61  6F                 	db	111
   588  008D62  74                 	db	116
   589  008D63  00                 	db	0
   590  008D64                     __end_of_done_line4:
   591                           	opt stack 0
   592  008D64                     _done_line3:
   593                           	opt stack 0
   594  008D64  50                 	db	80
   595  008D65  61                 	db	97
   596  008D66  67                 	db	103
   597  008D67  65                 	db	101
   598  008D68  73                 	db	115
   599  008D69  20                 	db	32
   600  008D6A  77                 	db	119
   601  008D6B  72                 	db	114
   602  008D6C  69                 	db	105
   603  008D6D  74                 	db	116
   604  008D6E  74                 	db	116
   605  008D6F  65                 	db	101
   606  008D70  6E                 	db	110
   607  008D71  3A                 	db	58
   608  008D72  20                 	db	32
   609  008D73  00                 	db	0
   610  008D74                     __end_of_done_line3:
   611                           	opt stack 0
   612  008D74                     _done_line1:
   613                           	opt stack 0
   614  008D74  42                 	db	66
   615  008D75  6F                 	db	111
   616  008D76  6F                 	db	111
   617  008D77  74                 	db	116
   618  008D78  6C                 	db	108
   619  008D79  6F                 	db	111
   620  008D7A  61                 	db	97
   621  008D7B  64                 	db	100
   622  008D7C  65                 	db	101
   623  008D7D  72                 	db	114
   624  008D7E  20                 	db	32
   625  008D7F  4D                 	db	77
   626  008D80  6F                 	db	111
   627  008D81  64                 	db	100
   628  008D82  65                 	db	101
   629  008D83  00                 	db	0
   630  008D84                     __end_of_done_line1:
   631                           	opt stack 0
   632  008D84                     _programming_line4:
   633                           	opt stack 0
   634  008D84  50                 	db	80
   635  008D85  61                 	db	97
   636  008D86  67                 	db	103
   637  008D87  65                 	db	101
   638  008D88  73                 	db	115
   639  008D89  20                 	db	32
   640  008D8A  77                 	db	119
   641  008D8B  72                 	db	114
   642  008D8C  69                 	db	105
   643  008D8D  74                 	db	116
   644  008D8E  74                 	db	116
   645  008D8F  65                 	db	101
   646  008D90  6E                 	db	110
   647  008D91  3A                 	db	58
   648  008D92  20                 	db	32
   649  008D93  00                 	db	0
   650  008D94                     __end_of_programming_line4:
   651                           	opt stack 0
   652  008D94                     _programming_line1:
   653                           	opt stack 0
   654  008D94  42                 	db	66
   655  008D95  6F                 	db	111
   656  008D96  6F                 	db	111
   657  008D97  74                 	db	116
   658  008D98  6C                 	db	108
   659  008D99  6F                 	db	111
   660  008D9A  61                 	db	97
   661  008D9B  64                 	db	100
   662  008D9C  65                 	db	101
   663  008D9D  72                 	db	114
   664  008D9E  20                 	db	32
   665  008D9F  4D                 	db	77
   666  008DA0  6F                 	db	111
   667  008DA1  64                 	db	100
   668  008DA2  65                 	db	101
   669  008DA3  00                 	db	0
   670  008DA4                     __end_of_programming_line1:
   671                           	opt stack 0
   672  008DA4                     _failed_line1:
   673                           	opt stack 0
   674  008DA4  42                 	db	66
   675  008DA5  6F                 	db	111
   676  008DA6  6F                 	db	111
   677  008DA7  74                 	db	116
   678  008DA8  6C                 	db	108
   679  008DA9  6F                 	db	111
   680  008DAA  61                 	db	97
   681  008DAB  64                 	db	100
   682  008DAC  65                 	db	101
   683  008DAD  72                 	db	114
   684  008DAE  20                 	db	32
   685  008DAF  4D                 	db	77
   686  008DB0  6F                 	db	111
   687  008DB1  64                 	db	100
   688  008DB2  65                 	db	101
   689  008DB3  00                 	db	0
   690  008DB4                     __end_of_failed_line1:
   691                           	opt stack 0
   692  008DB4                     _checked_line1:
   693                           	opt stack 0
   694  008DB4  42                 	db	66
   695  008DB5  6F                 	db	111
   696  008DB6  6F                 	db	111
   697  008DB7  74                 	db	116
   698  008DB8  6C                 	db	108
   699  008DB9  6F                 	db	111
   700  008DBA  61                 	db	97
   701  008DBB  64                 	db	100
   702  008DBC  65                 	db	101
   703  008DBD  72                 	db	114
   704  008DBE  20                 	db	32
   705  008DBF  4D                 	db	77
   706  008DC0  6F                 	db	111
   707  008DC1  64                 	db	100
   708  008DC2  65                 	db	101
   709  008DC3  00                 	db	0
   710  008DC4                     __end_of_checked_line1:
   711                           	opt stack 0
   712  008DC4                     _verify_line1:
   713                           	opt stack 0
   714  008DC4  42                 	db	66
   715  008DC5  6F                 	db	111
   716  008DC6  6F                 	db	111
   717  008DC7  74                 	db	116
   718  008DC8  6C                 	db	108
   719  008DC9  6F                 	db	111
   720  008DCA  61                 	db	97
   721  008DCB  64                 	db	100
   722  008DCC  65                 	db	101
   723  008DCD  72                 	db	114
   724  008DCE  20                 	db	32
   725  008DCF  4D                 	db	77
   726  008DD0  6F                 	db	111
   727  008DD1  64                 	db	100
   728  008DD2  65                 	db	101
   729  008DD3  00                 	db	0
   730  008DD4                     __end_of_verify_line1:
   731                           	opt stack 0
   732  008DD4                     _found_line1:
   733                           	opt stack 0
   734  008DD4  42                 	db	66
   735  008DD5  6F                 	db	111
   736  008DD6  6F                 	db	111
   737  008DD7  74                 	db	116
   738  008DD8  6C                 	db	108
   739  008DD9  6F                 	db	111
   740  008DDA  61                 	db	97
   741  008DDB  64                 	db	100
   742  008DDC  65                 	db	101
   743  008DDD  72                 	db	114
   744  008DDE  20                 	db	32
   745  008DDF  4D                 	db	77
   746  008DE0  6F                 	db	111
   747  008DE1  64                 	db	100
   748  008DE2  65                 	db	101
   749  008DE3  00                 	db	0
   750  008DE4                     __end_of_found_line1:
   751                           	opt stack 0
   752  008DE4                     _search_line1:
   753                           	opt stack 0
   754  008DE4  42                 	db	66
   755  008DE5  6F                 	db	111
   756  008DE6  6F                 	db	111
   757  008DE7  74                 	db	116
   758  008DE8  6C                 	db	108
   759  008DE9  6F                 	db	111
   760  008DEA  61                 	db	97
   761  008DEB  64                 	db	100
   762  008DEC  65                 	db	101
   763  008DED  72                 	db	114
   764  008DEE  20                 	db	32
   765  008DEF  4D                 	db	77
   766  008DF0  6F                 	db	111
   767  008DF1  64                 	db	100
   768  008DF2  65                 	db	101
   769  008DF3  00                 	db	0
   770  008DF4                     __end_of_search_line1:
   771                           	opt stack 0
   772  008DF4                     _start_line1:
   773                           	opt stack 0
   774  008DF4  42                 	db	66
   775  008DF5  6F                 	db	111
   776  008DF6  6F                 	db	111
   777  008DF7  74                 	db	116
   778  008DF8  6C                 	db	108
   779  008DF9  6F                 	db	111
   780  008DFA  61                 	db	97
   781  008DFB  64                 	db	100
   782  008DFC  65                 	db	101
   783  008DFD  72                 	db	114
   784  008DFE  20                 	db	32
   785  008DFF  4D                 	db	77
   786  008E00  6F                 	db	111
   787  008E01  64                 	db	100
   788  008E02  65                 	db	101
   789  008E03  00                 	db	0
   790  008E04                     __end_of_start_line1:
   791                           	opt stack 0
   792  008E04                     _failed_line3_checksum:
   793                           	opt stack 0
   794  008E04  43                 	db	67
   795  008E05  68                 	db	104
   796  008E06  65                 	db	101
   797  008E07  63                 	db	99
   798  008E08  6B                 	db	107
   799  008E09  73                 	db	115
   800  008E0A  75                 	db	117
   801  008E0B  6D                 	db	109
   802  008E0C  20                 	db	32
   803  008E0D  65                 	db	101
   804  008E0E  72                 	db	114
   805  008E0F  72                 	db	114
   806  008E10  6F                 	db	111
   807  008E11  72                 	db	114
   808  008E12  00                 	db	0
   809  008E13                     __end_of_failed_line3_checksum:
   810                           	opt stack 0
   811  008E13                     _failed_line3_noNextRecord:
   812                           	opt stack 0
   813  008E13  4E                 	db	78
   814  008E14  6F                 	db	111
   815  008E15  20                 	db	32
   816  008E16  6E                 	db	110
   817  008E17  65                 	db	101
   818  008E18  78                 	db	120
   819  008E19  74                 	db	116
   820  008E1A  20                 	db	32
   821  008E1B  72                 	db	114
   822  008E1C  65                 	db	101
   823  008E1D  63                 	db	99
   824  008E1E  6F                 	db	111
   825  008E1F  72                 	db	114
   826  008E20  64                 	db	100
   827  008E21  00                 	db	0
   828  008E22                     __end_of_failed_line3_noNextRecord:
   829                           	opt stack 0
   830  008E22                     _start_line4:
   831                           	opt stack 0
   832  008E22  73                 	db	115
   833  008E23  6F                 	db	111
   834  008E24  6C                 	db	108
   835  008E25  64                 	db	100
   836  008E26  65                 	db	101
   837  008E27  72                 	db	114
   838  008E28  6E                 	db	110
   839  008E29  65                 	db	101
   840  008E2A  72                 	db	114
   841  008E2B  64                 	db	100
   842  008E2C  2E                 	db	46
   843  008E2D  63                 	db	99
   844  008E2E  6F                 	db	111
   845  008E2F  6D                 	db	109
   846  008E30  00                 	db	0
   847  008E31                     __end_of_start_line4:
   848                           	opt stack 0
   849  008E31                     _failed_line3_dataTooLong:
   850                           	opt stack 0
   851  008E31  44                 	db	68
   852  008E32  61                 	db	97
   853  008E33  74                 	db	116
   854  008E34  61                 	db	97
   855  008E35  20                 	db	32
   856  008E36  74                 	db	116
   857  008E37  6F                 	db	111
   858  008E38  6F                 	db	111
   859  008E39  20                 	db	32
   860  008E3A  6C                 	db	108
   861  008E3B  6F                 	db	111
   862  008E3C  6E                 	db	110
   863  008E3D  67                 	db	103
   864  008E3E  00                 	db	0
   865  008E3F                     __end_of_failed_line3_dataTooLong:
   866                           	opt stack 0
   867  008E3F                     _reboot_line1:
   868                           	opt stack 0
   869  008E3F  52                 	db	82
   870  008E40  65                 	db	101
   871  008E41  62                 	db	98
   872  008E42  6F                 	db	111
   873  008E43  6F                 	db	111
   874  008E44  74                 	db	116
   875  008E45  69                 	db	105
   876  008E46  6E                 	db	110
   877  008E47  67                 	db	103
   878  008E48  2E                 	db	46
   879  008E49  2E                 	db	46
   880  008E4A  2E                 	db	46
   881  008E4B  00                 	db	0
   882  008E4C                     __end_of_reboot_line1:
   883                           	opt stack 0
   884  008E4C                     _verify_line2:
   885                           	opt stack 0
   886  008E4C  56                 	db	86
   887  008E4D  65                 	db	101
   888  008E4E  72                 	db	114
   889  008E4F  69                 	db	105
   890  008E50  66                 	db	102
   891  008E51  79                 	db	121
   892  008E52  69                 	db	105
   893  008E53  6E                 	db	110
   894  008E54  67                 	db	103
   895  008E55  2E                 	db	46
   896  008E56  2E                 	db	46
   897  008E57  2E                 	db	46
   898  008E58  00                 	db	0
   899  008E59                     __end_of_verify_line2:
   900                           	opt stack 0
   901  008E59                     _search_line4:
   902                           	opt stack 0
   903  008E59  64                 	db	100
   904  008E5A  72                 	db	114
   905  008E5B  69                 	db	105
   906  008E5C  76                 	db	118
   907  008E5D  65                 	db	101
   908  008E5E  2E                 	db	46
   909  008E5F  2E                 	db	46
   910  008E60  2E                 	db	46
   911  008E61  00                 	db	0
   912  008E62                     __end_of_search_line4:
   913                           	opt stack 0
   914  008E62                     _start_line2:
   915                           	opt stack 0
   916  008E62  56                 	db	86
   917  008E63  65                 	db	101
   918  008E64  72                 	db	114
   919  008E65  73                 	db	115
   920  008E66  69                 	db	105
   921  008E67  6F                 	db	111
   922  008E68  6E                 	db	110
   923  008E69  20                 	db	32
   924  008E6A  00                 	db	0
   925  008E6B                     __end_of_start_line2:
   926                           	opt stack 0
   927  008E6B                     _failed_line4:
   928                           	opt stack 0
   929  008E6B  52                 	db	82
   930  008E6C  65                 	db	101
   931  008E6D  63                 	db	99
   932  008E6E  6F                 	db	111
   933  008E6F  72                 	db	114
   934  008E70  64                 	db	100
   935  008E71  20                 	db	32
   936  008E72  00                 	db	0
   937  008E73                     __end_of_failed_line4:
   938                           	opt stack 0
   939  008E73                     _checked_line3:
   940                           	opt stack 0
   941  008E73  72                 	db	114
   942  008E74  65                 	db	101
   943  008E75  63                 	db	99
   944  008E76  6F                 	db	111
   945  008E77  72                 	db	114
   946  008E78  64                 	db	100
   947  008E79  73                 	db	115
   948  008E7A  00                 	db	0
   949  008E7B                     __end_of_checked_line3:
   950                           	opt stack 0
   951  008E7B                     _USB_SD_Ptr:
   952                           	opt stack 0
   953  008E7B  CC                 	db	low _sd000
   954  008E7C  8F                 	db	high _sd000
   955  008E7D  E8                 	db	low _sd001
   956  008E7E  8E                 	db	high _sd001
   957  008E7F  1C                 	db	low _sd002
   958  008E80  8F                 	db	high _sd002
   959  008E81  8B                 	db	low _sd003
   960  008E82  8F                 	db	high _sd003
   961  008E83                     __end_of_USB_SD_Ptr:
   962                           	opt stack 0
   963  008E83                     _programming_line3:
   964                           	opt stack 0
   965  008E83  45                 	db	69
   966  008E84  6E                 	db	110
   967  008E85  74                 	db	116
   968  008E86  72                 	db	114
   969  008E87  79                 	db	121
   970  008E88  20                 	db	32
   971  008E89  00                 	db	0
   972  008E8A                     __end_of_programming_line3:
   973                           	opt stack 0
   974  008E8A                     _verify_line3:
   975                           	opt stack 0
   976  008E8A  52                 	db	82
   977  008E8B  65                 	db	101
   978  008E8C  63                 	db	99
   979  008E8D  6F                 	db	111
   980  008E8E  72                 	db	114
   981  008E8F  64                 	db	100
   982  008E90  00                 	db	0
   983  008E91                     __end_of_verify_line3:
   984                           	opt stack 0
   985  008E91                     _found_line3b:
   986                           	opt stack 0
   987  008E91  20                 	db	32
   988  008E92  62                 	db	98
   989  008E93  79                 	db	121
   990  008E94  74                 	db	116
   991  008E95  65                 	db	101
   992  008E96  73                 	db	115
   993  008E97  00                 	db	0
   994  008E98                     __end_of_found_line3b:
   995                           	opt stack 0
   996  008E98                     _found_line3:
   997                           	opt stack 0
   998  008E98  53                 	db	83
   999  008E99  69                 	db	105
  1000  008E9A  7A                 	db	122
  1001  008E9B  65                 	db	101
  1002  008E9C  3A                 	db	58
  1003  008E9D  20                 	db	32
  1004  008E9E  00                 	db	0
  1005  008E9F                     __end_of_found_line3:
  1006                           	opt stack 0
  1007  008E9F                     _done_line2:
  1008                           	opt stack 0
  1009  008E9F  44                 	db	68
  1010  008EA0  6F                 	db	111
  1011  008EA1  6E                 	db	110
  1012  008EA2  65                 	db	101
  1013  008EA3  21                 	db	33
  1014  008EA4  00                 	db	0
  1015  008EA5                     __end_of_done_line2:
  1016                           	opt stack 0
  1017  008EA5                     _USB_CD_Ptr:
  1018                           	opt stack 0
  1019  008EA5  A8                 	db	low _configDescriptor1
  1020  008EA6  8E                 	db	high _configDescriptor1
  1021  008EA7                     __end_of_USB_CD_Ptr:
  1022                           	opt stack 0
  1023  008EA7                     _start_line3:
  1024                           	opt stack 0
  1025  008EA7  00                 	db	0
  1026  008EA8                     __end_of_start_line3:
  1027                           	opt stack 0
  1028  008EA8                     _configDescriptor1:
  1029                           	opt stack 0
  1030  008EA8  09                 	db	9
  1031  008EA9  02                 	db	2
  1032  008EAA  40                 	db	64
  1033  008EAB  00                 	db	0
  1034  008EAC  02                 	db	2
  1035  008EAD  01                 	db	1
  1036  008EAE  00                 	db	0
  1037  008EAF  C0                 	db	192
  1038  008EB0  32                 	db	50
  1039  008EB1  09                 	db	9
  1040  008EB2  04                 	db	4
  1041  008EB3  00                 	db	0
  1042  008EB4  00                 	db	0
  1043  008EB5  02                 	db	2
  1044  008EB6  03                 	db	3
  1045  008EB7  00                 	db	0
  1046  008EB8  00                 	db	0
  1047  008EB9  00                 	db	0
  1048  008EBA  09                 	db	9
  1049  008EBB  21                 	db	33
  1050  008EBC  11                 	db	17
  1051  008EBD  01                 	db	1
  1052  008EBE  00                 	db	0
  1053  008EBF  01                 	db	1
  1054  008EC0  22                 	db	34
  1055  008EC1  1D                 	db	29
  1056  008EC2  00                 	db	0
  1057  008EC3  07                 	db	7
  1058  008EC4  05                 	db	5
  1059  008EC5  81                 	db	129
  1060  008EC6  03                 	db	3
  1061  008EC7  40                 	db	64
  1062  008EC8  00                 	db	0
  1063  008EC9  01                 	db	1
  1064  008ECA  07                 	db	7
  1065  008ECB  05                 	db	5
  1066  008ECC  01                 	db	1
  1067  008ECD  03                 	db	3
  1068  008ECE  40                 	db	64
  1069  008ECF  00                 	db	0
  1070  008ED0  01                 	db	1
  1071  008ED1  09                 	db	9
  1072  008ED2  04                 	db	4
  1073  008ED3  01                 	db	1
  1074  008ED4  00                 	db	0
  1075  008ED5  02                 	db	2
  1076  008ED6  08                 	db	8
  1077  008ED7  06                 	db	6
  1078  008ED8  50                 	db	80
  1079  008ED9  00                 	db	0
  1080  008EDA  07                 	db	7
  1081  008EDB  05                 	db	5
  1082  008EDC  82                 	db	130
  1083  008EDD  02                 	db	2
  1084  008EDE  40                 	db	64
  1085  008EDF  00                 	db	0
  1086  008EE0  01                 	db	1
  1087  008EE1  07                 	db	7
  1088  008EE2  05                 	db	5
  1089  008EE3  02                 	db	2
  1090  008EE4  02                 	db	2
  1091  008EE5  40                 	db	64
  1092  008EE6  00                 	db	0
  1093  008EE7  01                 	db	1
  1094  008EE8                     __end_of_configDescriptor1:
  1095                           	opt stack 0
  1096  008EE8                     _sd001:
  1097                           	opt stack 0
  1098  008EE8  34                 	db	52
  1099  008EE9  03                 	db	3
  1100  008EEA  0053               	dw	83
  1101  008EEC  006F               	dw	111
  1102  008EEE  006C               	dw	108
  1103  008EF0  0064               	dw	100
  1104  008EF2  0065               	dw	101
  1105  008EF4  0072               	dw	114
  1106  008EF6  006E               	dw	110
  1107  008EF8  0065               	dw	101
  1108  008EFA  0072               	dw	114
  1109  008EFC  0064               	dw	100
  1110  008EFE  002E               	dw	46
  1111  008F00  0063               	dw	99
  1112  008F02  006F               	dw	111
  1113  008F04  006D               	dw	109
  1114  008F06  0020               	dw	32
  1115  008F08  0020               	dw	32
  1116  008F0A  0020               	dw	32
  1117  008F0C  0020               	dw	32
  1118  008F0E  0020               	dw	32
  1119  008F10  0020               	dw	32
  1120  008F12  0020               	dw	32
  1121  008F14  0020               	dw	32
  1122  008F16  0020               	dw	32
  1123  008F18  0020               	dw	32
  1124  008F1A  0020               	dw	32
  1125  008F1C                     __end_of_sd001:
  1126                           	opt stack 0
  1127  008F1C                     _sd002:
  1128                           	opt stack 0
  1129  008F1C  2E                 	db	46
  1130  008F1D  03                 	db	3
  1131  008F1E  004D               	dw	77
  1132  008F20  0050               	dw	80
  1133  008F22  0050               	dw	80
  1134  008F24  0054               	dw	84
  1135  008F26  0053               	dw	83
  1136  008F28  006F               	dw	111
  1137  008F2A  006C               	dw	108
  1138  008F2C  0061               	dw	97
  1139  008F2E  0072               	dw	114
  1140  008F30  0020               	dw	32
  1141  008F32  0043               	dw	67
  1142  008F34  0068               	dw	104
  1143  008F36  0061               	dw	97
  1144  008F38  0072               	dw	114
  1145  008F3A  0067               	dw	103
  1146  008F3C  0065               	dw	101
  1147  008F3E  0072               	dw	114
  1148  008F40  0020               	dw	32
  1149  008F42  0052               	dw	82
  1150  008F44  0065               	dw	101
  1151  008F46  0076               	dw	118
  1152  008F48  0043               	dw	67
  1153  008F4A                     __end_of_sd002:
  1154                           	opt stack 0
  1155  008F4A                     _inq_resp:
  1156                           	opt stack 0
  1157  008F4A  00                 	db	0
  1158  008F4B  80                 	db	128
  1159  008F4C  04                 	db	4
  1160  008F4D  02                 	db	2
  1161  008F4E  20                 	db	32
  1162  008F4F  00                 	db	0
  1163  008F50  00                 	db	0
  1164  008F51  00                 	db	0
  1165  008F52  4D                 	db	77
  1166  008F53  69                 	db	105
  1167  008F54  63                 	db	99
  1168  008F55  72                 	db	114
  1169  008F56  6F                 	db	111
  1170  008F57  63                 	db	99
  1171  008F58  68                 	db	104
  1172  008F59  70                 	db	112
  1173  008F5A  4D                 	db	77
  1174  008F5B  61                 	db	97
  1175  008F5C  73                 	db	115
  1176  008F5D  73                 	db	115
  1177  008F5E  20                 	db	32
  1178  008F5F  53                 	db	83
  1179  008F60  74                 	db	116
  1180  008F61  6F                 	db	111
  1181  008F62  72                 	db	114
  1182  008F63  61                 	db	97
  1183  008F64  67                 	db	103
  1184  008F65  65                 	db	101
  1185  008F66  20                 	db	32
  1186  008F67  20                 	db	32
  1187  008F68  20                 	db	32
  1188  008F69  20                 	db	32
  1189  008F6A  30                 	db	48
  1190  008F6B  30                 	db	48
  1191  008F6C  30                 	db	48
  1192  008F6D  31                 	db	49
  1193  008F6E                     __end_of_inq_resp:
  1194                           	opt stack 0
  1195  008F6E                     _hid_rpt01:
  1196                           	opt stack 0
  1197  008F6E  06                 	db	6
  1198  008F6F  00                 	db	0
  1199  008F70  FF                 	db	255
  1200  008F71  09                 	db	9
  1201  008F72  01                 	db	1
  1202  008F73  A1                 	db	161
  1203  008F74  01                 	db	1
  1204  008F75  19                 	db	25
  1205  008F76  01                 	db	1
  1206  008F77  29                 	db	41
  1207  008F78  40                 	db	64
  1208  008F79  15                 	db	21
  1209  008F7A  00                 	db	0
  1210  008F7B  26                 	db	38
  1211  008F7C  FF                 	db	255
  1212  008F7D  00                 	db	0
  1213  008F7E  75                 	db	117
  1214  008F7F  08                 	db	8
  1215  008F80  95                 	db	149
  1216  008F81  40                 	db	64
  1217  008F82  81                 	db	129
  1218  008F83  00                 	db	0
  1219  008F84  19                 	db	25
  1220  008F85  01                 	db	1
  1221  008F86  29                 	db	41
  1222  008F87  40                 	db	64
  1223  008F88  91                 	db	145
  1224  008F89  00                 	db	0
  1225  008F8A  C0                 	db	192
  1226  008F8B                     __end_of_hid_rpt01:
  1227                           	opt stack 0
  1228  008F8B                     _sd003:
  1229                           	opt stack 0
  1230  008F8B  1A                 	db	26
  1231  008F8C  03                 	db	3
  1232  008F8D  0031               	dw	49
  1233  008F8F  0032               	dw	50
  1234  008F91  0033               	dw	51
  1235  008F93  0034               	dw	52
  1236  008F95  0035               	dw	53
  1237  008F97  0036               	dw	54
  1238  008F99  0037               	dw	55
  1239  008F9B  0038               	dw	56
  1240  008F9D  0039               	dw	57
  1241  008F9F  0030               	dw	48
  1242  008FA1  0039               	dw	57
  1243  008FA3  0039               	dw	57
  1244  008FA5                     __end_of_sd003:
  1245                           	opt stack 0
  1246  008FA5                     _device_dsc:
  1247                           	opt stack 0
  1248  008FA5  12                 	db	18
  1249  008FA6  01                 	db	1
  1250  008FA7  0200               	dw	512
  1251  008FA9  00                 	db	0
  1252  008FAA  00                 	db	0
  1253  008FAB  00                 	db	0
  1254  008FAC  08                 	db	8
  1255  008FAD  04D8               	dw	1240
  1256  008FAF  F08E               	dw	61582
  1257  008FB1  0100               	dw	256
  1258  008FB3  01                 	db	1
  1259  008FB4  02                 	db	2
  1260  008FB5  00                 	db	0
  1261  008FB6  01                 	db	1
  1262  008FB7                     __end_of_device_dsc:
  1263                           	opt stack 0
  1264  008FB7                     _bootloader_filename:
  1265                           	opt stack 0
  1266  008FB7  46                 	db	70
  1267  008FB8  49                 	db	73
  1268  008FB9  52                 	db	82
  1269  008FBA  4D                 	db	77
  1270  008FBB  57                 	db	87
  1271  008FBC  41                 	db	65
  1272  008FBD  52                 	db	82
  1273  008FBE  45                 	db	69
  1274  008FBF  00                 	db	0
  1275  008FC0                     __end_of_bootloader_filename:
  1276                           	opt stack 0
  1277  008FC0                     _flash_command_pagesize_528:
  1278                           	opt stack 0
  1279  008FC0  3D                 	db	61
  1280  008FC1  2A                 	db	42
  1281  008FC2  80                 	db	128
  1282  008FC3  A7                 	db	167
  1283  008FC4                     __end_of_flash_command_pagesize_528:
  1284                           	opt stack 0
  1285  008FC4                     _flash_command_pagesize_512:
  1286                           	opt stack 0
  1287  008FC4  3D                 	db	61
  1288  008FC5  2A                 	db	42
  1289  008FC6  80                 	db	128
  1290  008FC7  A6                 	db	166
  1291  008FC8                     __end_of_flash_command_pagesize_512:
  1292                           	opt stack 0
  1293  008FC8                     _bootloader_extension:
  1294                           	opt stack 0
  1295  008FC8  48                 	db	72
  1296  008FC9  45                 	db	69
  1297  008FCA  58                 	db	88
  1298  008FCB  00                 	db	0
  1299  008FCC                     __end_of_bootloader_extension:
  1300                           	opt stack 0
  1301  008FCC                     _sd000:
  1302                           	opt stack 0
  1303  008FCC  04                 	db	4
  1304  008FCD  03                 	db	3
  1305  008FCE  0409               	dw	1033
  1306  008FD0                     __end_of_sd000:
  1307                           	opt stack 0
  1308  0000                     _RPINR23	set	3838
  1309  0000                     _RPOR23	set	3799
  1310  0000                     _RPINR22	set	3837
  1311  0000                     _RPOR22	set	3798
  1312  0000                     _RPOR21	set	3797
  1313  0000                     _RPINR21	set	3836
  1314  0000                     _RPINR2	set	3810
  1315  0000                     _RPINR3	set	3811
  1316  0000                     _RPINR1	set	3809
  1317  0000                     _PPSCONbits	set	3775
  1318  0000                     _ODCON3bits	set	3904
  1319  0000                     _ANCON0bits	set	3912
  1320  0000                     _UEP0bits	set	3878
  1321  0000                     _UIEbits	set	3894
  1322  0000                     _UADDR	set	3896
  1323  0000                     _UIE	set	3894
  1324  0000                     _UEIE	set	3895
  1325  0000                     _UCFG	set	3897
  1326  0000                     _UEP1	set	3879
  1327  0000                     _UEP0	set	3878
  1328  0000                     _TBLPTR	set	4086
  1329  0000                     _DMACON2bits	set	3974
  1330  0000                     _SSP2CON1bits	set	3954
  1331  0000                     _SSP2STATbits	set	3955
  1332  0000                     _INTCON	set	4082
  1333  0000                     _EECON1	set	4006
  1334  0000                     _TABLAT	set	4085
  1335  0000                     _EECON1bits	set	4006
  1336  0000                     _SSP1CON1	set	4038
  1337  0000                     _SSP1BUF	set	4041
  1338  0000                     _SSP1CON2bits	set	4037
  1339  0000                     _SSP1CON1bits	set	4038
  1340  0000                     _SSP1ADD	set	4040
  1341  0000                     _SSP1STATbits	set	4039
  1342  0000                     _LATEbits	set	3981
  1343  0000                     _TRISEbits	set	3990
  1344  0000                     _LATBbits	set	3978
  1345  0000                     _TRISBbits	set	3987
  1346  0000                     _LATDbits	set	3980
  1347  0000                     _TRISDbits	set	3989
  1348  0000                     _LATCbits	set	3979
  1349  0000                     _TRISCbits	set	3988
  1350  0000                     _T0CONbits	set	4053
  1351  0000                     _INTCON2bits	set	4081
  1352  0000                     _EECON2	set	4007
  1353  0000                     _PORTBbits	set	3969
  1354  0000                     _INTCON3bits	set	4080
  1355  0000                     _TMR0L	set	4054
  1356  0000                     _TMR0H	set	4055
  1357  0000                     _INTCONbits	set	4082
  1358  0000                     _OSCCON	set	4051
  1359  0000                     _OSCTUNEbits	set	3995
  1360  0000                     _PORTAbits	set	3968
  1361  0000                     _TRISAbits	set	3986
  1362  0000                     _LATAbits	set	3977
  1363  0000                     _PIR3bits	set	4004
  1364  0000                     _DMABCL	set	3943
  1365  0000                     _DMABCH	set	3942
  1366  0000                     _RXADDRL	set	3945
  1367  0000                     _RXADDRH	set	3944
  1368  0000                     _DMACON1bits	set	3976
  1369  0000                     _TXADDRL	set	3947
  1370  0000                     _TXADDRH	set	3946
  1371  0000                     _PORTDbits	set	3971
  1372  0000                     _USTAT	set	3940
  1373  0000                     _PIR2bits	set	4001
  1374  0000                     _UCON	set	3941
  1375  0000                     _UIRbits	set	3938
  1376  0000                     _UCONbits	set	3941
  1377  0000                     _UIR	set	3938
  1378  0000                     _UEIR	set	3939
  1379  0000                     _PIE2bits	set	4000
  1380  008FD0                     STR_12:
  1381  008FD0  68                 	db	104	;'h'
  1382  008FD1  65                 	db	101	;'e'
  1383  008FD2  6C                 	db	108	;'l'
  1384  008FD3  6C                 	db	108	;'l'
  1385  008FD4  6F                 	db	111	;'o'
  1386  008FD5  20                 	db	32
  1387  008FD6  77                 	db	119	;'w'
  1388  008FD7  6F                 	db	111	;'o'
  1389  008FD8  72                 	db	114	;'r'
  1390  008FD9  6C                 	db	108	;'l'
  1391  008FDA  64                 	db	100	;'d'
  1392  008FDB  21                 	db	33
  1393  008FDC  00                 	db	0
  1394  008FDD                     STR_9:
  1395  008FDD  53                 	db	83	;'S'
  1396  008FDE  6F                 	db	111	;'o'
  1397  008FDF  6C                 	db	108	;'l'
  1398  008FE0  61                 	db	97	;'a'
  1399  008FE1  72                 	db	114	;'r'
  1400  008FE2  43                 	db	67	;'C'
  1401  008FE3  68                 	db	104	;'h'
  1402  008FE4  61                 	db	97	;'a'
  1403  008FE5  72                 	db	114	;'r'
  1404  008FE6  67                 	db	103	;'g'
  1405  008FE7  72                 	db	114	;'r'
  1406  008FE8  00                 	db	0
  1407  008FE9                     STR_10:
  1408  008FE9  46                 	db	70	;'F'
  1409  008FEA  49                 	db	73	;'I'
  1410  008FEB  4C                 	db	76	;'L'
  1411  008FEC  45                 	db	69	;'E'
  1412  008FED  20                 	db	32
  1413  008FEE  20                 	db	32
  1414  008FEF  20                 	db	32
  1415  008FF0  20                 	db	32
  1416  008FF1  00                 	db	0
  1417  008FF2                     STR_1:
  1418  008FF2  4D                 	db	77	;'M'
  1419  008FF3  53                 	db	83	;'S'
  1420  008FF4  44                 	db	68	;'D'
  1421  008FF5  4F                 	db	79	;'O'
  1422  008FF6  53                 	db	83	;'S'
  1423  008FF7  35                 	db	53	;'5'
  1424  008FF8  2E                 	db	46
  1425  008FF9  30                 	db	48	;'0'
  1426  008FFA  00                 	db	0
  1427  008FFB                     STR_11:
  1428  008FFB  54                 	db	84	;'T'
  1429  008FFC  58                 	db	88	;'X'
  1430  008FFD  54                 	db	84	;'T'
  1431  008FFE  00                 	db	0
  1432  0000                     
  1433                           ; #config settings
  1434  008FFF  00                 	db	0	; dummy byte at the end
  1435  0000                     
  1436                           	psect	cinit
  1437  006AFC                     __pcinit:
  1438                           	opt stack 0
  1439  006AFC                     start_initialization:
  1440                           	opt stack 0
  1441  006AFC                     __initialization:
  1442                           	opt stack 0
  1443                           
  1444                           ; Initialize objects allocated to BANK1 (37 bytes)
  1445                           ; load TBLPTR registers with __pidataBANK1
  1446  006AFC  0E2C               	movlw	low __pidataBANK1
  1447  006AFE  6EF6               	movwf	tblptrl,c
  1448  006B00  0E86               	movlw	high __pidataBANK1
  1449  006B02  6EF7               	movwf	tblptrh,c
  1450  006B04  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1451  006B06  6EF8               	movwf	tblptru,c
  1452  006B08  EE01  F0D9         	lfsr	0,__pdataBANK1
  1453  006B0C  EE10 F025          	lfsr	1,37
  1454  006B10                     copy_data0:
  1455  006B10  0009               	tblrd		*+
  1456  006B12  CFF5 FFEE          	movff	tablat,postinc0
  1457  006B16  50E5               	movf	postdec1,w,c
  1458  006B18  50E1               	movf	fsr1l,w,c
  1459  006B1A  E1FA               	bnz	copy_data0
  1460                           
  1461                           ; Initialize objects allocated to BANK0 (1 bytes)
  1462                           ; load TBLPTR registers with __pidataBANK0
  1463  006B1C  0EC4               	movlw	low __pidataBANK0
  1464  006B1E  6EF6               	movwf	tblptrl,c
  1465  006B20  0E89               	movlw	high __pidataBANK0
  1466  006B22  6EF7               	movwf	tblptrh,c
  1467  006B24  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1468  006B26  6EF8               	movwf	tblptru,c
  1469  006B28  0009               	tblrd		*+	;fetch initializer
  1470  006B2A  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1471                           
  1472                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1473  006B2E  EE03  F080         	lfsr	0,__pbssBIGRAMll
  1474  006B32  EE12 F000          	lfsr	1,512
  1475  006B36                     clear_0:
  1476  006B36  6AEE               	clrf	postinc0,c
  1477  006B38  50E5               	movf	postdec1,w,c
  1478  006B3A  50E1               	movf	fsr1l,w,c
  1479  006B3C  E1FC               	bnz	clear_0
  1480  006B3E  50E2               	movf	fsr1h,w,c
  1481  006B40  E1FA               	bnz	clear_0
  1482                           
  1483                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1484  006B42  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1485  006B46  EE14 F000          	lfsr	1,1024
  1486  006B4A                     clear_1:
  1487  006B4A  6AEE               	clrf	postinc0,c
  1488  006B4C  50E5               	movf	postdec1,w,c
  1489  006B4E  50E1               	movf	fsr1l,w,c
  1490  006B50  E1FC               	bnz	clear_1
  1491  006B52  50E2               	movf	fsr1h,w,c
  1492  006B54  E1FA               	bnz	clear_1
  1493                           
  1494                           ; Clear objects allocated to BANK3 (128 bytes)
  1495  006B56  EE03  F000         	lfsr	0,__pbssBANK3
  1496  006B5A  0E80               	movlw	128
  1497  006B5C                     clear_2:
  1498  006B5C  6AEE               	clrf	postinc0,c
  1499  006B5E  06E8               	decf	wreg,f,c
  1500  006B60  E1FD               	bnz	clear_2
  1501                           
  1502                           ; Clear objects allocated to BANK2 (208 bytes)
  1503  006B62  EE02  F000         	lfsr	0,__pbssBANK2
  1504  006B66  0ED0               	movlw	208
  1505  006B68                     clear_3:
  1506  006B68  6AEE               	clrf	postinc0,c
  1507  006B6A  06E8               	decf	wreg,f,c
  1508  006B6C  E1FD               	bnz	clear_3
  1509                           
  1510                           ; Clear objects allocated to BANK1 (217 bytes)
  1511  006B6E  EE01  F000         	lfsr	0,__pbssBANK1
  1512  006B72  0ED9               	movlw	217
  1513  006B74                     clear_4:
  1514  006B74  6AEE               	clrf	postinc0,c
  1515  006B76  06E8               	decf	wreg,f,c
  1516  006B78  E1FD               	bnz	clear_4
  1517                           
  1518                           ; Clear objects allocated to BANK0 (70 bytes)
  1519  006B7A  EE00  F0B9         	lfsr	0,__pbssBANK0
  1520  006B7E  0E46               	movlw	70
  1521  006B80                     clear_5:
  1522  006B80  6AEE               	clrf	postinc0,c
  1523  006B82  06E8               	decf	wreg,f,c
  1524  006B84  E1FD               	bnz	clear_5
  1525  006B86                     end_of_initialization:
  1526                           	opt stack 0
  1527  006B86                     __end_of__initialization:
  1528                           	opt stack 0
  1529  006B86  0100               	movlb	0
  1530  006B88  EFDD  F01E         	goto	_main	;jump to C main() function
  1531                           tblptru	equ	0xFF8
  1532                           tblptrh	equ	0xFF7
  1533                           tblptrl	equ	0xFF6
  1534                           tablat	equ	0xFF5
  1535                           postinc0	equ	0xFEE
  1536                           wreg	equ	0xFE8
  1537                           postdec1	equ	0xFE5
  1538                           fsr1h	equ	0xFE2
  1539                           fsr1l	equ	0xFE1
  1540                           
  1541                           	psect	bssBANK0
  1542  0000B9                     __pbssBANK0:
  1543                           	opt stack 0
  1544  0000B9                     _os:
  1545                           	opt stack 0
  1546  0000B9                     	ds	6
  1547  0000BF                     _inPipes:
  1548                           	opt stack 0
  1549  0000BF                     	ds	6
  1550  0000C5                     _pBDTEntryIn:
  1551                           	opt stack 0
  1552  0000C5                     	ds	6
  1553  0000CB                     _hex_file_size:
  1554                           	opt stack 0
  1555  0000CB                     	ds	4
  1556  0000CF                     _hex_file_offset:
  1557                           	opt stack 0
  1558  0000CF                     	ds	4
  1559  0000D3                     _TransferLength:
  1560                           	opt stack 0
  1561  0000D3                     	ds	2
  1562  0000D5                     _USBMSDInHandle:
  1563                           	opt stack 0
  1564  0000D5                     	ds	2
  1565  0000D7                     _USBMSDOutHandle:
  1566                           	opt stack 0
  1567  0000D7                     	ds	2
  1568  0000D9                     _pBDTEntryEP0OutNext:
  1569                           	opt stack 0
  1570  0000D9                     	ds	2
  1571  0000DB                     _pBDTEntryEP0OutCurrent:
  1572                           	opt stack 0
  1573  0000DB                     	ds	2
  1574  0000DD                     _start_from_byte_next:
  1575                           	opt stack 0
  1576  0000DD                     	ds	1
  1577  0000DE                     _last_error:
  1578                           	opt stack 0
  1579  0000DE                     	ds	1
  1580  0000DF                     _power_state:
  1581                           	opt stack 0
  1582  0000DF                     	ds	1
  1583  0000E0                     _userInterfaceStatus:
  1584                           	opt stack 0
  1585  0000E0                     	ds	1
  1586  0000E1                     _MSDCBWValid:
  1587                           	opt stack 0
  1588  0000E1                     	ds	1
  1589  0000E2                     _MSDHostNoData:
  1590                           	opt stack 0
  1591  0000E2                     	ds	1
  1592  0000E3                     _SoftDetach:
  1593                           	opt stack 0
  1594  0000E3                     	ds	1
  1595  0000E4                     _MSDRetryAttempt:
  1596                           	opt stack 0
  1597  0000E4                     	ds	1
  1598  0000E5                     _MSDWriteState:
  1599                           	opt stack 0
  1600  0000E5                     	ds	1
  1601  0000E6                     _MSDReadState:
  1602                           	opt stack 0
  1603  0000E6                     	ds	1
  1604  0000E7                     _MSDCommandState:
  1605                           	opt stack 0
  1606  0000E7                     	ds	1
  1607  0000E8                     _MSD_State:
  1608                           	opt stack 0
  1609  0000E8                     	ds	1
  1610  0000E9                     _USBTicksSinceSuspendEnd:
  1611                           	opt stack 0
  1612  0000E9                     	ds	1
  1613  0000EA                     _USBDeferOUTDataStagePackets:
  1614                           	opt stack 0
  1615  0000EA                     	ds	1
  1616  0000EB                     _USBDeferINDataStagePackets:
  1617                           	opt stack 0
  1618  0000EB                     	ds	1
  1619  0000EC                     _USBStatusStageEnabledFlag2:
  1620                           	opt stack 0
  1621  0000EC                     	ds	1
  1622  0000ED                     _USBStatusStageEnabledFlag1:
  1623                           	opt stack 0
  1624  0000ED                     	ds	1
  1625  0000EE                     _USBDeferStatusStagePacket:
  1626                           	opt stack 0
  1627  0000EE                     	ds	1
  1628  0000EF                     _USBStatusStageTimeoutCounter:
  1629                           	opt stack 0
  1630  0000EF                     	ds	1
  1631  0000F0                     _BothEP0OutUOWNsSet:
  1632                           	opt stack 0
  1633  0000F0                     	ds	1
  1634  0000F1                     _endpoint_number:
  1635                           	opt stack 0
  1636  0000F1                     	ds	1
  1637  0000F2                     _USBBusIsSuspended:
  1638                           	opt stack 0
  1639  0000F2                     	ds	1
  1640  0000F3                     _RemoteWakeup:
  1641                           	opt stack 0
  1642  0000F3                     	ds	1
  1643  0000F4                     _controlTransferState:
  1644                           	opt stack 0
  1645  0000F4                     	ds	1
  1646  0000F5                     _shortPacketStatus:
  1647                           	opt stack 0
  1648  0000F5                     	ds	1
  1649  0000F6                     _USBDeviceState:
  1650                           	opt stack 0
  1651  0000F6                     	ds	1
  1652  0000F7                     _fast_read_cluster_number:
  1653                           	opt stack 0
  1654  0000F7                     	ds	2
  1655  0000F9                     _fast_read_cluster:
  1656                           	opt stack 0
  1657  0000F9                     	ds	2
  1658  0000FB                     _active_protocol:
  1659                           	opt stack 0
  1660  0000FB                     	ds	1
  1661  0000FC                     _idle_rate:
  1662                           	opt stack 0
  1663  0000FC                     	ds	1
  1664  0000FD                     _USTATcopy:
  1665                           	opt stack 0
  1666  0000FD                     	ds	1
  1667  0000FE                     _USBActiveConfiguration:
  1668                           	opt stack 0
  1669  0000FE                     	ds	1
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           postinc0	equ	0xFEE
  1675                           wreg	equ	0xFE8
  1676                           postdec1	equ	0xFE5
  1677                           fsr1h	equ	0xFE2
  1678                           fsr1l	equ	0xFE1
  1679                           
  1680                           	psect	dataBANK0
  1681  0000FF                     __pdataBANK0:
  1682                           	opt stack 0
  1683  0000FF                     _file_number:
  1684                           	opt stack 0
  1685  0000FF                     	ds	1
  1686                           tblptru	equ	0xFF8
  1687                           tblptrh	equ	0xFF7
  1688                           tblptrl	equ	0xFF6
  1689                           tablat	equ	0xFF5
  1690                           postinc0	equ	0xFEE
  1691                           wreg	equ	0xFE8
  1692                           postdec1	equ	0xFE5
  1693                           fsr1h	equ	0xFE2
  1694                           fsr1l	equ	0xFE1
  1695                           
  1696                           	psect	bssBANK1
  1697  000100                     __pbssBANK1:
  1698                           	opt stack 0
  1699  000100                     _gblCBW:
  1700                           	opt stack 0
  1701  000100                     	ds	31
  1702  00011F                     _gblSenseData:
  1703                           	opt stack 0
  1704  00011F                     	ds	18
  1705  000131                     _outPipes:
  1706                           	opt stack 0
  1707  000131                     	ds	8
  1708  000139                     _communicationSettings:
  1709                           	opt stack 0
  1710  000139                     	ds	7
  1711  000140                     _pBDTEntryOut:
  1712                           	opt stack 0
  1713  000140                     	ds	6
  1714  000146                     _extended_linear_address:
  1715                           	opt stack 0
  1716  000146                     	ds	4
  1717  00014A                     _file_maximum_address:
  1718                           	opt stack 0
  1719  00014A                     	ds	4
  1720  00014E                     _file_minimum_address:
  1721                           	opt stack 0
  1722  00014E                     	ds	4
  1723  000152                     _gblBLKLen:
  1724                           	opt stack 0
  1725  000152                     	ds	4
  1726  000156                     _gblNumBLKS:
  1727                           	opt stack 0
  1728  000156                     	ds	4
  1729  00015A                     _LBA:
  1730                           	opt stack 0
  1731  00015A                     	ds	4
  1732  00015E                     _USB1msTickCount:
  1733                           	opt stack 0
  1734  00015E                     	ds	4
  1735  000162                     _config_external:
  1736                           	opt stack 0
  1737  000162                     	ds	3
  1738  000165                     _config_internal:
  1739                           	opt stack 0
  1740  000165                     	ds	3
  1741  000168                     _ep_data_out:
  1742                           	opt stack 0
  1743  000168                     	ds	3
  1744  00016B                     _ep_data_in:
  1745                           	opt stack 0
  1746  00016B                     	ds	3
  1747  00016E                     _FileAddress:
  1748                           	opt stack 0
  1749  00016E                     	ds	2
  1750  000170                     _flash_pages_written:
  1751                           	opt stack 0
  1752  000170                     	ds	2
  1753  000172                     _total_hex_file_entries:
  1754                           	opt stack 0
  1755  000172                     	ds	2
  1756  000174                     _hex_file_entries:
  1757                           	opt stack 0
  1758  000174                     	ds	2
  1759  000176                     _startup_timer:
  1760                           	opt stack 0
  1761  000176                     	ds	2
  1762  000178                     _system_ui_inactive_count:
  1763                           	opt stack 0
  1764  000178                     	ds	2
  1765  00017A                     _USBInHandle:
  1766                           	opt stack 0
  1767  00017A                     	ds	2
  1768  00017C                     _USBOutHandle:
  1769                           	opt stack 0
  1770  00017C                     	ds	2
  1771  00017E                     _gblMediaPresent:
  1772                           	opt stack 0
  1773  00017E                     	ds	2
  1774  000180                     _MSBBufferIndex:
  1775                           	opt stack 0
  1776  000180                     	ds	2
  1777  000182                     _ptrNextData:
  1778                           	opt stack 0
  1779  000182                     	ds	2
  1780  000184                     _pDst:
  1781                           	opt stack 0
  1782  000184                     	ds	2
  1783  000186                     _active_configuration:
  1784                           	opt stack 0
  1785  000186                     	ds	1
  1786  000187                     _i2c_frequency:
  1787                           	opt stack 0
  1788  000187                     	ds	1
  1789  000188                     _gblCBWLength:
  1790                           	opt stack 0
  1791  000188                     	ds	1
  1792  000189                     _file_buffer:
  1793                           	opt stack 0
  1794  000189                     	ds	50
  1795  0001BB                     _hex_file_entry:
  1796                           	opt stack 0
  1797  0001BB                     	ds	23
  1798  0001D2                     _mediaInformation:
  1799                           	opt stack 0
  1800  0001D2                     	ds	5
  1801  0001D7                     _USBAlternateInterface:
  1802                           	opt stack 0
  1803  0001D7                     	ds	2
  1804                           tblptru	equ	0xFF8
  1805                           tblptrh	equ	0xFF7
  1806                           tblptrl	equ	0xFF6
  1807                           tablat	equ	0xFF5
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           postdec1	equ	0xFE5
  1811                           fsr1h	equ	0xFE2
  1812                           fsr1l	equ	0xFE1
  1813                           
  1814                           	psect	dataBANK1
  1815  0001D9                     __pdataBANK1:
  1816                           	opt stack 0
  1817  0001D9                     _LUN:
  1818                           	opt stack 0
  1819  0001D9                     	ds	20
  1820  0001ED                     i2c_display_send_init_sequence@F6808:
  1821                           	opt stack 0
  1822  0001ED                     	ds	9
  1823  0001F6                     	ds	8
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           postinc0	equ	0xFEE
  1829                           wreg	equ	0xFE8
  1830                           postdec1	equ	0xFE5
  1831                           fsr1h	equ	0xFE2
  1832                           fsr1l	equ	0xFE1
  1833                           
  1834                           	psect	bssBANK2
  1835  000200                     __pbssBANK2:
  1836                           	opt stack 0
  1837  000200                     _display_content:
  1838                           	opt stack 0
  1839  000200                     	ds	80
  1840  000250                     __spi_external_tx_buffer:
  1841                           	opt stack 0
  1842  000250                     	ds	64
  1843  000290                     _ReceivedDataBuffer:
  1844                           	opt stack 0
  1845  000290                     	ds	64
  1846                           tblptru	equ	0xFF8
  1847                           tblptrh	equ	0xFF7
  1848                           tblptrl	equ	0xFF6
  1849                           tablat	equ	0xFF5
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           postdec1	equ	0xFE5
  1853                           fsr1h	equ	0xFE2
  1854                           fsr1l	equ	0xFE1
  1855                           
  1856                           	psect	bssBANK3
  1857  000300                     __pbssBANK3:
  1858                           	opt stack 0
  1859  000300                     __spi_external_rx_buffer:
  1860                           	opt stack 0
  1861  000300                     	ds	64
  1862  000340                     _ToSendDataBuffer:
  1863                           	opt stack 0
  1864  000340                     	ds	64
  1865                           tblptru	equ	0xFF8
  1866                           tblptrh	equ	0xFF7
  1867                           tblptrl	equ	0xFF6
  1868                           tablat	equ	0xFF5
  1869                           postinc0	equ	0xFEE
  1870                           wreg	equ	0xFE8
  1871                           postdec1	equ	0xFE5
  1872                           fsr1h	equ	0xFE2
  1873                           fsr1l	equ	0xFE1
  1874                           
  1875                           	psect	bssBIGRAMlh
  1876  000800                     __pbssBIGRAMlh:
  1877                           	opt stack 0
  1878  000800                     _pageBuffer:
  1879                           	opt stack 0
  1880  000800                     	ds	1024
  1881                           tblptru	equ	0xFF8
  1882                           tblptrh	equ	0xFF7
  1883                           tblptrl	equ	0xFF6
  1884                           tablat	equ	0xFF5
  1885                           postinc0	equ	0xFEE
  1886                           wreg	equ	0xFE8
  1887                           postdec1	equ	0xFE5
  1888                           fsr1h	equ	0xFE2
  1889                           fsr1l	equ	0xFE1
  1890                           
  1891                           	psect	bssBIGRAMll
  1892  000380                     __pbssBIGRAMll:
  1893                           	opt stack 0
  1894  000380                     _buffer:
  1895                           	opt stack 0
  1896  000380                     	ds	512
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           postinc0	equ	0xFEE
  1902                           wreg	equ	0xFE8
  1903                           postdec1	equ	0xFE5
  1904                           fsr1h	equ	0xFE2
  1905                           fsr1l	equ	0xFE1
  1906                           
  1907                           	psect	cstackBANK0
  1908  000060                     __pcstackBANK0:
  1909                           	opt stack 0
  1910  000060                     ??__bootloader_verify_file:
  1911  000060                     ??__bootloader_program:
  1912  000060                     fat_rename_file@file_number:
  1913                           	opt stack 0
  1914  000060                     fat_create_file@next_cluster:
  1915                           	opt stack 0
  1916  000060                     fat_append_to_file@sector:
  1917                           	opt stack 0
  1918  000060                     fat_modify_file@sector:
  1919                           	opt stack 0
  1920  000060                     fat_read_from_file@start_byte:
  1921                           	opt stack 0
  1922  000060                     fat_resize_file@old_file_size:
  1923                           	opt stack 0
  1924                           
  1925                           ; 4 bytes @ 0x0
  1926  000060                     	ds	1
  1927  000061                     fat_rename_file@root:
  1928                           	opt stack 0
  1929                           
  1930                           ; 32 bytes @ 0x1
  1931  000061                     	ds	1
  1932  000062                     fat_modify_file@file_number:
  1933                           	opt stack 0
  1934  000062                     fat_create_file@cluster_count:
  1935                           	opt stack 0
  1936  000062                     fat_append_to_file@file_size:
  1937                           	opt stack 0
  1938                           
  1939                           ; 4 bytes @ 0x2
  1940  000062                     	ds	1
  1941  000063                     fat_modify_file@cluster:
  1942                           	opt stack 0
  1943                           
  1944                           ; 2 bytes @ 0x3
  1945  000063                     	ds	1
  1946  000064                     fat_create_file@root_slot:
  1947                           	opt stack 0
  1948  000064                     fat_resize_file@old_number_of_clusters:
  1949                           	opt stack 0
  1950  000064                     fat_read_from_file@length:
  1951                           	opt stack 0
  1952                           
  1953                           ; 4 bytes @ 0x4
  1954  000064                     	ds	1
  1955  000065                     fat_create_file@number_of_clusters:
  1956                           	opt stack 0
  1957  000065                     fat_modify_file@offset:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0x5
  1961  000065                     	ds	1
  1962  000066                     fat_resize_file@file_number:
  1963                           	opt stack 0
  1964  000066                     fat_append_to_file@new_cluster:
  1965                           	opt stack 0
  1966                           
  1967                           ; 2 bytes @ 0x6
  1968  000066                     	ds	1
  1969  000067                     fat_create_file@cluster:
  1970                           	opt stack 0
  1971  000067                     fat_resize_file@cntr:
  1972                           	opt stack 0
  1973  000067                     fat_modify_file@number_of_bytes:
  1974                           	opt stack 0
  1975                           
  1976                           ; 2 bytes @ 0x7
  1977  000067                     	ds	1
  1978  000068                     fat_append_to_file@fat_cluster:
  1979                           	opt stack 0
  1980  000068                     fat_read_from_file@data:
  1981                           	opt stack 0
  1982  000068                     __bootloader_program@buffer:
  1983                           	opt stack 0
  1984  000068                     __bootloader_verify_file@root:
  1985                           	opt stack 0
  1986                           
  1987                           ; 32 bytes @ 0x8
  1988  000068                     	ds	1
  1989  000069                     fat_resize_file@new_number_of_clusters:
  1990                           	opt stack 0
  1991  000069                     fat_create_file@root_entry:
  1992                           	opt stack 0
  1993  000069                     fat_modify_file@root:
  1994                           	opt stack 0
  1995                           
  1996                           ; 32 bytes @ 0x9
  1997  000069                     	ds	1
  1998  00006A                     ??_fat_read_from_file:
  1999  00006A                     fat_append_to_file@offset:
  2000                           	opt stack 0
  2001  00006A                     __bootloader_program@entry_page:
  2002                           	opt stack 0
  2003                           
  2004                           ; 2 bytes @ 0xA
  2005  00006A                     	ds	1
  2006  00006B                     fat_resize_file@root:
  2007                           	opt stack 0
  2008                           
  2009                           ; 32 bytes @ 0xB
  2010  00006B                     	ds	1
  2011  00006C                     fat_append_to_file@file_number:
  2012                           	opt stack 0
  2013  00006C                     __bootloader_program@address_within_page:
  2014                           	opt stack 0
  2015                           
  2016                           ; 2 bytes @ 0xC
  2017  00006C                     	ds	1
  2018  00006D                     fat_append_to_file@length:
  2019                           	opt stack 0
  2020                           
  2021                           ; 2 bytes @ 0xD
  2022  00006D                     	ds	1
  2023  00006E                     fat_read_from_file@file_number:
  2024                           	opt stack 0
  2025  00006E                     __bootloader_program@root:
  2026                           	opt stack 0
  2027                           
  2028                           ; 32 bytes @ 0xE
  2029  00006E                     	ds	1
  2030  00006F                     fat_read_from_file@cluster_number:
  2031                           	opt stack 0
  2032  00006F                     fat_append_to_file@position:
  2033                           	opt stack 0
  2034                           
  2035                           ; 4 bytes @ 0xF
  2036  00006F                     	ds	2
  2037  000071                     fat_read_from_file@cluster:
  2038                           	opt stack 0
  2039                           
  2040                           ; 2 bytes @ 0x11
  2041  000071                     	ds	2
  2042  000073                     fat_append_to_file@root:
  2043                           	opt stack 0
  2044  000073                     fat_read_from_file@root:
  2045                           	opt stack 0
  2046                           
  2047                           ; 32 bytes @ 0x13
  2048  000073                     	ds	14
  2049  000081                     fat_rename_file@cntr:
  2050                           	opt stack 0
  2051                           
  2052                           ; 1 bytes @ 0x21
  2053  000081                     	ds	7
  2054  000088                     __bootloader_verify_file@rec_counter:
  2055                           	opt stack 0
  2056                           
  2057                           ; 1 bytes @ 0x28
  2058  000088                     	ds	1
  2059  000089                     fat_modify_file@position:
  2060                           	opt stack 0
  2061  000089                     __bootloader_verify_file@return_value:
  2062                           	opt stack 0
  2063                           
  2064                           ; 4 bytes @ 0x29
  2065  000089                     	ds	2
  2066  00008B                     fat_resize_file@next_cluster:
  2067                           	opt stack 0
  2068                           
  2069                           ; 2 bytes @ 0x2B
  2070  00008B                     	ds	2
  2071  00008D                     fat_resize_file@cluster:
  2072                           	opt stack 0
  2073  00008D                     __bootloader_verify_file@address32:
  2074                           	opt stack 0
  2075                           
  2076                           ; 4 bytes @ 0x2D
  2077  00008D                     	ds	1
  2078  00008E                     __bootloader_program@return_value:
  2079                           	opt stack 0
  2080                           
  2081                           ; 4 bytes @ 0x2E
  2082  00008E                     	ds	4
  2083  000092                     __bootloader_program@address32:
  2084                           	opt stack 0
  2085                           
  2086                           ; 4 bytes @ 0x32
  2087  000092                     	ds	1
  2088  000093                     api_parse@inBuffer:
  2089                           	opt stack 0
  2090  000093                     __fill_buffer_read_file@inBuffer:
  2091                           	opt stack 0
  2092                           
  2093                           ; 2 bytes @ 0x33
  2094  000093                     	ds	2
  2095  000095                     api_parse@receivedDataLength:
  2096                           	opt stack 0
  2097  000095                     __fill_buffer_read_file@outBuffer:
  2098                           	opt stack 0
  2099                           
  2100                           ; 2 bytes @ 0x35
  2101  000095                     	ds	1
  2102  000096                     ??_api_parse:
  2103  000096                     __bootloader_program@start_from_byte:
  2104                           	opt stack 0
  2105                           
  2106                           ; 1 bytes @ 0x36
  2107  000096                     	ds	1
  2108  000097                     ??__fill_buffer_read_file:
  2109  000097                     __bootloader_program@cntr:
  2110                           	opt stack 0
  2111                           
  2112                           ; 2 bytes @ 0x37
  2113  000097                     	ds	2
  2114  000099                     __bootloader_program@page_to_write:
  2115                           	opt stack 0
  2116                           
  2117                           ; 2 bytes @ 0x39
  2118  000099                     	ds	2
  2119  00009B                     __fill_buffer_read_file@file_size:
  2120                           	opt stack 0
  2121                           
  2122                           ; 4 bytes @ 0x3B
  2123  00009B                     	ds	4
  2124  00009F                     __fill_buffer_read_file@data_length:
  2125                           	opt stack 0
  2126                           
  2127                           ; 4 bytes @ 0x3F
  2128  00009F                     	ds	4
  2129  0000A3                     __fill_buffer_read_file@start:
  2130                           	opt stack 0
  2131                           
  2132                           ; 4 bytes @ 0x43
  2133  0000A3                     	ds	4
  2134  0000A7                     api_prepare@inBuffer:
  2135                           	opt stack 0
  2136                           
  2137                           ; 2 bytes @ 0x47
  2138  0000A7                     	ds	2
  2139  0000A9                     api_prepare@outBuffer:
  2140                           	opt stack 0
  2141                           
  2142                           ; 2 bytes @ 0x49
  2143  0000A9                     	ds	2
  2144  0000AB                     ??_APP_DeviceCustomHIDTasks:
  2145                           
  2146                           ; 1 bytes @ 0x4B
  2147  0000AB                     	ds	4
  2148  0000AF                     ??_main:
  2149                           
  2150                           ; 1 bytes @ 0x4F
  2151  0000AF                     	ds	2
  2152  0000B1                     main@tx_start_addr:
  2153                           	opt stack 0
  2154                           
  2155                           ; 2 bytes @ 0x51
  2156  0000B1                     	ds	2
  2157  0000B3                     main@bytes_transmitted:
  2158                           	opt stack 0
  2159                           
  2160                           ; 2 bytes @ 0x53
  2161  0000B3                     	ds	2
  2162  0000B5                     main@rx_buffer:
  2163                           	opt stack 0
  2164                           
  2165                           ; 2 bytes @ 0x55
  2166  0000B5                     	ds	2
  2167  0000B7                     main@tx_buffer:
  2168                           	opt stack 0
  2169                           
  2170                           ; 2 bytes @ 0x57
  2171  0000B7                     	ds	2
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1h	equ	0xFE2
  2180                           fsr1l	equ	0xFE1
  2181                           
  2182                           	psect	cstackCOMRAM
  2183  000001                     __pcstackCOMRAM:
  2184                           	opt stack 0
  2185  000001                     ??_USBStdGetDscHandler:
  2186  000001                     ??_USBStdGetStatusHandler:
  2187  000001                     ??_system_delay_ms:
  2188  000001                     ??__i2c_wait_idle:
  2189  000001                     ??__display_clear:
  2190  000001                     ?_USBTransferOnePacket:
  2191                           	opt stack 0
  2192  000001                     ?_spi_get_external_rx_buffer:
  2193                           	opt stack 0
  2194  000001                     ?_spi_get_external_tx_buffer:
  2195                           	opt stack 0
  2196  000001                     ?_ExternalFlash_MediaInitialize:
  2197                           	opt stack 0
  2198  000001                     ?_ExternalFlash_SectorSizeRead:
  2199                           	opt stack 0
  2200  000001                     ?_bootloader_get_entries:
  2201                           	opt stack 0
  2202  000001                     ?_bootloader_get_total_entries:
  2203                           	opt stack 0
  2204  000001                     ?_bootloader_get_rec_address:
  2205                           	opt stack 0
  2206  000001                     ?_bootloader_get_flashPagesWritten:
  2207                           	opt stack 0
  2208  000001                     ?_strncmp:
  2209                           	opt stack 0
  2210  000001                     ?_internalFlash_pageFromAddress:
  2211                           	opt stack 0
  2212  000001                     ?_internalFlash_getBuffer:
  2213                           	opt stack 0
  2214  000001                     ?__get_time:
  2215                           	opt stack 0
  2216  000001                     ?__get_date:
  2217                           	opt stack 0
  2218  000001                     ?__sector_from_cluster:
  2219                           	opt stack 0
  2220  000001                     ?_bootloader_get_rec_dataLength:
  2221                           	opt stack 0
  2222  000001                     ?___lwdiv:
  2223                           	opt stack 0
  2224  000001                     ?___lwmod:
  2225                           	opt stack 0
  2226  000001                     ?_ExternalFlash_CapacityRead:
  2227                           	opt stack 0
  2228  000001                     ?_bootloader_get_file_size:
  2229                           	opt stack 0
  2230  000001                     ?_internalFlash_addressFromPage:
  2231                           	opt stack 0
  2232  000001                     ?___lldiv:
  2233                           	opt stack 0
  2234  000001                     ?___llmod:
  2235                           	opt stack 0
  2236  000001                     USBTransferOnePacket@dir:
  2237                           	opt stack 0
  2238  000001                     USBStallEndpoint@dir:
  2239                           	opt stack 0
  2240  000001                     USBConfigureEndpoint@direction:
  2241                           	opt stack 0
  2242  000001                     USBCtrlTrfTxService@byteToSend:
  2243                           	opt stack 0
  2244  000001                     USBCtrlTrfRxService@i:
  2245                           	opt stack 0
  2246  000001                     __i2c_send@dat:
  2247                           	opt stack 0
  2248  000001                     i2c_set_frequency@frequency:
  2249                           	opt stack 0
  2250  000001                     display_get_character@position:
  2251                           	opt stack 0
  2252  000001                     __display_search@cntr:
  2253                           	opt stack 0
  2254  000001                     __display_rebooting@cntr:
  2255                           	opt stack 0
  2256  000001                     hexCharToUint8@c:
  2257                           	opt stack 0
  2258  000001                     bootloader_get_rec_data@index:
  2259                           	opt stack 0
  2260  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2261                           	opt stack 0
  2262  000001                     spi_set_configuration@configuration:
  2263                           	opt stack 0
  2264  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2265                           	opt stack 0
  2266  000001                     SYSTEM_Initialize@pll_startup_counter:
  2267                           	opt stack 0
  2268  000001                     ExternalFlash_MediaInitialize@config:
  2269                           	opt stack 0
  2270  000001                     ExternalFlash_SectorSizeRead@config:
  2271                           	opt stack 0
  2272  000001                     ExternalFlash_CapacityRead@config:
  2273                           	opt stack 0
  2274  000001                     ExternalFlash_MediaDetect@config:
  2275                           	opt stack 0
  2276  000001                     ExternalFlash_WriteProtectStateGet@config:
  2277                           	opt stack 0
  2278  000001                     __sector_from_cluster@fat_cluster:
  2279                           	opt stack 0
  2280  000001                     __get_mbr@idx:
  2281                           	opt stack 0
  2282  000001                     __get_fbr@idx:
  2283                           	opt stack 0
  2284  000001                     __get_fat@idx:
  2285                           	opt stack 0
  2286  000001                     __get_root@idx:
  2287                           	opt stack 0
  2288  000001                     __get_data@idx:
  2289                           	opt stack 0
  2290  000001                     internalFlash_addressFromPage@page:
  2291                           	opt stack 0
  2292  000001                     __fill_buffer_get_configuration@outBuffer:
  2293                           	opt stack 0
  2294  000001                     spi_tx@data:
  2295                           	opt stack 0
  2296  000001                     spi_tx_tx@command:
  2297                           	opt stack 0
  2298  000001                     spi_tx_rx@command:
  2299                           	opt stack 0
  2300  000001                     ___lwdiv@dividend:
  2301                           	opt stack 0
  2302  000001                     ___lwmod@dividend:
  2303                           	opt stack 0
  2304  000001                     memcpy@d1:
  2305                           	opt stack 0
  2306  000001                     memset@p1:
  2307                           	opt stack 0
  2308  000001                     strncmp@s1:
  2309                           	opt stack 0
  2310  000001                     __spi_init@details:
  2311                           	opt stack 0
  2312  000001                     __bootloader_check_address@address:
  2313                           	opt stack 0
  2314  000001                     internalFlash_pageFromAddress@address:
  2315                           	opt stack 0
  2316  000001                     ___lldiv@dividend:
  2317                           	opt stack 0
  2318  000001                     ___llmod@dividend:
  2319                           	opt stack 0
  2320                           
  2321                           ; 4 bytes @ 0x0
  2322  000001                     	ds	1
  2323  000002                     ??_USBConfigureEndpoint:
  2324  000002                     ??_USBStallEndpoint:
  2325  000002                     ??_display_get_character:
  2326  000002                     USBCtrlTrfRxService@byteToRead:
  2327                           	opt stack 0
  2328  000002                     USBCtrlTrfInHandler@lastDTS:
  2329                           	opt stack 0
  2330  000002                     system_delay_ms@ms:
  2331                           	opt stack 0
  2332  000002                     hexCharToUint8@ascii:
  2333                           	opt stack 0
  2334  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2335                           	opt stack 0
  2336  000002                     USBTransferOnePacket@data:
  2337                           	opt stack 0
  2338  000002                     USBStdGetStatusHandler@p:
  2339                           	opt stack 0
  2340                           
  2341                           ; 2 bytes @ 0x1
  2342  000002                     	ds	1
  2343  000003                     ??_MSDComputeDeviceInAndResidue:
  2344  000003                     ??__get_mbr:
  2345  000003                     ??__get_fbr:
  2346  000003                     ??__get_fat:
  2347  000003                     ??__get_root:
  2348  000003                     ?_hexCharsToUint16:
  2349                           	opt stack 0
  2350  000003                     system_delay_ms@cntr:
  2351                           	opt stack 0
  2352  000003                     __display_clear@row:
  2353                           	opt stack 0
  2354  000003                     hexCharsToUint8@c2:
  2355                           	opt stack 0
  2356  000003                     hexCharsToUint16@c2:
  2357                           	opt stack 0
  2358  000003                     SYSTEM_Initialize@pll_startup_counter_3113:
  2359                           	opt stack 0
  2360  000003                     __get_time@time:
  2361                           	opt stack 0
  2362  000003                     __get_date@date:
  2363                           	opt stack 0
  2364  000003                     internalFlash_erasePage@page:
  2365                           	opt stack 0
  2366  000003                     internalFlash_writePage@page:
  2367                           	opt stack 0
  2368  000003                     spi_tx@length:
  2369                           	opt stack 0
  2370  000003                     spi_tx_tx@command_length:
  2371                           	opt stack 0
  2372  000003                     spi_tx_rx@command_length:
  2373                           	opt stack 0
  2374  000003                     ___lwdiv@divisor:
  2375                           	opt stack 0
  2376  000003                     ___lwmod@divisor:
  2377                           	opt stack 0
  2378  000003                     memset@c:
  2379                           	opt stack 0
  2380  000003                     strncmp@s2:
  2381                           	opt stack 0
  2382  000003                     memcpy@s1:
  2383                           	opt stack 0
  2384                           
  2385                           ; 3 bytes @ 0x2
  2386  000003                     	ds	1
  2387  000004                     ??_hexCharsToUint8:
  2388  000004                     USBTransferOnePacket@len:
  2389                           	opt stack 0
  2390  000004                     display_get_character@line:
  2391                           	opt stack 0
  2392  000004                     __display_clear@col:
  2393                           	opt stack 0
  2394  000004                     hexCharsToUint16@c3:
  2395                           	opt stack 0
  2396  000004                     spi_init@configuration:
  2397                           	opt stack 0
  2398                           
  2399                           ; 1 bytes @ 0x3
  2400  000004                     	ds	1
  2401  000005                     ??_USBTransferOnePacket:
  2402  000005                     ??_spi_tx:
  2403  000005                     ??_internalFlash_pageFromAddress:
  2404  000005                     SYSTEM_Initialize@state:
  2405                           	opt stack 0
  2406  000005                     hexCharsToUint8@c1:
  2407                           	opt stack 0
  2408  000005                     hexCharsToUint16@c4:
  2409                           	opt stack 0
  2410  000005                     __bootloader_check_address@dataLength:
  2411                           	opt stack 0
  2412  000005                     ___lwmod@counter:
  2413                           	opt stack 0
  2414  000005                     __update_modified_time@root:
  2415                           	opt stack 0
  2416  000005                     __fill_buffer_get_display@outBuffer:
  2417                           	opt stack 0
  2418  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2419                           	opt stack 0
  2420  000005                     spi_tx_tx@data:
  2421                           	opt stack 0
  2422  000005                     spi_tx_rx@data:
  2423                           	opt stack 0
  2424  000005                     ___lwdiv@quotient:
  2425                           	opt stack 0
  2426  000005                     memset@n:
  2427                           	opt stack 0
  2428  000005                     strncmp@len:
  2429                           	opt stack 0
  2430  000005                     internalFlash_erasePage@address:
  2431                           	opt stack 0
  2432  000005                     internalFlash_writePage@address:
  2433                           	opt stack 0
  2434  000005                     internalFlash_addressFromPage@address:
  2435                           	opt stack 0
  2436  000005                     ___lldiv@divisor:
  2437                           	opt stack 0
  2438  000005                     ___llmod@divisor:
  2439                           	opt stack 0
  2440                           
  2441                           ; 4 bytes @ 0x4
  2442  000005                     	ds	1
  2443  000006                     ??_hexCharsToUint16:
  2444  000006                     ??__bootloader_check_address:
  2445  000006                     USBStallEndpoint@ep:
  2446                           	opt stack 0
  2447  000006                     USBConfigureEndpoint@EPNum:
  2448                           	opt stack 0
  2449  000006                     hexCharsToUint8@retVal:
  2450                           	opt stack 0
  2451  000006                     __i2c_write@data:
  2452                           	opt stack 0
  2453  000006                     __i2c_read@data:
  2454                           	opt stack 0
  2455  000006                     i2c_display_write_fixed@data:
  2456                           	opt stack 0
  2457  000006                     memcpy@n:
  2458                           	opt stack 0
  2459                           
  2460                           ; 2 bytes @ 0x5
  2461  000006                     	ds	1
  2462  000007                     ??_strncmp:
  2463  000007                     ??__fill_buffer_get_bootloader_details:
  2464  000007                     __fill_buffer_get_display@secondHalf:
  2465                           	opt stack 0
  2466  000007                     ___lwdiv@counter:
  2467                           	opt stack 0
  2468  000007                     USBStallEndpoint@p:
  2469                           	opt stack 0
  2470  000007                     USBConfigureEndpoint@handle:
  2471                           	opt stack 0
  2472  000007                     spi_tx_tx@data_length:
  2473                           	opt stack 0
  2474  000007                     spi_tx_rx@data_length:
  2475                           	opt stack 0
  2476  000007                     memset@p:
  2477                           	opt stack 0
  2478                           
  2479                           ; 2 bytes @ 0x6
  2480  000007                     	ds	1
  2481  000008                     ??__fill_buffer_get_display:
  2482  000008                     __i2c_write@length:
  2483                           	opt stack 0
  2484  000008                     __i2c_read@length:
  2485                           	opt stack 0
  2486  000008                     i2c_display_write_fixed@length:
  2487                           	opt stack 0
  2488  000008                     utoa@buf:
  2489                           	opt stack 0
  2490  000008                     memcpy@s:
  2491                           	opt stack 0
  2492                           
  2493                           ; 3 bytes @ 0x7
  2494  000008                     	ds	1
  2495  000009                     ??_spi_tx_rx:
  2496  000009                     ??_spi_tx_tx:
  2497  000009                     ??__i2c_read:
  2498  000009                     ?_internalFlash_addressWithinPage:
  2499                           	opt stack 0
  2500  000009                     USBDeviceInit@i:
  2501                           	opt stack 0
  2502  000009                     USBEnableEndpoint@options:
  2503                           	opt stack 0
  2504  000009                     USBTransferOnePacket@ep:
  2505                           	opt stack 0
  2506  000009                     MSDErrorHandler@ErrorCase:
  2507                           	opt stack 0
  2508  000009                     __i2c_write@slave_address:
  2509                           	opt stack 0
  2510  000009                     i2c_display_write_fixed@pos:
  2511                           	opt stack 0
  2512  000009                     __flash_wakeup@command:
  2513                           	opt stack 0
  2514  000009                     hexCharsToUint16@c1:
  2515                           	opt stack 0
  2516  000009                     ___llmod@counter:
  2517                           	opt stack 0
  2518  000009                     internalFlash_writePage@cntr:
  2519                           	opt stack 0
  2520  000009                     internalFlash_addressWithinPage@address:
  2521                           	opt stack 0
  2522  000009                     ___lldiv@quotient:
  2523                           	opt stack 0
  2524                           
  2525                           ; 4 bytes @ 0x8
  2526  000009                     	ds	1
  2527  00000A                     MSDErrorHandler@OldMSD_State:
  2528                           	opt stack 0
  2529  00000A                     __i2c_write@cntr:
  2530                           	opt stack 0
  2531  00000A                     __bootloader_check_address@worst_case:
  2532                           	opt stack 0
  2533  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2534                           	opt stack 0
  2535  00000A                     USBEnableEndpoint@p:
  2536                           	opt stack 0
  2537  00000A                     USBTransferOnePacket@handle:
  2538                           	opt stack 0
  2539  00000A                     hexCharsToUint16@retVal:
  2540                           	opt stack 0
  2541  00000A                     utoa@val:
  2542                           	opt stack 0
  2543                           
  2544                           ; 2 bytes @ 0x9
  2545  00000A                     	ds	1
  2546  00000B                     __ic2_display_set_address@address:
  2547                           	opt stack 0
  2548  00000B                     i2c_digipot_backlight@level:
  2549                           	opt stack 0
  2550  00000B                     __bootloader_check_address@byte_status:
  2551                           	opt stack 0
  2552  00000B                     internalFlash_writePage@block_cntr:
  2553                           	opt stack 0
  2554  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2555                           	opt stack 0
  2556  00000B                     i2c_digipot_reset_on@data_array:
  2557                           	opt stack 0
  2558  00000B                     i2c_digipot_reset_off@data_array:
  2559                           	opt stack 0
  2560  00000B                     i2c_eeprom_writeByte@address:
  2561                           	opt stack 0
  2562  00000B                     memcpy@d:
  2563                           	opt stack 0
  2564  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2565                           	opt stack 0
  2566  00000B                     i2c_display_send_init_sequence@init_sequence:
  2567                           	opt stack 0
  2568                           
  2569                           ; 9 bytes @ 0xA
  2570  00000B                     	ds	1
  2571  00000C                     ??_USBMSDInit:
  2572  00000C                     ?_parseHexFileEntry:
  2573                           	opt stack 0
  2574  00000C                     USBEnableEndpoint@ep:
  2575                           	opt stack 0
  2576  00000C                     __bootloader_check_address@cntr:
  2577                           	opt stack 0
  2578  00000C                     internalFlash_writePage@byte_cntr:
  2579                           	opt stack 0
  2580  00000C                     _USBCheckMSDRequest$2319:
  2581                           	opt stack 0
  2582  00000C                     MSDTransferTerminated@handle:
  2583                           	opt stack 0
  2584  00000C                     __ic2_display_set_address@data_array:
  2585                           	opt stack 0
  2586  00000C                     i2c_digipot_backlight@data_array:
  2587                           	opt stack 0
  2588  00000C                     parseHexFileEntry@data:
  2589                           	opt stack 0
  2590  00000C                     utoa@base:
  2591                           	opt stack 0
  2592  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2593                           	opt stack 0
  2594                           
  2595                           ; 4 bytes @ 0xB
  2596  00000C                     	ds	1
  2597  00000D                     ?__flash_get_status:
  2598                           	opt stack 0
  2599  00000D                     i2c_eeprom_writeByte@data:
  2600                           	opt stack 0
  2601  00000D                     __fill_buffer_get_display@cntr:
  2602                           	opt stack 0
  2603  00000D                     ___lldiv@counter:
  2604                           	opt stack 0
  2605  00000D                     memcpy@tmp:
  2606                           	opt stack 0
  2607  00000D                     internalFlash_addressWithinPage@page:
  2608                           	opt stack 0
  2609                           
  2610                           ; 2 bytes @ 0xC
  2611  00000D                     	ds	1
  2612  00000E                     ??_i2c_eeprom_writeByte:
  2613  00000E                     i2c_display_cursor@position:
  2614                           	opt stack 0
  2615  00000E                     __fill_buffer_get_display@line:
  2616                           	opt stack 0
  2617  00000E                     _USBCheckMSDRequest$2320:
  2618                           	opt stack 0
  2619  00000E                     _MSDTransferTerminated$2407:
  2620                           	opt stack 0
  2621  00000E                     utoa@v:
  2622                           	opt stack 0
  2623  00000E                     parseHexFileEntry@offset:
  2624                           	opt stack 0
  2625  00000E                     internalFlash_read@address:
  2626                           	opt stack 0
  2627                           
  2628                           ; 4 bytes @ 0xD
  2629  00000E                     	ds	1
  2630  00000F                     ??_internalFlash_addressWithinPage:
  2631  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2632                           	opt stack 0
  2633  00000F                     i2c_display_cursor@line:
  2634                           	opt stack 0
  2635  00000F                     __flash_get_status@command:
  2636                           	opt stack 0
  2637  00000F                     __fill_buffer_get_display@start_line:
  2638                           	opt stack 0
  2639                           
  2640                           ; 1 bytes @ 0xE
  2641  00000F                     	ds	1
  2642  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2643                           	opt stack 0
  2644  000010                     __i2c_read@slave_address:
  2645                           	opt stack 0
  2646  000010                     i2c_display_cursor@address:
  2647                           	opt stack 0
  2648  000010                     __fill_buffer_get_display@position:
  2649                           	opt stack 0
  2650  000010                     utoa@c:
  2651                           	opt stack 0
  2652  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2653                           	opt stack 0
  2654  000010                     __flash_get_status@status:
  2655                           	opt stack 0
  2656  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2657                           	opt stack 0
  2658                           
  2659                           ; 2 bytes @ 0xF
  2660  000010                     	ds	1
  2661  000011                     MSDCheckForErrorCases@DeviceNoData:
  2662                           	opt stack 0
  2663  000011                     __i2c_read@cntr:
  2664                           	opt stack 0
  2665  000011                     i2c_eeprom_writeByte@dat:
  2666                           	opt stack 0
  2667  000011                     itoa@buf:
  2668                           	opt stack 0
  2669                           
  2670                           ; 2 bytes @ 0x10
  2671  000011                     	ds	1
  2672  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2673                           	opt stack 0
  2674  000012                     i2c_eeprom_readByte@address:
  2675                           	opt stack 0
  2676  000012                     __flash_is_busy@status:
  2677                           	opt stack 0
  2678  000012                     parseHexFileEntry@hexEntry:
  2679                           	opt stack 0
  2680  000012                     internalFlash_read@data_length:
  2681                           	opt stack 0
  2682                           
  2683                           ; 2 bytes @ 0x11
  2684  000012                     	ds	1
  2685  000013                     i2c_eeprom_writeByte@slave_address:
  2686                           	opt stack 0
  2687  000013                     itoa@val:
  2688                           	opt stack 0
  2689  000013                     internalFlash_addressWithinPage@page_start_address:
  2690                           	opt stack 0
  2691                           
  2692                           ; 4 bytes @ 0x12
  2693  000013                     	ds	1
  2694  000014                     ??_i2c_eeprom_readByte:
  2695  000014                     ??_parseHexFileEntry:
  2696  000014                     flash_is_busy@result:
  2697                           	opt stack 0
  2698  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2699                           	opt stack 0
  2700  000014                     __flash_copy_page_to_buffer@page:
  2701                           	opt stack 0
  2702  000014                     __flash_compare_page_to_buffer@page:
  2703                           	opt stack 0
  2704  000014                     __flash_write_to_buffer@start:
  2705                           	opt stack 0
  2706  000014                     __flash_write_page_from_buffer@page:
  2707                           	opt stack 0
  2708  000014                     __flash_partial_read@page:
  2709                           	opt stack 0
  2710  000014                     internalFlash_read@buffer:
  2711                           	opt stack 0
  2712  000014                     __flash_set_page_size@command:
  2713                           	opt stack 0
  2714                           
  2715                           ; 4 bytes @ 0x13
  2716  000014                     	ds	1
  2717  000015                     __fill_buffer_get_status@outBuffer:
  2718                           	opt stack 0
  2719  000015                     itoa@base:
  2720                           	opt stack 0
  2721                           
  2722                           ; 2 bytes @ 0x14
  2723  000015                     	ds	1
  2724  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2725  000016                     __flash_copy_page_to_buffer@buffer:
  2726                           	opt stack 0
  2727  000016                     __flash_compare_page_to_buffer@buffer:
  2728                           	opt stack 0
  2729  000016                     __flash_write_page_from_buffer@buffer:
  2730                           	opt stack 0
  2731  000016                     __flash_write_to_buffer@data:
  2732                           	opt stack 0
  2733  000016                     __flash_partial_read@start:
  2734                           	opt stack 0
  2735  000016                     internalFlash_readPage@page:
  2736                           	opt stack 0
  2737                           
  2738                           ; 2 bytes @ 0x15
  2739  000016                     	ds	1
  2740  000017                     ??__flash_copy_page_to_buffer:
  2741  000017                     ??__flash_compare_page_to_buffer:
  2742  000017                     ??__flash_write_page_from_buffer:
  2743  000017                     i2c_eeprom_readByte@slave_address:
  2744                           	opt stack 0
  2745  000017                     itoa@cp:
  2746                           	opt stack 0
  2747                           
  2748                           ; 2 bytes @ 0x16
  2749  000017                     	ds	1
  2750  000018                     ??_USBStdFeatureReqHandler:
  2751  000018                     USBStdSetCfgHandler@i:
  2752                           	opt stack 0
  2753  000018                     i2c_eeprom_readByte@addr:
  2754                           	opt stack 0
  2755  000018                     __flash_set_page_size@size:
  2756                           	opt stack 0
  2757  000018                     __flash_write_to_buffer@data_length:
  2758                           	opt stack 0
  2759  000018                     __flash_partial_read@length:
  2760                           	opt stack 0
  2761  000018                     internalFlash_readPage@address:
  2762                           	opt stack 0
  2763                           
  2764                           ; 4 bytes @ 0x17
  2765  000018                     	ds	1
  2766  000019                     USBStdFeatureReqHandler@pUEP:
  2767                           	opt stack 0
  2768  000019                     __display_itoa_u16@value:
  2769                           	opt stack 0
  2770                           
  2771                           ; 4 bytes @ 0x18
  2772  000019                     	ds	1
  2773  00001A                     __flash_write_to_buffer@buffer:
  2774                           	opt stack 0
  2775  00001A                     __flash_compare_page_to_buffer@status:
  2776                           	opt stack 0
  2777  00001A                     __flash_partial_read@data:
  2778                           	opt stack 0
  2779  00001A                     __flash_copy_page_to_buffer@command:
  2780                           	opt stack 0
  2781  00001A                     __flash_write_page_from_buffer@command:
  2782                           	opt stack 0
  2783                           
  2784                           ; 4 bytes @ 0x19
  2785  00001A                     	ds	1
  2786  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2787                           	opt stack 0
  2788  00001B                     __flash_write_to_buffer@command:
  2789                           	opt stack 0
  2790                           
  2791                           ; 4 bytes @ 0x1A
  2792  00001B                     	ds	1
  2793  00001C                     ??__flash_partial_read:
  2794  00001C                     parseHexFileEntry@i:
  2795                           	opt stack 0
  2796  00001C                     USBStdFeatureReqHandler@p:
  2797                           	opt stack 0
  2798  00001C                     __flash_compare_page_to_buffer@command:
  2799                           	opt stack 0
  2800                           
  2801                           ; 4 bytes @ 0x1B
  2802  00001C                     	ds	1
  2803  00001D                     __display_itoa_u16@text:
  2804                           	opt stack 0
  2805                           
  2806                           ; 2 bytes @ 0x1C
  2807  00001D                     	ds	1
  2808  00001E                     ??_USBCtrlEPService:
  2809  00001E                     
  2810                           ; 1 bytes @ 0x1D
  2811  00001E                     	ds	1
  2812  00001F                     ??__display_verify:
  2813  00001F                     ??__display_checked:
  2814  00001F                     __display_programming@cntr:
  2815                           	opt stack 0
  2816  00001F                     __display_done@cntr:
  2817                           	opt stack 0
  2818  00001F                     __display_itoa_u32@value:
  2819                           	opt stack 0
  2820                           
  2821                           ; 4 bytes @ 0x1E
  2822  00001F                     	ds	1
  2823  000020                     USBDeviceTasks@i:
  2824                           	opt stack 0
  2825  000020                     flash_page_write@page:
  2826                           	opt stack 0
  2827  000020                     flash_partial_write@page:
  2828                           	opt stack 0
  2829  000020                     __flash_partial_read@command:
  2830                           	opt stack 0
  2831                           
  2832                           ; 4 bytes @ 0x1F
  2833  000020                     	ds	1
  2834  000021                     __display_verify@cntr:
  2835                           	opt stack 0
  2836  000021                     __display_checked@start:
  2837                           	opt stack 0
  2838                           
  2839                           ; 1 bytes @ 0x20
  2840  000021                     	ds	1
  2841  000022                     __display_checked@cntr:
  2842                           	opt stack 0
  2843  000022                     flash_page_write@data:
  2844                           	opt stack 0
  2845  000022                     flash_partial_write@start:
  2846                           	opt stack 0
  2847                           
  2848                           ; 2 bytes @ 0x21
  2849  000022                     	ds	1
  2850  000023                     __display_itoa_u32@text:
  2851                           	opt stack 0
  2852                           
  2853                           ; 2 bytes @ 0x22
  2854  000023                     	ds	1
  2855  000024                     flash_page_write@match:
  2856                           	opt stack 0
  2857  000024                     flash_partial_write@length:
  2858                           	opt stack 0
  2859  000024                     __flash_partial_read@address:
  2860                           	opt stack 0
  2861                           
  2862                           ; 4 bytes @ 0x23
  2863  000024                     	ds	1
  2864  000025                     ??__display_found:
  2865  000025                     __display_start@cntr:
  2866                           	opt stack 0
  2867  000025                     __display_failed@cntr:
  2868                           	opt stack 0
  2869  000025                     ExternalFlash_SectorWrite@config:
  2870                           	opt stack 0
  2871  000025                     fat_format@cntr:
  2872                           	opt stack 0
  2873                           
  2874                           ; 2 bytes @ 0x24
  2875  000025                     	ds	1
  2876  000026                     flash_partial_write@data:
  2877                           	opt stack 0
  2878                           
  2879                           ; 2 bytes @ 0x25
  2880  000026                     	ds	1
  2881  000027                     __display_found@start:
  2882                           	opt stack 0
  2883  000027                     __parse_format_drive@data:
  2884                           	opt stack 0
  2885  000027                     ExternalFlash_SectorWrite@sector_addr:
  2886                           	opt stack 0
  2887                           
  2888                           ; 4 bytes @ 0x26
  2889  000027                     	ds	1
  2890  000028                     __display_found@cntr:
  2891                           	opt stack 0
  2892  000028                     flash_partial_write@match:
  2893                           	opt stack 0
  2894  000028                     flash_page_read@page:
  2895                           	opt stack 0
  2896  000028                     flash_partial_read@page:
  2897                           	opt stack 0
  2898                           
  2899                           ; 2 bytes @ 0x27
  2900  000028                     	ds	1
  2901  000029                     ??_display_prepare:
  2902  000029                     ??__delete_root:
  2903  000029                     __write_fat@cluster:
  2904                           	opt stack 0
  2905  000029                     __write_root@data:
  2906                           	opt stack 0
  2907                           
  2908                           ; 2 bytes @ 0x28
  2909  000029                     	ds	1
  2910  00002A                     flash_page_read@data:
  2911                           	opt stack 0
  2912  00002A                     flash_partial_read@start:
  2913                           	opt stack 0
  2914  00002A                     __delete_root@root_sector:
  2915                           	opt stack 0
  2916                           
  2917                           ; 2 bytes @ 0x29
  2918  00002A                     	ds	1
  2919  00002B                     ??__write_root:
  2920  00002B                     display_prepare@mode:
  2921                           	opt stack 0
  2922  00002B                     ExternalFlash_SectorWrite@buffer:
  2923                           	opt stack 0
  2924  00002B                     __write_fat@value:
  2925                           	opt stack 0
  2926                           
  2927                           ; 2 bytes @ 0x2A
  2928  00002B                     	ds	1
  2929  00002C                     ??_fat_get_format_status:
  2930  00002C                     __parse_command_short@cmd:
  2931                           	opt stack 0
  2932  00002C                     flash_partial_read@length:
  2933                           	opt stack 0
  2934  00002C                     ExternalFlash_SectorRead@config:
  2935                           	opt stack 0
  2936  00002C                     __write_root@root_sector:
  2937                           	opt stack 0
  2938  00002C                     __delete_root@offset:
  2939                           	opt stack 0
  2940                           
  2941                           ; 2 bytes @ 0x2B
  2942  00002C                     	ds	1
  2943  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2944                           	opt stack 0
  2945  00002D                     __write_fat@fat_sector:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x2C
  2949  00002D                     	ds	1
  2950  00002E                     __delete_root@deleted_value:
  2951                           	opt stack 0
  2952  00002E                     flash_partial_read@data:
  2953                           	opt stack 0
  2954  00002E                     ExternalFlash_SectorWrite@page:
  2955                           	opt stack 0
  2956  00002E                     __write_root@offset:
  2957                           	opt stack 0
  2958  00002E                     fat_get_format_status@cntr:
  2959                           	opt stack 0
  2960  00002E                     ExternalFlash_SectorRead@sector_addr:
  2961                           	opt stack 0
  2962                           
  2963                           ; 4 bytes @ 0x2D
  2964  00002E                     	ds	1
  2965  00002F                     __delete_root@slot:
  2966                           	opt stack 0
  2967  00002F                     __write_fat@offset:
  2968                           	opt stack 0
  2969                           
  2970                           ; 2 bytes @ 0x2E
  2971  00002F                     	ds	1
  2972  000030                     ??_MSDWriteHandler:
  2973  000030                     ??__root_is_available:
  2974  000030                     ?__get_empty_cluster:
  2975                           	opt stack 0
  2976  000030                     ?_fat_get_empty_clusters:
  2977                           	opt stack 0
  2978  000030                     ?__read_fat:
  2979                           	opt stack 0
  2980  000030                     ?__get_first_cluster:
  2981                           	opt stack 0
  2982  000030                     ?_fat_get_file_size:
  2983                           	opt stack 0
  2984  000030                     __write_root@slot:
  2985                           	opt stack 0
  2986  000030                     __get_empty_cluster@first_cluster:
  2987                           	opt stack 0
  2988  000030                     fat_get_empty_clusters@maximum:
  2989                           	opt stack 0
  2990  000030                     __read_fat@cluster:
  2991                           	opt stack 0
  2992  000030                     fat_find_file@name:
  2993                           	opt stack 0
  2994                           
  2995                           ; 2 bytes @ 0x2F
  2996  000030                     	ds	1
  2997  000031                     __root_is_available@root_sector:
  2998                           	opt stack 0
  2999                           
  3000                           ; 2 bytes @ 0x30
  3001  000031                     	ds	1
  3002  000032                     ??__get_first_cluster:
  3003  000032                     ExternalFlash_SectorRead@buffer:
  3004                           	opt stack 0
  3005  000032                     __get_empty_cluster@fat_sector:
  3006                           	opt stack 0
  3007  000032                     fat_get_empty_clusters@fat_sector:
  3008                           	opt stack 0
  3009  000032                     __read_fat@fat_sector:
  3010                           	opt stack 0
  3011  000032                     fat_find_file@extension:
  3012                           	opt stack 0
  3013                           
  3014                           ; 2 bytes @ 0x31
  3015  000032                     	ds	1
  3016  000033                     __root_is_available@offset:
  3017                           	opt stack 0
  3018  000033                     __get_first_cluster@sector:
  3019                           	opt stack 0
  3020                           
  3021                           ; 2 bytes @ 0x32
  3022  000033                     	ds	1
  3023  000034                     ??_fat_get_file_size:
  3024  000034                     ExternalFlash_SectorRead@page:
  3025                           	opt stack 0
  3026  000034                     __get_empty_cluster@offset:
  3027                           	opt stack 0
  3028  000034                     fat_get_empty_clusters@offset:
  3029                           	opt stack 0
  3030  000034                     __read_fat@offset:
  3031                           	opt stack 0
  3032  000034                     fat_find_file@buffer:
  3033                           	opt stack 0
  3034                           
  3035                           ; 11 bytes @ 0x33
  3036  000034                     	ds	1
  3037  000035                     __root_is_available@file_number:
  3038                           	opt stack 0
  3039  000035                     __get_first_cluster@offset:
  3040                           	opt stack 0
  3041  000035                     fat_get_file_size@sector:
  3042                           	opt stack 0
  3043                           
  3044                           ; 2 bytes @ 0x34
  3045  000035                     	ds	1
  3046  000036                     ??_MSDReadHandler:
  3047  000036                     __root_is_available@first_byte:
  3048                           	opt stack 0
  3049  000036                     __get_empty_cluster@value:
  3050                           	opt stack 0
  3051  000036                     fat_get_empty_clusters@value:
  3052                           	opt stack 0
  3053  000036                     __read_fat@value:
  3054                           	opt stack 0
  3055                           
  3056                           ; 2 bytes @ 0x35
  3057  000036                     	ds	1
  3058  000037                     __get_available_root_entry@file_number:
  3059                           	opt stack 0
  3060  000037                     __get_first_cluster@first_cluster:
  3061                           	opt stack 0
  3062  000037                     fat_get_file_information@data:
  3063                           	opt stack 0
  3064  000037                     fat_get_file_size@file_size:
  3065                           	opt stack 0
  3066                           
  3067                           ; 4 bytes @ 0x36
  3068  000037                     	ds	1
  3069  000038                     __get_empty_cluster@cluster:
  3070                           	opt stack 0
  3071  000038                     fat_get_empty_clusters@empty_clusters:
  3072                           	opt stack 0
  3073  000038                     fat_read_from_file_fast@start_byte:
  3074                           	opt stack 0
  3075                           
  3076                           ; 4 bytes @ 0x37
  3077  000038                     	ds	1
  3078  000039                     ??_fat_get_file_information:
  3079  000039                     __get_first_cluster@slot:
  3080                           	opt stack 0
  3081                           
  3082                           ; 1 bytes @ 0x38
  3083  000039                     	ds	1
  3084  00003A                     ??_MSDProcessCommandMediaPresent:
  3085  00003A                     fat_get_empty_clusters@cluster:
  3086                           	opt stack 0
  3087  00003A                     fat_delete_file@next_cluster:
  3088                           	opt stack 0
  3089  00003A                     fat_get_file_information@root_sector:
  3090                           	opt stack 0
  3091                           
  3092                           ; 2 bytes @ 0x39
  3093  00003A                     	ds	1
  3094  00003B                     fat_get_file_size@offset:
  3095                           	opt stack 0
  3096                           
  3097                           ; 2 bytes @ 0x3A
  3098  00003B                     	ds	1
  3099  00003C                     _MSDProcessCommandMediaPresent$2390:
  3100                           	opt stack 0
  3101  00003C                     fat_delete_file@first_cluster:
  3102                           	opt stack 0
  3103  00003C                     fat_get_file_information@offset:
  3104                           	opt stack 0
  3105  00003C                     fat_read_from_file_fast@length:
  3106                           	opt stack 0
  3107                           
  3108                           ; 4 bytes @ 0x3B
  3109  00003C                     	ds	1
  3110  00003D                     fat_get_file_size@file_number:
  3111                           	opt stack 0
  3112                           
  3113                           ; 1 bytes @ 0x3C
  3114  00003D                     	ds	1
  3115  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3116                           	opt stack 0
  3117  00003E                     fat_delete_file@file_number:
  3118                           	opt stack 0
  3119  00003E                     fat_get_file_information@file_number:
  3120                           	opt stack 0
  3121                           
  3122                           ; 1 bytes @ 0x3D
  3123  00003E                     	ds	1
  3124  00003F                     fat_find_file@slot:
  3125                           	opt stack 0
  3126  00003F                     fat_append_to_file@number_of_bytes:
  3127                           	opt stack 0
  3128  00003F                     fat_rename_file@name:
  3129                           	opt stack 0
  3130  00003F                     __fill_buffer_get_file_details@inBuffer:
  3131                           	opt stack 0
  3132  00003F                     __parse_file_delete@data:
  3133                           	opt stack 0
  3134  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3135                           	opt stack 0
  3136  00003F                     fat_resize_file@new_file_size:
  3137                           	opt stack 0
  3138  00003F                     fat_modify_file@start_byte:
  3139                           	opt stack 0
  3140                           
  3141                           ; 4 bytes @ 0x3E
  3142  00003F                     	ds	1
  3143  000040                     fat_find_file@sector:
  3144                           	opt stack 0
  3145  000040                     fat_read_from_file_fast@data:
  3146                           	opt stack 0
  3147                           
  3148                           ; 2 bytes @ 0x3F
  3149  000040                     	ds	1
  3150  000041                     fat_append_to_file@data:
  3151                           	opt stack 0
  3152  000041                     fat_rename_file@extension:
  3153                           	opt stack 0
  3154  000041                     __fill_buffer_get_file_details@outBuffer:
  3155                           	opt stack 0
  3156                           
  3157                           ; 2 bytes @ 0x40
  3158  000041                     	ds	1
  3159  000042                     fat_find_file@offset:
  3160                           	opt stack 0
  3161  000042                     fat_read_from_file_fast@cluster:
  3162                           	opt stack 0
  3163                           
  3164                           ; 2 bytes @ 0x41
  3165  000042                     	ds	1
  3166  000043                     ??_fat_append_to_file:
  3167  000043                     ??_fat_resize_file:
  3168  000043                     __fill_buffer_get_file_details@file_number:
  3169                           	opt stack 0
  3170  000043                     fat_modify_file@length:
  3171                           	opt stack 0
  3172  000043                     __parse_file_rename@data:
  3173                           	opt stack 0
  3174  000043                     MSDProcessCommandMediaPresent@capacity:
  3175                           	opt stack 0
  3176                           
  3177                           ; 4 bytes @ 0x42
  3178  000043                     	ds	1
  3179  000044                     fat_create_file@name:
  3180                           	opt stack 0
  3181  000044                     fat_read_from_file_fast@cluster_number:
  3182                           	opt stack 0
  3183  000044                     __fill_buffer_find_file@inBuffer:
  3184                           	opt stack 0
  3185                           
  3186                           ; 2 bytes @ 0x43
  3187  000044                     	ds	1
  3188  000045                     fat_modify_file@data:
  3189                           	opt stack 0
  3190                           
  3191                           ; 2 bytes @ 0x44
  3192  000045                     	ds	1
  3193  000046                     ??_fat_read_from_file_fast:
  3194  000046                     fat_create_file@extension:
  3195                           	opt stack 0
  3196  000046                     __fill_buffer_find_file@outBuffer:
  3197                           	opt stack 0
  3198                           
  3199                           ; 2 bytes @ 0x45
  3200  000046                     	ds	1
  3201  000047                     ??_fat_modify_file:
  3202  000047                     MSDProcessCommandMediaPresent@i:
  3203                           	opt stack 0
  3204  000047                     __parse_file_resize@data:
  3205                           	opt stack 0
  3206                           
  3207                           ; 2 bytes @ 0x46
  3208  000047                     	ds	1
  3209  000048                     ??_MSDProcessCommand:
  3210  000048                     ??__fill_buffer_find_file:
  3211  000048                     fat_create_file@size:
  3212                           	opt stack 0
  3213                           
  3214                           ; 4 bytes @ 0x47
  3215  000048                     	ds	1
  3216  000049                     ??__parse_file_resize:
  3217                           
  3218                           ; 1 bytes @ 0x48
  3219  000049                     	ds	1
  3220  00004A                     __parse_file_resize@file_size:
  3221                           	opt stack 0
  3222                           
  3223                           ; 4 bytes @ 0x49
  3224  00004A                     	ds	1
  3225  00004B                     __parse_file_append@data:
  3226                           	opt stack 0
  3227                           
  3228                           ; 2 bytes @ 0x4A
  3229  00004B                     	ds	1
  3230  00004C                     ??_fat_create_file:
  3231  00004C                     __fill_buffer_find_file@cntr:
  3232                           	opt stack 0
  3233                           
  3234                           ; 1 bytes @ 0x4B
  3235  00004C                     	ds	1
  3236  00004D                     ??__parse_file_append:
  3237  00004D                     ??_MSDTasks:
  3238                           
  3239                           ; 1 bytes @ 0x4C
  3240  00004D                     	ds	1
  3241  00004E                     _MSDTasks$2372:
  3242                           	opt stack 0
  3243                           
  3244                           ; 2 bytes @ 0x4D
  3245  00004E                     	ds	2
  3246  000050                     _MSDTasks$2373:
  3247                           	opt stack 0
  3248  000050                     __parse_file_create@data:
  3249                           	opt stack 0
  3250                           
  3251                           ; 2 bytes @ 0x4F
  3252  000050                     	ds	2
  3253  000052                     ??__parse_file_create:
  3254  000052                     MSDTasks@i:
  3255                           	opt stack 0
  3256  000052                     fat_read_from_file_fast@sector:
  3257                           	opt stack 0
  3258                           
  3259                           ; 2 bytes @ 0x51
  3260  000052                     	ds	1
  3261  000053                     __parse_file_modify@data:
  3262                           	opt stack 0
  3263  000053                     __parse_file_create@file_size:
  3264                           	opt stack 0
  3265                           
  3266                           ; 4 bytes @ 0x52
  3267  000053                     	ds	1
  3268  000054                     fat_read_from_file_fast@working_cluster:
  3269                           	opt stack 0
  3270                           
  3271                           ; 2 bytes @ 0x53
  3272  000054                     	ds	1
  3273  000055                     ??__parse_file_modify:
  3274                           
  3275                           ; 1 bytes @ 0x54
  3276  000055                     	ds	1
  3277  000056                     fat_read_from_file_fast@offset:
  3278                           	opt stack 0
  3279  000056                     __parse_file_modify@number_of_bytes:
  3280                           	opt stack 0
  3281                           
  3282                           ; 2 bytes @ 0x55
  3283  000056                     	ds	2
  3284  000058                     fat_read_from_file_fast@read_length:
  3285                           	opt stack 0
  3286  000058                     __parse_file_modify@start_byte:
  3287                           	opt stack 0
  3288                           
  3289                           ; 4 bytes @ 0x57
  3290  000058                     	ds	2
  3291  00005A                     fat_read_from_file_fast@position:
  3292                           	opt stack 0
  3293                           
  3294                           ; 4 bytes @ 0x59
  3295  00005A                     	ds	2
  3296  00005C                     __parse_command_long@data:
  3297                           	opt stack 0
  3298                           
  3299                           ; 2 bytes @ 0x5B
  3300  00005C                     	ds	2
  3301  00005E                     bootloader_run@timeslot:
  3302                           	opt stack 0
  3303  00005E                     api_prepare@command:
  3304                           	opt stack 0
  3305  00005E                     __parse_command_long@length:
  3306                           	opt stack 0
  3307                           
  3308                           ; 1 bytes @ 0x5D
  3309  00005E                     	ds	1
  3310  00005F                     api_parse@idx:
  3311                           	opt stack 0
  3312                           
  3313                           ; 1 bytes @ 0x5E
  3314  00005F                     	ds	1
  3315                           tblptru	equ	0xFF8
  3316                           tblptrh	equ	0xFF7
  3317                           tblptrl	equ	0xFF6
  3318                           tablat	equ	0xFF5
  3319                           postinc0	equ	0xFEE
  3320                           wreg	equ	0xFE8
  3321                           postdec1	equ	0xFE5
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           
  3325 ;;
  3326 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3327 ;;
  3328 ;; *************** function _main *****************
  3329 ;; Defined at:
  3330 ;;		line 54 in file "main.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  tx_buffer       2   87[BANK0 ] PTR unsigned char 
  3335 ;;		 -> _spi_external_tx_buffer(64), 
  3336 ;;  rx_buffer       2   85[BANK0 ] PTR unsigned char 
  3337 ;;		 -> _spi_external_rx_buffer(64), 
  3338 ;;  bytes_transm    2   83[BANK0 ] unsigned int 
  3339 ;;  tx_start_add    2   81[BANK0 ] unsigned int 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3350 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3351 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3352 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;Total ram usage:       10 bytes
  3354 ;; Hardware stack levels required when called:   12
  3355 ;; This function calls:
  3356 ;;		_APP_DeviceCustomHIDTasks
  3357 ;;		_APP_DeviceMSDTasks
  3358 ;;		_SYSTEM_Initialize
  3359 ;;		_USBDeviceInit
  3360 ;;		_USBDeviceTasks
  3361 ;;		__normal_mode
  3362 ;;		_api_parse
  3363 ;;		_api_prepare
  3364 ;;		_bootloader_run
  3365 ;;		_display_prepare
  3366 ;;		_display_update
  3367 ;;		_jump_to_main_program
  3368 ;;		_spi_get_external_rx_buffer
  3369 ;;		_spi_get_external_tx_buffer
  3370 ;;		_system_full_init
  3371 ;;		_system_minimal_init
  3372 ;;		_system_minimal_init_undo
  3373 ;;		_timer_pseudo_isr
  3374 ;;		_ui_get_status
  3375 ;;		_ui_run
  3376 ;; This function is called by:
  3377 ;;		Startup code after reset
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text0
  3382  003DBA                     __ptext0:
  3383                           	opt stack 0
  3384  003DBA                     _main:
  3385                           	opt stack 19
  3386                           
  3387                           ;main.c: 56: uint16_t bytes_transmitted;;main.c: 57: uint16_t tx_start_addr;;main.c: 59:
      +                           uint8_t *rx_buffer;;main.c: 60: uint8_t *tx_buffer;;main.c: 62: rx_buffer = spi_get_ext
      +                          ernal_rx_buffer();
  3388                           
  3389                           ;incstack = 0
  3390  003DBA  EC7F  F044         	call	_spi_get_external_rx_buffer	;wreg free
  3391  003DBE  C001  F0B5         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3392  003DC2  C002  F0B6         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3393                           
  3394                           ;main.c: 63: tx_buffer = spi_get_external_tx_buffer();
  3395  003DC6  EC7A  F044         	call	_spi_get_external_tx_buffer	;wreg free
  3396  003DCA  C001  F0B7         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3397  003DCE  C002  F0B8         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3398                           
  3399                           ;main.c: 64: tx_start_addr = (uint16_t) tx_buffer;
  3400  003DD2  C0B7  F0B1         	movff	main@tx_buffer,main@tx_start_addr
  3401  003DD6  C0B8  F0B2         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3402                           
  3403                           ;main.c: 68: system_minimal_init();
  3404  003DDA  EC4E  F044         	call	_system_minimal_init	;wreg free
  3405                           
  3406                           ;main.c: 71: if(_normal_mode())
  3407  003DDE  ECE7  F03B         	call	__normal_mode	;wreg free
  3408  003DE2  0900               	iorlw	0
  3409  003DE4  B4D8               	btfsc	status,2,c
  3410  003DE6  D004               	goto	l893
  3411                           
  3412                           ;main.c: 72: {;main.c: 74: system_minimal_init_undo();
  3413  003DE8  EC46  F044         	call	_system_minimal_init_undo	;wreg free
  3414                           
  3415                           ;main.c: 75: jump_to_main_program();
  3416  003DEC  ECCC  F044         	call	_jump_to_main_program	;wreg free
  3417  003DF0                     l893:
  3418                           
  3419                           ;main.c: 76: };main.c: 80: system_full_init();
  3420  003DF0  EC16  F03C         	call	_system_full_init	;wreg free
  3421                           
  3422                           ;main.c: 84: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3423  003DF4  0E00               	movlw	0
  3424  003DF6  EC7D  F03E         	call	_SYSTEM_Initialize
  3425                           
  3426                           ;main.c: 85: USBDeviceInit();
  3427  003DFA  EC3E  F020         	call	_USBDeviceInit	;wreg free
  3428  003DFE                     l894:
  3429  003DFE  0004               	clrwdt		;# 
  3430                           
  3431                           ;main.c: 98: USBDeviceTasks();
  3432  003E00  ECA4  F01C         	call	_USBDeviceTasks	;wreg free
  3433                           
  3434                           ;main.c: 99: APP_DeviceMSDTasks();
  3435  003E04  EC22  F044         	call	_APP_DeviceMSDTasks	;wreg free
  3436                           
  3437                           ;main.c: 100: APP_DeviceCustomHIDTasks();
  3438  003E08  EC32  F031         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3439                           
  3440                           ;main.c: 104: timer_pseudo_isr();
  3441  003E0C  EC48  F041         	call	_timer_pseudo_isr	;wreg free
  3442                           
  3443                           ;main.c: 107: if(PORTDbits.RD2)
  3444  003E10  A483               	btfss	3971,2,c	;volatile
  3445  003E12  D039               	goto	l896
  3446                           
  3447                           ;main.c: 108: {;main.c: 111: bytes_transmitted = TXADDRH;
  3448  003E14  CF6A F0B3          	movff	3946,main@bytes_transmitted	;volatile
  3449  003E18  0100               	movlb	0	; () banked
  3450  003E1A  6BB4               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;main.c: 112: bytes_transmitted <<= 8;
  3454  003E1C  51B3               	movf	main@bytes_transmitted& (0+255),w,b
  3455  003E1E  6FB4               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3456  003E20  6BB3               	clrf	main@bytes_transmitted& (0+255),b
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;main.c: 113: bytes_transmitted |= TXADDRL;
  3460  003E22  506B               	movf	3947,w,c	;volatile
  3461  003E24  13B3               	iorwf	main@bytes_transmitted& (0+255),f,b
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;main.c: 114: --bytes_transmitted;
  3465  003E26  07B3               	decf	main@bytes_transmitted& (0+255),f,b
  3466  003E28  A0D8               	btfss	status,0,c
  3467  003E2A  07B4               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;main.c: 115: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3471  003E2C  EC7A  F044         	call	_spi_get_external_tx_buffer	;wreg free
  3472  003E30  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3473  003E32  0100               	movlb	0	; () banked
  3474  003E34  5FB3               	subwf	main@bytes_transmitted& (0+255),f,b
  3475  003E36  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3476  003E38  5BB4               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;main.c: 118: if(bytes_transmitted>0)
  3480  003E3A  51B3               	movf	main@bytes_transmitted& (0+255),w,b
  3481  003E3C  11B4               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3482  003E3E  B4D8               	btfsc	status,2,c
  3483  003E40  D022               	goto	l896
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;main.c: 119: {;main.c: 121: DMACON1bits.DMAEN = 0;
  3487  003E42  9088               	bcf	3976,0,c	;volatile
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;main.c: 124: api_prepare(rx_buffer, tx_buffer);
  3491  003E44  C0B5  F0A7         	movff	main@rx_buffer,api_prepare@inBuffer
  3492  003E48  C0B6  F0A8         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3493  003E4C  C0B7  F0A9         	movff	main@tx_buffer,api_prepare@outBuffer
  3494  003E50  C0B8  F0AA         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3495  003E54  ECE5  F020         	call	_api_prepare	;wreg free
  3496                           
  3497                           ;main.c: 125: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3498  003E58  C0B5  F093         	movff	main@rx_buffer,api_parse@inBuffer
  3499  003E5C  C0B6  F094         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3500  003E60  C0B3  F095         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3501  003E64  EC4F  F02C         	call	_api_parse	;wreg free
  3502                           
  3503                           ;main.c: 128: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3504  003E68  0100               	movlb	0	; () banked
  3505  003E6A  51B8               	movf	(main@tx_buffer+1)& (0+255),w,b
  3506  003E6C  6E6A               	movwf	3946,c	;volatile
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;main.c: 129: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3510  003E6E  C0B7  FF6B         	movff	main@tx_buffer,3947	;volatile
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;main.c: 132: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3514  003E72  51B6               	movf	(main@rx_buffer+1)& (0+255),w,b
  3515  003E74  6E68               	movwf	3944,c	;volatile
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;main.c: 133: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3519  003E76  C0B5  FF69         	movff	main@rx_buffer,3945	;volatile
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;main.c: 136: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3523  003E7A  0E00               	movlw	0
  3524  003E7C  6E66               	movwf	3942,c	;volatile
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;main.c: 137: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3528  003E7E  0E3F               	movlw	63
  3529  003E80  6E67               	movwf	3943,c	;volatile
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;main.c: 140: PIR3bits.SSP2IF = 0;
  3533  003E82  9EA4               	bcf	4004,7,c	;volatile
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;main.c: 142: DMACON1bits.DMAEN = 1;
  3537  003E84  8088               	bsf	3976,0,c	;volatile
  3538  003E86                     l896:
  3539                           
  3540                           ;main.c: 143: };main.c: 144: };main.c: 148: if(!os.done)
  3541                           
  3542                           ; BSR set to: 0
  3543                           
  3544                           ; BSR set to: 0
  3545  003E86  0100               	movlb	0	; () banked
  3546  003E88  51BC               	movf	(_os+3)& (0+255),w,b	;volatile
  3547  003E8A  A4D8               	btfss	status,2,c
  3548  003E8C  D7B8               	goto	l894
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;main.c: 149: {;main.c: 151: ui_run();
  3552  003E8E  EC62  F025         	call	_ui_run	;wreg free
  3553                           
  3554                           ;main.c: 156: switch(os.timeSlot&0b00000111)
  3555  003E92  D025               	goto	l898
  3556  003E94                     
  3557                           ;main.c: 159: bootloader_run(0);
  3558  003E94  0E00               	movlw	0
  3559  003E96  EC72  F03C         	call	_bootloader_run
  3560                           
  3561                           ;main.c: 160: break;
  3562  003E9A  D043               	goto	l900
  3563  003E9C                     
  3564                           ;main.c: 163: bootloader_run(1);
  3565  003E9C  0E01               	movlw	1
  3566  003E9E  EC72  F03C         	call	_bootloader_run
  3567                           
  3568                           ;main.c: 164: break;
  3569  003EA2  D03F               	goto	l900
  3570  003EA4                     
  3571                           ;main.c: 167: bootloader_run(2);
  3572  003EA4  0E02               	movlw	2
  3573  003EA6  EC72  F03C         	call	_bootloader_run
  3574                           
  3575                           ;main.c: 168: break;
  3576  003EAA  D03B               	goto	l900
  3577  003EAC                     
  3578                           ;main.c: 171: bootloader_run(3);
  3579  003EAC  0E03               	movlw	3
  3580  003EAE  EC72  F03C         	call	_bootloader_run
  3581                           
  3582                           ;main.c: 172: break;
  3583  003EB2  D037               	goto	l900
  3584  003EB4                     
  3585                           ;main.c: 175: bootloader_run(4);
  3586  003EB4  0E04               	movlw	4
  3587  003EB6  EC72  F03C         	call	_bootloader_run
  3588                           
  3589                           ;main.c: 176: break;
  3590  003EBA  D033               	goto	l900
  3591  003EBC                     
  3592                           ;main.c: 179: bootloader_run(5);
  3593  003EBC  0E05               	movlw	5
  3594  003EBE  EC72  F03C         	call	_bootloader_run
  3595                           
  3596                           ;main.c: 180: break;
  3597  003EC2  D02F               	goto	l900
  3598  003EC4                     
  3599                           ;main.c: 183: display_prepare(os.display_mode);
  3600  003EC4  0100               	movlb	0	; () banked
  3601  003EC6  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  3602  003EC8  ECB9  F02C         	call	_display_prepare
  3603                           
  3604                           ;main.c: 184: break;
  3605  003ECC  D02A               	goto	l900
  3606  003ECE                     
  3607                           ;main.c: 187: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3608  003ECE  ECD8  F044         	call	_ui_get_status	;wreg free
  3609  003ED2  0A05               	xorlw	5
  3610  003ED4  A4D8               	btfss	status,2,c
  3611  003ED6  D025               	goto	l900
  3612                           
  3613                           ;main.c: 188: {;main.c: 189: display_update();
  3614  003ED8  ECEB  F039         	call	_display_update	;wreg free
  3615                           
  3616                           ;main.c: 192: }
  3617                           
  3618                           ;main.c: 190: };main.c: 191: break;
  3619  003EDC  D022               	goto	l900
  3620  003EDE                     l898:
  3621  003EDE  0100               	movlb	0	; () banked
  3622  003EE0  51BB               	movf	(_os+2)& (0+255),w,b	;volatile
  3623  003EE2  0B07               	andlw	7
  3624  003EE4  6FAF               	movwf	??_main& (0+255),b
  3625  003EE6  6BB0               	clrf	(??_main+1)& (0+255),b
  3626                           
  3627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3628                           ; Switch size 1, requested type "space"
  3629                           ; Number of cases is 1, Range of values is 0 to 0
  3630                           ; switch strategies available:
  3631                           ; Name         Instructions Cycles
  3632                           ; simple_byte            4     3 (average)
  3633                           ;	Chosen strategy is simple_byte
  3634  003EE8  51B0               	movf	(??_main+1)& (0+255),w,b
  3635  003EEA  0A00               	xorlw	0	; case 0
  3636  003EEC  A4D8               	btfss	status,2,c
  3637  003EEE  D019               	goto	l900
  3638                           
  3639                           ; BSR set to: 0
  3640                           ; Switch size 1, requested type "space"
  3641                           ; Number of cases is 8, Range of values is 0 to 7
  3642                           ; switch strategies available:
  3643                           ; Name         Instructions Cycles
  3644                           ; simple_byte           25    13 (average)
  3645                           ;	Chosen strategy is simple_byte
  3646  003EF0  51AF               	movf	??_main& (0+255),w,b
  3647  003EF2  0A00               	xorlw	0	; case 0
  3648  003EF4  B4D8               	btfsc	status,2,c
  3649  003EF6  D7CE               	goto	l899
  3650  003EF8  0A01               	xorlw	1	; case 1
  3651  003EFA  B4D8               	btfsc	status,2,c
  3652  003EFC  D7CF               	goto	l901
  3653  003EFE  0A03               	xorlw	3	; case 2
  3654  003F00  B4D8               	btfsc	status,2,c
  3655  003F02  D7D0               	goto	l902
  3656  003F04  0A01               	xorlw	1	; case 3
  3657  003F06  B4D8               	btfsc	status,2,c
  3658  003F08  D7D1               	goto	l903
  3659  003F0A  0A07               	xorlw	7	; case 4
  3660  003F0C  B4D8               	btfsc	status,2,c
  3661  003F0E  D7D2               	goto	l904
  3662  003F10  0A01               	xorlw	1	; case 5
  3663  003F12  B4D8               	btfsc	status,2,c
  3664  003F14  D7D3               	goto	l905
  3665  003F16  0A03               	xorlw	3	; case 6
  3666  003F18  B4D8               	btfsc	status,2,c
  3667  003F1A  D7D4               	goto	l906
  3668  003F1C  0A01               	xorlw	1	; case 7
  3669  003F1E  B4D8               	btfsc	status,2,c
  3670  003F20  D7D6               	goto	l907
  3671  003F22                     l900:
  3672                           
  3673                           ;main.c: 193: os.done = 1;
  3674                           
  3675                           ; BSR set to: 0
  3676  003F22  0E01               	movlw	1
  3677  003F24  0100               	movlb	0	; () banked
  3678  003F26  6FBC               	movwf	(_os+3)& (0+255),b	;volatile
  3679                           
  3680                           ; BSR set to: 0
  3681                           
  3682                           ; BSR set to: 0
  3683  003F28  D76A               	goto	l894
  3684  003F2A                     __end_of_main:
  3685                           	opt stack 0
  3686                           tblptru	equ	0xFF8
  3687                           tblptrh	equ	0xFF7
  3688                           tblptrl	equ	0xFF6
  3689                           tablat	equ	0xFF5
  3690                           postinc0	equ	0xFEE
  3691                           wreg	equ	0xFE8
  3692                           postdec1	equ	0xFE5
  3693                           fsr1h	equ	0xFE2
  3694                           fsr1l	equ	0xFE1
  3695                           status	equ	0xFD8
  3696                           
  3697 ;; *************** function _ui_run *****************
  3698 ;; Defined at:
  3699 ;;		line 110 in file "ui.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;Total ram usage:        0 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    9
  3720 ;; This function calls:
  3721 ;;		__ui_encoder
  3722 ;;		_i2c_digipot_backlight
  3723 ;;		_i2c_digipot_reset_off
  3724 ;;		_i2c_digipot_reset_on
  3725 ;;		_i2c_display_send_init_sequence
  3726 ;;		_system_encoder_enable
  3727 ;;		_ui_init
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text1
  3734  004AC4                     __ptext1:
  3735                           	opt stack 0
  3736  004AC4                     _ui_run:
  3737                           	opt stack 21
  3738                           
  3739                           ;ui.c: 112: switch(userInterfaceStatus)
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;incstack = 0
  3743  004AC4  D06D               	goto	l1319
  3744  004AC6                     
  3745                           ;ui.c: 116: if (os.buttonCount!=0)
  3746  004AC6  0100               	movlb	0	; () banked
  3747  004AC8  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  3748  004ACA  B4D8               	btfsc	status,2,c
  3749  004ACC  0012               	return	
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;ui.c: 117: {;ui.c: 118: ui_init();
  3753  004ACE  EC18  F044         	call	_ui_init	;wreg free
  3754                           
  3755                           ;ui.c: 119: os.buttonCount = 0;
  3756  004AD2  0E00               	movlw	0
  3757  004AD4  0100               	movlb	0	; () banked
  3758  004AD6  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;ui.c: 120: };ui.c: 121: break;
  3762  004AD8  0012               	return	
  3763  004ADA                     l1323:
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;ui.c: 125: LATDbits.LD0 = 0;
  3767  004ADA  908C               	bcf	3980,0,c	;volatile
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;ui.c: 127: system_ui_inactive_count = 0;
  3771  004ADC  0E00               	movlw	0
  3772  004ADE  0101               	movlb	1	; () banked
  3773  004AE0  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3774  004AE2  0E00               	movlw	0
  3775  004AE4  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3776                           
  3777                           ;ui.c: 128: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3778  004AE6  0E02               	movlw	2
  3779  004AE8  0100               	movlb	0	; () banked
  3780  004AEA  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3781                           
  3782                           ;ui.c: 129: break;
  3783  004AEC  0012               	return	
  3784  004AEE                     
  3785                           ; BSR set to: 0
  3786                           ;ui.c: 133: i2c_digipot_reset_on();
  3787                           
  3788                           ; BSR set to: 0
  3789  004AEE  EC5F  F043         	call	_i2c_digipot_reset_on	;wreg free
  3790                           
  3791                           ;ui.c: 135: system_ui_inactive_count = 0;
  3792  004AF2  0E00               	movlw	0
  3793  004AF4  0101               	movlb	1	; () banked
  3794  004AF6  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3795  004AF8  0E00               	movlw	0
  3796  004AFA  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3797                           
  3798                           ; BSR set to: 1
  3799                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3800  004AFC  0E03               	movlw	3
  3801  004AFE  0100               	movlb	0	; () banked
  3802  004B00  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3803                           
  3804                           ;ui.c: 137: break;
  3805  004B02  0012               	return	
  3806  004B04                     
  3807                           ; BSR set to: 0
  3808                           ;ui.c: 140: ++system_ui_inactive_count;
  3809                           
  3810                           ; BSR set to: 0
  3811  004B04  0101               	movlb	1	; () banked
  3812  004B06  4B78               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3813  004B08  2B79               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3814                           
  3815                           ; BSR set to: 1
  3816                           ;ui.c: 142: if (system_ui_inactive_count>3)
  3817  004B0A  5179               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3818  004B0C  E104               	bnz	u12380
  3819  004B0E  0E04               	movlw	4
  3820  004B10  5D78               	subwf	_system_ui_inactive_count& (0+255),w,b
  3821  004B12  A0D8               	btfss	status,0,c
  3822  004B14  0012               	return	
  3823  004B16                     u12380:
  3824                           
  3825                           ; BSR set to: 1
  3826                           ;ui.c: 143: {;ui.c: 144: i2c_digipot_reset_off();
  3827  004B16  EC70  F043         	call	_i2c_digipot_reset_off	;wreg free
  3828                           
  3829                           ;ui.c: 145: system_ui_inactive_count = 0;
  3830  004B1A  0E00               	movlw	0
  3831  004B1C  0101               	movlb	1	; () banked
  3832  004B1E  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3833  004B20  0E00               	movlw	0
  3834  004B22  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3835                           
  3836                           ; BSR set to: 1
  3837                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3838  004B24  0E04               	movlw	4
  3839  004B26  0100               	movlb	0	; () banked
  3840  004B28  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;ui.c: 147: };ui.c: 148: break;
  3844  004B2A  0012               	return	
  3845  004B2C                     
  3846                           ; BSR set to: 0
  3847                           ;ui.c: 152: i2c_display_send_init_sequence();
  3848                           
  3849                           ; BSR set to: 0
  3850  004B2C  EC5B  F042         	call	_i2c_display_send_init_sequence	;wreg free
  3851                           
  3852                           ;ui.c: 154: i2c_digipot_backlight(150);
  3853  004B30  0E96               	movlw	150
  3854  004B32  ECF0  F042         	call	_i2c_digipot_backlight
  3855                           
  3856                           ;ui.c: 156: system_encoder_enable();
  3857  004B36  EC3E  F044         	call	_system_encoder_enable	;wreg free
  3858                           
  3859                           ;ui.c: 158: system_ui_inactive_count = 0;
  3860  004B3A  0E00               	movlw	0
  3861  004B3C  0101               	movlb	1	; () banked
  3862  004B3E  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3863  004B40  0E00               	movlw	0
  3864  004B42  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3865                           
  3866                           ; BSR set to: 1
  3867                           ;ui.c: 159: startup_timer = 0;
  3868  004B44  0E00               	movlw	0
  3869  004B46  6F77               	movwf	(_startup_timer+1)& (0+255),b
  3870  004B48  0E00               	movlw	0
  3871  004B4A  6F76               	movwf	_startup_timer& (0+255),b
  3872                           
  3873                           ; BSR set to: 1
  3874                           ;ui.c: 160: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3875  004B4C  0E05               	movlw	5
  3876  004B4E  0100               	movlb	0	; () banked
  3877  004B50  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3878                           
  3879                           ;ui.c: 161: break;
  3880  004B52  0012               	return	
  3881  004B54                     
  3882                           ; BSR set to: 0
  3883                           ;ui.c: 164: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  3884                           
  3885                           ; BSR set to: 0
  3886  004B54  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  3887  004B56  A4D8               	btfss	status,2,c
  3888  004B58  D00B               	goto	l1330
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;ui.c: 165: {;ui.c: 166: ++startup_timer;
  3892  004B5A  0101               	movlb	1	; () banked
  3893  004B5C  4B76               	infsnz	_startup_timer& (0+255),f,b
  3894  004B5E  2B77               	incf	(_startup_timer+1)& (0+255),f,b
  3895                           
  3896                           ; BSR set to: 1
  3897                           ;ui.c: 167: if(startup_timer==250)
  3898  004B60  0EFA               	movlw	250
  3899  004B62  1976               	xorwf	_startup_timer& (0+255),w,b
  3900  004B64  1177               	iorwf	(_startup_timer+1)& (0+255),w,b
  3901  004B66  A4D8               	btfss	status,2,c
  3902  004B68  D003               	goto	l1330
  3903                           
  3904                           ; BSR set to: 1
  3905                           ;ui.c: 168: {;ui.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3906  004B6A  0E10               	movlw	16
  3907  004B6C  0100               	movlb	0	; () banked
  3908  004B6E  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  3909  004B70                     l1330:
  3910                           
  3911                           ;ui.c: 170: };ui.c: 171: };ui.c: 172: if (os.encoderCount==0 && os.buttonCount==0)
  3912                           
  3913                           ; BSR set to: 0
  3914  004B70  0100               	movlb	0	; () banked
  3915  004B72  51B9               	movf	_os& (0+255),w,b	;volatile
  3916  004B74  A4D8               	btfss	status,2,c
  3917  004B76  D00C               	goto	l1331
  3918                           
  3919                           ; BSR set to: 0
  3920  004B78  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  3921  004B7A  A4D8               	btfss	status,2,c
  3922  004B7C  D009               	goto	l1331
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;ui.c: 173: {;ui.c: 174: if(system_ui_inactive_count<0xFFFF)
  3926  004B7E  0101               	movlb	1	; () banked
  3927  004B80  2978               	incf	_system_ui_inactive_count& (0+255),w,b
  3928  004B82  E103               	bnz	u12430
  3929  004B84  2979               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3930  004B86  B4D8               	btfsc	status,2,c
  3931  004B88  0012               	return	
  3932  004B8A                     u12430:
  3933                           
  3934                           ; BSR set to: 1
  3935                           ;ui.c: 175: ++system_ui_inactive_count;
  3936  004B8A  4B78               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3937  004B8C  2B79               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3938                           
  3939                           ; BSR set to: 1
  3940                           ;ui.c: 176: }
  3941  004B8E  0012               	return	
  3942  004B90                     l1331:
  3943                           
  3944                           ;ui.c: 177: else;ui.c: 178: {;ui.c: 179: system_ui_inactive_count = 0;
  3945                           
  3946                           ; BSR set to: 1
  3947  004B90  0E00               	movlw	0
  3948  004B92  0101               	movlb	1	; () banked
  3949  004B94  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3950  004B96  0E00               	movlw	0
  3951  004B98  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3952                           
  3953                           ; BSR set to: 1
  3954                           ;ui.c: 180: _ui_encoder();
  3955  004B9A  EC08  F02B         	call	__ui_encoder	;wreg free
  3956                           
  3957                           ;ui.c: 183: }
  3958                           
  3959                           ;ui.c: 181: };ui.c: 182: break;
  3960  004B9E  0012               	return	
  3961  004BA0                     l1319:
  3962  004BA0  0100               	movlb	0	; () banked
  3963  004BA2  51E0               	movf	_userInterfaceStatus& (0+255),w,b
  3964                           
  3965                           ; Switch size 1, requested type "space"
  3966                           ; Number of cases is 6, Range of values is 0 to 5
  3967                           ; switch strategies available:
  3968                           ; Name         Instructions Cycles
  3969                           ; simple_byte           19    10 (average)
  3970                           ;	Chosen strategy is simple_byte
  3971  004BA4  0A00               	xorlw	0	; case 0
  3972  004BA6  B4D8               	btfsc	status,2,c
  3973  004BA8  D78E               	goto	l1320
  3974  004BAA  0A01               	xorlw	1	; case 1
  3975  004BAC  B4D8               	btfsc	status,2,c
  3976  004BAE  D795               	goto	l1323
  3977  004BB0  0A03               	xorlw	3	; case 2
  3978  004BB2  B4D8               	btfsc	status,2,c
  3979  004BB4  D79C               	goto	l1324
  3980  004BB6  0A01               	xorlw	1	; case 3
  3981  004BB8  B4D8               	btfsc	status,2,c
  3982  004BBA  D7A4               	goto	l1325
  3983  004BBC  0A07               	xorlw	7	; case 4
  3984  004BBE  B4D8               	btfsc	status,2,c
  3985  004BC0  D7B5               	goto	l1327
  3986  004BC2  0A01               	xorlw	1	; case 5
  3987  004BC4  A4D8               	btfss	status,2,c
  3988  004BC6  0012               	return	
  3989  004BC8  D7C5               	goto	l1328
  3990  004BCA                     __end_of_ui_run:
  3991                           	opt stack 0
  3992                           tblptru	equ	0xFF8
  3993                           tblptrh	equ	0xFF7
  3994                           tblptrl	equ	0xFF6
  3995                           tablat	equ	0xFF5
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           postdec1	equ	0xFE5
  3999                           fsr1h	equ	0xFE2
  4000                           fsr1l	equ	0xFE1
  4001                           status	equ	0xFD8
  4002                           
  4003 ;; *************** function _system_encoder_enable *****************
  4004 ;; Defined at:
  4005 ;;		line 96 in file "os.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4023 ;;Total ram usage:        0 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_ui_run
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text2
  4033  00887C                     __ptext2:
  4034                           	opt stack 0
  4035  00887C                     _system_encoder_enable:
  4036                           	opt stack 29
  4037                           
  4038                           ;os.c: 99: INTCON3bits.INT2IF = 0;
  4039                           
  4040                           ;incstack = 0
  4041  00887C  92F0               	bcf	intcon3,1,c	;volatile
  4042                           
  4043                           ;os.c: 100: INTCON3bits.INT3IF = 0;
  4044  00887E  94F0               	bcf	intcon3,2,c	;volatile
  4045                           
  4046                           ;os.c: 103: os.encoderCount = 0;
  4047  008880  0E00               	movlw	0
  4048  008882  0100               	movlb	0	; () banked
  4049  008884  6FB9               	movwf	_os& (0+255),b	;volatile
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;os.c: 106: INTCON3bits.INT2IE = 1;
  4053  008886  88F0               	bsf	intcon3,4,c	;volatile
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;os.c: 107: INTCON3bits.INT3IE = 1;
  4057  008888  8AF0               	bsf	intcon3,5,c	;volatile
  4058                           
  4059                           ; BSR set to: 0
  4060  00888A  0012               	return		;funcret
  4061  00888C                     __end_of_system_encoder_enable:
  4062                           	opt stack 0
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           intcon3	equ	0xFF0
  4068                           postinc0	equ	0xFEE
  4069                           wreg	equ	0xFE8
  4070                           postdec1	equ	0xFE5
  4071                           fsr1h	equ	0xFE2
  4072                           fsr1l	equ	0xFE1
  4073                           status	equ	0xFD8
  4074                           
  4075 ;; *************** function _i2c_display_send_init_sequence *****************
  4076 ;; Defined at:
  4077 ;;		line 207 in file "i2c.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;		None
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;Total ram usage:        9 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    2
  4098 ;; This function calls:
  4099 ;;		__i2c_write
  4100 ;;		_i2c_set_frequency
  4101 ;; This function is called by:
  4102 ;;		_ui_run
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text3
  4107  0084B6                     __ptext3:
  4108                           	opt stack 0
  4109  0084B6                     _i2c_display_send_init_sequence:
  4110                           	opt stack 27
  4111                           
  4112                           ;i2c.c: 209: uint8_t init_sequence[9] = {;i2c.c: 210: 0x3A,;i2c.c: 212: 0b00011110,;i2c.
      +                          c: 213: 0x39,;i2c.c: 215: 0b00001100,;i2c.c: 216: 0x74,;i2c.c: 217: 0b1011100,;i2c.c: 21
      +                          8: 0x6d,;i2c.c: 219: 0x0c,;i2c.c: 220: 0x01;i2c.c: 221: };
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;incstack = 0
  4116  0084B6  EE21  F0ED         	lfsr	2,i2c_display_send_init_sequence@F6808
  4117  0084BA  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4118  0084BE  0E08               	movlw	8
  4119  0084C0                     u11641:
  4120  0084C0  CFDB FFE3          	movff	plusw2,plusw1
  4121  0084C4  06E8               	decf	wreg,f,c
  4122  0084C6  E2FC               	bc	u11641
  4123                           
  4124                           ;i2c.c: 224: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4125  0084C8  0E00               	movlw	0
  4126  0084CA  EC9D  F042         	call	_i2c_set_frequency
  4127                           
  4128                           ;i2c.c: 227: _i2c_write(0b01111000, &init_sequence[0], 9);
  4129  0084CE  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4130  0084D0  6E06               	movwf	__i2c_write@data,c
  4131  0084D2  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4132  0084D4  6E07               	movwf	__i2c_write@data+1,c
  4133  0084D6  0E09               	movlw	9
  4134  0084D8  6E08               	movwf	__i2c_write@length,c
  4135  0084DA  0E78               	movlw	120
  4136  0084DC  EC6D  F03F         	call	__i2c_write
  4137  0084E0  0012               	return		;funcret
  4138  0084E2                     __end_of_i2c_display_send_init_sequence:
  4139                           	opt stack 0
  4140                           tblptru	equ	0xFF8
  4141                           tblptrh	equ	0xFF7
  4142                           tblptrl	equ	0xFF6
  4143                           tablat	equ	0xFF5
  4144                           intcon3	equ	0xFF0
  4145                           postinc0	equ	0xFEE
  4146                           wreg	equ	0xFE8
  4147                           postdec1	equ	0xFE5
  4148                           plusw1	equ	0xFE3
  4149                           fsr1h	equ	0xFE2
  4150                           fsr1l	equ	0xFE1
  4151                           plusw2	equ	0xFDB
  4152                           status	equ	0xFD8
  4153                           
  4154 ;; *************** function _i2c_digipot_reset_on *****************
  4155 ;; Defined at:
  4156 ;;		line 310 in file "i2c.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;Total ram usage:        2 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    2
  4177 ;; This function calls:
  4178 ;;		__i2c_write
  4179 ;;		_i2c_set_frequency
  4180 ;; This function is called by:
  4181 ;;		_ui_run
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text4
  4186  0086BE                     __ptext4:
  4187                           	opt stack 0
  4188  0086BE                     _i2c_digipot_reset_on:
  4189                           	opt stack 27
  4190                           
  4191                           ;i2c.c: 312: uint8_t data_array[2];;i2c.c: 313: data_array[0] = 0x10 | 0x00;
  4192                           
  4193                           ;incstack = 0
  4194  0086BE  0E10               	movlw	16
  4195  0086C0  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4196                           
  4197                           ;i2c.c: 315: data_array[1] = 0x00;
  4198  0086C2  0E00               	movlw	0
  4199  0086C4  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4200                           
  4201                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4202  0086C6  0E02               	movlw	2
  4203  0086C8  EC9D  F042         	call	_i2c_set_frequency
  4204                           
  4205                           ;i2c.c: 320: _i2c_write(0b01011100, &data_array[0], 2);
  4206  0086CC  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4207  0086CE  6E06               	movwf	__i2c_write@data,c
  4208  0086D0  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4209  0086D2  6E07               	movwf	__i2c_write@data+1,c
  4210  0086D4  0E02               	movlw	2
  4211  0086D6  6E08               	movwf	__i2c_write@length,c
  4212  0086D8  0E5C               	movlw	92
  4213  0086DA  EC6D  F03F         	call	__i2c_write
  4214  0086DE  0012               	return		;funcret
  4215  0086E0                     __end_of_i2c_digipot_reset_on:
  4216                           	opt stack 0
  4217                           tblptru	equ	0xFF8
  4218                           tblptrh	equ	0xFF7
  4219                           tblptrl	equ	0xFF6
  4220                           tablat	equ	0xFF5
  4221                           intcon3	equ	0xFF0
  4222                           postinc0	equ	0xFEE
  4223                           wreg	equ	0xFE8
  4224                           postdec1	equ	0xFE5
  4225                           plusw1	equ	0xFE3
  4226                           fsr1h	equ	0xFE2
  4227                           fsr1l	equ	0xFE1
  4228                           plusw2	equ	0xFDB
  4229                           status	equ	0xFD8
  4230                           
  4231 ;; *************** function _i2c_digipot_reset_off *****************
  4232 ;; Defined at:
  4233 ;;		line 323 in file "i2c.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;		None
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;Total ram usage:        2 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    2
  4254 ;; This function calls:
  4255 ;;		__i2c_write
  4256 ;;		_i2c_set_frequency
  4257 ;; This function is called by:
  4258 ;;		_ui_run
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text5
  4263  0086E0                     __ptext5:
  4264                           	opt stack 0
  4265  0086E0                     _i2c_digipot_reset_off:
  4266                           	opt stack 27
  4267                           
  4268                           ;i2c.c: 325: uint8_t data_array[2];;i2c.c: 326: data_array[0] = 0x10 | 0x00;
  4269                           
  4270                           ;incstack = 0
  4271  0086E0  0E10               	movlw	16
  4272  0086E2  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4273                           
  4274                           ;i2c.c: 327: data_array[1] = 0x80;
  4275  0086E4  0E80               	movlw	128
  4276  0086E6  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4277                           
  4278                           ;i2c.c: 330: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4279  0086E8  0E02               	movlw	2
  4280  0086EA  EC9D  F042         	call	_i2c_set_frequency
  4281                           
  4282                           ;i2c.c: 332: _i2c_write(0b01011100, &data_array[0], 2);
  4283  0086EE  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4284  0086F0  6E06               	movwf	__i2c_write@data,c
  4285  0086F2  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4286  0086F4  6E07               	movwf	__i2c_write@data+1,c
  4287  0086F6  0E02               	movlw	2
  4288  0086F8  6E08               	movwf	__i2c_write@length,c
  4289  0086FA  0E5C               	movlw	92
  4290  0086FC  EC6D  F03F         	call	__i2c_write
  4291  008700  0012               	return		;funcret
  4292  008702                     __end_of_i2c_digipot_reset_off:
  4293                           	opt stack 0
  4294                           tblptru	equ	0xFF8
  4295                           tblptrh	equ	0xFF7
  4296                           tblptrl	equ	0xFF6
  4297                           tablat	equ	0xFF5
  4298                           intcon3	equ	0xFF0
  4299                           postinc0	equ	0xFEE
  4300                           wreg	equ	0xFE8
  4301                           postdec1	equ	0xFE5
  4302                           plusw1	equ	0xFE3
  4303                           fsr1h	equ	0xFE2
  4304                           fsr1l	equ	0xFE1
  4305                           plusw2	equ	0xFDB
  4306                           status	equ	0xFD8
  4307                           
  4308 ;; *************** function _i2c_digipot_backlight *****************
  4309 ;; Defined at:
  4310 ;;		line 335 in file "i2c.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  level           1    wreg     unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  level           1   10[COMRAM] unsigned char 
  4315 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4326 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;Total ram usage:        3 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    2
  4332 ;; This function calls:
  4333 ;;		__i2c_write
  4334 ;;		_i2c_set_frequency
  4335 ;; This function is called by:
  4336 ;;		_ui_run
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text6
  4341  0085E0                     __ptext6:
  4342                           	opt stack 0
  4343  0085E0                     _i2c_digipot_backlight:
  4344                           	opt stack 27
  4345                           
  4346                           ;incstack = 0
  4347                           ;i2c_digipot_backlight@level stored from wreg
  4348  0085E0  6E0B               	movwf	i2c_digipot_backlight@level,c
  4349                           
  4350                           ;i2c.c: 337: uint8_t data_array[2];;i2c.c: 338: data_array[0] = 0x00 | 0x00;
  4351  0085E2  0E00               	movlw	0
  4352  0085E4  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4353                           
  4354                           ;i2c.c: 339: data_array[1] = level>>1;
  4355  0085E6  90D8               	bcf	status,0,c
  4356  0085E8  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4357  0085EA  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4358                           
  4359                           ;i2c.c: 342: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4360  0085EC  0E02               	movlw	2
  4361  0085EE  EC9D  F042         	call	_i2c_set_frequency
  4362                           
  4363                           ;i2c.c: 344: _i2c_write(0b01011100, &data_array[0], 2);
  4364  0085F2  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4365  0085F4  6E06               	movwf	__i2c_write@data,c
  4366  0085F6  0E00               	movlw	high i2c_digipot_backlight@data_array
  4367  0085F8  6E07               	movwf	__i2c_write@data+1,c
  4368  0085FA  0E02               	movlw	2
  4369  0085FC  6E08               	movwf	__i2c_write@length,c
  4370  0085FE  0E5C               	movlw	92
  4371  008600  EC6D  F03F         	call	__i2c_write
  4372  008604  0012               	return		;funcret
  4373  008606                     __end_of_i2c_digipot_backlight:
  4374                           	opt stack 0
  4375                           tblptru	equ	0xFF8
  4376                           tblptrh	equ	0xFF7
  4377                           tblptrl	equ	0xFF6
  4378                           tablat	equ	0xFF5
  4379                           intcon3	equ	0xFF0
  4380                           postinc0	equ	0xFEE
  4381                           wreg	equ	0xFE8
  4382                           postdec1	equ	0xFE5
  4383                           plusw1	equ	0xFE3
  4384                           fsr1h	equ	0xFE2
  4385                           fsr1l	equ	0xFE1
  4386                           plusw2	equ	0xFDB
  4387                           status	equ	0xFD8
  4388                           
  4389 ;; *************** function __ui_encoder *****************
  4390 ;; Defined at:
  4391 ;;		line 22 in file "ui.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;		None
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      void 
  4398 ;; Registers used:
  4399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;Total ram usage:        0 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    8
  4412 ;; This function calls:
  4413 ;;		_i2c_eeprom_writeByte
  4414 ;;		_reboot
  4415 ;;		_system_delay_ms
  4416 ;; This function is called by:
  4417 ;;		_ui_run
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text7
  4422  005610                     __ptext7:
  4423                           	opt stack 0
  4424  005610                     __ui_encoder:
  4425                           	opt stack 21
  4426                           
  4427                           ;ui.c: 24: switch(os.display_mode)
  4428                           
  4429                           ;incstack = 0
  4430  005610  D054               	goto	l1292
  4431  005612                     
  4432                           ;ui.c: 27: if(os.buttonCount>0)
  4433  005612  0100               	movlb	0	; () banked
  4434  005614  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4435  005616  0A80               	xorlw	128
  4436  005618  0F7F               	addlw	-129
  4437  00561A  A0D8               	btfss	status,0,c
  4438  00561C  0012               	return	
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;ui.c: 28: {;ui.c: 29: os.buttonCount = 0;
  4442  00561E  0E00               	movlw	0
  4443  005620  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;ui.c: 30: };ui.c: 31: break;
  4447  005622  0012               	return	
  4448  005624                     
  4449                           ; BSR set to: 0
  4450                           ;ui.c: 34: if(os.buttonCount>0)
  4451                           
  4452                           ; BSR set to: 0
  4453  005624  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4454  005626  0A80               	xorlw	128
  4455  005628  0F7F               	addlw	-129
  4456  00562A  A0D8               	btfss	status,0,c
  4457  00562C  0012               	return	
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;ui.c: 35: {;ui.c: 36: os.buttonCount = 0;
  4461  00562E  0E00               	movlw	0
  4462  005630  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;ui.c: 37: };ui.c: 38: break;
  4466  005632  0012               	return	
  4467  005634                     
  4468                           ; BSR set to: 0
  4469                           ;ui.c: 41: if(os.buttonCount>0)
  4470                           
  4471                           ; BSR set to: 0
  4472  005634  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4473  005636  0A80               	xorlw	128
  4474  005638  0F7F               	addlw	-129
  4475  00563A  A0D8               	btfss	status,0,c
  4476  00563C  0012               	return	
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;ui.c: 42: {;ui.c: 43: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4480  00563E  0E30               	movlw	48
  4481  005640  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  4482                           
  4483                           ;ui.c: 44: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4484  005642  0E30               	movlw	48
  4485  005644  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  4486                           
  4487                           ;ui.c: 45: os.buttonCount = 0;
  4488  005646  0E00               	movlw	0
  4489  005648  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;ui.c: 46: };ui.c: 47: break;
  4493  00564A  0012               	return	
  4494  00564C                     
  4495                           ; BSR set to: 0
  4496                           ;ui.c: 50: if(os.buttonCount>0)
  4497                           
  4498                           ; BSR set to: 0
  4499  00564C  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4500  00564E  0A80               	xorlw	128
  4501  005650  0F7F               	addlw	-129
  4502  005652  A0D8               	btfss	status,0,c
  4503  005654  0012               	return	
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;ui.c: 51: {;ui.c: 52: os.buttonCount = 0;
  4507  005656  0E00               	movlw	0
  4508  005658  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;ui.c: 53: };ui.c: 54: break;
  4512  00565A  0012               	return	
  4513  00565C                     
  4514                           ; BSR set to: 0
  4515                           ;ui.c: 57: if(os.buttonCount>0)
  4516                           
  4517                           ; BSR set to: 0
  4518  00565C  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4519  00565E  0A80               	xorlw	128
  4520  005660  0F7F               	addlw	-129
  4521  005662  A0D8               	btfss	status,0,c
  4522  005664  0012               	return	
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;ui.c: 58: {;ui.c: 59: os.buttonCount = 0;
  4526  005666  0E00               	movlw	0
  4527  005668  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;ui.c: 60: };ui.c: 61: break;
  4531  00566A  0012               	return	
  4532  00566C                     
  4533                           ; BSR set to: 0
  4534                           ;ui.c: 64: if(os.buttonCount>0)
  4535                           
  4536                           ; BSR set to: 0
  4537  00566C  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4538  00566E  0A80               	xorlw	128
  4539  005670  0F7F               	addlw	-129
  4540  005672  A0D8               	btfss	status,0,c
  4541  005674  0012               	return	
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;ui.c: 65: {;ui.c: 66: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4545  005676  0E60               	movlw	96
  4546  005678  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  4547                           
  4548                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4549  00567A  0E60               	movlw	96
  4550  00567C  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  4551                           
  4552                           ;ui.c: 68: os.buttonCount = 0;
  4553  00567E  0E00               	movlw	0
  4554  005680  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;ui.c: 69: };ui.c: 70: break;
  4558  005682  0012               	return	
  4559  005684                     
  4560                           ; BSR set to: 0
  4561                           ;ui.c: 73: if(os.buttonCount>0)
  4562                           
  4563                           ; BSR set to: 0
  4564  005684  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4565  005686  0A80               	xorlw	128
  4566  005688  0F7F               	addlw	-129
  4567  00568A  A0D8               	btfss	status,0,c
  4568  00568C  0012               	return	
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;ui.c: 74: {;ui.c: 75: os.buttonCount = 0;
  4572  00568E  0E00               	movlw	0
  4573  005690  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;ui.c: 76: };ui.c: 77: break;
  4577  005692  0012               	return	
  4578  005694                     
  4579                           ; BSR set to: 0
  4580                           ;ui.c: 80: if(os.buttonCount>0)
  4581                           
  4582                           ; BSR set to: 0
  4583  005694  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4584  005696  0A80               	xorlw	128
  4585  005698  0F7F               	addlw	-129
  4586  00569A  A0D8               	btfss	status,0,c
  4587  00569C  0012               	return	
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;ui.c: 81: {;ui.c: 82: i2c_eeprom_writeByte(0x100, 0x78);
  4591  00569E  0E01               	movlw	1
  4592  0056A0  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4593  0056A2  0E00               	movlw	0
  4594  0056A4  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4595  0056A6  0E78               	movlw	120
  4596  0056A8  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4597  0056AA  EC5C  F040         	call	_i2c_eeprom_writeByte	;wreg free
  4598                           
  4599                           ;ui.c: 83: system_delay_ms(10);
  4600  0056AE  0E0A               	movlw	10
  4601  0056B0  EC29  F043         	call	_system_delay_ms
  4602                           
  4603                           ;ui.c: 84: reboot();
  4604  0056B4  ECE9  F043         	call	_reboot	;wreg free
  4605                           
  4606                           ;ui.c: 87: }
  4607                           
  4608                           ;ui.c: 85: };ui.c: 86: break;
  4609  0056B8  0012               	return	
  4610  0056BA                     l1292:
  4611  0056BA  0100               	movlb	0	; () banked
  4612  0056BC  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  4613                           
  4614                           ; Switch size 1, requested type "space"
  4615                           ; Number of cases is 8, Range of values is 0 to 112
  4616                           ; switch strategies available:
  4617                           ; Name         Instructions Cycles
  4618                           ; simple_byte           25    13 (average)
  4619                           ;	Chosen strategy is simple_byte
  4620  0056BE  0A00               	xorlw	0	; case 0
  4621  0056C0  B4D8               	btfsc	status,2,c
  4622  0056C2  D7A7               	goto	l1293
  4623  0056C4  0A10               	xorlw	16	; case 16
  4624  0056C6  B4D8               	btfsc	status,2,c
  4625  0056C8  D7AD               	goto	l1296
  4626  0056CA  0A30               	xorlw	48	; case 32
  4627  0056CC  B4D8               	btfsc	status,2,c
  4628  0056CE  D7B2               	goto	l1298
  4629  0056D0  0A10               	xorlw	16	; case 48
  4630  0056D2  B4D8               	btfsc	status,2,c
  4631  0056D4  D7BB               	goto	l1300
  4632  0056D6  0A70               	xorlw	112	; case 64
  4633  0056D8  B4D8               	btfsc	status,2,c
  4634  0056DA  D7C8               	goto	l1304
  4635  0056DC  0A10               	xorlw	16	; case 80
  4636  0056DE  B4D8               	btfsc	status,2,c
  4637  0056E0  D7BD               	goto	l1302
  4638  0056E2  0A30               	xorlw	48	; case 96
  4639  0056E4  B4D8               	btfsc	status,2,c
  4640  0056E6  D7CE               	goto	l1306
  4641  0056E8  0A10               	xorlw	16	; case 112
  4642  0056EA  A4D8               	btfss	status,2,c
  4643  0056EC  0012               	return	
  4644  0056EE  D7D2               	goto	l1308
  4645  0056F0                     __end_of__ui_encoder:
  4646                           	opt stack 0
  4647                           tblptru	equ	0xFF8
  4648                           tblptrh	equ	0xFF7
  4649                           tblptrl	equ	0xFF6
  4650                           tablat	equ	0xFF5
  4651                           intcon3	equ	0xFF0
  4652                           postinc0	equ	0xFEE
  4653                           wreg	equ	0xFE8
  4654                           postdec1	equ	0xFE5
  4655                           plusw1	equ	0xFE3
  4656                           fsr1h	equ	0xFE2
  4657                           fsr1l	equ	0xFE1
  4658                           plusw2	equ	0xFDB
  4659                           status	equ	0xFD8
  4660                           
  4661 ;; *************** function _timer_pseudo_isr *****************
  4662 ;; Defined at:
  4663 ;;		line 19 in file "os.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;		None
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;Total ram usage:        0 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; This function calls:
  4684 ;;		Nothing
  4685 ;; This function is called by:
  4686 ;;		_main
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text8
  4691  008290                     __ptext8:
  4692                           	opt stack 0
  4693  008290                     _timer_pseudo_isr:
  4694                           	opt stack 30
  4695                           
  4696                           ;os.c: 22: if(INTCONbits.T0IF==0)
  4697                           
  4698                           ;incstack = 0
  4699  008290  A4F2               	btfss	intcon,2,c	;volatile
  4700  008292  0012               	return	
  4701                           
  4702                           ;os.c: 25: };os.c: 29: TMR0H = 0xD1;
  4703                           
  4704                           ;os.c: 23: {;os.c: 24: return;
  4705  008294  0ED1               	movlw	209
  4706  008296  6ED7               	movwf	4055,c	;volatile
  4707                           
  4708                           ;os.c: 30: TMR0L = 0x20;
  4709  008298  0E20               	movlw	32
  4710  00829A  6ED6               	movwf	4054,c	;volatile
  4711                           
  4712                           ;os.c: 31: ++os.timeSlot;
  4713  00829C  0100               	movlb	0	; () banked
  4714  00829E  2BBB               	incf	(_os+2)& (0+255),f,b	;volatile
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;os.c: 33: os.done = 0;
  4718  0082A0  0E00               	movlw	0
  4719  0082A2  6FBC               	movwf	(_os+3)& (0+255),b	;volatile
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;os.c: 34: INTCONbits.T0IF = 0;
  4723  0082A4  94F2               	bcf	intcon,2,c	;volatile
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;os.c: 37: if(INTCON3bits.INT1IF)
  4727  0082A6  A0F0               	btfss	intcon3,0,c	;volatile
  4728  0082A8  D002               	goto	l1083
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;os.c: 38: {;os.c: 39: ++os.buttonCount;
  4732  0082AA  2BBA               	incf	(_os+1)& (0+255),f,b	;volatile
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;os.c: 40: INTCON3bits.INT1IF = 0;
  4736  0082AC  90F0               	bcf	intcon3,0,c	;volatile
  4737  0082AE                     l1083:
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;os.c: 41: };os.c: 44: if(INTCON3bits.INT2IF)
  4741                           
  4742                           ; BSR set to: 0
  4743  0082AE  A2F0               	btfss	intcon3,1,c	;volatile
  4744  0082B0  D003               	goto	l1084
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;os.c: 45: {;os.c: 46: if(!PORTBbits.RB6)
  4748  0082B2  AC81               	btfss	3969,6,c	;volatile
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;os.c: 47: {;os.c: 48: --os.encoderCount;
  4752  0082B4  07B9               	decf	_os& (0+255),f,b	;volatile
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;os.c: 49: };os.c: 50: INTCON3bits.INT2IF = 0;
  4756                           
  4757                           ; BSR set to: 0
  4758  0082B6  92F0               	bcf	intcon3,1,c	;volatile
  4759  0082B8                     l1084:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;os.c: 51: };os.c: 52: if(INTCON3bits.INT3IF)
  4763                           
  4764                           ; BSR set to: 0
  4765  0082B8  A4F0               	btfss	intcon3,2,c	;volatile
  4766  0082BA  0012               	return	
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;os.c: 53: {;os.c: 54: if(!PORTBbits.RB7)
  4770  0082BC  AE81               	btfss	3969,7,c	;volatile
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;os.c: 55: {;os.c: 56: ++os.encoderCount;
  4774  0082BE  2BB9               	incf	_os& (0+255),f,b	;volatile
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;os.c: 57: };os.c: 58: INTCON3bits.INT3IF = 0;
  4778                           
  4779                           ; BSR set to: 0
  4780  0082C0  94F0               	bcf	intcon3,2,c	;volatile
  4781  0082C2  0012               	return	
  4782  0082C4                     __end_of_timer_pseudo_isr:
  4783                           	opt stack 0
  4784                           tblptru	equ	0xFF8
  4785                           tblptrh	equ	0xFF7
  4786                           tblptrl	equ	0xFF6
  4787                           tablat	equ	0xFF5
  4788                           intcon	equ	0xFF2
  4789                           intcon3	equ	0xFF0
  4790                           postinc0	equ	0xFEE
  4791                           wreg	equ	0xFE8
  4792                           postdec1	equ	0xFE5
  4793                           plusw1	equ	0xFE3
  4794                           fsr1h	equ	0xFE2
  4795                           fsr1l	equ	0xFE1
  4796                           plusw2	equ	0xFDB
  4797                           status	equ	0xFD8
  4798                           
  4799 ;; *************** function _system_minimal_init_undo *****************
  4800 ;; Defined at:
  4801 ;;		line 154 in file "os.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;		None
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;		None
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      void 
  4808 ;; Registers used:
  4809 ;;		wreg, status,2, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4819 ;;Total ram usage:        0 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    1
  4822 ;; This function calls:
  4823 ;;		_i2c_reset
  4824 ;; This function is called by:
  4825 ;;		_main
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text9
  4830  00888C                     __ptext9:
  4831                           	opt stack 0
  4832  00888C                     _system_minimal_init_undo:
  4833                           	opt stack 29
  4834                           
  4835                           ;os.c: 157: i2c_reset();
  4836                           
  4837                           ;incstack = 0
  4838  00888C  EC66  F044         	call	_i2c_reset	;wreg free
  4839                           
  4840                           ;os.c: 160: TRISAbits.TRISA0 = 1;
  4841  008890  8092               	bsf	3986,0,c	;volatile
  4842                           
  4843                           ;os.c: 161: ANCON0bits.PCFG0 = 0;
  4844  008892  010F               	movlb	15	; () banked
  4845  008894  9148               	bcf	72,0,b	;volatile
  4846                           
  4847                           ; BSR set to: 15
  4848                           ;os.c: 164: LATCbits.LC2 = 0;
  4849  008896  948B               	bcf	3979,2,c	;volatile
  4850                           
  4851                           ; BSR set to: 15
  4852                           ;os.c: 165: TRISCbits.TRISC2 = 1;
  4853  008898  8494               	bsf	3988,2,c	;volatile
  4854                           
  4855                           ; BSR set to: 15
  4856  00889A  0012               	return		;funcret
  4857  00889C                     __end_of_system_minimal_init_undo:
  4858                           	opt stack 0
  4859                           tblptru	equ	0xFF8
  4860                           tblptrh	equ	0xFF7
  4861                           tblptrl	equ	0xFF6
  4862                           tablat	equ	0xFF5
  4863                           intcon	equ	0xFF2
  4864                           intcon3	equ	0xFF0
  4865                           postinc0	equ	0xFEE
  4866                           wreg	equ	0xFE8
  4867                           postdec1	equ	0xFE5
  4868                           plusw1	equ	0xFE3
  4869                           fsr1h	equ	0xFE2
  4870                           fsr1l	equ	0xFE1
  4871                           plusw2	equ	0xFDB
  4872                           status	equ	0xFD8
  4873                           
  4874 ;; *************** function _i2c_reset *****************
  4875 ;; Defined at:
  4876 ;;		line 110 in file "i2c.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;		None
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;		None
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4894 ;;Total ram usage:        0 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_system_minimal_init_undo
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text10
  4904  0088CC                     __ptext10:
  4905                           	opt stack 0
  4906  0088CC                     _i2c_reset:
  4907                           	opt stack 29
  4908                           
  4909                           ;i2c.c: 112: SSP1STATbits.SMP = 0;
  4910                           
  4911                           ; BSR set to: 15
  4912                           ;incstack = 0
  4913  0088CC  9EC7               	bcf	4039,7,c	;volatile
  4914                           
  4915                           ;i2c.c: 113: SSP1STATbits.CKE = 0;
  4916  0088CE  9CC7               	bcf	4039,6,c	;volatile
  4917                           
  4918                           ;i2c.c: 114: SSP1CON1 = 0x00;
  4919  0088D0  0E00               	movlw	0
  4920  0088D2  6EC6               	movwf	4038,c	;volatile
  4921                           
  4922                           ;i2c.c: 115: SSP1ADD = 0x00;
  4923  0088D4  0E00               	movlw	0
  4924  0088D6  6EC8               	movwf	4040,c	;volatile
  4925  0088D8  0012               	return		;funcret
  4926  0088DA                     __end_of_i2c_reset:
  4927                           	opt stack 0
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           intcon	equ	0xFF2
  4933                           intcon3	equ	0xFF0
  4934                           postinc0	equ	0xFEE
  4935                           wreg	equ	0xFE8
  4936                           postdec1	equ	0xFE5
  4937                           plusw1	equ	0xFE3
  4938                           fsr1h	equ	0xFE2
  4939                           fsr1l	equ	0xFE1
  4940                           plusw2	equ	0xFDB
  4941                           status	equ	0xFD8
  4942                           
  4943 ;; *************** function _system_minimal_init *****************
  4944 ;; Defined at:
  4945 ;;		line 139 in file "os.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0, cstack
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4963 ;;Total ram usage:        0 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    2
  4966 ;; This function calls:
  4967 ;;		_i2c_init
  4968 ;; This function is called by:
  4969 ;;		_main
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text11
  4974  00889C                     __ptext11:
  4975                           	opt stack 0
  4976  00889C                     _system_minimal_init:
  4977                           	opt stack 28
  4978                           
  4979                           ;os.c: 142: TRISCbits.TRISC2 = 0;
  4980                           
  4981                           ;incstack = 0
  4982  00889C  9494               	bcf	3988,2,c	;volatile
  4983                           
  4984                           ;os.c: 143: LATCbits.LC2 = 1;
  4985  00889E  848B               	bsf	3979,2,c	;volatile
  4986                           
  4987                           ;os.c: 146: TRISAbits.TRISA0 = 1;
  4988  0088A0  8092               	bsf	3986,0,c	;volatile
  4989                           
  4990                           ;os.c: 147: ANCON0bits.PCFG0 = 1;
  4991  0088A2  010F               	movlb	15	; () banked
  4992  0088A4  8148               	bsf	72,0,b	;volatile
  4993                           
  4994                           ; BSR set to: 15
  4995                           ;os.c: 150: i2c_init();
  4996  0088A6  EC74  F044         	call	_i2c_init	;wreg free
  4997  0088AA  0012               	return		;funcret
  4998  0088AC                     __end_of_system_minimal_init:
  4999                           	opt stack 0
  5000                           tblptru	equ	0xFF8
  5001                           tblptrh	equ	0xFF7
  5002                           tblptrl	equ	0xFF6
  5003                           tablat	equ	0xFF5
  5004                           intcon	equ	0xFF2
  5005                           intcon3	equ	0xFF0
  5006                           postinc0	equ	0xFEE
  5007                           wreg	equ	0xFE8
  5008                           postdec1	equ	0xFE5
  5009                           plusw1	equ	0xFE3
  5010                           fsr1h	equ	0xFE2
  5011                           fsr1l	equ	0xFE1
  5012                           plusw2	equ	0xFDB
  5013                           status	equ	0xFD8
  5014                           
  5015 ;; *************** function _i2c_init *****************
  5016 ;; Defined at:
  5017 ;;		line 102 in file "i2c.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;		None
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, status,0, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5035 ;;Total ram usage:        0 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    1
  5038 ;; This function calls:
  5039 ;;		__i2c_open_1
  5040 ;;		_i2c_set_frequency
  5041 ;; This function is called by:
  5042 ;;		_system_minimal_init
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text12
  5047  0088E8                     __ptext12:
  5048                           	opt stack 0
  5049  0088E8                     _i2c_init:
  5050                           	opt stack 28
  5051                           
  5052                           ;i2c.c: 105: _i2c_open_1();
  5053                           
  5054                           ;incstack = 0
  5055  0088E8  ECF6  F043         	call	__i2c_open_1	;wreg free
  5056                           
  5057                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5058  0088EC  0E00               	movlw	0
  5059  0088EE  EC9D  F042         	call	_i2c_set_frequency
  5060  0088F2  0012               	return		;funcret
  5061  0088F4                     __end_of_i2c_init:
  5062                           	opt stack 0
  5063                           tblptru	equ	0xFF8
  5064                           tblptrh	equ	0xFF7
  5065                           tblptrl	equ	0xFF6
  5066                           tablat	equ	0xFF5
  5067                           intcon	equ	0xFF2
  5068                           intcon3	equ	0xFF0
  5069                           postinc0	equ	0xFEE
  5070                           wreg	equ	0xFE8
  5071                           postdec1	equ	0xFE5
  5072                           plusw1	equ	0xFE3
  5073                           fsr1h	equ	0xFE2
  5074                           fsr1l	equ	0xFE1
  5075                           plusw2	equ	0xFDB
  5076                           status	equ	0xFD8
  5077                           
  5078 ;; *************** function __i2c_open_1 *****************
  5079 ;; Defined at:
  5080 ;;		line 36 in file "i2c.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;		None
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      void 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5098 ;;Total ram usage:        0 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_i2c_init
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text13
  5108  0087EC                     __ptext13:
  5109                           	opt stack 0
  5110  0087EC                     __i2c_open_1:
  5111                           	opt stack 28
  5112                           
  5113                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  5114                           
  5115                           ;incstack = 0
  5116  0087EC  9EC7               	bcf	4039,7,c	;volatile
  5117                           
  5118                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  5119  0087EE  9CC7               	bcf	4039,6,c	;volatile
  5120                           
  5121                           ;i2c.c: 40: SSP1ADD = 29;
  5122  0087F0  0E1D               	movlw	29
  5123  0087F2  6EC8               	movwf	4040,c	;volatile
  5124                           
  5125                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  5126  0087F4  9EC6               	bcf	4038,7,c	;volatile
  5127                           
  5128                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  5129  0087F6  9CC6               	bcf	4038,6,c	;volatile
  5130                           
  5131                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  5132  0087F8  50C6               	movf	4038,w,c	;volatile
  5133  0087FA  0BF0               	andlw	-16
  5134  0087FC  0908               	iorlw	8
  5135  0087FE  6EC6               	movwf	4038,c	;volatile
  5136                           
  5137                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  5138  008800  8AC6               	bsf	4038,5,c	;volatile
  5139  008802  0012               	return		;funcret
  5140  008804                     __end_of__i2c_open_1:
  5141                           	opt stack 0
  5142                           tblptru	equ	0xFF8
  5143                           tblptrh	equ	0xFF7
  5144                           tblptrl	equ	0xFF6
  5145                           tablat	equ	0xFF5
  5146                           intcon	equ	0xFF2
  5147                           intcon3	equ	0xFF0
  5148                           postinc0	equ	0xFEE
  5149                           wreg	equ	0xFE8
  5150                           postdec1	equ	0xFE5
  5151                           plusw1	equ	0xFE3
  5152                           fsr1h	equ	0xFE2
  5153                           fsr1l	equ	0xFE1
  5154                           plusw2	equ	0xFDB
  5155                           status	equ	0xFD8
  5156                           
  5157 ;; *************** function _system_full_init *****************
  5158 ;; Defined at:
  5159 ;;		line 169 in file "os.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      void 
  5166 ;; Registers used:
  5167 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;Total ram usage:        0 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    7
  5180 ;; This function calls:
  5181 ;;		__system_encoder_init
  5182 ;;		__system_timer0_init
  5183 ;;		_fat_init
  5184 ;;		_flash_init
  5185 ;;		_ui_init
  5186 ;; This function is called by:
  5187 ;;		_main
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           	psect	text14
  5192  00782C                     __ptext14:
  5193                           	opt stack 0
  5194  00782C                     _system_full_init:
  5195                           	opt stack 23
  5196                           
  5197                           ;os.c: 176: TRISDbits.TRISD0 = 0;
  5198                           
  5199                           ;incstack = 0
  5200  00782C  9095               	bcf	3989,0,c	;volatile
  5201                           
  5202                           ;os.c: 177: LATDbits.LD0 = 0;
  5203  00782E  908C               	bcf	3980,0,c	;volatile
  5204                           
  5205                           ;os.c: 180: TRISDbits.TRISD3 = 0;
  5206  007830  9695               	bcf	3989,3,c	;volatile
  5207                           
  5208                           ;os.c: 181: LATDbits.LD3 = 0;
  5209  007832  968C               	bcf	3980,3,c	;volatile
  5210                           
  5211                           ;os.c: 184: TRISDbits.TRISD1 = 0;
  5212  007834  9295               	bcf	3989,1,c	;volatile
  5213                           
  5214                           ;os.c: 185: LATDbits.LD1 = 0;
  5215  007836  928C               	bcf	3980,1,c	;volatile
  5216                           
  5217                           ;os.c: 188: TRISBbits.TRISB1 = 0;
  5218  007838  9293               	bcf	3987,1,c	;volatile
  5219                           
  5220                           ;os.c: 189: LATBbits.LB1 = 0;
  5221  00783A  928A               	bcf	3978,1,c	;volatile
  5222                           
  5223                           ;os.c: 192: TRISBbits.TRISB2 = 0;
  5224  00783C  9493               	bcf	3987,2,c	;volatile
  5225                           
  5226                           ;os.c: 193: LATBbits.LB2 = 0;
  5227  00783E  948A               	bcf	3978,2,c	;volatile
  5228                           
  5229                           ;os.c: 194: TRISBbits.TRISB3 = 0;
  5230  007840  9693               	bcf	3987,3,c	;volatile
  5231                           
  5232                           ;os.c: 195: LATBbits.LB3 = 0;
  5233  007842  968A               	bcf	3978,3,c	;volatile
  5234                           
  5235                           ;os.c: 198: TRISDbits.TRISD6 = 1;
  5236  007844  8C95               	bsf	3989,6,c	;volatile
  5237                           
  5238                           ;os.c: 199: TRISDbits.TRISD4 = 0;
  5239  007846  9895               	bcf	3989,4,c	;volatile
  5240                           
  5241                           ;os.c: 200: TRISDbits.TRISD5 = 0;
  5242  007848  9A95               	bcf	3989,5,c	;volatile
  5243                           
  5244                           ;os.c: 201: TRISDbits.TRISD7 = 0;
  5245  00784A  9E95               	bcf	3989,7,c	;volatile
  5246                           
  5247                           ;os.c: 202: LATDbits.LD7 = 1;
  5248  00784C  8E8C               	bsf	3980,7,c	;volatile
  5249                           
  5250                           ;os.c: 203: TRISDbits.TRISD2 = 1;
  5251  00784E  8495               	bsf	3989,2,c	;volatile
  5252                           
  5253                           ;os.c: 206: TRISCbits.TRISC7 = 0;
  5254  007850  9E94               	bcf	3988,7,c	;volatile
  5255                           
  5256                           ;os.c: 207: LATCbits.LC7 = 0;
  5257  007852  9E8B               	bcf	3979,7,c	;volatile
  5258                           
  5259                           ;os.c: 210: TRISEbits.TRISE2 = 0;
  5260  007854  9496               	bcf	3990,2,c	;volatile
  5261                           
  5262                           ;os.c: 211: LATEbits.LE2 = 1;
  5263  007856  848D               	bsf	3981,2,c	;volatile
  5264                           
  5265                           ;os.c: 212: TRISEbits.TRISE1 = 0;
  5266  007858  9296               	bcf	3990,1,c	;volatile
  5267                           
  5268                           ;os.c: 213: LATEbits.LE1 = 1;
  5269  00785A  828D               	bsf	3981,1,c	;volatile
  5270                           
  5271                           ;os.c: 214: TRISEbits.TRISE0 = 0;
  5272  00785C  9096               	bcf	3990,0,c	;volatile
  5273                           
  5274                           ;os.c: 215: LATEbits.LE0 = 1;
  5275  00785E  808D               	bsf	3981,0,c	;volatile
  5276                           
  5277                           ;os.c: 216: TRISAbits.TRISA5 = 0;
  5278  007860  9A92               	bcf	3986,5,c	;volatile
  5279                           
  5280                           ;os.c: 217: LATAbits.LA5 = 1;
  5281  007862  8A89               	bsf	3977,5,c	;volatile
  5282                           
  5283                           ;os.c: 220: TRISBbits.TRISB7 = 1;
  5284  007864  8E93               	bsf	3987,7,c	;volatile
  5285                           
  5286                           ;os.c: 221: TRISBbits.TRISB6 = 1;
  5287  007866  8C93               	bsf	3987,6,c	;volatile
  5288                           
  5289                           ;os.c: 224: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5290  007868  0E10               	movlw	16
  5291  00786A  0100               	movlb	0	; () banked
  5292  00786C  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  5293                           
  5294                           ;os.c: 225: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5295  00786E  0E00               	movlw	0
  5296  007870  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;os.c: 228: flash_init();
  5300  007872  ECCF  F043         	call	_flash_init	;wreg free
  5301                           
  5302                           ;os.c: 231: fat_init();
  5303  007876  EC56  F044         	call	_fat_init	;wreg free
  5304                           
  5305                           ;os.c: 234: _system_encoder_init();
  5306  00787A  ECD8  F040         	call	__system_encoder_init	;wreg free
  5307                           
  5308                           ;os.c: 237: ui_init();
  5309  00787E  EC18  F044         	call	_ui_init	;wreg free
  5310                           
  5311                           ;os.c: 240: _system_timer0_init();
  5312  007882  ECA3  F043         	call	__system_timer0_init	;wreg free
  5313  007886  0012               	return		;funcret
  5314  007888                     __end_of_system_full_init:
  5315                           	opt stack 0
  5316                           tblptru	equ	0xFF8
  5317                           tblptrh	equ	0xFF7
  5318                           tblptrl	equ	0xFF6
  5319                           tablat	equ	0xFF5
  5320                           intcon	equ	0xFF2
  5321                           intcon3	equ	0xFF0
  5322                           postinc0	equ	0xFEE
  5323                           wreg	equ	0xFE8
  5324                           postdec1	equ	0xFE5
  5325                           plusw1	equ	0xFE3
  5326                           fsr1h	equ	0xFE2
  5327                           fsr1l	equ	0xFE1
  5328                           plusw2	equ	0xFDB
  5329                           status	equ	0xFD8
  5330                           
  5331 ;; *************** function _ui_init *****************
  5332 ;; Defined at:
  5333 ;;		line 101 in file "ui.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;		None
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;		None
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      void 
  5340 ;; Registers used:
  5341 ;;		wreg, status,2
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5351 ;;Total ram usage:        0 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_system_full_init
  5357 ;;		_ui_run
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text15
  5362  008830                     __ptext15:
  5363                           	opt stack 0
  5364  008830                     _ui_init:
  5365                           	opt stack 29
  5366                           
  5367                           ;ui.c: 103: system_ui_inactive_count = 0;
  5368                           
  5369                           ;incstack = 0
  5370  008830  0E00               	movlw	0
  5371  008832  0101               	movlb	1	; () banked
  5372  008834  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5373  008836  0E00               	movlw	0
  5374  008838  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  5375                           
  5376                           ; BSR set to: 1
  5377                           ;ui.c: 105: LATCbits.LC2 = 1;
  5378  00883A  848B               	bsf	3979,2,c	;volatile
  5379                           
  5380                           ;ui.c: 106: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5381  00883C  0E01               	movlw	1
  5382  00883E  0100               	movlb	0	; () banked
  5383  008840  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  5384                           
  5385                           ; BSR set to: 0
  5386  008842  0012               	return		;funcret
  5387  008844                     __end_of_ui_init:
  5388                           	opt stack 0
  5389                           tblptru	equ	0xFF8
  5390                           tblptrh	equ	0xFF7
  5391                           tblptrl	equ	0xFF6
  5392                           tablat	equ	0xFF5
  5393                           intcon	equ	0xFF2
  5394                           intcon3	equ	0xFF0
  5395                           postinc0	equ	0xFEE
  5396                           wreg	equ	0xFE8
  5397                           postdec1	equ	0xFE5
  5398                           plusw1	equ	0xFE3
  5399                           fsr1h	equ	0xFE2
  5400                           fsr1l	equ	0xFE1
  5401                           plusw2	equ	0xFDB
  5402                           status	equ	0xFD8
  5403                           
  5404 ;; *************** function _flash_init *****************
  5405 ;; Defined at:
  5406 ;;		line 337 in file "flash.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    4
  5427 ;; This function calls:
  5428 ;;		__flash_set_page_size
  5429 ;;		_spi_init
  5430 ;;		_spi_set_configuration
  5431 ;; This function is called by:
  5432 ;;		_system_full_init
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text16
  5437  00879E                     __ptext16:
  5438                           	opt stack 0
  5439  00879E                     _flash_init:
  5440                           	opt stack 25
  5441                           
  5442                           ;flash.c: 340: spi_init(SPI_CONFIGURATION_INTERNAL);
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;incstack = 0
  5446  00879E  0E00               	movlw	0
  5447  0087A0  EC9C  F040         	call	_spi_init
  5448                           
  5449                           ;flash.c: 341: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5450  0087A4  0E00               	movlw	0
  5451  0087A6  EC59  F024         	call	_spi_set_configuration
  5452                           
  5453                           ;flash.c: 344: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5454  0087AA  0E00               	movlw	0
  5455  0087AC  ECE1  F037         	call	__flash_set_page_size
  5456                           
  5457                           ;flash.c: 347: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5458  0087B0  0E01               	movlw	1
  5459  0087B2  EC59  F024         	call	_spi_set_configuration
  5460  0087B6  0012               	return		;funcret
  5461  0087B8                     __end_of_flash_init:
  5462                           	opt stack 0
  5463                           tblptru	equ	0xFF8
  5464                           tblptrh	equ	0xFF7
  5465                           tblptrl	equ	0xFF6
  5466                           tablat	equ	0xFF5
  5467                           intcon	equ	0xFF2
  5468                           intcon3	equ	0xFF0
  5469                           postinc0	equ	0xFEE
  5470                           wreg	equ	0xFE8
  5471                           postdec1	equ	0xFE5
  5472                           plusw1	equ	0xFE3
  5473                           fsr1h	equ	0xFE2
  5474                           fsr1l	equ	0xFE1
  5475                           plusw2	equ	0xFDB
  5476                           status	equ	0xFD8
  5477                           
  5478 ;; *************** function _spi_init *****************
  5479 ;; Defined at:
  5480 ;;		line 122 in file "spi.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  configuratio    1    wreg     enum E6749
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  configuratio    1    3[COMRAM] enum E6749
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5498 ;;Total ram usage:        1 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    1
  5501 ;; This function calls:
  5502 ;;		__spi_init
  5503 ;; This function is called by:
  5504 ;;		_flash_init
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text17
  5509  008138                     __ptext17:
  5510                           	opt stack 0
  5511  008138                     _spi_init:
  5512                           	opt stack 27
  5513                           
  5514                           ;incstack = 0
  5515                           ;spi_init@configuration stored from wreg
  5516  008138  6E04               	movwf	spi_init@configuration,c
  5517                           
  5518                           ;spi.c: 124: switch(configuration)
  5519  00813A  D012               	goto	l2870
  5520  00813C                     
  5521                           ;spi.c: 127: _spi_init(config_internal);
  5522  00813C  C165  F001         	movff	_config_internal,__spi_init@details
  5523  008140  C166  F002         	movff	_config_internal+1,__spi_init@details+1
  5524  008144  C167  F003         	movff	_config_internal+2,__spi_init@details+2
  5525  008148  ECF5  F040         	call	__spi_init	;wreg free
  5526                           
  5527                           ;spi.c: 128: break;
  5528  00814C  D010               	goto	l2872
  5529  00814E                     
  5530                           ;spi.c: 131: _spi_init(config_external);
  5531  00814E  C162  F001         	movff	_config_external,__spi_init@details
  5532  008152  C163  F002         	movff	_config_external+1,__spi_init@details+1
  5533  008156  C164  F003         	movff	_config_external+2,__spi_init@details+2
  5534  00815A  ECF5  F040         	call	__spi_init	;wreg free
  5535                           
  5536                           ;spi.c: 133: }
  5537                           
  5538                           ;spi.c: 132: break;
  5539  00815E  D007               	goto	l2872
  5540  008160                     l2870:
  5541  008160  5004               	movf	spi_init@configuration,w,c
  5542                           
  5543                           ; Switch size 1, requested type "space"
  5544                           ; Number of cases is 2, Range of values is 0 to 1
  5545                           ; switch strategies available:
  5546                           ; Name         Instructions Cycles
  5547                           ; simple_byte            7     4 (average)
  5548                           ;	Chosen strategy is simple_byte
  5549  008162  0A00               	xorlw	0	; case 0
  5550  008164  B4D8               	btfsc	status,2,c
  5551  008166  D7EA               	goto	l2871
  5552  008168  0A01               	xorlw	1	; case 1
  5553  00816A  B4D8               	btfsc	status,2,c
  5554  00816C  D7F0               	goto	l2873
  5555  00816E                     l2872:
  5556                           
  5557                           ;spi.c: 135: active_configuration = configuration;
  5558  00816E  C004  F186         	movff	spi_init@configuration,_active_configuration
  5559  008172  0012               	return		;funcret
  5560  008174                     __end_of_spi_init:
  5561                           	opt stack 0
  5562                           tblptru	equ	0xFF8
  5563                           tblptrh	equ	0xFF7
  5564                           tblptrl	equ	0xFF6
  5565                           tablat	equ	0xFF5
  5566                           intcon	equ	0xFF2
  5567                           intcon3	equ	0xFF0
  5568                           postinc0	equ	0xFEE
  5569                           wreg	equ	0xFE8
  5570                           postdec1	equ	0xFE5
  5571                           plusw1	equ	0xFE3
  5572                           fsr1h	equ	0xFE2
  5573                           fsr1l	equ	0xFE1
  5574                           plusw2	equ	0xFDB
  5575                           status	equ	0xFD8
  5576                           
  5577 ;; *************** function __spi_init *****************
  5578 ;; Defined at:
  5579 ;;		line 25 in file "spi.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  details         3    0[COMRAM] struct .
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5593 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5596 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5597 ;;Total ram usage:        3 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_spi_init
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text18
  5607  0081EA                     __ptext18:
  5608                           	opt stack 0
  5609  0081EA                     __spi_init:
  5610                           	opt stack 27
  5611                           
  5612                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5613                           
  5614                           ;incstack = 0
  5615  0081EA  0E55               	movlw	85
  5616  0081EC  6EA7               	movwf	4007,c	;volsfr
  5617  0081EE  0EAA               	movlw	170
  5618  0081F0  6EA7               	movwf	4007,c	;volsfr
  5619  0081F2  010E               	movlb	14	; () banked
  5620  0081F4  91BF               	bcf	191,0,b	;volatile
  5621                           
  5622                           ;spi.c: 32: RPINR21 = 23;
  5623  0081F6  0E17               	movlw	23
  5624  0081F8  6FFC               	movwf	252,b	;volatile
  5625                           
  5626                           ;spi.c: 33: RPOR21 = 10;
  5627  0081FA  0E0A               	movlw	10
  5628  0081FC  6FD5               	movwf	213,b	;volatile
  5629                           
  5630                           ;spi.c: 35: RPOR22 = 11;
  5631  0081FE  0E0B               	movlw	11
  5632  008200  6FD6               	movwf	214,b	;volatile
  5633                           
  5634                           ;spi.c: 36: RPINR22 = 22;
  5635  008202  0E16               	movlw	22
  5636  008204  6FFD               	movwf	253,b	;volatile
  5637                           
  5638                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5639  008206  0E55               	movlw	85
  5640  008208  6EA7               	movwf	4007,c	;volsfr
  5641  00820A  0EAA               	movlw	170
  5642  00820C  6EA7               	movwf	4007,c	;volsfr
  5643                           
  5644                           ; BSR set to: 14
  5645  00820E  81BF               	bsf	191,0,b	;volatile
  5646                           
  5647                           ; BSR set to: 14
  5648                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5649  008210  8E73               	bsf	3955,7,c	;volatile
  5650                           
  5651                           ; BSR set to: 14
  5652                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5653  008212  8C73               	bsf	3955,6,c	;volatile
  5654                           
  5655                           ; BSR set to: 14
  5656                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5657  008214  9872               	bcf	3954,4,c	;volatile
  5658                           
  5659                           ; BSR set to: 14
  5660                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5661  008216  9072               	bcf	3954,0,c	;volatile
  5662  008218  9272               	bcf	3954,1,c	;volatile
  5663  00821A  9472               	bcf	3954,2,c	;volatile
  5664  00821C  9672               	bcf	3954,3,c	;volatile
  5665                           
  5666                           ; BSR set to: 14
  5667                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5668  00821E  8A72               	bsf	3954,5,c	;volatile
  5669                           
  5670                           ; BSR set to: 14
  5671  008220  0012               	return		;funcret
  5672  008222                     __end_of__spi_init:
  5673                           	opt stack 0
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           intcon	equ	0xFF2
  5679                           intcon3	equ	0xFF0
  5680                           postinc0	equ	0xFEE
  5681                           wreg	equ	0xFE8
  5682                           postdec1	equ	0xFE5
  5683                           plusw1	equ	0xFE3
  5684                           fsr1h	equ	0xFE2
  5685                           fsr1l	equ	0xFE1
  5686                           plusw2	equ	0xFDB
  5687                           status	equ	0xFD8
  5688                           
  5689 ;; *************** function __flash_set_page_size *****************
  5690 ;; Defined at:
  5691 ;;		line 95 in file "flash.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  size            1    wreg     enum E6886
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;  size            1   23[COMRAM] enum E6886
  5696 ;;  command         4   19[COMRAM] unsigned char [4]
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      void 
  5699 ;; Registers used:
  5700 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5707 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5709 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5710 ;;Total ram usage:        5 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:    3
  5713 ;; This function calls:
  5714 ;;		__flash_is_busy
  5715 ;;		_memcpy
  5716 ;;		_spi_tx
  5717 ;; This function is called by:
  5718 ;;		_flash_init
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text19
  5723  006FC2                     __ptext19:
  5724                           	opt stack 0
  5725  006FC2                     __flash_set_page_size:
  5726                           	opt stack 25
  5727                           
  5728                           ; BSR set to: 14
  5729                           ;incstack = 0
  5730                           ;__flash_set_page_size@size stored from wreg
  5731  006FC2  6E18               	movwf	__flash_set_page_size@size,c
  5732  006FC4                     
  5733                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5734  006FC4  EC92  F043         	call	__flash_is_busy	;wreg free
  5735  006FC8  0900               	iorlw	0
  5736  006FCA  A4D8               	btfss	status,2,c
  5737  006FCC  D7FB               	goto	l13710
  5738                           
  5739                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5740  006FCE  5018               	movf	__flash_set_page_size@size,w,c
  5741  006FD0  A4D8               	btfss	status,2,c
  5742  006FD2  D013               	goto	l1741
  5743                           
  5744                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5745  006FD4  0E14               	movlw	low __flash_set_page_size@command
  5746  006FD6  6E01               	movwf	memcpy@d1,c
  5747  006FD8  0E00               	movlw	high __flash_set_page_size@command
  5748  006FDA  6E02               	movwf	memcpy@d1+1,c
  5749  006FDC  0EC4               	movlw	low _flash_command_pagesize_512
  5750  006FDE  6E03               	movwf	memcpy@s1,c
  5751  006FE0  0E8F               	movlw	high _flash_command_pagesize_512
  5752  006FE2  6E04               	movwf	memcpy@s1+1,c
  5753  006FE4  5003               	movf	memcpy@s1,w,c
  5754  006FE6  1004               	iorwf	memcpy@s1+1,w,c
  5755  006FE8  A4D8               	btfss	status,2,c
  5756  006FEA  0E00               	movlw	low (__mediumconst shr (0+16))
  5757  006FEC  6E05               	movwf	memcpy@s1+2,c
  5758  006FEE  0E00               	movlw	0
  5759  006FF0  6E07               	movwf	memcpy@n+1,c
  5760  006FF2  0E04               	movlw	4
  5761  006FF4  6E06               	movwf	memcpy@n,c
  5762  006FF6  ECF2  F03A         	call	_memcpy	;wreg free
  5763  006FFA                     l1741:
  5764                           
  5765                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5766  006FFA  0418               	decf	__flash_set_page_size@size,w,c
  5767  006FFC  A4D8               	btfss	status,2,c
  5768  006FFE  D013               	goto	l1742
  5769                           
  5770                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5771  007000  0E14               	movlw	low __flash_set_page_size@command
  5772  007002  6E01               	movwf	memcpy@d1,c
  5773  007004  0E00               	movlw	high __flash_set_page_size@command
  5774  007006  6E02               	movwf	memcpy@d1+1,c
  5775  007008  0EC0               	movlw	low _flash_command_pagesize_528
  5776  00700A  6E03               	movwf	memcpy@s1,c
  5777  00700C  0E8F               	movlw	high _flash_command_pagesize_528
  5778  00700E  6E04               	movwf	memcpy@s1+1,c
  5779  007010  5003               	movf	memcpy@s1,w,c
  5780  007012  1004               	iorwf	memcpy@s1+1,w,c
  5781  007014  A4D8               	btfss	status,2,c
  5782  007016  0E00               	movlw	low (__mediumconst shr (0+16))
  5783  007018  6E05               	movwf	memcpy@s1+2,c
  5784  00701A  0E00               	movlw	0
  5785  00701C  6E07               	movwf	memcpy@n+1,c
  5786  00701E  0E04               	movlw	4
  5787  007020  6E06               	movwf	memcpy@n,c
  5788  007022  ECF2  F03A         	call	_memcpy	;wreg free
  5789  007026                     l1742:
  5790                           
  5791                           ;flash.c: 109: spi_tx(command, 4);
  5792  007026  0E14               	movlw	low __flash_set_page_size@command
  5793  007028  6E01               	movwf	spi_tx@data,c
  5794  00702A  0E00               	movlw	high __flash_set_page_size@command
  5795  00702C  6E02               	movwf	spi_tx@data+1,c
  5796  00702E  0E00               	movlw	0
  5797  007030  6E04               	movwf	spi_tx@length+1,c
  5798  007032  0E04               	movlw	4
  5799  007034  6E03               	movwf	spi_tx@length,c
  5800  007036  EC4F  F03D         	call	_spi_tx	;wreg free
  5801  00703A  0012               	return		;funcret
  5802  00703C                     __end_of__flash_set_page_size:
  5803                           	opt stack 0
  5804                           tblptru	equ	0xFF8
  5805                           tblptrh	equ	0xFF7
  5806                           tblptrl	equ	0xFF6
  5807                           tablat	equ	0xFF5
  5808                           intcon	equ	0xFF2
  5809                           intcon3	equ	0xFF0
  5810                           postinc0	equ	0xFEE
  5811                           wreg	equ	0xFE8
  5812                           postdec1	equ	0xFE5
  5813                           plusw1	equ	0xFE3
  5814                           fsr1h	equ	0xFE2
  5815                           fsr1l	equ	0xFE1
  5816                           plusw2	equ	0xFDB
  5817                           status	equ	0xFD8
  5818                           
  5819 ;; *************** function _fat_init *****************
  5820 ;; Defined at:
  5821 ;;		line 1187 in file "fat16.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;		None
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;		None
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  1    wreg      void 
  5828 ;; Registers used:
  5829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5839 ;;Total ram usage:        0 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    6
  5842 ;; This function calls:
  5843 ;;		_fat_format
  5844 ;;		_fat_get_format_status
  5845 ;; This function is called by:
  5846 ;;		_system_full_init
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text20
  5851  0088AC                     __ptext20:
  5852                           	opt stack 0
  5853  0088AC                     _fat_init:
  5854                           	opt stack 23
  5855                           
  5856                           ;fat16.c: 1190: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5857                           
  5858                           ;incstack = 0
  5859  0088AC  ECDA  F031         	call	_fat_get_format_status	;wreg free
  5860  0088B0  0900               	iorlw	0
  5861  0088B2  A4D8               	btfss	status,2,c
  5862  0088B4  0012               	return	
  5863                           
  5864                           ;fat16.c: 1191: {;fat16.c: 1192: fat_format();
  5865  0088B6  EC46  F015         	call	_fat_format	;wreg free
  5866  0088BA  0012               	return	
  5867  0088BC                     __end_of_fat_init:
  5868                           	opt stack 0
  5869                           tblptru	equ	0xFF8
  5870                           tblptrh	equ	0xFF7
  5871                           tblptrl	equ	0xFF6
  5872                           tablat	equ	0xFF5
  5873                           intcon	equ	0xFF2
  5874                           intcon3	equ	0xFF0
  5875                           postinc0	equ	0xFEE
  5876                           wreg	equ	0xFE8
  5877                           postdec1	equ	0xFE5
  5878                           plusw1	equ	0xFE3
  5879                           fsr1h	equ	0xFE2
  5880                           fsr1l	equ	0xFE1
  5881                           plusw2	equ	0xFDB
  5882                           status	equ	0xFD8
  5883                           
  5884 ;; *************** function _fat_get_format_status *****************
  5885 ;; Defined at:
  5886 ;;		line 1099 in file "fat16.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;		None
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;  cntr            2   45[COMRAM] unsigned int 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      enum E6872
  5893 ;; Registers used:
  5894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5903 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5904 ;;Total ram usage:        4 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    5
  5907 ;; This function calls:
  5908 ;;		__get_fbr
  5909 ;;		__get_mbr
  5910 ;;		_flash_page_read
  5911 ;; This function is called by:
  5912 ;;		_fat_init
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text21
  5917  0063B4                     __ptext21:
  5918                           	opt stack 0
  5919  0063B4                     _fat_get_format_status:
  5920                           	opt stack 23
  5921                           
  5922                           ;fat16.c: 1101: uint16_t cntr;;fat16.c: 1104: flash_page_read(0, buffer);
  5923                           
  5924                           ;incstack = 0
  5925  0063B4  0E00               	movlw	0
  5926  0063B6  6E29               	movwf	flash_page_read@page+1,c
  5927  0063B8  0E00               	movlw	0
  5928  0063BA  6E28               	movwf	flash_page_read@page,c
  5929  0063BC  0E80               	movlw	low _buffer
  5930  0063BE  6E2A               	movwf	flash_page_read@data,c
  5931  0063C0  0E03               	movlw	high _buffer
  5932  0063C2  6E2B               	movwf	flash_page_read@data+1,c
  5933  0063C4  ECC8  F041         	call	_flash_page_read	;wreg free
  5934                           
  5935                           ;fat16.c: 1105: for(cntr=0; cntr<512; ++cntr)
  5936  0063C8  0E00               	movlw	0
  5937  0063CA  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5938  0063CC  0E00               	movlw	0
  5939  0063CE  6E2E               	movwf	fat_get_format_status@cntr,c
  5940  0063D0                     l13738:
  5941  0063D0  0E02               	movlw	2
  5942  0063D2  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5943  0063D4  B0D8               	btfsc	status,0,c
  5944  0063D6  D016               	goto	u10840
  5945                           
  5946                           ;fat16.c: 1106: {;fat16.c: 1107: if(buffer[cntr] != _get_mbr(cntr))
  5947  0063D8  0E80               	movlw	low _buffer
  5948  0063DA  242E               	addwf	fat_get_format_status@cntr,w,c
  5949  0063DC  6ED9               	movwf	fsr2l,c
  5950  0063DE  0E03               	movlw	high _buffer
  5951  0063E0  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5952  0063E2  6EDA               	movwf	fsr2h,c
  5953  0063E4  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5954  0063E8  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5955  0063EC  EC22  F02D         	call	__get_mbr	;wreg free
  5956  0063F0  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5957  0063F2  50DE               	movf	postinc2,w,c
  5958  0063F4  182D               	xorwf	??_fat_get_format_status+1,w,c
  5959  0063F6  B4D8               	btfsc	status,2,c
  5960  0063F8  D002               	goto	l2207
  5961                           
  5962                           ;fat16.c: 1108: {;fat16.c: 1109: return DRIVE_NOT_FORMATED;
  5963  0063FA  0E00               	movlw	0
  5964  0063FC  0012               	return	
  5965  0063FE                     l2207:
  5966  0063FE  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5967  006400  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5968  006402  D7E6               	goto	l13738
  5969  006404                     u10840:
  5970                           
  5971                           ;fat16.c: 1110: };fat16.c: 1111: };fat16.c: 1114: flash_page_read(1, buffer);
  5972  006404  0E00               	movlw	0
  5973  006406  6E29               	movwf	flash_page_read@page+1,c
  5974  006408  0E01               	movlw	1
  5975  00640A  6E28               	movwf	flash_page_read@page,c
  5976  00640C  0E80               	movlw	low _buffer
  5977  00640E  6E2A               	movwf	flash_page_read@data,c
  5978  006410  0E03               	movlw	high _buffer
  5979  006412  6E2B               	movwf	flash_page_read@data+1,c
  5980  006414  ECC8  F041         	call	_flash_page_read	;wreg free
  5981                           
  5982                           ;fat16.c: 1115: for(cntr=0; cntr<512; ++cntr)
  5983  006418  0E00               	movlw	0
  5984  00641A  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5985  00641C  0E00               	movlw	0
  5986  00641E  6E2E               	movwf	fat_get_format_status@cntr,c
  5987  006420                     l13756:
  5988  006420  0E02               	movlw	2
  5989  006422  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5990  006424  B0D8               	btfsc	status,0,c
  5991  006426  D016               	goto	u10870
  5992                           
  5993                           ;fat16.c: 1116: {;fat16.c: 1117: if(buffer[cntr] != _get_fbr(cntr))
  5994  006428  0E80               	movlw	low _buffer
  5995  00642A  242E               	addwf	fat_get_format_status@cntr,w,c
  5996  00642C  6ED9               	movwf	fsr2l,c
  5997  00642E  0E03               	movlw	high _buffer
  5998  006430  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5999  006432  6EDA               	movwf	fsr2h,c
  6000  006434  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6001  006438  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6002  00643C  EC66  F00D         	call	__get_fbr	;wreg free
  6003  006440  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6004  006442  50DE               	movf	postinc2,w,c
  6005  006444  182D               	xorwf	??_fat_get_format_status+1,w,c
  6006  006446  B4D8               	btfsc	status,2,c
  6007  006448  D002               	goto	l2211
  6008                           
  6009                           ;fat16.c: 1118: {;fat16.c: 1119: return DRIVE_NOT_FORMATED;
  6010  00644A  0E00               	movlw	0
  6011  00644C  0012               	return	
  6012  00644E                     l2211:
  6013  00644E  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6014  006450  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6015  006452  D7E6               	goto	l13756
  6016  006454                     u10870:
  6017                           
  6018                           ;fat16.c: 1120: };fat16.c: 1121: };fat16.c: 1124: return DRIVE_FORMATED;
  6019  006454  0E01               	movlw	1
  6020  006456  0012               	return	
  6021  006458                     __end_of_fat_get_format_status:
  6022                           	opt stack 0
  6023                           tblptru	equ	0xFF8
  6024                           tblptrh	equ	0xFF7
  6025                           tblptrl	equ	0xFF6
  6026                           tablat	equ	0xFF5
  6027                           intcon	equ	0xFF2
  6028                           intcon3	equ	0xFF0
  6029                           postinc0	equ	0xFEE
  6030                           wreg	equ	0xFE8
  6031                           postdec1	equ	0xFE5
  6032                           plusw1	equ	0xFE3
  6033                           fsr1h	equ	0xFE2
  6034                           fsr1l	equ	0xFE1
  6035                           postinc2	equ	0xFDE
  6036                           plusw2	equ	0xFDB
  6037                           fsr2h	equ	0xFDA
  6038                           fsr2l	equ	0xFD9
  6039                           status	equ	0xFD8
  6040                           
  6041 ;; *************** function __system_timer0_init *****************
  6042 ;; Defined at:
  6043 ;;		line 112 in file "os.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;		None
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;		None
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		wreg, status,2
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;Total ram usage:        0 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_system_full_init
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text22
  6071  008746                     __ptext22:
  6072                           	opt stack 0
  6073  008746                     __system_timer0_init:
  6074                           	opt stack 29
  6075                           
  6076                           ;os.c: 115: T0CONbits.T0CS = 0;
  6077                           
  6078                           ;incstack = 0
  6079  008746  9AD5               	bcf	4053,5,c	;volatile
  6080                           
  6081                           ;os.c: 117: T0CONbits.T08BIT = 0;
  6082  008748  9CD5               	bcf	4053,6,c	;volatile
  6083                           
  6084                           ;os.c: 119: T0CONbits.T0PS2 = 0;
  6085  00874A  94D5               	bcf	4053,2,c	;volatile
  6086                           
  6087                           ;os.c: 120: T0CONbits.T0PS1 = 1;
  6088  00874C  82D5               	bsf	4053,1,c	;volatile
  6089                           
  6090                           ;os.c: 121: T0CONbits.T0PS0 = 0;
  6091  00874E  90D5               	bcf	4053,0,c	;volatile
  6092                           
  6093                           ;os.c: 123: T0CONbits.PSA = 0;
  6094  008750  96D5               	bcf	4053,3,c	;volatile
  6095                           
  6096                           ;os.c: 125: TMR0H = 0xD1;
  6097  008752  0ED1               	movlw	209
  6098  008754  6ED7               	movwf	4055,c	;volatile
  6099                           
  6100                           ;os.c: 126: TMR0L = 0x20;
  6101  008756  0E20               	movlw	32
  6102  008758  6ED6               	movwf	4054,c	;volatile
  6103                           
  6104                           ;os.c: 128: T0CONbits.TMR0ON = 1;
  6105  00875A  8ED5               	bsf	4053,7,c	;volatile
  6106                           
  6107                           ;os.c: 132: INTCONbits.TMR0IF = 0;
  6108  00875C  94F2               	bcf	intcon,2,c	;volatile
  6109                           
  6110                           ;os.c: 135: os.timeSlot = 0;
  6111  00875E  0E00               	movlw	0
  6112  008760  0100               	movlb	0	; () banked
  6113  008762  6FBB               	movwf	(_os+2)& (0+255),b	;volatile
  6114                           
  6115                           ; BSR set to: 0
  6116  008764  0012               	return		;funcret
  6117  008766                     __end_of__system_timer0_init:
  6118                           	opt stack 0
  6119                           tblptru	equ	0xFF8
  6120                           tblptrh	equ	0xFF7
  6121                           tblptrl	equ	0xFF6
  6122                           tablat	equ	0xFF5
  6123                           intcon	equ	0xFF2
  6124                           intcon3	equ	0xFF0
  6125                           postinc0	equ	0xFEE
  6126                           wreg	equ	0xFE8
  6127                           postdec1	equ	0xFE5
  6128                           plusw1	equ	0xFE3
  6129                           fsr1h	equ	0xFE2
  6130                           fsr1l	equ	0xFE1
  6131                           postinc2	equ	0xFDE
  6132                           plusw2	equ	0xFDB
  6133                           fsr2h	equ	0xFDA
  6134                           fsr2l	equ	0xFD9
  6135                           status	equ	0xFD8
  6136                           
  6137 ;; *************** function __system_encoder_init *****************
  6138 ;; Defined at:
  6139 ;;		line 73 in file "os.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6157 ;;Total ram usage:        0 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_system_full_init
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           	psect	text23
  6167  0081B0                     __ptext23:
  6168                           	opt stack 0
  6169  0081B0                     __system_encoder_init:
  6170                           	opt stack 29
  6171                           
  6172                           ;os.c: 75: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;incstack = 0
  6176  0081B0  0E55               	movlw	85
  6177  0081B2  6EA7               	movwf	4007,c	;volsfr
  6178  0081B4  0EAA               	movlw	170
  6179  0081B6  6EA7               	movwf	4007,c	;volsfr
  6180  0081B8  010E               	movlb	14	; () banked
  6181  0081BA  91BF               	bcf	191,0,b	;volatile
  6182                           
  6183                           ;os.c: 76: RPINR1 = 0;
  6184  0081BC  0E00               	movlw	0
  6185  0081BE  6FE1               	movwf	225,b	;volatile
  6186                           
  6187                           ;os.c: 77: RPINR3 = 9;
  6188  0081C0  0E09               	movlw	9
  6189  0081C2  6FE3               	movwf	227,b	;volatile
  6190                           
  6191                           ;os.c: 78: RPINR2 = 10;
  6192  0081C4  0E0A               	movlw	10
  6193  0081C6  6FE2               	movwf	226,b	;volatile
  6194                           
  6195                           ;os.c: 79: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  6196  0081C8  0E55               	movlw	85
  6197  0081CA  6EA7               	movwf	4007,c	;volsfr
  6198  0081CC  0EAA               	movlw	170
  6199  0081CE  6EA7               	movwf	4007,c	;volsfr
  6200                           
  6201                           ; BSR set to: 14
  6202  0081D0  91BF               	bcf	191,0,b	;volatile
  6203                           
  6204                           ; BSR set to: 14
  6205                           ;os.c: 82: INTCON2bits.INTEDG1 = 0;
  6206  0081D2  9AF1               	bcf	intcon2,5,c	;volatile
  6207                           
  6208                           ; BSR set to: 14
  6209                           ;os.c: 83: INTCON3bits.INT1IF = 0;
  6210  0081D4  90F0               	bcf	intcon3,0,c	;volatile
  6211                           
  6212                           ; BSR set to: 14
  6213                           ;os.c: 85: INTCON2bits.INTEDG2 = 1;
  6214  0081D6  88F1               	bsf	intcon2,4,c	;volatile
  6215                           
  6216                           ; BSR set to: 14
  6217                           ;os.c: 86: INTCON3bits.INT2IF = 0;
  6218  0081D8  92F0               	bcf	intcon3,1,c	;volatile
  6219                           
  6220                           ; BSR set to: 14
  6221                           ;os.c: 88: INTCON2bits.INTEDG3 = 1;
  6222  0081DA  86F1               	bsf	intcon2,3,c	;volatile
  6223                           
  6224                           ; BSR set to: 14
  6225                           ;os.c: 89: INTCON3bits.INT3IF = 0;
  6226  0081DC  94F0               	bcf	intcon3,2,c	;volatile
  6227                           
  6228                           ;os.c: 91: os.encoderCount = 0;
  6229  0081DE  0E00               	movlw	0
  6230  0081E0  0100               	movlb	0	; () banked
  6231  0081E2  6FB9               	movwf	_os& (0+255),b	;volatile
  6232                           
  6233                           ;os.c: 92: os.buttonCount = 0;
  6234  0081E4  0E00               	movlw	0
  6235  0081E6  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  6236                           
  6237                           ; BSR set to: 0
  6238  0081E8  0012               	return		;funcret
  6239  0081EA                     __end_of__system_encoder_init:
  6240                           	opt stack 0
  6241                           tblptru	equ	0xFF8
  6242                           tblptrh	equ	0xFF7
  6243                           tblptrl	equ	0xFF6
  6244                           tablat	equ	0xFF5
  6245                           intcon	equ	0xFF2
  6246                           intcon2	equ	0xFF1
  6247                           intcon3	equ	0xFF0
  6248                           postinc0	equ	0xFEE
  6249                           wreg	equ	0xFE8
  6250                           postdec1	equ	0xFE5
  6251                           plusw1	equ	0xFE3
  6252                           fsr1h	equ	0xFE2
  6253                           fsr1l	equ	0xFE1
  6254                           postinc2	equ	0xFDE
  6255                           plusw2	equ	0xFDB
  6256                           fsr2h	equ	0xFDA
  6257                           fsr2l	equ	0xFD9
  6258                           status	equ	0xFD8
  6259                           
  6260 ;; *************** function _spi_get_external_tx_buffer *****************
  6261 ;; Defined at:
  6262 ;;		line 75 in file "spi.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;		None
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;		None
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  2    0[COMRAM] PTR unsigned char 
  6269 ;; Registers used:
  6270 ;;		wreg, status,2, status,0
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6280 ;;Total ram usage:        2 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; This function calls:
  6283 ;;		Nothing
  6284 ;; This function is called by:
  6285 ;;		_main
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text24
  6290  0088F4                     __ptext24:
  6291                           	opt stack 0
  6292  0088F4                     _spi_get_external_tx_buffer:
  6293                           	opt stack 30
  6294                           
  6295                           ;spi.c: 77: return _spi_external_tx_buffer;
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;incstack = 0
  6299  0088F4  0E50               	movlw	low __spi_external_tx_buffer
  6300  0088F6  6E01               	movwf	?_spi_get_external_tx_buffer,c
  6301  0088F8  0E02               	movlw	high __spi_external_tx_buffer
  6302  0088FA  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  6303  0088FC  0012               	return	
  6304  0088FE                     __end_of_spi_get_external_tx_buffer:
  6305                           	opt stack 0
  6306                           tblptru	equ	0xFF8
  6307                           tblptrh	equ	0xFF7
  6308                           tblptrl	equ	0xFF6
  6309                           tablat	equ	0xFF5
  6310                           intcon	equ	0xFF2
  6311                           intcon2	equ	0xFF1
  6312                           intcon3	equ	0xFF0
  6313                           postinc0	equ	0xFEE
  6314                           wreg	equ	0xFE8
  6315                           postdec1	equ	0xFE5
  6316                           plusw1	equ	0xFE3
  6317                           fsr1h	equ	0xFE2
  6318                           fsr1l	equ	0xFE1
  6319                           postinc2	equ	0xFDE
  6320                           plusw2	equ	0xFDB
  6321                           fsr2h	equ	0xFDA
  6322                           fsr2l	equ	0xFD9
  6323                           status	equ	0xFD8
  6324                           
  6325 ;; *************** function _spi_get_external_rx_buffer *****************
  6326 ;; Defined at:
  6327 ;;		line 80 in file "spi.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  2    0[COMRAM] PTR unsigned char 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6345 ;;Total ram usage:        2 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_main
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text25
  6355  0088FE                     __ptext25:
  6356                           	opt stack 0
  6357  0088FE                     _spi_get_external_rx_buffer:
  6358                           	opt stack 30
  6359                           
  6360                           ;spi.c: 82: return _spi_external_rx_buffer;
  6361                           
  6362                           ;incstack = 0
  6363  0088FE  0E00               	movlw	low __spi_external_rx_buffer
  6364  008900  6E01               	movwf	?_spi_get_external_rx_buffer,c
  6365  008902  0E03               	movlw	high __spi_external_rx_buffer
  6366  008904  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  6367  008906  0012               	return	
  6368  008908                     __end_of_spi_get_external_rx_buffer:
  6369                           	opt stack 0
  6370                           tblptru	equ	0xFF8
  6371                           tblptrh	equ	0xFF7
  6372                           tblptrl	equ	0xFF6
  6373                           tablat	equ	0xFF5
  6374                           intcon	equ	0xFF2
  6375                           intcon2	equ	0xFF1
  6376                           intcon3	equ	0xFF0
  6377                           postinc0	equ	0xFEE
  6378                           wreg	equ	0xFE8
  6379                           postdec1	equ	0xFE5
  6380                           plusw1	equ	0xFE3
  6381                           fsr1h	equ	0xFE2
  6382                           fsr1l	equ	0xFE1
  6383                           postinc2	equ	0xFDE
  6384                           plusw2	equ	0xFDB
  6385                           fsr2h	equ	0xFDA
  6386                           fsr2l	equ	0xFD9
  6387                           status	equ	0xFD8
  6388                           
  6389 ;; *************** function _jump_to_main_program *****************
  6390 ;; Defined at:
  6391 ;;		line 248 in file "os.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;		None
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		None
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6409 ;;Total ram usage:        0 bytes
  6410 ;; Hardware stack levels used:    1
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_main
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text26
  6419  008998                     __ptext26:
  6420                           	opt stack 0
  6421  008998                     _jump_to_main_program:
  6422                           	opt stack 30
  6423                           
  6424                           ;incstack = 0
  6425  008998  EF00 F048          	goto	36864	; ;# 
  6426  00899C  0012               	return		;funcret
  6427  00899E                     __end_of_jump_to_main_program:
  6428                           	opt stack 0
  6429                           tblptru	equ	0xFF8
  6430                           tblptrh	equ	0xFF7
  6431                           tblptrl	equ	0xFF6
  6432                           tablat	equ	0xFF5
  6433                           intcon	equ	0xFF2
  6434                           intcon2	equ	0xFF1
  6435                           intcon3	equ	0xFF0
  6436                           postinc0	equ	0xFEE
  6437                           wreg	equ	0xFE8
  6438                           postdec1	equ	0xFE5
  6439                           plusw1	equ	0xFE3
  6440                           fsr1h	equ	0xFE2
  6441                           fsr1l	equ	0xFE1
  6442                           postinc2	equ	0xFDE
  6443                           plusw2	equ	0xFDB
  6444                           fsr2h	equ	0xFDA
  6445                           fsr2l	equ	0xFD9
  6446                           status	equ	0xFD8
  6447                           
  6448 ;; *************** function _bootloader_run *****************
  6449 ;; Defined at:
  6450 ;;		line 63 in file "bootloader.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  timeslot        1    wreg     unsigned char 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  timeslot        1   93[COMRAM] unsigned char 
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1    wreg      void 
  6457 ;; Registers used:
  6458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6467 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6468 ;;Total ram usage:        1 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:    8
  6471 ;; This function calls:
  6472 ;;		__bootloader_find_file
  6473 ;;		__bootloader_program
  6474 ;;		__bootloader_verify_file
  6475 ;; This function is called by:
  6476 ;;		_main
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text27
  6481  0078E4                     __ptext27:
  6482                           	opt stack 0
  6483  0078E4                     _bootloader_run:
  6484                           	opt stack 22
  6485                           
  6486                           ;incstack = 0
  6487                           ;bootloader_run@timeslot stored from wreg
  6488  0078E4  6E5E               	movwf	bootloader_run@timeslot,c
  6489                           
  6490                           ;bootloader.c: 65: switch(os.bootloader_mode)
  6491  0078E6  D015               	goto	l2347
  6492  0078E8                     
  6493                           ;bootloader.c: 68: if(timeslot==0)
  6494  0078E8  505E               	movf	bootloader_run@timeslot,w,c
  6495  0078EA  A4D8               	btfss	status,2,c
  6496  0078EC  0012               	return	
  6497                           
  6498                           ;bootloader.c: 69: {;bootloader.c: 70: _bootloader_find_file();
  6499  0078EE  EC87  F031         	call	__bootloader_find_file	;wreg free
  6500                           
  6501                           ;bootloader.c: 71: };bootloader.c: 72: break;
  6502  0078F2  0012               	return	
  6503  0078F4                     
  6504                           ;bootloader.c: 75: if(timeslot==0)
  6505  0078F4  505E               	movf	bootloader_run@timeslot,w,c
  6506  0078F6  A4D8               	btfss	status,2,c
  6507  0078F8  0012               	return	
  6508                           
  6509                           ;bootloader.c: 76: {;bootloader.c: 77: _bootloader_find_file();
  6510  0078FA  EC87  F031         	call	__bootloader_find_file	;wreg free
  6511                           
  6512                           ;bootloader.c: 78: };bootloader.c: 79: break;
  6513  0078FE  0012               	return	
  6514  007900                     
  6515                           ;bootloader.c: 82: _bootloader_verify_file();
  6516  007900  ECBE  F007         	call	__bootloader_verify_file	;wreg free
  6517                           
  6518                           ;bootloader.c: 89: break;
  6519                           
  6520                           ;bootloader.c: 88: case BOOTLOADER_MODE_CHECK_FAILED:
  6521                           
  6522                           ;bootloader.c: 86: break;
  6523                           
  6524                           ;bootloader.c: 85: case BOOTLOADER_MODE_CHECK_COMPLETE:
  6525                           
  6526                           ;bootloader.c: 83: break;
  6527  007904  0012               	return	
  6528  007906                     
  6529                           ;bootloader.c: 92: if(timeslot==0)
  6530  007906  505E               	movf	bootloader_run@timeslot,w,c
  6531  007908  A4D8               	btfss	status,2,c
  6532  00790A  0012               	return	
  6533                           
  6534                           ;bootloader.c: 93: {;bootloader.c: 94: _bootloader_program();
  6535  00790C  EC2D  F004         	call	__bootloader_program	;wreg free
  6536                           
  6537                           ;bootloader.c: 100: }
  6538                           
  6539                           ;bootloader.c: 99: break;
  6540                           
  6541                           ;bootloader.c: 98: case BOOTLOADER_MODE_DONE:
  6542                           
  6543                           ;bootloader.c: 95: };bootloader.c: 96: break;
  6544  007910  0012               	return	
  6545  007912                     l2347:
  6546  007912  0100               	movlb	0	; () banked
  6547  007914  51BD               	movf	(_os+4)& (0+255),w,b	;volatile
  6548                           
  6549                           ; Switch size 1, requested type "space"
  6550                           ; Number of cases is 7, Range of values is 16 to 112
  6551                           ; switch strategies available:
  6552                           ; Name         Instructions Cycles
  6553                           ; simple_byte           22    12 (average)
  6554                           ;	Chosen strategy is simple_byte
  6555  007916  0A10               	xorlw	16	; case 16
  6556  007918  B4D8               	btfsc	status,2,c
  6557  00791A  D7E6               	goto	l2348
  6558  00791C  0A30               	xorlw	48	; case 32
  6559  00791E  B4D8               	btfsc	status,2,c
  6560  007920  D7E9               	goto	l2351
  6561  007922  0A10               	xorlw	16	; case 48
  6562  007924  B4D8               	btfsc	status,2,c
  6563  007926  D7EC               	goto	l2353
  6564  007928  0A70               	xorlw	112	; case 64
  6565  00792A  B4D8               	btfsc	status,2,c
  6566  00792C  0012               	return	
  6567  00792E  0A10               	xorlw	16	; case 80
  6568  007930  B4D8               	btfsc	status,2,c
  6569  007932  0012               	return	
  6570  007934  0A30               	xorlw	48	; case 96
  6571  007936  B4D8               	btfsc	status,2,c
  6572  007938  D7E6               	goto	l2356
  6573  00793A  0A10               	xorlw	16	; case 112
  6574  00793C  0012               	return	
  6575  00793E                     __end_of_bootloader_run:
  6576                           	opt stack 0
  6577                           tblptru	equ	0xFF8
  6578                           tblptrh	equ	0xFF7
  6579                           tblptrl	equ	0xFF6
  6580                           tablat	equ	0xFF5
  6581                           intcon	equ	0xFF2
  6582                           intcon2	equ	0xFF1
  6583                           intcon3	equ	0xFF0
  6584                           postinc0	equ	0xFEE
  6585                           wreg	equ	0xFE8
  6586                           postdec1	equ	0xFE5
  6587                           plusw1	equ	0xFE3
  6588                           fsr1h	equ	0xFE2
  6589                           fsr1l	equ	0xFE1
  6590                           postinc2	equ	0xFDE
  6591                           plusw2	equ	0xFDB
  6592                           fsr2h	equ	0xFDA
  6593                           fsr2l	equ	0xFD9
  6594                           status	equ	0xFD8
  6595                           
  6596 ;; *************** function __bootloader_verify_file *****************
  6597 ;; Defined at:
  6598 ;;		line 179 in file "bootloader.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;		None
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  root           32    8[BANK0 ] struct .
  6603 ;;  address32       4   45[BANK0 ] unsigned long 
  6604 ;;  return_value    4   41[BANK0 ] unsigned long 
  6605 ;;  rec_counter     1   40[BANK0 ] unsigned char 
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  1    wreg      void 
  6608 ;; Registers used:
  6609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6616 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6617 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6618 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6619 ;;Total ram usage:       49 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:    7
  6622 ;; This function calls:
  6623 ;;		__bootloader_check_address
  6624 ;;		_fat_get_file_information
  6625 ;;		_fat_get_file_size
  6626 ;;		_fat_read_from_file_fast
  6627 ;;		_parseHexFileEntry
  6628 ;; This function is called by:
  6629 ;;		_bootloader_run
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text28
  6634  000F7C                     __ptext28:
  6635                           	opt stack 0
  6636  000F7C                     __bootloader_verify_file:
  6637                           	opt stack 22
  6638                           
  6639                           ;bootloader.c: 181: uint8_t rec_counter;;bootloader.c: 182: uint32_t return_value = 0;
  6640                           
  6641                           ;incstack = 0
  6642  000F7C  0E00               	movlw	0
  6643  000F7E  0100               	movlb	0	; () banked
  6644  000F80  6F89               	movwf	__bootloader_verify_file@return_value& (0+255),b
  6645  000F82  0E00               	movlw	0
  6646  000F84  6F8A               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  6647  000F86  0E00               	movlw	0
  6648  000F88  6F8B               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  6649  000F8A  0E00               	movlw	0
  6650  000F8C  6F8C               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;bootloader.c: 183: uint32_t address32;;bootloader.c: 184: rootEntry_t root;;bootloader.
      +                          c: 186: if(hex_file_offset==0)
  6654  000F8E  51CF               	movf	_hex_file_offset& (0+255),w,b
  6655  000F90  11D0               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  6656  000F92  11D1               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  6657  000F94  11D2               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  6658  000F96  A4D8               	btfss	status,2,c
  6659  000F98  D010               	goto	l2380
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;bootloader.c: 187: {;bootloader.c: 189: fat_get_file_information(file_number, &root);
  6663  000F9A  0E68               	movlw	low __bootloader_verify_file@root
  6664  000F9C  6E37               	movwf	fat_get_file_information@data,c
  6665  000F9E  0E00               	movlw	high __bootloader_verify_file@root
  6666  000FA0  6E38               	movwf	fat_get_file_information@data+1,c
  6667  000FA2  51FF               	movf	_file_number& (0+255),w,b
  6668  000FA4  ECD1  F038         	call	_fat_get_file_information
  6669                           
  6670                           ;bootloader.c: 190: fast_read_cluster = root.firstCluster;
  6671  000FA8  C082  F0F9         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  6672  000FAC  C083  F0FA         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  6673                           
  6674                           ;bootloader.c: 191: fast_read_cluster_number = 0;
  6675  000FB0  0E00               	movlw	0
  6676  000FB2  0100               	movlb	0	; () banked
  6677  000FB4  6FF8               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  6678  000FB6  0E00               	movlw	0
  6679  000FB8  6FF7               	movwf	_fast_read_cluster_number& (0+255),b
  6680  000FBA                     l2380:
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;bootloader.c: 192: };bootloader.c: 195: hex_file_size = fat_get_file_size(file_number);
  6684                           
  6685                           ; BSR set to: 0
  6686  000FBA  51FF               	movf	_file_number& (0+255),w,b
  6687  000FBC  EC0B  F039         	call	_fat_get_file_size
  6688  000FC0  C030  F0CB         	movff	?_fat_get_file_size,_hex_file_size
  6689  000FC4  C031  F0CC         	movff	?_fat_get_file_size+1,_hex_file_size+1
  6690  000FC8  C032  F0CD         	movff	?_fat_get_file_size+2,_hex_file_size+2
  6691  000FCC  C033  F0CE         	movff	?_fat_get_file_size+3,_hex_file_size+3
  6692                           
  6693                           ;bootloader.c: 198: for(rec_counter=0; rec_counter<16; ++rec_counter)
  6694  000FD0  0E00               	movlw	0
  6695  000FD2  0100               	movlb	0	; () banked
  6696  000FD4  6F88               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  6697  000FD6                     l14734:
  6698                           
  6699                           ; BSR set to: 0
  6700  000FD6  0E0F               	movlw	15
  6701  000FD8  6588               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  6702  000FDA  D001               	goto	l2381
  6703  000FDC  0012               	return	
  6704  000FDE                     l2381:
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;bootloader.c: 199: {;bootloader.c: 201: if((hex_file_size-hex_file_offset)>=50)
  6708                           
  6709                           ; BSR set to: 0
  6710  000FDE  C0CF  F060         	movff	_hex_file_offset,??__bootloader_verify_file
  6711  000FE2  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6712  000FE6  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6713  000FEA  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6714  000FEE  1F60               	comf	??__bootloader_verify_file& (0+255),f,b
  6715  000FF0  1F61               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6716  000FF2  1F62               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6717  000FF4  1F63               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6718  000FF6  2B60               	incf	??__bootloader_verify_file& (0+255),f,b
  6719  000FF8  0E00               	movlw	0
  6720  000FFA  2361               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6721  000FFC  2362               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6722  000FFE  2363               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6723  001000  51CB               	movf	_hex_file_size& (0+255),w,b
  6724  001002  2560               	addwf	??__bootloader_verify_file& (0+255),w,b
  6725  001004  6F64               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  6726  001006  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  6727  001008  2161               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6728  00100A  6F65               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  6729  00100C  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  6730  00100E  2162               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6731  001010  6F66               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  6732  001012  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  6733  001014  2163               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6734  001016  6F67               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  6735  001018  5167               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  6736  00101A  1166               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  6737  00101C  1165               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  6738  00101E  E104               	bnz	u11770
  6739  001020  0E32               	movlw	50
  6740  001022  5D64               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  6741  001024  A0D8               	btfss	status,0,c
  6742  001026  D01F               	goto	l2383
  6743  001028                     u11770:
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;bootloader.c: 202: {;bootloader.c: 204: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  6747  001028  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6748  00102C  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6749  001030  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6750  001034  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6751  001038  0E32               	movlw	50
  6752  00103A  6E3C               	movwf	fat_read_from_file_fast@length,c
  6753  00103C  0E00               	movlw	0
  6754  00103E  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  6755  001040  0E00               	movlw	0
  6756  001042  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  6757  001044  0E00               	movlw	0
  6758  001046  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  6759  001048  0E89               	movlw	low _file_buffer
  6760  00104A  6E40               	movwf	fat_read_from_file_fast@data,c
  6761  00104C  0E01               	movlw	high _file_buffer
  6762  00104E  6E41               	movwf	fat_read_from_file_fast@data+1,c
  6763  001050  0EF9               	movlw	low _fast_read_cluster
  6764  001052  6E42               	movwf	fat_read_from_file_fast@cluster,c
  6765  001054  0E00               	movlw	high _fast_read_cluster
  6766  001056  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  6767  001058  0EF7               	movlw	low _fast_read_cluster_number
  6768  00105A  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  6769  00105C  0E00               	movlw	high _fast_read_cluster_number
  6770  00105E  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6771  001060  EC10  F012         	call	_fat_read_from_file_fast	;wreg free
  6772                           
  6773                           ;bootloader.c: 205: }
  6774  001064  D034               	goto	l2384
  6775  001066                     l2383:
  6776                           
  6777                           ;bootloader.c: 206: else;bootloader.c: 207: {;bootloader.c: 209: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  6778  001066  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6779  00106A  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6780  00106E  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6781  001072  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6782  001076  C0CF  F060         	movff	_hex_file_offset,??__bootloader_verify_file
  6783  00107A  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6784  00107E  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6785  001082  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6786  001086  0100               	movlb	0	; () banked
  6787  001088  1F60               	comf	??__bootloader_verify_file& (0+255),f,b
  6788  00108A  1F61               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6789  00108C  1F62               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6790  00108E  1F63               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6791  001090  2B60               	incf	??__bootloader_verify_file& (0+255),f,b
  6792  001092  0E00               	movlw	0
  6793  001094  2361               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6794  001096  2362               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6795  001098  2363               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6796  00109A  51CB               	movf	_hex_file_size& (0+255),w,b
  6797  00109C  2560               	addwf	??__bootloader_verify_file& (0+255),w,b
  6798  00109E  6E3C               	movwf	fat_read_from_file_fast@length,c
  6799  0010A0  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  6800  0010A2  2161               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6801  0010A4  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  6802  0010A6  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  6803  0010A8  2162               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6804  0010AA  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  6805  0010AC  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  6806  0010AE  2163               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6807  0010B0  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  6808  0010B2  0E89               	movlw	low _file_buffer
  6809  0010B4  6E40               	movwf	fat_read_from_file_fast@data,c
  6810  0010B6  0E01               	movlw	high _file_buffer
  6811  0010B8  6E41               	movwf	fat_read_from_file_fast@data+1,c
  6812  0010BA  0EF9               	movlw	low _fast_read_cluster
  6813  0010BC  6E42               	movwf	fat_read_from_file_fast@cluster,c
  6814  0010BE  0E00               	movlw	high _fast_read_cluster
  6815  0010C0  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  6816  0010C2  0EF7               	movlw	low _fast_read_cluster_number
  6817  0010C4  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  6818  0010C6  0E00               	movlw	high _fast_read_cluster_number
  6819  0010C8  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6820  0010CA  EC10  F012         	call	_fat_read_from_file_fast	;wreg free
  6821  0010CE                     l2384:
  6822                           
  6823                           ;bootloader.c: 210: };bootloader.c: 213: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  6824  0010CE  0E89               	movlw	low _file_buffer
  6825  0010D0  6E0C               	movwf	parseHexFileEntry@data,c
  6826  0010D2  0E01               	movlw	high _file_buffer
  6827  0010D4  6E0D               	movwf	parseHexFileEntry@data+1,c
  6828  0010D6  0E00               	movlw	0
  6829  0010D8  6E0E               	movwf	parseHexFileEntry@offset,c
  6830  0010DA  0E00               	movlw	0
  6831  0010DC  6E0F               	movwf	parseHexFileEntry@offset+1,c
  6832  0010DE  0E00               	movlw	0
  6833  0010E0  6E10               	movwf	parseHexFileEntry@offset+2,c
  6834  0010E2  0E00               	movlw	0
  6835  0010E4  6E11               	movwf	parseHexFileEntry@offset+3,c
  6836  0010E6  0EBB               	movlw	low _hex_file_entry
  6837  0010E8  6E12               	movwf	parseHexFileEntry@hexEntry,c
  6838  0010EA  0E01               	movlw	high _hex_file_entry
  6839  0010EC  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  6840  0010EE  EC10  F000         	call	_parseHexFileEntry	;wreg free
  6841  0010F2  C00C  F089         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  6842  0010F6  C00D  F08A         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  6843  0010FA  C00E  F08B         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  6844  0010FE  C00F  F08C         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  6845                           
  6846                           ;bootloader.c: 216: ++hex_file_entries;
  6847  001102  0101               	movlb	1	; () banked
  6848  001104  4B74               	infsnz	_hex_file_entries& (0+255),f,b
  6849  001106  2B75               	incf	(_hex_file_entries+1)& (0+255),f,b
  6850                           
  6851                           ; BSR set to: 1
  6852                           ;bootloader.c: 219: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  6853  001108  0E04               	movlw	4
  6854  00110A  19BF               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  6855  00110C  A4D8               	btfss	status,2,c
  6856  00110E  D01C               	goto	l2385
  6857                           
  6858                           ; BSR set to: 1
  6859                           ;bootloader.c: 220: {;bootloader.c: 221: extended_linear_address = hex_file_entry.data[0
      +                          ];
  6860  001110  51C0               	movf	(_hex_file_entry+5)& (0+255),w,b
  6861  001112  6F46               	movwf	_extended_linear_address& (0+255),b
  6862  001114  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  6863  001116  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  6864  001118  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  6865                           
  6866                           ; BSR set to: 1
  6867                           ;bootloader.c: 222: extended_linear_address <<= 8;
  6868  00111A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  6869  00111E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  6870  001122  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  6871  001126  6B46               	clrf	_extended_linear_address& (0+255),b
  6872                           
  6873                           ; BSR set to: 1
  6874                           ;bootloader.c: 223: extended_linear_address |= hex_file_entry.data[1];
  6875  001128  51C1               	movf	(_hex_file_entry+6)& (0+255),w,b
  6876  00112A  1346               	iorwf	_extended_linear_address& (0+255),f,b
  6877                           
  6878                           ; BSR set to: 1
  6879                           ;bootloader.c: 224: extended_linear_address <<= 8;
  6880  00112C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  6881  001130  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  6882  001134  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  6883  001138  6B46               	clrf	_extended_linear_address& (0+255),b
  6884                           
  6885                           ; BSR set to: 1
  6886                           ;bootloader.c: 225: extended_linear_address <<= 8;
  6887  00113A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  6888  00113E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  6889  001142  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  6890  001146  6B46               	clrf	_extended_linear_address& (0+255),b
  6891  001148                     l2385:
  6892                           
  6893                           ; BSR set to: 1
  6894                           ;bootloader.c: 226: };bootloader.c: 229: if(hex_file_entry.recordType==RecordTypeData)
  6895                           
  6896                           ; BSR set to: 1
  6897  001148  51BF               	movf	(_hex_file_entry+4)& (0+255),w,b
  6898  00114A  A4D8               	btfss	status,2,c
  6899  00114C  D05D               	goto	l2389
  6900                           
  6901                           ; BSR set to: 1
  6902                           ;bootloader.c: 230: {;bootloader.c: 232: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  6903  00114E  51BD               	movf	(_hex_file_entry+2)& (0+255),w,b
  6904  001150  2546               	addwf	_extended_linear_address& (0+255),w,b
  6905  001152  0100               	movlb	0	; () banked
  6906  001154  6F8D               	movwf	__bootloader_verify_file@address32& (0+255),b
  6907  001156  0101               	movlb	1	; () banked
  6908  001158  51BE               	movf	(_hex_file_entry+3)& (0+255),w,b
  6909  00115A  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  6910  00115C  0100               	movlb	0	; () banked
  6911  00115E  6F8E               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  6912  001160  0E00               	movlw	0
  6913  001162  0101               	movlb	1	; () banked
  6914  001164  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  6915  001166  0100               	movlb	0	; () banked
  6916  001168  6F8F               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  6917  00116A  0E00               	movlw	0
  6918  00116C  0101               	movlb	1	; () banked
  6919  00116E  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  6920  001170  0100               	movlb	0	; () banked
  6921  001172  6F90               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  6922                           
  6923                           ;bootloader.c: 235: if(address32<file_minimum_address)
  6924  001174  0101               	movlb	1	; () banked
  6925  001176  514E               	movf	_file_minimum_address& (0+255),w,b
  6926  001178  0100               	movlb	0	; () banked
  6927  00117A  5D8D               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  6928  00117C  0101               	movlb	1	; () banked
  6929  00117E  514F               	movf	(_file_minimum_address+1)& (0+255),w,b
  6930  001180  0100               	movlb	0	; () banked
  6931  001182  598E               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6932  001184  0101               	movlb	1	; () banked
  6933  001186  5150               	movf	(_file_minimum_address+2)& (0+255),w,b
  6934  001188  0100               	movlb	0	; () banked
  6935  00118A  598F               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6936  00118C  0101               	movlb	1	; () banked
  6937  00118E  5151               	movf	(_file_minimum_address+3)& (0+255),w,b
  6938  001190  0100               	movlb	0	; () banked
  6939  001192  5990               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6940  001194  B0D8               	btfsc	status,0,c
  6941  001196  D008               	goto	l2387
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;bootloader.c: 236: {;bootloader.c: 237: file_minimum_address = address32;
  6945  001198  C08D  F14E         	movff	__bootloader_verify_file@address32,_file_minimum_address
  6946  00119C  C08E  F14F         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  6947  0011A0  C08F  F150         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  6948  0011A4  C090  F151         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  6949  0011A8                     l2387:
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;bootloader.c: 238: };bootloader.c: 239: if(address32>file_maximum_address)
  6953                           
  6954                           ; BSR set to: 0
  6955  0011A8  518D               	movf	__bootloader_verify_file@address32& (0+255),w,b
  6956  0011AA  0101               	movlb	1	; () banked
  6957  0011AC  5D4A               	subwf	_file_maximum_address& (0+255),w,b
  6958  0011AE  0100               	movlb	0	; () banked
  6959  0011B0  518E               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6960  0011B2  0101               	movlb	1	; () banked
  6961  0011B4  594B               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  6962  0011B6  0100               	movlb	0	; () banked
  6963  0011B8  518F               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6964  0011BA  0101               	movlb	1	; () banked
  6965  0011BC  594C               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  6966  0011BE  0100               	movlb	0	; () banked
  6967  0011C0  5190               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6968  0011C2  0101               	movlb	1	; () banked
  6969  0011C4  594D               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  6970  0011C6  B0D8               	btfsc	status,0,c
  6971  0011C8  D008               	goto	l2388
  6972                           
  6973                           ; BSR set to: 1
  6974                           ;bootloader.c: 240: {;bootloader.c: 241: file_maximum_address = address32;
  6975  0011CA  C08D  F14A         	movff	__bootloader_verify_file@address32,_file_maximum_address
  6976  0011CE  C08E  F14B         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  6977  0011D2  C08F  F14C         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  6978  0011D6  C090  F14D         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  6979  0011DA                     l2388:
  6980                           
  6981                           ; BSR set to: 1
  6982                           ;bootloader.c: 242: };bootloader.c: 245: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  6983                           
  6984                           ; BSR set to: 1
  6985  0011DA  C08D  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  6986  0011DE  C08E  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  6987  0011E2  C08F  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  6988  0011E6  C090  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  6989  0011EA  C1BB  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  6990  0011EE  EC78  F02B         	call	__bootloader_check_address	;wreg free
  6991  0011F2  0AFF               	xorlw	255
  6992  0011F4  A4D8               	btfss	status,2,c
  6993  0011F6  D008               	goto	l2389
  6994                           
  6995                           ;bootloader.c: 246: {;bootloader.c: 248: last_error = ShortRecordErrorAddressRange;
  6996  0011F8  0E0B               	movlw	11
  6997  0011FA  0100               	movlb	0	; () banked
  6998  0011FC  6FDE               	movwf	_last_error& (0+255),b
  6999                           
  7000                           ;bootloader.c: 250: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7001  0011FE  0E50               	movlw	80
  7002  001200  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  7003                           
  7004                           ;bootloader.c: 251: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7005  001202  0E50               	movlw	80
  7006  001204  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  7007                           
  7008                           ;bootloader.c: 252: break;
  7009  001206  0012               	return	
  7010  001208                     l2389:
  7011                           
  7012                           ;bootloader.c: 253: };bootloader.c: 254: };bootloader.c: 256: if(return_value==0)
  7013                           
  7014                           ; BSR set to: 0
  7015                           
  7016                           ; BSR set to: 0
  7017  001208  0100               	movlb	0	; () banked
  7018  00120A  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7019  00120C  118A               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7020  00120E  118B               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7021  001210  118C               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7022  001212  A4D8               	btfss	status,2,c
  7023  001214  D027               	goto	l2390
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;bootloader.c: 257: {;bootloader.c: 260: total_hex_file_entries = hex_file_entries;
  7027  001216  C174  F172         	movff	_hex_file_entries,_total_hex_file_entries
  7028  00121A  C175  F173         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;bootloader.c: 261: hex_file_entries = 0;
  7032  00121E  0E00               	movlw	0
  7033  001220  0101               	movlb	1	; () banked
  7034  001222  6F75               	movwf	(_hex_file_entries+1)& (0+255),b
  7035  001224  0E00               	movlw	0
  7036  001226  6F74               	movwf	_hex_file_entries& (0+255),b
  7037                           
  7038                           ;bootloader.c: 262: hex_file_offset = 0;
  7039  001228  0E00               	movlw	0
  7040  00122A  0100               	movlb	0	; () banked
  7041  00122C  6FCF               	movwf	_hex_file_offset& (0+255),b
  7042  00122E  0E00               	movlw	0
  7043  001230  6FD0               	movwf	(_hex_file_offset+1)& (0+255),b
  7044  001232  0E00               	movlw	0
  7045  001234  6FD1               	movwf	(_hex_file_offset+2)& (0+255),b
  7046  001236  0E00               	movlw	0
  7047  001238  6FD2               	movwf	(_hex_file_offset+3)& (0+255),b
  7048                           
  7049                           ;bootloader.c: 263: extended_linear_address = 0;
  7050  00123A  0E00               	movlw	0
  7051  00123C  0101               	movlb	1	; () banked
  7052  00123E  6F46               	movwf	_extended_linear_address& (0+255),b
  7053  001240  0E00               	movlw	0
  7054  001242  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
  7055  001244  0E00               	movlw	0
  7056  001246  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
  7057  001248  0E00               	movlw	0
  7058  00124A  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
  7059                           
  7060                           ;bootloader.c: 264: flash_pages_written = 0;
  7061  00124C  0E00               	movlw	0
  7062  00124E  6F71               	movwf	(_flash_pages_written+1)& (0+255),b
  7063  001250  0E00               	movlw	0
  7064  001252  6F70               	movwf	_flash_pages_written& (0+255),b
  7065                           
  7066                           ;bootloader.c: 265: start_from_byte_next = 0;
  7067  001254  0E00               	movlw	0
  7068  001256  0100               	movlb	0	; () banked
  7069  001258  6FDD               	movwf	_start_from_byte_next& (0+255),b
  7070                           
  7071                           ;bootloader.c: 267: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  7072  00125A  0E40               	movlw	64
  7073  00125C  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  7074                           
  7075                           ;bootloader.c: 268: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  7076  00125E  0E40               	movlw	64
  7077  001260  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  7078                           
  7079                           ;bootloader.c: 269: break;
  7080  001262  0012               	return	
  7081  001264                     l2390:
  7082                           
  7083                           ; BSR set to: 0
  7084                           ;bootloader.c: 271: else if(return_value>0xFFFFFFF0)
  7085                           
  7086                           ; BSR set to: 0
  7087  001264  0EF1               	movlw	241
  7088  001266  5D89               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  7089  001268  0EFF               	movlw	255
  7090  00126A  598A               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7091  00126C  0EFF               	movlw	255
  7092  00126E  598B               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7093  001270  0EFF               	movlw	255
  7094  001272  598C               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7095  001274  A0D8               	btfss	status,0,c
  7096  001276  D007               	goto	l2392
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;bootloader.c: 272: {;bootloader.c: 274: last_error = return_value & 0xF;
  7100  001278  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7101  00127A  0B0F               	andlw	15
  7102  00127C  6FDE               	movwf	_last_error& (0+255),b
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;bootloader.c: 276: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7106  00127E  0E50               	movlw	80
  7107  001280  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;bootloader.c: 277: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7111  001282  0E50               	movlw	80
  7112  001284  D7ED               	goto	L1
  7113  001286                     l2392:
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;bootloader.c: 280: else;bootloader.c: 281: {;bootloader.c: 283: hex_file_offset += retu
      +                          rn_value;
  7117                           
  7118                           ; BSR set to: 0
  7119  001286  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7120  001288  27CF               	addwf	_hex_file_offset& (0+255),f,b
  7121  00128A  518A               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7122  00128C  23D0               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7123  00128E  518B               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7124  001290  23D1               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7125  001292  518C               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7126  001294  23D2               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7127                           
  7128                           ; BSR set to: 0
  7129                           
  7130                           ; BSR set to: 0
  7131                           
  7132                           ; BSR set to: 0
  7133  001296  2B88               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  7134  001298  D69E               	goto	l14734
  7135  00129A                     __end_of__bootloader_verify_file:
  7136                           	opt stack 0
  7137                           tblptru	equ	0xFF8
  7138                           tblptrh	equ	0xFF7
  7139                           tblptrl	equ	0xFF6
  7140                           tablat	equ	0xFF5
  7141                           intcon	equ	0xFF2
  7142                           intcon2	equ	0xFF1
  7143                           intcon3	equ	0xFF0
  7144                           postinc0	equ	0xFEE
  7145                           wreg	equ	0xFE8
  7146                           postdec1	equ	0xFE5
  7147                           plusw1	equ	0xFE3
  7148                           fsr1h	equ	0xFE2
  7149                           fsr1l	equ	0xFE1
  7150                           postinc2	equ	0xFDE
  7151                           plusw2	equ	0xFDB
  7152                           fsr2h	equ	0xFDA
  7153                           fsr2l	equ	0xFD9
  7154                           status	equ	0xFD8
  7155                           
  7156 ;; *************** function __bootloader_program *****************
  7157 ;; Defined at:
  7158 ;;		line 288 in file "bootloader.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;		None
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  root           32   14[BANK0 ] struct .
  7163 ;;  address32       4   50[BANK0 ] unsigned long 
  7164 ;;  return_value    4   46[BANK0 ] unsigned long 
  7165 ;;  page_to_writ    2   57[BANK0 ] unsigned int 
  7166 ;;  cntr            2   55[BANK0 ] unsigned int 
  7167 ;;  address_with    2   12[BANK0 ] unsigned int 
  7168 ;;  entry_page      2   10[BANK0 ] unsigned int 
  7169 ;;  buffer          2    8[BANK0 ] PTR unsigned char 
  7170 ;;		 -> pageBuffer(1024), 
  7171 ;;  start_from_b    1   54[BANK0 ] unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7182 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7183 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7184 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7185 ;;Total ram usage:       59 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    7
  7188 ;; This function calls:
  7189 ;;		__bootloader_check_address
  7190 ;;		_fat_get_file_information
  7191 ;;		_fat_read_from_file_fast
  7192 ;;		_internalFlash_addressWithinPage
  7193 ;;		_internalFlash_erasePage
  7194 ;;		_internalFlash_getBuffer
  7195 ;;		_internalFlash_pageFromAddress
  7196 ;;		_internalFlash_readPage
  7197 ;;		_internalFlash_writePage
  7198 ;;		_parseHexFileEntry
  7199 ;; This function is called by:
  7200 ;;		_bootloader_run
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text29
  7205  00085A                     __ptext29:
  7206                           	opt stack 0
  7207  00085A                     __bootloader_program:
  7208                           	opt stack 22
  7209                           
  7210                           ;bootloader.c: 290: uint16_t cntr;;bootloader.c: 291: uint8_t* buffer;;bootloader.c: 292
      +                          : uint16_t entry_page;;bootloader.c: 293: uint16_t page_to_write = 0;
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;incstack = 0
  7214  00085A  0E00               	movlw	0
  7215  00085C  0100               	movlb	0	; () banked
  7216  00085E  6F9A               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  7217  000860  0E00               	movlw	0
  7218  000862  6F99               	movwf	__bootloader_program@page_to_write& (0+255),b
  7219                           
  7220                           ;bootloader.c: 294: uint8_t start_from_byte;;bootloader.c: 295: uint32_t address32;;boot
      +                          loader.c: 296: uint32_t return_value = 0;
  7221  000864  0E00               	movlw	0
  7222  000866  6F8E               	movwf	__bootloader_program@return_value& (0+255),b
  7223  000868  0E00               	movlw	0
  7224  00086A  6F8F               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  7225  00086C  0E00               	movlw	0
  7226  00086E  6F90               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  7227  000870  0E00               	movlw	0
  7228  000872  6F91               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;bootloader.c: 297: uint16_t address_within_page;;bootloader.c: 298: rootEntry_t root;;b
      +                          ootloader.c: 300: if(hex_file_offset==0)
  7232  000874  51CF               	movf	_hex_file_offset& (0+255),w,b
  7233  000876  11D0               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7234  000878  11D1               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7235  00087A  11D2               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7236  00087C  A4D8               	btfss	status,2,c
  7237  00087E  D010               	goto	l2397
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;bootloader.c: 301: {;bootloader.c: 303: fat_get_file_information(file_number, &root);
  7241  000880  0E6E               	movlw	low __bootloader_program@root
  7242  000882  6E37               	movwf	fat_get_file_information@data,c
  7243  000884  0E00               	movlw	high __bootloader_program@root
  7244  000886  6E38               	movwf	fat_get_file_information@data+1,c
  7245  000888  51FF               	movf	_file_number& (0+255),w,b
  7246  00088A  ECD1  F038         	call	_fat_get_file_information
  7247                           
  7248                           ;bootloader.c: 304: fast_read_cluster = root.firstCluster;
  7249  00088E  C088  F0F9         	movff	__bootloader_program@root+26,_fast_read_cluster
  7250  000892  C089  F0FA         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  7251                           
  7252                           ;bootloader.c: 305: fast_read_cluster_number = 0;
  7253  000896  0E00               	movlw	0
  7254  000898  0100               	movlb	0	; () banked
  7255  00089A  6FF8               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7256  00089C  0E00               	movlw	0
  7257  00089E  6FF7               	movwf	_fast_read_cluster_number& (0+255),b
  7258  0008A0                     l2397:
  7259                           
  7260                           ;bootloader.c: 310: {;bootloader.c: 315: if((hex_file_size-hex_file_offset)>=50)
  7261                           
  7262                           ; BSR set to: 0
  7263                           
  7264                           ;bootloader.c: 306: };bootloader.c: 309: while(1)
  7265                           
  7266                           ; BSR set to: 0
  7267  0008A0  C0CF  F060         	movff	_hex_file_offset,??__bootloader_program
  7268  0008A4  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_program+1
  7269  0008A8  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_program+2
  7270  0008AC  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_program+3
  7271  0008B0  0100               	movlb	0	; () banked
  7272  0008B2  1F60               	comf	??__bootloader_program& (0+255),f,b
  7273  0008B4  1F61               	comf	(??__bootloader_program+1)& (0+255),f,b
  7274  0008B6  1F62               	comf	(??__bootloader_program+2)& (0+255),f,b
  7275  0008B8  1F63               	comf	(??__bootloader_program+3)& (0+255),f,b
  7276  0008BA  2B60               	incf	??__bootloader_program& (0+255),f,b
  7277  0008BC  0E00               	movlw	0
  7278  0008BE  2361               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7279  0008C0  2362               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7280  0008C2  2363               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7281  0008C4  51CB               	movf	_hex_file_size& (0+255),w,b
  7282  0008C6  2560               	addwf	??__bootloader_program& (0+255),w,b
  7283  0008C8  6F64               	movwf	(??__bootloader_program+4)& (0+255),b
  7284  0008CA  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  7285  0008CC  2161               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7286  0008CE  6F65               	movwf	(??__bootloader_program+5)& (0+255),b
  7287  0008D0  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  7288  0008D2  2162               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7289  0008D4  6F66               	movwf	(??__bootloader_program+6)& (0+255),b
  7290  0008D6  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  7291  0008D8  2163               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7292  0008DA  6F67               	movwf	(??__bootloader_program+7)& (0+255),b
  7293  0008DC  5167               	movf	(??__bootloader_program+7)& (0+255),w,b
  7294  0008DE  1166               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  7295  0008E0  1165               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  7296  0008E2  E104               	bnz	u11870
  7297  0008E4  0E32               	movlw	50
  7298  0008E6  5D64               	subwf	(??__bootloader_program+4)& (0+255),w,b
  7299  0008E8  A0D8               	btfss	status,0,c
  7300  0008EA  D01F               	goto	l2399
  7301  0008EC                     u11870:
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;bootloader.c: 316: {;bootloader.c: 318: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7305  0008EC  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7306  0008F0  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7307  0008F4  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7308  0008F8  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7309  0008FC  0E32               	movlw	50
  7310  0008FE  6E3C               	movwf	fat_read_from_file_fast@length,c
  7311  000900  0E00               	movlw	0
  7312  000902  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  7313  000904  0E00               	movlw	0
  7314  000906  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  7315  000908  0E00               	movlw	0
  7316  00090A  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  7317  00090C  0E89               	movlw	low _file_buffer
  7318  00090E  6E40               	movwf	fat_read_from_file_fast@data,c
  7319  000910  0E01               	movlw	high _file_buffer
  7320  000912  6E41               	movwf	fat_read_from_file_fast@data+1,c
  7321  000914  0EF9               	movlw	low _fast_read_cluster
  7322  000916  6E42               	movwf	fat_read_from_file_fast@cluster,c
  7323  000918  0E00               	movlw	high _fast_read_cluster
  7324  00091A  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  7325  00091C  0EF7               	movlw	low _fast_read_cluster_number
  7326  00091E  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  7327  000920  0E00               	movlw	high _fast_read_cluster_number
  7328  000922  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7329  000924  EC10  F012         	call	_fat_read_from_file_fast	;wreg free
  7330                           
  7331                           ;bootloader.c: 319: }
  7332  000928  D034               	goto	l2400
  7333  00092A                     l2399:
  7334                           
  7335                           ;bootloader.c: 320: else;bootloader.c: 321: {;bootloader.c: 323: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7336  00092A  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7337  00092E  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7338  000932  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7339  000936  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7340  00093A  C0CF  F060         	movff	_hex_file_offset,??__bootloader_program
  7341  00093E  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_program+1
  7342  000942  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_program+2
  7343  000946  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_program+3
  7344  00094A  0100               	movlb	0	; () banked
  7345  00094C  1F60               	comf	??__bootloader_program& (0+255),f,b
  7346  00094E  1F61               	comf	(??__bootloader_program+1)& (0+255),f,b
  7347  000950  1F62               	comf	(??__bootloader_program+2)& (0+255),f,b
  7348  000952  1F63               	comf	(??__bootloader_program+3)& (0+255),f,b
  7349  000954  2B60               	incf	??__bootloader_program& (0+255),f,b
  7350  000956  0E00               	movlw	0
  7351  000958  2361               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7352  00095A  2362               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7353  00095C  2363               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7354  00095E  51CB               	movf	_hex_file_size& (0+255),w,b
  7355  000960  2560               	addwf	??__bootloader_program& (0+255),w,b
  7356  000962  6E3C               	movwf	fat_read_from_file_fast@length,c
  7357  000964  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  7358  000966  2161               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7359  000968  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  7360  00096A  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  7361  00096C  2162               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7362  00096E  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  7363  000970  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  7364  000972  2163               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7365  000974  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  7366  000976  0E89               	movlw	low _file_buffer
  7367  000978  6E40               	movwf	fat_read_from_file_fast@data,c
  7368  00097A  0E01               	movlw	high _file_buffer
  7369  00097C  6E41               	movwf	fat_read_from_file_fast@data+1,c
  7370  00097E  0EF9               	movlw	low _fast_read_cluster
  7371  000980  6E42               	movwf	fat_read_from_file_fast@cluster,c
  7372  000982  0E00               	movlw	high _fast_read_cluster
  7373  000984  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  7374  000986  0EF7               	movlw	low _fast_read_cluster_number
  7375  000988  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  7376  00098A  0E00               	movlw	high _fast_read_cluster_number
  7377  00098C  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7378  00098E  EC10  F012         	call	_fat_read_from_file_fast	;wreg free
  7379  000992                     l2400:
  7380                           
  7381                           ;bootloader.c: 324: };bootloader.c: 327: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7382  000992  0E89               	movlw	low _file_buffer
  7383  000994  6E0C               	movwf	parseHexFileEntry@data,c
  7384  000996  0E01               	movlw	high _file_buffer
  7385  000998  6E0D               	movwf	parseHexFileEntry@data+1,c
  7386  00099A  0E00               	movlw	0
  7387  00099C  6E0E               	movwf	parseHexFileEntry@offset,c
  7388  00099E  0E00               	movlw	0
  7389  0009A0  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7390  0009A2  0E00               	movlw	0
  7391  0009A4  6E10               	movwf	parseHexFileEntry@offset+2,c
  7392  0009A6  0E00               	movlw	0
  7393  0009A8  6E11               	movwf	parseHexFileEntry@offset+3,c
  7394  0009AA  0EBB               	movlw	low _hex_file_entry
  7395  0009AC  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7396  0009AE  0E01               	movlw	high _hex_file_entry
  7397  0009B0  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7398  0009B2  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7399  0009B6  C00C  F08E         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  7400  0009BA  C00D  F08F         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  7401  0009BE  C00E  F090         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  7402  0009C2  C00F  F091         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  7403                           
  7404                           ;bootloader.c: 330: ++hex_file_entries;
  7405  0009C6  0101               	movlb	1	; () banked
  7406  0009C8  4B74               	infsnz	_hex_file_entries& (0+255),f,b
  7407  0009CA  2B75               	incf	(_hex_file_entries+1)& (0+255),f,b
  7408                           
  7409                           ; BSR set to: 1
  7410                           ;bootloader.c: 333: if(return_value>RecordErrorNoError)
  7411  0009CC  0EF1               	movlw	241
  7412  0009CE  0100               	movlb	0	; () banked
  7413  0009D0  5D8E               	subwf	__bootloader_program@return_value& (0+255),w,b
  7414  0009D2  0EFF               	movlw	255
  7415  0009D4  598F               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  7416  0009D6  0EFF               	movlw	255
  7417  0009D8  5990               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  7418  0009DA  0EFF               	movlw	255
  7419  0009DC  5991               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  7420  0009DE  A0D8               	btfss	status,0,c
  7421  0009E0  D005               	goto	l2401
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;bootloader.c: 334: {;bootloader.c: 336: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  7425  0009E2  0E50               	movlw	80
  7426  0009E4  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  7427                           
  7428                           ;bootloader.c: 337: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7429  0009E6  0E50               	movlw	80
  7430  0009E8  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;bootloader.c: 338: return;
  7434  0009EA  0012               	return	
  7435  0009EC                     l2401:
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;bootloader.c: 340: else;bootloader.c: 341: {;bootloader.c: 343: hex_file_offset += retu
      +                          rn_value;
  7439                           
  7440                           ; BSR set to: 0
  7441  0009EC  518E               	movf	__bootloader_program@return_value& (0+255),w,b
  7442  0009EE  27CF               	addwf	_hex_file_offset& (0+255),f,b
  7443  0009F0  518F               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7444  0009F2  23D0               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7445  0009F4  5190               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7446  0009F6  23D1               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7447  0009F8  5191               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7448  0009FA  23D2               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;bootloader.c: 344: };bootloader.c: 346: switch(hex_file_entry.recordType)
  7452  0009FC  D0FC               	goto	l2404
  7453  0009FE                     
  7454                           ;bootloader.c: 352: extended_linear_address = hex_file_entry.data[0];
  7455                           
  7456                           ; BSR set to: 0
  7457  0009FE  0101               	movlb	1	; () banked
  7458  000A00  51C0               	movf	(_hex_file_entry+5)& (0+255),w,b
  7459  000A02  6F46               	movwf	_extended_linear_address& (0+255),b
  7460  000A04  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  7461  000A06  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  7462  000A08  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  7463                           
  7464                           ; BSR set to: 1
  7465                           ;bootloader.c: 353: extended_linear_address <<= 8;
  7466  000A0A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7467  000A0E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7468  000A12  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7469  000A16  6B46               	clrf	_extended_linear_address& (0+255),b
  7470                           
  7471                           ; BSR set to: 1
  7472                           ;bootloader.c: 354: extended_linear_address |= hex_file_entry.data[1];
  7473  000A18  51C1               	movf	(_hex_file_entry+6)& (0+255),w,b
  7474  000A1A  1346               	iorwf	_extended_linear_address& (0+255),f,b
  7475                           
  7476                           ; BSR set to: 1
  7477                           ;bootloader.c: 355: extended_linear_address <<= 8;
  7478  000A1C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7479  000A20  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7480  000A24  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7481  000A28  6B46               	clrf	_extended_linear_address& (0+255),b
  7482                           
  7483                           ; BSR set to: 1
  7484                           ;bootloader.c: 356: extended_linear_address <<= 8;
  7485  000A2A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7486  000A2E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7487  000A32  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7488  000A36  6B46               	clrf	_extended_linear_address& (0+255),b
  7489                           
  7490                           ; BSR set to: 1
  7491                           ;bootloader.c: 358: break;
  7492                           
  7493                           ;bootloader.c: 357: continue;
  7494  000A38  D733               	goto	l2397
  7495  000A3A                     l2408:
  7496                           
  7497                           ; BSR set to: 1
  7498                           ;bootloader.c: 363: start_from_byte = start_from_byte_next;
  7499  000A3A  C0DD  F096         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  7500                           
  7501                           ; BSR set to: 1
  7502                           ;bootloader.c: 365: start_from_byte_next = 0;
  7503  000A3E  0E00               	movlw	0
  7504  000A40  0100               	movlb	0	; () banked
  7505  000A42  6FDD               	movwf	_start_from_byte_next& (0+255),b
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;bootloader.c: 368: address32 = extended_linear_address + hex_file_entry.address;
  7509  000A44  0101               	movlb	1	; () banked
  7510  000A46  51BD               	movf	(_hex_file_entry+2)& (0+255),w,b
  7511  000A48  2546               	addwf	_extended_linear_address& (0+255),w,b
  7512  000A4A  0100               	movlb	0	; () banked
  7513  000A4C  6F92               	movwf	__bootloader_program@address32& (0+255),b
  7514  000A4E  0101               	movlb	1	; () banked
  7515  000A50  51BE               	movf	(_hex_file_entry+3)& (0+255),w,b
  7516  000A52  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7517  000A54  0100               	movlb	0	; () banked
  7518  000A56  6F93               	movwf	(__bootloader_program@address32+1)& (0+255),b
  7519  000A58  0E00               	movlw	0
  7520  000A5A  0101               	movlb	1	; () banked
  7521  000A5C  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7522  000A5E  0100               	movlb	0	; () banked
  7523  000A60  6F94               	movwf	(__bootloader_program@address32+2)& (0+255),b
  7524  000A62  0E00               	movlw	0
  7525  000A64  0101               	movlb	1	; () banked
  7526  000A66  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7527  000A68  0100               	movlb	0	; () banked
  7528  000A6A  6F95               	movwf	(__bootloader_program@address32+3)& (0+255),b
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;bootloader.c: 369: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  7532  000A6C  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7533  000A6E  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  7534  000A70  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7535  000A72  0E00               	movlw	0
  7536  000A74  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7537  000A76  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7538  000A78  0E00               	movlw	0
  7539  000A7A  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7540  000A7C  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7541  000A7E  0E00               	movlw	0
  7542  000A80  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7543  000A82  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7544  000A84  ECC1  F043         	call	_internalFlash_pageFromAddress	;wreg free
  7545  000A88  C001  F06A         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  7546  000A8C  C002  F06B         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  7547                           
  7548                           ;bootloader.c: 372: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  7549  000A90  0100               	movlb	0	; () banked
  7550  000A92  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7551  000A94  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  7552  000A96  6E01               	movwf	__bootloader_check_address@address,c
  7553  000A98  0E00               	movlw	0
  7554  000A9A  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7555  000A9C  6E02               	movwf	__bootloader_check_address@address+1,c
  7556  000A9E  0E00               	movlw	0
  7557  000AA0  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7558  000AA2  6E03               	movwf	__bootloader_check_address@address+2,c
  7559  000AA4  0E00               	movlw	0
  7560  000AA6  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7561  000AA8  6E04               	movwf	__bootloader_check_address@address+3,c
  7562  000AAA  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7563  000AAC  0800               	sublw	0
  7564  000AAE  0101               	movlb	1	; () banked
  7565  000AB0  25BB               	addwf	_hex_file_entry& (0+255),w,b
  7566  000AB2  6E05               	movwf	__bootloader_check_address@dataLength,c
  7567  000AB4  EC78  F02B         	call	__bootloader_check_address	;wreg free
  7568  000AB8  0900               	iorlw	0
  7569  000ABA  A4D8               	btfss	status,2,c
  7570  000ABC  D6F1               	goto	l2397
  7571                           
  7572                           ;bootloader.c: 375: };bootloader.c: 377: if(page_to_write==0)
  7573                           
  7574                           ;bootloader.c: 373: {;bootloader.c: 374: break;
  7575  000ABE  0100               	movlb	0	; () banked
  7576  000AC0  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7577  000AC2  119A               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7578  000AC4  A4D8               	btfss	status,2,c
  7579  000AC6  D010               	goto	l2410
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;bootloader.c: 378: {;bootloader.c: 382: page_to_write = entry_page;
  7583  000AC8  C06A  F099         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  7584  000ACC  C06B  F09A         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  7585                           
  7586                           ; BSR set to: 0
  7587                           ;bootloader.c: 383: internalFlash_readPage(page_to_write);
  7588  000AD0  C099  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  7589  000AD4  C09A  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  7590  000AD8  ECF9  F03F         	call	_internalFlash_readPage	;wreg free
  7591                           
  7592                           ;bootloader.c: 384: buffer = internalFlash_getBuffer();
  7593  000ADC  EC84  F044         	call	_internalFlash_getBuffer	;wreg free
  7594  000AE0  C001  F068         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  7595  000AE4  C002  F069         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  7596  000AE8                     l2410:
  7597                           
  7598                           ;bootloader.c: 385: };bootloader.c: 387: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  7599  000AE8  C096  F097         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  7600  000AEC  0100               	movlb	0	; () banked
  7601  000AEE  6B98               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  7602  000AF0  D05D               	goto	l2411
  7603  000AF2                     
  7604                           ; BSR set to: 0
  7605                           ;bootloader.c: 388: {;bootloader.c: 391: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  7606                           
  7607                           ; BSR set to: 0
  7608  000AF2  5197               	movf	__bootloader_program@cntr& (0+255),w,b
  7609  000AF4  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  7610  000AF6  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7611  000AF8  5198               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7612  000AFA  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7613  000AFC  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7614  000AFE  0E00               	movlw	0
  7615  000B00  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7616  000B02  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7617  000B04  0E00               	movlw	0
  7618  000B06  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7619  000B08  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7620  000B0A  ECC1  F043         	call	_internalFlash_pageFromAddress	;wreg free
  7621  000B0E  0100               	movlb	0	; () banked
  7622  000B10  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7623  000B12  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  7624  000B14  E12A               	bnz	l14866
  7625  000B16  519A               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7626  000B18  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  7627  000B1A  A4D8               	btfss	status,2,c
  7628  000B1C  D026               	goto	l2413
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;bootloader.c: 392: {;bootloader.c: 393: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  7632  000B1E  5197               	movf	__bootloader_program@cntr& (0+255),w,b
  7633  000B20  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  7634  000B22  6E09               	movwf	internalFlash_addressWithinPage@address,c
  7635  000B24  5198               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7636  000B26  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7637  000B28  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  7638  000B2A  0E00               	movlw	0
  7639  000B2C  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7640  000B2E  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  7641  000B30  0E00               	movlw	0
  7642  000B32  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7643  000B34  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  7644  000B36  C099  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  7645  000B3A  C09A  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  7646  000B3E  EC87  F03B         	call	_internalFlash_addressWithinPage	;wreg free
  7647  000B42  C009  F06C         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  7648  000B46  C00A  F06D         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  7649                           
  7650                           ;bootloader.c: 394: buffer[address_within_page] = hex_file_entry.data[cntr];
  7651  000B4A  0EC0               	movlw	low (_hex_file_entry+5)
  7652  000B4C  0100               	movlb	0	; () banked
  7653  000B4E  2597               	addwf	__bootloader_program@cntr& (0+255),w,b
  7654  000B50  6ED9               	movwf	fsr2l,c
  7655  000B52  0E01               	movlw	high (_hex_file_entry+5)
  7656  000B54  2198               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  7657  000B56  6EDA               	movwf	fsr2h,c
  7658  000B58  516C               	movf	__bootloader_program@address_within_page& (0+255),w,b
  7659  000B5A  2568               	addwf	__bootloader_program@buffer& (0+255),w,b
  7660  000B5C  6EE1               	movwf	fsr1l,c
  7661  000B5E  516D               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  7662  000B60  2169               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  7663  000B62  6EE2               	movwf	fsr1h,c
  7664  000B64  CFDF FFE7          	movff	indf2,indf1
  7665                           
  7666                           ;bootloader.c: 395: }
  7667  000B68  D01E               	goto	l2414
  7668  000B6A                     l2413:
  7669  000B6A                     l14866:
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;bootloader.c: 396: else;bootloader.c: 397: {;bootloader.c: 399: hex_file_offset -= retu
      +                          rn_value;
  7673  000B6A  518E               	movf	__bootloader_program@return_value& (0+255),w,b
  7674  000B6C  5FCF               	subwf	_hex_file_offset& (0+255),f,b
  7675  000B6E  518F               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7676  000B70  5BD0               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  7677  000B72  5190               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7678  000B74  5BD1               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  7679  000B76  5191               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7680  000B78  5BD2               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;bootloader.c: 400: --hex_file_entries;
  7684  000B7A  0101               	movlb	1	; () banked
  7685  000B7C  0774               	decf	_hex_file_entries& (0+255),f,b
  7686  000B7E  A0D8               	btfss	status,0,c
  7687  000B80  0775               	decf	(_hex_file_entries+1)& (0+255),f,b
  7688                           
  7689                           ; BSR set to: 1
  7690                           ;bootloader.c: 402: start_from_byte_next = cntr;
  7691  000B82  C097  F0DD         	movff	__bootloader_program@cntr,_start_from_byte_next
  7692                           
  7693                           ; BSR set to: 1
  7694                           ;bootloader.c: 404: internalFlash_erasePage(page_to_write);
  7695  000B86  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7696  000B8A  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7697  000B8E  EC62  F041         	call	_internalFlash_erasePage	;wreg free
  7698                           
  7699                           ;bootloader.c: 405: internalFlash_writePage(page_to_write);
  7700  000B92  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7701  000B96  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7702  000B9A  ECA2  F037         	call	_internalFlash_writePage	;wreg free
  7703                           
  7704                           ;bootloader.c: 406: ++flash_pages_written;
  7705  000B9E  0101               	movlb	1	; () banked
  7706  000BA0  4B70               	infsnz	_flash_pages_written& (0+255),f,b
  7707  000BA2  2B71               	incf	(_flash_pages_written+1)& (0+255),f,b
  7708                           
  7709                           ; BSR set to: 1
  7710                           ;bootloader.c: 408: return;
  7711  000BA4  0012               	return	
  7712  000BA6                     l2414:
  7713                           
  7714                           ; BSR set to: 1
  7715  000BA6  0100               	movlb	0	; () banked
  7716  000BA8  4B97               	infsnz	__bootloader_program@cntr& (0+255),f,b
  7717  000BAA  2B98               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  7718  000BAC                     l2411:
  7719                           
  7720                           ; BSR set to: 0
  7721                           
  7722                           ; BSR set to: 0
  7723  000BAC  0101               	movlb	1	; () banked
  7724  000BAE  51BB               	movf	_hex_file_entry& (0+255),w,b
  7725  000BB0  0100               	movlb	0	; () banked
  7726  000BB2  5D97               	subwf	__bootloader_program@cntr& (0+255),w,b
  7727  000BB4  0101               	movlb	1	; () banked
  7728  000BB6  51BC               	movf	(_hex_file_entry+1)& (0+255),w,b
  7729  000BB8  0100               	movlb	0	; () banked
  7730  000BBA  5998               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  7731  000BBC  B0D8               	btfsc	status,0,c
  7732  000BBE  D670               	goto	l2397
  7733  000BC0  D798               	goto	l2412
  7734  000BC2                     
  7735                           ;bootloader.c: 416: if(page_to_write!=0)
  7736                           
  7737                           ; BSR set to: 0
  7738  000BC2  0100               	movlb	0	; () banked
  7739  000BC4  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7740  000BC6  119A               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7741  000BC8  B4D8               	btfsc	status,2,c
  7742  000BCA  0012               	return	
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;bootloader.c: 417: {;bootloader.c: 419: internalFlash_erasePage(page_to_write);
  7746  000BCC  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7747  000BD0  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7748  000BD4  EC62  F041         	call	_internalFlash_erasePage	;wreg free
  7749                           
  7750                           ;bootloader.c: 420: internalFlash_writePage(page_to_write);
  7751  000BD8  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7752  000BDC  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7753  000BE0  ECA2  F037         	call	_internalFlash_writePage	;wreg free
  7754                           
  7755                           ;bootloader.c: 421: ++flash_pages_written;
  7756  000BE4  0101               	movlb	1	; () banked
  7757  000BE6  4B70               	infsnz	_flash_pages_written& (0+255),f,b
  7758  000BE8  2B71               	incf	(_flash_pages_written+1)& (0+255),f,b
  7759                           
  7760                           ; BSR set to: 1
  7761                           ;bootloader.c: 423: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  7762  000BEA  0E70               	movlw	112
  7763  000BEC  0100               	movlb	0	; () banked
  7764  000BEE  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;bootloader.c: 424: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  7768  000BF0  0E70               	movlw	112
  7769  000BF2  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;bootloader.c: 425: };bootloader.c: 427: return;
  7773                           
  7774                           ; BSR set to: 0
  7775  000BF4  0012               	return	
  7776  000BF6                     l2404:
  7777                           
  7778                           ; BSR set to: 0
  7779                           
  7780                           ; BSR set to: 0
  7781  000BF6  0101               	movlb	1	; () banked
  7782  000BF8  51BF               	movf	(_hex_file_entry+4)& (0+255),w,b
  7783                           
  7784                           ; Switch size 1, requested type "space"
  7785                           ; Number of cases is 3, Range of values is 0 to 4
  7786                           ; switch strategies available:
  7787                           ; Name         Instructions Cycles
  7788                           ; simple_byte           10     6 (average)
  7789                           ;	Chosen strategy is simple_byte
  7790  000BFA  0A00               	xorlw	0	; case 0
  7791  000BFC  B4D8               	btfsc	status,2,c
  7792  000BFE  D71D               	goto	l2408
  7793  000C00  0A01               	xorlw	1	; case 1
  7794  000C02  B4D8               	btfsc	status,2,c
  7795  000C04  D7DE               	goto	l2416
  7796  000C06  0A05               	xorlw	5	; case 4
  7797  000C08  B4D8               	btfsc	status,2,c
  7798  000C0A  D6F9               	goto	l2405
  7799                           
  7800                           ; BSR set to: 1
  7801                           
  7802                           ; BSR set to: 1
  7803  000C0C  D649               	goto	l2397
  7804  000C0E                     __end_of__bootloader_program:
  7805                           	opt stack 0
  7806                           tblptru	equ	0xFF8
  7807                           tblptrh	equ	0xFF7
  7808                           tblptrl	equ	0xFF6
  7809                           tablat	equ	0xFF5
  7810                           intcon	equ	0xFF2
  7811                           intcon2	equ	0xFF1
  7812                           intcon3	equ	0xFF0
  7813                           postinc0	equ	0xFEE
  7814                           wreg	equ	0xFE8
  7815                           indf1	equ	0xFE7
  7816                           postdec1	equ	0xFE5
  7817                           plusw1	equ	0xFE3
  7818                           fsr1h	equ	0xFE2
  7819                           fsr1l	equ	0xFE1
  7820                           indf2	equ	0xFDF
  7821                           postinc2	equ	0xFDE
  7822                           plusw2	equ	0xFDB
  7823                           fsr2h	equ	0xFDA
  7824                           fsr2l	equ	0xFD9
  7825                           status	equ	0xFD8
  7826                           
  7827 ;; *************** function _parseHexFileEntry *****************
  7828 ;; Defined at:
  7829 ;;		line 59 in file "hex.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  data            2   11[COMRAM] PTR unsigned char 
  7832 ;;		 -> file_buffer(50), 
  7833 ;;  offset          4   13[COMRAM] unsigned long 
  7834 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  7835 ;;		 -> hex_file_entry(23), 
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;  i               1   27[COMRAM] unsigned char 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  4   11[COMRAM] unsigned long 
  7840 ;; Registers used:
  7841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7847 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7849 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7850 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7851 ;;Total ram usage:       17 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    2
  7854 ;; This function calls:
  7855 ;;		_hexCharsToUint16
  7856 ;;		_hexCharsToUint8
  7857 ;; This function is called by:
  7858 ;;		__bootloader_verify_file
  7859 ;;		__bootloader_program
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text30
  7864  000020                     __ptext30:
  7865                           	opt stack 0
  7866  000020                     _parseHexFileEntry:
  7867                           	opt stack 26
  7868                           
  7869                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  7870                           
  7871                           ;incstack = 0
  7872  000020  500E               	movf	parseHexFileEntry@offset,w,c
  7873  000022  240C               	addwf	parseHexFileEntry@data,w,c
  7874  000024  6ED9               	movwf	fsr2l,c
  7875  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  7876  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7877  00002A  6EDA               	movwf	fsr2h,c
  7878  00002C  0E3A               	movlw	58
  7879  00002E  18DE               	xorwf	postinc2,w,c
  7880  000030  B4D8               	btfsc	status,2,c
  7881  000032  D005               	goto	l2259
  7882                           
  7883                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  7884  000034  680C               	setf	?_parseHexFileEntry,c
  7885  000036  680D               	setf	?_parseHexFileEntry+1,c
  7886  000038  680E               	setf	?_parseHexFileEntry+2,c
  7887  00003A  680F               	setf	?_parseHexFileEntry+3,c
  7888  00003C  0012               	return	
  7889  00003E                     l2259:
  7890                           
  7891                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  7892  00003E  0E02               	movlw	2
  7893  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  7894  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7895  000044  0E00               	movlw	0
  7896  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7897  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7898  00004A  5014               	movf	??_parseHexFileEntry,w,c
  7899  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  7900  00004E  6ED9               	movwf	fsr2l,c
  7901  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  7902  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7903  000054  6EDA               	movwf	fsr2h,c
  7904  000056  50DF               	movf	indf2,w,c
  7905  000058  6E03               	movwf	hexCharsToUint8@c2,c
  7906  00005A  0E01               	movlw	1
  7907  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  7908  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7909  000060  0E00               	movlw	0
  7910  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7911  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7912  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  7913  000068  240C               	addwf	parseHexFileEntry@data,w,c
  7914  00006A  6ED9               	movwf	fsr2l,c
  7915  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  7916  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7917  000070  6EDA               	movwf	fsr2h,c
  7918  000072  50DF               	movf	indf2,w,c
  7919  000074  ECB3  F043         	call	_hexCharsToUint8
  7920  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  7921  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  7922  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7923  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7924  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  7925  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  7926                           
  7927                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  7928  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7929  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7930  000094  0E01               	movlw	1
  7931  000096  50DB               	movf	plusw2,w,c
  7932  000098  E104               	bnz	u10890
  7933  00009A  0E11               	movlw	17
  7934  00009C  5CDE               	subwf	postinc2,w,c
  7935  00009E  A0D8               	btfss	status,0,c
  7936  0000A0  D009               	goto	l2261
  7937  0000A2                     u10890:
  7938                           
  7939                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  7940  0000A2  0EFC               	movlw	252
  7941  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  7942  0000A6  0EFF               	movlw	255
  7943  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  7944  0000AA  0EFF               	movlw	255
  7945  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  7946  0000AE  0EFF               	movlw	255
  7947  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  7948  0000B2  0012               	return	
  7949  0000B4                     l2261:
  7950                           
  7951                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  7952  0000B4  0E04               	movlw	4
  7953  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  7954  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7955  0000BA  0E00               	movlw	0
  7956  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7957  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7958  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  7959  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  7960  0000C4  6ED9               	movwf	fsr2l,c
  7961  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  7962  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7963  0000CA  6EDA               	movwf	fsr2h,c
  7964  0000CC  50DF               	movf	indf2,w,c
  7965  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  7966  0000D0  0E05               	movlw	5
  7967  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  7968  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7969  0000D6  0E00               	movlw	0
  7970  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7971  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7972  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  7973  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  7974  0000E0  6ED9               	movwf	fsr2l,c
  7975  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  7976  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7977  0000E6  6EDA               	movwf	fsr2h,c
  7978  0000E8  50DF               	movf	indf2,w,c
  7979  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  7980  0000EC  0E06               	movlw	6
  7981  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  7982  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  7983  0000F2  0E00               	movlw	0
  7984  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7985  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  7986  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  7987  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  7988  0000FC  6ED9               	movwf	fsr2l,c
  7989  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  7990  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7991  000102  6EDA               	movwf	fsr2h,c
  7992  000104  50DF               	movf	indf2,w,c
  7993  000106  6E05               	movwf	hexCharsToUint16@c4,c
  7994  000108  0E03               	movlw	3
  7995  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  7996  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  7997  00010E  0E00               	movlw	0
  7998  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7999  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  8000  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  8001  000116  240C               	addwf	parseHexFileEntry@data,w,c
  8002  000118  6ED9               	movwf	fsr2l,c
  8003  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  8004  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8005  00011E  6EDA               	movwf	fsr2h,c
  8006  000120  50DF               	movf	indf2,w,c
  8007  000122  EC44  F039         	call	_hexCharsToUint16
  8008  000126  EE20 F002          	lfsr	2,2
  8009  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8010  00012C  26D9               	addwf	fsr2l,f,c
  8011  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8012  000130  22DA               	addwfc	fsr2h,f,c
  8013  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  8014  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  8015                           
  8016                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  8017  00013A  EE20 F004          	lfsr	2,4
  8018  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8019  000140  26D9               	addwf	fsr2l,f,c
  8020  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8021  000144  22DA               	addwfc	fsr2h,f,c
  8022  000146  0E08               	movlw	8
  8023  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  8024  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8025  00014C  0E00               	movlw	0
  8026  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8027  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8028  000152  5014               	movf	??_parseHexFileEntry,w,c
  8029  000154  240C               	addwf	parseHexFileEntry@data,w,c
  8030  000156  6EE1               	movwf	fsr1l,c
  8031  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  8032  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8033  00015C  6EE2               	movwf	fsr1h,c
  8034  00015E  50E7               	movf	indf1,w,c
  8035  000160  6E03               	movwf	hexCharsToUint8@c2,c
  8036  000162  0E07               	movlw	7
  8037  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  8038  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8039  000168  0E00               	movlw	0
  8040  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8041  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8042  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  8043  000170  240C               	addwf	parseHexFileEntry@data,w,c
  8044  000172  6EE1               	movwf	fsr1l,c
  8045  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  8046  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8047  000178  6EE2               	movwf	fsr1h,c
  8048  00017A  50E7               	movf	indf1,w,c
  8049  00017C  ECB3  F043         	call	_hexCharsToUint8
  8050  000180  6EDF               	movwf	indf2,c
  8051                           
  8052                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  8053  000182  0E00               	movlw	0
  8054  000184  6E1C               	movwf	parseHexFileEntry@i,c
  8055  000186  D03D               	goto	l2262
  8056  000188                     
  8057                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  8058  000188  501C               	movf	parseHexFileEntry@i,w,c
  8059  00018A  0D01               	mullw	1
  8060  00018C  0E05               	movlw	5
  8061  00018E  26F3               	addwf	prodl,f,c
  8062  000190  0E00               	movlw	0
  8063  000192  22F4               	addwfc	prodh,f,c
  8064  000194  50F3               	movf	prodl,w,c
  8065  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8066  000198  6ED9               	movwf	fsr2l,c
  8067  00019A  50F4               	movf	prodh,w,c
  8068  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8069  00019E  6EDA               	movwf	fsr2h,c
  8070  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  8071  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8072  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8073  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  8074  0001AA  0E00               	movlw	0
  8075  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8076  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  8077  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  8078  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  8079  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8080  0001B6  0E0A               	movlw	10
  8081  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  8082  0001BA  0E00               	movlw	0
  8083  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8084  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  8085  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  8086  0001C2  6EE1               	movwf	fsr1l,c
  8087  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  8088  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8089  0001C8  6EE2               	movwf	fsr1h,c
  8090  0001CA  50E7               	movf	indf1,w,c
  8091  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  8092  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  8093  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8094  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8095  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8096  0001D8  0E00               	movlw	0
  8097  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8098  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  8099  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  8100  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  8101  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8102  0001E4  0E09               	movlw	9
  8103  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8104  0001E8  0E00               	movlw	0
  8105  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8106  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  8107  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  8108  0001F0  6EE1               	movwf	fsr1l,c
  8109  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  8110  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8111  0001F6  6EE2               	movwf	fsr1h,c
  8112  0001F8  50E7               	movf	indf1,w,c
  8113  0001FA  ECB3  F043         	call	_hexCharsToUint8
  8114  0001FE  6EDF               	movwf	indf2,c
  8115  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  8116  000202                     l2262:
  8117  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8118  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8119  00020A  501C               	movf	parseHexFileEntry@i,w,c
  8120  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8121  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8122  000210  50DE               	movf	postinc2,w,c
  8123  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8124  000214  50DE               	movf	postinc2,w,c
  8125  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8126  000218  A0D8               	btfss	status,0,c
  8127  00021A  D7B6               	goto	l2263
  8128                           
  8129                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  8130  00021C  EE20 F015          	lfsr	2,21
  8131  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8132  000222  26D9               	addwf	fsr2l,f,c
  8133  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8134  000226  22DA               	addwfc	fsr2h,f,c
  8135  000228  501C               	movf	parseHexFileEntry@i,w,c
  8136  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8137  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8138  000230  2614               	addwf	??_parseHexFileEntry,f,c
  8139  000232  0E00               	movlw	0
  8140  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8141  000236  500E               	movf	parseHexFileEntry@offset,w,c
  8142  000238  2614               	addwf	??_parseHexFileEntry,f,c
  8143  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8144  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8145  00023E  0E0A               	movlw	10
  8146  000240  2614               	addwf	??_parseHexFileEntry,f,c
  8147  000242  0E00               	movlw	0
  8148  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8149  000246  5014               	movf	??_parseHexFileEntry,w,c
  8150  000248  240C               	addwf	parseHexFileEntry@data,w,c
  8151  00024A  6EE1               	movwf	fsr1l,c
  8152  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  8153  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8154  000250  6EE2               	movwf	fsr1h,c
  8155  000252  50E7               	movf	indf1,w,c
  8156  000254  6E03               	movwf	hexCharsToUint8@c2,c
  8157  000256  501C               	movf	parseHexFileEntry@i,w,c
  8158  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8159  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8160  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8161  000260  0E00               	movlw	0
  8162  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8163  000264  500E               	movf	parseHexFileEntry@offset,w,c
  8164  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  8165  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  8166  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8167  00026C  0E09               	movlw	9
  8168  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8169  000270  0E00               	movlw	0
  8170  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8171  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  8172  000276  240C               	addwf	parseHexFileEntry@data,w,c
  8173  000278  6EE1               	movwf	fsr1l,c
  8174  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  8175  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8176  00027E  6EE2               	movwf	fsr1h,c
  8177  000280  50E7               	movf	indf1,w,c
  8178  000282  ECB3  F043         	call	_hexCharsToUint8
  8179  000286  6EDF               	movwf	indf2,c
  8180                           
  8181                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  8182  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8183  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8184  000290  EE10 F016          	lfsr	1,22
  8185  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8186  000296  26E1               	addwf	fsr1l,f,c
  8187  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8188  00029A  22E2               	addwfc	fsr1h,f,c
  8189  00029C  CFDF FFE7          	movff	indf2,indf1
  8190                           
  8191                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  8192  0002A0  EE20 F002          	lfsr	2,2
  8193  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8194  0002A6  26D9               	addwf	fsr2l,f,c
  8195  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8196  0002AA  22DA               	addwfc	fsr2h,f,c
  8197  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  8198  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  8199  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  8200  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  8201  0002BA  EE20 F016          	lfsr	2,22
  8202  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8203  0002C0  26D9               	addwf	fsr2l,f,c
  8204  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8205  0002C4  22DA               	addwfc	fsr2h,f,c
  8206  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  8207  0002C8  26DF               	addwf	indf2,f,c
  8208                           
  8209                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  8210  0002CA  EE20 F002          	lfsr	2,2
  8211  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8212  0002D0  26D9               	addwf	fsr2l,f,c
  8213  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8214  0002D4  22DA               	addwfc	fsr2h,f,c
  8215  0002D6  50DF               	movf	indf2,w,c
  8216  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8217  0002DA  EE20 F016          	lfsr	2,22
  8218  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8219  0002E0  26D9               	addwf	fsr2l,f,c
  8220  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8221  0002E4  22DA               	addwfc	fsr2h,f,c
  8222  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  8223  0002E8  26DF               	addwf	indf2,f,c
  8224                           
  8225                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  8226  0002EA  EE20 F004          	lfsr	2,4
  8227  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8228  0002F0  26D9               	addwf	fsr2l,f,c
  8229  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8230  0002F4  22DA               	addwfc	fsr2h,f,c
  8231  0002F6  50DF               	movf	indf2,w,c
  8232  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8233  0002FA  EE20 F016          	lfsr	2,22
  8234  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8235  000300  26D9               	addwf	fsr2l,f,c
  8236  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8237  000304  22DA               	addwfc	fsr2h,f,c
  8238  000306  5014               	movf	??_parseHexFileEntry,w,c
  8239  000308  26DF               	addwf	indf2,f,c
  8240                           
  8241                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  8242  00030A  0E00               	movlw	0
  8243  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  8244  00030E  D017               	goto	l2265
  8245  000310                     
  8246                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  8247  000310  501C               	movf	parseHexFileEntry@i,w,c
  8248  000312  0D01               	mullw	1
  8249  000314  0E05               	movlw	5
  8250  000316  26F3               	addwf	prodl,f,c
  8251  000318  0E00               	movlw	0
  8252  00031A  22F4               	addwfc	prodh,f,c
  8253  00031C  50F3               	movf	prodl,w,c
  8254  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8255  000320  6ED9               	movwf	fsr2l,c
  8256  000322  50F4               	movf	prodh,w,c
  8257  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8258  000326  6EDA               	movwf	fsr2h,c
  8259  000328  50DF               	movf	indf2,w,c
  8260  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8261  00032C  EE20 F016          	lfsr	2,22
  8262  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8263  000332  26D9               	addwf	fsr2l,f,c
  8264  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8265  000336  22DA               	addwfc	fsr2h,f,c
  8266  000338  5014               	movf	??_parseHexFileEntry,w,c
  8267  00033A  26DF               	addwf	indf2,f,c
  8268  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  8269  00033E                     l2265:
  8270  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8271  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8272  000346  501C               	movf	parseHexFileEntry@i,w,c
  8273  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8274  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8275  00034C  50DE               	movf	postinc2,w,c
  8276  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8277  000350  50DE               	movf	postinc2,w,c
  8278  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8279  000354  A0D8               	btfss	status,0,c
  8280  000356  D7DC               	goto	l2266
  8281                           
  8282                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  8283  000358  EE20 F015          	lfsr	2,21
  8284  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8285  00035E  26D9               	addwf	fsr2l,f,c
  8286  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8287  000362  22DA               	addwfc	fsr2h,f,c
  8288  000364  50DF               	movf	indf2,w,c
  8289  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8290  000368  EE20 F016          	lfsr	2,22
  8291  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8292  00036E  26D9               	addwf	fsr2l,f,c
  8293  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8294  000372  22DA               	addwfc	fsr2h,f,c
  8295  000374  5014               	movf	??_parseHexFileEntry,w,c
  8296  000376  26DF               	addwf	indf2,f,c
  8297                           
  8298                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  8299  000378  EE20 F016          	lfsr	2,22
  8300  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8301  00037E  26D9               	addwf	fsr2l,f,c
  8302  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8303  000382  22DA               	addwfc	fsr2h,f,c
  8304  000384  50DF               	movf	indf2,w,c
  8305  000386  B4D8               	btfsc	status,2,c
  8306  000388  D009               	goto	l2268
  8307                           
  8308                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  8309  00038A  0EFE               	movlw	254
  8310  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  8311  00038E  0EFF               	movlw	255
  8312  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  8313  000392  0EFF               	movlw	255
  8314  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  8315  000396  0EFF               	movlw	255
  8316  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  8317  00039A  0012               	return	
  8318  00039C                     l2268:
  8319                           
  8320                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  8321  00039C  EE20 F004          	lfsr	2,4
  8322  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8323  0003A2  26D9               	addwf	fsr2l,f,c
  8324  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8325  0003A6  22DA               	addwfc	fsr2h,f,c
  8326  0003A8  04DE               	decf	postinc2,w,c
  8327  0003AA  A4D8               	btfss	status,2,c
  8328  0003AC  D009               	goto	l2269
  8329                           
  8330                           ;hex.c: 110: {;hex.c: 112: return 0;
  8331  0003AE  0E00               	movlw	0
  8332  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  8333  0003B2  0E00               	movlw	0
  8334  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  8335  0003B6  0E00               	movlw	0
  8336  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  8337  0003BA  0E00               	movlw	0
  8338  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  8339                           
  8340                           ;hex.c: 113: }
  8341  0003BE  0012               	return	
  8342  0003C0                     l2269:
  8343                           
  8344                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  8345  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  8346  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8347  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8348  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  8349  0003CA  0E00               	movlw	0
  8350  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8351  0003CE  0E0B               	movlw	11
  8352  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  8353  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8354  0003D4  0E00               	movlw	0
  8355  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  8356  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8357  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  8358  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  8359  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  8360  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  8361  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8362  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  8363  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  8364  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  8365  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8366  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  8367  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8368  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  8369  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8370                           
  8371                           ;hex.c: 117: if (data[++offset] == ':')
  8372  0003F4  0E01               	movlw	1
  8373  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  8374  0003F8  0E00               	movlw	0
  8375  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8376  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8377  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8378  000400  500E               	movf	parseHexFileEntry@offset,w,c
  8379  000402  240C               	addwf	parseHexFileEntry@data,w,c
  8380  000404  6ED9               	movwf	fsr2l,c
  8381  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  8382  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8383  00040A  6EDA               	movwf	fsr2h,c
  8384  00040C  0E3A               	movlw	58
  8385  00040E  18DE               	xorwf	postinc2,w,c
  8386  000410  A4D8               	btfss	status,2,c
  8387  000412  D009               	goto	l2271
  8388                           
  8389                           ;hex.c: 118: {;hex.c: 119: return offset;
  8390  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8391  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8392  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8393  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8394                           
  8395                           ;hex.c: 120: }
  8396  000424  0012               	return	
  8397  000426                     l2271:
  8398                           
  8399                           ;hex.c: 121: else if (data[++offset] == ':')
  8400  000426  0E01               	movlw	1
  8401  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  8402  00042A  0E00               	movlw	0
  8403  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8404  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8405  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8406  000432  500E               	movf	parseHexFileEntry@offset,w,c
  8407  000434  240C               	addwf	parseHexFileEntry@data,w,c
  8408  000436  6ED9               	movwf	fsr2l,c
  8409  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  8410  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8411  00043C  6EDA               	movwf	fsr2h,c
  8412  00043E  0E3A               	movlw	58
  8413  000440  18DE               	xorwf	postinc2,w,c
  8414  000442  A4D8               	btfss	status,2,c
  8415  000444  D009               	goto	l2273
  8416                           
  8417                           ;hex.c: 122: {;hex.c: 123: return offset;
  8418  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8419  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8420  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8421  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8422                           
  8423                           ;hex.c: 124: }
  8424  000456  0012               	return	
  8425  000458                     l2273:
  8426                           
  8427                           ;hex.c: 125: else if (data[++offset] == ':')
  8428  000458  0E01               	movlw	1
  8429  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  8430  00045C  0E00               	movlw	0
  8431  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8432  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8433  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8434  000464  500E               	movf	parseHexFileEntry@offset,w,c
  8435  000466  240C               	addwf	parseHexFileEntry@data,w,c
  8436  000468  6ED9               	movwf	fsr2l,c
  8437  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8438  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8439  00046E  6EDA               	movwf	fsr2h,c
  8440  000470  0E3A               	movlw	58
  8441  000472  18DE               	xorwf	postinc2,w,c
  8442  000474  A4D8               	btfss	status,2,c
  8443  000476  D009               	goto	l2275
  8444                           
  8445                           ;hex.c: 126: {;hex.c: 127: return offset;
  8446  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8447  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8448  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8449  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8450                           
  8451                           ;hex.c: 128: }
  8452  000488  0012               	return	
  8453  00048A                     l2275:
  8454                           
  8455                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  8456  00048A  0EFD               	movlw	253
  8457  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  8458  00048E  0EFF               	movlw	255
  8459  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  8460  000492  0EFF               	movlw	255
  8461  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  8462  000496  0EFF               	movlw	255
  8463  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  8464  00049A  0012               	return	
  8465  00049C                     __end_of_parseHexFileEntry:
  8466                           	opt stack 0
  8467                           tblptru	equ	0xFF8
  8468                           tblptrh	equ	0xFF7
  8469                           tblptrl	equ	0xFF6
  8470                           tablat	equ	0xFF5
  8471                           prodh	equ	0xFF4
  8472                           prodl	equ	0xFF3
  8473                           intcon	equ	0xFF2
  8474                           intcon2	equ	0xFF1
  8475                           intcon3	equ	0xFF0
  8476                           postinc0	equ	0xFEE
  8477                           wreg	equ	0xFE8
  8478                           indf1	equ	0xFE7
  8479                           postdec1	equ	0xFE5
  8480                           plusw1	equ	0xFE3
  8481                           fsr1h	equ	0xFE2
  8482                           fsr1l	equ	0xFE1
  8483                           indf2	equ	0xFDF
  8484                           postinc2	equ	0xFDE
  8485                           postdec2	equ	0xFDD
  8486                           plusw2	equ	0xFDB
  8487                           fsr2h	equ	0xFDA
  8488                           fsr2l	equ	0xFD9
  8489                           status	equ	0xFD8
  8490                           
  8491 ;; *************** function _hexCharsToUint8 *****************
  8492 ;; Defined at:
  8493 ;;		line 42 in file "hex.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;  c1              1    wreg     unsigned char 
  8496 ;;  c2              1    2[COMRAM] unsigned char 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;  c1              1    4[COMRAM] unsigned char 
  8499 ;;  retVal          1    5[COMRAM] unsigned char 
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      unsigned char 
  8502 ;; Registers used:
  8503 ;;		wreg, status,2, status,0, cstack
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8509 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8512 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8513 ;;Total ram usage:        4 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; Hardware stack levels required when called:    1
  8516 ;; This function calls:
  8517 ;;		_hexCharToUint8
  8518 ;; This function is called by:
  8519 ;;		_parseHexFileEntry
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text31
  8524  008766                     __ptext31:
  8525                           	opt stack 0
  8526  008766                     _hexCharsToUint8:
  8527                           	opt stack 26
  8528                           
  8529                           ;incstack = 0
  8530                           ;hexCharsToUint8@c1 stored from wreg
  8531  008766  6E05               	movwf	hexCharsToUint8@c1,c
  8532                           
  8533                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  8534  008768  5005               	movf	hexCharsToUint8@c1,w,c
  8535  00876A  EC71  F042         	call	_hexCharToUint8
  8536  00876E  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  8537  008770  3804               	swapf	??_hexCharsToUint8,w,c
  8538  008772  0BF0               	andlw	240
  8539  008774  6E06               	movwf	hexCharsToUint8@retVal,c
  8540                           
  8541                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  8542  008776  5003               	movf	hexCharsToUint8@c2,w,c
  8543  008778  EC71  F042         	call	_hexCharToUint8
  8544  00877C  1206               	iorwf	hexCharsToUint8@retVal,f,c
  8545                           
  8546                           ;hex.c: 46: return retVal;
  8547  00877E  5006               	movf	hexCharsToUint8@retVal,w,c
  8548  008780  0012               	return	
  8549  008782                     __end_of_hexCharsToUint8:
  8550                           	opt stack 0
  8551                           tblptru	equ	0xFF8
  8552                           tblptrh	equ	0xFF7
  8553                           tblptrl	equ	0xFF6
  8554                           tablat	equ	0xFF5
  8555                           prodh	equ	0xFF4
  8556                           prodl	equ	0xFF3
  8557                           intcon	equ	0xFF2
  8558                           intcon2	equ	0xFF1
  8559                           intcon3	equ	0xFF0
  8560                           postinc0	equ	0xFEE
  8561                           wreg	equ	0xFE8
  8562                           indf1	equ	0xFE7
  8563                           postdec1	equ	0xFE5
  8564                           plusw1	equ	0xFE3
  8565                           fsr1h	equ	0xFE2
  8566                           fsr1l	equ	0xFE1
  8567                           indf2	equ	0xFDF
  8568                           postinc2	equ	0xFDE
  8569                           postdec2	equ	0xFDD
  8570                           plusw2	equ	0xFDB
  8571                           fsr2h	equ	0xFDA
  8572                           fsr2l	equ	0xFD9
  8573                           status	equ	0xFD8
  8574                           
  8575 ;; *************** function _hexCharsToUint16 *****************
  8576 ;; Defined at:
  8577 ;;		line 49 in file "hex.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  c1              1    wreg     unsigned char 
  8580 ;;  c2              1    2[COMRAM] unsigned char 
  8581 ;;  c3              1    3[COMRAM] unsigned char 
  8582 ;;  c4              1    4[COMRAM] unsigned char 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  c1              1    8[COMRAM] unsigned char 
  8585 ;;  retVal          2    9[COMRAM] unsigned int 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  2    2[COMRAM] unsigned int 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2, status,0, cstack
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8595 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8597 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8598 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;Total ram usage:        9 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:    1
  8602 ;; This function calls:
  8603 ;;		_hexCharToUint8
  8604 ;; This function is called by:
  8605 ;;		_parseHexFileEntry
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           	psect	text32
  8610  007288                     __ptext32:
  8611                           	opt stack 0
  8612  007288                     _hexCharsToUint16:
  8613                           	opt stack 26
  8614                           
  8615                           ;incstack = 0
  8616                           ;hexCharsToUint16@c1 stored from wreg
  8617  007288  6E09               	movwf	hexCharsToUint16@c1,c
  8618                           
  8619                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  8620  00728A  5009               	movf	hexCharsToUint16@c1,w,c
  8621  00728C  EC71  F042         	call	_hexCharToUint8
  8622  007290  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8623  007292  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8624  007294  0E0C               	movlw	12
  8625  007296                     u10355:
  8626  007296  90D8               	bcf	status,0,c
  8627  007298  3606               	rlcf	??_hexCharsToUint16,f,c
  8628  00729A  3607               	rlcf	??_hexCharsToUint16+1,f,c
  8629  00729C  2EE8               	decfsz	wreg,f,c
  8630  00729E  D7FB               	goto	u10355
  8631  0072A0  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  8632  0072A4  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  8633                           
  8634                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  8635  0072A8  5003               	movf	hexCharsToUint16@c2,w,c
  8636  0072AA  EC71  F042         	call	_hexCharToUint8
  8637  0072AE  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8638  0072B0  5006               	movf	??_hexCharsToUint16,w,c
  8639  0072B2  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  8640  0072B4  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8641  0072B6  5007               	movf	??_hexCharsToUint16+1,w,c
  8642  0072B8  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8643  0072BA  5008               	movf	??_hexCharsToUint16+2,w,c
  8644  0072BC  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8645                           
  8646                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  8647  0072BE  5004               	movf	hexCharsToUint16@c3,w,c
  8648  0072C0  EC71  F042         	call	_hexCharToUint8
  8649  0072C4  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8650  0072C6  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8651  0072C8  3A06               	swapf	??_hexCharsToUint16,f,c
  8652  0072CA  3A07               	swapf	??_hexCharsToUint16+1,f,c
  8653  0072CC  0EF0               	movlw	240
  8654  0072CE  1607               	andwf	??_hexCharsToUint16+1,f,c
  8655  0072D0  5006               	movf	??_hexCharsToUint16,w,c
  8656  0072D2  0B0F               	andlw	15
  8657  0072D4  1207               	iorwf	??_hexCharsToUint16+1,f,c
  8658  0072D6  0EF0               	movlw	240
  8659  0072D8  1606               	andwf	??_hexCharsToUint16,f,c
  8660  0072DA  5006               	movf	??_hexCharsToUint16,w,c
  8661  0072DC  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8662  0072DE  5007               	movf	??_hexCharsToUint16+1,w,c
  8663  0072E0  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8664                           
  8665                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  8666  0072E2  5005               	movf	hexCharsToUint16@c4,w,c
  8667  0072E4  EC71  F042         	call	_hexCharToUint8
  8668  0072E8  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8669  0072EA  5006               	movf	??_hexCharsToUint16,w,c
  8670  0072EC  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8671                           
  8672                           ;hex.c: 55: return retVal;
  8673  0072EE  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  8674  0072F2  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  8675  0072F6  0012               	return	
  8676  0072F8                     __end_of_hexCharsToUint16:
  8677                           	opt stack 0
  8678                           tblptru	equ	0xFF8
  8679                           tblptrh	equ	0xFF7
  8680                           tblptrl	equ	0xFF6
  8681                           tablat	equ	0xFF5
  8682                           prodh	equ	0xFF4
  8683                           prodl	equ	0xFF3
  8684                           intcon	equ	0xFF2
  8685                           intcon2	equ	0xFF1
  8686                           intcon3	equ	0xFF0
  8687                           postinc0	equ	0xFEE
  8688                           wreg	equ	0xFE8
  8689                           indf1	equ	0xFE7
  8690                           postdec1	equ	0xFE5
  8691                           plusw1	equ	0xFE3
  8692                           fsr1h	equ	0xFE2
  8693                           fsr1l	equ	0xFE1
  8694                           indf2	equ	0xFDF
  8695                           postinc2	equ	0xFDE
  8696                           postdec2	equ	0xFDD
  8697                           plusw2	equ	0xFDB
  8698                           fsr2h	equ	0xFDA
  8699                           fsr2l	equ	0xFD9
  8700                           status	equ	0xFD8
  8701                           
  8702 ;; *************** function _hexCharToUint8 *****************
  8703 ;; Defined at:
  8704 ;;		line 11 in file "hex.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  c               1    wreg     unsigned char 
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;  c               1    0[COMRAM] unsigned char 
  8709 ;;  ascii           1    1[COMRAM] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  1    wreg      unsigned char 
  8712 ;; Registers used:
  8713 ;;		wreg, status,2, status,0
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8722 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;Total ram usage:        2 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; This function calls:
  8726 ;;		Nothing
  8727 ;; This function is called by:
  8728 ;;		_hexCharsToUint8
  8729 ;;		_hexCharsToUint16
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text33
  8734  0084E2                     __ptext33:
  8735                           	opt stack 0
  8736  0084E2                     _hexCharToUint8:
  8737                           	opt stack 26
  8738                           
  8739                           ;incstack = 0
  8740                           ;hexCharToUint8@c stored from wreg
  8741  0084E2  6E01               	movwf	hexCharToUint8@c,c
  8742                           
  8743                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  8744  0084E4  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  8745                           
  8746                           ;hex.c: 16: if (ascii >= 97)
  8747  0084E8  0E60               	movlw	96
  8748  0084EA  6402               	cpfsgt	hexCharToUint8@ascii,c
  8749  0084EC  D002               	goto	l2244
  8750                           
  8751                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  8752  0084EE  0E57               	movlw	87
  8753  0084F0  D006               	goto	L3
  8754  0084F2                     l2244:
  8755                           
  8756                           ;hex.c: 21: else if (ascii >= 65)
  8757  0084F2  0E40               	movlw	64
  8758  0084F4  6402               	cpfsgt	hexCharToUint8@ascii,c
  8759  0084F6  D002               	goto	l2246
  8760                           
  8761                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  8762  0084F8  0E37               	movlw	55
  8763  0084FA  D001               	goto	L3
  8764  0084FC                     l2246:
  8765                           
  8766                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  8767  0084FC  0E30               	movlw	48
  8768  0084FE                     L3:
  8769  0084FE  5E02               	subwf	hexCharToUint8@ascii,f,c
  8770                           
  8771                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  8772  008500  0E0F               	movlw	15
  8773  008502  6402               	cpfsgt	hexCharToUint8@ascii,c
  8774  008504  D002               	goto	l2248
  8775                           
  8776                           ;hex.c: 32: {;hex.c: 33: return 0;
  8777  008506  0E00               	movlw	0
  8778                           
  8779                           ;hex.c: 34: }
  8780  008508  0012               	return	
  8781  00850A                     l2248:
  8782                           
  8783                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  8784  00850A  5002               	movf	hexCharToUint8@ascii,w,c
  8785  00850C  0012               	return	
  8786  00850E                     __end_of_hexCharToUint8:
  8787                           	opt stack 0
  8788                           tblptru	equ	0xFF8
  8789                           tblptrh	equ	0xFF7
  8790                           tblptrl	equ	0xFF6
  8791                           tablat	equ	0xFF5
  8792                           prodh	equ	0xFF4
  8793                           prodl	equ	0xFF3
  8794                           intcon	equ	0xFF2
  8795                           intcon2	equ	0xFF1
  8796                           intcon3	equ	0xFF0
  8797                           postinc0	equ	0xFEE
  8798                           wreg	equ	0xFE8
  8799                           indf1	equ	0xFE7
  8800                           postdec1	equ	0xFE5
  8801                           plusw1	equ	0xFE3
  8802                           fsr1h	equ	0xFE2
  8803                           fsr1l	equ	0xFE1
  8804                           indf2	equ	0xFDF
  8805                           postinc2	equ	0xFDE
  8806                           postdec2	equ	0xFDD
  8807                           plusw2	equ	0xFDB
  8808                           fsr2h	equ	0xFDA
  8809                           fsr2l	equ	0xFD9
  8810                           status	equ	0xFD8
  8811                           
  8812 ;; *************** function _internalFlash_writePage *****************
  8813 ;; Defined at:
  8814 ;;		line 63 in file "internal_flash.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;  page            2    2[COMRAM] unsigned int 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;  address         4    4[COMRAM] unsigned long 
  8819 ;;  cntr            2    8[COMRAM] unsigned int 
  8820 ;;  byte_cntr       1   11[COMRAM] unsigned char 
  8821 ;;  block_cntr      1   10[COMRAM] unsigned char 
  8822 ;;  i               1    0        unsigned char 
  8823 ;;  gie             1    0        unsigned char 
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8834 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8836 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8837 ;;Total ram usage:       10 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    1
  8840 ;; This function calls:
  8841 ;;		__internalFlash_unlockAndActivate
  8842 ;; This function is called by:
  8843 ;;		__bootloader_program
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text34
  8848  006F44                     __ptext34:
  8849                           	opt stack 0
  8850  006F44                     _internalFlash_writePage:
  8851                           	opt stack 27
  8852                           
  8853                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
  8854                           
  8855                           ;incstack = 0
  8856  006F44  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
  8857  006F48  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
  8858  006F4C  6A07               	clrf	internalFlash_writePage@address+2,c
  8859  006F4E  6A08               	clrf	internalFlash_writePage@address+3,c
  8860                           
  8861                           ;internal_flash.c: 74: address <<= 10;
  8862  006F50  0E0A               	movlw	10
  8863  006F52                     u11065:
  8864  006F52  90D8               	bcf	status,0,c
  8865  006F54  3605               	rlcf	internalFlash_writePage@address,f,c
  8866  006F56  3606               	rlcf	internalFlash_writePage@address+1,f,c
  8867  006F58  3607               	rlcf	internalFlash_writePage@address+2,f,c
  8868  006F5A  3608               	rlcf	internalFlash_writePage@address+3,f,c
  8869  006F5C  2EE8               	decfsz	wreg,f,c
  8870  006F5E  D7F9               	goto	u11065
  8871                           
  8872                           ;internal_flash.c: 76: TBLPTR = address;
  8873  006F60  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  8874  006F64  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  8875  006F68  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  8876                           
  8877                           ;internal_flash.c: 79: cntr = 0;
  8878  006F6C  0E00               	movlw	0
  8879  006F6E  6E0A               	movwf	internalFlash_writePage@cntr+1,c
  8880  006F70  0E00               	movlw	0
  8881  006F72  6E09               	movwf	internalFlash_writePage@cntr,c
  8882                           
  8883                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
  8884  006F74  0E00               	movlw	0
  8885  006F76  6E0B               	movwf	internalFlash_writePage@block_cntr,c
  8886  006F78                     l13930:
  8887  006F78  0E0F               	movlw	15
  8888  006F7A  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
  8889  006F7C  D001               	goto	l2496
  8890  006F7E  0012               	return	
  8891  006F80                     l2496:
  8892                           
  8893                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  8894  006F80  0E00               	movlw	0
  8895  006F82  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
  8896  006F84                     l13936:
  8897  006F84  0E3F               	movlw	63
  8898  006F86  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
  8899  006F88  D001               	goto	l2498
  8900  006F8A  D00D               	goto	u11090
  8901  006F8C                     l2498:
  8902                           
  8903                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
  8904  006F8C  0E00               	movlw	low _pageBuffer
  8905  006F8E  2409               	addwf	internalFlash_writePage@cntr,w,c
  8906  006F90  6ED9               	movwf	fsr2l,c
  8907  006F92  0E08               	movlw	high _pageBuffer
  8908  006F94  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
  8909  006F96  6EDA               	movwf	fsr2h,c
  8910  006F98  50DF               	movf	indf2,w,c
  8911  006F9A  6EF5               	movwf	tablat,c	;volatile
  8912  006F9C  000D               	tblwt		*+	;# 
  8913                           
  8914                           ;internal_flash.c: 91: ++cntr;
  8915  006F9E  4A09               	infsnz	internalFlash_writePage@cntr,f,c
  8916  006FA0  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
  8917  006FA2  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
  8918  006FA4  D7EF               	goto	l13936
  8919  006FA6                     u11090:
  8920  006FA6  000A               	tblrd		*-	;# 
  8921                           
  8922                           ;internal_flash.c: 98: EECON1 = 0x84;
  8923  006FA8  0E84               	movlw	132
  8924  006FAA  6EA6               	movwf	4006,c	;volsfr
  8925                           
  8926                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  8927  006FAC  0EB5               	movlw	181
  8928  006FAE  ECC8  F042         	call	__internalFlash_unlockAndActivate
  8929                           
  8930                           ;internal_flash.c: 100: TBLPTR++;
  8931  006FB2  0E01               	movlw	1
  8932  006FB4  26F6               	addwf	tblptrl,f,c	;volatile
  8933  006FB6  0E00               	movlw	0
  8934  006FB8  22F7               	addwfc	tblptrh,f,c	;volatile
  8935  006FBA  0E00               	movlw	0
  8936  006FBC  22F8               	addwfc	tblptru,f,c	;volatile
  8937  006FBE  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
  8938  006FC0  D7DB               	goto	l13930
  8939  006FC2                     __end_of_internalFlash_writePage:
  8940                           	opt stack 0
  8941                           tblptru	equ	0xFF8
  8942                           tblptrh	equ	0xFF7
  8943                           tblptrl	equ	0xFF6
  8944                           tablat	equ	0xFF5
  8945                           prodh	equ	0xFF4
  8946                           prodl	equ	0xFF3
  8947                           intcon	equ	0xFF2
  8948                           intcon2	equ	0xFF1
  8949                           intcon3	equ	0xFF0
  8950                           postinc0	equ	0xFEE
  8951                           wreg	equ	0xFE8
  8952                           indf1	equ	0xFE7
  8953                           postdec1	equ	0xFE5
  8954                           plusw1	equ	0xFE3
  8955                           fsr1h	equ	0xFE2
  8956                           fsr1l	equ	0xFE1
  8957                           indf2	equ	0xFDF
  8958                           postinc2	equ	0xFDE
  8959                           postdec2	equ	0xFDD
  8960                           plusw2	equ	0xFDB
  8961                           fsr2h	equ	0xFDA
  8962                           fsr2l	equ	0xFD9
  8963                           status	equ	0xFD8
  8964                           
  8965 ;; *************** function _internalFlash_readPage *****************
  8966 ;; Defined at:
  8967 ;;		line 37 in file "internal_flash.c"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;  page            2   21[COMRAM] unsigned int 
  8970 ;; Auto vars:     Size  Location     Type
  8971 ;;  address         4   23[COMRAM] unsigned long 
  8972 ;; Return value:  Size  Location     Type
  8973 ;;                  1    wreg      void 
  8974 ;; Registers used:
  8975 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8976 ;; Tracked objects:
  8977 ;;		On entry : 0/0
  8978 ;;		On exit  : 0/0
  8979 ;;		Unchanged: 0/0
  8980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8982 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8984 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8985 ;;Total ram usage:        6 bytes
  8986 ;; Hardware stack levels used:    1
  8987 ;; Hardware stack levels required when called:    2
  8988 ;; This function calls:
  8989 ;;		_internalFlash_addressFromPage
  8990 ;;		_internalFlash_read
  8991 ;; This function is called by:
  8992 ;;		__bootloader_program
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text35
  8997  007FF2                     __ptext35:
  8998                           	opt stack 0
  8999  007FF2                     _internalFlash_readPage:
  9000                           	opt stack 26
  9001                           
  9002                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  9003                           
  9004                           ;incstack = 0
  9005  007FF2  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  9006  007FF6  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  9007  007FFA  EC44  F042         	call	_internalFlash_addressFromPage	;wreg free
  9008  007FFE  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  9009  008002  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  9010  008006  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  9011  00800A  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  9012                           
  9013                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  9014  00800E  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  9015  008012  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  9016  008016  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  9017  00801A  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  9018  00801E  0E04               	movlw	4
  9019  008020  6E13               	movwf	internalFlash_read@data_length+1,c
  9020  008022  0E00               	movlw	0
  9021  008024  6E12               	movwf	internalFlash_read@data_length,c
  9022  008026  0E00               	movlw	low _pageBuffer
  9023  008028  6E14               	movwf	internalFlash_read@buffer,c
  9024  00802A  0E08               	movlw	high _pageBuffer
  9025  00802C  6E15               	movwf	internalFlash_read@buffer+1,c
  9026  00802E  EC2D  F041         	call	_internalFlash_read	;wreg free
  9027  008032  0012               	return		;funcret
  9028  008034                     __end_of_internalFlash_readPage:
  9029                           	opt stack 0
  9030                           tblptru	equ	0xFF8
  9031                           tblptrh	equ	0xFF7
  9032                           tblptrl	equ	0xFF6
  9033                           tablat	equ	0xFF5
  9034                           prodh	equ	0xFF4
  9035                           prodl	equ	0xFF3
  9036                           intcon	equ	0xFF2
  9037                           intcon2	equ	0xFF1
  9038                           intcon3	equ	0xFF0
  9039                           postinc0	equ	0xFEE
  9040                           wreg	equ	0xFE8
  9041                           indf1	equ	0xFE7
  9042                           postdec1	equ	0xFE5
  9043                           plusw1	equ	0xFE3
  9044                           fsr1h	equ	0xFE2
  9045                           fsr1l	equ	0xFE1
  9046                           indf2	equ	0xFDF
  9047                           postinc2	equ	0xFDE
  9048                           postdec2	equ	0xFDD
  9049                           plusw2	equ	0xFDB
  9050                           fsr2h	equ	0xFDA
  9051                           fsr2l	equ	0xFD9
  9052                           status	equ	0xFD8
  9053                           
  9054 ;; *************** function _internalFlash_read *****************
  9055 ;; Defined at:
  9056 ;;		line 144 in file "internal_flash.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  address         4   13[COMRAM] unsigned long 
  9059 ;;  data_length     2   17[COMRAM] unsigned int 
  9060 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  9061 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  9062 ;; Auto vars:     Size  Location     Type
  9063 ;;		None
  9064 ;; Return value:  Size  Location     Type
  9065 ;;                  1    wreg      unsigned char 
  9066 ;; Registers used:
  9067 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9068 ;; Tracked objects:
  9069 ;;		On entry : 0/0
  9070 ;;		On exit  : 0/0
  9071 ;;		Unchanged: 0/0
  9072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9073 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9076 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9077 ;;Total ram usage:        8 bytes
  9078 ;; Hardware stack levels used:    1
  9079 ;; Hardware stack levels required when called:    1
  9080 ;; This function calls:
  9081 ;;		_memcpy
  9082 ;; This function is called by:
  9083 ;;		_internalFlash_readPage
  9084 ;;		__bootloader_verify_program_memory
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           	psect	text36
  9089  00825A                     __ptext36:
  9090                           	opt stack 0
  9091  00825A                     _internalFlash_read:
  9092                           	opt stack 26
  9093                           
  9094                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
  9095                           
  9096                           ;incstack = 0
  9097  00825A  5011               	movf	internalFlash_read@address+3,w,c
  9098  00825C  E118               	bnz	l2512
  9099  00825E  280E               	incf	internalFlash_read@address,w,c
  9100  008260  0EFF               	movlw	255
  9101  008262  580F               	subwfb	internalFlash_read@address+1,w,c
  9102  008264  0E01               	movlw	1
  9103  008266  5810               	subwfb	internalFlash_read@address+2,w,c
  9104  008268  B0D8               	btfsc	status,0,c
  9105  00826A  0012               	return	
  9106                           
  9107                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
  9108                           
  9109                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  9110  00826C  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  9111  008270  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  9112  008274  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  9113  008278  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  9114  00827C  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  9115  008280  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  9116  008284  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  9117  008288  ECF2  F03A         	call	_memcpy	;wreg free
  9118  00828C  0012               	return	
  9119  00828E                     l2512:
  9120  00828E  0012               	return		;funcret
  9121  008290                     __end_of_internalFlash_read:
  9122                           	opt stack 0
  9123                           tblptru	equ	0xFF8
  9124                           tblptrh	equ	0xFF7
  9125                           tblptrl	equ	0xFF6
  9126                           tablat	equ	0xFF5
  9127                           prodh	equ	0xFF4
  9128                           prodl	equ	0xFF3
  9129                           intcon	equ	0xFF2
  9130                           intcon2	equ	0xFF1
  9131                           intcon3	equ	0xFF0
  9132                           postinc0	equ	0xFEE
  9133                           wreg	equ	0xFE8
  9134                           indf1	equ	0xFE7
  9135                           postdec1	equ	0xFE5
  9136                           plusw1	equ	0xFE3
  9137                           fsr1h	equ	0xFE2
  9138                           fsr1l	equ	0xFE1
  9139                           indf2	equ	0xFDF
  9140                           postinc2	equ	0xFDE
  9141                           postdec2	equ	0xFDD
  9142                           plusw2	equ	0xFDB
  9143                           fsr2h	equ	0xFDA
  9144                           fsr2l	equ	0xFD9
  9145                           status	equ	0xFD8
  9146                           
  9147 ;; *************** function _internalFlash_pageFromAddress *****************
  9148 ;; Defined at:
  9149 ;;		line 308 in file "internal_flash.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;  address         4    0[COMRAM] unsigned long 
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;		None
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  2    0[COMRAM] unsigned int 
  9156 ;; Registers used:
  9157 ;;		wreg, status,2, status,0
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9165 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9166 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9167 ;;Total ram usage:        5 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; This function calls:
  9170 ;;		Nothing
  9171 ;; This function is called by:
  9172 ;;		__bootloader_program
  9173 ;; This function uses a non-reentrant model
  9174 ;;
  9175                           
  9176                           	psect	text37
  9177  008782                     __ptext37:
  9178                           	opt stack 0
  9179  008782                     _internalFlash_pageFromAddress:
  9180                           	opt stack 28
  9181                           
  9182                           ;internal_flash.c: 310: address >>= 10;
  9183                           
  9184                           ;incstack = 0
  9185  008782  0E0A               	movlw	10
  9186  008784  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  9187  008786                     u11045:
  9188  008786  90D8               	bcf	status,0,c
  9189  008788  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  9190  00878A  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  9191  00878C  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  9192  00878E  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  9193  008790  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  9194  008792  D7F9               	goto	u11045
  9195                           
  9196                           ;internal_flash.c: 311: return (uint16_t) address;
  9197  008794  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  9198  008798  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  9199  00879C  0012               	return	
  9200  00879E                     __end_of_internalFlash_pageFromAddress:
  9201                           	opt stack 0
  9202                           tblptru	equ	0xFF8
  9203                           tblptrh	equ	0xFF7
  9204                           tblptrl	equ	0xFF6
  9205                           tablat	equ	0xFF5
  9206                           prodh	equ	0xFF4
  9207                           prodl	equ	0xFF3
  9208                           intcon	equ	0xFF2
  9209                           intcon2	equ	0xFF1
  9210                           intcon3	equ	0xFF0
  9211                           postinc0	equ	0xFEE
  9212                           wreg	equ	0xFE8
  9213                           indf1	equ	0xFE7
  9214                           postdec1	equ	0xFE5
  9215                           plusw1	equ	0xFE3
  9216                           fsr1h	equ	0xFE2
  9217                           fsr1l	equ	0xFE1
  9218                           indf2	equ	0xFDF
  9219                           postinc2	equ	0xFDE
  9220                           postdec2	equ	0xFDD
  9221                           plusw2	equ	0xFDB
  9222                           fsr2h	equ	0xFDA
  9223                           fsr2l	equ	0xFD9
  9224                           status	equ	0xFD8
  9225                           
  9226 ;; *************** function _internalFlash_getBuffer *****************
  9227 ;; Defined at:
  9228 ;;		line 32 in file "internal_flash.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;		None
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;		None
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  2    0[COMRAM] PTR unsigned char 
  9235 ;; Registers used:
  9236 ;;		wreg, status,2, status,0
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9246 ;;Total ram usage:        2 bytes
  9247 ;; Hardware stack levels used:    1
  9248 ;; This function calls:
  9249 ;;		Nothing
  9250 ;; This function is called by:
  9251 ;;		__bootloader_program
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           	psect	text38
  9256  008908                     __ptext38:
  9257                           	opt stack 0
  9258  008908                     _internalFlash_getBuffer:
  9259                           	opt stack 28
  9260                           
  9261                           ;internal_flash.c: 34: return pageBuffer;
  9262                           
  9263                           ;incstack = 0
  9264  008908  0E00               	movlw	low _pageBuffer
  9265  00890A  6E01               	movwf	?_internalFlash_getBuffer,c
  9266  00890C  0E08               	movlw	high _pageBuffer
  9267  00890E  6E02               	movwf	?_internalFlash_getBuffer+1,c
  9268  008910  0012               	return	
  9269  008912                     __end_of_internalFlash_getBuffer:
  9270                           	opt stack 0
  9271                           tblptru	equ	0xFF8
  9272                           tblptrh	equ	0xFF7
  9273                           tblptrl	equ	0xFF6
  9274                           tablat	equ	0xFF5
  9275                           prodh	equ	0xFF4
  9276                           prodl	equ	0xFF3
  9277                           intcon	equ	0xFF2
  9278                           intcon2	equ	0xFF1
  9279                           intcon3	equ	0xFF0
  9280                           postinc0	equ	0xFEE
  9281                           wreg	equ	0xFE8
  9282                           indf1	equ	0xFE7
  9283                           postdec1	equ	0xFE5
  9284                           plusw1	equ	0xFE3
  9285                           fsr1h	equ	0xFE2
  9286                           fsr1l	equ	0xFE1
  9287                           indf2	equ	0xFDF
  9288                           postinc2	equ	0xFDE
  9289                           postdec2	equ	0xFDD
  9290                           plusw2	equ	0xFDB
  9291                           fsr2h	equ	0xFDA
  9292                           fsr2l	equ	0xFD9
  9293                           status	equ	0xFD8
  9294                           
  9295 ;; *************** function _internalFlash_erasePage *****************
  9296 ;; Defined at:
  9297 ;;		line 44 in file "internal_flash.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  page            2    2[COMRAM] unsigned int 
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;  address         4    4[COMRAM] unsigned long 
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  1    wreg      void 
  9304 ;; Registers used:
  9305 ;;		wreg, status,2, status,0, cstack
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 0/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9312 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9314 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9315 ;;Total ram usage:        6 bytes
  9316 ;; Hardware stack levels used:    1
  9317 ;; Hardware stack levels required when called:    1
  9318 ;; This function calls:
  9319 ;;		__internalFlash_unlockAndActivate
  9320 ;; This function is called by:
  9321 ;;		__bootloader_program
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           	psect	text39
  9326  0082C4                     __ptext39:
  9327                           	opt stack 0
  9328  0082C4                     _internalFlash_erasePage:
  9329                           	opt stack 27
  9330                           
  9331                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
  9332                           
  9333                           ;incstack = 0
  9334  0082C4  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
  9335  0082C8  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
  9336  0082CC  6A07               	clrf	internalFlash_erasePage@address+2,c
  9337  0082CE  6A08               	clrf	internalFlash_erasePage@address+3,c
  9338                           
  9339                           ;internal_flash.c: 50: address <<= 10;
  9340  0082D0  0E0A               	movlw	10
  9341  0082D2                     u11055:
  9342  0082D2  90D8               	bcf	status,0,c
  9343  0082D4  3605               	rlcf	internalFlash_erasePage@address,f,c
  9344  0082D6  3606               	rlcf	internalFlash_erasePage@address+1,f,c
  9345  0082D8  3607               	rlcf	internalFlash_erasePage@address+2,f,c
  9346  0082DA  3608               	rlcf	internalFlash_erasePage@address+3,f,c
  9347  0082DC  2EE8               	decfsz	wreg,f,c
  9348  0082DE  D7F9               	goto	u11055
  9349                           
  9350                           ;internal_flash.c: 51: TBLPTR = address;
  9351  0082E0  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  9352  0082E4  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  9353  0082E8  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  9354                           
  9355                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
  9356  0082EC  84A6               	bsf	4006,2,c	;volsfr
  9357                           
  9358                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
  9359  0082EE  88A6               	bsf	4006,4,c	;volsfr
  9360                           
  9361                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9362  0082F0  0EB5               	movlw	181
  9363  0082F2  ECC8  F042         	call	__internalFlash_unlockAndActivate
  9364  0082F6  0012               	return		;funcret
  9365  0082F8                     __end_of_internalFlash_erasePage:
  9366                           	opt stack 0
  9367                           tblptru	equ	0xFF8
  9368                           tblptrh	equ	0xFF7
  9369                           tblptrl	equ	0xFF6
  9370                           tablat	equ	0xFF5
  9371                           prodh	equ	0xFF4
  9372                           prodl	equ	0xFF3
  9373                           intcon	equ	0xFF2
  9374                           intcon2	equ	0xFF1
  9375                           intcon3	equ	0xFF0
  9376                           postinc0	equ	0xFEE
  9377                           wreg	equ	0xFE8
  9378                           indf1	equ	0xFE7
  9379                           postdec1	equ	0xFE5
  9380                           plusw1	equ	0xFE3
  9381                           fsr1h	equ	0xFE2
  9382                           fsr1l	equ	0xFE1
  9383                           indf2	equ	0xFDF
  9384                           postinc2	equ	0xFDE
  9385                           postdec2	equ	0xFDD
  9386                           plusw2	equ	0xFDB
  9387                           fsr2h	equ	0xFDA
  9388                           fsr2l	equ	0xFD9
  9389                           status	equ	0xFD8
  9390                           
  9391 ;; *************** function __internalFlash_unlockAndActivate *****************
  9392 ;; Defined at:
  9393 ;;		line 106 in file "internal_flash.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;  UnlockKey       1    wreg     unsigned char 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  9398 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  1    wreg      void 
  9401 ;; Registers used:
  9402 ;;		wreg, status,2, status,0
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9409 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9412 ;;Total ram usage:        2 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; This function calls:
  9415 ;;		Nothing
  9416 ;; This function is called by:
  9417 ;;		_internalFlash_erasePage
  9418 ;;		_internalFlash_writePage
  9419 ;;		_EraseBlock
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           	psect	text40
  9424  008590                     __ptext40:
  9425                           	opt stack 0
  9426  008590                     __internalFlash_unlockAndActivate:
  9427                           	opt stack 27
  9428                           
  9429                           ;incstack = 0
  9430                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  9431  008590  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  9432                           
  9433                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
  9434  008592  0EB5               	movlw	181
  9435  008594  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  9436  008596  B4D8               	btfsc	status,2,c
  9437  008598  D002               	goto	l2503
  9438                           
  9439                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
  9440  00859A  94A6               	bcf	4006,2,c	;volsfr
  9441                           
  9442                           ;internal_flash.c: 118: return;
  9443  00859C  0012               	return	
  9444  00859E                     l2503:
  9445                           
  9446                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
  9447  00859E  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
  9448                           
  9449                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
  9450  0085A2  9EF2               	bcf	intcon,7,c	;volatile
  9451                           
  9452                           ;internal_flash.c: 123: EECON2 = 0x55;
  9453  0085A4  0E55               	movlw	85
  9454  0085A6  6EA7               	movwf	4007,c	;volsfr
  9455                           
  9456                           ;internal_flash.c: 124: EECON2 = 0xAA;
  9457  0085A8  0EAA               	movlw	170
  9458  0085AA  6EA7               	movwf	4007,c	;volsfr
  9459                           
  9460                           ;internal_flash.c: 125: EECON1bits.WR = 1;
  9461  0085AC  82A6               	bsf	4006,1,c	;volsfr
  9462                           
  9463                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
  9464  0085AE  94A6               	bcf	4006,2,c	;volsfr
  9465                           
  9466                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
  9467  0085B0  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
  9468  0085B2  0012               	return	
  9469                           
  9470                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
  9471  0085B4  8EF2               	bsf	intcon,7,c	;volatile
  9472  0085B6  0012               	return	
  9473  0085B8                     __end_of__internalFlash_unlockAndActivate:
  9474                           	opt stack 0
  9475                           tblptru	equ	0xFF8
  9476                           tblptrh	equ	0xFF7
  9477                           tblptrl	equ	0xFF6
  9478                           tablat	equ	0xFF5
  9479                           prodh	equ	0xFF4
  9480                           prodl	equ	0xFF3
  9481                           intcon	equ	0xFF2
  9482                           intcon2	equ	0xFF1
  9483                           intcon3	equ	0xFF0
  9484                           postinc0	equ	0xFEE
  9485                           wreg	equ	0xFE8
  9486                           indf1	equ	0xFE7
  9487                           postdec1	equ	0xFE5
  9488                           plusw1	equ	0xFE3
  9489                           fsr1h	equ	0xFE2
  9490                           fsr1l	equ	0xFE1
  9491                           indf2	equ	0xFDF
  9492                           postinc2	equ	0xFDE
  9493                           postdec2	equ	0xFDD
  9494                           plusw2	equ	0xFDB
  9495                           fsr2h	equ	0xFDA
  9496                           fsr2l	equ	0xFD9
  9497                           status	equ	0xFD8
  9498                           
  9499 ;; *************** function _internalFlash_addressWithinPage *****************
  9500 ;; Defined at:
  9501 ;;		line 322 in file "internal_flash.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;  address         4    8[COMRAM] unsigned long 
  9504 ;;  page            2   12[COMRAM] unsigned int 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;  page_start_a    4   18[COMRAM] unsigned long 
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  2    8[COMRAM] unsigned int 
  9509 ;; Registers used:
  9510 ;;		wreg, status,2, status,0, cstack
  9511 ;; Tracked objects:
  9512 ;;		On entry : 0/0
  9513 ;;		On exit  : 0/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9516 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9517 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9518 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9519 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9520 ;;Total ram usage:       14 bytes
  9521 ;; Hardware stack levels used:    1
  9522 ;; Hardware stack levels required when called:    1
  9523 ;; This function calls:
  9524 ;;		_internalFlash_addressFromPage
  9525 ;; This function is called by:
  9526 ;;		__bootloader_program
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text41
  9531  00770E                     __ptext41:
  9532                           	opt stack 0
  9533  00770E                     _internalFlash_addressWithinPage:
  9534                           	opt stack 27
  9535                           
  9536                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
  9537                           
  9538                           ;incstack = 0
  9539  00770E  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
  9540  007712  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
  9541  007716  EC44  F042         	call	_internalFlash_addressFromPage	;wreg free
  9542  00771A  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
  9543  00771E  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
  9544  007722  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
  9545  007726  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
  9546                           
  9547                           ;internal_flash.c: 326: address = address - page_start_address;
  9548  00772A  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
  9549  00772E  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
  9550  007732  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
  9551  007736  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
  9552  00773A  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
  9553  00773C  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
  9554  00773E  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
  9555  007740  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
  9556  007742  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
  9557  007744  0E00               	movlw	0
  9558  007746  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
  9559  007748  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
  9560  00774A  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
  9561  00774C  5009               	movf	internalFlash_addressWithinPage@address,w,c
  9562  00774E  240F               	addwf	??_internalFlash_addressWithinPage,w,c
  9563  007750  6E09               	movwf	internalFlash_addressWithinPage@address,c
  9564  007752  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
  9565  007754  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
  9566  007756  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  9567  007758  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
  9568  00775A  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
  9569  00775C  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  9570  00775E  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
  9571  007760  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
  9572  007762  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  9573                           
  9574                           ;internal_flash.c: 327: return (uint16_t) address;
  9575  007764  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
  9576  007768  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
  9577  00776C  0012               	return	
  9578  00776E                     __end_of_internalFlash_addressWithinPage:
  9579                           	opt stack 0
  9580                           tblptru	equ	0xFF8
  9581                           tblptrh	equ	0xFF7
  9582                           tblptrl	equ	0xFF6
  9583                           tablat	equ	0xFF5
  9584                           prodh	equ	0xFF4
  9585                           prodl	equ	0xFF3
  9586                           intcon	equ	0xFF2
  9587                           intcon2	equ	0xFF1
  9588                           intcon3	equ	0xFF0
  9589                           postinc0	equ	0xFEE
  9590                           wreg	equ	0xFE8
  9591                           indf1	equ	0xFE7
  9592                           postdec1	equ	0xFE5
  9593                           plusw1	equ	0xFE3
  9594                           fsr1h	equ	0xFE2
  9595                           fsr1l	equ	0xFE1
  9596                           indf2	equ	0xFDF
  9597                           postinc2	equ	0xFDE
  9598                           postdec2	equ	0xFDD
  9599                           plusw2	equ	0xFDB
  9600                           fsr2h	equ	0xFDA
  9601                           fsr2l	equ	0xFD9
  9602                           status	equ	0xFD8
  9603                           
  9604 ;; *************** function _internalFlash_addressFromPage *****************
  9605 ;; Defined at:
  9606 ;;		line 314 in file "internal_flash.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;  page            2    0[COMRAM] unsigned int 
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;  address         4    4[COMRAM] unsigned long 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  4    0[COMRAM] unsigned long 
  9613 ;; Registers used:
  9614 ;;		wreg, status,2, status,0
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9621 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9623 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9624 ;;Total ram usage:        8 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; This function calls:
  9627 ;;		Nothing
  9628 ;; This function is called by:
  9629 ;;		_internalFlash_readPage
  9630 ;;		_internalFlash_addressWithinPage
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text42
  9635  008488                     __ptext42:
  9636                           	opt stack 0
  9637  008488                     _internalFlash_addressFromPage:
  9638                           	opt stack 27
  9639                           
  9640                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
  9641                           
  9642                           ;incstack = 0
  9643  008488  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
  9644  00848C  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
  9645  008490  6A07               	clrf	internalFlash_addressFromPage@address+2,c
  9646  008492  6A08               	clrf	internalFlash_addressFromPage@address+3,c
  9647                           
  9648                           ;internal_flash.c: 318: address <<= 10;
  9649  008494  0E0A               	movlw	10
  9650  008496                     u10375:
  9651  008496  90D8               	bcf	status,0,c
  9652  008498  3605               	rlcf	internalFlash_addressFromPage@address,f,c
  9653  00849A  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
  9654  00849C  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
  9655  00849E  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
  9656  0084A0  2EE8               	decfsz	wreg,f,c
  9657  0084A2  D7F9               	goto	u10375
  9658                           
  9659                           ;internal_flash.c: 319: return address;
  9660  0084A4  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
  9661  0084A8  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
  9662  0084AC  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
  9663  0084B0  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
  9664  0084B4  0012               	return	
  9665  0084B6                     __end_of_internalFlash_addressFromPage:
  9666                           	opt stack 0
  9667                           tblptru	equ	0xFF8
  9668                           tblptrh	equ	0xFF7
  9669                           tblptrl	equ	0xFF6
  9670                           tablat	equ	0xFF5
  9671                           prodh	equ	0xFF4
  9672                           prodl	equ	0xFF3
  9673                           intcon	equ	0xFF2
  9674                           intcon2	equ	0xFF1
  9675                           intcon3	equ	0xFF0
  9676                           postinc0	equ	0xFEE
  9677                           wreg	equ	0xFE8
  9678                           indf1	equ	0xFE7
  9679                           postdec1	equ	0xFE5
  9680                           plusw1	equ	0xFE3
  9681                           fsr1h	equ	0xFE2
  9682                           fsr1l	equ	0xFE1
  9683                           indf2	equ	0xFDF
  9684                           postinc2	equ	0xFDE
  9685                           postdec2	equ	0xFDD
  9686                           plusw2	equ	0xFDB
  9687                           fsr2h	equ	0xFDA
  9688                           fsr2l	equ	0xFD9
  9689                           status	equ	0xFD8
  9690                           
  9691 ;; *************** function __bootloader_check_address *****************
  9692 ;; Defined at:
  9693 ;;		line 103 in file "bootloader.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  address         4    0[COMRAM] unsigned long 
  9696 ;;  dataLength      1    4[COMRAM] unsigned char 
  9697 ;; Auto vars:     Size  Location     Type
  9698 ;;  cntr            1   11[COMRAM] unsigned char 
  9699 ;;  byte_status     1   10[COMRAM] enum E6951
  9700 ;;  worst_case      1    9[COMRAM] enum E6951
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  1    wreg      enum E6951
  9703 ;; Registers used:
  9704 ;;		wreg, status,2, status,0
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9710 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9711 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9712 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9713 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9714 ;;Total ram usage:       12 bytes
  9715 ;; Hardware stack levels used:    1
  9716 ;; This function calls:
  9717 ;;		Nothing
  9718 ;; This function is called by:
  9719 ;;		__bootloader_verify_file
  9720 ;;		__bootloader_program
  9721 ;; This function uses a non-reentrant model
  9722 ;;
  9723                           
  9724                           	psect	text43
  9725  0056F0                     __ptext43:
  9726                           	opt stack 0
  9727  0056F0                     __bootloader_check_address:
  9728                           	opt stack 28
  9729                           
  9730                           ;bootloader.c: 105: addressCheckResult_t byte_status;;bootloader.c: 106: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 107: uint8_t cntr;;bootloader.c: 109: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
  9731                           
  9732                           ;incstack = 0
  9733  0056F0  0E00               	movlw	0
  9734  0056F2  6E0A               	movwf	__bootloader_check_address@worst_case,c
  9735                           
  9736                           ;bootloader.c: 112: for(cntr=0; cntr<dataLength; ++cntr)
  9737  0056F4  0E00               	movlw	0
  9738  0056F6  6E0C               	movwf	__bootloader_check_address@cntr,c
  9739  0056F8  D062               	goto	l2362
  9740  0056FA                     
  9741                           ;bootloader.c: 113: {;bootloader.c: 115: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
  9742  0056FA  500C               	movf	__bootloader_check_address@cntr,w,c
  9743  0056FC  2401               	addwf	__bootloader_check_address@address,w,c
  9744  0056FE  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9745  005700  0E00               	movlw	0
  9746  005702  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9747  005704  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9748  005706  0E00               	movlw	0
  9749  005708  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9750  00570A  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9751  00570C  0E00               	movlw	0
  9752  00570E  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9753  005710  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9754  005712  5009               	movf	??__bootloader_check_address+3,w,c
  9755  005714  1008               	iorwf	??__bootloader_check_address+2,w,c
  9756  005716  E104               	bnz	u10970
  9757  005718  0E90               	movlw	144
  9758  00571A  5C07               	subwf	??__bootloader_check_address+1,w,c
  9759  00571C  A0D8               	btfss	status,0,c
  9760  00571E  D018               	goto	l2364
  9761  005720                     u10970:
  9762  005720  500C               	movf	__bootloader_check_address@cntr,w,c
  9763  005722  2401               	addwf	__bootloader_check_address@address,w,c
  9764  005724  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9765  005726  0E00               	movlw	0
  9766  005728  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9767  00572A  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9768  00572C  0E00               	movlw	0
  9769  00572E  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9770  005730  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9771  005732  0E00               	movlw	0
  9772  005734  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9773  005736  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9774  005738  5009               	movf	??__bootloader_check_address+3,w,c
  9775  00573A  E10A               	bnz	l13862
  9776  00573C  0EF8               	movlw	248
  9777  00573E  5C06               	subwf	??__bootloader_check_address,w,c
  9778  005740  0EFF               	movlw	255
  9779  005742  5807               	subwfb	??__bootloader_check_address+1,w,c
  9780  005744  0E01               	movlw	1
  9781  005746  5808               	subwfb	??__bootloader_check_address+2,w,c
  9782  005748  B0D8               	btfsc	status,0,c
  9783  00574A  D002               	goto	l2364
  9784                           
  9785                           ;bootloader.c: 116: {;bootloader.c: 117: byte_status = ADDRESS_CHECK_RESULT_OK;
  9786  00574C  0E00               	movlw	0
  9787  00574E  D029               	goto	L4
  9788  005750                     l2364:
  9789  005750                     l13862:
  9790                           
  9791                           ;bootloader.c: 121: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
  9792  005750  500C               	movf	__bootloader_check_address@cntr,w,c
  9793  005752  2401               	addwf	__bootloader_check_address@address,w,c
  9794  005754  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9795  005756  0E00               	movlw	0
  9796  005758  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9797  00575A  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9798  00575C  0E00               	movlw	0
  9799  00575E  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9800  005760  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9801  005762  0E00               	movlw	0
  9802  005764  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9803  005766  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9804  005768  5009               	movf	??__bootloader_check_address+3,w,c
  9805  00576A  E108               	bnz	u10990
  9806  00576C  0EF8               	movlw	248
  9807  00576E  5C06               	subwf	??__bootloader_check_address,w,c
  9808  005770  0EFF               	movlw	255
  9809  005772  5807               	subwfb	??__bootloader_check_address+1,w,c
  9810  005774  0E01               	movlw	1
  9811  005776  5808               	subwfb	??__bootloader_check_address+2,w,c
  9812  005778  A0D8               	btfss	status,0,c
  9813  00577A  D015               	goto	l2366
  9814  00577C                     u10990:
  9815  00577C  500C               	movf	__bootloader_check_address@cntr,w,c
  9816  00577E  2401               	addwf	__bootloader_check_address@address,w,c
  9817  005780  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9818  005782  0E00               	movlw	0
  9819  005784  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9820  005786  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9821  005788  0E00               	movlw	0
  9822  00578A  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9823  00578C  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9824  00578E  0E00               	movlw	0
  9825  005790  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9826  005792  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9827  005794  5009               	movf	??__bootloader_check_address+3,w,c
  9828  005796  E107               	bnz	l2366
  9829  005798  0E02               	movlw	2
  9830  00579A  5C08               	subwf	??__bootloader_check_address+2,w,c
  9831  00579C  B0D8               	btfsc	status,0,c
  9832  00579E  D003               	goto	l2366
  9833                           
  9834                           ;bootloader.c: 122: {;bootloader.c: 123: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
  9835  0057A0  0E01               	movlw	1
  9836  0057A2                     L4:
  9837  0057A2  6E0B               	movwf	__bootloader_check_address@byte_status,c
  9838                           
  9839                           ;bootloader.c: 124: }
  9840  0057A4  D001               	goto	l2367
  9841  0057A6                     l2366:
  9842                           
  9843                           ;bootloader.c: 125: else;bootloader.c: 126: {;bootloader.c: 127: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
  9844  0057A6  680B               	setf	__bootloader_check_address@byte_status,c
  9845  0057A8                     l2367:
  9846                           
  9847                           ;bootloader.c: 128: };bootloader.c: 131: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
  9848  0057A8  280B               	incf	__bootloader_check_address@byte_status,w,c
  9849  0057AA  A4D8               	btfss	status,2,c
  9850  0057AC  D002               	goto	l2368
  9851                           
  9852                           ;bootloader.c: 132: {;bootloader.c: 133: return ADDRESS_CHECK_RESULT_ERROR;
  9853  0057AE  0EFF               	movlw	255
  9854  0057B0  0012               	return	
  9855  0057B2                     l2368:
  9856                           
  9857                           ;bootloader.c: 134: };bootloader.c: 137: if(byte_status > worst_case)
  9858  0057B2  500B               	movf	__bootloader_check_address@byte_status,w,c
  9859  0057B4  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
  9860  0057B6  A0D8               	btfss	status,0,c
  9861                           
  9862                           ;bootloader.c: 138: {;bootloader.c: 139: worst_case = byte_status;
  9863  0057B8  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
  9864  0057BC  2A0C               	incf	__bootloader_check_address@cntr,f,c
  9865  0057BE                     l2362:
  9866  0057BE  5005               	movf	__bootloader_check_address@dataLength,w,c
  9867  0057C0  5C0C               	subwf	__bootloader_check_address@cntr,w,c
  9868  0057C2  A0D8               	btfss	status,0,c
  9869  0057C4  D79A               	goto	l2363
  9870                           
  9871                           ;bootloader.c: 140: };bootloader.c: 141: };bootloader.c: 143: return worst_case;
  9872  0057C6  500A               	movf	__bootloader_check_address@worst_case,w,c
  9873  0057C8  0012               	return	
  9874  0057CA                     __end_of__bootloader_check_address:
  9875                           	opt stack 0
  9876                           tblptru	equ	0xFF8
  9877                           tblptrh	equ	0xFF7
  9878                           tblptrl	equ	0xFF6
  9879                           tablat	equ	0xFF5
  9880                           prodh	equ	0xFF4
  9881                           prodl	equ	0xFF3
  9882                           intcon	equ	0xFF2
  9883                           intcon2	equ	0xFF1
  9884                           intcon3	equ	0xFF0
  9885                           postinc0	equ	0xFEE
  9886                           wreg	equ	0xFE8
  9887                           indf1	equ	0xFE7
  9888                           postdec1	equ	0xFE5
  9889                           plusw1	equ	0xFE3
  9890                           fsr1h	equ	0xFE2
  9891                           fsr1l	equ	0xFE1
  9892                           indf2	equ	0xFDF
  9893                           postinc2	equ	0xFDE
  9894                           postdec2	equ	0xFDD
  9895                           plusw2	equ	0xFDB
  9896                           fsr2h	equ	0xFDA
  9897                           fsr2l	equ	0xFD9
  9898                           status	equ	0xFD8
  9899                           
  9900 ;; *************** function __bootloader_find_file *****************
  9901 ;; Defined at:
  9902 ;;		line 146 in file "bootloader.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;		None
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;		None
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  1    wreg      void 
  9909 ;; Registers used:
  9910 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9920 ;;Total ram usage:        0 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; Hardware stack levels required when called:    6
  9923 ;; This function calls:
  9924 ;;		_fat_find_file
  9925 ;;		_fat_get_file_size
  9926 ;; This function is called by:
  9927 ;;		_bootloader_run
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           	psect	text44
  9932  00630E                     __ptext44:
  9933                           	opt stack 0
  9934  00630E                     __bootloader_find_file:
  9935                           	opt stack 23
  9936                           
  9937                           ;bootloader.c: 149: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
  9938                           
  9939                           ;incstack = 0
  9940  00630E  0EB7               	movlw	low _bootloader_filename
  9941  006310  6E30               	movwf	fat_find_file@name,c
  9942  006312  0E8F               	movlw	high _bootloader_filename
  9943  006314  6E31               	movwf	fat_find_file@name+1,c
  9944  006316  0EC8               	movlw	low _bootloader_extension
  9945  006318  6E32               	movwf	fat_find_file@extension,c
  9946  00631A  0E8F               	movlw	high _bootloader_extension
  9947  00631C  6E33               	movwf	fat_find_file@extension+1,c
  9948  00631E  EC73  F02F         	call	_fat_find_file	;wreg free
  9949  006322  0100               	movlb	0	; () banked
  9950  006324  6FFF               	movwf	_file_number& (0+255),b
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;bootloader.c: 152: if(file_number!=0xFF)
  9954  006326  29FF               	incf	_file_number& (0+255),w,b
  9955  006328  B4D8               	btfsc	status,2,c
  9956  00632A  D034               	goto	l2374
  9957                           
  9958                           ; BSR set to: 0
  9959                           ;bootloader.c: 153: {;bootloader.c: 155: hex_file_size = fat_get_file_size(file_number);
  9960  00632C  51FF               	movf	_file_number& (0+255),w,b
  9961  00632E  EC0B  F039         	call	_fat_get_file_size
  9962  006332  C030  F0CB         	movff	?_fat_get_file_size,_hex_file_size
  9963  006336  C031  F0CC         	movff	?_fat_get_file_size+1,_hex_file_size+1
  9964  00633A  C032  F0CD         	movff	?_fat_get_file_size+2,_hex_file_size+2
  9965  00633E  C033  F0CE         	movff	?_fat_get_file_size+3,_hex_file_size+3
  9966                           
  9967                           ;bootloader.c: 157: hex_file_entries = 0;
  9968  006342  0E00               	movlw	0
  9969  006344  0101               	movlb	1	; () banked
  9970  006346  6F75               	movwf	(_hex_file_entries+1)& (0+255),b
  9971  006348  0E00               	movlw	0
  9972  00634A  6F74               	movwf	_hex_file_entries& (0+255),b
  9973                           
  9974                           ; BSR set to: 1
  9975                           ;bootloader.c: 158: hex_file_offset = 0;
  9976  00634C  0E00               	movlw	0
  9977  00634E  0100               	movlb	0	; () banked
  9978  006350  6FCF               	movwf	_hex_file_offset& (0+255),b
  9979  006352  0E00               	movlw	0
  9980  006354  6FD0               	movwf	(_hex_file_offset+1)& (0+255),b
  9981  006356  0E00               	movlw	0
  9982  006358  6FD1               	movwf	(_hex_file_offset+2)& (0+255),b
  9983  00635A  0E00               	movlw	0
  9984  00635C  6FD2               	movwf	(_hex_file_offset+3)& (0+255),b
  9985                           
  9986                           ; BSR set to: 0
  9987                           ;bootloader.c: 159: file_minimum_address = 0xFFFFFFFF;
  9988  00635E  0101               	movlb	1	; () banked
  9989  006360  694E               	setf	_file_minimum_address& (0+255),b
  9990  006362  694F               	setf	(_file_minimum_address+1)& (0+255),b
  9991  006364  6950               	setf	(_file_minimum_address+2)& (0+255),b
  9992  006366  6951               	setf	(_file_minimum_address+3)& (0+255),b
  9993                           
  9994                           ; BSR set to: 1
  9995                           ;bootloader.c: 160: file_maximum_address = 0x00000000;
  9996  006368  0E00               	movlw	0
  9997  00636A  6F4A               	movwf	_file_maximum_address& (0+255),b
  9998  00636C  0E00               	movlw	0
  9999  00636E  6F4B               	movwf	(_file_maximum_address+1)& (0+255),b
 10000  006370  0E00               	movlw	0
 10001  006372  6F4C               	movwf	(_file_maximum_address+2)& (0+255),b
 10002  006374  0E00               	movlw	0
 10003  006376  6F4D               	movwf	(_file_maximum_address+3)& (0+255),b
 10004                           
 10005                           ; BSR set to: 1
 10006                           ;bootloader.c: 161: extended_linear_address = 0x00000000;
 10007  006378  0E00               	movlw	0
 10008  00637A  6F46               	movwf	_extended_linear_address& (0+255),b
 10009  00637C  0E00               	movlw	0
 10010  00637E  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
 10011  006380  0E00               	movlw	0
 10012  006382  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
 10013  006384  0E00               	movlw	0
 10014  006386  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
 10015                           
 10016                           ; BSR set to: 1
 10017                           ;bootloader.c: 162: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 10018  006388  0E20               	movlw	32
 10019  00638A  0100               	movlb	0	; () banked
 10020  00638C  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;bootloader.c: 163: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 10024  00638E  0E20               	movlw	32
 10025  006390  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 10026                           
 10027                           ;bootloader.c: 164: }
 10028  006392  0012               	return	
 10029  006394                     l2374:
 10030                           
 10031                           ; BSR set to: 0
 10032                           ;bootloader.c: 166: else;bootloader.c: 167: {;bootloader.c: 169: hex_file_size = 0;
 10033                           
 10034                           ; BSR set to: 0
 10035  006394  0E00               	movlw	0
 10036  006396  6FCB               	movwf	_hex_file_size& (0+255),b
 10037  006398  0E00               	movlw	0
 10038  00639A  6FCC               	movwf	(_hex_file_size+1)& (0+255),b
 10039  00639C  0E00               	movlw	0
 10040  00639E  6FCD               	movwf	(_hex_file_size+2)& (0+255),b
 10041  0063A0  0E00               	movlw	0
 10042  0063A2  6FCE               	movwf	(_hex_file_size+3)& (0+255),b
 10043                           
 10044                           ;bootloader.c: 171: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 10045  0063A4  0E10               	movlw	16
 10046  0063A6  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
 10047                           
 10048                           ;bootloader.c: 172: if(os.display_mode != DISPLAY_MODE_BOOTLOADER_START)
 10049  0063A8  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
 10050  0063AA  B4D8               	btfsc	status,2,c
 10051  0063AC  0012               	return	
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;bootloader.c: 173: {;bootloader.c: 174: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARC
      +                          H;
 10055  0063AE  0E10               	movlw	16
 10056  0063B0  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 10057                           
 10058                           ; BSR set to: 0
 10059  0063B2  0012               	return	
 10060  0063B4                     __end_of__bootloader_find_file:
 10061                           	opt stack 0
 10062                           tblptru	equ	0xFF8
 10063                           tblptrh	equ	0xFF7
 10064                           tblptrl	equ	0xFF6
 10065                           tablat	equ	0xFF5
 10066                           prodh	equ	0xFF4
 10067                           prodl	equ	0xFF3
 10068                           intcon	equ	0xFF2
 10069                           intcon2	equ	0xFF1
 10070                           intcon3	equ	0xFF0
 10071                           postinc0	equ	0xFEE
 10072                           wreg	equ	0xFE8
 10073                           indf1	equ	0xFE7
 10074                           postdec1	equ	0xFE5
 10075                           plusw1	equ	0xFE3
 10076                           fsr1h	equ	0xFE2
 10077                           fsr1l	equ	0xFE1
 10078                           indf2	equ	0xFDF
 10079                           postinc2	equ	0xFDE
 10080                           postdec2	equ	0xFDD
 10081                           plusw2	equ	0xFDB
 10082                           fsr2h	equ	0xFDA
 10083                           fsr2l	equ	0xFD9
 10084                           status	equ	0xFD8
 10085                           
 10086 ;; *************** function __normal_mode *****************
 10087 ;; Defined at:
 10088 ;;		line 205 in file "main.c"
 10089 ;; Parameters:    Size  Location     Type
 10090 ;;		None
 10091 ;; Auto vars:     Size  Location     Type
 10092 ;;		None
 10093 ;; Return value:  Size  Location     Type
 10094 ;;                  1    wreg      unsigned char 
 10095 ;; Registers used:
 10096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 0/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10106 ;;Total ram usage:        0 bytes
 10107 ;; Hardware stack levels used:    1
 10108 ;; Hardware stack levels required when called:    3
 10109 ;; This function calls:
 10110 ;;		_i2c_eeprom_readByte
 10111 ;;		_i2c_eeprom_writeByte
 10112 ;; This function is called by:
 10113 ;;		_main
 10114 ;; This function uses a non-reentrant model
 10115 ;;
 10116                           
 10117                           	psect	text45
 10118  0077CE                     __ptext45:
 10119                           	opt stack 0
 10120  0077CE                     __normal_mode:
 10121                           	opt stack 27
 10122                           
 10123                           ;main.c: 207: if(i2c_eeprom_readByte(0x100)==0x94)
 10124                           
 10125                           ; BSR set to: 0
 10126                           ;incstack = 0
 10127  0077CE  0E01               	movlw	1
 10128  0077D0  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10129  0077D2  0E00               	movlw	0
 10130  0077D4  6E12               	movwf	i2c_eeprom_readByte@address,c
 10131  0077D6  ECF9  F03E         	call	_i2c_eeprom_readByte	;wreg free
 10132  0077DA  0A94               	xorlw	148
 10133  0077DC  A4D8               	btfss	status,2,c
 10134  0077DE  D00A               	goto	l914
 10135                           
 10136                           ;main.c: 208: {;main.c: 210: i2c_eeprom_writeByte(0x100, 0x00);
 10137  0077E0  0E01               	movlw	1
 10138  0077E2  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10139  0077E4  0E00               	movlw	0
 10140  0077E6  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10141  0077E8  0E00               	movlw	0
 10142  0077EA  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10143  0077EC  EC5C  F040         	call	_i2c_eeprom_writeByte	;wreg free
 10144                           
 10145                           ;main.c: 212: return 0;
 10146  0077F0  0E00               	movlw	0
 10147  0077F2  0012               	return	
 10148  0077F4                     l914:
 10149                           
 10150                           ;main.c: 214: else if(i2c_eeprom_readByte(0x100)==0x78)
 10151  0077F4  0E01               	movlw	1
 10152  0077F6  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10153  0077F8  0E00               	movlw	0
 10154  0077FA  6E12               	movwf	i2c_eeprom_readByte@address,c
 10155  0077FC  ECF9  F03E         	call	_i2c_eeprom_readByte	;wreg free
 10156  007800  0A78               	xorlw	120
 10157  007802  A4D8               	btfss	status,2,c
 10158  007804  D00A               	goto	l917
 10159                           
 10160                           ;main.c: 215: {;main.c: 217: i2c_eeprom_writeByte(0x100, 0x00);
 10161  007806  0E01               	movlw	1
 10162  007808  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10163  00780A  0E00               	movlw	0
 10164  00780C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10165  00780E  0E00               	movlw	0
 10166  007810  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10167  007812  EC5C  F040         	call	_i2c_eeprom_writeByte	;wreg free
 10168                           
 10169                           ;main.c: 219: return 1;
 10170  007816  0E01               	movlw	1
 10171  007818  0012               	return	
 10172  00781A                     l917:
 10173                           
 10174                           ;main.c: 220: };main.c: 226: LATAbits.LA0 = 1;
 10175  00781A  8089               	bsf	3977,0,c	;volatile
 10176                           
 10177                           ;main.c: 227: TRISAbits.TRISA0 = 0;
 10178  00781C  9092               	bcf	3986,0,c	;volatile
 10179                           
 10180                           ;main.c: 228: TRISAbits.TRISA0 = 1;
 10181  00781E  8092               	bsf	3986,0,c	;volatile
 10182                           
 10183                           ;main.c: 230: if(!PORTAbits.RA0)
 10184  007820  B080               	btfsc	3968,0,c	;volatile
 10185  007822  D002               	goto	l918
 10186                           
 10187                           ;main.c: 231: {;main.c: 233: return 0;
 10188  007824  0E00               	movlw	0
 10189                           
 10190                           ;main.c: 234: }
 10191  007826  0012               	return	
 10192  007828                     l918:
 10193                           
 10194                           ;main.c: 235: else;main.c: 236: {;main.c: 238: return 1;
 10195  007828  0E01               	movlw	1
 10196  00782A  0012               	return	
 10197  00782C                     __end_of__normal_mode:
 10198                           	opt stack 0
 10199                           tblptru	equ	0xFF8
 10200                           tblptrh	equ	0xFF7
 10201                           tblptrl	equ	0xFF6
 10202                           tablat	equ	0xFF5
 10203                           prodh	equ	0xFF4
 10204                           prodl	equ	0xFF3
 10205                           intcon	equ	0xFF2
 10206                           intcon2	equ	0xFF1
 10207                           intcon3	equ	0xFF0
 10208                           postinc0	equ	0xFEE
 10209                           wreg	equ	0xFE8
 10210                           indf1	equ	0xFE7
 10211                           postdec1	equ	0xFE5
 10212                           plusw1	equ	0xFE3
 10213                           fsr1h	equ	0xFE2
 10214                           fsr1l	equ	0xFE1
 10215                           indf2	equ	0xFDF
 10216                           postinc2	equ	0xFDE
 10217                           postdec2	equ	0xFDD
 10218                           plusw2	equ	0xFDB
 10219                           fsr2h	equ	0xFDA
 10220                           fsr2l	equ	0xFD9
 10221                           status	equ	0xFD8
 10222                           
 10223 ;; *************** function _i2c_eeprom_readByte *****************
 10224 ;; Defined at:
 10225 ;;		line 367 in file "i2c.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;  address         2   17[COMRAM] unsigned int 
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;  addr            1   23[COMRAM] unsigned char 
 10230 ;;  slave_addres    1   22[COMRAM] unsigned char 
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  1    wreg      unsigned char 
 10233 ;; Registers used:
 10234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10235 ;; Tracked objects:
 10236 ;;		On entry : 0/0
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10242 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10243 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10244 ;;Total ram usage:        7 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:    2
 10247 ;; This function calls:
 10248 ;;		__i2c_read
 10249 ;;		__i2c_write
 10250 ;;		_i2c_set_frequency
 10251 ;; This function is called by:
 10252 ;;		__normal_mode
 10253 ;; This function uses a non-reentrant model
 10254 ;;
 10255                           
 10256                           	psect	text46
 10257  007DF2                     __ptext46:
 10258                           	opt stack 0
 10259  007DF2                     _i2c_eeprom_readByte:
 10260                           	opt stack 27
 10261                           
 10262                           ;i2c.c: 369: uint8_t slave_address;;i2c.c: 370: uint8_t addr;;i2c.c: 371: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 10263                           
 10264                           ;incstack = 0
 10265  007DF2  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 10266  007DF6  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 10267  007DFA  0E07               	movlw	7
 10268  007DFC  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 10269  007DFE                     u11625:
 10270  007DFE  90D8               	bcf	status,0,c
 10271  007E00  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 10272  007E02  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 10273  007E04  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 10274  007E06  D7FB               	goto	u11625
 10275  007E08  5014               	movf	??_i2c_eeprom_readByte,w,c
 10276  007E0A  0B0E               	andlw	14
 10277  007E0C  09A0               	iorlw	160
 10278  007E0E  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 10279                           
 10280                           ;i2c.c: 372: addr = address & 0xFF;
 10281  007E10  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 10282                           
 10283                           ;i2c.c: 375: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10284  007E14  0E02               	movlw	2
 10285  007E16  EC9D  F042         	call	_i2c_set_frequency
 10286                           
 10287                           ;i2c.c: 377: _i2c_write(slave_address, &addr, 1);
 10288  007E1A  0E18               	movlw	low i2c_eeprom_readByte@addr
 10289  007E1C  6E06               	movwf	__i2c_write@data,c
 10290  007E1E  0E00               	movlw	high i2c_eeprom_readByte@addr
 10291  007E20  6E07               	movwf	__i2c_write@data+1,c
 10292  007E22  0E01               	movlw	1
 10293  007E24  6E08               	movwf	__i2c_write@length,c
 10294  007E26  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10295  007E28  EC6D  F03F         	call	__i2c_write
 10296                           
 10297                           ;i2c.c: 378: _i2c_read(slave_address, &addr, 1);
 10298  007E2C  0E18               	movlw	low i2c_eeprom_readByte@addr
 10299  007E2E  6E06               	movwf	__i2c_read@data,c
 10300  007E30  0E00               	movlw	high i2c_eeprom_readByte@addr
 10301  007E32  6E07               	movwf	__i2c_read@data+1,c
 10302  007E34  0E01               	movlw	1
 10303  007E36  6E08               	movwf	__i2c_read@length,c
 10304  007E38  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10305  007E3A  EC0D  F036         	call	__i2c_read
 10306                           
 10307                           ;i2c.c: 379: return addr;
 10308  007E3E  5018               	movf	i2c_eeprom_readByte@addr,w,c
 10309  007E40  0012               	return	
 10310  007E42                     __end_of_i2c_eeprom_readByte:
 10311                           	opt stack 0
 10312                           tblptru	equ	0xFF8
 10313                           tblptrh	equ	0xFF7
 10314                           tblptrl	equ	0xFF6
 10315                           tablat	equ	0xFF5
 10316                           prodh	equ	0xFF4
 10317                           prodl	equ	0xFF3
 10318                           intcon	equ	0xFF2
 10319                           intcon2	equ	0xFF1
 10320                           intcon3	equ	0xFF0
 10321                           postinc0	equ	0xFEE
 10322                           wreg	equ	0xFE8
 10323                           indf1	equ	0xFE7
 10324                           postdec1	equ	0xFE5
 10325                           plusw1	equ	0xFE3
 10326                           fsr1h	equ	0xFE2
 10327                           fsr1l	equ	0xFE1
 10328                           indf2	equ	0xFDF
 10329                           postinc2	equ	0xFDE
 10330                           postdec2	equ	0xFDD
 10331                           plusw2	equ	0xFDB
 10332                           fsr2h	equ	0xFDA
 10333                           fsr2l	equ	0xFD9
 10334                           status	equ	0xFD8
 10335                           
 10336 ;; *************** function __i2c_read *****************
 10337 ;; Defined at:
 10338 ;;		line 161 in file "i2c.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  slave_addres    1    wreg     unsigned char 
 10341 ;;  data            2    5[COMRAM] PTR unsigned char 
 10342 ;;		 -> i2c_eeprom_readByte@addr(1), 
 10343 ;;  length          1    7[COMRAM] unsigned char 
 10344 ;; Auto vars:     Size  Location     Type
 10345 ;;  slave_addres    1   15[COMRAM] unsigned char 
 10346 ;;  cntr            1   16[COMRAM] unsigned char 
 10347 ;; Return value:  Size  Location     Type
 10348 ;;                  1    wreg      void 
 10349 ;; Registers used:
 10350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10351 ;; Tracked objects:
 10352 ;;		On entry : 0/0
 10353 ;;		On exit  : 0/0
 10354 ;;		Unchanged: 0/0
 10355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10356 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10358 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10359 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10360 ;;Total ram usage:       12 bytes
 10361 ;; Hardware stack levels used:    1
 10362 ;; Hardware stack levels required when called:    1
 10363 ;; This function calls:
 10364 ;;		__i2c_acknowledge
 10365 ;;		__i2c_get
 10366 ;;		__i2c_not_acknowledge
 10367 ;;		__i2c_send
 10368 ;;		__i2c_start
 10369 ;;		__i2c_stop
 10370 ;;		__i2c_wait_idle
 10371 ;; This function is called by:
 10372 ;;		_i2c_eeprom_readByte
 10373 ;;		_i2c_eeprom_read
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           	psect	text47
 10378  006C1A                     __ptext47:
 10379                           	opt stack 0
 10380  006C1A                     __i2c_read:
 10381                           	opt stack 27
 10382                           
 10383                           ;incstack = 0
 10384                           ;__i2c_read@slave_address stored from wreg
 10385  006C1A  6E10               	movwf	__i2c_read@slave_address,c
 10386                           
 10387                           ;i2c.c: 163: uint8_t cntr;;i2c.c: 165: _i2c_wait_idle();
 10388  006C1C  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 10389                           
 10390                           ;i2c.c: 166: _i2c_start();
 10391  006C20  ECC4  F044         	call	__i2c_start	;wreg free
 10392                           
 10393                           ;i2c.c: 167: _i2c_wait_idle();
 10394  006C24  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 10395                           
 10396                           ;i2c.c: 168: _i2c_send(slave_address | 0x01);
 10397  006C28  5010               	movf	__i2c_read@slave_address,w,c
 10398  006C2A  0901               	iorlw	1
 10399  006C2C  ECC8  F044         	call	__i2c_send
 10400                           
 10401                           ;i2c.c: 169: _i2c_wait_idle();
 10402  006C30  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 10403                           
 10404                           ;i2c.c: 171: for(cntr=0; cntr<length-1; ++cntr)
 10405  006C34  0E00               	movlw	0
 10406  006C36  6E11               	movwf	__i2c_read@cntr,c
 10407  006C38  D00E               	goto	l1209
 10408  006C3A                     
 10409                           ;i2c.c: 172: {;i2c.c: 173: data[cntr] = _i2c_get();
 10410  006C3A  5011               	movf	__i2c_read@cntr,w,c
 10411  006C3C  0D01               	mullw	1
 10412  006C3E  50F3               	movf	prodl,w,c
 10413  006C40  2406               	addwf	__i2c_read@data,w,c
 10414  006C42  6ED9               	movwf	fsr2l,c
 10415  006C44  50F4               	movf	prodh,w,c
 10416  006C46  2007               	addwfc	__i2c_read@data+1,w,c
 10417  006C48  6EDA               	movwf	fsr2h,c
 10418  006C4A  EC8E  F044         	call	__i2c_get	;wreg free
 10419  006C4E  6EDF               	movwf	indf2,c
 10420                           
 10421                           ;i2c.c: 174: _i2c_acknowledge();
 10422  006C50  EC93  F044         	call	__i2c_acknowledge	;wreg free
 10423  006C54  2A11               	incf	__i2c_read@cntr,f,c
 10424  006C56                     l1209:
 10425  006C56  0EFF               	movlw	255
 10426  006C58  6E09               	movwf	??__i2c_read& (0+255),c
 10427  006C5A  0EFF               	movlw	255
 10428  006C5C  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 10429  006C5E  5008               	movf	__i2c_read@length,w,c
 10430  006C60  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 10431  006C62  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 10432  006C64  5009               	movf	??__i2c_read,w,c
 10433  006C66  260B               	addwf	??__i2c_read+2,f,c
 10434  006C68  500A               	movf	??__i2c_read+1,w,c
 10435  006C6A  220C               	addwfc	??__i2c_read+3,f,c
 10436  006C6C  5011               	movf	__i2c_read@cntr,w,c
 10437  006C6E  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 10438  006C70  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 10439  006C72  500B               	movf	??__i2c_read+2,w,c
 10440  006C74  5C0D               	subwf	??__i2c_read+4,w,c
 10441  006C76  500E               	movf	??__i2c_read+5,w,c
 10442  006C78  0A80               	xorlw	128
 10443  006C7A  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 10444  006C7C  500C               	movf	??__i2c_read+3,w,c
 10445  006C7E  0A80               	xorlw	128
 10446  006C80  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 10447  006C82  A0D8               	btfss	status,0,c
 10448  006C84  D7DA               	goto	l1210
 10449                           
 10450                           ;i2c.c: 175: };i2c.c: 176: data[cntr] = _i2c_get();
 10451  006C86  5011               	movf	__i2c_read@cntr,w,c
 10452  006C88  0D01               	mullw	1
 10453  006C8A  50F3               	movf	prodl,w,c
 10454  006C8C  2406               	addwf	__i2c_read@data,w,c
 10455  006C8E  6ED9               	movwf	fsr2l,c
 10456  006C90  50F4               	movf	prodh,w,c
 10457  006C92  2007               	addwfc	__i2c_read@data+1,w,c
 10458  006C94  6EDA               	movwf	fsr2h,c
 10459  006C96  EC8E  F044         	call	__i2c_get	;wreg free
 10460  006C9A  6EDF               	movwf	indf2,c
 10461                           
 10462                           ;i2c.c: 177: _i2c_not_acknowledge();
 10463  006C9C  EC89  F044         	call	__i2c_not_acknowledge	;wreg free
 10464                           
 10465                           ;i2c.c: 179: _i2c_stop();
 10466  006CA0  ECC0  F044         	call	__i2c_stop	;wreg free
 10467  006CA4  0012               	return		;funcret
 10468  006CA6                     __end_of__i2c_read:
 10469                           	opt stack 0
 10470                           tblptru	equ	0xFF8
 10471                           tblptrh	equ	0xFF7
 10472                           tblptrl	equ	0xFF6
 10473                           tablat	equ	0xFF5
 10474                           prodh	equ	0xFF4
 10475                           prodl	equ	0xFF3
 10476                           intcon	equ	0xFF2
 10477                           intcon2	equ	0xFF1
 10478                           intcon3	equ	0xFF0
 10479                           postinc0	equ	0xFEE
 10480                           wreg	equ	0xFE8
 10481                           indf1	equ	0xFE7
 10482                           postdec1	equ	0xFE5
 10483                           plusw1	equ	0xFE3
 10484                           fsr1h	equ	0xFE2
 10485                           fsr1l	equ	0xFE1
 10486                           indf2	equ	0xFDF
 10487                           postinc2	equ	0xFDE
 10488                           postdec2	equ	0xFDD
 10489                           plusw2	equ	0xFDB
 10490                           fsr2h	equ	0xFDA
 10491                           fsr2l	equ	0xFD9
 10492                           status	equ	0xFD8
 10493                           
 10494 ;; *************** function __i2c_not_acknowledge *****************
 10495 ;; Defined at:
 10496 ;;		line 90 in file "i2c.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;		None
 10499 ;; Auto vars:     Size  Location     Type
 10500 ;;		None
 10501 ;; Return value:  Size  Location     Type
 10502 ;;                  1    wreg      void 
 10503 ;; Registers used:
 10504 ;;		None
 10505 ;; Tracked objects:
 10506 ;;		On entry : 0/0
 10507 ;;		On exit  : 0/0
 10508 ;;		Unchanged: 0/0
 10509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10514 ;;Total ram usage:        0 bytes
 10515 ;; Hardware stack levels used:    1
 10516 ;; This function calls:
 10517 ;;		Nothing
 10518 ;; This function is called by:
 10519 ;;		__i2c_read
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           	psect	text48
 10524  008912                     __ptext48:
 10525                           	opt stack 0
 10526  008912                     __i2c_not_acknowledge:
 10527                           	opt stack 27
 10528                           
 10529                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 10530                           
 10531                           ;incstack = 0
 10532  008912  8AC5               	bsf	4037,5,c	;volatile
 10533                           
 10534                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 10535  008914  88C5               	bsf	4037,4,c	;volatile
 10536  008916  A8C5               	btfss	4037,4,c	;volatile
 10537  008918  0012               	return	
 10538  00891A  D7FD               	goto	l1181
 10539  00891C                     __end_of__i2c_not_acknowledge:
 10540                           	opt stack 0
 10541                           tblptru	equ	0xFF8
 10542                           tblptrh	equ	0xFF7
 10543                           tblptrl	equ	0xFF6
 10544                           tablat	equ	0xFF5
 10545                           prodh	equ	0xFF4
 10546                           prodl	equ	0xFF3
 10547                           intcon	equ	0xFF2
 10548                           intcon2	equ	0xFF1
 10549                           intcon3	equ	0xFF0
 10550                           postinc0	equ	0xFEE
 10551                           wreg	equ	0xFE8
 10552                           indf1	equ	0xFE7
 10553                           postdec1	equ	0xFE5
 10554                           plusw1	equ	0xFE3
 10555                           fsr1h	equ	0xFE2
 10556                           fsr1l	equ	0xFE1
 10557                           indf2	equ	0xFDF
 10558                           postinc2	equ	0xFDE
 10559                           postdec2	equ	0xFDD
 10560                           plusw2	equ	0xFDB
 10561                           fsr2h	equ	0xFDA
 10562                           fsr2l	equ	0xFD9
 10563                           status	equ	0xFD8
 10564                           
 10565 ;; *************** function __i2c_get *****************
 10566 ;; Defined at:
 10567 ;;		line 67 in file "i2c.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;		None
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;		None
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  1    wreg      unsigned char 
 10574 ;; Registers used:
 10575 ;;		wreg, status,2
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10585 ;;Total ram usage:        0 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; This function calls:
 10588 ;;		Nothing
 10589 ;; This function is called by:
 10590 ;;		__i2c_read
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           	psect	text49
 10595  00891C                     __ptext49:
 10596                           	opt stack 0
 10597  00891C                     __i2c_get:
 10598                           	opt stack 27
 10599                           
 10600                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 10601                           
 10602                           ;incstack = 0
 10603  00891C  86C5               	bsf	4037,3,c	;volatile
 10604  00891E  B6C5               	btfsc	4037,3,c	;volatile
 10605  008920  D7FE               	goto	l1163
 10606                           
 10607                           ;i2c.c: 71: return SSP1BUF;
 10608  008922  50C9               	movf	4041,w,c	;volatile
 10609  008924  0012               	return	
 10610  008926                     __end_of__i2c_get:
 10611                           	opt stack 0
 10612                           tblptru	equ	0xFF8
 10613                           tblptrh	equ	0xFF7
 10614                           tblptrl	equ	0xFF6
 10615                           tablat	equ	0xFF5
 10616                           prodh	equ	0xFF4
 10617                           prodl	equ	0xFF3
 10618                           intcon	equ	0xFF2
 10619                           intcon2	equ	0xFF1
 10620                           intcon3	equ	0xFF0
 10621                           postinc0	equ	0xFEE
 10622                           wreg	equ	0xFE8
 10623                           indf1	equ	0xFE7
 10624                           postdec1	equ	0xFE5
 10625                           plusw1	equ	0xFE3
 10626                           fsr1h	equ	0xFE2
 10627                           fsr1l	equ	0xFE1
 10628                           indf2	equ	0xFDF
 10629                           postinc2	equ	0xFDE
 10630                           postdec2	equ	0xFDD
 10631                           plusw2	equ	0xFDB
 10632                           fsr2h	equ	0xFDA
 10633                           fsr2l	equ	0xFD9
 10634                           status	equ	0xFD8
 10635                           
 10636 ;; *************** function __i2c_acknowledge *****************
 10637 ;; Defined at:
 10638 ;;		line 82 in file "i2c.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;		None
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1    wreg      void 
 10645 ;; Registers used:
 10646 ;;		None
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10656 ;;Total ram usage:        0 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; This function calls:
 10659 ;;		Nothing
 10660 ;; This function is called by:
 10661 ;;		__i2c_read
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           	psect	text50
 10666  008926                     __ptext50:
 10667                           	opt stack 0
 10668  008926                     __i2c_acknowledge:
 10669                           	opt stack 27
 10670                           
 10671                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 10672                           
 10673                           ;incstack = 0
 10674  008926  9AC5               	bcf	4037,5,c	;volatile
 10675                           
 10676                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 10677  008928  88C5               	bsf	4037,4,c	;volatile
 10678  00892A  A8C5               	btfss	4037,4,c	;volatile
 10679  00892C  0012               	return	
 10680  00892E  D7FD               	goto	l1175
 10681  008930                     __end_of__i2c_acknowledge:
 10682                           	opt stack 0
 10683                           tblptru	equ	0xFF8
 10684                           tblptrh	equ	0xFF7
 10685                           tblptrl	equ	0xFF6
 10686                           tablat	equ	0xFF5
 10687                           prodh	equ	0xFF4
 10688                           prodl	equ	0xFF3
 10689                           intcon	equ	0xFF2
 10690                           intcon2	equ	0xFF1
 10691                           intcon3	equ	0xFF0
 10692                           postinc0	equ	0xFEE
 10693                           wreg	equ	0xFE8
 10694                           indf1	equ	0xFE7
 10695                           postdec1	equ	0xFE5
 10696                           plusw1	equ	0xFE3
 10697                           fsr1h	equ	0xFE2
 10698                           fsr1l	equ	0xFE1
 10699                           indf2	equ	0xFDF
 10700                           postinc2	equ	0xFDE
 10701                           postdec2	equ	0xFDD
 10702                           plusw2	equ	0xFDB
 10703                           fsr2h	equ	0xFDA
 10704                           fsr2l	equ	0xFD9
 10705                           status	equ	0xFD8
 10706                           
 10707 ;; *************** function _USBDeviceTasks *****************
 10708 ;; Defined at:
 10709 ;;		line 477 in file "usb_device.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;		None
 10712 ;; Auto vars:     Size  Location     Type
 10713 ;;  i               1   31[COMRAM] unsigned char 
 10714 ;; Return value:  Size  Location     Type
 10715 ;;                  1    wreg      void 
 10716 ;; Registers used:
 10717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 10718 ;; Tracked objects:
 10719 ;;		On entry : 0/0
 10720 ;;		On exit  : 0/0
 10721 ;;		Unchanged: 0/0
 10722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10727 ;;Total ram usage:        1 bytes
 10728 ;; Hardware stack levels used:    1
 10729 ;; Hardware stack levels required when called:    8
 10730 ;; This function calls:
 10731 ;;		_USBCtrlEPAllowStatusStage
 10732 ;;		_USBCtrlEPService
 10733 ;;		_USBDeviceInit
 10734 ;;		_USBIncrement1msInternalTimers
 10735 ;;		_USBStallHandler
 10736 ;;		_USBSuspend
 10737 ;;		_USBWakeFromSuspend
 10738 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10739 ;; This function is called by:
 10740 ;;		_main
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           	psect	text51
 10745  003948                     __ptext51:
 10746                           	opt stack 0
 10747  003948                     _USBDeviceTasks:
 10748                           	opt stack 22
 10749                           
 10750                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 10751                           
 10752                           ; BSR set to: 0
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;usb_device.c: 543: return;
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 10759                           
 10760                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 10761                           
 10762                           ;usb_device.c: 511: UIE = 0;
 10763                           
 10764                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 10765                           
 10766                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 10767                           
 10768                           ;incstack = 0
 10769  003948  0100               	movlb	0	; () banked
 10770  00394A  51F6               	movf	_USBDeviceState& (0+255),w,b
 10771  00394C  A4D8               	btfss	status,2,c
 10772  00394E  D012               	goto	l150
 10773                           
 10774                           ; BSR set to: 0
 10775                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 10776  003950  0E00               	movlw	0
 10777  003952  6E65               	movwf	3941,c	;volatile
 10778                           
 10779                           ;usb_device.c: 572: UIE = 0;
 10780  003954  0E00               	movlw	0
 10781  003956  010F               	movlb	15	; () banked
 10782  003958  6F36               	movwf	54,b	;volatile
 10783                           
 10784                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10785  00395A  0E16               	movlw	22
 10786  00395C  6F39               	movwf	57,b	;volatile
 10787  00395E  0E9F               	movlw	159
 10788  003960  6F37               	movwf	55,b	;volatile
 10789  003962  0E7B               	movlw	123
 10790  003964  6F36               	movwf	54,b	;volatile
 10791                           
 10792                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 10793  003966  D001               	goto	l151
 10794  003968                     l152:
 10795  003968  8665               	bsf	3941,3,c	;volatile
 10796  00396A                     l151:
 10797  00396A  A665               	btfss	3941,3,c	;volatile
 10798  00396C  D7FD               	goto	l152
 10799                           
 10800                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 10801  00396E  0E01               	movlw	1
 10802  003970  0100               	movlb	0	; () banked
 10803  003972  6FF6               	movwf	_USBDeviceState& (0+255),b
 10804  003974                     l150:
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 10808                           
 10809                           ; BSR set to: 0
 10810  003974  05F6               	decf	_USBDeviceState& (0+255),w,b
 10811  003976  B4D8               	btfsc	status,2,c
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 10815  003978  BA65               	btfsc	3941,5,c	;volatile
 10816  00397A  D00A               	goto	l155
 10817                           
 10818                           ; BSR set to: 0
 10819                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 10820  00397C  0E00               	movlw	0
 10821  00397E  6E62               	movwf	3938,c	;volatile
 10822                           
 10823                           ;usb_device.c: 612: UIE=0;
 10824  003980  0E00               	movlw	0
 10825  003982  010F               	movlb	15	; () banked
 10826  003984  6F36               	movwf	54,b	;volatile
 10827                           
 10828                           ; BSR set to: 15
 10829                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 10830  003986  8136               	bsf	54,0,b	;volatile
 10831                           
 10832                           ; BSR set to: 15
 10833                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 10834  003988  8936               	bsf	54,4,b	;volatile
 10835                           
 10836                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 10837  00398A  0E02               	movlw	2
 10838  00398C  0100               	movlb	0	; () banked
 10839  00398E  6FF6               	movwf	_USBDeviceState& (0+255),b
 10840  003990                     l155:
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 10844                           
 10845                           ; BSR set to: 0
 10846                           
 10847                           ; BSR set to: 0
 10848  003990  A462               	btfss	3938,2,c	;volatile
 10849  003992  D006               	goto	l156
 10850                           
 10851                           ; BSR set to: 0
 10852  003994  010F               	movlb	15	; () banked
 10853  003996  A536               	btfss	54,2,b	;volatile
 10854  003998  D003               	goto	l156
 10855                           
 10856                           ; BSR set to: 15
 10857                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 10858  00399A  9462               	bcf	3938,2,c	;volatile
 10859                           
 10860                           ; BSR set to: 15
 10861                           ;usb_device.c: 640: USBWakeFromSuspend();
 10862  00399C  EC11  F041         	call	_USBWakeFromSuspend	;wreg free
 10863  0039A0                     l156:
 10864                           
 10865                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 10866  0039A0  A265               	btfss	3941,1,c	;volatile
 10867  0039A2  D002               	goto	l157
 10868                           
 10869                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 10870  0039A4  98A1               	bcf	4001,4,c	;volatile
 10871                           
 10872                           ;usb_device.c: 650: return;
 10873  0039A6  0012               	return	
 10874  0039A8                     l157:
 10875                           
 10876                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 10877  0039A8  A062               	btfss	3938,0,c	;volatile
 10878  0039AA  D009               	goto	l158
 10879  0039AC  010F               	movlb	15	; () banked
 10880  0039AE  A136               	btfss	54,0,b	;volatile
 10881  0039B0  D006               	goto	l158
 10882                           
 10883                           ; BSR set to: 15
 10884                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 10885  0039B2  EC3E  F020         	call	_USBDeviceInit	;wreg free
 10886                           
 10887                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 10888  0039B6  0E04               	movlw	4
 10889  0039B8  0100               	movlb	0	; () banked
 10890  0039BA  6FF6               	movwf	_USBDeviceState& (0+255),b
 10891                           
 10892                           ; BSR set to: 0
 10893                           ;usb_device.c: 681: (UIR &= 0xFE);
 10894  0039BC  9062               	bcf	3938,0,c	;volatile
 10895  0039BE                     l158:
 10896                           
 10897                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 10898                           
 10899                           ; BSR set to: 0
 10900  0039BE  A862               	btfss	3938,4,c	;volatile
 10901  0039C0  D004               	goto	l159
 10902  0039C2  010F               	movlb	15	; () banked
 10903  0039C4  B936               	btfsc	54,4,b	;volatile
 10904                           
 10905                           ; BSR set to: 15
 10906                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 10907  0039C6  EC2C  F042         	call	_USBSuspend	;wreg free
 10908  0039CA                     l159:
 10909                           
 10910                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 10911  0039CA  AC62               	btfss	3938,6,c	;volatile
 10912  0039CC  D01C               	goto	l163
 10913                           
 10914                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 10915  0039CE  010F               	movlb	15	; () banked
 10916  0039D0  AD36               	btfss	54,6,b	;volatile
 10917  0039D2  D00E               	goto	l161
 10918                           
 10919                           ; BSR set to: 15
 10920                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 10921  0039D4  0E00               	movlw	0
 10922  0039D6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 10923  0039D8  0E73               	movlw	115
 10924  0039DA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 10925  0039DC  0E00               	movlw	0
 10926  0039DE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 10927  0039E0  0E00               	movlw	0
 10928  0039E2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 10929  0039E4  0E00               	movlw	0
 10930  0039E6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 10931  0039E8  0E01               	movlw	1
 10932  0039EA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 10933  0039EC  ECDD  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10934  0039F0                     l161:
 10935                           
 10936                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 10937  0039F0  9C62               	bcf	3938,6,c	;volatile
 10938                           
 10939                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 10940  0039F2  EC81  F043         	call	_USBIncrement1msInternalTimers	;wreg free
 10941                           
 10942                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 10943  0039F6  0100               	movlb	0	; () banked
 10944  0039F8  51EF               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 10945  0039FA  A4D8               	btfss	status,2,c
 10946                           
 10947                           ; BSR set to: 0
 10948                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 10949  0039FC  07EF               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 10950                           
 10951                           ; BSR set to: 0
 10952                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 10953                           
 10954                           ; BSR set to: 0
 10955  0039FE  51EF               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 10956  003A00  B4D8               	btfsc	status,2,c
 10957                           
 10958                           ; BSR set to: 0
 10959                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 10960  003A02  ECED  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 10961  003A06                     l163:
 10962                           
 10963                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 10964  003A06  AA62               	btfss	3938,5,c	;volatile
 10965  003A08  D004               	goto	l164
 10966  003A0A  010F               	movlb	15	; () banked
 10967  003A0C  BB36               	btfsc	54,5,b	;volatile
 10968                           
 10969                           ; BSR set to: 15
 10970                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 10971  003A0E  ECB5  F03F         	call	_USBStallHandler	;wreg free
 10972  003A12                     l164:
 10973                           
 10974                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 10975  003A12  A262               	btfss	3938,1,c	;volatile
 10976  003A14  D012               	goto	l165
 10977  003A16  010F               	movlb	15	; () banked
 10978  003A18  A336               	btfss	54,1,b	;volatile
 10979  003A1A  D00F               	goto	l165
 10980                           
 10981                           ; BSR set to: 15
 10982                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 10983  003A1C  0E7F               	movlw	127
 10984  003A1E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 10985  003A20  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 10986  003A22  0E00               	movlw	0
 10987  003A24  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 10988  003A26  0E00               	movlw	0
 10989  003A28  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 10990  003A2A  0E00               	movlw	0
 10991  003A2C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 10992  003A2E  0E01               	movlw	1
 10993  003A30  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 10994  003A32  ECDD  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10995                           
 10996                           ;usb_device.c: 759: {UEIR = 0;};
 10997  003A36  0E00               	movlw	0
 10998  003A38  6E63               	movwf	3939,c	;volatile
 10999  003A3A                     l165:
 11000                           
 11001                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11002  003A3A  0E04               	movlw	4
 11003  003A3C  0100               	movlb	0	; () banked
 11004  003A3E  61F6               	cpfslt	_USBDeviceState& (0+255),b
 11005  003A40  D002               	goto	l166
 11006                           
 11007                           ; BSR set to: 0
 11008                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11009  003A42  98A1               	bcf	4001,4,c	;volatile
 11010                           
 11011                           ;usb_device.c: 777: return;
 11012  003A44  0012               	return	
 11013  003A46                     l166:
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 11017  003A46  010F               	movlb	15	; () banked
 11018  003A48  A736               	btfss	54,3,b	;volatile
 11019  003A4A  D03C               	goto	u12190
 11020                           
 11021                           ; BSR set to: 15
 11022                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11023  003A4C  0E00               	movlw	0
 11024  003A4E  6E20               	movwf	USBDeviceTasks@i,c
 11025  003A50                     l14992:
 11026                           
 11027                           ; BSR set to: 15
 11028  003A50  0E03               	movlw	3
 11029  003A52  6420               	cpfsgt	USBDeviceTasks@i,c
 11030  003A54  D001               	goto	l168
 11031  003A56  D036               	goto	u12190
 11032  003A58                     l168:
 11033                           
 11034                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 11035  003A58  A662               	btfss	3938,3,c	;volatile
 11036  003A5A  D034               	goto	u12190
 11037                           
 11038                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 11039  003A5C  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 11040                           
 11041                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11042  003A60  0100               	movlb	0	; () banked
 11043  003A62  31FD               	rrcf	_USTATcopy& (0+255),w,b
 11044  003A64  32E8               	rrcf	wreg,f,c
 11045  003A66  32E8               	rrcf	wreg,f,c
 11046  003A68  0B0F               	andlw	15
 11047  003A6A  6FF1               	movwf	_endpoint_number& (0+255),b
 11048                           
 11049                           ; BSR set to: 0
 11050                           ;usb_device.c: 793: (UIR &= 0xF7);
 11051  003A6C  9662               	bcf	3938,3,c	;volatile
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11055  003A6E  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 11056  003A70  D007               	goto	l171
 11057                           
 11058                           ; BSR set to: 0
 11059                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 11060  003A72  51F1               	movf	_endpoint_number& (0+255),w,b
 11061  003A74  0D01               	mullw	1
 11062  003A76  0E68               	movlw	low _ep_data_out
 11063  003A78  24F3               	addwf	prodl,w,c
 11064  003A7A  6ED9               	movwf	fsr2l,c
 11065  003A7C  0E01               	movlw	high _ep_data_out
 11066  003A7E  D007               	goto	L5
 11067  003A80                     l171:
 11068                           
 11069                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 11070                           
 11071                           ; BSR set to: 1
 11072  003A80  0100               	movlb	0	; () banked
 11073  003A82  51F1               	movf	_endpoint_number& (0+255),w,b
 11074  003A84  0D01               	mullw	1
 11075  003A86  0E6B               	movlw	low _ep_data_in
 11076  003A88  24F3               	addwf	prodl,w,c
 11077  003A8A  6ED9               	movwf	fsr2l,c
 11078  003A8C  0E01               	movlw	high _ep_data_in
 11079  003A8E                     L5:
 11080  003A8E  20F4               	addwfc	prodh,w,c
 11081  003A90  6EDA               	movwf	fsr2h,c
 11082  003A92  0101               	movlb	1	; () banked
 11083  003A94  70DF               	btg	indf2,0,c
 11084                           
 11085                           ; BSR set to: 1
 11086                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 11087                           
 11088                           ; BSR set to: 1
 11089  003A96  0100               	movlb	0	; () banked
 11090  003A98  51F1               	movf	_endpoint_number& (0+255),w,b
 11091  003A9A  A4D8               	btfss	status,2,c
 11092  003A9C  D003               	goto	l173
 11093                           
 11094                           ; BSR set to: 0
 11095                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 11096  003A9E  EC87  F030         	call	_USBCtrlEPService	;wreg free
 11097                           
 11098                           ;usb_device.c: 813: }
 11099  003AA2  D00E               	goto	l175
 11100  003AA4                     l173:
 11101                           
 11102                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 11103  003AA4  0E00               	movlw	0
 11104  003AA6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11105  003AA8  0E72               	movlw	114
 11106  003AAA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11107  003AAC  0EFD               	movlw	low _USTATcopy
 11108  003AAE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11109  003AB0  0E00               	movlw	high _USTATcopy
 11110  003AB2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11111  003AB4  0E00               	movlw	0
 11112  003AB6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11113  003AB8  0E00               	movlw	0
 11114  003ABA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11115  003ABC  ECDD  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11116  003AC0                     l175:
 11117  003AC0  2A20               	incf	USBDeviceTasks@i,f,c
 11118  003AC2  D7C6               	goto	l14992
 11119  003AC4                     u12190:
 11120                           
 11121                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 11122  003AC4  98A1               	bcf	4001,4,c	;volatile
 11123  003AC6  0012               	return		;funcret
 11124  003AC8                     __end_of_USBDeviceTasks:
 11125                           	opt stack 0
 11126                           tblptru	equ	0xFF8
 11127                           tblptrh	equ	0xFF7
 11128                           tblptrl	equ	0xFF6
 11129                           tablat	equ	0xFF5
 11130                           prodh	equ	0xFF4
 11131                           prodl	equ	0xFF3
 11132                           intcon	equ	0xFF2
 11133                           intcon2	equ	0xFF1
 11134                           intcon3	equ	0xFF0
 11135                           postinc0	equ	0xFEE
 11136                           wreg	equ	0xFE8
 11137                           indf1	equ	0xFE7
 11138                           postdec1	equ	0xFE5
 11139                           plusw1	equ	0xFE3
 11140                           fsr1h	equ	0xFE2
 11141                           fsr1l	equ	0xFE1
 11142                           indf2	equ	0xFDF
 11143                           postinc2	equ	0xFDE
 11144                           postdec2	equ	0xFDD
 11145                           plusw2	equ	0xFDB
 11146                           fsr2h	equ	0xFDA
 11147                           fsr2l	equ	0xFD9
 11148                           status	equ	0xFD8
 11149                           
 11150 ;; *************** function _USBWakeFromSuspend *****************
 11151 ;; Defined at:
 11152 ;;		line 2305 in file "usb_device.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;		None
 11155 ;; Auto vars:     Size  Location     Type
 11156 ;;		None
 11157 ;; Return value:  Size  Location     Type
 11158 ;;                  1    wreg      void 
 11159 ;; Registers used:
 11160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11161 ;; Tracked objects:
 11162 ;;		On entry : 0/0
 11163 ;;		On exit  : 0/0
 11164 ;;		Unchanged: 0/0
 11165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11170 ;;Total ram usage:        0 bytes
 11171 ;; Hardware stack levels used:    1
 11172 ;; Hardware stack levels required when called:    4
 11173 ;; This function calls:
 11174 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11175 ;; This function is called by:
 11176 ;;		_USBDeviceTasks
 11177 ;; This function uses a non-reentrant model
 11178 ;;
 11179                           
 11180                           	psect	text52
 11181  008222                     __ptext52:
 11182                           	opt stack 0
 11183  008222                     _USBWakeFromSuspend:
 11184                           	opt stack 25
 11185                           
 11186                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 11187                           
 11188                           ;incstack = 0
 11189  008222  0E00               	movlw	0
 11190  008224  0100               	movlb	0	; () banked
 11191  008226  6FF2               	movwf	_USBBusIsSuspended& (0+255),b
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 11195  008228  0E00               	movlw	0
 11196  00822A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11197  00822C  0E74               	movlw	116
 11198  00822E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11199  008230  0E00               	movlw	0
 11200  008232  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11201  008234  0E00               	movlw	0
 11202  008236  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11203  008238  0E00               	movlw	0
 11204  00823A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11205  00823C  0E00               	movlw	0
 11206  00823E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11207  008240  ECDD  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11208                           
 11209                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 11210  008244  9265               	bcf	3941,1,c	;volatile
 11211                           
 11212                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 11213  008246  010F               	movlb	15	; () banked
 11214  008248  9536               	bcf	54,2,b	;volatile
 11215                           
 11216                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 11217  00824A  D001               	goto	l303
 11218  00824C                     
 11219                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 11220                           
 11221                           ; BSR set to: 15
 11222  00824C  9462               	bcf	3938,2,c	;volatile
 11223  00824E                     l303:
 11224  00824E  B462               	btfsc	3938,2,c	;volatile
 11225  008250  D7FD               	goto	l304
 11226                           
 11227                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 11228  008252  0E00               	movlw	0
 11229  008254  0100               	movlb	0	; () banked
 11230  008256  6FE9               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11231                           
 11232                           ; BSR set to: 0
 11233  008258  0012               	return		;funcret
 11234  00825A                     __end_of_USBWakeFromSuspend:
 11235                           	opt stack 0
 11236                           tblptru	equ	0xFF8
 11237                           tblptrh	equ	0xFF7
 11238                           tblptrl	equ	0xFF6
 11239                           tablat	equ	0xFF5
 11240                           prodh	equ	0xFF4
 11241                           prodl	equ	0xFF3
 11242                           intcon	equ	0xFF2
 11243                           intcon2	equ	0xFF1
 11244                           intcon3	equ	0xFF0
 11245                           postinc0	equ	0xFEE
 11246                           wreg	equ	0xFE8
 11247                           indf1	equ	0xFE7
 11248                           postdec1	equ	0xFE5
 11249                           plusw1	equ	0xFE3
 11250                           fsr1h	equ	0xFE2
 11251                           fsr1l	equ	0xFE1
 11252                           indf2	equ	0xFDF
 11253                           postinc2	equ	0xFDE
 11254                           postdec2	equ	0xFDD
 11255                           plusw2	equ	0xFDB
 11256                           fsr2h	equ	0xFDA
 11257                           fsr2l	equ	0xFD9
 11258                           status	equ	0xFD8
 11259                           
 11260 ;; *************** function _USBSuspend *****************
 11261 ;; Defined at:
 11262 ;;		line 2247 in file "usb_device.c"
 11263 ;; Parameters:    Size  Location     Type
 11264 ;;		None
 11265 ;; Auto vars:     Size  Location     Type
 11266 ;;		None
 11267 ;; Return value:  Size  Location     Type
 11268 ;;                  1    wreg      void 
 11269 ;; Registers used:
 11270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11271 ;; Tracked objects:
 11272 ;;		On entry : 0/0
 11273 ;;		On exit  : 0/0
 11274 ;;		Unchanged: 0/0
 11275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11280 ;;Total ram usage:        0 bytes
 11281 ;; Hardware stack levels used:    1
 11282 ;; Hardware stack levels required when called:    4
 11283 ;; This function calls:
 11284 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11285 ;; This function is called by:
 11286 ;;		_USBDeviceTasks
 11287 ;; This function uses a non-reentrant model
 11288 ;;
 11289                           
 11290                           	psect	text53
 11291  008458                     __ptext53:
 11292                           	opt stack 0
 11293  008458                     _USBSuspend:
 11294                           	opt stack 25
 11295                           
 11296                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;incstack = 0
 11300  008458  010F               	movlb	15	; () banked
 11301  00845A  8536               	bsf	54,2,b	;volatile
 11302                           
 11303                           ; BSR set to: 15
 11304                           ;usb_device.c: 2273: (UIR &= 0xEF);
 11305  00845C  9862               	bcf	3938,4,c	;volatile
 11306                           
 11307                           ; BSR set to: 15
 11308                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 11309  00845E  8265               	bsf	3941,1,c	;volatile
 11310                           
 11311                           ; BSR set to: 15
 11312                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 11313  008460  0E01               	movlw	1
 11314  008462  0100               	movlb	0	; () banked
 11315  008464  6FF2               	movwf	_USBBusIsSuspended& (0+255),b
 11316                           
 11317                           ; BSR set to: 0
 11318                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 11319  008466  0E00               	movlw	0
 11320  008468  6FE9               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11321                           
 11322                           ; BSR set to: 0
 11323                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 11324  00846A  0E00               	movlw	0
 11325  00846C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11326  00846E  0E75               	movlw	117
 11327  008470  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11328  008472  0E00               	movlw	0
 11329  008474  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11330  008476  0E00               	movlw	0
 11331  008478  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11332  00847A  0E00               	movlw	0
 11333  00847C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11334  00847E  0E00               	movlw	0
 11335  008480  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11336  008482  ECDD  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11337  008486  0012               	return		;funcret
 11338  008488                     __end_of_USBSuspend:
 11339                           	opt stack 0
 11340                           tblptru	equ	0xFF8
 11341                           tblptrh	equ	0xFF7
 11342                           tblptrl	equ	0xFF6
 11343                           tablat	equ	0xFF5
 11344                           prodh	equ	0xFF4
 11345                           prodl	equ	0xFF3
 11346                           intcon	equ	0xFF2
 11347                           intcon2	equ	0xFF1
 11348                           intcon3	equ	0xFF0
 11349                           postinc0	equ	0xFEE
 11350                           wreg	equ	0xFE8
 11351                           indf1	equ	0xFE7
 11352                           postdec1	equ	0xFE5
 11353                           plusw1	equ	0xFE3
 11354                           fsr1h	equ	0xFE2
 11355                           fsr1l	equ	0xFE1
 11356                           indf2	equ	0xFDF
 11357                           postinc2	equ	0xFDE
 11358                           postdec2	equ	0xFDD
 11359                           plusw2	equ	0xFDB
 11360                           fsr2h	equ	0xFDA
 11361                           fsr2l	equ	0xFD9
 11362                           status	equ	0xFD8
 11363                           
 11364 ;; *************** function _USBStallHandler *****************
 11365 ;; Defined at:
 11366 ;;		line 2204 in file "usb_device.c"
 11367 ;; Parameters:    Size  Location     Type
 11368 ;;		None
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;		None
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      void 
 11373 ;; Registers used:
 11374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11384 ;;Total ram usage:        1 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; This function calls:
 11387 ;;		Nothing
 11388 ;; This function is called by:
 11389 ;;		_USBDeviceTasks
 11390 ;; This function uses a non-reentrant model
 11391 ;;
 11392                           
 11393                           	psect	text54
 11394  007F6A                     __ptext54:
 11395                           	opt stack 0
 11396  007F6A                     _USBStallHandler:
 11397                           	opt stack 29
 11398                           
 11399                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 11400                           
 11401                           ;incstack = 0
 11402  007F6A  010F               	movlb	15	; () banked
 11403  007F6C  A126               	btfss	38,0,b	;volatile
 11404  007F6E  D01D               	goto	l295
 11405                           
 11406                           ; BSR set to: 15
 11407                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 11408  007F70  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11409  007F74  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11410  007F78  0E80               	movlw	128
 11411  007F7A  18DE               	xorwf	postinc2,w,c
 11412  007F7C  A4D8               	btfss	status,2,c
 11413  007F7E  D014               	goto	l296
 11414                           
 11415                           ; BSR set to: 15
 11416  007F80  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 11417  007F84  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11418  007F88  0E84               	movlw	132
 11419  007F8A  18DE               	xorwf	postinc2,w,c
 11420  007F8C  A4D8               	btfss	status,2,c
 11421  007F8E  D00C               	goto	l296
 11422                           
 11423                           ; BSR set to: 15
 11424                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 11425  007F90  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11426  007F94  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11427  007F98  0E0C               	movlw	12
 11428  007F9A  6EDF               	movwf	indf2,c
 11429                           
 11430                           ; BSR set to: 15
 11431                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11432  007F9C  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11433  007FA0  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11434  007FA4  0E00               	movlw	0
 11435  007FA6  8EDB               	bsf	plusw2,7,c
 11436  007FA8                     l296:
 11437                           
 11438                           ; BSR set to: 15
 11439                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 11440                           
 11441                           ; BSR set to: 15
 11442  007FA8  9126               	bcf	38,0,b	;volatile
 11443  007FAA                     l295:
 11444                           
 11445                           ; BSR set to: 15
 11446                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 11447  007FAA  9A62               	bcf	3938,5,c	;volatile
 11448                           
 11449                           ; BSR set to: 15
 11450  007FAC  0012               	return		;funcret
 11451  007FAE                     __end_of_USBStallHandler:
 11452                           	opt stack 0
 11453                           tblptru	equ	0xFF8
 11454                           tblptrh	equ	0xFF7
 11455                           tblptrl	equ	0xFF6
 11456                           tablat	equ	0xFF5
 11457                           prodh	equ	0xFF4
 11458                           prodl	equ	0xFF3
 11459                           intcon	equ	0xFF2
 11460                           intcon2	equ	0xFF1
 11461                           intcon3	equ	0xFF0
 11462                           postinc0	equ	0xFEE
 11463                           wreg	equ	0xFE8
 11464                           indf1	equ	0xFE7
 11465                           postdec1	equ	0xFE5
 11466                           plusw1	equ	0xFE3
 11467                           fsr1h	equ	0xFE2
 11468                           fsr1l	equ	0xFE1
 11469                           indf2	equ	0xFDF
 11470                           postinc2	equ	0xFDE
 11471                           postdec2	equ	0xFDD
 11472                           plusw2	equ	0xFDB
 11473                           fsr2h	equ	0xFDA
 11474                           fsr2l	equ	0xFD9
 11475                           status	equ	0xFD8
 11476                           
 11477 ;; *************** function _USBIncrement1msInternalTimers *****************
 11478 ;; Defined at:
 11479 ;;		line 3027 in file "usb_device.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;		None
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1    wreg      void 
 11486 ;; Registers used:
 11487 ;;		wreg, status,2, status,0
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11497 ;;Total ram usage:        0 bytes
 11498 ;; Hardware stack levels used:    1
 11499 ;; This function calls:
 11500 ;;		Nothing
 11501 ;; This function is called by:
 11502 ;;		_USBDeviceTasks
 11503 ;; This function uses a non-reentrant model
 11504 ;;
 11505                           
 11506                           	psect	text55
 11507  008702                     __ptext55:
 11508                           	opt stack 0
 11509  008702                     _USBIncrement1msInternalTimers:
 11510                           	opt stack 29
 11511                           
 11512                           ;usb_device.c: 3035: USB1msTickCount++;
 11513                           
 11514                           ; BSR set to: 15
 11515                           ;incstack = 0
 11516  008702  0E01               	movlw	1
 11517  008704  0101               	movlb	1	; () banked
 11518  008706  275E               	addwf	_USB1msTickCount& (0+255),f,b
 11519  008708  0E00               	movlw	0
 11520  00870A  235F               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 11521  00870C  2360               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 11522  00870E  2361               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 11523                           
 11524                           ; BSR set to: 1
 11525                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 11526  008710  0100               	movlb	0	; () banked
 11527  008712  51F2               	movf	_USBBusIsSuspended& (0+255),w,b
 11528  008714  A4D8               	btfss	status,2,c
 11529  008716  0012               	return	
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 11533  008718  2BE9               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 11537  00871A  51E9               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 11538  00871C  A4D8               	btfss	status,2,c
 11539  00871E  0012               	return	
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 11543  008720  69E9               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 11544                           
 11545                           ; BSR set to: 0
 11546  008722  0012               	return	
 11547  008724                     __end_of_USBIncrement1msInternalTimers:
 11548                           	opt stack 0
 11549                           tblptru	equ	0xFF8
 11550                           tblptrh	equ	0xFF7
 11551                           tblptrl	equ	0xFF6
 11552                           tablat	equ	0xFF5
 11553                           prodh	equ	0xFF4
 11554                           prodl	equ	0xFF3
 11555                           intcon	equ	0xFF2
 11556                           intcon2	equ	0xFF1
 11557                           intcon3	equ	0xFF0
 11558                           postinc0	equ	0xFEE
 11559                           wreg	equ	0xFE8
 11560                           indf1	equ	0xFE7
 11561                           postdec1	equ	0xFE5
 11562                           plusw1	equ	0xFE3
 11563                           fsr1h	equ	0xFE2
 11564                           fsr1l	equ	0xFE1
 11565                           indf2	equ	0xFDF
 11566                           postinc2	equ	0xFDE
 11567                           postdec2	equ	0xFDD
 11568                           plusw2	equ	0xFDB
 11569                           fsr2h	equ	0xFDA
 11570                           fsr2l	equ	0xFD9
 11571                           status	equ	0xFD8
 11572                           
 11573 ;; *************** function _USBDeviceInit *****************
 11574 ;; Defined at:
 11575 ;;		line 277 in file "usb_device.c"
 11576 ;; Parameters:    Size  Location     Type
 11577 ;;		None
 11578 ;; Auto vars:     Size  Location     Type
 11579 ;;  i               1    8[COMRAM] unsigned char 
 11580 ;; Return value:  Size  Location     Type
 11581 ;;                  1    wreg      void 
 11582 ;; Registers used:
 11583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11584 ;; Tracked objects:
 11585 ;;		On entry : 0/0
 11586 ;;		On exit  : 0/0
 11587 ;;		Unchanged: 0/0
 11588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11593 ;;Total ram usage:        1 bytes
 11594 ;; Hardware stack levels used:    1
 11595 ;; Hardware stack levels required when called:    1
 11596 ;; This function calls:
 11597 ;;		_memset
 11598 ;; This function is called by:
 11599 ;;		_USBDeviceTasks
 11600 ;;		_main
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604                           	psect	text56
 11605  00407C                     __ptext56:
 11606                           	opt stack 0
 11607  00407C                     _USBDeviceInit:
 11608                           	opt stack 28
 11609                           
 11610                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 11611                           
 11612                           ; BSR set to: 0
 11613                           ;incstack = 0
 11614  00407C  98A0               	bcf	4000,4,c	;volatile
 11615                           
 11616                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 11617  00407E  0E00               	movlw	0
 11618  004080  6E63               	movwf	3939,c	;volatile
 11619                           
 11620                           ;usb_device.c: 291: {UIR = 0;};
 11621  004082  0E00               	movlw	0
 11622  004084  6E62               	movwf	3938,c	;volatile
 11623                           
 11624                           ;usb_device.c: 294: UEP0 = 0;
 11625  004086  0E00               	movlw	0
 11626  004088  010F               	movlb	15	; () banked
 11627  00408A  6F26               	movwf	38,b	;volatile
 11628                           
 11629                           ; BSR set to: 15
 11630                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 11631  00408C  0E27               	movlw	39
 11632  00408E  6E01               	movwf	memset@p1,c
 11633  004090  0E0F               	movlw	15
 11634  004092  6E02               	movwf	memset@p1+1,c
 11635  004094  0E00               	movlw	0
 11636  004096  6E04               	movwf	memset@c+1,c
 11637  004098  0E00               	movlw	0
 11638  00409A  6E03               	movwf	memset@c,c
 11639  00409C  0E00               	movlw	0
 11640  00409E  6E06               	movwf	memset@n+1,c
 11641  0040A0  0E02               	movlw	2
 11642  0040A2  6E05               	movwf	memset@n,c
 11643  0040A4  EC87  F042         	call	_memset	;wreg free
 11644                           
 11645                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11646  0040A8  0E16               	movlw	22
 11647  0040AA  010F               	movlb	15	; () banked
 11648  0040AC  6F39               	movwf	57,b	;volatile
 11649                           
 11650                           ; BSR set to: 15
 11651  0040AE  0E9F               	movlw	159
 11652  0040B0  6F37               	movwf	55,b	;volatile
 11653                           
 11654                           ; BSR set to: 15
 11655  0040B2  0E7B               	movlw	123
 11656  0040B4  6F36               	movwf	54,b	;volatile
 11657                           
 11658                           ; BSR set to: 15
 11659                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 11660  0040B6  0E00               	movlw	0
 11661  0040B8  6E09               	movwf	USBDeviceInit@i,c
 11662  0040BA                     l14258:
 11663                           
 11664                           ; BSR set to: 15
 11665  0040BA  0E0B               	movlw	11
 11666  0040BC  6409               	cpfsgt	USBDeviceInit@i,c
 11667  0040BE  D001               	goto	l139
 11668  0040C0  D00E               	goto	u11220
 11669  0040C2                     l139:
 11670                           
 11671                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 11672                           
 11673                           ; BSR set to: 15
 11674  0040C2  5009               	movf	USBDeviceInit@i,w,c
 11675  0040C4  0D04               	mullw	4
 11676  0040C6  0E00               	movlw	0
 11677  0040C8  24F3               	addwf	prodl,w,c
 11678  0040CA  6ED9               	movwf	fsr2l,c
 11679  0040CC  0E0D               	movlw	13
 11680  0040CE  20F4               	addwfc	prodh,w,c
 11681  0040D0  6EDA               	movwf	fsr2h,c
 11682  0040D2  6ADE               	clrf	postinc2,c
 11683  0040D4  6ADE               	clrf	postinc2,c
 11684  0040D6  6ADE               	clrf	postinc2,c
 11685  0040D8  6ADD               	clrf	postdec2,c
 11686  0040DA  2A09               	incf	USBDeviceInit@i,f,c
 11687  0040DC  D7EE               	goto	l14258
 11688  0040DE                     u11220:
 11689                           
 11690                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 11691  0040DE  8C65               	bsf	3941,6,c	;volatile
 11692                           
 11693                           ;usb_device.c: 316: UADDR = 0x00;
 11694  0040E0  0E00               	movlw	0
 11695  0040E2  010F               	movlb	15	; () banked
 11696  0040E4  6F38               	movwf	56,b	;volatile
 11697                           
 11698                           ; BSR set to: 15
 11699                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 11700  0040E6  9865               	bcf	3941,4,c	;volatile
 11701                           
 11702                           ; BSR set to: 15
 11703                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 11704  0040E8  9C65               	bcf	3941,6,c	;volatile
 11705  0040EA                     
 11706                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 11707                           
 11708                           ; BSR set to: 15
 11709  0040EA  9662               	bcf	3938,3,c	;volatile
 11710                           
 11711                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 11712  0040EC  0E00               	movlw	0
 11713  0040EE  0100               	movlb	0	; () banked
 11714  0040F0  6FC2               	movwf	(_inPipes+3)& (0+255),b
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 11718  0040F2  0E00               	movlw	0
 11719  0040F4  0101               	movlb	1	; () banked
 11720  0040F6  6F34               	movwf	(_outPipes+3)& (0+255),b
 11721                           
 11722                           ; BSR set to: 1
 11723                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 11724  0040F8  0E00               	movlw	0
 11725  0040FA  6F36               	movwf	(_outPipes+5)& (0+255),b
 11726  0040FC  0E00               	movlw	0
 11727  0040FE  6F35               	movwf	(_outPipes+4)& (0+255),b
 11728                           
 11729                           ; BSR set to: 1
 11730                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 11731  004100  B662               	btfsc	3938,3,c	;volatile
 11732  004102  D7F3               	goto	l141
 11733                           
 11734                           ; BSR set to: 1
 11735                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 11736                           
 11737                           ; BSR set to: 1
 11738  004104  0E01               	movlw	1
 11739  004106  0100               	movlb	0	; () banked
 11740  004108  6FED               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 11741                           
 11742                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 11743  00410A  0E01               	movlw	1
 11744  00410C  6FEC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 11745                           
 11746                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 11747  00410E  0E00               	movlw	0
 11748  004110  6FEB               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 11749                           
 11750                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 11751  004112  0E00               	movlw	0
 11752  004114  6FEA               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 11753                           
 11754                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 11755  004116  0E00               	movlw	0
 11756  004118  6FF2               	movwf	_USBBusIsSuspended& (0+255),b
 11757                           
 11758                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 11759  00411A  0E00               	movlw	0
 11760  00411C  6E09               	movwf	USBDeviceInit@i,c
 11761  00411E                     l14286:
 11762                           
 11763                           ; BSR set to: 0
 11764  00411E  0E02               	movlw	2
 11765  004120  6409               	cpfsgt	USBDeviceInit@i,c
 11766  004122  D001               	goto	l143
 11767  004124  D02E               	goto	u11250
 11768  004126                     l143:
 11769                           
 11770                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 11771                           
 11772                           ; BSR set to: 0
 11773  004126  5009               	movf	USBDeviceInit@i,w,c
 11774  004128  0D02               	mullw	2
 11775  00412A  0EC5               	movlw	low _pBDTEntryIn
 11776  00412C  24F3               	addwf	prodl,w,c
 11777  00412E  6ED9               	movwf	fsr2l,c
 11778  004130  0E00               	movlw	high _pBDTEntryIn
 11779  004132  20F4               	addwfc	prodh,w,c
 11780  004134  6EDA               	movwf	fsr2h,c
 11781  004136  0E00               	movlw	0
 11782  004138  6EDE               	movwf	postinc2,c
 11783  00413A  0E00               	movlw	0
 11784  00413C  6EDD               	movwf	postdec2,c
 11785                           
 11786                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 11787  00413E  5009               	movf	USBDeviceInit@i,w,c
 11788  004140  0D02               	mullw	2
 11789  004142  0E40               	movlw	low _pBDTEntryOut
 11790  004144  24F3               	addwf	prodl,w,c
 11791  004146  6ED9               	movwf	fsr2l,c
 11792  004148  0E01               	movlw	high _pBDTEntryOut
 11793  00414A  20F4               	addwfc	prodh,w,c
 11794  00414C  6EDA               	movwf	fsr2h,c
 11795  00414E  0E00               	movlw	0
 11796  004150  6EDE               	movwf	postinc2,c
 11797  004152  0E00               	movlw	0
 11798  004154  6EDD               	movwf	postdec2,c
 11799                           
 11800                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 11801  004156  5009               	movf	USBDeviceInit@i,w,c
 11802  004158  0D01               	mullw	1
 11803  00415A  0E6B               	movlw	low _ep_data_in
 11804  00415C  24F3               	addwf	prodl,w,c
 11805  00415E  6ED9               	movwf	fsr2l,c
 11806  004160  0E01               	movlw	high _ep_data_in
 11807  004162  20F4               	addwfc	prodh,w,c
 11808  004164  6EDA               	movwf	fsr2h,c
 11809  004166  0E00               	movlw	0
 11810  004168  6EDF               	movwf	indf2,c
 11811                           
 11812                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 11813  00416A  5009               	movf	USBDeviceInit@i,w,c
 11814  00416C  0D01               	mullw	1
 11815  00416E  0E68               	movlw	low _ep_data_out
 11816  004170  24F3               	addwf	prodl,w,c
 11817  004172  6ED9               	movwf	fsr2l,c
 11818  004174  0E01               	movlw	high _ep_data_out
 11819  004176  20F4               	addwfc	prodh,w,c
 11820  004178  6EDA               	movwf	fsr2h,c
 11821  00417A  0E00               	movlw	0
 11822  00417C  6EDF               	movwf	indf2,c
 11823  00417E  2A09               	incf	USBDeviceInit@i,f,c
 11824  004180  D7CE               	goto	l14286
 11825  004182                     u11250:
 11826                           
 11827                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11828  004182  0E08               	movlw	8
 11829  004184  0100               	movlb	0	; () banked
 11830  004186  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 11831  004188  0E0D               	movlw	13
 11832  00418A  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 11836  00418C  0E16               	movlw	22
 11837  00418E  010F               	movlb	15	; () banked
 11838  004190  6F26               	movwf	38,b	;volatile
 11839                           
 11840                           ; BSR set to: 15
 11841                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 11842  004192  0E0D               	movlw	13
 11843  004194  010D               	movlb	13	; () banked
 11844  004196  6F03               	movwf	3,b	;volatile
 11845  004198  0E30               	movlw	48
 11846  00419A  6F02               	movwf	2,b	;volatile
 11847                           
 11848                           ; BSR set to: 13
 11849                           ;usb_device.c: 359: BDT[0].CNT = 8;
 11850  00419C  0E08               	movlw	8
 11851  00419E  6F01               	movwf	1,b	;volatile
 11852                           
 11853                           ; BSR set to: 13
 11854                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 11855  0041A0  0E04               	movlw	4
 11856  0041A2  6F00               	movwf	0,b	;volatile
 11857                           
 11858                           ; BSR set to: 13
 11859                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 11860  0041A4  8F00               	bsf	0,7,b	;volatile
 11861                           
 11862                           ; BSR set to: 13
 11863                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 11864  0041A6  0E00               	movlw	0
 11865  0041A8  0100               	movlb	0	; () banked
 11866  0041AA  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 11867                           
 11868                           ; BSR set to: 0
 11869                           ;usb_device.c: 366: USB1msTickCount = 0;
 11870  0041AC  0E00               	movlw	0
 11871  0041AE  0101               	movlb	1	; () banked
 11872  0041B0  6F5E               	movwf	_USB1msTickCount& (0+255),b
 11873  0041B2  0E00               	movlw	0
 11874  0041B4  6F5F               	movwf	(_USB1msTickCount+1)& (0+255),b
 11875  0041B6  0E00               	movlw	0
 11876  0041B8  6F60               	movwf	(_USB1msTickCount+2)& (0+255),b
 11877  0041BA  0E00               	movlw	0
 11878  0041BC  6F61               	movwf	(_USB1msTickCount+3)& (0+255),b
 11879                           
 11880                           ; BSR set to: 1
 11881                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 11882  0041BE  0E00               	movlw	0
 11883  0041C0  0100               	movlb	0	; () banked
 11884  0041C2  6FE9               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11885                           
 11886                           ; BSR set to: 0
 11887                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 11888  0041C4  0E00               	movlw	0
 11889  0041C6  6FF6               	movwf	_USBDeviceState& (0+255),b
 11890                           
 11891                           ; BSR set to: 0
 11892  0041C8  0012               	return		;funcret
 11893  0041CA                     __end_of_USBDeviceInit:
 11894                           	opt stack 0
 11895                           tblptru	equ	0xFF8
 11896                           tblptrh	equ	0xFF7
 11897                           tblptrl	equ	0xFF6
 11898                           tablat	equ	0xFF5
 11899                           prodh	equ	0xFF4
 11900                           prodl	equ	0xFF3
 11901                           intcon	equ	0xFF2
 11902                           intcon2	equ	0xFF1
 11903                           intcon3	equ	0xFF0
 11904                           postinc0	equ	0xFEE
 11905                           wreg	equ	0xFE8
 11906                           indf1	equ	0xFE7
 11907                           postdec1	equ	0xFE5
 11908                           plusw1	equ	0xFE3
 11909                           fsr1h	equ	0xFE2
 11910                           fsr1l	equ	0xFE1
 11911                           indf2	equ	0xFDF
 11912                           postinc2	equ	0xFDE
 11913                           postdec2	equ	0xFDD
 11914                           plusw2	equ	0xFDB
 11915                           fsr2h	equ	0xFDA
 11916                           fsr2l	equ	0xFD9
 11917                           status	equ	0xFD8
 11918                           
 11919 ;; *************** function _USBCtrlEPService *****************
 11920 ;; Defined at:
 11921 ;;		line 2374 in file "usb_device.c"
 11922 ;; Parameters:    Size  Location     Type
 11923 ;;		None
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;		None
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  1    wreg      void 
 11928 ;; Registers used:
 11929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11930 ;; Tracked objects:
 11931 ;;		On entry : 0/0
 11932 ;;		On exit  : 0/0
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11938 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11939 ;;Total ram usage:        2 bytes
 11940 ;; Hardware stack levels used:    1
 11941 ;; Hardware stack levels required when called:    7
 11942 ;; This function calls:
 11943 ;;		_USBCtrlTrfInHandler
 11944 ;;		_USBCtrlTrfOutHandler
 11945 ;;		_USBCtrlTrfSetupHandler
 11946 ;;		_memcpy
 11947 ;; This function is called by:
 11948 ;;		_USBDeviceTasks
 11949 ;; This function uses a non-reentrant model
 11950 ;;
 11951                           
 11952                           	psect	text57
 11953  00610E                     __ptext57:
 11954                           	opt stack 0
 11955  00610E                     _USBCtrlEPService:
 11956                           	opt stack 22
 11957                           
 11958                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;incstack = 0
 11962  00610E  0E2D               	movlw	45
 11963  006110  0100               	movlb	0	; () banked
 11964  006112  6FEF               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 11968  006114  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 11969  006118  0EFD               	movlw	253
 11970  00611A  161E               	andwf	??_USBCtrlEPService,f,c
 11971  00611C  A4D8               	btfss	status,2,c
 11972  00611E  D044               	goto	l309
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 11976  006120  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 11977  006124  90D8               	bcf	status,0,c
 11978  006126  321E               	rrcf	??_USBCtrlEPService,f,c
 11979  006128  0E3F               	movlw	63
 11980  00612A  161E               	andwf	??_USBCtrlEPService,f,c
 11981  00612C  501E               	movf	??_USBCtrlEPService,w,c
 11982  00612E  0D04               	mullw	4
 11983  006130  0E00               	movlw	0
 11984  006132  24F3               	addwf	prodl,w,c
 11985  006134  6FDB               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 11986  006136  0E0D               	movlw	13
 11987  006138  20F4               	addwfc	prodh,w,c
 11988  00613A  6FDC               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 11989                           
 11990                           ; BSR set to: 0
 11991                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11992  00613C  C0DB  F0D9         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 11993  006140  C0DC  F0DA         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 11997  006144  0E04               	movlw	4
 11998  006146  19D9               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 11999  006148  6FD9               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 12000  00614A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12001  00614C  6FDA               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 12002                           
 12003                           ; BSR set to: 0
 12004                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12005  00614E  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12006  006152  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12007  006156  30DF               	rrcf	223,w,c
 12008  006158  32E8               	rrcf	wreg,f,c
 12009  00615A  0B0F               	andlw	15
 12010  00615C  0A0D               	xorlw	13
 12011  00615E  A4D8               	btfss	status,2,c
 12012  006160  D020               	goto	l310
 12013                           
 12014                           ; BSR set to: 0
 12015                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 12016  006162  0E30               	movlw	48
 12017  006164  6E01               	movwf	memcpy@d1,c
 12018  006166  0E0D               	movlw	13
 12019  006168  6E02               	movwf	memcpy@d1+1,c
 12020  00616A  EE20 F002          	lfsr	2,2
 12021  00616E  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12022  006170  26D9               	addwf	fsr2l,f,c
 12023  006172  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12024  006174  22DA               	addwfc	fsr2h,f,c
 12025  006176  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 12026  00617A  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 12027  00617E  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 12028  006182  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 12029  006186  5003               	movf	memcpy@s1,w,c
 12030  006188  1004               	iorwf	memcpy@s1+1,w,c
 12031  00618A  A4D8               	btfss	status,2,c
 12032  00618C  0E20               	movlw	32
 12033  00618E  6E05               	movwf	memcpy@s1+2,c
 12034  006190  0E00               	movlw	0
 12035  006192  6E07               	movwf	memcpy@n+1,c
 12036  006194  0E08               	movlw	8
 12037  006196  6E06               	movwf	memcpy@n,c
 12038  006198  ECF2  F03A         	call	_memcpy	;wreg free
 12039                           
 12040                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 12041  00619C  EC35  F035         	call	_USBCtrlTrfSetupHandler	;wreg free
 12042                           
 12043                           ;usb_device.c: 2411: }
 12044  0061A0  0012               	return	
 12045  0061A2                     l310:
 12046                           
 12047                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 12048  0061A2  ECB7  F03B         	call	_USBCtrlTrfOutHandler	;wreg free
 12049                           
 12050                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 12051  0061A6  0012               	return	
 12052  0061A8                     l309:
 12053                           
 12054                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 12055  0061A8  0100               	movlb	0	; () banked
 12056  0061AA  51FD               	movf	_USTATcopy& (0+255),w,b
 12057  0061AC  0BFD               	andlw	253
 12058  0061AE  0A04               	xorlw	4
 12059  0061B0  A4D8               	btfss	status,2,c
 12060  0061B2  0012               	return	
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 12064  0061B4  EC89  F02D         	call	_USBCtrlTrfInHandler	;wreg free
 12065  0061B8  0012               	return	
 12066  0061BA                     __end_of_USBCtrlEPService:
 12067                           	opt stack 0
 12068                           tblptru	equ	0xFF8
 12069                           tblptrh	equ	0xFF7
 12070                           tblptrl	equ	0xFF6
 12071                           tablat	equ	0xFF5
 12072                           prodh	equ	0xFF4
 12073                           prodl	equ	0xFF3
 12074                           intcon	equ	0xFF2
 12075                           intcon2	equ	0xFF1
 12076                           intcon3	equ	0xFF0
 12077                           postinc0	equ	0xFEE
 12078                           wreg	equ	0xFE8
 12079                           indf1	equ	0xFE7
 12080                           postdec1	equ	0xFE5
 12081                           plusw1	equ	0xFE3
 12082                           fsr1h	equ	0xFE2
 12083                           fsr1l	equ	0xFE1
 12084                           indf2	equ	0xFDF
 12085                           postinc2	equ	0xFDE
 12086                           postdec2	equ	0xFDD
 12087                           plusw2	equ	0xFDB
 12088                           fsr2h	equ	0xFDA
 12089                           fsr2l	equ	0xFD9
 12090                           status	equ	0xFD8
 12091                           
 12092 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12093 ;; Defined at:
 12094 ;;		line 2467 in file "usb_device.c"
 12095 ;; Parameters:    Size  Location     Type
 12096 ;;		None
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;		None
 12099 ;; Return value:  Size  Location     Type
 12100 ;;                  1    wreg      void 
 12101 ;; Registers used:
 12102 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12103 ;; Tracked objects:
 12104 ;;		On entry : 0/0
 12105 ;;		On exit  : 0/0
 12106 ;;		Unchanged: 0/0
 12107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12112 ;;Total ram usage:        0 bytes
 12113 ;; Hardware stack levels used:    1
 12114 ;; Hardware stack levels required when called:    6
 12115 ;; This function calls:
 12116 ;;		_USBCheckStdRequest
 12117 ;;		_USBCtrlEPServiceComplete
 12118 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12119 ;; This function is called by:
 12120 ;;		_USBCtrlEPService
 12121 ;; This function uses a non-reentrant model
 12122 ;;
 12123                           
 12124                           	psect	text58
 12125  006A6A                     __ptext58:
 12126                           	opt stack 0
 12127  006A6A                     _USBCtrlTrfSetupHandler:
 12128                           	opt stack 22
 12129                           
 12130                           ;usb_device.c: 2472: shortPacketStatus = 0;
 12131                           
 12132                           ;incstack = 0
 12133  006A6A  0E00               	movlw	0
 12134  006A6C  0100               	movlb	0	; () banked
 12135  006A6E  6FF5               	movwf	_shortPacketStatus& (0+255),b
 12136                           
 12137                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 12138  006A70  0E00               	movlw	0
 12139  006A72  6FEE               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 12140                           
 12141                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 12142  006A74  0E00               	movlw	0
 12143  006A76  6FEB               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12144                           
 12145                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 12146  006A78  0E00               	movlw	0
 12147  006A7A  6FEA               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12148                           
 12149                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 12150  006A7C  0E00               	movlw	0
 12151  006A7E  6FF0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12152                           
 12153                           ;usb_device.c: 2477: controlTransferState = 0;
 12154  006A80  0E00               	movlw	0
 12155  006A82  6FF4               	movwf	_controlTransferState& (0+255),b
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12159  006A84  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12160  006A88  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12161  006A8C  0E7F               	movlw	127
 12162  006A8E  16DF               	andwf	indf2,f,c
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12166  006A90  0E04               	movlw	4
 12167  006A92  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 12168  006A94  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 12169  006A96  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12170  006A98  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12174  006A9A  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12175  006A9E  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12176  006AA2  0E7F               	movlw	127
 12177  006AA4  16DF               	andwf	indf2,f,c
 12178                           
 12179                           ; BSR set to: 0
 12180                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12181  006AA6  0E04               	movlw	4
 12182  006AA8  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 12183  006AAA  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 12184  006AAC  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12185  006AAE  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12189  006AB0  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12190  006AB4  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12191  006AB8  0E7F               	movlw	127
 12192  006ABA  16DF               	andwf	indf2,f,c
 12193                           
 12194                           ; BSR set to: 0
 12195                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 12196  006ABC  0E00               	movlw	0
 12197  006ABE  6FC2               	movwf	(_inPipes+3)& (0+255),b
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 12201  006AC0  0E00               	movlw	0
 12202  006AC2  6FC4               	movwf	(_inPipes+5)& (0+255),b
 12203  006AC4  0E00               	movlw	0
 12204  006AC6  6FC3               	movwf	(_inPipes+4)& (0+255),b
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 12208  006AC8  0E00               	movlw	0
 12209  006ACA  0101               	movlb	1	; () banked
 12210  006ACC  6F34               	movwf	(_outPipes+3)& (0+255),b
 12211                           
 12212                           ; BSR set to: 1
 12213                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 12214  006ACE  0E00               	movlw	0
 12215  006AD0  6F36               	movwf	(_outPipes+5)& (0+255),b
 12216  006AD2  0E00               	movlw	0
 12217  006AD4  6F35               	movwf	(_outPipes+4)& (0+255),b
 12218                           
 12219                           ; BSR set to: 1
 12220                           ;usb_device.c: 2502: USBCheckStdRequest();
 12221  006AD6  EC62  F028         	call	_USBCheckStdRequest	;wreg free
 12222                           
 12223                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12224  006ADA  0E00               	movlw	0
 12225  006ADC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12226  006ADE  0E03               	movlw	3
 12227  006AE0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12228  006AE2  0E00               	movlw	0
 12229  006AE4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12230  006AE6  0E00               	movlw	0
 12231  006AE8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12232  006AEA  0E00               	movlw	0
 12233  006AEC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12234  006AEE  0E00               	movlw	0
 12235  006AF0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12236  006AF2  ECDD  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12237                           
 12238                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 12239  006AF6  EC6C  F027         	call	_USBCtrlEPServiceComplete	;wreg free
 12240  006AFA  0012               	return		;funcret
 12241  006AFC                     __end_of_USBCtrlTrfSetupHandler:
 12242                           	opt stack 0
 12243                           tblptru	equ	0xFF8
 12244                           tblptrh	equ	0xFF7
 12245                           tblptrl	equ	0xFF6
 12246                           tablat	equ	0xFF5
 12247                           prodh	equ	0xFF4
 12248                           prodl	equ	0xFF3
 12249                           intcon	equ	0xFF2
 12250                           intcon2	equ	0xFF1
 12251                           intcon3	equ	0xFF0
 12252                           postinc0	equ	0xFEE
 12253                           wreg	equ	0xFE8
 12254                           indf1	equ	0xFE7
 12255                           postdec1	equ	0xFE5
 12256                           plusw1	equ	0xFE3
 12257                           fsr1h	equ	0xFE2
 12258                           fsr1l	equ	0xFE1
 12259                           indf2	equ	0xFDF
 12260                           postinc2	equ	0xFDE
 12261                           postdec2	equ	0xFDD
 12262                           plusw2	equ	0xFDB
 12263                           fsr2h	equ	0xFDA
 12264                           fsr2l	equ	0xFD9
 12265                           status	equ	0xFD8
 12266                           
 12267 ;; *************** function _USBCtrlEPServiceComplete *****************
 12268 ;; Defined at:
 12269 ;;		line 1618 in file "usb_device.c"
 12270 ;; Parameters:    Size  Location     Type
 12271 ;;		None
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;		None
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  1    wreg      void 
 12276 ;; Registers used:
 12277 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12287 ;;Total ram usage:        0 bytes
 12288 ;; Hardware stack levels used:    1
 12289 ;; Hardware stack levels required when called:    2
 12290 ;; This function calls:
 12291 ;;		_USBCtrlEPAllowDataStage
 12292 ;;		_USBCtrlEPAllowStatusStage
 12293 ;; This function is called by:
 12294 ;;		_USBCtrlTrfSetupHandler
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298                           	psect	text59
 12299  004ED8                     __ptext59:
 12300                           	opt stack 0
 12301  004ED8                     _USBCtrlEPServiceComplete:
 12302                           	opt stack 25
 12303                           
 12304                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 12305                           
 12306                           ;incstack = 0
 12307  004ED8  9865               	bcf	3941,4,c	;volatile
 12308                           
 12309                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 12310  004EDA  0100               	movlb	0	; () banked
 12311  004EDC  BFC2               	btfsc	(_inPipes+3)& (0+255),7,b
 12312  004EDE  D03C               	goto	l219
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 12316  004EE0  0101               	movlb	1	; () banked
 12317  004EE2  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 12318  004EE4  D00D               	goto	l220
 12319                           
 12320                           ; BSR set to: 1
 12321                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 12322  004EE6  0E02               	movlw	2
 12323  004EE8  0100               	movlb	0	; () banked
 12324  004EEA  6FF4               	movwf	_controlTransferState& (0+255),b
 12325                           
 12326                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 12327  004EEC  51EA               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 12328  004EEE  B4D8               	btfsc	status,2,c
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 12332  004EF0  EC20  F033         	call	_USBCtrlEPAllowDataStage	;wreg free
 12333                           
 12334                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 12335  004EF4  0E00               	movlw	0
 12336  004EF6  0100               	movlb	0	; () banked
 12337  004EF8  6FEC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12338                           
 12339                           ; BSR set to: 0
 12340                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 12341  004EFA  0E00               	movlw	0
 12342  004EFC  6FED               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12343                           
 12344                           ;usb_device.c: 1654: }
 12345  004EFE  0012               	return	
 12346  004F00                     l220:
 12347                           
 12348                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 12349                           
 12350                           ; BSR set to: 0
 12351  004F00  0100               	movlb	0	; () banked
 12352  004F02  EE20 F001          	lfsr	2,1
 12353  004F06  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12354  004F08  26D9               	addwf	fsr2l,f,c
 12355  004F0A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12356  004F0C  22DA               	addwfc	fsr2h,f,c
 12357  004F0E  0E08               	movlw	8
 12358  004F10  6EDF               	movwf	indf2,c
 12359                           
 12360                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12361  004F12  EE20 F002          	lfsr	2,2
 12362  004F16  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12363  004F18  26D9               	addwf	fsr2l,f,c
 12364  004F1A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12365  004F1C  22DA               	addwfc	fsr2h,f,c
 12366  004F1E  0E30               	movlw	48
 12367  004F20  6EDE               	movwf	postinc2,c
 12368  004F22  0E0D               	movlw	13
 12369  004F24  6EDD               	movwf	postdec2,c
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12373  004F26  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12374  004F2A  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12375  004F2E  0E0C               	movlw	12
 12376  004F30  6EDF               	movwf	indf2,c
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12380  004F32  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12381  004F36  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12382  004F3A  0E00               	movlw	0
 12383  004F3C  8EDB               	bsf	plusw2,7,c
 12384                           
 12385                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 12386  004F3E  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12387  004F42  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12388  004F46  0E04               	movlw	4
 12389  004F48  6EDF               	movwf	indf2,c
 12390                           
 12391                           ; BSR set to: 0
 12392                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12393  004F4A  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12394  004F4E  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12395  004F52  0E00               	movlw	0
 12396  004F54  8EDB               	bsf	plusw2,7,c
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 12400  004F56  0012               	return	
 12401  004F58                     l219:
 12402                           
 12403                           ; BSR set to: 0
 12404                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 12405  004F58  010D               	movlb	13	; () banked
 12406  004F5A  AF30               	btfss	48,7,b	;volatile
 12407  004F5C  D012               	goto	l224
 12408                           
 12409                           ; BSR set to: 13
 12410                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 12411  004F5E  0E01               	movlw	1
 12412  004F60  0100               	movlb	0	; () banked
 12413  004F62  6FF4               	movwf	_controlTransferState& (0+255),b
 12414                           
 12415                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 12416  004F64  51EB               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 12417  004F66  B4D8               	btfsc	status,2,c
 12418                           
 12419                           ; BSR set to: 0
 12420                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 12421  004F68  EC20  F033         	call	_USBCtrlEPAllowDataStage	;wreg free
 12422                           
 12423                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 12424  004F6C  0E00               	movlw	0
 12425  004F6E  0100               	movlb	0	; () banked
 12426  004F70  6FEC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12427                           
 12428                           ; BSR set to: 0
 12429                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 12430  004F72  0E00               	movlw	0
 12431  004F74  6FED               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 12435  004F76  51EE               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12436  004F78  A4D8               	btfss	status,2,c
 12437  004F7A  0012               	return	
 12438                           
 12439                           ; BSR set to: 0
 12440                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 12441  004F7C  ECED  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12442                           
 12443                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 12444  004F80  0012               	return	
 12445  004F82                     l224:
 12446                           
 12447                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 12448  004F82  0E02               	movlw	2
 12449  004F84  0100               	movlb	0	; () banked
 12450  004F86  6FF4               	movwf	_controlTransferState& (0+255),b
 12451                           
 12452                           ; BSR set to: 0
 12453                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 12454  004F88  EE20 F001          	lfsr	2,1
 12455  004F8C  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12456  004F8E  26D9               	addwf	fsr2l,f,c
 12457  004F90  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12458  004F92  22DA               	addwfc	fsr2h,f,c
 12459  004F94  0E08               	movlw	8
 12460  004F96  6EDF               	movwf	indf2,c
 12461                           
 12462                           ; BSR set to: 0
 12463                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12464  004F98  EE20 F002          	lfsr	2,2
 12465  004F9C  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12466  004F9E  26D9               	addwf	fsr2l,f,c
 12467  004FA0  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12468  004FA2  22DA               	addwfc	fsr2h,f,c
 12469  004FA4  0E30               	movlw	48
 12470  004FA6  6EDE               	movwf	postinc2,c
 12471  004FA8  0E0D               	movlw	13
 12472  004FAA  6EDD               	movwf	postdec2,c
 12473                           
 12474                           ; BSR set to: 0
 12475                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12476  004FAC  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12477  004FB0  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12478  004FB4  0E04               	movlw	4
 12479  004FB6  6EDF               	movwf	indf2,c
 12480                           
 12481                           ; BSR set to: 0
 12482                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12483  004FB8  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12484  004FBC  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12485  004FC0  0E00               	movlw	0
 12486  004FC2  8EDB               	bsf	plusw2,7,c
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 12490  004FC4  0E00               	movlw	0
 12491  004FC6  6FEC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12492                           
 12493                           ; BSR set to: 0
 12494                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 12495  004FC8  0E00               	movlw	0
 12496  004FCA  6FED               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 12500  004FCC  51EE               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12501  004FCE  A4D8               	btfss	status,2,c
 12502  004FD0  0012               	return	
 12503                           
 12504                           ; BSR set to: 0
 12505                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 12506  004FD2  ECED  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12507  004FD6  0012               	return	
 12508  004FD8                     __end_of_USBCtrlEPServiceComplete:
 12509                           	opt stack 0
 12510                           tblptru	equ	0xFF8
 12511                           tblptrh	equ	0xFF7
 12512                           tblptrl	equ	0xFF6
 12513                           tablat	equ	0xFF5
 12514                           prodh	equ	0xFF4
 12515                           prodl	equ	0xFF3
 12516                           intcon	equ	0xFF2
 12517                           intcon2	equ	0xFF1
 12518                           intcon3	equ	0xFF0
 12519                           postinc0	equ	0xFEE
 12520                           wreg	equ	0xFE8
 12521                           indf1	equ	0xFE7
 12522                           postdec1	equ	0xFE5
 12523                           plusw1	equ	0xFE3
 12524                           fsr1h	equ	0xFE2
 12525                           fsr1l	equ	0xFE1
 12526                           indf2	equ	0xFDF
 12527                           postinc2	equ	0xFDE
 12528                           postdec2	equ	0xFDD
 12529                           plusw2	equ	0xFDB
 12530                           fsr2h	equ	0xFDA
 12531                           fsr2l	equ	0xFD9
 12532                           status	equ	0xFD8
 12533                           
 12534 ;; *************** function _USBCtrlEPAllowDataStage *****************
 12535 ;; Defined at:
 12536 ;;		line 1490 in file "usb_device.c"
 12537 ;; Parameters:    Size  Location     Type
 12538 ;;		None
 12539 ;; Auto vars:     Size  Location     Type
 12540 ;;		None
 12541 ;; Return value:  Size  Location     Type
 12542 ;;                  1    wreg      void 
 12543 ;; Registers used:
 12544 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12545 ;; Tracked objects:
 12546 ;;		On entry : 0/0
 12547 ;;		On exit  : 0/0
 12548 ;;		Unchanged: 0/0
 12549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12554 ;;Total ram usage:        0 bytes
 12555 ;; Hardware stack levels used:    1
 12556 ;; Hardware stack levels required when called:    1
 12557 ;; This function calls:
 12558 ;;		_USBCtrlTrfTxService
 12559 ;; This function is called by:
 12560 ;;		_USBCtrlEPServiceComplete
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           	psect	text60
 12565  006640                     __ptext60:
 12566                           	opt stack 0
 12567  006640                     _USBCtrlEPAllowDataStage:
 12568                           	opt stack 25
 12569                           
 12570                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 12571                           
 12572                           ;incstack = 0
 12573  006640  0E00               	movlw	0
 12574  006642  0100               	movlb	0	; () banked
 12575  006644  6FEB               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12576                           
 12577                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 12578  006646  0E00               	movlw	0
 12579  006648  6FEA               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;usb_device.c: 1495: if(controlTransferState == 2)
 12583  00664A  0E02               	movlw	2
 12584  00664C  19F4               	xorwf	_controlTransferState& (0+255),w,b
 12585  00664E  A4D8               	btfss	status,2,c
 12586  006650  D01F               	goto	l208
 12587                           
 12588                           ; BSR set to: 0
 12589                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 12590  006652  EE20 F001          	lfsr	2,1
 12591  006656  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12592  006658  26D9               	addwf	fsr2l,f,c
 12593  00665A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12594  00665C  22DA               	addwfc	fsr2h,f,c
 12595  00665E  0E08               	movlw	8
 12596  006660  6EDF               	movwf	indf2,c
 12597                           
 12598                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12599  006662  EE20 F002          	lfsr	2,2
 12600  006666  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12601  006668  26D9               	addwf	fsr2l,f,c
 12602  00666A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12603  00666C  22DA               	addwfc	fsr2h,f,c
 12604  00666E  0E38               	movlw	56
 12605  006670  6EDE               	movwf	postinc2,c
 12606  006672  0E0D               	movlw	13
 12607  006674  6EDD               	movwf	postdec2,c
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12611  006676  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12612  00667A  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12613  00667E  0E48               	movlw	72
 12614  006680  6EDF               	movwf	indf2,c
 12615                           
 12616                           ; BSR set to: 0
 12617                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12618  006682  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12619  006686  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12620  00668A  0E00               	movlw	0
 12621  00668C  8EDB               	bsf	plusw2,7,c
 12622                           
 12623                           ;usb_device.c: 1502: }
 12624  00668E  0012               	return	
 12625  006690                     l208:
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 12629                           
 12630                           ; BSR set to: 0
 12631  006690  51C3               	movf	(_inPipes+4)& (0+255),w,b
 12632  006692  010D               	movlb	13	; () banked
 12633  006694  5D36               	subwf	54,w,b	;volatile
 12634  006696  0100               	movlb	0	; () banked
 12635  006698  51C4               	movf	(_inPipes+5)& (0+255),w,b
 12636  00669A  010D               	movlb	13	; () banked
 12637  00669C  5937               	subwfb	55,w,b	;volatile
 12638  00669E  B0D8               	btfsc	status,0,c
 12639  0066A0  D004               	goto	l210
 12640                           
 12641                           ; BSR set to: 13
 12642                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 12643  0066A2  CD36 F0C3          	movff	3382,_inPipes+4	;volatile
 12644  0066A6  CD37 F0C4          	movff	3383,_inPipes+5	;volatile
 12645  0066AA                     l210:
 12646                           
 12647                           ; BSR set to: 13
 12648                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 12649                           
 12650                           ; BSR set to: 13
 12651  0066AA  ECE5  F02B         	call	_USBCtrlTrfTxService	;wreg free
 12652                           
 12653                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 12654  0066AE  0100               	movlb	0	; () banked
 12655  0066B0  EE20 F002          	lfsr	2,2
 12656  0066B4  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 12657  0066B6  26D9               	addwf	fsr2l,f,c
 12658  0066B8  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12659  0066BA  22DA               	addwfc	fsr2h,f,c
 12660  0066BC  0E38               	movlw	56
 12661  0066BE  6EDE               	movwf	postinc2,c
 12662  0066C0  0E0D               	movlw	13
 12663  0066C2  6EDD               	movwf	postdec2,c
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12667  0066C4  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12668  0066C8  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12669  0066CC  0E48               	movlw	72
 12670  0066CE  6EDF               	movwf	indf2,c
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12674  0066D0  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12675  0066D4  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12676  0066D8  0E00               	movlw	0
 12677  0066DA  8EDB               	bsf	plusw2,7,c
 12678  0066DC  0012               	return	
 12679  0066DE                     __end_of_USBCtrlEPAllowDataStage:
 12680                           	opt stack 0
 12681                           tblptru	equ	0xFF8
 12682                           tblptrh	equ	0xFF7
 12683                           tblptrl	equ	0xFF6
 12684                           tablat	equ	0xFF5
 12685                           prodh	equ	0xFF4
 12686                           prodl	equ	0xFF3
 12687                           intcon	equ	0xFF2
 12688                           intcon2	equ	0xFF1
 12689                           intcon3	equ	0xFF0
 12690                           postinc0	equ	0xFEE
 12691                           wreg	equ	0xFE8
 12692                           indf1	equ	0xFE7
 12693                           postdec1	equ	0xFE5
 12694                           plusw1	equ	0xFE3
 12695                           fsr1h	equ	0xFE2
 12696                           fsr1l	equ	0xFE1
 12697                           indf2	equ	0xFDF
 12698                           postinc2	equ	0xFDE
 12699                           postdec2	equ	0xFDD
 12700                           plusw2	equ	0xFDB
 12701                           fsr2h	equ	0xFDA
 12702                           fsr2l	equ	0xFD9
 12703                           status	equ	0xFD8
 12704                           
 12705 ;; *************** function _USBCheckStdRequest *****************
 12706 ;; Defined at:
 12707 ;;		line 2688 in file "usb_device.c"
 12708 ;; Parameters:    Size  Location     Type
 12709 ;;		None
 12710 ;; Auto vars:     Size  Location     Type
 12711 ;;		None
 12712 ;; Return value:  Size  Location     Type
 12713 ;;                  1    wreg      void 
 12714 ;; Registers used:
 12715 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12716 ;; Tracked objects:
 12717 ;;		On entry : 0/0
 12718 ;;		On exit  : 0/0
 12719 ;;		Unchanged: 0/0
 12720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12725 ;;Total ram usage:        0 bytes
 12726 ;; Hardware stack levels used:    1
 12727 ;; Hardware stack levels required when called:    5
 12728 ;; This function calls:
 12729 ;;		_USBStdFeatureReqHandler
 12730 ;;		_USBStdGetDscHandler
 12731 ;;		_USBStdGetStatusHandler
 12732 ;;		_USBStdSetCfgHandler
 12733 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12734 ;; This function is called by:
 12735 ;;		_USBCtrlTrfSetupHandler
 12736 ;; This function uses a non-reentrant model
 12737 ;;
 12738                           
 12739                           	psect	text61
 12740  0050C4                     __ptext61:
 12741                           	opt stack 0
 12742  0050C4                     _USBCheckStdRequest:
 12743                           	opt stack 22
 12744                           
 12745                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 12746                           
 12747                           ; BSR set to: 0
 12748                           ;incstack = 0
 12749  0050C4  010D               	movlb	13	; () banked
 12750  0050C6  3930               	swapf	48,w,b	;volatile
 12751  0050C8  32E8               	rrcf	wreg,f,c
 12752  0050CA  0B03               	andlw	3
 12753  0050CC  0900               	iorlw	0
 12754  0050CE  A4D8               	btfss	status,2,c
 12755  0050D0  0012               	return	
 12756  0050D2  D047               	goto	l343
 12757  0050D4                     l344:
 12758                           
 12759                           ; BSR set to: 13
 12760                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 12761  0050D4  0100               	movlb	0	; () banked
 12762  0050D6  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 12763                           
 12764                           ; BSR set to: 0
 12765                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 12766  0050D8  0E08               	movlw	8
 12767  0050DA  6FF6               	movwf	_USBDeviceState& (0+255),b
 12768                           
 12769                           ;usb_device.c: 2698: break;
 12770  0050DC  0012               	return	
 12771  0050DE                     
 12772                           ;usb_device.c: 2700: USBStdGetDscHandler();
 12773                           
 12774                           ; BSR set to: 0
 12775  0050DE  EC8A  F021         	call	_USBStdGetDscHandler	;wreg free
 12776                           
 12777                           ;usb_device.c: 2701: break;
 12778  0050E2  0012               	return	
 12779  0050E4                     
 12780                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 12781  0050E4  ECD3  F028         	call	_USBStdSetCfgHandler	;wreg free
 12782                           
 12783                           ;usb_device.c: 2704: break;
 12784  0050E8  0012               	return	
 12785  0050EA                     
 12786                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 12787  0050EA  0EFE               	movlw	low _USBActiveConfiguration
 12788  0050EC  0100               	movlb	0	; () banked
 12789  0050EE  6FBF               	movwf	_inPipes& (0+255),b
 12790  0050F0  0E00               	movlw	high _USBActiveConfiguration
 12791  0050F2  6FC0               	movwf	(_inPipes+1)& (0+255),b
 12792                           
 12793                           ; BSR set to: 0
 12794                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12795  0050F4  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 12799  0050F6  0E01               	movlw	1
 12800  0050F8  6FC3               	movwf	(_inPipes+4)& (0+255),b
 12801                           
 12802                           ; BSR set to: 0
 12803                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 12804  0050FA  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 12805                           
 12806                           ;usb_device.c: 2710: break;
 12807  0050FC  0012               	return	
 12808  0050FE                     
 12809                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 12810                           
 12811                           ; BSR set to: 0
 12812  0050FE  ECDD  F030         	call	_USBStdGetStatusHandler	;wreg free
 12813                           
 12814                           ;usb_device.c: 2713: break;
 12815  005102  0012               	return	
 12816  005104                     
 12817                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 12818  005104  EC24  F00C         	call	_USBStdFeatureReqHandler	;wreg free
 12819                           
 12820                           ;usb_device.c: 2717: break;
 12821  005108  0012               	return	
 12822  00510A                     
 12823                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 12824  00510A  010D               	movlb	13	; () banked
 12825  00510C  5134               	movf	52,w,b	;volatile
 12826  00510E  0D01               	mullw	1
 12827  005110  0ED7               	movlw	low _USBAlternateInterface
 12828  005112  24F3               	addwf	prodl,w,c
 12829  005114  0100               	movlb	0	; () banked
 12830  005116  6FBF               	movwf	_inPipes& (0+255),b
 12831  005118  0E01               	movlw	high _USBAlternateInterface
 12832  00511A  20F4               	addwfc	prodh,w,c
 12833  00511C  6FC0               	movwf	(_inPipes+1)& (0+255),b
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12837  00511E  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 12841  005120  0E01               	movlw	1
 12842  005122  6FC3               	movwf	(_inPipes+4)& (0+255),b
 12843                           
 12844                           ; BSR set to: 0
 12845                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 12846  005124  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 12847                           
 12848                           ;usb_device.c: 2723: break;
 12849  005126  0012               	return	
 12850  005128                     l353:
 12851                           
 12852                           ; BSR set to: 13
 12853                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 12854  005128  0100               	movlb	0	; () banked
 12855  00512A  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 12859  00512C  010D               	movlb	13	; () banked
 12860  00512E  5134               	movf	52,w,b	;volatile
 12861  005130  0D01               	mullw	1
 12862  005132  0ED7               	movlw	low _USBAlternateInterface
 12863  005134  24F3               	addwf	prodl,w,c
 12864  005136  6ED9               	movwf	fsr2l,c
 12865  005138  0E01               	movlw	high _USBAlternateInterface
 12866  00513A  20F4               	addwfc	prodh,w,c
 12867  00513C  6EDA               	movwf	fsr2h,c
 12868  00513E  CD32 FFDF          	movff	3378,indf2	;volatile
 12869                           
 12870                           ;usb_device.c: 2727: break;
 12871  005142  0012               	return	
 12872  005144                     
 12873                           ; BSR set to: 13
 12874                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 12875                           
 12876                           ; BSR set to: 13
 12877  005144  0E00               	movlw	0
 12878  005146  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12879  005148  0E02               	movlw	2
 12880  00514A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12881  00514C  0E00               	movlw	0
 12882  00514E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12883  005150  0E00               	movlw	0
 12884  005152  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12885  005154  0E00               	movlw	0
 12886  005156  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12887  005158  0E00               	movlw	0
 12888  00515A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12889  00515C  ECDD  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12890                           
 12891                           ;usb_device.c: 2734: }
 12892                           
 12893                           ;usb_device.c: 2733: break;
 12894                           
 12895                           ;usb_device.c: 2732: default:
 12896                           
 12897                           ;usb_device.c: 2731: case 12:
 12898                           
 12899                           ;usb_device.c: 2730: break;
 12900  005160  0012               	return	
 12901  005162                     l343:
 12902  005162  010D               	movlb	13	; () banked
 12903  005164  5131               	movf	49,w,b	;volatile
 12904                           
 12905                           ; Switch size 1, requested type "space"
 12906                           ; Number of cases is 11, Range of values is 0 to 12
 12907                           ; switch strategies available:
 12908                           ; Name         Instructions Cycles
 12909                           ; simple_byte           34    18 (average)
 12910                           ;	Chosen strategy is simple_byte
 12911  005166  0A00               	xorlw	0	; case 0
 12912  005168  B4D8               	btfsc	status,2,c
 12913  00516A  D7C9               	goto	l349
 12914  00516C  0A01               	xorlw	1	; case 1
 12915  00516E  B4D8               	btfsc	status,2,c
 12916  005170  D7C9               	goto	l350
 12917  005172  0A02               	xorlw	2	; case 3
 12918  005174  B4D8               	btfsc	status,2,c
 12919  005176  D7C6               	goto	l350
 12920  005178  0A06               	xorlw	6	; case 5
 12921  00517A  B4D8               	btfsc	status,2,c
 12922  00517C  D7AB               	goto	l344
 12923  00517E  0A03               	xorlw	3	; case 6
 12924  005180  B4D8               	btfsc	status,2,c
 12925  005182  D7AD               	goto	l346
 12926  005184  0A01               	xorlw	1	; case 7
 12927  005186  B4D8               	btfsc	status,2,c
 12928  005188  D7DD               	goto	l354
 12929  00518A  0A0F               	xorlw	15	; case 8
 12930  00518C  B4D8               	btfsc	status,2,c
 12931  00518E  D7AD               	goto	l348
 12932  005190  0A01               	xorlw	1	; case 9
 12933  005192  B4D8               	btfsc	status,2,c
 12934  005194  D7A7               	goto	l347
 12935  005196  0A03               	xorlw	3	; case 10
 12936  005198  B4D8               	btfsc	status,2,c
 12937  00519A  D7B7               	goto	l352
 12938  00519C  0A01               	xorlw	1	; case 11
 12939  00519E  B4D8               	btfsc	status,2,c
 12940  0051A0  D7C3               	goto	l353
 12941  0051A2  0A07               	xorlw	7	; case 12
 12942  0051A4  0012               	return	
 12943  0051A6                     __end_of_USBCheckStdRequest:
 12944                           	opt stack 0
 12945                           tblptru	equ	0xFF8
 12946                           tblptrh	equ	0xFF7
 12947                           tblptrl	equ	0xFF6
 12948                           tablat	equ	0xFF5
 12949                           prodh	equ	0xFF4
 12950                           prodl	equ	0xFF3
 12951                           intcon	equ	0xFF2
 12952                           intcon2	equ	0xFF1
 12953                           intcon3	equ	0xFF0
 12954                           postinc0	equ	0xFEE
 12955                           wreg	equ	0xFE8
 12956                           indf1	equ	0xFE7
 12957                           postdec1	equ	0xFE5
 12958                           plusw1	equ	0xFE3
 12959                           fsr1h	equ	0xFE2
 12960                           fsr1l	equ	0xFE1
 12961                           indf2	equ	0xFDF
 12962                           postinc2	equ	0xFDE
 12963                           postdec2	equ	0xFDD
 12964                           plusw2	equ	0xFDB
 12965                           fsr2h	equ	0xFDA
 12966                           fsr2l	equ	0xFD9
 12967                           status	equ	0xFD8
 12968                           
 12969 ;; *************** function _USBStdSetCfgHandler *****************
 12970 ;; Defined at:
 12971 ;;		line 1970 in file "usb_device.c"
 12972 ;; Parameters:    Size  Location     Type
 12973 ;;		None
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;  i               1   23[COMRAM] unsigned char 
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  1    wreg      void 
 12978 ;; Registers used:
 12979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12980 ;; Tracked objects:
 12981 ;;		On entry : 0/0
 12982 ;;		On exit  : 0/0
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12989 ;;Total ram usage:        1 bytes
 12990 ;; Hardware stack levels used:    1
 12991 ;; Hardware stack levels required when called:    4
 12992 ;; This function calls:
 12993 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12994 ;;		_memset
 12995 ;; This function is called by:
 12996 ;;		_USBCheckStdRequest
 12997 ;; This function uses a non-reentrant model
 12998 ;;
 12999                           
 13000                           	psect	text62
 13001  0051A6                     __ptext62:
 13002                           	opt stack 0
 13003  0051A6                     _USBStdSetCfgHandler:
 13004                           	opt stack 22
 13005                           
 13006                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 13007                           
 13008                           ;incstack = 0
 13009  0051A6  0100               	movlb	0	; () banked
 13010  0051A8  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 13014  0051AA  0E27               	movlw	39
 13015  0051AC  6E01               	movwf	memset@p1,c
 13016  0051AE  0E0F               	movlw	15
 13017  0051B0  6E02               	movwf	memset@p1+1,c
 13018  0051B2  0E00               	movlw	0
 13019  0051B4  6E04               	movwf	memset@c+1,c
 13020  0051B6  0E00               	movlw	0
 13021  0051B8  6E03               	movwf	memset@c,c
 13022  0051BA  0E00               	movlw	0
 13023  0051BC  6E06               	movwf	memset@n+1,c
 13024  0051BE  0E02               	movlw	2
 13025  0051C0  6E05               	movwf	memset@n,c
 13026  0051C2  EC87  F042         	call	_memset	;wreg free
 13027                           
 13028                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13029  0051C6  0E00               	movlw	0
 13030  0051C8  6E01               	movwf	memset@p1,c
 13031  0051CA  0E0D               	movlw	13
 13032  0051CC  6E02               	movwf	memset@p1+1,c
 13033  0051CE  0E00               	movlw	0
 13034  0051D0  6E04               	movwf	memset@c+1,c
 13035  0051D2  0E00               	movlw	0
 13036  0051D4  6E03               	movwf	memset@c,c
 13037  0051D6  0E00               	movlw	0
 13038  0051D8  6E06               	movwf	memset@n+1,c
 13039  0051DA  0E30               	movlw	48
 13040  0051DC  6E05               	movwf	memset@n,c
 13041  0051DE  EC87  F042         	call	_memset	;wreg free
 13042                           
 13043                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 13044  0051E2  8C65               	bsf	3941,6,c	;volatile
 13045                           
 13046                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 13047  0051E4  0E00               	movlw	0
 13048  0051E6  6E18               	movwf	USBStdSetCfgHandler@i,c
 13049  0051E8                     l12272:
 13050  0051E8  0E02               	movlw	2
 13051  0051EA  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 13052  0051EC  D001               	goto	l260
 13053  0051EE  D016               	goto	u8940
 13054  0051F0                     l260:
 13055                           
 13056                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 13057  0051F0  5018               	movf	USBStdSetCfgHandler@i,w,c
 13058  0051F2  0D01               	mullw	1
 13059  0051F4  0E6B               	movlw	low _ep_data_in
 13060  0051F6  24F3               	addwf	prodl,w,c
 13061  0051F8  6ED9               	movwf	fsr2l,c
 13062  0051FA  0E01               	movlw	high _ep_data_in
 13063  0051FC  20F4               	addwfc	prodh,w,c
 13064  0051FE  6EDA               	movwf	fsr2h,c
 13065  005200  0E00               	movlw	0
 13066  005202  6EDF               	movwf	indf2,c
 13067                           
 13068                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 13069  005204  5018               	movf	USBStdSetCfgHandler@i,w,c
 13070  005206  0D01               	mullw	1
 13071  005208  0E68               	movlw	low _ep_data_out
 13072  00520A  24F3               	addwf	prodl,w,c
 13073  00520C  6ED9               	movwf	fsr2l,c
 13074  00520E  0E01               	movlw	high _ep_data_out
 13075  005210  20F4               	addwfc	prodh,w,c
 13076  005212  6EDA               	movwf	fsr2h,c
 13077  005214  0E00               	movlw	0
 13078  005216  6EDF               	movwf	indf2,c
 13079  005218  2A18               	incf	USBStdSetCfgHandler@i,f,c
 13080  00521A  D7E6               	goto	l12272
 13081  00521C                     u8940:
 13082                           
 13083                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 13084  00521C  0ED7               	movlw	low _USBAlternateInterface
 13085  00521E  6E01               	movwf	memset@p1,c
 13086  005220  0E01               	movlw	high _USBAlternateInterface
 13087  005222  6E02               	movwf	memset@p1+1,c
 13088  005224  0E00               	movlw	0
 13089  005226  6E04               	movwf	memset@c+1,c
 13090  005228  0E00               	movlw	0
 13091  00522A  6E03               	movwf	memset@c,c
 13092  00522C  0E00               	movlw	0
 13093  00522E  6E06               	movwf	memset@n+1,c
 13094  005230  0E02               	movlw	2
 13095  005232  6E05               	movwf	memset@n,c
 13096  005234  EC87  F042         	call	_memset	;wreg free
 13097                           
 13098                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 13099  005238  9C65               	bcf	3941,6,c	;volatile
 13100                           
 13101                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13102  00523A  0E08               	movlw	8
 13103  00523C  0100               	movlb	0	; () banked
 13104  00523E  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 13105  005240  0E0D               	movlw	13
 13106  005242  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13110  005244  0E00               	movlw	0
 13111  005246  6FDB               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13112  005248  0E0D               	movlw	13
 13113  00524A  6FDC               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13117  00524C  C0DB  F0D9         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13118  005250  C0DC  F0DA         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13122  005254  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 13123                           
 13124                           ; BSR set to: 0
 13125                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 13126  005258  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 13127  00525A  A4D8               	btfss	status,2,c
 13128  00525C  D003               	goto	l262
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 13132  00525E  0E10               	movlw	16
 13133  005260  6FF6               	movwf	_USBDeviceState& (0+255),b
 13134                           
 13135                           ;usb_device.c: 2015: }
 13136  005262  0012               	return	
 13137  005264                     l262:
 13138                           
 13139                           ; BSR set to: 0
 13140                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 13141                           
 13142                           ; BSR set to: 0
 13143  005264  0E00               	movlw	0
 13144  005266  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13145  005268  0E01               	movlw	1
 13146  00526A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13147  00526C  0EFE               	movlw	low _USBActiveConfiguration
 13148  00526E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13149  005270  0E00               	movlw	high _USBActiveConfiguration
 13150  005272  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13151  005274  0E00               	movlw	0
 13152  005276  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13153  005278  0E01               	movlw	1
 13154  00527A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13155  00527C  ECDD  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13156                           
 13157                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 13158  005280  0E20               	movlw	32
 13159  005282  0100               	movlb	0	; () banked
 13160  005284  6FF6               	movwf	_USBDeviceState& (0+255),b
 13161  005286  0012               	return	
 13162  005288                     __end_of_USBStdSetCfgHandler:
 13163                           	opt stack 0
 13164                           tblptru	equ	0xFF8
 13165                           tblptrh	equ	0xFF7
 13166                           tblptrl	equ	0xFF6
 13167                           tablat	equ	0xFF5
 13168                           prodh	equ	0xFF4
 13169                           prodl	equ	0xFF3
 13170                           intcon	equ	0xFF2
 13171                           intcon2	equ	0xFF1
 13172                           intcon3	equ	0xFF0
 13173                           postinc0	equ	0xFEE
 13174                           wreg	equ	0xFE8
 13175                           indf1	equ	0xFE7
 13176                           postdec1	equ	0xFE5
 13177                           plusw1	equ	0xFE3
 13178                           fsr1h	equ	0xFE2
 13179                           fsr1l	equ	0xFE1
 13180                           indf2	equ	0xFDF
 13181                           postinc2	equ	0xFDE
 13182                           postdec2	equ	0xFDD
 13183                           plusw2	equ	0xFDB
 13184                           fsr2h	equ	0xFDA
 13185                           fsr2l	equ	0xFD9
 13186                           status	equ	0xFD8
 13187                           
 13188 ;; *************** function _memset *****************
 13189 ;; Defined at:
 13190 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 13191 ;; Parameters:    Size  Location     Type
 13192 ;;  p1              2    0[COMRAM] PTR void 
 13193 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13194 ;;  c               2    2[COMRAM] int 
 13195 ;;  n               2    4[COMRAM] unsigned int 
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;  p               2    6[COMRAM] PTR unsigned char 
 13198 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13199 ;; Return value:  Size  Location     Type
 13200 ;;                  2    0[COMRAM] PTR void 
 13201 ;; Registers used:
 13202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13203 ;; Tracked objects:
 13204 ;;		On entry : 0/0
 13205 ;;		On exit  : 0/0
 13206 ;;		Unchanged: 0/0
 13207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13208 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13209 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13211 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13212 ;;Total ram usage:        8 bytes
 13213 ;; Hardware stack levels used:    1
 13214 ;; This function calls:
 13215 ;;		Nothing
 13216 ;; This function is called by:
 13217 ;;		_USBDeviceInit
 13218 ;;		_USBStdSetCfgHandler
 13219 ;; This function uses a non-reentrant model
 13220 ;;
 13221                           
 13222                           	psect	text63
 13223  00850E                     __ptext63:
 13224                           	opt stack 0
 13225  00850E                     _memset:
 13226                           	opt stack 28
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;incstack = 0
 13230  00850E  C001  F007         	movff	memset@p1,memset@p
 13231  008512  C002  F008         	movff	memset@p1+1,memset@p+1
 13232  008516  D008               	goto	l3596
 13233  008518                     l10890:
 13234  008518  C007  FFD9         	movff	memset@p,fsr2l
 13235  00851C  C008  FFDA         	movff	memset@p+1,fsr2h
 13236  008520  C003  FFDF         	movff	memset@c,indf2
 13237  008524  4A07               	infsnz	memset@p,f,c
 13238  008526  2A08               	incf	memset@p+1,f,c
 13239  008528                     l3596:
 13240  008528  0605               	decf	memset@n,f,c
 13241  00852A  A0D8               	btfss	status,0,c
 13242  00852C  0606               	decf	memset@n+1,f,c
 13243  00852E  2805               	incf	memset@n,w,c
 13244  008530  E1F3               	bnz	l10890
 13245  008532  2806               	incf	memset@n+1,w,c
 13246  008534  B4D8               	btfsc	status,2,c
 13247  008536  0012               	return	
 13248  008538  D7EF               	goto	l3597
 13249  00853A                     __end_of_memset:
 13250                           	opt stack 0
 13251                           tblptru	equ	0xFF8
 13252                           tblptrh	equ	0xFF7
 13253                           tblptrl	equ	0xFF6
 13254                           tablat	equ	0xFF5
 13255                           prodh	equ	0xFF4
 13256                           prodl	equ	0xFF3
 13257                           intcon	equ	0xFF2
 13258                           intcon2	equ	0xFF1
 13259                           intcon3	equ	0xFF0
 13260                           postinc0	equ	0xFEE
 13261                           wreg	equ	0xFE8
 13262                           indf1	equ	0xFE7
 13263                           postdec1	equ	0xFE5
 13264                           plusw1	equ	0xFE3
 13265                           fsr1h	equ	0xFE2
 13266                           fsr1l	equ	0xFE1
 13267                           indf2	equ	0xFDF
 13268                           postinc2	equ	0xFDE
 13269                           postdec2	equ	0xFDD
 13270                           plusw2	equ	0xFDB
 13271                           fsr2h	equ	0xFDA
 13272                           fsr2l	equ	0xFD9
 13273                           status	equ	0xFD8
 13274                           
 13275 ;; *************** function _USBStdGetStatusHandler *****************
 13276 ;; Defined at:
 13277 ;;		line 2131 in file "usb_device.c"
 13278 ;; Parameters:    Size  Location     Type
 13279 ;;		None
 13280 ;; Auto vars:     Size  Location     Type
 13281 ;;  p               2    1[COMRAM] PTR struct __BDT
 13282 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  1    wreg      void 
 13285 ;; Registers used:
 13286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13295 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13296 ;;Total ram usage:        3 bytes
 13297 ;; Hardware stack levels used:    1
 13298 ;; This function calls:
 13299 ;;		Nothing
 13300 ;; This function is called by:
 13301 ;;		_USBCheckStdRequest
 13302 ;; This function uses a non-reentrant model
 13303 ;;
 13304                           
 13305                           	psect	text64
 13306  0061BA                     __ptext64:
 13307                           	opt stack 0
 13308  0061BA                     _USBStdGetStatusHandler:
 13309                           	opt stack 26
 13310                           
 13311                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 13312                           
 13313                           ;incstack = 0
 13314  0061BA  0E00               	movlw	0
 13315  0061BC  010D               	movlb	13	; () banked
 13316  0061BE  6F38               	movwf	56,b	;volatile
 13317                           
 13318                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 13319  0061C0  0E00               	movlw	0
 13320  0061C2  6F39               	movwf	57,b	;volatile
 13321                           
 13322                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 13323  0061C4  D039               	goto	l281
 13324  0061C6                     l282:
 13325                           
 13326                           ; BSR set to: 13
 13327                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 13328  0061C6  0100               	movlb	0	; () banked
 13329  0061C8  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13330                           
 13331                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 13332                           
 13333                           ; BSR set to: 13
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 13337                           
 13338                           ;usb_device.c: 2144: if(0 == 1)
 13339  0061CA  0100               	movlb	0	; () banked
 13340  0061CC  05F3               	decf	_RemoteWakeup& (0+255),w,b
 13341  0061CE  A4D8               	btfss	status,2,c
 13342  0061D0  D03E               	goto	l285
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 13346  0061D2  010D               	movlb	13	; () banked
 13347  0061D4  8338               	bsf	56,1,b	;volatile
 13348                           
 13349                           ; BSR set to: 13
 13350                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 13351  0061D6  D03B               	goto	l285
 13352  0061D8                     l286:
 13353                           
 13354                           ; BSR set to: 13
 13355                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 13356  0061D8  0100               	movlb	0	; () banked
 13357  0061DA  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13358                           
 13359                           ;usb_device.c: 2156: break;
 13360  0061DC  D038               	goto	l285
 13361  0061DE                     l287:
 13362                           
 13363                           ; BSR set to: 13
 13364                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 13365  0061DE  0100               	movlb	0	; () banked
 13366  0061E0  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13367                           
 13368                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 13369  0061E2  010D               	movlb	13	; () banked
 13370  0061E4  BF34               	btfsc	52,7,b	;volatile
 13371  0061E6  D00A               	goto	l288
 13372                           
 13373                           ; BSR set to: 13
 13374                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13375  0061E8  5134               	movf	52,w,b	;volatile
 13376  0061EA  0B0F               	andlw	15
 13377  0061EC  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13378  0061EE  5001               	movf	??_USBStdGetStatusHandler,w,c
 13379  0061F0  0D02               	mullw	2
 13380  0061F2  0E40               	movlw	low _pBDTEntryOut
 13381  0061F4  24F3               	addwf	prodl,w,c
 13382  0061F6  6ED9               	movwf	fsr2l,c
 13383  0061F8  0E01               	movlw	high _pBDTEntryOut
 13384  0061FA  D009               	goto	L6
 13385  0061FC                     l288:
 13386                           
 13387                           ; BSR set to: 13
 13388                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 13389                           
 13390                           ; BSR set to: 13
 13391  0061FC  5134               	movf	52,w,b	;volatile
 13392  0061FE  0B0F               	andlw	15
 13393  006200  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13394  006202  5001               	movf	??_USBStdGetStatusHandler,w,c
 13395  006204  0D02               	mullw	2
 13396  006206  0EC5               	movlw	low _pBDTEntryIn
 13397  006208  24F3               	addwf	prodl,w,c
 13398  00620A  6ED9               	movwf	fsr2l,c
 13399  00620C  0E00               	movlw	high _pBDTEntryIn
 13400  00620E                     L6:
 13401  00620E  20F4               	addwfc	prodh,w,c
 13402  006210  6EDA               	movwf	fsr2h,c
 13403  006212  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 13404  006216  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 13405                           
 13406                           ; BSR set to: 13
 13407                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 13408                           
 13409                           ; BSR set to: 13
 13410  00621A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13411  00621E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13412  006222  AEDF               	btfss	indf2,7,c
 13413  006224  D014               	goto	l285
 13414                           
 13415                           ; BSR set to: 13
 13416  006226  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13417  00622A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13418  00622E  A4DF               	btfss	indf2,2,c
 13419  006230  D00E               	goto	l285
 13420                           
 13421                           ; BSR set to: 13
 13422                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 13423  006232  0E01               	movlw	1
 13424  006234  6F38               	movwf	56,b	;volatile
 13425                           
 13426                           ; BSR set to: 13
 13427                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 13428                           
 13429                           ; BSR set to: 13
 13430                           ;usb_device.c: 2176: break;
 13431  006236  D00B               	goto	l285
 13432  006238                     l281:
 13433                           
 13434                           ; BSR set to: 13
 13435                           
 13436                           ; BSR set to: 13
 13437  006238  5130               	movf	48,w,b	;volatile
 13438  00623A  0B1F               	andlw	31
 13439                           
 13440                           ; Switch size 1, requested type "space"
 13441                           ; Number of cases is 3, Range of values is 0 to 2
 13442                           ; switch strategies available:
 13443                           ; Name         Instructions Cycles
 13444                           ; simple_byte           10     6 (average)
 13445                           ;	Chosen strategy is simple_byte
 13446  00623C  0A00               	xorlw	0	; case 0
 13447  00623E  B4D8               	btfsc	status,2,c
 13448  006240  D7C2               	goto	l282
 13449  006242  0A01               	xorlw	1	; case 1
 13450  006244  B4D8               	btfsc	status,2,c
 13451  006246  D7C8               	goto	l286
 13452  006248  0A03               	xorlw	3	; case 2
 13453  00624A  B4D8               	btfsc	status,2,c
 13454  00624C  D7C8               	goto	l287
 13455  00624E                     l285:
 13456                           
 13457                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 13458  00624E  0100               	movlb	0	; () banked
 13459  006250  AFC2               	btfss	(_inPipes+3)& (0+255),7,b
 13460  006252  0012               	return	
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 13464  006254  0E38               	movlw	56
 13465  006256  6FBF               	movwf	_inPipes& (0+255),b
 13466  006258  0E0D               	movlw	13
 13467  00625A  6FC0               	movwf	(_inPipes+1)& (0+255),b
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13471  00625C  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 13472                           
 13473                           ; BSR set to: 0
 13474                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 13475  00625E  0E02               	movlw	2
 13476  006260  6FC3               	movwf	(_inPipes+4)& (0+255),b
 13477  006262  0012               	return	
 13478  006264                     __end_of_USBStdGetStatusHandler:
 13479                           	opt stack 0
 13480                           tblptru	equ	0xFF8
 13481                           tblptrh	equ	0xFF7
 13482                           tblptrl	equ	0xFF6
 13483                           tablat	equ	0xFF5
 13484                           prodh	equ	0xFF4
 13485                           prodl	equ	0xFF3
 13486                           intcon	equ	0xFF2
 13487                           intcon2	equ	0xFF1
 13488                           intcon3	equ	0xFF0
 13489                           postinc0	equ	0xFEE
 13490                           wreg	equ	0xFE8
 13491                           indf1	equ	0xFE7
 13492                           postdec1	equ	0xFE5
 13493                           plusw1	equ	0xFE3
 13494                           fsr1h	equ	0xFE2
 13495                           fsr1l	equ	0xFE1
 13496                           indf2	equ	0xFDF
 13497                           postinc2	equ	0xFDE
 13498                           postdec2	equ	0xFDD
 13499                           plusw2	equ	0xFDB
 13500                           fsr2h	equ	0xFDA
 13501                           fsr2l	equ	0xFD9
 13502                           status	equ	0xFD8
 13503                           
 13504 ;; *************** function _USBStdGetDscHandler *****************
 13505 ;; Defined at:
 13506 ;;		line 2045 in file "usb_device.c"
 13507 ;; Parameters:    Size  Location     Type
 13508 ;;		None
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;		None
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  1    wreg      void 
 13513 ;; Registers used:
 13514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 0/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13524 ;;Total ram usage:        2 bytes
 13525 ;; Hardware stack levels used:    1
 13526 ;; This function calls:
 13527 ;;		Nothing
 13528 ;; This function is called by:
 13529 ;;		_USBCheckStdRequest
 13530 ;; This function uses a non-reentrant model
 13531 ;;
 13532                           
 13533                           	psect	text65
 13534  004314                     __ptext65:
 13535                           	opt stack 0
 13536  004314                     _USBStdGetDscHandler:
 13537                           	opt stack 26
 13538                           
 13539                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 13540                           
 13541                           ; BSR set to: 0
 13542                           ;incstack = 0
 13543  004314  0E80               	movlw	128
 13544  004316  010D               	movlb	13	; () banked
 13545  004318  1930               	xorwf	48,w,b	;volatile
 13546  00431A  A4D8               	btfss	status,2,c
 13547  00431C  0012               	return	
 13548                           
 13549                           ; BSR set to: 13
 13550                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 13551  00431E  0EC0               	movlw	192
 13552  004320  0100               	movlb	0	; () banked
 13553  004322  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13554                           
 13555                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 13556  004324  D088               	goto	l268
 13557  004326                     
 13558                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 13559                           
 13560                           ; BSR set to: 0
 13561  004326  0EA5               	movlw	low _device_dsc
 13562  004328  0100               	movlb	0	; () banked
 13563  00432A  6FBF               	movwf	_inPipes& (0+255),b
 13564  00432C  0E8F               	movlw	high _device_dsc
 13565  00432E  6FC0               	movwf	(_inPipes+1)& (0+255),b
 13566                           
 13567                           ; BSR set to: 0
 13568                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 13569  004330  0E00               	movlw	0
 13570  004332  6FC4               	movwf	(_inPipes+5)& (0+255),b
 13571  004334  0E12               	movlw	18
 13572  004336  6FC3               	movwf	(_inPipes+4)& (0+255),b
 13573                           
 13574                           ;usb_device.c: 2060: break;
 13575  004338  0012               	return	
 13576  00433A                     
 13577                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 13578                           
 13579                           ; BSR set to: 0
 13580  00433A  010D               	movlb	13	; () banked
 13581  00433C  5132               	movf	50,w,b	;volatile
 13582  00433E  A4D8               	btfss	status,2,c
 13583  004340  D043               	goto	l272
 13584                           
 13585                           ; BSR set to: 13
 13586                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 13587  004342  5132               	movf	50,w,b	;volatile
 13588  004344  0D02               	mullw	2
 13589  004346  0EA5               	movlw	low _USB_CD_Ptr
 13590  004348  24F3               	addwf	prodl,w,c
 13591  00434A  6EF6               	movwf	tblptrl,c
 13592  00434C  0E8E               	movlw	high _USB_CD_Ptr
 13593  00434E  20F4               	addwfc	prodh,w,c
 13594  004350  6EF7               	movwf	tblptrh,c
 13595  004352                     	if	1	;There are 3 active tblptr bytes
 13596  004352  6AF8               	clrf	tblptru,c
 13597  004354  0E00               	movlw	low (__mediumconst shr (0+16))
 13598  004356  22F8               	addwfc	tblptru,f,c
 13599  004358                     	endif
 13600  004358  0009               	tblrd		*+
 13601  00435A  CFF5 F0BF          	movff	tablat,_inPipes
 13602  00435E  000A               	tblrd		*-
 13603  004360  CFF5 F0C0          	movff	tablat,_inPipes+1
 13604                           
 13605                           ; BSR set to: 13
 13606                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 13607  004364  0E02               	movlw	2
 13608  004366  0100               	movlb	0	; () banked
 13609  004368  25BF               	addwf	_inPipes& (0+255),w,b
 13610  00436A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13611  00436C  0E00               	movlw	0
 13612  00436E  21C0               	addwfc	(_inPipes+1)& (0+255),w,b
 13613  004370  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13614  004372  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13615  004376  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13616  00437A  6AF8               	clrf	tblptru,c
 13617  00437C  0E0E               	movlw	(high __ramtop+-1)
 13618  00437E  64F7               	cpfsgt	tblptrh,c
 13619  004380  D003               	bra	u8987
 13620  004382  0008               	tblrd		*
 13621  004384  50F5               	movf	tablat,w,c
 13622  004386  D005               	bra	u8980
 13623  004388                     u8987:
 13624  004388  CFF6 FFE9          	movff	tblptrl,fsr0l
 13625  00438C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13626  004390  50EF               	movf	indf0,w,c
 13627  004392                     u8980:
 13628  004392  0100               	movlb	0	; () banked
 13629  004394  6FC3               	movwf	(_inPipes+4)& (0+255),b
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 13633  004396  0E03               	movlw	3
 13634  004398  25BF               	addwf	_inPipes& (0+255),w,b
 13635  00439A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13636  00439C  0E00               	movlw	0
 13637  00439E  21C0               	addwfc	(_inPipes+1)& (0+255),w,b
 13638  0043A0  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13639  0043A2  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13640  0043A6  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13641  0043AA  6AF8               	clrf	tblptru,c
 13642  0043AC  0E0E               	movlw	(high __ramtop+-1)
 13643  0043AE  64F7               	cpfsgt	tblptrh,c
 13644  0043B0  D003               	bra	u8997
 13645  0043B2  0008               	tblrd		*
 13646  0043B4  50F5               	movf	tablat,w,c
 13647  0043B6  D005               	bra	u8990
 13648  0043B8                     u8997:
 13649  0043B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 13650  0043BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 13651  0043C0  50EF               	movf	indf0,w,c
 13652  0043C2                     u8990:
 13653  0043C2  0100               	movlb	0	; () banked
 13654  0043C4  6FC4               	movwf	(_inPipes+5)& (0+255),b
 13655                           
 13656                           ;usb_device.c: 2078: }
 13657  0043C6  0012               	return	
 13658  0043C8                     l272:
 13659                           
 13660                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 13661                           
 13662                           ; BSR set to: 0
 13663  0043C8  0E00               	movlw	0
 13664  0043CA  0100               	movlb	0	; () banked
 13665  0043CC  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 13669  0043CE  0012               	return	
 13670  0043D0                     
 13671                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 13672                           
 13673                           ; BSR set to: 0
 13674  0043D0  0E04               	movlw	4
 13675  0043D2  010D               	movlb	13	; () banked
 13676  0043D4  6132               	cpfslt	50,b	;volatile
 13677  0043D6  D027               	goto	l275
 13678                           
 13679                           ; BSR set to: 13
 13680                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 13681  0043D8  5132               	movf	50,w,b	;volatile
 13682  0043DA  0D02               	mullw	2
 13683  0043DC  0E7B               	movlw	low _USB_SD_Ptr
 13684  0043DE  24F3               	addwf	prodl,w,c
 13685  0043E0  6EF6               	movwf	tblptrl,c
 13686  0043E2  0E8E               	movlw	high _USB_SD_Ptr
 13687  0043E4  20F4               	addwfc	prodh,w,c
 13688  0043E6  6EF7               	movwf	tblptrh,c
 13689  0043E8                     	if	1	;There are 3 active tblptr bytes
 13690  0043E8  6AF8               	clrf	tblptru,c
 13691  0043EA  0E00               	movlw	low (__mediumconst shr (0+16))
 13692  0043EC  22F8               	addwfc	tblptru,f,c
 13693  0043EE                     	endif
 13694  0043EE  0009               	tblrd		*+
 13695  0043F0  CFF5 F0BF          	movff	tablat,_inPipes
 13696  0043F4  000A               	tblrd		*-
 13697  0043F6  CFF5 F0C0          	movff	tablat,_inPipes+1
 13698                           
 13699                           ; BSR set to: 13
 13700                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 13701  0043FA  C0BF  FFF6         	movff	_inPipes,tblptrl
 13702  0043FE  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 13703  004402  6AF8               	clrf	tblptru,c
 13704  004404  0E0E               	movlw	(high __ramtop+-1)
 13705  004406  64F7               	cpfsgt	tblptrh,c
 13706  004408  D003               	bra	u9017
 13707  00440A  0008               	tblrd		*
 13708  00440C  50F5               	movf	tablat,w,c
 13709  00440E  D005               	bra	u9010
 13710  004410                     u9017:
 13711  004410  CFF6 FFE9          	movff	tblptrl,fsr0l
 13712  004414  CFF7 FFEA          	movff	tblptrh,fsr0h
 13713  004418  50EF               	movf	indf0,w,c
 13714  00441A                     u9010:
 13715  00441A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13716  00441C  5001               	movf	??_USBStdGetDscHandler,w,c
 13717  00441E  0100               	movlb	0	; () banked
 13718  004420  6FC3               	movwf	(_inPipes+4)& (0+255),b
 13719  004422  6BC4               	clrf	(_inPipes+5)& (0+255),b
 13720                           
 13721                           ;usb_device.c: 2094: }
 13722  004424  0012               	return	
 13723  004426                     l275:
 13724                           
 13725                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 13726                           
 13727                           ; BSR set to: 0
 13728  004426  0E00               	movlw	0
 13729  004428  0100               	movlb	0	; () banked
 13730  00442A  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 13734  00442C  0012               	return	
 13735  00442E                     
 13736                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 13737                           
 13738                           ; BSR set to: 0
 13739  00442E  0E00               	movlw	0
 13740  004430  0100               	movlb	0	; () banked
 13741  004432  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;usb_device.c: 2112: }
 13745                           
 13746                           ;usb_device.c: 2111: break;
 13747  004434  0012               	return	
 13748  004436                     l268:
 13749                           
 13750                           ; BSR set to: 0
 13751                           
 13752                           ; BSR set to: 0
 13753  004436  010D               	movlb	13	; () banked
 13754  004438  5133               	movf	51,w,b	;volatile
 13755                           
 13756                           ; Switch size 1, requested type "space"
 13757                           ; Number of cases is 3, Range of values is 1 to 3
 13758                           ; switch strategies available:
 13759                           ; Name         Instructions Cycles
 13760                           ; simple_byte           10     6 (average)
 13761                           ;	Chosen strategy is simple_byte
 13762  00443A  0A01               	xorlw	1	; case 1
 13763  00443C  B4D8               	btfsc	status,2,c
 13764  00443E  D773               	goto	l269
 13765  004440  0A03               	xorlw	3	; case 2
 13766  004442  B4D8               	btfsc	status,2,c
 13767  004444  D77A               	goto	l271
 13768  004446  0A01               	xorlw	1	; case 3
 13769  004448  B4D8               	btfsc	status,2,c
 13770  00444A  D7C2               	goto	l274
 13771  00444C  D7F0               	goto	l277
 13772  00444E                     __end_of_USBStdGetDscHandler:
 13773                           	opt stack 0
 13774                           tblptru	equ	0xFF8
 13775                           tblptrh	equ	0xFF7
 13776                           tblptrl	equ	0xFF6
 13777                           tablat	equ	0xFF5
 13778                           prodh	equ	0xFF4
 13779                           prodl	equ	0xFF3
 13780                           intcon	equ	0xFF2
 13781                           intcon2	equ	0xFF1
 13782                           intcon3	equ	0xFF0
 13783                           indf0	equ	0xFEF
 13784                           postinc0	equ	0xFEE
 13785                           fsr0h	equ	0xFEA
 13786                           fsr0l	equ	0xFE9
 13787                           wreg	equ	0xFE8
 13788                           indf1	equ	0xFE7
 13789                           postdec1	equ	0xFE5
 13790                           plusw1	equ	0xFE3
 13791                           fsr1h	equ	0xFE2
 13792                           fsr1l	equ	0xFE1
 13793                           indf2	equ	0xFDF
 13794                           postinc2	equ	0xFDE
 13795                           postdec2	equ	0xFDD
 13796                           plusw2	equ	0xFDB
 13797                           fsr2h	equ	0xFDA
 13798                           fsr2l	equ	0xFD9
 13799                           status	equ	0xFD8
 13800                           
 13801 ;; *************** function _USBStdFeatureReqHandler *****************
 13802 ;; Defined at:
 13803 ;;		line 2756 in file "usb_device.c"
 13804 ;; Parameters:    Size  Location     Type
 13805 ;;		None
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;  p               2   27[COMRAM] PTR struct __BDT
 13808 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13809 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 13810 ;;		 -> UEP0(1), 
 13811 ;;  current_ep_d    1   26[COMRAM] struct .
 13812 ;; Return value:  Size  Location     Type
 13813 ;;                  1    wreg      void 
 13814 ;; Registers used:
 13815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13816 ;; Tracked objects:
 13817 ;;		On entry : 0/0
 13818 ;;		On exit  : 0/0
 13819 ;;		Unchanged: 0/0
 13820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13822 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13824 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13825 ;;Total ram usage:        6 bytes
 13826 ;; Hardware stack levels used:    1
 13827 ;; Hardware stack levels required when called:    4
 13828 ;; This function calls:
 13829 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13830 ;; This function is called by:
 13831 ;;		_USBCheckStdRequest
 13832 ;; This function uses a non-reentrant model
 13833 ;;
 13834                           
 13835                           	psect	text66
 13836  001848                     __ptext66:
 13837                           	opt stack 0
 13838  001848                     _USBStdFeatureReqHandler:
 13839                           	opt stack 22
 13840                           
 13841                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 13842                           
 13843                           ;incstack = 0
 13844  001848  010D               	movlb	13	; () banked
 13845  00184A  0532               	decf	50,w,b	;volatile
 13846  00184C  A4D8               	btfss	status,2,c
 13847  00184E  D011               	goto	l361
 13848                           
 13849                           ; BSR set to: 13
 13850  001850  5130               	movf	48,w,b	;volatile
 13851  001852  0B1F               	andlw	31
 13852  001854  0900               	iorlw	0
 13853  001856  A4D8               	btfss	status,2,c
 13854  001858  D00C               	goto	l361
 13855                           
 13856                           ; BSR set to: 13
 13857                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 13858  00185A  0100               	movlb	0	; () banked
 13859  00185C  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13860                           
 13861                           ; BSR set to: 0
 13862                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 13863  00185E  0E03               	movlw	3
 13864  001860  010D               	movlb	13	; () banked
 13865  001862  1931               	xorwf	49,w,b	;volatile
 13866  001864  A4D8               	btfss	status,2,c
 13867  001866  D002               	goto	l360
 13868                           
 13869                           ; BSR set to: 13
 13870                           ;usb_device.c: 2806: RemoteWakeup = 1;
 13871  001868  0E01               	movlw	1
 13872  00186A  D001               	goto	L7
 13873  00186C                     l360:
 13874                           
 13875                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 13876                           
 13877                           ; BSR set to: 0
 13878  00186C  0E00               	movlw	0
 13879  00186E                     L7:
 13880  00186E  0100               	movlb	0	; () banked
 13881  001870  6FF3               	movwf	_RemoteWakeup& (0+255),b
 13882  001872                     l361:
 13883                           
 13884                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 13885                           
 13886                           ; BSR set to: 0
 13887  001872  010D               	movlb	13	; () banked
 13888  001874  5132               	movf	50,w,b	;volatile
 13889  001876  A4D8               	btfss	status,2,c
 13890  001878  0012               	return	
 13891                           
 13892                           ; BSR set to: 13
 13893  00187A  5130               	movf	48,w,b	;volatile
 13894  00187C  0B1F               	andlw	31
 13895  00187E  0A02               	xorlw	2
 13896  001880  A4D8               	btfss	status,2,c
 13897  001882  0012               	return	
 13898                           
 13899                           ; BSR set to: 13
 13900  001884  5134               	movf	52,w,b	;volatile
 13901  001886  0B0F               	andlw	15
 13902  001888  0900               	iorlw	0
 13903  00188A  B4D8               	btfsc	status,2,c
 13904  00188C  0012               	return	
 13905                           
 13906                           ; BSR set to: 13
 13907  00188E  5134               	movf	52,w,b	;volatile
 13908  001890  0B0F               	andlw	15
 13909  001892  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13910  001894  0E03               	movlw	3
 13911  001896  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 13912  001898  0012               	return	
 13913                           
 13914                           ; BSR set to: 13
 13915  00189A  0E20               	movlw	32
 13916  00189C  0100               	movlb	0	; () banked
 13917  00189E  19F6               	xorwf	_USBDeviceState& (0+255),w,b
 13918  0018A0  A4D8               	btfss	status,2,c
 13919  0018A2  0012               	return	
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 13923  0018A4  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13924                           
 13925                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 13926  0018A6  010D               	movlb	13	; () banked
 13927  0018A8  BF34               	btfsc	52,7,b	;volatile
 13928  0018AA  D019               	goto	l363
 13929                           
 13930                           ; BSR set to: 13
 13931                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13932  0018AC  5134               	movf	52,w,b	;volatile
 13933  0018AE  0B0F               	andlw	15
 13934  0018B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13935  0018B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 13936  0018B4  0D02               	mullw	2
 13937  0018B6  0E40               	movlw	low _pBDTEntryOut
 13938  0018B8  24F3               	addwf	prodl,w,c
 13939  0018BA  6ED9               	movwf	fsr2l,c
 13940  0018BC  0E01               	movlw	high _pBDTEntryOut
 13941  0018BE  20F4               	addwfc	prodh,w,c
 13942  0018C0  6EDA               	movwf	fsr2h,c
 13943  0018C2  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 13944  0018C6  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 13945                           
 13946                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 13947  0018CA  5134               	movf	52,w,b	;volatile
 13948  0018CC  0B0F               	andlw	15
 13949  0018CE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13950  0018D0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 13951  0018D2  0D01               	mullw	1
 13952  0018D4  0E68               	movlw	low _ep_data_out
 13953  0018D6  24F3               	addwf	prodl,w,c
 13954  0018D8  6ED9               	movwf	fsr2l,c
 13955  0018DA  0E01               	movlw	high _ep_data_out
 13956  0018DC  D018               	goto	L8
 13957  0018DE                     l363:
 13958                           
 13959                           ; BSR set to: 13
 13960                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 13961                           
 13962                           ; BSR set to: 13
 13963  0018DE  5134               	movf	52,w,b	;volatile
 13964  0018E0  0B0F               	andlw	15
 13965  0018E2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13966  0018E4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 13967  0018E6  0D02               	mullw	2
 13968  0018E8  0EC5               	movlw	low _pBDTEntryIn
 13969  0018EA  24F3               	addwf	prodl,w,c
 13970  0018EC  6ED9               	movwf	fsr2l,c
 13971  0018EE  0E00               	movlw	high _pBDTEntryIn
 13972  0018F0  20F4               	addwfc	prodh,w,c
 13973  0018F2  6EDA               	movwf	fsr2h,c
 13974  0018F4  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 13975  0018F8  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 13976                           
 13977                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 13978  0018FC  5134               	movf	52,w,b	;volatile
 13979  0018FE  0B0F               	andlw	15
 13980  001900  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13981  001902  5018               	movf	??_USBStdFeatureReqHandler,w,c
 13982  001904  0D01               	mullw	1
 13983  001906  0E6B               	movlw	low _ep_data_in
 13984  001908  24F3               	addwf	prodl,w,c
 13985  00190A  6ED9               	movwf	fsr2l,c
 13986  00190C  0E01               	movlw	high _ep_data_in
 13987  00190E                     L8:
 13988  00190E  20F4               	addwfc	prodh,w,c
 13989  001910  6EDA               	movwf	fsr2h,c
 13990  001912  50DF               	movf	indf2,w,c
 13991  001914  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 13992                           
 13993                           ; BSR set to: 13
 13994                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 13995                           
 13996                           ; BSR set to: 13
 13997  001916  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 13998  001918  D006               	goto	l365
 13999                           
 14000                           ; BSR set to: 13
 14001                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 14002  00191A  0EFB               	movlw	251
 14003  00191C  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 14004  00191E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14005  001920  0EFF               	movlw	255
 14006  001922  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 14007  001924  D004               	goto	L9
 14008  001926                     l365:
 14009                           
 14010                           ; BSR set to: 13
 14011                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 14012                           
 14013                           ; BSR set to: 13
 14014  001926  0E04               	movlw	4
 14015  001928  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 14016  00192A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14017  00192C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14018  00192E                     L9:
 14019  00192E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14020                           
 14021                           ; BSR set to: 13
 14022                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 14023                           
 14024                           ; BSR set to: 13
 14025  001930  BF34               	btfsc	52,7,b	;volatile
 14026  001932  D00A               	goto	l367
 14027                           
 14028                           ; BSR set to: 13
 14029                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 14030  001934  5134               	movf	52,w,b	;volatile
 14031  001936  0B0F               	andlw	15
 14032  001938  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14033  00193A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14034  00193C  0D02               	mullw	2
 14035  00193E  0E40               	movlw	low _pBDTEntryOut
 14036  001940  24F3               	addwf	prodl,w,c
 14037  001942  6ED9               	movwf	fsr2l,c
 14038  001944  0E01               	movlw	high _pBDTEntryOut
 14039  001946  D009               	goto	L10
 14040  001948                     l367:
 14041                           
 14042                           ; BSR set to: 13
 14043                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 14044                           
 14045                           ; BSR set to: 13
 14046  001948  5134               	movf	52,w,b	;volatile
 14047  00194A  0B0F               	andlw	15
 14048  00194C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14049  00194E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14050  001950  0D02               	mullw	2
 14051  001952  0EC5               	movlw	low _pBDTEntryIn
 14052  001954  24F3               	addwf	prodl,w,c
 14053  001956  6ED9               	movwf	fsr2l,c
 14054  001958  0E00               	movlw	high _pBDTEntryIn
 14055  00195A                     L10:
 14056  00195A  20F4               	addwfc	prodh,w,c
 14057  00195C  6EDA               	movwf	fsr2h,c
 14058  00195E  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14059  001962  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14060                           
 14061                           ; BSR set to: 13
 14062                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 14063                           
 14064                           ; BSR set to: 13
 14065  001966  0E03               	movlw	3
 14066  001968  1931               	xorwf	49,w,b	;volatile
 14067  00196A  A4D8               	btfss	status,2,c
 14068  00196C  D02D               	goto	l369
 14069                           
 14070                           ; BSR set to: 13
 14071                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 14072  00196E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14073  001972  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14074  001976  AEDF               	btfss	indf2,7,c
 14075  001978  D01A               	goto	l372
 14076                           
 14077                           ; BSR set to: 13
 14078                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 14079  00197A  BF34               	btfsc	52,7,b	;volatile
 14080  00197C  D00A               	goto	l371
 14081                           
 14082                           ; BSR set to: 13
 14083                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 14084  00197E  5134               	movf	52,w,b	;volatile
 14085  001980  0B0F               	andlw	15
 14086  001982  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14087  001984  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14088  001986  0D01               	mullw	1
 14089  001988  0E68               	movlw	low _ep_data_out
 14090  00198A  24F3               	addwf	prodl,w,c
 14091  00198C  6ED9               	movwf	fsr2l,c
 14092  00198E  0E01               	movlw	high _ep_data_out
 14093  001990  D00A               	goto	L11
 14094  001992                     l371:
 14095                           
 14096                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 14097                           
 14098                           ; BSR set to: 1
 14099  001992  010D               	movlb	13	; () banked
 14100  001994  5134               	movf	52,w,b	;volatile
 14101  001996  0B0F               	andlw	15
 14102  001998  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14103  00199A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14104  00199C  0D01               	mullw	1
 14105  00199E  0E6B               	movlw	low _ep_data_in
 14106  0019A0  24F3               	addwf	prodl,w,c
 14107  0019A2  6ED9               	movwf	fsr2l,c
 14108  0019A4  0E01               	movlw	high _ep_data_in
 14109  0019A6                     L11:
 14110  0019A6  20F4               	addwfc	prodh,w,c
 14111  0019A8  6EDA               	movwf	fsr2h,c
 14112  0019AA  0101               	movlb	1	; () banked
 14113  0019AC  82DF               	bsf	indf2,1,c
 14114  0019AE                     l372:
 14115                           
 14116                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 14117                           
 14118                           ; BSR set to: 1
 14119                           
 14120                           ; BSR set to: 1
 14121  0019AE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14122  0019B2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14123  0019B6  0E00               	movlw	0
 14124  0019B8  84DB               	bsf	plusw2,2,c
 14125                           
 14126                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 14127  0019BA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14128  0019BE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14129  0019C2  0E00               	movlw	0
 14130  0019C4  8EDB               	bsf	plusw2,7,c
 14131                           
 14132                           ;usb_device.c: 2878: }
 14133  0019C6  0012               	return	
 14134  0019C8                     l369:
 14135                           
 14136                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 14137  0019C8  0E04               	movlw	4
 14138  0019CA  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14139  0019CC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14140  0019CE  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14141  0019D0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14142                           
 14143                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 14144  0019D2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14145  0019D6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14146  0019DA  AEDF               	btfss	indf2,7,c
 14147  0019DC  D01B               	goto	l374
 14148                           
 14149                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 14150  0019DE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14151  0019E2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14152  0019E6  0E7F               	movlw	127
 14153  0019E8  16DF               	andwf	indf2,f,c
 14154                           
 14155                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 14156  0019EA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14157  0019EE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14158  0019F2  0E00               	movlw	0
 14159  0019F4  8CDB               	bsf	plusw2,6,c
 14160                           
 14161                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14162  0019F6  0E00               	movlw	0
 14163  0019F8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14164  0019FA  0E05               	movlw	5
 14165  0019FC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14166  0019FE  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14167  001A02  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14168  001A06  0E00               	movlw	0
 14169  001A08  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14170  001A0A  0E02               	movlw	2
 14171  001A0C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14172  001A0E  ECDD  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14173                           
 14174                           ;usb_device.c: 2893: }
 14175  001A12  D006               	goto	l375
 14176  001A14                     l374:
 14177                           
 14178                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 14179  001A14  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14180  001A18  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14181  001A1C  0E00               	movlw	0
 14182  001A1E  8CDB               	bsf	plusw2,6,c
 14183  001A20                     l375:
 14184                           
 14185                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 14186  001A20  0E04               	movlw	4
 14187  001A22  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14188  001A24  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14189  001A26  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14190  001A28  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14191                           
 14192                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14193  001A2A  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14194  001A2C  D006               	goto	u9230
 14195  001A2E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14196  001A32  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14197  001A36  AEDF               	btfss	indf2,7,c
 14198  001A38  D030               	goto	l376
 14199  001A3A                     u9230:
 14200                           
 14201                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 14202  001A3A  010D               	movlb	13	; () banked
 14203  001A3C  BF34               	btfsc	52,7,b	;volatile
 14204  001A3E  D00A               	goto	l379
 14205                           
 14206                           ; BSR set to: 13
 14207                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 14208  001A40  5134               	movf	52,w,b	;volatile
 14209  001A42  0B0F               	andlw	15
 14210  001A44  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14211  001A46  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14212  001A48  0D01               	mullw	1
 14213  001A4A  0E68               	movlw	low _ep_data_out
 14214  001A4C  24F3               	addwf	prodl,w,c
 14215  001A4E  6ED9               	movwf	fsr2l,c
 14216  001A50  0E01               	movlw	high _ep_data_out
 14217  001A52  D00A               	goto	L12
 14218  001A54                     l379:
 14219                           
 14220                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 14221                           
 14222                           ; BSR set to: 1
 14223  001A54  010D               	movlb	13	; () banked
 14224  001A56  5134               	movf	52,w,b	;volatile
 14225  001A58  0B0F               	andlw	15
 14226  001A5A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14227  001A5C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14228  001A5E  0D01               	mullw	1
 14229  001A60  0E6B               	movlw	low _ep_data_in
 14230  001A62  24F3               	addwf	prodl,w,c
 14231  001A64  6ED9               	movwf	fsr2l,c
 14232  001A66  0E01               	movlw	high _ep_data_in
 14233  001A68                     L12:
 14234  001A68  20F4               	addwfc	prodh,w,c
 14235  001A6A  6EDA               	movwf	fsr2h,c
 14236  001A6C  0101               	movlb	1	; () banked
 14237  001A6E  92DF               	bcf	indf2,1,c
 14238                           
 14239                           ; BSR set to: 1
 14240                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 14241                           
 14242                           ; BSR set to: 1
 14243  001A70  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14244  001A74  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14245  001A78  0E3B               	movlw	59
 14246  001A7A  16DF               	andwf	indf2,f,c
 14247                           
 14248                           ; BSR set to: 1
 14249                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14250  001A7C  0E00               	movlw	0
 14251  001A7E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14252  001A80  0E05               	movlw	5
 14253  001A82  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14254  001A84  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14255  001A88  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14256  001A8C  0E00               	movlw	0
 14257  001A8E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14258  001A90  0E02               	movlw	2
 14259  001A92  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14260  001A94  ECDD  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14261                           
 14262                           ;usb_device.c: 2923: }
 14263  001A98  D006               	goto	l381
 14264  001A9A                     l376:
 14265                           
 14266                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 14267  001A9A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14268  001A9E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14269  001AA2  0E3B               	movlw	59
 14270  001AA4  16DF               	andwf	indf2,f,c
 14271  001AA6                     l381:
 14272                           
 14273                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 14274  001AA6  010D               	movlb	13	; () banked
 14275  001AA8  5134               	movf	52,w,b	;volatile
 14276  001AAA  0B0F               	andlw	15
 14277  001AAC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14278  001AAE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14279  001AB0  0D01               	mullw	1
 14280  001AB2  0E26               	movlw	38
 14281  001AB4  24F3               	addwf	prodl,w,c
 14282  001AB6  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 14283  001AB8  0E0F               	movlw	15
 14284  001ABA  20F4               	addwfc	prodh,w,c
 14285  001ABC  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 14286                           
 14287                           ; BSR set to: 13
 14288                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 14289  001ABE  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 14290  001AC2  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 14291  001AC6  0EFE               	movlw	254
 14292  001AC8  16DF               	andwf	indf2,f,c
 14293                           
 14294                           ; BSR set to: 13
 14295  001ACA  0012               	return	
 14296  001ACC                     __end_of_USBStdFeatureReqHandler:
 14297                           	opt stack 0
 14298                           tblptru	equ	0xFF8
 14299                           tblptrh	equ	0xFF7
 14300                           tblptrl	equ	0xFF6
 14301                           tablat	equ	0xFF5
 14302                           prodh	equ	0xFF4
 14303                           prodl	equ	0xFF3
 14304                           intcon	equ	0xFF2
 14305                           intcon2	equ	0xFF1
 14306                           intcon3	equ	0xFF0
 14307                           indf0	equ	0xFEF
 14308                           postinc0	equ	0xFEE
 14309                           fsr0h	equ	0xFEA
 14310                           fsr0l	equ	0xFE9
 14311                           wreg	equ	0xFE8
 14312                           indf1	equ	0xFE7
 14313                           postdec1	equ	0xFE5
 14314                           plusw1	equ	0xFE3
 14315                           fsr1h	equ	0xFE2
 14316                           fsr1l	equ	0xFE1
 14317                           indf2	equ	0xFDF
 14318                           postinc2	equ	0xFDE
 14319                           postdec2	equ	0xFDD
 14320                           plusw2	equ	0xFDB
 14321                           fsr2h	equ	0xFDA
 14322                           fsr2l	equ	0xFD9
 14323                           status	equ	0xFD8
 14324                           
 14325 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 14326 ;; Defined at:
 14327 ;;		line 54 in file "usb_events.c"
 14328 ;; Parameters:    Size  Location     Type
 14329 ;;  event           2   15[COMRAM] enum E6832
 14330 ;;  pdata           2   17[COMRAM] PTR void 
 14331 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 14332 ;;		 -> BDT(48), 
 14333 ;;  size            2   19[COMRAM] unsigned int 
 14334 ;; Auto vars:     Size  Location     Type
 14335 ;;		None
 14336 ;; Return value:  Size  Location     Type
 14337 ;;                  1    wreg      unsigned char 
 14338 ;; Registers used:
 14339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14340 ;; Tracked objects:
 14341 ;;		On entry : 0/0
 14342 ;;		On exit  : 0/0
 14343 ;;		Unchanged: 0/0
 14344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14345 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14348 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14349 ;;Total ram usage:        8 bytes
 14350 ;; Hardware stack levels used:    1
 14351 ;; Hardware stack levels required when called:    3
 14352 ;; This function calls:
 14353 ;;		_APP_DeviceCustomHIDInitialize
 14354 ;;		_APP_DeviceMSDInitialize
 14355 ;;		_MSDTransferTerminated
 14356 ;;		_SYSTEM_Initialize
 14357 ;;		_USBCheckHIDRequest
 14358 ;;		_USBCheckMSDRequest
 14359 ;; This function is called by:
 14360 ;;		_USBDeviceTasks
 14361 ;;		_USBStdSetCfgHandler
 14362 ;;		_USBSuspend
 14363 ;;		_USBWakeFromSuspend
 14364 ;;		_USBCtrlTrfSetupHandler
 14365 ;;		_USBCheckStdRequest
 14366 ;;		_USBStdFeatureReqHandler
 14367 ;; This function uses a non-reentrant model
 14368 ;;
 14369                           
 14370                           	psect	text67
 14371  006DBA                     __ptext67:
 14372                           	opt stack 0
 14373  006DBA                     _USER_USB_CALLBACK_EVENT_HANDLER:
 14374                           	opt stack 26
 14375                           
 14376                           ;usb_events.c: 56: switch((int)event)
 14377                           
 14378                           ;incstack = 0
 14379  006DBA  D019               	goto	l800
 14380  006DBC                     
 14381                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 14382  006DBC  0E01               	movlw	1
 14383  006DBE  EC7D  F03E         	call	_SYSTEM_Initialize
 14384                           
 14385                           ;usb_events.c: 79: break;
 14386  006DC2  0012               	return	
 14387  006DC4                     
 14388                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 14389  006DC4  0E02               	movlw	2
 14390  006DC6  EC7D  F03E         	call	_SYSTEM_Initialize
 14391                           
 14392                           ;usb_events.c: 90: break;
 14393  006DCA  0012               	return	
 14394  006DCC                     
 14395                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 14396  006DCC  EC7C  F041         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 14397                           
 14398                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 14399  006DD0  EC5E  F044         	call	_APP_DeviceMSDInitialize	;wreg free
 14400                           
 14401                           ;usb_events.c: 100: break;
 14402                           
 14403                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 14404                           
 14405                           ;usb_events.c: 97: break;
 14406  006DD4  0012               	return	
 14407  006DD6                     
 14408                           ;usb_events.c: 105: USBCheckHIDRequest();
 14409  006DD6  EC44  F029         	call	_USBCheckHIDRequest	;wreg free
 14410                           
 14411                           ;usb_events.c: 108: USBCheckMSDRequest();
 14412  006DDA  ECB1  F02E         	call	_USBCheckMSDRequest	;wreg free
 14413                           
 14414                           ;usb_events.c: 112: break;
 14415                           
 14416                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 14417                           
 14418                           ;usb_events.c: 109: break;
 14419  006DDE  0012               	return	
 14420  006DE0                     
 14421                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 14422  006DE0  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 14423  006DE4  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 14424  006DE8  EC7B  F03D         	call	_MSDTransferTerminated	;wreg free
 14425                           
 14426                           ;usb_events.c: 129: }
 14427                           
 14428                           ;usb_events.c: 128: break;
 14429                           
 14430                           ;usb_events.c: 127: default:
 14431                           
 14432                           ;usb_events.c: 125: break;
 14433  006DEC  0012               	return	
 14434  006DEE                     l800:
 14435  006DEE  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 14436  006DF2  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 14437                           
 14438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14439                           ; Switch size 1, requested type "space"
 14440                           ; Number of cases is 2, Range of values is 0 to 127
 14441                           ; switch strategies available:
 14442                           ; Name         Instructions Cycles
 14443                           ; simple_byte            7     4 (average)
 14444                           ;	Chosen strategy is simple_byte
 14445  006DF6  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 14446  006DF8  0A00               	xorlw	0	; case 0
 14447  006DFA  B4D8               	btfsc	status,2,c
 14448  006DFC  D004               	goto	l15732
 14449  006DFE  0A7F               	xorlw	127	; case 127
 14450  006E00  A4D8               	btfss	status,2,c
 14451  006E02  0012               	return	
 14452  006E04  D01A               	goto	l15734
 14453  006E06                     l15732:
 14454                           
 14455                           ; Switch size 1, requested type "space"
 14456                           ; Number of cases is 8, Range of values is 1 to 117
 14457                           ; switch strategies available:
 14458                           ; Name         Instructions Cycles
 14459                           ; simple_byte           25    13 (average)
 14460                           ;	Chosen strategy is simple_byte
 14461  006E06  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14462  006E08  0A01               	xorlw	1	; case 1
 14463  006E0A  B4D8               	btfsc	status,2,c
 14464  006E0C  D7DF               	goto	l806
 14465  006E0E  0A03               	xorlw	3	; case 2
 14466  006E10  B4D8               	btfsc	status,2,c
 14467  006E12  0012               	return	
 14468  006E14  0A01               	xorlw	1	; case 3
 14469  006E16  B4D8               	btfsc	status,2,c
 14470  006E18  D7DE               	goto	l808
 14471  006E1A  0A06               	xorlw	6	; case 5
 14472  006E1C  B4D8               	btfsc	status,2,c
 14473  006E1E  D7E0               	goto	l810
 14474  006E20  0A77               	xorlw	119	; case 114
 14475  006E22  B4D8               	btfsc	status,2,c
 14476  006E24  0012               	return	
 14477  006E26  0A01               	xorlw	1	; case 115
 14478  006E28  B4D8               	btfsc	status,2,c
 14479  006E2A  0012               	return	
 14480  006E2C  0A07               	xorlw	7	; case 116
 14481  006E2E  B4D8               	btfsc	status,2,c
 14482  006E30  D7C9               	goto	l805
 14483  006E32  0A01               	xorlw	1	; case 117
 14484  006E34  A4D8               	btfss	status,2,c
 14485  006E36  0012               	return	
 14486  006E38  D7C1               	goto	l804
 14487  006E3A                     l15734:
 14488                           
 14489                           ; Switch size 1, requested type "space"
 14490                           ; Number of cases is 1, Range of values is 255 to 255
 14491                           ; switch strategies available:
 14492                           ; Name         Instructions Cycles
 14493                           ; simple_byte            4     3 (average)
 14494                           ;	Chosen strategy is simple_byte
 14495  006E3A  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14496  006E3C  0AFF               	xorlw	255	; case 255
 14497  006E3E  0012               	return	
 14498  006E40                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 14499                           	opt stack 0
 14500                           tblptru	equ	0xFF8
 14501                           tblptrh	equ	0xFF7
 14502                           tblptrl	equ	0xFF6
 14503                           tablat	equ	0xFF5
 14504                           prodh	equ	0xFF4
 14505                           prodl	equ	0xFF3
 14506                           intcon	equ	0xFF2
 14507                           intcon2	equ	0xFF1
 14508                           intcon3	equ	0xFF0
 14509                           indf0	equ	0xFEF
 14510                           postinc0	equ	0xFEE
 14511                           fsr0h	equ	0xFEA
 14512                           fsr0l	equ	0xFE9
 14513                           wreg	equ	0xFE8
 14514                           indf1	equ	0xFE7
 14515                           postdec1	equ	0xFE5
 14516                           plusw1	equ	0xFE3
 14517                           fsr1h	equ	0xFE2
 14518                           fsr1l	equ	0xFE1
 14519                           indf2	equ	0xFDF
 14520                           postinc2	equ	0xFDE
 14521                           postdec2	equ	0xFDD
 14522                           plusw2	equ	0xFDB
 14523                           fsr2h	equ	0xFDA
 14524                           fsr2l	equ	0xFD9
 14525                           status	equ	0xFD8
 14526                           
 14527 ;; *************** function _USBCheckMSDRequest *****************
 14528 ;; Defined at:
 14529 ;;		line 218 in file "usb_device_msd.c"
 14530 ;; Parameters:    Size  Location     Type
 14531 ;;		None
 14532 ;; Auto vars:     Size  Location     Type
 14533 ;;		None
 14534 ;; Return value:  Size  Location     Type
 14535 ;;                  1    wreg      void 
 14536 ;; Registers used:
 14537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14538 ;; Tracked objects:
 14539 ;;		On entry : 0/0
 14540 ;;		On exit  : 0/0
 14541 ;;		Unchanged: 0/0
 14542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14544 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14546 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14547 ;;Total ram usage:        4 bytes
 14548 ;; Hardware stack levels used:    1
 14549 ;; Hardware stack levels required when called:    1
 14550 ;; This function calls:
 14551 ;;		_USBTransferOnePacket
 14552 ;; This function is called by:
 14553 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14554 ;; This function uses a non-reentrant model
 14555 ;;
 14556                           
 14557                           	psect	text68
 14558  005D62                     __ptext68:
 14559                           	opt stack 0
 14560  005D62                     _USBCheckMSDRequest:
 14561                           	opt stack 27
 14562                           
 14563                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 14564                           
 14565                           ;incstack = 0
 14566  005D62  010D               	movlb	13	; () banked
 14567  005D64  5130               	movf	48,w,b	;volatile
 14568  005D66  0B1F               	andlw	31
 14569  005D68  06E8               	decf	wreg,f,c
 14570  005D6A  A4D8               	btfss	status,2,c
 14571  005D6C  0012               	return	
 14572                           
 14573                           ; BSR set to: 13
 14574                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 14575                           
 14576                           ; BSR set to: 13
 14577                           
 14578                           ; BSR set to: 13
 14579                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 14580  005D6E  5134               	movf	52,w,b	;volatile
 14581  005D70  A4D8               	btfss	status,2,c
 14582  005D72  0012               	return	
 14583  005D74  D04E               	goto	l529
 14584  005D76                     
 14585                           ; BSR set to: 13
 14586                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 14587                           
 14588                           ; BSR set to: 13
 14589  005D76  5132               	movf	50,w,b	;volatile
 14590  005D78  1133               	iorwf	51,w,b	;volatile
 14591  005D7A  A4D8               	btfss	status,2,c
 14592  005D7C  0012               	return	
 14593                           
 14594                           ; BSR set to: 13
 14595  005D7E  5136               	movf	54,w,b	;volatile
 14596  005D80  1137               	iorwf	55,w,b	;volatile
 14597  005D82  A4D8               	btfss	status,2,c
 14598  005D84  0012               	return	
 14599                           
 14600                           ; BSR set to: 13
 14601                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 14602                           
 14603                           ; BSR set to: 13
 14604                           
 14605                           ; BSR set to: 13
 14606                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 14607  005D86  0E00               	movlw	0
 14608  005D88  0100               	movlb	0	; () banked
 14609  005D8A  6FE8               	movwf	_MSD_State& (0+255),b
 14610                           
 14611                           ; BSR set to: 0
 14612                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 14613  005D8C  69E7               	setf	_MSDCommandState& (0+255),b
 14614                           
 14615                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 14616  005D8E  0E00               	movlw	0
 14617  005D90  6FE6               	movwf	_MSDReadState& (0+255),b
 14618                           
 14619                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 14620  005D92  0E00               	movlw	0
 14621  005D94  6FE5               	movwf	_MSDWriteState& (0+255),b
 14622                           
 14623                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 14624  005D96  0E01               	movlw	1
 14625  005D98  6FE1               	movwf	_MSDCBWValid& (0+255),b
 14626                           
 14627                           ; BSR set to: 0
 14628                           
 14629                           ; BSR set to: 0
 14630                           
 14631                           ; BSR set to: 0
 14632                           
 14633                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 14634  005D9A  C144  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 14635  005D9E  C145  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 14636                           
 14637                           ; BSR set to: 0
 14638  005DA2  500C               	movf	_USBCheckMSDRequest$2319,w,c
 14639  005DA4  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 14640  005DA6  B4D8               	btfsc	status,2,c
 14641  005DA8  D00A               	goto	u7280
 14642                           
 14643                           ; BSR set to: 0
 14644                           
 14645                           ; BSR set to: 0
 14646                           
 14647                           ; BSR set to: 0
 14648                           
 14649                           ; BSR set to: 0
 14650  005DAA  C144  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 14651  005DAE  C145  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 14652                           
 14653                           ; BSR set to: 0
 14654                           
 14655                           ; BSR set to: 0
 14656  005DB2  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 14657  005DB6  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 14658  005DBA  BEDF               	btfsc	indf2,7,c
 14659  005DBC  D00F               	goto	l534
 14660  005DBE                     u7280:
 14661                           
 14662                           ; BSR set to: 0
 14663                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 14664                           
 14665                           ; BSR set to: 0
 14666  005DBE  0E00               	movlw	0
 14667  005DC0  6E01               	movwf	USBTransferOnePacket@dir,c
 14668  005DC2  0E40               	movlw	64
 14669  005DC4  6E02               	movwf	USBTransferOnePacket@data,c
 14670  005DC6  0E0D               	movlw	13
 14671  005DC8  6E03               	movwf	USBTransferOnePacket@data+1,c
 14672  005DCA  0E40               	movlw	64
 14673  005DCC  6E04               	movwf	USBTransferOnePacket@len,c
 14674  005DCE  0E02               	movlw	2
 14675  005DD0  ECEB  F026         	call	_USBTransferOnePacket
 14676  005DD4  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 14677  005DD8  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 14678  005DDC                     l534:
 14679                           
 14680                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 14681  005DDC  0E80               	movlw	128
 14682  005DDE  0100               	movlb	0	; () banked
 14683  005DE0  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14684                           
 14685                           ;usb_device_msd.c: 263: break;
 14686  005DE2  0012               	return	
 14687  005DE4                     
 14688                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 14689                           
 14690                           ; BSR set to: 0
 14691  005DE4  010D               	movlb	13	; () banked
 14692  005DE6  5132               	movf	50,w,b	;volatile
 14693  005DE8  1133               	iorwf	51,w,b	;volatile
 14694  005DEA  A4D8               	btfss	status,2,c
 14695  005DEC  0012               	return	
 14696                           
 14697                           ; BSR set to: 13
 14698  005DEE  0536               	decf	54,w,b	;volatile
 14699  005DF0  1137               	iorwf	55,w,b	;volatile
 14700  005DF2  A4D8               	btfss	status,2,c
 14701  005DF4  0012               	return	
 14702                           
 14703                           ; BSR set to: 13
 14704                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 14705                           
 14706                           ; BSR set to: 13
 14707                           
 14708                           ; BSR set to: 13
 14709                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 14710  005DF6  0E00               	movlw	0
 14711  005DF8  6F38               	movwf	56,b	;volatile
 14712                           
 14713                           ; BSR set to: 13
 14714                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14715  005DFA  0E38               	movlw	56
 14716  005DFC  0100               	movlb	0	; () banked
 14717  005DFE  6FBF               	movwf	_inPipes& (0+255),b
 14718  005E00  0E0D               	movlw	13
 14719  005E02  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14720                           
 14721                           ; BSR set to: 0
 14722  005E04  0E00               	movlw	0
 14723  005E06  6FC4               	movwf	(_inPipes+5)& (0+255),b
 14724  005E08  0E01               	movlw	1
 14725  005E0A  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14726                           
 14727                           ; BSR set to: 0
 14728  005E0C  0EC1               	movlw	193
 14729  005E0E  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14730                           
 14731                           ; BSR set to: 0
 14732                           ;usb_device_msd.c: 278: }
 14733                           
 14734                           ;usb_device_msd.c: 277: break;
 14735  005E10  0012               	return	
 14736  005E12                     l529:
 14737                           
 14738                           ; BSR set to: 0
 14739  005E12  010D               	movlb	13	; () banked
 14740  005E14  5131               	movf	49,w,b	;volatile
 14741                           
 14742                           ; Switch size 1, requested type "space"
 14743                           ; Number of cases is 2, Range of values is 254 to 255
 14744                           ; switch strategies available:
 14745                           ; Name         Instructions Cycles
 14746                           ; simple_byte            7     4 (average)
 14747                           ;	Chosen strategy is simple_byte
 14748  005E16  0AFE               	xorlw	254	; case 254
 14749  005E18  B4D8               	btfsc	status,2,c
 14750  005E1A  D7E4               	goto	l546
 14751  005E1C  0A01               	xorlw	1	; case 255
 14752  005E1E  A4D8               	btfss	status,2,c
 14753  005E20  0012               	return	
 14754  005E22  D7A9               	goto	l530
 14755  005E24                     __end_of_USBCheckMSDRequest:
 14756                           	opt stack 0
 14757                           tblptru	equ	0xFF8
 14758                           tblptrh	equ	0xFF7
 14759                           tblptrl	equ	0xFF6
 14760                           tablat	equ	0xFF5
 14761                           prodh	equ	0xFF4
 14762                           prodl	equ	0xFF3
 14763                           intcon	equ	0xFF2
 14764                           intcon2	equ	0xFF1
 14765                           intcon3	equ	0xFF0
 14766                           indf0	equ	0xFEF
 14767                           postinc0	equ	0xFEE
 14768                           fsr0h	equ	0xFEA
 14769                           fsr0l	equ	0xFE9
 14770                           wreg	equ	0xFE8
 14771                           indf1	equ	0xFE7
 14772                           postdec1	equ	0xFE5
 14773                           plusw1	equ	0xFE3
 14774                           fsr1h	equ	0xFE2
 14775                           fsr1l	equ	0xFE1
 14776                           indf2	equ	0xFDF
 14777                           postinc2	equ	0xFDE
 14778                           postdec2	equ	0xFDD
 14779                           plusw2	equ	0xFDB
 14780                           fsr2h	equ	0xFDA
 14781                           fsr2l	equ	0xFD9
 14782                           status	equ	0xFD8
 14783                           
 14784 ;; *************** function _USBCheckHIDRequest *****************
 14785 ;; Defined at:
 14786 ;;		line 153 in file "usb_device_hid.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;		None
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;		None
 14791 ;; Return value:  Size  Location     Type
 14792 ;;                  1    wreg      void 
 14793 ;; Registers used:
 14794 ;;		wreg, status,2, status,0
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : 0/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14804 ;;Total ram usage:        0 bytes
 14805 ;; Hardware stack levels used:    1
 14806 ;; This function calls:
 14807 ;;		Nothing
 14808 ;; This function is called by:
 14809 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14810 ;; This function uses a non-reentrant model
 14811 ;;
 14812                           
 14813                           	psect	text69
 14814  005288                     __ptext69:
 14815                           	opt stack 0
 14816  005288                     _USBCheckHIDRequest:
 14817                           	opt stack 28
 14818                           
 14819                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 14820                           
 14821                           ;incstack = 0
 14822  005288  010D               	movlb	13	; () banked
 14823  00528A  5130               	movf	48,w,b	;volatile
 14824  00528C  0B1F               	andlw	31
 14825  00528E  06E8               	decf	wreg,f,c
 14826  005290  A4D8               	btfss	status,2,c
 14827  005292  0012               	return	
 14828                           
 14829                           ; BSR set to: 13
 14830                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 14831                           
 14832                           ; BSR set to: 13
 14833                           
 14834                           ; BSR set to: 13
 14835  005294  5134               	movf	52,w,b	;volatile
 14836  005296  A4D8               	btfss	status,2,c
 14837  005298  0012               	return	
 14838                           
 14839                           ; BSR set to: 13
 14840                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 14841                           
 14842                           ; BSR set to: 13
 14843                           
 14844                           ; BSR set to: 13
 14845  00529A  0E06               	movlw	6
 14846  00529C  1931               	xorwf	49,w,b	;volatile
 14847  00529E  B4D8               	btfsc	status,2,c
 14848  0052A0  D01A               	goto	l411
 14849  0052A2  D022               	goto	l414
 14850  0052A4                     
 14851                           ; BSR set to: 13
 14852                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 14853                           
 14854                           ; BSR set to: 13
 14855  0052A4  0100               	movlb	0	; () banked
 14856  0052A6  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 14857  0052A8  A4D8               	btfss	status,2,c
 14858  0052AA  D01E               	goto	l414
 14859                           
 14860                           ; BSR set to: 0
 14861                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 14862  0052AC  0EBA               	movlw	low (_configDescriptor1+18)
 14863  0052AE  6FBF               	movwf	_inPipes& (0+255),b
 14864  0052B0  0E8E               	movlw	high (_configDescriptor1+18)
 14865  0052B2  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14866                           
 14867                           ; BSR set to: 0
 14868  0052B4  0E00               	movlw	0
 14869  0052B6  6FC4               	movwf	(_inPipes+5)& (0+255),b
 14870  0052B8  0E09               	movlw	9
 14871  0052BA  D00B               	goto	L13
 14872  0052BC                     l10510:
 14873                           
 14874                           ; BSR set to: 0
 14875  0052BC  0EC0               	movlw	192
 14876  0052BE  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 14880  0052C0  D013               	goto	l414
 14881  0052C2                     
 14882                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 14883                           
 14884                           ; BSR set to: 0
 14885  0052C2  0E6E               	movlw	low _hid_rpt01
 14886  0052C4  0100               	movlb	0	; () banked
 14887  0052C6  6FBF               	movwf	_inPipes& (0+255),b
 14888  0052C8  0E8F               	movlw	high _hid_rpt01
 14889  0052CA  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14890                           
 14891                           ; BSR set to: 0
 14892  0052CC  0E00               	movlw	0
 14893  0052CE  6FC4               	movwf	(_inPipes+5)& (0+255),b
 14894  0052D0  0E1D               	movlw	29
 14895  0052D2                     L13:
 14896  0052D2  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14897  0052D4  D7F3               	goto	l10510
 14898  0052D6                     l411:
 14899                           
 14900                           ; BSR set to: 0
 14901  0052D6  010D               	movlb	13	; () banked
 14902  0052D8  5133               	movf	51,w,b	;volatile
 14903                           
 14904                           ; Switch size 1, requested type "space"
 14905                           ; Number of cases is 3, Range of values is 33 to 35
 14906                           ; switch strategies available:
 14907                           ; Name         Instructions Cycles
 14908                           ; simple_byte           10     6 (average)
 14909                           ;	Chosen strategy is simple_byte
 14910  0052DA  0A21               	xorlw	33	; case 33
 14911  0052DC  B4D8               	btfsc	status,2,c
 14912  0052DE  D7E2               	goto	l412
 14913  0052E0  0A03               	xorlw	3	; case 34
 14914  0052E2  B4D8               	btfsc	status,2,c
 14915  0052E4  D7EE               	goto	l415
 14916  0052E6  0A01               	xorlw	1	; case 35
 14917  0052E8                     l414:
 14918                           
 14919                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 14920                           
 14921                           ; BSR set to: 13
 14922                           
 14923                           ; BSR set to: 13
 14924  0052E8  010D               	movlb	13	; () banked
 14925  0052EA  3930               	swapf	48,w,b	;volatile
 14926  0052EC  32E8               	rrcf	wreg,f,c
 14927  0052EE  0B03               	andlw	3
 14928  0052F0  06E8               	decf	wreg,f,c
 14929  0052F2  A4D8               	btfss	status,2,c
 14930  0052F4  0012               	return	
 14931  0052F6  D024               	goto	l418
 14932  0052F8                     
 14933                           ; BSR set to: 13
 14934                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14935                           
 14936                           ; BSR set to: 13
 14937  0052F8  0EFC               	movlw	low _idle_rate
 14938  0052FA  0100               	movlb	0	; () banked
 14939  0052FC  6FBF               	movwf	_inPipes& (0+255),b
 14940  0052FE  0E00               	movlw	high _idle_rate
 14941  005300  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14942                           
 14943                           ; BSR set to: 0
 14944  005302  0E00               	movlw	0
 14945  005304  6FC4               	movwf	(_inPipes+5)& (0+255),b
 14946  005306  0E01               	movlw	1
 14947  005308  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14948                           
 14949                           ; BSR set to: 0
 14950  00530A  0EC1               	movlw	193
 14951  00530C  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14952                           
 14953                           ;usb_device_hid.c: 223: break;
 14954  00530E  0012               	return	
 14955  005310                     
 14956                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 14957                           
 14958                           ; BSR set to: 0
 14959  005310  0E80               	movlw	128
 14960  005312  0100               	movlb	0	; () banked
 14961  005314  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14962                           
 14963                           ; BSR set to: 0
 14964                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 14965  005316  CD33 F0FC          	movff	3379,_idle_rate	;volatile
 14966                           
 14967                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 14968  00531A  0012               	return	
 14969  00531C                     
 14970                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 14971                           
 14972                           ; BSR set to: 0
 14973  00531C  0EFB               	movlw	low _active_protocol
 14974  00531E  0100               	movlb	0	; () banked
 14975  005320  6FBF               	movwf	_inPipes& (0+255),b
 14976  005322  0E00               	movlw	high _active_protocol
 14977  005324  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14978                           
 14979                           ; BSR set to: 0
 14980  005326  0E00               	movlw	0
 14981  005328  6FC4               	movwf	(_inPipes+5)& (0+255),b
 14982  00532A  0E01               	movlw	1
 14983  00532C  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14984                           
 14985                           ; BSR set to: 0
 14986  00532E  0E81               	movlw	129
 14987  005330  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14988                           
 14989                           ;usb_device_hid.c: 234: break;
 14990  005332  0012               	return	
 14991  005334                     
 14992                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 14993                           
 14994                           ; BSR set to: 0
 14995  005334  0E80               	movlw	128
 14996  005336  0100               	movlb	0	; () banked
 14997  005338  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14998                           
 14999                           ; BSR set to: 0
 15000                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 15001  00533A  CD32 F0FB          	movff	3378,_active_protocol	;volatile
 15002                           
 15003                           ; BSR set to: 0
 15004                           ;usb_device_hid.c: 239: }
 15005                           
 15006                           ;usb_device_hid.c: 238: break;
 15007  00533E  0012               	return	
 15008  005340                     l418:
 15009                           
 15010                           ; BSR set to: 0
 15011  005340  010D               	movlb	13	; () banked
 15012  005342  5131               	movf	49,w,b	;volatile
 15013                           
 15014                           ; Switch size 1, requested type "space"
 15015                           ; Number of cases is 6, Range of values is 1 to 11
 15016                           ; switch strategies available:
 15017                           ; Name         Instructions Cycles
 15018                           ; simple_byte           19    10 (average)
 15019                           ;	Chosen strategy is simple_byte
 15020  005344  0A01               	xorlw	1	; case 1
 15021  005346  B4D8               	btfsc	status,2,c
 15022  005348  0012               	return	
 15023  00534A  0A03               	xorlw	3	; case 2
 15024  00534C  B4D8               	btfsc	status,2,c
 15025  00534E  D7D4               	goto	l422
 15026  005350  0A01               	xorlw	1	; case 3
 15027  005352  B4D8               	btfsc	status,2,c
 15028  005354  D7E3               	goto	l424
 15029  005356  0A0A               	xorlw	10	; case 9
 15030  005358  B4D8               	btfsc	status,2,c
 15031  00535A  0012               	return	
 15032  00535C  0A03               	xorlw	3	; case 10
 15033  00535E  B4D8               	btfsc	status,2,c
 15034  005360  D7D7               	goto	l423
 15035  005362  0A01               	xorlw	1	; case 11
 15036  005364  A4D8               	btfss	status,2,c
 15037  005366  0012               	return	
 15038  005368  D7E5               	goto	l425
 15039  00536A                     __end_of_USBCheckHIDRequest:
 15040                           	opt stack 0
 15041                           tblptru	equ	0xFF8
 15042                           tblptrh	equ	0xFF7
 15043                           tblptrl	equ	0xFF6
 15044                           tablat	equ	0xFF5
 15045                           prodh	equ	0xFF4
 15046                           prodl	equ	0xFF3
 15047                           intcon	equ	0xFF2
 15048                           intcon2	equ	0xFF1
 15049                           intcon3	equ	0xFF0
 15050                           indf0	equ	0xFEF
 15051                           postinc0	equ	0xFEE
 15052                           fsr0h	equ	0xFEA
 15053                           fsr0l	equ	0xFE9
 15054                           wreg	equ	0xFE8
 15055                           indf1	equ	0xFE7
 15056                           postdec1	equ	0xFE5
 15057                           plusw1	equ	0xFE3
 15058                           fsr1h	equ	0xFE2
 15059                           fsr1l	equ	0xFE1
 15060                           indf2	equ	0xFDF
 15061                           postinc2	equ	0xFDE
 15062                           postdec2	equ	0xFDD
 15063                           plusw2	equ	0xFDB
 15064                           fsr2h	equ	0xFDA
 15065                           fsr2l	equ	0xFD9
 15066                           status	equ	0xFD8
 15067                           
 15068 ;; *************** function _SYSTEM_Initialize *****************
 15069 ;; Defined at:
 15070 ;;		line 80 in file "system.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;  state           1    wreg     enum E6623
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;  state           1    4[COMRAM] enum E6623
 15075 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 15076 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 15077 ;; Return value:  Size  Location     Type
 15078 ;;                  1    wreg      void 
 15079 ;; Registers used:
 15080 ;;		wreg, status,2, status,0
 15081 ;; Tracked objects:
 15082 ;;		On entry : 0/0
 15083 ;;		On exit  : 0/0
 15084 ;;		Unchanged: 0/0
 15085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15087 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15089 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15090 ;;Total ram usage:        5 bytes
 15091 ;; Hardware stack levels used:    1
 15092 ;; This function calls:
 15093 ;;		Nothing
 15094 ;; This function is called by:
 15095 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15096 ;;		_main
 15097 ;; This function uses a non-reentrant model
 15098 ;;
 15099                           
 15100                           	psect	text70
 15101  007CFA                     __ptext70:
 15102                           	opt stack 0
 15103  007CFA                     _SYSTEM_Initialize:
 15104                           	opt stack 28
 15105                           
 15106                           ;incstack = 0
 15107                           ;SYSTEM_Initialize@state stored from wreg
 15108  007CFA  6E05               	movwf	SYSTEM_Initialize@state,c
 15109                           
 15110                           ;system.c: 82: switch(state)
 15111  007CFC  D01D               	goto	l926
 15112  007CFE                     
 15113                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 15114  007CFE  0E02               	movlw	2
 15115  007D00  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 15116  007D02  0E58               	movlw	88
 15117  007D04  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 15118                           
 15119                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 15120  007D06  8C9B               	bsf	3995,6,c	;volatile
 15121  007D08                     l10696:
 15122  007D08  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 15123  007D0A  A0D8               	btfss	status,0,c
 15124  007D0C  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 15125  007D0E  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 15126  007D10  E1FB               	bnz	l10696
 15127  007D12  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 15128  007D14  B4D8               	btfsc	status,2,c
 15129  007D16  0012               	return	
 15130  007D18  D7F7               	goto	l929
 15131  007D1A                     
 15132                           ;system.c: 119: OSCCON = 0x70;
 15133  007D1A  0E70               	movlw	112
 15134  007D1C  6ED3               	movwf	4051,c	;volatile
 15135                           
 15136                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 15137  007D1E  0E03               	movlw	3
 15138  007D20  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3113+1,c
 15139  007D22  0E20               	movlw	32
 15140  007D24  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3113,c
 15141  007D26                     l10700:
 15142  007D26  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3113,f,c
 15143  007D28  A0D8               	btfss	status,0,c
 15144  007D2A  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3113+1,f,c
 15145  007D2C  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3113,w,c
 15146  007D2E  E1FB               	bnz	l10700
 15147  007D30  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3113+1,w,c
 15148  007D32  B4D8               	btfsc	status,2,c
 15149  007D34  0012               	return	
 15150  007D36  D7F7               	goto	l935
 15151  007D38                     l926:
 15152  007D38  5005               	movf	SYSTEM_Initialize@state,w,c
 15153                           
 15154                           ; Switch size 1, requested type "space"
 15155                           ; Number of cases is 3, Range of values is 0 to 2
 15156                           ; switch strategies available:
 15157                           ; Name         Instructions Cycles
 15158                           ; simple_byte           10     6 (average)
 15159                           ;	Chosen strategy is simple_byte
 15160  007D3A  0A00               	xorlw	0	; case 0
 15161  007D3C  B4D8               	btfsc	status,2,c
 15162  007D3E  D7DF               	goto	l927
 15163  007D40  0A01               	xorlw	1	; case 1
 15164  007D42  B4D8               	btfsc	status,2,c
 15165  007D44  0012               	return	
 15166  007D46  0A03               	xorlw	3	; case 2
 15167  007D48  A4D8               	btfss	status,2,c
 15168  007D4A  0012               	return	
 15169  007D4C  D7E6               	goto	l933
 15170  007D4E                     __end_of_SYSTEM_Initialize:
 15171                           	opt stack 0
 15172                           tblptru	equ	0xFF8
 15173                           tblptrh	equ	0xFF7
 15174                           tblptrl	equ	0xFF6
 15175                           tablat	equ	0xFF5
 15176                           prodh	equ	0xFF4
 15177                           prodl	equ	0xFF3
 15178                           intcon	equ	0xFF2
 15179                           intcon2	equ	0xFF1
 15180                           intcon3	equ	0xFF0
 15181                           indf0	equ	0xFEF
 15182                           postinc0	equ	0xFEE
 15183                           fsr0h	equ	0xFEA
 15184                           fsr0l	equ	0xFE9
 15185                           wreg	equ	0xFE8
 15186                           indf1	equ	0xFE7
 15187                           postdec1	equ	0xFE5
 15188                           plusw1	equ	0xFE3
 15189                           fsr1h	equ	0xFE2
 15190                           fsr1l	equ	0xFE1
 15191                           indf2	equ	0xFDF
 15192                           postinc2	equ	0xFDE
 15193                           postdec2	equ	0xFDD
 15194                           plusw2	equ	0xFDB
 15195                           fsr2h	equ	0xFDA
 15196                           fsr2l	equ	0xFD9
 15197                           status	equ	0xFD8
 15198                           
 15199 ;; *************** function _MSDTransferTerminated *****************
 15200 ;; Defined at:
 15201 ;;		line 1674 in file "usb_device_msd.c"
 15202 ;; Parameters:    Size  Location     Type
 15203 ;;  handle          2   11[COMRAM] PTR void 
 15204 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15205 ;;		 -> BDT(48), 
 15206 ;; Auto vars:     Size  Location     Type
 15207 ;;		None
 15208 ;; Return value:  Size  Location     Type
 15209 ;;                  1    wreg      void 
 15210 ;; Registers used:
 15211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15212 ;; Tracked objects:
 15213 ;;		On entry : 0/0
 15214 ;;		On exit  : 0/0
 15215 ;;		Unchanged: 0/0
 15216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15218 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15220 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15221 ;;Total ram usage:        4 bytes
 15222 ;; Hardware stack levels used:    1
 15223 ;; Hardware stack levels required when called:    1
 15224 ;; This function calls:
 15225 ;;		_USBStallEndpoint
 15226 ;;		_USBTransferOnePacket
 15227 ;; This function is called by:
 15228 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15229 ;; This function uses a non-reentrant model
 15230 ;;
 15231                           
 15232                           	psect	text71
 15233  007AF6                     __ptext71:
 15234                           	opt stack 0
 15235  007AF6                     _MSDTransferTerminated:
 15236                           	opt stack 27
 15237                           
 15238                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 15239                           
 15240                           ;incstack = 0
 15241  007AF6  0100               	movlb	0	; () banked
 15242  007AF8  51E1               	movf	_MSDCBWValid& (0+255),w,b
 15243  007AFA  A4D8               	btfss	status,2,c
 15244  007AFC  D00B               	goto	l764
 15245                           
 15246                           ; BSR set to: 0
 15247                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 15248  007AFE  0E01               	movlw	1
 15249  007B00  6E01               	movwf	USBStallEndpoint@dir,c
 15250  007B02  0E02               	movlw	2
 15251  007B04  ECDE  F024         	call	_USBStallEndpoint
 15252                           
 15253                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 15254  007B08  0E00               	movlw	0
 15255  007B0A  6E01               	movwf	USBStallEndpoint@dir,c
 15256  007B0C  0E02               	movlw	2
 15257  007B0E  ECDE  F024         	call	_USBStallEndpoint
 15258                           
 15259                           ;usb_device_msd.c: 1681: }
 15260  007B12  0012               	return	
 15261  007B14                     l764:
 15262  007B14  C144  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 15263  007B18  C145  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 15264  007B1C  500E               	movf	_MSDTransferTerminated$2407,w,c
 15265  007B1E  180C               	xorwf	MSDTransferTerminated@handle,w,c
 15266  007B20  E114               	bnz	l767
 15267  007B22  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 15268  007B24  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 15269  007B26  A4D8               	btfss	status,2,c
 15270  007B28  0012               	return	
 15271                           
 15272                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 15273  007B2A  0E00               	movlw	0
 15274  007B2C  6E01               	movwf	USBTransferOnePacket@dir,c
 15275  007B2E  0E40               	movlw	64
 15276  007B30  6E02               	movwf	USBTransferOnePacket@data,c
 15277  007B32  0E0D               	movlw	13
 15278  007B34  6E03               	movwf	USBTransferOnePacket@data+1,c
 15279  007B36  0E40               	movlw	64
 15280  007B38  6E04               	movwf	USBTransferOnePacket@len,c
 15281  007B3A  0E02               	movlw	2
 15282  007B3C  ECEB  F026         	call	_USBTransferOnePacket
 15283  007B40  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15284  007B44  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15285  007B48  0012               	return	
 15286  007B4A                     l767:
 15287  007B4A  0012               	return		;funcret
 15288  007B4C                     __end_of_MSDTransferTerminated:
 15289                           	opt stack 0
 15290                           tblptru	equ	0xFF8
 15291                           tblptrh	equ	0xFF7
 15292                           tblptrl	equ	0xFF6
 15293                           tablat	equ	0xFF5
 15294                           prodh	equ	0xFF4
 15295                           prodl	equ	0xFF3
 15296                           intcon	equ	0xFF2
 15297                           intcon2	equ	0xFF1
 15298                           intcon3	equ	0xFF0
 15299                           indf0	equ	0xFEF
 15300                           postinc0	equ	0xFEE
 15301                           fsr0h	equ	0xFEA
 15302                           fsr0l	equ	0xFE9
 15303                           wreg	equ	0xFE8
 15304                           indf1	equ	0xFE7
 15305                           postdec1	equ	0xFE5
 15306                           plusw1	equ	0xFE3
 15307                           fsr1h	equ	0xFE2
 15308                           fsr1l	equ	0xFE1
 15309                           indf2	equ	0xFDF
 15310                           postinc2	equ	0xFDE
 15311                           postdec2	equ	0xFDD
 15312                           plusw2	equ	0xFDB
 15313                           fsr2h	equ	0xFDA
 15314                           fsr2l	equ	0xFD9
 15315                           status	equ	0xFD8
 15316                           
 15317 ;; *************** function _APP_DeviceMSDInitialize *****************
 15318 ;; Defined at:
 15319 ;;		line 84 in file "app_device_msd.c"
 15320 ;; Parameters:    Size  Location     Type
 15321 ;;		None
 15322 ;; Auto vars:     Size  Location     Type
 15323 ;;		None
 15324 ;; Return value:  Size  Location     Type
 15325 ;;                  1    wreg      void 
 15326 ;; Registers used:
 15327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15328 ;; Tracked objects:
 15329 ;;		On entry : 0/0
 15330 ;;		On exit  : 0/0
 15331 ;;		Unchanged: 0/0
 15332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15337 ;;Total ram usage:        0 bytes
 15338 ;; Hardware stack levels used:    1
 15339 ;; Hardware stack levels required when called:    2
 15340 ;; This function calls:
 15341 ;;		_USBEnableEndpoint
 15342 ;;		_USBMSDInit
 15343 ;; This function is called by:
 15344 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15345 ;; This function uses a non-reentrant model
 15346 ;;
 15347                           
 15348                           	psect	text72
 15349  0088BC                     __ptext72:
 15350                           	opt stack 0
 15351  0088BC                     _APP_DeviceMSDInitialize:
 15352                           	opt stack 26
 15353                           
 15354                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 15355                           
 15356                           ;incstack = 0
 15357  0088BC  0E1E               	movlw	30
 15358  0088BE  6E09               	movwf	USBEnableEndpoint@options,c
 15359  0088C0  0E02               	movlw	2
 15360  0088C2  ECBA  F040         	call	_USBEnableEndpoint
 15361                           
 15362                           ;app_device_msd.c: 93: USBMSDInit();
 15363  0088C6  ECE5  F025         	call	_USBMSDInit	;wreg free
 15364  0088CA  0012               	return		;funcret
 15365  0088CC                     __end_of_APP_DeviceMSDInitialize:
 15366                           	opt stack 0
 15367                           tblptru	equ	0xFF8
 15368                           tblptrh	equ	0xFF7
 15369                           tblptrl	equ	0xFF6
 15370                           tablat	equ	0xFF5
 15371                           prodh	equ	0xFF4
 15372                           prodl	equ	0xFF3
 15373                           intcon	equ	0xFF2
 15374                           intcon2	equ	0xFF1
 15375                           intcon3	equ	0xFF0
 15376                           indf0	equ	0xFEF
 15377                           postinc0	equ	0xFEE
 15378                           fsr0h	equ	0xFEA
 15379                           fsr0l	equ	0xFE9
 15380                           wreg	equ	0xFE8
 15381                           indf1	equ	0xFE7
 15382                           postdec1	equ	0xFE5
 15383                           plusw1	equ	0xFE3
 15384                           fsr1h	equ	0xFE2
 15385                           fsr1l	equ	0xFE1
 15386                           indf2	equ	0xFDF
 15387                           postinc2	equ	0xFDE
 15388                           postdec2	equ	0xFDD
 15389                           plusw2	equ	0xFDB
 15390                           fsr2h	equ	0xFDA
 15391                           fsr2l	equ	0xFD9
 15392                           status	equ	0xFD8
 15393                           
 15394 ;; *************** function _USBMSDInit *****************
 15395 ;; Defined at:
 15396 ;;		line 142 in file "usb_device_msd.c"
 15397 ;; Parameters:    Size  Location     Type
 15398 ;;		None
 15399 ;; Auto vars:     Size  Location     Type
 15400 ;;		None
 15401 ;; Return value:  Size  Location     Type
 15402 ;;                  1    wreg      void 
 15403 ;; Registers used:
 15404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15405 ;; Tracked objects:
 15406 ;;		On entry : 0/0
 15407 ;;		On exit  : 0/0
 15408 ;;		Unchanged: 0/0
 15409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15412 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15413 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15414 ;;Total ram usage:        3 bytes
 15415 ;; Hardware stack levels used:    1
 15416 ;; Hardware stack levels required when called:    1
 15417 ;; This function calls:
 15418 ;;		_ExternalFlash_MediaDetect
 15419 ;;		_ExternalFlash_MediaInitialize
 15420 ;;		_ResetSenseData
 15421 ;;		_USBTransferOnePacket
 15422 ;; This function is called by:
 15423 ;;		_APP_DeviceMSDInitialize
 15424 ;; This function uses a non-reentrant model
 15425 ;;
 15426                           
 15427                           	psect	text73
 15428  004BCA                     __ptext73:
 15429                           	opt stack 0
 15430  004BCA                     _USBMSDInit:
 15431                           	opt stack 26
 15432                           
 15433                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 15434                           
 15435                           ;incstack = 0
 15436  004BCA  0E00               	movlw	0
 15437  004BCC  6E01               	movwf	USBTransferOnePacket@dir,c
 15438  004BCE  0E40               	movlw	64
 15439  004BD0  6E02               	movwf	USBTransferOnePacket@data,c
 15440  004BD2  0E0D               	movlw	13
 15441  004BD4  6E03               	movwf	USBTransferOnePacket@data+1,c
 15442  004BD6  0E40               	movlw	64
 15443  004BD8  6E04               	movwf	USBTransferOnePacket@len,c
 15444  004BDA  0E02               	movlw	2
 15445  004BDC  ECEB  F026         	call	_USBTransferOnePacket
 15446  004BE0  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15447  004BE4  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15448  004BE8  C0C9  F0D5         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 15449  004BEC  C0CA  F0D6         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 15450                           
 15451                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 15452  004BF0  0E00               	movlw	0
 15453  004BF2  0100               	movlb	0	; () banked
 15454  004BF4  6FE8               	movwf	_MSD_State& (0+255),b
 15455                           
 15456                           ; BSR set to: 0
 15457                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 15458  004BF6  69E7               	setf	_MSDCommandState& (0+255),b
 15459                           
 15460                           ; BSR set to: 0
 15461                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 15462  004BF8  0E00               	movlw	0
 15463  004BFA  6FE6               	movwf	_MSDReadState& (0+255),b
 15464                           
 15465                           ; BSR set to: 0
 15466                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 15467  004BFC  0E00               	movlw	0
 15468  004BFE  6FE5               	movwf	_MSDWriteState& (0+255),b
 15469                           
 15470                           ; BSR set to: 0
 15471                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 15472  004C00  0E00               	movlw	0
 15473  004C02  6FE2               	movwf	_MSDHostNoData& (0+255),b
 15474                           
 15475                           ; BSR set to: 0
 15476                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 15477  004C04  0E00               	movlw	0
 15478  004C06  0101               	movlb	1	; () banked
 15479  004C08  6F56               	movwf	_gblNumBLKS& (0+255),b
 15480  004C0A  0E00               	movlw	0
 15481  004C0C  6F57               	movwf	(_gblNumBLKS+1)& (0+255),b
 15482  004C0E  0E00               	movlw	0
 15483  004C10  6F58               	movwf	(_gblNumBLKS+2)& (0+255),b
 15484  004C12  0E00               	movlw	0
 15485  004C14  6F59               	movwf	(_gblNumBLKS+3)& (0+255),b
 15486                           
 15487                           ; BSR set to: 1
 15488                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 15489  004C16  0E00               	movlw	0
 15490  004C18  6F52               	movwf	_gblBLKLen& (0+255),b
 15491  004C1A  0E00               	movlw	0
 15492  004C1C  6F53               	movwf	(_gblBLKLen+1)& (0+255),b
 15493  004C1E  0E00               	movlw	0
 15494  004C20  6F54               	movwf	(_gblBLKLen+2)& (0+255),b
 15495  004C22  0E00               	movlw	0
 15496  004C24  6F55               	movwf	(_gblBLKLen+3)& (0+255),b
 15497                           
 15498                           ; BSR set to: 1
 15499                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 15500  004C26  0E01               	movlw	1
 15501  004C28  0100               	movlb	0	; () banked
 15502  004C2A  6FE1               	movwf	_MSDCBWValid& (0+255),b
 15503                           
 15504                           ; BSR set to: 0
 15505                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 15506  004C2C  0E00               	movlw	0
 15507  004C2E  0101               	movlb	1	; () banked
 15508  004C30  6F7F               	movwf	(_gblMediaPresent+1)& (0+255),b
 15509  004C32  0E00               	movlw	0
 15510  004C34  6F7E               	movwf	_gblMediaPresent& (0+255),b
 15511                           
 15512                           ; BSR set to: 1
 15513                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 15514  004C36  0E00               	movlw	0
 15515  004C38  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 15516  004C3A  D046               	goto	l518
 15517  004C3C                     
 15518                           ; BSR set to: 1
 15519                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 15520                           
 15521                           ; BSR set to: 1
 15522  004C3C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15523  004C3E  0D01               	mullw	1
 15524  004C40  0EE3               	movlw	low _SoftDetach
 15525  004C42  24F3               	addwf	prodl,w,c
 15526  004C44  6ED9               	movwf	fsr2l,c
 15527  004C46  0E00               	movlw	high _SoftDetach
 15528  004C48  20F4               	addwfc	prodh,w,c
 15529  004C4A  6EDA               	movwf	fsr2h,c
 15530  004C4C  0E00               	movlw	0
 15531  004C4E  6EDF               	movwf	indf2,c
 15532                           
 15533                           ; BSR set to: 1
 15534                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 15535  004C50  C1E7  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 15536  004C54  C1E8  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 15537  004C58  D801               	call	u6908
 15538  004C5A  D009               	goto	u6909
 15539  004C5C                     u6908:
 15540  004C5C  0005               	push	
 15541  004C5E  6EFA               	movwf	pclath,c
 15542  004C60  51DF               	movf	(_LUN+6)& (0+255),w,b
 15543  004C62  6EFD               	movwf	tosl,c
 15544  004C64  51E0               	movf	(_LUN+7)& (0+255),w,b
 15545  004C66  6EFE               	movwf	tosh,c
 15546  004C68  6AFF               	clrf	tosu,c
 15547  004C6A  50FA               	movf	pclath,w,c
 15548  004C6C  0012               	return		;indir
 15549  004C6E                     u6909:
 15550  004C6E  0900               	iorlw	0
 15551  004C70  B4D8               	btfsc	status,2,c
 15552  004C72  D026               	goto	l521
 15553                           
 15554                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 15555  004C74  C1E7  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 15556  004C78  C1E8  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 15557  004C7C  D801               	call	u6928
 15558  004C7E  D00A               	goto	u6929
 15559  004C80                     u6928:
 15560  004C80  0005               	push	
 15561  004C82  6EFA               	movwf	pclath,c
 15562  004C84  0101               	movlb	1	; () banked
 15563  004C86  51D9               	movf	_LUN& (0+255),w,b
 15564  004C88  6EFD               	movwf	tosl,c
 15565  004C8A  51DA               	movf	(_LUN+1)& (0+255),w,b
 15566  004C8C  6EFE               	movwf	tosh,c
 15567  004C8E  6AFF               	clrf	tosu,c
 15568  004C90  50FA               	movf	pclath,w,c
 15569  004C92  0012               	return		;indir
 15570  004C94                     u6929:
 15571  004C94  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 15572  004C96  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 15573  004C98  B4D8               	btfsc	status,2,c
 15574  004C9A  D012               	goto	l521
 15575                           
 15576                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 15577  004C9C  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 15578  004CA0  0E01               	movlw	1
 15579  004CA2  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 15580  004CA4  0E00               	movlw	0
 15581  004CA6  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 15582  004CA8  2A0C               	incf	??_USBMSDInit,f,c
 15583  004CAA  D003               	goto	u6944
 15584  004CAC                     u6945:
 15585  004CAC  90D8               	bcf	status,0,c
 15586  004CAE  360D               	rlcf	??_USBMSDInit+1,f,c
 15587  004CB0  360E               	rlcf	??_USBMSDInit+2,f,c
 15588  004CB2                     u6944:
 15589  004CB2  2E0C               	decfsz	??_USBMSDInit,f,c
 15590  004CB4  D7FB               	goto	u6945
 15591  004CB6  500D               	movf	??_USBMSDInit+1,w,c
 15592  004CB8  0101               	movlb	1	; () banked
 15593  004CBA  137E               	iorwf	_gblMediaPresent& (0+255),f,b
 15594  004CBC  500E               	movf	??_USBMSDInit+2,w,c
 15595  004CBE  137F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 15596  004CC0                     l521:
 15597                           
 15598                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 15599                           
 15600                           ; BSR set to: 1
 15601                           
 15602                           ; BSR set to: 1
 15603  004CC0  EC56  F03B         	call	_ResetSenseData	;wreg free
 15604  004CC4  0101               	movlb	1	; () banked
 15605  004CC6  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 15606  004CC8                     l518:
 15607                           
 15608                           ; BSR set to: 1
 15609                           
 15610                           ; BSR set to: 1
 15611  004CC8  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15612  004CCA  A4D8               	btfss	status,2,c
 15613  004CCC  0012               	return	
 15614  004CCE  D7B6               	goto	l519
 15615  004CD0                     __end_of_USBMSDInit:
 15616                           	opt stack 0
 15617                           tosu	equ	0xFFF
 15618                           tosh	equ	0xFFE
 15619                           tosl	equ	0xFFD
 15620                           pclath	equ	0xFFA
 15621                           tblptru	equ	0xFF8
 15622                           tblptrh	equ	0xFF7
 15623                           tblptrl	equ	0xFF6
 15624                           tablat	equ	0xFF5
 15625                           prodh	equ	0xFF4
 15626                           prodl	equ	0xFF3
 15627                           intcon	equ	0xFF2
 15628                           intcon2	equ	0xFF1
 15629                           intcon3	equ	0xFF0
 15630                           indf0	equ	0xFEF
 15631                           postinc0	equ	0xFEE
 15632                           fsr0h	equ	0xFEA
 15633                           fsr0l	equ	0xFE9
 15634                           wreg	equ	0xFE8
 15635                           indf1	equ	0xFE7
 15636                           postdec1	equ	0xFE5
 15637                           plusw1	equ	0xFE3
 15638                           fsr1h	equ	0xFE2
 15639                           fsr1l	equ	0xFE1
 15640                           indf2	equ	0xFDF
 15641                           postinc2	equ	0xFDE
 15642                           postdec2	equ	0xFDD
 15643                           plusw2	equ	0xFDB
 15644                           fsr2h	equ	0xFDA
 15645                           fsr2l	equ	0xFD9
 15646                           status	equ	0xFD8
 15647                           
 15648 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 15649 ;; Defined at:
 15650 ;;		line 47 in file "app_device_custom_hid.c"
 15651 ;; Parameters:    Size  Location     Type
 15652 ;;		None
 15653 ;; Auto vars:     Size  Location     Type
 15654 ;;		None
 15655 ;; Return value:  Size  Location     Type
 15656 ;;                  1    wreg      void 
 15657 ;; Registers used:
 15658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15659 ;; Tracked objects:
 15660 ;;		On entry : 0/0
 15661 ;;		On exit  : 0/0
 15662 ;;		Unchanged: 0/0
 15663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15668 ;;Total ram usage:        0 bytes
 15669 ;; Hardware stack levels used:    1
 15670 ;; Hardware stack levels required when called:    2
 15671 ;; This function calls:
 15672 ;;		_USBEnableEndpoint
 15673 ;;		_USBTransferOnePacket
 15674 ;; This function is called by:
 15675 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15676 ;; This function uses a non-reentrant model
 15677 ;;
 15678                           
 15679                           	psect	text74
 15680  0082F8                     __ptext74:
 15681                           	opt stack 0
 15682  0082F8                     _APP_DeviceCustomHIDInitialize:
 15683                           	opt stack 26
 15684                           
 15685                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 15686                           
 15687                           ; BSR set to: 1
 15688                           ;incstack = 0
 15689  0082F8  0E00               	movlw	0
 15690  0082FA  0101               	movlb	1	; () banked
 15691  0082FC  6F7A               	movwf	_USBInHandle& (0+255),b
 15692  0082FE  0E00               	movlw	0
 15693  008300  6F7B               	movwf	(_USBInHandle+1)& (0+255),b
 15694                           
 15695                           ; BSR set to: 1
 15696                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 15697  008302  0E1E               	movlw	30
 15698  008304  6E09               	movwf	USBEnableEndpoint@options,c
 15699  008306  0E01               	movlw	1
 15700  008308  ECBA  F040         	call	_USBEnableEndpoint
 15701                           
 15702                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 15703  00830C  0E00               	movlw	0
 15704  00830E  6E01               	movwf	USBTransferOnePacket@dir,c
 15705  008310  0E90               	movlw	low _ReceivedDataBuffer
 15706  008312  6E02               	movwf	USBTransferOnePacket@data,c
 15707  008314  0E02               	movlw	high _ReceivedDataBuffer
 15708  008316  6E03               	movwf	USBTransferOnePacket@data+1,c
 15709  008318  0E40               	movlw	64
 15710  00831A  6E04               	movwf	USBTransferOnePacket@len,c
 15711  00831C  0E01               	movlw	1
 15712  00831E  ECEB  F026         	call	_USBTransferOnePacket
 15713  008322  C001  F17C         	movff	?_USBTransferOnePacket,_USBOutHandle
 15714  008326  C002  F17D         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 15715  00832A  0012               	return		;funcret
 15716  00832C                     __end_of_APP_DeviceCustomHIDInitialize:
 15717                           	opt stack 0
 15718                           tosu	equ	0xFFF
 15719                           tosh	equ	0xFFE
 15720                           tosl	equ	0xFFD
 15721                           pclath	equ	0xFFA
 15722                           tblptru	equ	0xFF8
 15723                           tblptrh	equ	0xFF7
 15724                           tblptrl	equ	0xFF6
 15725                           tablat	equ	0xFF5
 15726                           prodh	equ	0xFF4
 15727                           prodl	equ	0xFF3
 15728                           intcon	equ	0xFF2
 15729                           intcon2	equ	0xFF1
 15730                           intcon3	equ	0xFF0
 15731                           indf0	equ	0xFEF
 15732                           postinc0	equ	0xFEE
 15733                           fsr0h	equ	0xFEA
 15734                           fsr0l	equ	0xFE9
 15735                           wreg	equ	0xFE8
 15736                           indf1	equ	0xFE7
 15737                           postdec1	equ	0xFE5
 15738                           plusw1	equ	0xFE3
 15739                           fsr1h	equ	0xFE2
 15740                           fsr1l	equ	0xFE1
 15741                           indf2	equ	0xFDF
 15742                           postinc2	equ	0xFDE
 15743                           postdec2	equ	0xFDD
 15744                           plusw2	equ	0xFDB
 15745                           fsr2h	equ	0xFDA
 15746                           fsr2l	equ	0xFD9
 15747                           status	equ	0xFD8
 15748                           
 15749 ;; *************** function _USBEnableEndpoint *****************
 15750 ;; Defined at:
 15751 ;;		line 878 in file "usb_device.c"
 15752 ;; Parameters:    Size  Location     Type
 15753 ;;  ep              1    wreg     unsigned char 
 15754 ;;  options         1    8[COMRAM] unsigned char 
 15755 ;; Auto vars:     Size  Location     Type
 15756 ;;  ep              1   11[COMRAM] unsigned char 
 15757 ;;  p               2    9[COMRAM] PTR unsigned char 
 15758 ;;		 -> UEP0(1), 
 15759 ;; Return value:  Size  Location     Type
 15760 ;;                  1    wreg      void 
 15761 ;; Registers used:
 15762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15763 ;; Tracked objects:
 15764 ;;		On entry : 0/0
 15765 ;;		On exit  : 0/0
 15766 ;;		Unchanged: 0/0
 15767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15768 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15769 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15771 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15772 ;;Total ram usage:        4 bytes
 15773 ;; Hardware stack levels used:    1
 15774 ;; Hardware stack levels required when called:    1
 15775 ;; This function calls:
 15776 ;;		_USBConfigureEndpoint
 15777 ;; This function is called by:
 15778 ;;		_APP_DeviceCustomHIDInitialize
 15779 ;;		_APP_DeviceMSDInitialize
 15780 ;; This function uses a non-reentrant model
 15781 ;;
 15782                           
 15783                           	psect	text75
 15784  008174                     __ptext75:
 15785                           	opt stack 0
 15786  008174                     _USBEnableEndpoint:
 15787                           	opt stack 26
 15788                           
 15789                           ;incstack = 0
 15790                           ;USBEnableEndpoint@ep stored from wreg
 15791  008174  6E0C               	movwf	USBEnableEndpoint@ep,c
 15792                           
 15793                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 15794  008176  A409               	btfss	USBEnableEndpoint@options,2,c
 15795  008178  D005               	goto	l178
 15796                           
 15797                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 15798  00817A  0E00               	movlw	0
 15799  00817C  6E01               	movwf	USBConfigureEndpoint@direction,c
 15800  00817E  500C               	movf	USBEnableEndpoint@ep,w,c
 15801  008180  EC57  F034         	call	_USBConfigureEndpoint
 15802  008184                     l178:
 15803                           
 15804                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 15805  008184  A209               	btfss	USBEnableEndpoint@options,1,c
 15806  008186  D005               	goto	l179
 15807                           
 15808                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 15809  008188  0E01               	movlw	1
 15810  00818A  6E01               	movwf	USBConfigureEndpoint@direction,c
 15811  00818C  500C               	movf	USBEnableEndpoint@ep,w,c
 15812  00818E  EC57  F034         	call	_USBConfigureEndpoint
 15813  008192                     l179:
 15814                           
 15815                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 15816  008192  500C               	movf	USBEnableEndpoint@ep,w,c
 15817  008194  0D01               	mullw	1
 15818  008196  0E26               	movlw	38
 15819  008198  24F3               	addwf	prodl,w,c
 15820  00819A  6E0A               	movwf	USBEnableEndpoint@p,c
 15821  00819C  0E0F               	movlw	15
 15822  00819E  20F4               	addwfc	prodh,w,c
 15823  0081A0  6E0B               	movwf	USBEnableEndpoint@p+1,c
 15824                           
 15825                           ;usb_device.c: 901: *p = options;
 15826  0081A2  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 15827  0081A6  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 15828  0081AA  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 15829  0081AE  0012               	return		;funcret
 15830  0081B0                     __end_of_USBEnableEndpoint:
 15831                           	opt stack 0
 15832                           tosu	equ	0xFFF
 15833                           tosh	equ	0xFFE
 15834                           tosl	equ	0xFFD
 15835                           pclath	equ	0xFFA
 15836                           tblptru	equ	0xFF8
 15837                           tblptrh	equ	0xFF7
 15838                           tblptrl	equ	0xFF6
 15839                           tablat	equ	0xFF5
 15840                           prodh	equ	0xFF4
 15841                           prodl	equ	0xFF3
 15842                           intcon	equ	0xFF2
 15843                           intcon2	equ	0xFF1
 15844                           intcon3	equ	0xFF0
 15845                           indf0	equ	0xFEF
 15846                           postinc0	equ	0xFEE
 15847                           fsr0h	equ	0xFEA
 15848                           fsr0l	equ	0xFE9
 15849                           wreg	equ	0xFE8
 15850                           indf1	equ	0xFE7
 15851                           postdec1	equ	0xFE5
 15852                           plusw1	equ	0xFE3
 15853                           fsr1h	equ	0xFE2
 15854                           fsr1l	equ	0xFE1
 15855                           indf2	equ	0xFDF
 15856                           postinc2	equ	0xFDE
 15857                           postdec2	equ	0xFDD
 15858                           plusw2	equ	0xFDB
 15859                           fsr2h	equ	0xFDA
 15860                           fsr2l	equ	0xFD9
 15861                           status	equ	0xFD8
 15862                           
 15863 ;; *************** function _USBConfigureEndpoint *****************
 15864 ;; Defined at:
 15865 ;;		line 1545 in file "usb_device.c"
 15866 ;; Parameters:    Size  Location     Type
 15867 ;;  EPNum           1    wreg     unsigned char 
 15868 ;;  direction       1    0[COMRAM] unsigned char 
 15869 ;; Auto vars:     Size  Location     Type
 15870 ;;  EPNum           1    5[COMRAM] unsigned char 
 15871 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 15872 ;;		 -> BDT(48), 
 15873 ;; Return value:  Size  Location     Type
 15874 ;;                  1    wreg      void 
 15875 ;; Registers used:
 15876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15877 ;; Tracked objects:
 15878 ;;		On entry : 0/0
 15879 ;;		On exit  : 0/0
 15880 ;;		Unchanged: 0/0
 15881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15883 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15884 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15885 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15886 ;;Total ram usage:        8 bytes
 15887 ;; Hardware stack levels used:    1
 15888 ;; This function calls:
 15889 ;;		Nothing
 15890 ;; This function is called by:
 15891 ;;		_USBEnableEndpoint
 15892 ;; This function uses a non-reentrant model
 15893 ;;
 15894                           
 15895                           	psect	text76
 15896  0068AE                     __ptext76:
 15897                           	opt stack 0
 15898  0068AE                     _USBConfigureEndpoint:
 15899                           	opt stack 26
 15900                           
 15901                           ;incstack = 0
 15902                           ;USBConfigureEndpoint@EPNum stored from wreg
 15903  0068AE  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 15904                           
 15905                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 15906  0068B0  0E00               	movlw	0
 15907  0068B2  6E07               	movwf	USBConfigureEndpoint@handle,c
 15908  0068B4  0E0D               	movlw	13
 15909  0068B6  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 15910                           
 15911                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 15912  0068B8  5001               	movf	USBConfigureEndpoint@direction,w,c
 15913  0068BA  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 15914  0068BC  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 15915  0068BE  90D8               	bcf	status,0,c
 15916  0068C0  3602               	rlcf	??_USBConfigureEndpoint,f,c
 15917  0068C2  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 15918  0068C4  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 15919  0068C6  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 15920  0068C8  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 15921  0068CA  90D8               	bcf	status,0,c
 15922  0068CC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 15923  0068CE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 15924  0068D0  90D8               	bcf	status,0,c
 15925  0068D2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 15926  0068D4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 15927  0068D6  5002               	movf	??_USBConfigureEndpoint,w,c
 15928  0068D8  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 15929  0068DA  5003               	movf	??_USBConfigureEndpoint+1,w,c
 15930  0068DC  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 15931  0068DE  90D8               	bcf	status,0,c
 15932  0068E0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 15933  0068E2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 15934  0068E4  90D8               	bcf	status,0,c
 15935  0068E6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 15936  0068E8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 15937  0068EA  5004               	movf	??_USBConfigureEndpoint+2,w,c
 15938  0068EC  2607               	addwf	USBConfigureEndpoint@handle,f,c
 15939  0068EE  5005               	movf	??_USBConfigureEndpoint+3,w,c
 15940  0068F0  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 15941                           
 15942                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 15943  0068F2  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 15944  0068F6  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 15945  0068FA  9EDF               	bcf	indf2,7,c
 15946                           
 15947                           ;usb_device.c: 1559: if(direction == 0)
 15948  0068FC  5001               	movf	USBConfigureEndpoint@direction,w,c
 15949  0068FE  A4D8               	btfss	status,2,c
 15950  006900  D007               	goto	l214
 15951                           
 15952                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 15953  006902  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 15954  006904  0D02               	mullw	2
 15955  006906  0E40               	movlw	low _pBDTEntryOut
 15956  006908  24F3               	addwf	prodl,w,c
 15957  00690A  6ED9               	movwf	fsr2l,c
 15958  00690C  0E01               	movlw	high _pBDTEntryOut
 15959  00690E  D006               	goto	L14
 15960  006910                     l214:
 15961                           
 15962                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 15963  006910  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 15964  006912  0D02               	mullw	2
 15965  006914  0EC5               	movlw	low _pBDTEntryIn
 15966  006916  24F3               	addwf	prodl,w,c
 15967  006918  6ED9               	movwf	fsr2l,c
 15968  00691A  0E00               	movlw	high _pBDTEntryIn
 15969  00691C                     L14:
 15970  00691C  20F4               	addwfc	prodh,w,c
 15971  00691E  6EDA               	movwf	fsr2h,c
 15972  006920  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 15973  006924  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 15974                           
 15975                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 15976  006928  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 15977  00692C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 15978  006930  9CDF               	bcf	indf2,6,c
 15979                           
 15980                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 15981  006932  EE20 F004          	lfsr	2,4
 15982  006936  5007               	movf	USBConfigureEndpoint@handle,w,c
 15983  006938  26D9               	addwf	fsr2l,f,c
 15984  00693A  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 15985  00693C  22DA               	addwfc	fsr2h,f,c
 15986  00693E  8CDF               	bsf	indf2,6,c
 15987  006940  0012               	return		;funcret
 15988  006942                     __end_of_USBConfigureEndpoint:
 15989                           	opt stack 0
 15990                           tosu	equ	0xFFF
 15991                           tosh	equ	0xFFE
 15992                           tosl	equ	0xFFD
 15993                           pclath	equ	0xFFA
 15994                           tblptru	equ	0xFF8
 15995                           tblptrh	equ	0xFF7
 15996                           tblptrl	equ	0xFF6
 15997                           tablat	equ	0xFF5
 15998                           prodh	equ	0xFF4
 15999                           prodl	equ	0xFF3
 16000                           intcon	equ	0xFF2
 16001                           intcon2	equ	0xFF1
 16002                           intcon3	equ	0xFF0
 16003                           indf0	equ	0xFEF
 16004                           postinc0	equ	0xFEE
 16005                           fsr0h	equ	0xFEA
 16006                           fsr0l	equ	0xFE9
 16007                           wreg	equ	0xFE8
 16008                           indf1	equ	0xFE7
 16009                           postdec1	equ	0xFE5
 16010                           plusw1	equ	0xFE3
 16011                           fsr1h	equ	0xFE2
 16012                           fsr1l	equ	0xFE1
 16013                           indf2	equ	0xFDF
 16014                           postinc2	equ	0xFDE
 16015                           postdec2	equ	0xFDD
 16016                           plusw2	equ	0xFDB
 16017                           fsr2h	equ	0xFDA
 16018                           fsr2l	equ	0xFD9
 16019                           status	equ	0xFD8
 16020                           
 16021 ;; *************** function _USBCtrlTrfOutHandler *****************
 16022 ;; Defined at:
 16023 ;;		line 2540 in file "usb_device.c"
 16024 ;; Parameters:    Size  Location     Type
 16025 ;;		None
 16026 ;; Auto vars:     Size  Location     Type
 16027 ;;		None
 16028 ;; Return value:  Size  Location     Type
 16029 ;;                  1    wreg      void 
 16030 ;; Registers used:
 16031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16032 ;; Tracked objects:
 16033 ;;		On entry : 0/0
 16034 ;;		On exit  : 0/0
 16035 ;;		Unchanged: 0/0
 16036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16041 ;;Total ram usage:        0 bytes
 16042 ;; Hardware stack levels used:    1
 16043 ;; Hardware stack levels required when called:    2
 16044 ;; This function calls:
 16045 ;;		_USBCtrlTrfRxService
 16046 ;; This function is called by:
 16047 ;;		_USBCtrlEPService
 16048 ;; This function uses a non-reentrant model
 16049 ;;
 16050                           
 16051                           	psect	text77
 16052  00776E                     __ptext77:
 16053                           	opt stack 0
 16054  00776E                     _USBCtrlTrfOutHandler:
 16055                           	opt stack 26
 16056                           
 16057                           ;usb_device.c: 2542: if(controlTransferState == 2)
 16058                           
 16059                           ;incstack = 0
 16060  00776E  0E02               	movlw	2
 16061  007770  0100               	movlb	0	; () banked
 16062  007772  19F4               	xorwf	_controlTransferState& (0+255),w,b
 16063  007774  A4D8               	btfss	status,2,c
 16064  007776  D003               	goto	l320
 16065                           
 16066                           ; BSR set to: 0
 16067                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 16068  007778  ECBD  F022         	call	_USBCtrlTrfRxService	;wreg free
 16069                           
 16070                           ;usb_device.c: 2545: }
 16071  00777C  0012               	return	
 16072  00777E                     l320:
 16073                           
 16074                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 16075  00777E  0E00               	movlw	0
 16076  007780  0100               	movlb	0	; () banked
 16077  007782  6FF4               	movwf	_controlTransferState& (0+255),b
 16078                           
 16079                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 16080  007784  51F0               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 16081  007786  A4D8               	btfss	status,2,c
 16082  007788  D01F               	goto	l322
 16083                           
 16084                           ; BSR set to: 0
 16085                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 16086  00778A  EE20 F001          	lfsr	2,1
 16087  00778E  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16088  007790  26D9               	addwf	fsr2l,f,c
 16089  007792  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16090  007794  22DA               	addwfc	fsr2h,f,c
 16091  007796  0E08               	movlw	8
 16092  007798  6EDF               	movwf	indf2,c
 16093                           
 16094                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16095  00779A  EE20 F002          	lfsr	2,2
 16096  00779E  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16097  0077A0  26D9               	addwf	fsr2l,f,c
 16098  0077A2  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16099  0077A4  22DA               	addwfc	fsr2h,f,c
 16100  0077A6  0E30               	movlw	48
 16101  0077A8  6EDE               	movwf	postinc2,c
 16102  0077AA  0E0D               	movlw	13
 16103  0077AC  6EDD               	movwf	postdec2,c
 16104                           
 16105                           ; BSR set to: 0
 16106                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16107  0077AE  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16108  0077B2  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16109  0077B6  0E0C               	movlw	12
 16110  0077B8  6EDF               	movwf	indf2,c
 16111                           
 16112                           ; BSR set to: 0
 16113                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16114  0077BA  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16115  0077BE  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16116  0077C2  0E00               	movlw	0
 16117  0077C4  8EDB               	bsf	plusw2,7,c
 16118                           
 16119                           ;usb_device.c: 2563: }
 16120  0077C6  0012               	return	
 16121  0077C8                     l322:
 16122                           
 16123                           ; BSR set to: 0
 16124                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 16125                           
 16126                           ; BSR set to: 0
 16127  0077C8  0E00               	movlw	0
 16128  0077CA  6FF0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16129                           
 16130                           ; BSR set to: 0
 16131  0077CC  0012               	return	
 16132  0077CE                     __end_of_USBCtrlTrfOutHandler:
 16133                           	opt stack 0
 16134                           tosu	equ	0xFFF
 16135                           tosh	equ	0xFFE
 16136                           tosl	equ	0xFFD
 16137                           pclath	equ	0xFFA
 16138                           tblptru	equ	0xFF8
 16139                           tblptrh	equ	0xFF7
 16140                           tblptrl	equ	0xFF6
 16141                           tablat	equ	0xFF5
 16142                           prodh	equ	0xFF4
 16143                           prodl	equ	0xFF3
 16144                           intcon	equ	0xFF2
 16145                           intcon2	equ	0xFF1
 16146                           intcon3	equ	0xFF0
 16147                           indf0	equ	0xFEF
 16148                           postinc0	equ	0xFEE
 16149                           fsr0h	equ	0xFEA
 16150                           fsr0l	equ	0xFE9
 16151                           wreg	equ	0xFE8
 16152                           indf1	equ	0xFE7
 16153                           postdec1	equ	0xFE5
 16154                           plusw1	equ	0xFE3
 16155                           fsr1h	equ	0xFE2
 16156                           fsr1l	equ	0xFE1
 16157                           indf2	equ	0xFDF
 16158                           postinc2	equ	0xFDE
 16159                           postdec2	equ	0xFDD
 16160                           plusw2	equ	0xFDB
 16161                           fsr2h	equ	0xFDA
 16162                           fsr2l	equ	0xFD9
 16163                           status	equ	0xFD8
 16164                           
 16165 ;; *************** function _USBCtrlTrfRxService *****************
 16166 ;; Defined at:
 16167 ;;		line 1854 in file "usb_device.c"
 16168 ;; Parameters:    Size  Location     Type
 16169 ;;		None
 16170 ;; Auto vars:     Size  Location     Type
 16171 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16172 ;;  i               1    0[COMRAM] unsigned char 
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  1    wreg      void 
 16175 ;; Registers used:
 16176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/0
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16186 ;;Total ram usage:        2 bytes
 16187 ;; Hardware stack levels used:    1
 16188 ;; Hardware stack levels required when called:    1
 16189 ;; This function calls:
 16190 ;;		_USBCtrlEPAllowStatusStage
 16191 ;; This function is called by:
 16192 ;;		_USBCtrlTrfOutHandler
 16193 ;; This function uses a non-reentrant model
 16194 ;;
 16195                           
 16196                           	psect	text78
 16197  00457A                     __ptext78:
 16198                           	opt stack 0
 16199  00457A                     _USBCtrlTrfRxService:
 16200                           	opt stack 26
 16201                           
 16202                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16203                           
 16204                           ;incstack = 0
 16205  00457A  0100               	movlb	0	; () banked
 16206  00457C  EE20 F001          	lfsr	2,1
 16207  004580  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16208  004582  26D9               	addwf	fsr2l,f,c
 16209  004584  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16210  004586  22DA               	addwfc	fsr2h,f,c
 16211  004588  50DF               	movf	indf2,w,c
 16212  00458A  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 16213                           
 16214                           ; BSR set to: 0
 16215                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 16216  00458C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16217  00458E  0101               	movlb	1	; () banked
 16218  004590  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 16219  004592  0E00               	movlw	0
 16220  004594  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 16221  004596  A0D8               	btfss	status,0,c
 16222                           
 16223                           ; BSR set to: 1
 16224                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 16225  004598  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 16226                           
 16227                           ; BSR set to: 1
 16228                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 16229                           
 16230                           ; BSR set to: 1
 16231  00459C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16232  00459E  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 16233  0045A0  0E00               	movlw	0
 16234  0045A2  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 16235                           
 16236                           ; BSR set to: 1
 16237                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 16238  0045A4  0E00               	movlw	0
 16239  0045A6  6E01               	movwf	USBCtrlTrfRxService@i,c
 16240  0045A8  D011               	goto	l248
 16241  0045AA                     
 16242                           ; BSR set to: 1
 16243                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16244                           
 16245                           ; BSR set to: 1
 16246  0045AA  5001               	movf	USBCtrlTrfRxService@i,w,c
 16247  0045AC  0D01               	mullw	1
 16248  0045AE  0E38               	movlw	56
 16249  0045B0  24F3               	addwf	prodl,w,c
 16250  0045B2  6ED9               	movwf	fsr2l,c
 16251  0045B4  0E0D               	movlw	13
 16252  0045B6  20F4               	addwfc	prodh,w,c
 16253  0045B8  6EDA               	movwf	fsr2h,c
 16254  0045BA  C131  FFE1         	movff	_outPipes,fsr1l
 16255  0045BE  C132  FFE2         	movff	_outPipes+1,fsr1h
 16256  0045C2  CFDF FFE7          	movff	indf2,indf1
 16257                           
 16258                           ; BSR set to: 1
 16259  0045C6  4B31               	infsnz	_outPipes& (0+255),f,b
 16260  0045C8  2B32               	incf	(_outPipes+1)& (0+255),f,b
 16261                           
 16262                           ; BSR set to: 1
 16263  0045CA  2A01               	incf	USBCtrlTrfRxService@i,f,c
 16264  0045CC                     l248:
 16265                           
 16266                           ; BSR set to: 1
 16267                           
 16268                           ; BSR set to: 1
 16269  0045CC  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16270  0045CE  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 16271  0045D0  A0D8               	btfss	status,0,c
 16272  0045D2  D7EB               	goto	l249
 16273                           
 16274                           ; BSR set to: 1
 16275                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 16276                           
 16277                           ; BSR set to: 1
 16278  0045D4  5135               	movf	(_outPipes+4)& (0+255),w,b
 16279  0045D6  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 16280  0045D8  B4D8               	btfsc	status,2,c
 16281  0045DA  D033               	goto	l251
 16282                           
 16283                           ; BSR set to: 1
 16284                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 16285  0045DC  0100               	movlb	0	; () banked
 16286  0045DE  EE20 F001          	lfsr	2,1
 16287  0045E2  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16288  0045E4  26D9               	addwf	fsr2l,f,c
 16289  0045E6  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16290  0045E8  22DA               	addwfc	fsr2h,f,c
 16291  0045EA  0E08               	movlw	8
 16292  0045EC  6EDF               	movwf	indf2,c
 16293                           
 16294                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16295  0045EE  EE20 F002          	lfsr	2,2
 16296  0045F2  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16297  0045F4  26D9               	addwf	fsr2l,f,c
 16298  0045F6  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16299  0045F8  22DA               	addwfc	fsr2h,f,c
 16300  0045FA  0E38               	movlw	56
 16301  0045FC  6EDE               	movwf	postinc2,c
 16302  0045FE  0E0D               	movlw	13
 16303  004600  6EDD               	movwf	postdec2,c
 16304                           
 16305                           ; BSR set to: 0
 16306                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16307  004602  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16308  004606  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16309  00460A  BCDF               	btfsc	indf2,6,c
 16310  00460C  D00D               	goto	l252
 16311                           
 16312                           ; BSR set to: 0
 16313                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 16314  00460E  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16315  004612  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16316  004616  0E48               	movlw	72
 16317  004618  6EDF               	movwf	indf2,c
 16318                           
 16319                           ; BSR set to: 0
 16320                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16321  00461A  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16322  00461E  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16323  004622  0E00               	movlw	0
 16324  004624  8EDB               	bsf	plusw2,7,c
 16325                           
 16326                           ;usb_device.c: 1891: }
 16327  004626  0012               	return	
 16328  004628                     l252:
 16329                           
 16330                           ; BSR set to: 0
 16331                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 16332                           
 16333                           ; BSR set to: 0
 16334  004628  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16335  00462C  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16336  004630  0E08               	movlw	8
 16337  004632  6EDF               	movwf	indf2,c
 16338                           
 16339                           ; BSR set to: 0
 16340                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16341  004634  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16342  004638  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16343  00463C  0E00               	movlw	0
 16344  00463E  8EDB               	bsf	plusw2,7,c
 16345                           
 16346                           ; BSR set to: 0
 16347                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 16348  004640  0012               	return	
 16349  004642                     l251:
 16350                           
 16351                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 16352                           
 16353                           ; BSR set to: 0
 16354  004642  0100               	movlb	0	; () banked
 16355  004644  EE20 F001          	lfsr	2,1
 16356  004648  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16357  00464A  26D9               	addwf	fsr2l,f,c
 16358  00464C  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16359  00464E  22DA               	addwfc	fsr2h,f,c
 16360  004650  0E08               	movlw	8
 16361  004652  6EDF               	movwf	indf2,c
 16362                           
 16363                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16364  004654  EE20 F002          	lfsr	2,2
 16365  004658  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16366  00465A  26D9               	addwf	fsr2l,f,c
 16367  00465C  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16368  00465E  22DA               	addwfc	fsr2h,f,c
 16369  004660  0E30               	movlw	48
 16370  004662  6EDE               	movwf	postinc2,c
 16371  004664  0E0D               	movlw	13
 16372  004666  6EDD               	movwf	postdec2,c
 16373                           
 16374                           ; BSR set to: 0
 16375                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16376  004668  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16377  00466C  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16378  004670  0E04               	movlw	4
 16379  004672  6EDF               	movwf	indf2,c
 16380                           
 16381                           ; BSR set to: 0
 16382                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16383  004674  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16384  004678  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16385  00467C  0E00               	movlw	0
 16386  00467E  8EDB               	bsf	plusw2,7,c
 16387                           
 16388                           ; BSR set to: 0
 16389                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 16390                           
 16391                           ; BSR set to: 0
 16392  004680  0101               	movlb	1	; () banked
 16393  004682  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 16394                           
 16395                           ; BSR set to: 1
 16396                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 16397  004684  0100               	movlb	0	; () banked
 16398  004686  51EE               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 16399  004688  A4D8               	btfss	status,2,c
 16400  00468A  0012               	return	
 16401                           
 16402                           ; BSR set to: 0
 16403                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 16404  00468C  ECED  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16405  004690  0012               	return	
 16406  004692                     __end_of_USBCtrlTrfRxService:
 16407                           	opt stack 0
 16408                           tosu	equ	0xFFF
 16409                           tosh	equ	0xFFE
 16410                           tosl	equ	0xFFD
 16411                           pclath	equ	0xFFA
 16412                           tblptru	equ	0xFF8
 16413                           tblptrh	equ	0xFF7
 16414                           tblptrl	equ	0xFF6
 16415                           tablat	equ	0xFF5
 16416                           prodh	equ	0xFF4
 16417                           prodl	equ	0xFF3
 16418                           intcon	equ	0xFF2
 16419                           intcon2	equ	0xFF1
 16420                           intcon3	equ	0xFF0
 16421                           indf0	equ	0xFEF
 16422                           postinc0	equ	0xFEE
 16423                           fsr0h	equ	0xFEA
 16424                           fsr0l	equ	0xFE9
 16425                           wreg	equ	0xFE8
 16426                           indf1	equ	0xFE7
 16427                           postdec1	equ	0xFE5
 16428                           plusw1	equ	0xFE3
 16429                           fsr1h	equ	0xFE2
 16430                           fsr1l	equ	0xFE1
 16431                           indf2	equ	0xFDF
 16432                           postinc2	equ	0xFDE
 16433                           postdec2	equ	0xFDD
 16434                           plusw2	equ	0xFDB
 16435                           fsr2h	equ	0xFDA
 16436                           fsr2l	equ	0xFD9
 16437                           status	equ	0xFD8
 16438                           
 16439 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16440 ;; Defined at:
 16441 ;;		line 1418 in file "usb_device.c"
 16442 ;; Parameters:    Size  Location     Type
 16443 ;;		None
 16444 ;; Auto vars:     Size  Location     Type
 16445 ;;		None
 16446 ;; Return value:  Size  Location     Type
 16447 ;;                  1    wreg      void 
 16448 ;; Registers used:
 16449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16450 ;; Tracked objects:
 16451 ;;		On entry : 0/0
 16452 ;;		On exit  : 0/0
 16453 ;;		Unchanged: 0/0
 16454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16459 ;;Total ram usage:        0 bytes
 16460 ;; Hardware stack levels used:    1
 16461 ;; This function calls:
 16462 ;;		Nothing
 16463 ;; This function is called by:
 16464 ;;		_USBDeviceTasks
 16465 ;;		_USBCtrlEPServiceComplete
 16466 ;;		_USBCtrlTrfRxService
 16467 ;; This function uses a non-reentrant model
 16468 ;;
 16469                           
 16470                           	psect	text79
 16471  005BDA                     __ptext79:
 16472                           	opt stack 0
 16473  005BDA                     _USBCtrlEPAllowStatusStage:
 16474                           	opt stack 26
 16475                           
 16476                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 16477                           
 16478                           ;incstack = 0
 16479  005BDA  0100               	movlb	0	; () banked
 16480  005BDC  51ED               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 16481  005BDE  A4D8               	btfss	status,2,c
 16482  005BE0  0012               	return	
 16483                           
 16484                           ; BSR set to: 0
 16485                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 16486  005BE2  0E01               	movlw	1
 16487  005BE4  6FED               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16488                           
 16489                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 16490  005BE6  51EC               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 16491  005BE8  A4D8               	btfss	status,2,c
 16492  005BEA  0012               	return	
 16493                           
 16494                           ; BSR set to: 0
 16495                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 16496  005BEC  0E01               	movlw	1
 16497  005BEE  6FEC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16498                           
 16499                           ; BSR set to: 0
 16500                           ;usb_device.c: 1434: if(controlTransferState == 2)
 16501  005BF0  0E02               	movlw	2
 16502  005BF2  19F4               	xorwf	_controlTransferState& (0+255),w,b
 16503  005BF4  A4D8               	btfss	status,2,c
 16504  005BF6  D015               	goto	l202
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 16508  005BF8  EE20 F001          	lfsr	2,1
 16509  005BFC  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 16510  005BFE  26D9               	addwf	fsr2l,f,c
 16511  005C00  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16512  005C02  22DA               	addwfc	fsr2h,f,c
 16513  005C04  0E00               	movlw	0
 16514  005C06  6EDF               	movwf	indf2,c
 16515                           
 16516                           ; BSR set to: 0
 16517                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16518  005C08  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16519  005C0C  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16520  005C10  0E48               	movlw	72
 16521  005C12  6EDF               	movwf	indf2,c
 16522                           
 16523                           ; BSR set to: 0
 16524                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16525  005C14  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16526  005C18  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16527  005C1C  0E00               	movlw	0
 16528  005C1E  8EDB               	bsf	plusw2,7,c
 16529                           
 16530                           ;usb_device.c: 1439: }
 16531  005C20  0012               	return	
 16532  005C22                     l202:
 16533                           
 16534                           ; BSR set to: 0
 16535                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 16536                           
 16537                           ; BSR set to: 0
 16538  005C22  05F4               	decf	_controlTransferState& (0+255),w,b
 16539  005C24  A4D8               	btfss	status,2,c
 16540  005C26  0012               	return	
 16541                           
 16542                           ; BSR set to: 0
 16543                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 16544  005C28  0E00               	movlw	0
 16545  005C2A  6FF0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16546                           
 16547                           ; BSR set to: 0
 16548                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 16549  005C2C  EE20 F001          	lfsr	2,1
 16550  005C30  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16551  005C32  26D9               	addwf	fsr2l,f,c
 16552  005C34  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16553  005C36  22DA               	addwfc	fsr2h,f,c
 16554  005C38  0E08               	movlw	8
 16555  005C3A  6EDF               	movwf	indf2,c
 16556                           
 16557                           ; BSR set to: 0
 16558                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16559  005C3C  EE20 F002          	lfsr	2,2
 16560  005C40  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16561  005C42  26D9               	addwf	fsr2l,f,c
 16562  005C44  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16563  005C46  22DA               	addwfc	fsr2h,f,c
 16564  005C48  0E30               	movlw	48
 16565  005C4A  6EDE               	movwf	postinc2,c
 16566  005C4C  0E0D               	movlw	13
 16567  005C4E  6EDD               	movwf	postdec2,c
 16568                           
 16569                           ; BSR set to: 0
 16570                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 16571  005C50  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16572  005C54  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16573  005C58  0E04               	movlw	4
 16574  005C5A  6EDF               	movwf	indf2,c
 16575                           
 16576                           ; BSR set to: 0
 16577                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16578  005C5C  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16579  005C60  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16580  005C64  0E00               	movlw	0
 16581  005C66  8EDB               	bsf	plusw2,7,c
 16582                           
 16583                           ; BSR set to: 0
 16584                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 16585  005C68  0E01               	movlw	1
 16586  005C6A  6FF0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 16590  005C6C  EE20 F001          	lfsr	2,1
 16591  005C70  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16592  005C72  26D9               	addwf	fsr2l,f,c
 16593  005C74  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16594  005C76  22DA               	addwfc	fsr2h,f,c
 16595  005C78  0E08               	movlw	8
 16596  005C7A  6EDF               	movwf	indf2,c
 16597                           
 16598                           ; BSR set to: 0
 16599                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16600  005C7C  EE20 F002          	lfsr	2,2
 16601  005C80  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16602  005C82  26D9               	addwf	fsr2l,f,c
 16603  005C84  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16604  005C86  22DA               	addwfc	fsr2h,f,c
 16605  005C88  0E30               	movlw	48
 16606  005C8A  6EDE               	movwf	postinc2,c
 16607  005C8C  0E0D               	movlw	13
 16608  005C8E  6EDD               	movwf	postdec2,c
 16609                           
 16610                           ; BSR set to: 0
 16611                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 16612  005C90  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16613  005C94  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16614  005C98  0E80               	movlw	128
 16615  005C9A  6EDF               	movwf	indf2,c
 16616                           
 16617                           ; BSR set to: 0
 16618                           
 16619                           ; BSR set to: 0
 16620                           
 16621                           ; BSR set to: 0
 16622  005C9C  0012               	return	
 16623  005C9E                     __end_of_USBCtrlEPAllowStatusStage:
 16624                           	opt stack 0
 16625                           tosu	equ	0xFFF
 16626                           tosh	equ	0xFFE
 16627                           tosl	equ	0xFFD
 16628                           pclath	equ	0xFFA
 16629                           tblptru	equ	0xFF8
 16630                           tblptrh	equ	0xFF7
 16631                           tblptrl	equ	0xFF6
 16632                           tablat	equ	0xFF5
 16633                           prodh	equ	0xFF4
 16634                           prodl	equ	0xFF3
 16635                           intcon	equ	0xFF2
 16636                           intcon2	equ	0xFF1
 16637                           intcon3	equ	0xFF0
 16638                           indf0	equ	0xFEF
 16639                           postinc0	equ	0xFEE
 16640                           fsr0h	equ	0xFEA
 16641                           fsr0l	equ	0xFE9
 16642                           wreg	equ	0xFE8
 16643                           indf1	equ	0xFE7
 16644                           postdec1	equ	0xFE5
 16645                           plusw1	equ	0xFE3
 16646                           fsr1h	equ	0xFE2
 16647                           fsr1l	equ	0xFE1
 16648                           indf2	equ	0xFDF
 16649                           postinc2	equ	0xFDE
 16650                           postdec2	equ	0xFDD
 16651                           plusw2	equ	0xFDB
 16652                           fsr2h	equ	0xFDA
 16653                           fsr2l	equ	0xFD9
 16654                           status	equ	0xFD8
 16655                           
 16656 ;; *************** function _USBCtrlTrfInHandler *****************
 16657 ;; Defined at:
 16658 ;;		line 2594 in file "usb_device.c"
 16659 ;; Parameters:    Size  Location     Type
 16660 ;;		None
 16661 ;; Auto vars:     Size  Location     Type
 16662 ;;  lastDTS         1    1[COMRAM] unsigned char 
 16663 ;; Return value:  Size  Location     Type
 16664 ;;                  1    wreg      void 
 16665 ;; Registers used:
 16666 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16667 ;; Tracked objects:
 16668 ;;		On entry : 0/0
 16669 ;;		On exit  : 0/0
 16670 ;;		Unchanged: 0/0
 16671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16676 ;;Total ram usage:        1 bytes
 16677 ;; Hardware stack levels used:    1
 16678 ;; Hardware stack levels required when called:    1
 16679 ;; This function calls:
 16680 ;;		_USBCtrlTrfTxService
 16681 ;; This function is called by:
 16682 ;;		_USBCtrlEPService
 16683 ;; This function uses a non-reentrant model
 16684 ;;
 16685                           
 16686                           	psect	text80
 16687  005B12                     __ptext80:
 16688                           	opt stack 0
 16689  005B12                     _USBCtrlTrfInHandler:
 16690                           	opt stack 27
 16691                           
 16692                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 16693                           
 16694                           ; BSR set to: 0
 16695                           ;incstack = 0
 16696  005B12  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16697  005B16  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16698  005B1A  0100               	movlb	0	; () banked
 16699  005B1C  0E00               	movlw	0
 16700  005B1E  BCDF               	btfsc	indf2,6,c
 16701  005B20  0E01               	movlw	1
 16702  005B22  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 16703                           
 16704                           ; BSR set to: 0
 16705                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 16706  005B24  0E04               	movlw	4
 16707  005B26  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 16708  005B28  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 16709  005B2A  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16710  005B2C  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16711                           
 16712                           ; BSR set to: 0
 16713                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 16714  005B2E  0E08               	movlw	8
 16715  005B30  19F6               	xorwf	_USBDeviceState& (0+255),w,b
 16716  005B32  A4D8               	btfss	status,2,c
 16717  005B34  D00D               	goto	l329
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 16721  005B36  010D               	movlb	13	; () banked
 16722  005B38  5132               	movf	50,w,b	;volatile
 16723  005B3A  0B7F               	andlw	127
 16724  005B3C  010F               	movlb	15	; () banked
 16725  005B3E  6F38               	movwf	56,b	;volatile
 16726                           
 16727                           ; BSR set to: 15
 16728                           ;usb_device.c: 2609: if(UADDR != 0u)
 16729  005B40  5138               	movf	56,w,b	;volatile
 16730  005B42  B4D8               	btfsc	status,2,c
 16731  005B44  D002               	goto	l328
 16732                           
 16733                           ; BSR set to: 15
 16734                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 16735  005B46  0E10               	movlw	16
 16736  005B48  D001               	goto	L15
 16737  005B4A                     l328:
 16738                           
 16739                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 16740                           
 16741                           ; BSR set to: 0
 16742  005B4A  0E04               	movlw	4
 16743  005B4C                     L15:
 16744  005B4C  0100               	movlb	0	; () banked
 16745  005B4E  6FF6               	movwf	_USBDeviceState& (0+255),b
 16746  005B50                     l329:
 16747                           
 16748                           ; BSR set to: 0
 16749                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 16750                           
 16751                           ; BSR set to: 0
 16752                           
 16753                           ; BSR set to: 0
 16754  005B50  05F4               	decf	_controlTransferState& (0+255),w,b
 16755  005B52  A4D8               	btfss	status,2,c
 16756  005B54  D03B               	goto	l330
 16757                           
 16758                           ; BSR set to: 0
 16759                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 16760  005B56  EE20 F002          	lfsr	2,2
 16761  005B5A  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 16762  005B5C  26D9               	addwf	fsr2l,f,c
 16763  005B5E  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16764  005B60  22DA               	addwfc	fsr2h,f,c
 16765  005B62  0E38               	movlw	56
 16766  005B64  6EDE               	movwf	postinc2,c
 16767  005B66  0E0D               	movlw	13
 16768  005B68  6EDD               	movwf	postdec2,c
 16769                           
 16770                           ; BSR set to: 0
 16771                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 16772  005B6A  ECE5  F02B         	call	_USBCtrlTrfTxService	;wreg free
 16773                           
 16774                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 16775  005B6E  0E02               	movlw	2
 16776  005B70  0100               	movlb	0	; () banked
 16777  005B72  19F5               	xorwf	_shortPacketStatus& (0+255),w,b
 16778  005B74  A4D8               	btfss	status,2,c
 16779  005B76  D00D               	goto	l331
 16780                           
 16781                           ; BSR set to: 0
 16782                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 16783  005B78  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16784  005B7C  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16785  005B80  0E04               	movlw	4
 16786  005B82  6EDF               	movwf	indf2,c
 16787                           
 16788                           ; BSR set to: 0
 16789                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16790  005B84  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16791  005B88  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16792  005B8C  0E00               	movlw	0
 16793  005B8E  8EDB               	bsf	plusw2,7,c
 16794                           
 16795                           ;usb_device.c: 2635: }
 16796  005B90  0012               	return	
 16797  005B92                     l331:
 16798                           
 16799                           ; BSR set to: 0
 16800                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 16801                           
 16802                           ; BSR set to: 0
 16803  005B92  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 16804  005B94  A4D8               	btfss	status,2,c
 16805  005B96  D00D               	goto	l333
 16806                           
 16807                           ; BSR set to: 0
 16808                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 16809  005B98  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16810  005B9C  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16811  005BA0  0E48               	movlw	72
 16812  005BA2  6EDF               	movwf	indf2,c
 16813                           
 16814                           ; BSR set to: 0
 16815                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16816  005BA4  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16817  005BA8  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16818  005BAC  0E00               	movlw	0
 16819  005BAE  8EDB               	bsf	plusw2,7,c
 16820                           
 16821                           ;usb_device.c: 2642: }
 16822  005BB0  0012               	return	
 16823  005BB2                     l333:
 16824                           
 16825                           ; BSR set to: 0
 16826                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 16827                           
 16828                           ; BSR set to: 0
 16829  005BB2  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16830  005BB6  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16831  005BBA  0E08               	movlw	8
 16832  005BBC  6EDF               	movwf	indf2,c
 16833                           
 16834                           ; BSR set to: 0
 16835                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16836  005BBE  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16837  005BC2  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16838  005BC6  0E00               	movlw	0
 16839  005BC8  8EDB               	bsf	plusw2,7,c
 16840                           
 16841                           ; BSR set to: 0
 16842                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 16843                           
 16844                           ; BSR set to: 0
 16845  005BCA  0012               	return	
 16846  005BCC                     l330:
 16847                           
 16848                           ; BSR set to: 0
 16849                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 16850  005BCC  0101               	movlb	1	; () banked
 16851  005BCE  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 16852                           
 16853                           ; BSR set to: 1
 16854                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 16855                           
 16856                           ; BSR set to: 1
 16857  005BD0  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 16858                           
 16859                           ; BSR set to: 1
 16860                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 16861                           
 16862                           ; BSR set to: 1
 16863  005BD2  0E00               	movlw	0
 16864  005BD4  0100               	movlb	0	; () banked
 16865  005BD6  6FF4               	movwf	_controlTransferState& (0+255),b
 16866  005BD8  0012               	return	
 16867  005BDA                     __end_of_USBCtrlTrfInHandler:
 16868                           	opt stack 0
 16869                           tosu	equ	0xFFF
 16870                           tosh	equ	0xFFE
 16871                           tosl	equ	0xFFD
 16872                           pclath	equ	0xFFA
 16873                           tblptru	equ	0xFF8
 16874                           tblptrh	equ	0xFF7
 16875                           tblptrl	equ	0xFF6
 16876                           tablat	equ	0xFF5
 16877                           prodh	equ	0xFF4
 16878                           prodl	equ	0xFF3
 16879                           intcon	equ	0xFF2
 16880                           intcon2	equ	0xFF1
 16881                           intcon3	equ	0xFF0
 16882                           indf0	equ	0xFEF
 16883                           postinc0	equ	0xFEE
 16884                           fsr0h	equ	0xFEA
 16885                           fsr0l	equ	0xFE9
 16886                           wreg	equ	0xFE8
 16887                           indf1	equ	0xFE7
 16888                           postdec1	equ	0xFE5
 16889                           plusw1	equ	0xFE3
 16890                           fsr1h	equ	0xFE2
 16891                           fsr1l	equ	0xFE1
 16892                           indf2	equ	0xFDF
 16893                           postinc2	equ	0xFDE
 16894                           postdec2	equ	0xFDD
 16895                           plusw2	equ	0xFDB
 16896                           fsr2h	equ	0xFDA
 16897                           fsr2l	equ	0xFD9
 16898                           status	equ	0xFD8
 16899                           
 16900 ;; *************** function _USBCtrlTrfTxService *****************
 16901 ;; Defined at:
 16902 ;;		line 1773 in file "usb_device.c"
 16903 ;; Parameters:    Size  Location     Type
 16904 ;;		None
 16905 ;; Auto vars:     Size  Location     Type
 16906 ;;  byteToSend      1    0[COMRAM] unsigned char 
 16907 ;; Return value:  Size  Location     Type
 16908 ;;                  1    wreg      void 
 16909 ;; Registers used:
 16910 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16911 ;; Tracked objects:
 16912 ;;		On entry : 0/0
 16913 ;;		On exit  : 0/0
 16914 ;;		Unchanged: 0/0
 16915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16919 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16920 ;;Total ram usage:        1 bytes
 16921 ;; Hardware stack levels used:    1
 16922 ;; This function calls:
 16923 ;;		Nothing
 16924 ;; This function is called by:
 16925 ;;		_USBCtrlEPAllowDataStage
 16926 ;;		_USBCtrlTrfInHandler
 16927 ;; This function uses a non-reentrant model
 16928 ;;
 16929                           
 16930                           	psect	text81
 16931  0057CA                     __ptext81:
 16932                           	opt stack 0
 16933  0057CA                     _USBCtrlTrfTxService:
 16934                           	opt stack 25
 16935                           
 16936                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 16937                           
 16938                           ; BSR set to: 0
 16939                           ;incstack = 0
 16940  0057CA  0E08               	movlw	8
 16941  0057CC  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 16942                           
 16943                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 16944  0057CE  0100               	movlb	0	; () banked
 16945  0057D0  51C4               	movf	(_inPipes+5)& (0+255),w,b
 16946  0057D2  E110               	bnz	l10938
 16947  0057D4  0E08               	movlw	8
 16948  0057D6  5DC3               	subwf	(_inPipes+4)& (0+255),w,b
 16949  0057D8  B0D8               	btfsc	status,0,c
 16950  0057DA  D00C               	goto	l235
 16951                           
 16952                           ; BSR set to: 0
 16953                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 16954  0057DC  C0C3  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 16955                           
 16956                           ; BSR set to: 0
 16957                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 16958  0057E0  51F5               	movf	_shortPacketStatus& (0+255),w,b
 16959  0057E2  A4D8               	btfss	status,2,c
 16960  0057E4  D002               	goto	l233
 16961                           
 16962                           ; BSR set to: 0
 16963                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 16964  0057E6  0E01               	movlw	1
 16965  0057E8  D004               	goto	L16
 16966  0057EA                     l233:
 16967                           
 16968                           ; BSR set to: 0
 16969                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 16970                           
 16971                           ; BSR set to: 0
 16972  0057EA  05F5               	decf	_shortPacketStatus& (0+255),w,b
 16973  0057EC  A4D8               	btfss	status,2,c
 16974  0057EE  D002               	goto	l235
 16975                           
 16976                           ; BSR set to: 0
 16977                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 16978  0057F0  0E02               	movlw	2
 16979  0057F2                     L16:
 16980  0057F2  6FF5               	movwf	_shortPacketStatus& (0+255),b
 16981  0057F4                     l235:
 16982  0057F4                     l10938:
 16983                           
 16984                           ; BSR set to: 0
 16985                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 16986  0057F4  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 16987  0057F6  5FC3               	subwf	(_inPipes+4)& (0+255),f,b
 16988  0057F8  0E00               	movlw	0
 16989  0057FA  5BC4               	subwfb	(_inPipes+5)& (0+255),f,b
 16990                           
 16991                           ; BSR set to: 0
 16992                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 16993  0057FC  EE20 F001          	lfsr	2,1
 16994  005800  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 16995  005802  26D9               	addwf	fsr2l,f,c
 16996  005804  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16997  005806  22DA               	addwfc	fsr2h,f,c
 16998  005808  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 16999                           
 17000                           ; BSR set to: 0
 17001                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 17002  00580C  0E38               	movlw	56
 17003  00580E  0101               	movlb	1	; () banked
 17004  005810  6F84               	movwf	_pDst& (0+255),b
 17005  005812  0E0D               	movlw	13
 17006  005814  6F85               	movwf	(_pDst+1)& (0+255),b
 17007                           
 17008                           ; BSR set to: 1
 17009                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17010  005816  0100               	movlb	0	; () banked
 17011  005818  A1C2               	btfss	(_inPipes+3)& (0+255),0,b
 17012  00581A  D01D               	goto	l237
 17013  00581C  D03C               	goto	l241
 17014  00581E                     
 17015                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 17016                           
 17017                           ; BSR set to: 0
 17018  00581E  C0BF  FFF6         	movff	_inPipes,tblptrl
 17019  005822  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 17020  005826  6AF8               	clrf	tblptru,c
 17021  005828  C184  FFD9         	movff	_pDst,fsr2l
 17022  00582C  C185  FFDA         	movff	_pDst+1,fsr2h
 17023  005830  0E0E               	movlw	(high __ramtop+-1)
 17024  005832  64F7               	cpfsgt	tblptrh,c
 17025  005834  D003               	bra	u7767
 17026  005836  0008               	tblrd		*
 17027  005838  50F5               	movf	tablat,w,c
 17028  00583A  D005               	bra	u7760
 17029  00583C                     u7767:
 17030  00583C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17031  005840  CFF7 FFEA          	movff	tblptrh,fsr0h
 17032  005844  50EF               	movf	indf0,w,c
 17033  005846                     u7760:
 17034  005846  6EDF               	movwf	indf2,c
 17035  005848  0100               	movlb	0	; () banked
 17036  00584A  4BBF               	infsnz	_inPipes& (0+255),f,b
 17037  00584C  2BC0               	incf	(_inPipes+1)& (0+255),f,b
 17038                           
 17039                           ; BSR set to: 0
 17040  00584E  0101               	movlb	1	; () banked
 17041  005850  4B84               	infsnz	_pDst& (0+255),f,b
 17042  005852  2B85               	incf	(_pDst+1)& (0+255),f,b
 17043                           
 17044                           ; BSR set to: 1
 17045                           ;usb_device.c: 1816: byteToSend--;
 17046  005854  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17047  005856                     l237:
 17048                           
 17049                           ; BSR set to: 1
 17050  005856  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17051  005858  B4D8               	btfsc	status,2,c
 17052  00585A  0012               	return	
 17053  00585C  D7E0               	goto	l238
 17054  00585E                     
 17055                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 17056  00585E  C0BF  FFF6         	movff	_inPipes,tblptrl
 17057  005862  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 17058  005866  6AF8               	clrf	tblptru,c
 17059  005868  C184  FFD9         	movff	_pDst,fsr2l
 17060  00586C  C185  FFDA         	movff	_pDst+1,fsr2h
 17061  005870  0E0E               	movlw	(high __ramtop+-1)
 17062  005872  64F7               	cpfsgt	tblptrh,c
 17063  005874  D003               	bra	u7787
 17064  005876  0008               	tblrd		*
 17065  005878  50F5               	movf	tablat,w,c
 17066  00587A  D005               	bra	u7780
 17067  00587C                     u7787:
 17068  00587C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17069  005880  CFF7 FFEA          	movff	tblptrh,fsr0h
 17070  005884  50EF               	movf	indf0,w,c
 17071  005886                     u7780:
 17072  005886  6EDF               	movwf	indf2,c
 17073  005888  0100               	movlb	0	; () banked
 17074  00588A  4BBF               	infsnz	_inPipes& (0+255),f,b
 17075  00588C  2BC0               	incf	(_inPipes+1)& (0+255),f,b
 17076                           
 17077                           ; BSR set to: 0
 17078  00588E  0101               	movlb	1	; () banked
 17079  005890  4B84               	infsnz	_pDst& (0+255),f,b
 17080  005892  2B85               	incf	(_pDst+1)& (0+255),f,b
 17081                           
 17082                           ; BSR set to: 1
 17083                           ;usb_device.c: 1824: byteToSend--;
 17084  005894  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17085  005896                     l241:
 17086                           
 17087                           ; BSR set to: 1
 17088  005896  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17089  005898  B4D8               	btfsc	status,2,c
 17090  00589A  0012               	return	
 17091  00589C  D7E0               	goto	l242
 17092  00589E                     __end_of_USBCtrlTrfTxService:
 17093                           	opt stack 0
 17094                           tosu	equ	0xFFF
 17095                           tosh	equ	0xFFE
 17096                           tosl	equ	0xFFD
 17097                           pclath	equ	0xFFA
 17098                           tblptru	equ	0xFF8
 17099                           tblptrh	equ	0xFF7
 17100                           tblptrl	equ	0xFF6
 17101                           tablat	equ	0xFF5
 17102                           prodh	equ	0xFF4
 17103                           prodl	equ	0xFF3
 17104                           intcon	equ	0xFF2
 17105                           intcon2	equ	0xFF1
 17106                           intcon3	equ	0xFF0
 17107                           indf0	equ	0xFEF
 17108                           postinc0	equ	0xFEE
 17109                           fsr0h	equ	0xFEA
 17110                           fsr0l	equ	0xFE9
 17111                           wreg	equ	0xFE8
 17112                           indf1	equ	0xFE7
 17113                           postdec1	equ	0xFE5
 17114                           plusw1	equ	0xFE3
 17115                           fsr1h	equ	0xFE2
 17116                           fsr1l	equ	0xFE1
 17117                           indf2	equ	0xFDF
 17118                           postinc2	equ	0xFDE
 17119                           postdec2	equ	0xFDD
 17120                           plusw2	equ	0xFDB
 17121                           fsr2h	equ	0xFDA
 17122                           fsr2l	equ	0xFD9
 17123                           status	equ	0xFD8
 17124                           
 17125 ;; *************** function _APP_DeviceMSDTasks *****************
 17126 ;; Defined at:
 17127 ;;		line 110 in file "app_device_msd.c"
 17128 ;; Parameters:    Size  Location     Type
 17129 ;;		None
 17130 ;; Auto vars:     Size  Location     Type
 17131 ;;		None
 17132 ;; Return value:  Size  Location     Type
 17133 ;;                  1    wreg      void 
 17134 ;; Registers used:
 17135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17136 ;; Tracked objects:
 17137 ;;		On entry : 0/0
 17138 ;;		On exit  : 0/0
 17139 ;;		Unchanged: 0/0
 17140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17145 ;;Total ram usage:        0 bytes
 17146 ;; Hardware stack levels used:    1
 17147 ;; Hardware stack levels required when called:   11
 17148 ;; This function calls:
 17149 ;;		_MSDTasks
 17150 ;; This function is called by:
 17151 ;;		_main
 17152 ;; This function uses a non-reentrant model
 17153 ;;
 17154                           
 17155                           	psect	text82
 17156  008844                     __ptext82:
 17157                           	opt stack 0
 17158  008844                     _APP_DeviceMSDTasks:
 17159                           	opt stack 19
 17160                           
 17161                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 17162                           
 17163                           ;incstack = 0
 17164  008844  0E20               	movlw	32
 17165  008846  0100               	movlb	0	; () banked
 17166  008848  61F6               	cpfslt	_USBDeviceState& (0+255),b
 17167  00884A  D001               	goto	l1008
 17168  00884C  0012               	return	
 17169  00884E                     l1008:
 17170                           
 17171                           ; BSR set to: 0
 17172                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 17173  00884E  B265               	btfsc	3941,1,c	;volatile
 17174  008850  0012               	return	
 17175                           
 17176                           ; BSR set to: 0
 17177                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 17178                           
 17179                           ; BSR set to: 0
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 17183  008852  ECC6  F00F         	call	_MSDTasks	;wreg free
 17184  008856  0012               	return		;funcret
 17185  008858                     __end_of_APP_DeviceMSDTasks:
 17186                           	opt stack 0
 17187                           tosu	equ	0xFFF
 17188                           tosh	equ	0xFFE
 17189                           tosl	equ	0xFFD
 17190                           pclath	equ	0xFFA
 17191                           tblptru	equ	0xFF8
 17192                           tblptrh	equ	0xFF7
 17193                           tblptrl	equ	0xFF6
 17194                           tablat	equ	0xFF5
 17195                           prodh	equ	0xFF4
 17196                           prodl	equ	0xFF3
 17197                           intcon	equ	0xFF2
 17198                           intcon2	equ	0xFF1
 17199                           intcon3	equ	0xFF0
 17200                           indf0	equ	0xFEF
 17201                           postinc0	equ	0xFEE
 17202                           fsr0h	equ	0xFEA
 17203                           fsr0l	equ	0xFE9
 17204                           wreg	equ	0xFE8
 17205                           indf1	equ	0xFE7
 17206                           postdec1	equ	0xFE5
 17207                           plusw1	equ	0xFE3
 17208                           fsr1h	equ	0xFE2
 17209                           fsr1l	equ	0xFE1
 17210                           indf2	equ	0xFDF
 17211                           postinc2	equ	0xFDE
 17212                           postdec2	equ	0xFDD
 17213                           plusw2	equ	0xFDB
 17214                           fsr2h	equ	0xFDA
 17215                           fsr2l	equ	0xFD9
 17216                           status	equ	0xFD8
 17217                           
 17218 ;; *************** function _MSDTasks *****************
 17219 ;; Defined at:
 17220 ;;		line 335 in file "usb_device_msd.c"
 17221 ;; Parameters:    Size  Location     Type
 17222 ;;		None
 17223 ;; Auto vars:     Size  Location     Type
 17224 ;;  i               1   81[COMRAM] unsigned char 
 17225 ;; Return value:  Size  Location     Type
 17226 ;;                  1    wreg      unsigned char 
 17227 ;; Registers used:
 17228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17229 ;; Tracked objects:
 17230 ;;		On entry : 0/0
 17231 ;;		On exit  : 0/0
 17232 ;;		Unchanged: 0/0
 17233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17235 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17238 ;;Total ram usage:        6 bytes
 17239 ;; Hardware stack levels used:    1
 17240 ;; Hardware stack levels required when called:   10
 17241 ;; This function calls:
 17242 ;;		_MSDProcessCommand
 17243 ;;		_USBStallEndpoint
 17244 ;;		_USBTransferOnePacket
 17245 ;; This function is called by:
 17246 ;;		_APP_DeviceMSDTasks
 17247 ;; This function uses a non-reentrant model
 17248 ;;
 17249                           
 17250                           	psect	text83
 17251  001F8C                     __ptext83:
 17252                           	opt stack 0
 17253  001F8C                     _MSDTasks:
 17254                           	opt stack 19
 17255                           
 17256                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 17257                           
 17258                           ;incstack = 0
 17259  001F8C  0E20               	movlw	32
 17260  001F8E  0100               	movlb	0	; () banked
 17261  001F90  19F6               	xorwf	_USBDeviceState& (0+255),w,b
 17262  001F92  A4D8               	btfss	status,2,c
 17263  001F94  0012               	return	
 17264  001F96  D117               	goto	l554
 17265  001F98                     
 17266                           ; BSR set to: 0
 17267                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 17268                           
 17269                           ; BSR set to: 0
 17270  001F98  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 17271  001F9A  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17272  001F9C  B4D8               	btfsc	status,2,c
 17273  001F9E  D006               	goto	u11370
 17274                           
 17275                           ; BSR set to: 0
 17276  001FA0  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17277  001FA4  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17278  001FA8  BEDF               	btfsc	indf2,7,c
 17279  001FAA  0012               	return	
 17280  001FAC                     u11370:
 17281                           
 17282                           ; BSR set to: 0
 17283                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 17284                           
 17285                           ; BSR set to: 0
 17286  001FAC  0E00               	movlw	0
 17287  001FAE  6E52               	movwf	MSDTasks@i,c
 17288  001FB0                     l14396:
 17289                           
 17290                           ; BSR set to: 0
 17291  001FB0  0E1E               	movlw	30
 17292  001FB2  6452               	cpfsgt	MSDTasks@i,c
 17293  001FB4  D001               	goto	l559
 17294  001FB6  D014               	goto	u11390
 17295  001FB8                     l559:
 17296                           
 17297                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 17298                           
 17299                           ; BSR set to: 0
 17300  001FB8  5052               	movf	MSDTasks@i,w,c
 17301  001FBA  0D01               	mullw	1
 17302  001FBC  0E40               	movlw	64
 17303  001FBE  24F3               	addwf	prodl,w,c
 17304  001FC0  6ED9               	movwf	fsr2l,c
 17305  001FC2  0E0D               	movlw	13
 17306  001FC4  20F4               	addwfc	prodh,w,c
 17307  001FC6  6EDA               	movwf	fsr2h,c
 17308  001FC8  5052               	movf	MSDTasks@i,w,c
 17309  001FCA  0D01               	mullw	1
 17310  001FCC  0E00               	movlw	low _gblCBW
 17311  001FCE  24F3               	addwf	prodl,w,c
 17312  001FD0  6EE1               	movwf	fsr1l,c
 17313  001FD2  0E01               	movlw	high _gblCBW
 17314  001FD4  20F4               	addwfc	prodh,w,c
 17315  001FD6  6EE2               	movwf	fsr1h,c
 17316  001FD8  CFDF FFE7          	movff	indf2,indf1
 17317  001FDC  2A52               	incf	MSDTasks@i,f,c
 17318  001FDE  D7E8               	goto	l14396
 17319  001FE0                     u11390:
 17320                           
 17321                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 17322  001FE0  0100               	movlb	0	; () banked
 17323  001FE2  EE20 F001          	lfsr	2,1
 17324  001FE6  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 17325  001FE8  26D9               	addwf	fsr2l,f,c
 17326  001FEA  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 17327  001FEC  22DA               	addwfc	fsr2h,f,c
 17328  001FEE  0E1F               	movlw	31
 17329  001FF0  18DE               	xorwf	postinc2,w,c
 17330  001FF2  A4D8               	btfss	status,2,c
 17331  001FF4  D072               	goto	l561
 17332                           
 17333                           ; BSR set to: 0
 17334  001FF6  0E55               	movlw	85
 17335  001FF8  0101               	movlb	1	; () banked
 17336  001FFA  1900               	xorwf	_gblCBW& (0+255),w,b
 17337  001FFC  E16E               	bnz	l561
 17338  001FFE  0E53               	movlw	83
 17339  002000  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 17340  002002  E16B               	bnz	l561
 17341  002004  0E42               	movlw	66
 17342  002006  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 17343  002008  E168               	bnz	l561
 17344  00200A  0E43               	movlw	67
 17345  00200C  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 17346  00200E  A4D8               	btfss	status,2,c
 17347  002010  D064               	goto	l561
 17348                           
 17349                           ; BSR set to: 1
 17350                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 17351  002012  0E01               	movlw	1
 17352  002014  0100               	movlb	0	; () banked
 17353  002016  6FE1               	movwf	_MSDCBWValid& (0+255),b
 17354                           
 17355                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 17356  002018  0101               	movlb	1	; () banked
 17357  00201A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17358  00201C  A4D8               	btfss	status,2,c
 17359  00201E  D052               	goto	l562
 17360                           
 17361                           ; BSR set to: 1
 17362  002020  0E11               	movlw	17
 17363  002022  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 17364  002024  D04F               	goto	l562
 17365                           
 17366                           ; BSR set to: 1
 17367  002026  510E               	movf	(_gblCBW+14)& (0+255),w,b
 17368  002028  B4D8               	btfsc	status,2,c
 17369  00202A  D04C               	goto	l562
 17370                           
 17371                           ; BSR set to: 1
 17372  00202C  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 17373  002030  0E3F               	movlw	63
 17374  002032  164D               	andwf	??_MSDTasks,f,c
 17375  002034  A4D8               	btfss	status,2,c
 17376  002036  D046               	goto	l562
 17377                           
 17378                           ; BSR set to: 1
 17379                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 17380  002038  0E55               	movlw	85
 17381  00203A  010D               	movlb	13	; () banked
 17382  00203C  6F80               	movwf	128,b	;volatile
 17383  00203E  0E53               	movlw	83
 17384  002040  6F81               	movwf	129,b	;volatile
 17385  002042  0E42               	movlw	66
 17386  002044  6F82               	movwf	130,b	;volatile
 17387  002046  0E53               	movlw	83
 17388  002048  6F83               	movwf	131,b	;volatile
 17389                           
 17390                           ; BSR set to: 13
 17391                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 17392  00204A  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 17393  00204E  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 17394  002052  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 17395  002056  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 17396                           
 17397                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 17398  00205A  0E00               	movlw	0
 17399  00205C  6F88               	movwf	136,b	;volatile
 17400  00205E  0E00               	movlw	0
 17401  002060  6F89               	movwf	137,b	;volatile
 17402  002062  0E00               	movlw	0
 17403  002064  6F8A               	movwf	138,b	;volatile
 17404  002066  0E00               	movlw	0
 17405  002068  6F8B               	movwf	139,b	;volatile
 17406                           
 17407                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 17408  00206A  0E00               	movlw	0
 17409  00206C  6F8C               	movwf	140,b	;volatile
 17410                           
 17411                           ; BSR set to: 13
 17412                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 17413  00206E  0100               	movlb	0	; () banked
 17414  002070  69E7               	setf	_MSDCommandState& (0+255),b
 17415                           
 17416                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 17417  002072  0E00               	movlw	0
 17418  002074  6FE6               	movwf	_MSDReadState& (0+255),b
 17419                           
 17420                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 17421  002076  0E00               	movlw	0
 17422  002078  6FE5               	movwf	_MSDWriteState& (0+255),b
 17423                           
 17424                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 17425  00207A  0E00               	movlw	0
 17426  00207C  6FE4               	movwf	_MSDRetryAttempt& (0+255),b
 17427                           
 17428                           ; BSR set to: 0
 17429                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 17430  00207E  0E03               	movlw	3
 17431  002080  0101               	movlb	1	; () banked
 17432  002082  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 17433  002084  B4D8               	btfsc	status,2,c
 17434  002086  D008               	goto	l563
 17435                           
 17436                           ; BSR set to: 1
 17437                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 17438  002088  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 17439  00208A  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 17440  00208C  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 17441  00208E  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 17442                           
 17443                           ; BSR set to: 1
 17444                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 17445  002090  0E00               	movlw	0
 17446  002092  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 17447                           
 17448                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 17449  002094  0E00               	movlw	0
 17450  002096  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 17451  002098                     l563:
 17452                           
 17453                           ; BSR set to: 1
 17454                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 17455                           
 17456                           ; BSR set to: 1
 17457  002098  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 17458  00209A  D002               	goto	l564
 17459                           
 17460                           ; BSR set to: 1
 17461                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 17462  00209C  0E01               	movlw	1
 17463  00209E  D001               	goto	L17
 17464  0020A0                     l564:
 17465                           
 17466                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 17467                           
 17468                           ; BSR set to: 0
 17469  0020A0  0E02               	movlw	2
 17470  0020A2                     L17:
 17471  0020A2  0100               	movlb	0	; () banked
 17472  0020A4  6FE8               	movwf	_MSD_State& (0+255),b
 17473                           
 17474                           ; BSR set to: 0
 17475                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 17476                           
 17477                           ; BSR set to: 0
 17478  0020A6  0101               	movlb	1	; () banked
 17479  0020A8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 17480  0020AA  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 17481  0020AC  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 17482  0020AE  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 17483  0020B0  B4D8               	btfsc	status,2,c
 17484  0020B2  D002               	goto	l566
 17485                           
 17486                           ; BSR set to: 1
 17487                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 17488  0020B4  0E00               	movlw	0
 17489  0020B6  D001               	goto	L18
 17490  0020B8                     l566:
 17491                           
 17492                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 17493                           
 17494                           ; BSR set to: 0
 17495  0020B8  0E01               	movlw	1
 17496  0020BA                     L18:
 17497  0020BA  0100               	movlb	0	; () banked
 17498  0020BC  6FE2               	movwf	_MSDHostNoData& (0+255),b
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 17502                           
 17503                           ; BSR set to: 0
 17504  0020BE  C10F  F0E7         	movff	_gblCBW+15,_MSDCommandState
 17505                           
 17506                           ;usb_device_msd.c: 454: }
 17507  0020C2  0012               	return	
 17508  0020C4                     l562:
 17509                           
 17510                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 17511                           
 17512                           ; BSR set to: 0
 17513  0020C4  0E01               	movlw	1
 17514  0020C6  6E01               	movwf	USBStallEndpoint@dir,c
 17515  0020C8  0E02               	movlw	2
 17516  0020CA  ECDE  F024         	call	_USBStallEndpoint
 17517                           
 17518                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 17519  0020CE  0E00               	movlw	0
 17520  0020D0  6E01               	movwf	USBStallEndpoint@dir,c
 17521  0020D2  0E02               	movlw	2
 17522  0020D4  ECDE  F024         	call	_USBStallEndpoint
 17523                           
 17524                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 17525  0020D8  0012               	return	
 17526  0020DA                     l561:
 17527                           
 17528                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 17529  0020DA  0E01               	movlw	1
 17530  0020DC  6E01               	movwf	USBStallEndpoint@dir,c
 17531  0020DE  0E02               	movlw	2
 17532  0020E0  ECDE  F024         	call	_USBStallEndpoint
 17533                           
 17534                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 17535  0020E4  0E00               	movlw	0
 17536  0020E6  6E01               	movwf	USBStallEndpoint@dir,c
 17537  0020E8  0E02               	movlw	2
 17538  0020EA  ECDE  F024         	call	_USBStallEndpoint
 17539                           
 17540                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 17541  0020EE  0E00               	movlw	0
 17542  0020F0  0100               	movlb	0	; () banked
 17543  0020F2  6FE1               	movwf	_MSDCBWValid& (0+255),b
 17544                           
 17545                           ; BSR set to: 0
 17546                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 17547                           
 17548                           ; BSR set to: 0
 17549  0020F4  0012               	return	
 17550  0020F6                     
 17551                           ; BSR set to: 0
 17552                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 17553                           
 17554                           ; BSR set to: 0
 17555  0020F6  EC49  F023         	call	_MSDProcessCommand	;wreg free
 17556  0020FA  0AFF               	xorlw	255
 17557  0020FC  A4D8               	btfss	status,2,c
 17558  0020FE  0012               	return	
 17559                           
 17560                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 17561  002100  0E03               	movlw	3
 17562  002102  0100               	movlb	0	; () banked
 17563  002104  6FE8               	movwf	_MSD_State& (0+255),b
 17564                           
 17565                           ; BSR set to: 0
 17566                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 17567  002106  0012               	return	
 17568  002108                     
 17569                           ; BSR set to: 0
 17570                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 17571                           
 17572                           ; BSR set to: 0
 17573  002108  EC49  F023         	call	_MSDProcessCommand	;wreg free
 17574  00210C  0AFF               	xorlw	255
 17575  00210E  A4D8               	btfss	status,2,c
 17576  002110  0012               	return	
 17577                           
 17578                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 17579  002112  010D               	movlb	13	; () banked
 17580  002114  518C               	movf	140,w,b	;volatile
 17581  002116  A4D8               	btfss	status,2,c
 17582  002118  D008               	goto	l575
 17583                           
 17584                           ; BSR set to: 13
 17585  00211A  5188               	movf	136,w,b	;volatile
 17586  00211C  1189               	iorwf	137,w,b	;volatile
 17587  00211E  118A               	iorwf	138,w,b	;volatile
 17588  002120  118B               	iorwf	139,w,b	;volatile
 17589  002122  B4D8               	btfsc	status,2,c
 17590  002124  D002               	goto	l575
 17591                           
 17592                           ; BSR set to: 13
 17593                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 17594  002126  0E02               	movlw	2
 17595  002128  6F8C               	movwf	140,b	;volatile
 17596  00212A                     l575:
 17597                           
 17598                           ; BSR set to: 13
 17599                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 17600  00212A  0E03               	movlw	3
 17601  00212C  0100               	movlb	0	; () banked
 17602  00212E  6FE8               	movwf	_MSD_State& (0+255),b
 17603                           
 17604                           ; BSR set to: 0
 17605                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 17606  002130  0012               	return	
 17607  002132                     
 17608                           ; BSR set to: 0
 17609                           
 17610                           ; BSR set to: 0
 17611  002132  C0C9  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 17612  002136  C0CA  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 17613                           
 17614                           ; BSR set to: 0
 17615                           
 17616                           ; BSR set to: 0
 17617                           
 17618                           ; BSR set to: 0
 17619  00213A  504E               	movf	_MSDTasks$2372,w,c
 17620  00213C  104F               	iorwf	_MSDTasks$2372+1,w,c
 17621  00213E  B4D8               	btfsc	status,2,c
 17622  002140  D00A               	goto	l577
 17623                           
 17624                           ; BSR set to: 0
 17625  002142  C0C9  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 17626  002146  C0CA  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 17627                           
 17628                           ; BSR set to: 0
 17629                           
 17630                           ; BSR set to: 0
 17631                           
 17632                           ; BSR set to: 0
 17633                           
 17634                           ; BSR set to: 0
 17635  00214A  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 17636  00214E  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 17637  002152  BEDF               	btfsc	indf2,7,c
 17638  002154  0012               	return	
 17639  002156                     l577:
 17640                           
 17641                           ; BSR set to: 0
 17642                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 17643                           
 17644                           ; BSR set to: 0
 17645  002156  0E01               	movlw	1
 17646  002158  6E01               	movwf	USBTransferOnePacket@dir,c
 17647  00215A  0E80               	movlw	128
 17648  00215C  6E02               	movwf	USBTransferOnePacket@data,c
 17649  00215E  0E0D               	movlw	13
 17650  002160  6E03               	movwf	USBTransferOnePacket@data+1,c
 17651  002162  0E0D               	movlw	13
 17652  002164  6E04               	movwf	USBTransferOnePacket@len,c
 17653  002166  0E02               	movlw	2
 17654  002168  ECEB  F026         	call	_USBTransferOnePacket
 17655  00216C  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 17656  002170  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 17657                           
 17658                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 17659  002174  0100               	movlb	0	; () banked
 17660  002176  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 17661  002178  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17662  00217A  B4D8               	btfsc	status,2,c
 17663  00217C  D006               	goto	u11560
 17664                           
 17665                           ; BSR set to: 0
 17666  00217E  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17667  002182  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17668  002186  BEDF               	btfsc	indf2,7,c
 17669  002188  D00F               	goto	l586
 17670  00218A                     u11560:
 17671                           
 17672                           ; BSR set to: 0
 17673                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 17674                           
 17675                           ; BSR set to: 0
 17676  00218A  0E00               	movlw	0
 17677  00218C  6E01               	movwf	USBTransferOnePacket@dir,c
 17678  00218E  0E40               	movlw	64
 17679  002190  6E02               	movwf	USBTransferOnePacket@data,c
 17680  002192  0E0D               	movlw	13
 17681  002194  6E03               	movwf	USBTransferOnePacket@data+1,c
 17682  002196  0E40               	movlw	64
 17683  002198  6E04               	movwf	USBTransferOnePacket@len,c
 17684  00219A  0E02               	movlw	2
 17685  00219C  ECEB  F026         	call	_USBTransferOnePacket
 17686  0021A0  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17687  0021A4  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17688  0021A8                     l586:
 17689                           
 17690                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 17691  0021A8  0E00               	movlw	0
 17692  0021AA  0100               	movlb	0	; () banked
 17693  0021AC  6FE8               	movwf	_MSD_State& (0+255),b
 17694                           
 17695                           ;usb_device_msd.c: 513: break;
 17696  0021AE  0012               	return	
 17697  0021B0                     
 17698                           ; BSR set to: 0
 17699                           ;usb_device_msd.c: 518: MSD_State=0x00;
 17700                           
 17701                           ; BSR set to: 0
 17702  0021B0  0E00               	movlw	0
 17703  0021B2  6FE8               	movwf	_MSD_State& (0+255),b
 17704                           
 17705                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 17706  0021B4  0E02               	movlw	2
 17707  0021B6  010D               	movlb	13	; () banked
 17708  0021B8  6F8C               	movwf	140,b	;volatile
 17709                           
 17710                           ; BSR set to: 13
 17711                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 17712  0021BA  0E00               	movlw	0
 17713  0021BC  6E01               	movwf	USBStallEndpoint@dir,c
 17714  0021BE  0E02               	movlw	2
 17715  0021C0  ECDE  F024         	call	_USBStallEndpoint
 17716                           
 17717                           ;usb_device_msd.c: 521: }
 17718  0021C4  0012               	return	
 17719  0021C6                     l554:
 17720  0021C6  0100               	movlb	0	; () banked
 17721  0021C8  51E8               	movf	_MSD_State& (0+255),w,b
 17722                           
 17723                           ; Switch size 1, requested type "space"
 17724                           ; Number of cases is 4, Range of values is 0 to 3
 17725                           ; switch strategies available:
 17726                           ; Name         Instructions Cycles
 17727                           ; simple_byte           13     7 (average)
 17728                           ;	Chosen strategy is simple_byte
 17729  0021CA  0A00               	xorlw	0	; case 0
 17730  0021CC  B4D8               	btfsc	status,2,c
 17731  0021CE  D6E4               	goto	l555
 17732  0021D0  0A01               	xorlw	1	; case 1
 17733  0021D2  B4D8               	btfsc	status,2,c
 17734  0021D4  D790               	goto	l571
 17735  0021D6  0A03               	xorlw	3	; case 2
 17736  0021D8  B4D8               	btfsc	status,2,c
 17737  0021DA  D796               	goto	l573
 17738  0021DC  0A01               	xorlw	1	; case 3
 17739  0021DE  B4D8               	btfsc	status,2,c
 17740  0021E0  D7A8               	goto	l576
 17741  0021E2  D7E6               	goto	l589
 17742  0021E4                     __end_of_MSDTasks:
 17743                           	opt stack 0
 17744                           tosu	equ	0xFFF
 17745                           tosh	equ	0xFFE
 17746                           tosl	equ	0xFFD
 17747                           pclath	equ	0xFFA
 17748                           tblptru	equ	0xFF8
 17749                           tblptrh	equ	0xFF7
 17750                           tblptrl	equ	0xFF6
 17751                           tablat	equ	0xFF5
 17752                           prodh	equ	0xFF4
 17753                           prodl	equ	0xFF3
 17754                           intcon	equ	0xFF2
 17755                           intcon2	equ	0xFF1
 17756                           intcon3	equ	0xFF0
 17757                           indf0	equ	0xFEF
 17758                           postinc0	equ	0xFEE
 17759                           fsr0h	equ	0xFEA
 17760                           fsr0l	equ	0xFE9
 17761                           wreg	equ	0xFE8
 17762                           indf1	equ	0xFE7
 17763                           postdec1	equ	0xFE5
 17764                           plusw1	equ	0xFE3
 17765                           fsr1h	equ	0xFE2
 17766                           fsr1l	equ	0xFE1
 17767                           indf2	equ	0xFDF
 17768                           postinc2	equ	0xFDE
 17769                           postdec2	equ	0xFDD
 17770                           plusw2	equ	0xFDB
 17771                           fsr2h	equ	0xFDA
 17772                           fsr2l	equ	0xFD9
 17773                           status	equ	0xFD8
 17774                           
 17775 ;; *************** function _MSDProcessCommand *****************
 17776 ;; Defined at:
 17777 ;;		line 553 in file "usb_device_msd.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;		None
 17780 ;; Auto vars:     Size  Location     Type
 17781 ;;		None
 17782 ;; Return value:  Size  Location     Type
 17783 ;;                  1    wreg      unsigned char 
 17784 ;; Registers used:
 17785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17786 ;; Tracked objects:
 17787 ;;		On entry : 0/0
 17788 ;;		On exit  : 0/0
 17789 ;;		Unchanged: 0/0
 17790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17793 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17794 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17795 ;;Total ram usage:        5 bytes
 17796 ;; Hardware stack levels used:    1
 17797 ;; Hardware stack levels required when called:    9
 17798 ;; This function calls:
 17799 ;;		_ExternalFlash_MediaDetect
 17800 ;;		_ExternalFlash_MediaInitialize
 17801 ;;		_MSDProcessCommandMediaAbsent
 17802 ;;		_MSDProcessCommandMediaPresent
 17803 ;; This function is called by:
 17804 ;;		_MSDTasks
 17805 ;; This function uses a non-reentrant model
 17806 ;;
 17807                           
 17808                           	psect	text84
 17809  004692                     __ptext84:
 17810                           	opt stack 0
 17811  004692                     _MSDProcessCommand:
 17812                           	opt stack 19
 17813                           
 17814                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 17815                           
 17816                           ;incstack = 0
 17817  004692  C1E7  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 17818  004696  C1E8  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 17819  00469A  D801               	call	u10698
 17820  00469C  D00A               	goto	u10699
 17821  00469E                     u10698:
 17822  00469E  0005               	push	
 17823  0046A0  6EFA               	movwf	pclath,c
 17824  0046A2  0101               	movlb	1	; () banked
 17825  0046A4  51DF               	movf	(_LUN+6)& (0+255),w,b
 17826  0046A6  6EFD               	movwf	tosl,c
 17827  0046A8  51E0               	movf	(_LUN+7)& (0+255),w,b
 17828  0046AA  6EFE               	movwf	tosh,c
 17829  0046AC  6AFF               	clrf	tosu,c
 17830  0046AE  50FA               	movf	pclath,w,c
 17831  0046B0  0012               	return		;indir
 17832  0046B2                     u10699:
 17833  0046B2  0900               	iorlw	0
 17834  0046B4  B4D8               	btfsc	status,2,c
 17835  0046B6  D00C               	goto	u10710
 17836  0046B8  0101               	movlb	1	; () banked
 17837  0046BA  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17838  0046BC  0D01               	mullw	1
 17839  0046BE  0EE3               	movlw	low _SoftDetach
 17840  0046C0  24F3               	addwf	prodl,w,c
 17841  0046C2  6ED9               	movwf	fsr2l,c
 17842  0046C4  0E00               	movlw	high _SoftDetach
 17843  0046C6  20F4               	addwfc	prodh,w,c
 17844  0046C8  6EDA               	movwf	fsr2h,c
 17845  0046CA  04DE               	decf	postinc2,w,c
 17846  0046CC  A4D8               	btfss	status,2,c
 17847  0046CE  D019               	goto	l592
 17848  0046D0                     u10710:
 17849                           
 17850                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 17851                           
 17852                           ; BSR set to: 1
 17853  0046D0  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 17854  0046D4  0E01               	movlw	1
 17855  0046D6  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 17856  0046D8  0E00               	movlw	0
 17857  0046DA  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 17858  0046DC  2A48               	incf	??_MSDProcessCommand,f,c
 17859  0046DE  D003               	goto	u10724
 17860  0046E0                     u10725:
 17861  0046E0  90D8               	bcf	status,0,c
 17862  0046E2  3649               	rlcf	??_MSDProcessCommand+1,f,c
 17863  0046E4  364A               	rlcf	??_MSDProcessCommand+2,f,c
 17864  0046E6                     u10724:
 17865  0046E6  2E48               	decfsz	??_MSDProcessCommand,f,c
 17866  0046E8  D7FB               	goto	u10725
 17867  0046EA  1C49               	comf	??_MSDProcessCommand+1,w,c
 17868  0046EC  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 17869  0046EE  1C4A               	comf	??_MSDProcessCommand+2,w,c
 17870  0046F0  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 17871  0046F2  504B               	movf	??_MSDProcessCommand+3,w,c
 17872  0046F4  0101               	movlb	1	; () banked
 17873  0046F6  177E               	andwf	_gblMediaPresent& (0+255),f,b
 17874  0046F8  504C               	movf	??_MSDProcessCommand+4,w,c
 17875  0046FA  177F               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 17876                           
 17877                           ; BSR set to: 1
 17878                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 17879  0046FC  EC25  F03B         	call	_MSDProcessCommandMediaAbsent	;wreg free
 17880                           
 17881                           ;usb_device_msd.c: 563: }
 17882  004700  D04E               	goto	l599
 17883  004702                     l592:
 17884                           
 17885                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 17886  004702  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 17887  004706  0E01               	movlw	1
 17888  004708  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 17889  00470A  0E00               	movlw	0
 17890  00470C  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 17891  00470E  2A48               	incf	??_MSDProcessCommand,f,c
 17892  004710  D003               	goto	u10734
 17893  004712                     u10735:
 17894  004712  90D8               	bcf	status,0,c
 17895  004714  3649               	rlcf	??_MSDProcessCommand+1,f,c
 17896  004716  364A               	rlcf	??_MSDProcessCommand+2,f,c
 17897  004718                     u10734:
 17898  004718  2E48               	decfsz	??_MSDProcessCommand,f,c
 17899  00471A  D7FB               	goto	u10735
 17900  00471C  0101               	movlb	1	; () banked
 17901  00471E  517E               	movf	_gblMediaPresent& (0+255),w,b
 17902  004720  1649               	andwf	??_MSDProcessCommand+1,f,c
 17903  004722  517F               	movf	(_gblMediaPresent+1)& (0+255),w,b
 17904  004724  164A               	andwf	??_MSDProcessCommand+2,f,c
 17905  004726  5049               	movf	??_MSDProcessCommand+1,w,c
 17906  004728  104A               	iorwf	??_MSDProcessCommand+2,w,c
 17907  00472A  A4D8               	btfss	status,2,c
 17908  00472C  D036               	goto	l596
 17909                           
 17910                           ; BSR set to: 1
 17911                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 17912  00472E  C1E7  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 17913  004732  C1E8  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 17914  004736  D801               	call	u10758
 17915  004738  D009               	goto	u10759
 17916  00473A                     u10758:
 17917  00473A  0005               	push	
 17918  00473C  6EFA               	movwf	pclath,c
 17919  00473E  51D9               	movf	_LUN& (0+255),w,b
 17920  004740  6EFD               	movwf	tosl,c
 17921  004742  51DA               	movf	(_LUN+1)& (0+255),w,b
 17922  004744  6EFE               	movwf	tosh,c
 17923  004746  6AFF               	clrf	tosu,c
 17924  004748  50FA               	movf	pclath,w,c
 17925  00474A  0012               	return		;indir
 17926  00474C                     u10759:
 17927  00474C  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 17928  00474E  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 17929  004750  B4D8               	btfsc	status,2,c
 17930  004752  D020               	goto	l597
 17931                           
 17932                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 17933  004754  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 17934  004758  0E01               	movlw	1
 17935  00475A  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 17936  00475C  0E00               	movlw	0
 17937  00475E  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 17938  004760  2A48               	incf	??_MSDProcessCommand,f,c
 17939  004762  D003               	goto	u10774
 17940  004764                     u10775:
 17941  004764  90D8               	bcf	status,0,c
 17942  004766  3649               	rlcf	??_MSDProcessCommand+1,f,c
 17943  004768  364A               	rlcf	??_MSDProcessCommand+2,f,c
 17944  00476A                     u10774:
 17945  00476A  2E48               	decfsz	??_MSDProcessCommand,f,c
 17946  00476C  D7FB               	goto	u10775
 17947  00476E  5049               	movf	??_MSDProcessCommand+1,w,c
 17948  004770  0101               	movlb	1	; () banked
 17949  004772  137E               	iorwf	_gblMediaPresent& (0+255),f,b
 17950  004774  504A               	movf	??_MSDProcessCommand+2,w,c
 17951  004776  137F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 17952                           
 17953                           ; BSR set to: 1
 17954                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 17955  004778  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 17956  00477A  0BF0               	andlw	-16
 17957  00477C  0906               	iorlw	6
 17958  00477E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 17959                           
 17960                           ; BSR set to: 1
 17961                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 17962  004780  0E28               	movlw	40
 17963  004782  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 17964                           
 17965                           ; BSR set to: 1
 17966                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 17967  004784  0E00               	movlw	0
 17968  004786  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 17969                           
 17970                           ; BSR set to: 1
 17971                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 17972  004788  0E01               	movlw	1
 17973  00478A  010D               	movlb	13	; () banked
 17974  00478C  6F8C               	movwf	140,b	;volatile
 17975                           
 17976                           ; BSR set to: 13
 17977                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 17978  00478E  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 17979                           
 17980                           ;usb_device_msd.c: 589: }
 17981  004792  D005               	goto	l599
 17982  004794                     l597:
 17983                           
 17984                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 17985  004794  EC25  F03B         	call	_MSDProcessCommandMediaAbsent	;wreg free
 17986                           
 17987                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 17988  004798  D002               	goto	l599
 17989  00479A                     l596:
 17990                           
 17991                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 17992  00479A  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 17993  00479E                     l599:
 17994                           
 17995                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 17996  00479E  0100               	movlb	0	; () banked
 17997  0047A0  51E7               	movf	_MSDCommandState& (0+255),w,b
 17998  0047A2  0012               	return	
 17999  0047A4                     __end_of_MSDProcessCommand:
 18000                           	opt stack 0
 18001                           tosu	equ	0xFFF
 18002                           tosh	equ	0xFFE
 18003                           tosl	equ	0xFFD
 18004                           pclath	equ	0xFFA
 18005                           tblptru	equ	0xFF8
 18006                           tblptrh	equ	0xFF7
 18007                           tblptrl	equ	0xFF6
 18008                           tablat	equ	0xFF5
 18009                           prodh	equ	0xFF4
 18010                           prodl	equ	0xFF3
 18011                           intcon	equ	0xFF2
 18012                           intcon2	equ	0xFF1
 18013                           intcon3	equ	0xFF0
 18014                           indf0	equ	0xFEF
 18015                           postinc0	equ	0xFEE
 18016                           fsr0h	equ	0xFEA
 18017                           fsr0l	equ	0xFE9
 18018                           wreg	equ	0xFE8
 18019                           indf1	equ	0xFE7
 18020                           postdec1	equ	0xFE5
 18021                           plusw1	equ	0xFE3
 18022                           fsr1h	equ	0xFE2
 18023                           fsr1l	equ	0xFE1
 18024                           indf2	equ	0xFDF
 18025                           postinc2	equ	0xFDE
 18026                           postdec2	equ	0xFDD
 18027                           plusw2	equ	0xFDB
 18028                           fsr2h	equ	0xFDA
 18029                           fsr2l	equ	0xFD9
 18030                           status	equ	0xFD8
 18031                           
 18032 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 18033 ;; Defined at:
 18034 ;;		line 635 in file "usb_device_msd.c"
 18035 ;; Parameters:    Size  Location     Type
 18036 ;;		None
 18037 ;; Auto vars:     Size  Location     Type
 18038 ;;		None
 18039 ;; Return value:  Size  Location     Type
 18040 ;;                  1    wreg      void 
 18041 ;; Registers used:
 18042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18043 ;; Tracked objects:
 18044 ;;		On entry : 0/0
 18045 ;;		On exit  : 0/0
 18046 ;;		Unchanged: 0/0
 18047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18052 ;;Total ram usage:        0 bytes
 18053 ;; Hardware stack levels used:    1
 18054 ;; Hardware stack levels required when called:    8
 18055 ;; This function calls:
 18056 ;;		_MSDErrorHandler
 18057 ;;		_MSDProcessCommandMediaPresent
 18058 ;;		_ResetSenseData
 18059 ;; This function is called by:
 18060 ;;		_MSDProcessCommand
 18061 ;; This function uses a non-reentrant model
 18062 ;;
 18063                           
 18064                           	psect	text85
 18065  00764A                     __ptext85:
 18066                           	opt stack 0
 18067  00764A                     _MSDProcessCommandMediaAbsent:
 18068                           	opt stack 19
 18069                           
 18070                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;incstack = 0
 18074  00764A  D01E               	goto	l603
 18075  00764C                     
 18076                           ;usb_device_msd.c: 646: ResetSenseData();
 18077  00764C  EC56  F03B         	call	_ResetSenseData	;wreg free
 18078                           
 18079                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 18080  007650  0101               	movlb	1	; () banked
 18081  007652  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18082  007654  0BF0               	andlw	-16
 18083  007656  0902               	iorlw	2
 18084  007658  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18085                           
 18086                           ; BSR set to: 1
 18087                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 18088  00765A  0E3A               	movlw	58
 18089  00765C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18090                           
 18091                           ; BSR set to: 1
 18092                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 18093  00765E  0E00               	movlw	0
 18094  007660  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18095                           
 18096                           ; BSR set to: 1
 18097                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 18098  007662  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 18099                           
 18100                           ;usb_device_msd.c: 655: break;
 18101  007666  0012               	return	
 18102  007668                     
 18103                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 18104  007668  0E01               	movlw	1
 18105  00766A  010D               	movlb	13	; () banked
 18106  00766C  6F8C               	movwf	140,b	;volatile
 18107                           
 18108                           ; BSR set to: 13
 18109                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 18110  00766E  0100               	movlb	0	; () banked
 18111  007670  69E7               	setf	_MSDCommandState& (0+255),b
 18112                           
 18113                           ;usb_device_msd.c: 665: break;
 18114  007672  0012               	return	
 18115  007674                     
 18116                           ; BSR set to: 0
 18117                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 18118                           
 18119                           ; BSR set to: 0
 18120  007674  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 18121                           
 18122                           ;usb_device_msd.c: 671: break;
 18123  007678  0012               	return	
 18124  00767A                     
 18125                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 18126  00767A  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 18127                           
 18128                           ;usb_device_msd.c: 677: break;
 18129  00767E  0012               	return	
 18130  007680                     
 18131                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 18132  007680  0E7F               	movlw	127
 18133  007682  EC68  F026         	call	_MSDErrorHandler
 18134                           
 18135                           ;usb_device_msd.c: 685: }
 18136                           
 18137                           ;usb_device_msd.c: 684: break;
 18138  007686  0012               	return	
 18139  007688                     l603:
 18140  007688  0100               	movlb	0	; () banked
 18141  00768A  51E7               	movf	_MSDCommandState& (0+255),w,b
 18142                           
 18143                           ; Switch size 1, requested type "space"
 18144                           ; Number of cases is 5, Range of values is 0 to 253
 18145                           ; switch strategies available:
 18146                           ; Name         Instructions Cycles
 18147                           ; simple_byte           16     9 (average)
 18148                           ;	Chosen strategy is simple_byte
 18149  00768C  0A00               	xorlw	0	; case 0
 18150  00768E  B4D8               	btfsc	status,2,c
 18151  007690  D7EB               	goto	l606
 18152  007692  0A03               	xorlw	3	; case 3
 18153  007694  B4D8               	btfsc	status,2,c
 18154  007696  D7DA               	goto	l604
 18155  007698  0A11               	xorlw	17	; case 18
 18156  00769A  B4D8               	btfsc	status,2,c
 18157  00769C  D7EB               	goto	l608
 18158  00769E  0A0C               	xorlw	12	; case 30
 18159  0076A0  B4D8               	btfsc	status,2,c
 18160  0076A2  D7E2               	goto	l606
 18161  0076A4  0AE3               	xorlw	227	; case 253
 18162  0076A6  B4D8               	btfsc	status,2,c
 18163  0076A8  D7E8               	goto	l609
 18164  0076AA  D7EA               	goto	l610
 18165  0076AC                     __end_of_MSDProcessCommandMediaAbsent:
 18166                           	opt stack 0
 18167                           tosu	equ	0xFFF
 18168                           tosh	equ	0xFFE
 18169                           tosl	equ	0xFFD
 18170                           pclath	equ	0xFFA
 18171                           tblptru	equ	0xFF8
 18172                           tblptrh	equ	0xFF7
 18173                           tblptrl	equ	0xFF6
 18174                           tablat	equ	0xFF5
 18175                           prodh	equ	0xFF4
 18176                           prodl	equ	0xFF3
 18177                           intcon	equ	0xFF2
 18178                           intcon2	equ	0xFF1
 18179                           intcon3	equ	0xFF0
 18180                           indf0	equ	0xFEF
 18181                           postinc0	equ	0xFEE
 18182                           fsr0h	equ	0xFEA
 18183                           fsr0l	equ	0xFE9
 18184                           wreg	equ	0xFE8
 18185                           indf1	equ	0xFE7
 18186                           postdec1	equ	0xFE5
 18187                           plusw1	equ	0xFE3
 18188                           fsr1h	equ	0xFE2
 18189                           fsr1l	equ	0xFE1
 18190                           indf2	equ	0xFDF
 18191                           postinc2	equ	0xFDE
 18192                           postdec2	equ	0xFDD
 18193                           plusw2	equ	0xFDB
 18194                           fsr2h	equ	0xFDA
 18195                           fsr2l	equ	0xFD9
 18196                           status	equ	0xFD8
 18197                           
 18198 ;; *************** function _MSDProcessCommandMediaPresent *****************
 18199 ;; Defined at:
 18200 ;;		line 712 in file "usb_device_msd.c"
 18201 ;; Parameters:    Size  Location     Type
 18202 ;;		None
 18203 ;; Auto vars:     Size  Location     Type
 18204 ;;  capacity        4   66[COMRAM] struct .
 18205 ;;  sectorSize      4   62[COMRAM] struct .
 18206 ;;  i               1   70[COMRAM] unsigned char 
 18207 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 18208 ;; Return value:  Size  Location     Type
 18209 ;;                  1    wreg      void 
 18210 ;; Registers used:
 18211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18212 ;; Tracked objects:
 18213 ;;		On entry : 0/0
 18214 ;;		On exit  : 0/0
 18215 ;;		Unchanged: 0/0
 18216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18218 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18219 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18220 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18221 ;;Total ram usage:       14 bytes
 18222 ;; Hardware stack levels used:    1
 18223 ;; Hardware stack levels required when called:    7
 18224 ;; This function calls:
 18225 ;;		_ExternalFlash_CapacityRead
 18226 ;;		_ExternalFlash_SectorSizeRead
 18227 ;;		_ExternalFlash_WriteProtectStateGet
 18228 ;;		_MSDCheckForErrorCases
 18229 ;;		_MSDComputeDeviceInAndResidue
 18230 ;;		_MSDErrorHandler
 18231 ;;		_MSDReadHandler
 18232 ;;		_MSDWriteHandler
 18233 ;;		_ResetSenseData
 18234 ;;		_USBTransferOnePacket
 18235 ;;		_memcpy
 18236 ;; This function is called by:
 18237 ;;		_MSDProcessCommand
 18238 ;;		_MSDProcessCommandMediaAbsent
 18239 ;; This function uses a non-reentrant model
 18240 ;;
 18241                           
 18242                           	psect	text86
 18243  00049C                     __ptext86:
 18244                           	opt stack 0
 18245  00049C                     _MSDProcessCommandMediaPresent:
 18246                           	opt stack 20
 18247                           
 18248                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 18249                           
 18250                           ;incstack = 0
 18251  00049C  D1B9               	goto	l614
 18252  00049E                     
 18253                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 18254  00049E  EC23  F019         	call	_MSDReadHandler	;wreg free
 18255  0004A2  0900               	iorlw	0
 18256  0004A4  A4D8               	btfss	status,2,c
 18257  0004A6  0012               	return	
 18258                           
 18259                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 18260  0004A8  0100               	movlb	0	; () banked
 18261  0004AA  69E7               	setf	_MSDCommandState& (0+255),b
 18262                           
 18263                           ; BSR set to: 0
 18264                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 18265  0004AC  0012               	return	
 18266  0004AE                     
 18267                           ; BSR set to: 0
 18268                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 18269                           
 18270                           ; BSR set to: 0
 18271  0004AE  ECC8  F00A         	call	_MSDWriteHandler	;wreg free
 18272  0004B2  0900               	iorlw	0
 18273  0004B4  A4D8               	btfss	status,2,c
 18274  0004B6  0012               	return	
 18275                           
 18276                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 18277  0004B8  0100               	movlb	0	; () banked
 18278  0004BA  69E7               	setf	_MSDCommandState& (0+255),b
 18279                           
 18280                           ; BSR set to: 0
 18281                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 18282  0004BC  0012               	return	
 18283  0004BE                     
 18284                           ; BSR set to: 0
 18285                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 18286                           
 18287                           ; BSR set to: 0
 18288  0004BE  05E2               	decf	_MSDHostNoData& (0+255),w,b
 18289  0004C0  A4D8               	btfss	status,2,c
 18290  0004C2  D002               	goto	l621
 18291                           
 18292                           ; BSR set to: 0
 18293                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 18294  0004C4  69E7               	setf	_MSDCommandState& (0+255),b
 18295                           
 18296                           ;usb_device_msd.c: 751: break;
 18297  0004C6  0012               	return	
 18298  0004C8                     l621:
 18299                           
 18300                           ; BSR set to: 0
 18301                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 18302  0004C8  C112  F0D4         	movff	_gblCBW+18,_TransferLength+1
 18303                           
 18304                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 18305  0004CC  C113  F0D3         	movff	_gblCBW+19,_TransferLength
 18306                           
 18307                           ; BSR set to: 0
 18308                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 18309  0004D0  C0D3  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 18310  0004D4  C0D4  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 18311  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 18312  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 18313  0004DC  ECB5  F029         	call	_MSDCheckForErrorCases	;wreg free
 18314  0004E0  0900               	iorlw	0
 18315  0004E2  A4D8               	btfss	status,2,c
 18316  0004E4  0012               	return	
 18317                           
 18318                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 18319                           
 18320                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 18321  0004E6  0E00               	movlw	0
 18322  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18323  0004EA  0E24               	movlw	36
 18324  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18325  0004EE  ECBE  F033         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18326                           
 18327                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 18328  0004F2  0E00               	movlw	0
 18329  0004F4  6E01               	movwf	memcpy@d1,c
 18330  0004F6  0E06               	movlw	6
 18331  0004F8  6E02               	movwf	memcpy@d1+1,c
 18332  0004FA  0E4A               	movlw	low _inq_resp
 18333  0004FC  6E03               	movwf	memcpy@s1,c
 18334  0004FE  0E8F               	movlw	high _inq_resp
 18335  000500  6E04               	movwf	memcpy@s1+1,c
 18336  000502  5003               	movf	memcpy@s1,w,c
 18337  000504  1004               	iorwf	memcpy@s1+1,w,c
 18338  000506  A4D8               	btfss	status,2,c
 18339  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 18340  00050A  6E05               	movwf	memcpy@s1+2,c
 18341  00050C  0E00               	movlw	0
 18342  00050E  6E07               	movwf	memcpy@n+1,c
 18343  000510  0E24               	movlw	36
 18344  000512  6E06               	movwf	memcpy@n,c
 18345  000514  ECF2  F03A         	call	_memcpy	;wreg free
 18346                           
 18347                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 18348  000518  0EFD               	movlw	253
 18349  00051A  0100               	movlb	0	; () banked
 18350  00051C  6FE7               	movwf	_MSDCommandState& (0+255),b
 18351                           
 18352                           ;usb_device_msd.c: 773: break;
 18353  00051E  0012               	return	
 18354  000520                     
 18355                           ; BSR set to: 0
 18356                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 18357                           
 18358                           ; BSR set to: 0
 18359  000520  C1E7  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 18360  000524  C1E8  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 18361  000528  D801               	call	u9298
 18362  00052A  D00A               	goto	u9299
 18363  00052C                     u9298:
 18364  00052C  0005               	push	
 18365  00052E  6EFA               	movwf	pclath,c
 18366  000530  0101               	movlb	1	; () banked
 18367  000532  51DB               	movf	(_LUN+2)& (0+255),w,b
 18368  000534  6EFD               	movwf	tosl,c
 18369  000536  51DC               	movf	(_LUN+3)& (0+255),w,b
 18370  000538  6EFE               	movwf	tosh,c
 18371  00053A  6AFF               	clrf	tosu,c
 18372  00053C  50FA               	movf	pclath,w,c
 18373  00053E  0012               	return		;indir
 18374  000540                     u9299:
 18375  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 18376  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 18377  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 18378  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 18379                           
 18380                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 18381  000550  C1E7  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 18382  000554  C1E8  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 18383  000558  D801               	call	u9308
 18384  00055A  D00A               	goto	u9309
 18385  00055C                     u9308:
 18386  00055C  0005               	push	
 18387  00055E  6EFA               	movwf	pclath,c
 18388  000560  0101               	movlb	1	; () banked
 18389  000562  51DD               	movf	(_LUN+4)& (0+255),w,b
 18390  000564  6EFD               	movwf	tosl,c
 18391  000566  51DE               	movf	(_LUN+5)& (0+255),w,b
 18392  000568  6EFE               	movwf	tosh,c
 18393  00056A  6AFF               	clrf	tosu,c
 18394  00056C  50FA               	movf	pclath,w,c
 18395  00056E  0012               	return		;indir
 18396  000570                     u9309:
 18397  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 18398  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 18399  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 18400  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 18401                           
 18402                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 18403  00057C  EE26 F000          	lfsr	2,1536
 18404  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 18405                           
 18406                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 18407  000584  EE26 F001          	lfsr	2,1537	;volatile
 18408  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 18409                           
 18410                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 18411  00058C  EE26 F002          	lfsr	2,1538	;volatile
 18412  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 18413                           
 18414                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 18415  000594  EE26 F003          	lfsr	2,1539	;volatile
 18416  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 18417                           
 18418                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 18419  00059C  EE26 F004          	lfsr	2,1540	;volatile
 18420  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 18421                           
 18422                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 18423  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 18424  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 18425                           
 18426                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 18427  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 18428  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 18429                           
 18430                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 18431  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 18432  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 18433                           
 18434                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 18435  0005BC  0E00               	movlw	0
 18436  0005BE  0100               	movlb	0	; () banked
 18437  0005C0  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 18438  0005C2  0E08               	movlw	8
 18439  0005C4  6FD3               	movwf	_TransferLength& (0+255),b
 18440                           
 18441                           ; BSR set to: 0
 18442                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 18443  0005C6  0E00               	movlw	0
 18444  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18445  0005CA  0E08               	movlw	8
 18446  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18447  0005CE  ECBE  F033         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18448                           
 18449                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 18450  0005D2  0EFD               	movlw	253
 18451  0005D4  0100               	movlb	0	; () banked
 18452  0005D6  6FE7               	movwf	_MSDCommandState& (0+255),b
 18453                           
 18454                           ;usb_device_msd.c: 802: break;
 18455  0005D8  0012               	return	
 18456  0005DA                     
 18457                           ; BSR set to: 0
 18458                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 18459                           
 18460                           ; BSR set to: 0
 18461  0005DA  05E2               	decf	_MSDHostNoData& (0+255),w,b
 18462  0005DC  A4D8               	btfss	status,2,c
 18463  0005DE  D002               	goto	l625
 18464                           
 18465                           ; BSR set to: 0
 18466                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 18467  0005E0  69E7               	setf	_MSDCommandState& (0+255),b
 18468                           
 18469                           ;usb_device_msd.c: 814: break;
 18470  0005E2  0012               	return	
 18471  0005E4                     l625:
 18472                           
 18473                           ; BSR set to: 0
 18474                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 18475                           
 18476                           ; BSR set to: 0
 18477  0005E4  0E00               	movlw	0
 18478  0005E6  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 18479  0005E8  0E12               	movlw	18
 18480  0005EA  6FD3               	movwf	_TransferLength& (0+255),b
 18481                           
 18482                           ; BSR set to: 0
 18483                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 18484  0005EC  0E00               	movlw	0
 18485  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18486  0005F0  0E12               	movlw	18
 18487  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18488  0005F4  ECBE  F033         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18489                           
 18490                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 18491  0005F8  0E00               	movlw	0
 18492  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 18493  0005FC                     l12504:
 18494  0005FC  0E11               	movlw	17
 18495  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 18496  000600  D001               	goto	l626
 18497  000602  D014               	goto	u9330
 18498  000604                     l626:
 18499                           
 18500                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 18501  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18502  000606  0D01               	mullw	1
 18503  000608  0E1F               	movlw	low _gblSenseData
 18504  00060A  24F3               	addwf	prodl,w,c
 18505  00060C  6ED9               	movwf	fsr2l,c
 18506  00060E  0E01               	movlw	high _gblSenseData
 18507  000610  20F4               	addwfc	prodh,w,c
 18508  000612  6EDA               	movwf	fsr2h,c
 18509  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18510  000616  0D01               	mullw	1
 18511  000618  0E00               	movlw	0
 18512  00061A  24F3               	addwf	prodl,w,c
 18513  00061C  6EE1               	movwf	fsr1l,c
 18514  00061E  0E06               	movlw	6
 18515  000620  20F4               	addwfc	prodh,w,c
 18516  000622  6EE2               	movwf	fsr1h,c
 18517  000624  CFDF FFE7          	movff	indf2,indf1
 18518  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 18519  00062A  D7E8               	goto	l12504
 18520  00062C                     u9330:
 18521                           
 18522                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 18523  00062C  0EFD               	movlw	253
 18524  00062E  0100               	movlb	0	; () banked
 18525  000630  6FE7               	movwf	_MSDCommandState& (0+255),b
 18526                           
 18527                           ;usb_device_msd.c: 827: break;
 18528  000632  0012               	return	
 18529  000634                     l628:
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 18533  000634  0E03               	movlw	3
 18534  000636  CFE8 F600          	movff	wreg,1536
 18535                           
 18536                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 18537  00063A  0E00               	movlw	0
 18538  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 18539                           
 18540                           ; BSR set to: 0
 18541                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 18542  000640  C1E7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 18543  000644  C1E8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 18544  000648  D801               	call	u9348
 18545  00064A  D00A               	goto	u9349
 18546  00064C                     u9348:
 18547  00064C  0005               	push	
 18548  00064E  6EFA               	movwf	pclath,c
 18549  000650  0101               	movlb	1	; () banked
 18550  000652  51E3               	movf	(_LUN+10)& (0+255),w,b
 18551  000654  6EFD               	movwf	tosl,c
 18552  000656  51E4               	movf	(_LUN+11)& (0+255),w,b
 18553  000658  6EFE               	movwf	tosh,c
 18554  00065A  6AFF               	clrf	tosu,c
 18555  00065C  50FA               	movf	pclath,w,c
 18556  00065E  0012               	return		;indir
 18557  000660                     u9349:
 18558  000660  0900               	iorlw	0
 18559  000662  A4D8               	btfss	status,2,c
 18560  000664  D004               	goto	l630
 18561  000666  0E00               	movlw	0
 18562  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18563  00066A  0E00               	movlw	0
 18564  00066C  D003               	goto	L19
 18565  00066E                     l630:
 18566  00066E  0E00               	movlw	0
 18567  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18568  000672  0E80               	movlw	128
 18569  000674                     L19:
 18570  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 18571  000676  EE26 F002          	lfsr	2,1538	;volatile
 18572  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 18573                           
 18574                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 18575  00067E  0E00               	movlw	0
 18576  000680  CFE8 F603          	movff	wreg,1539	;volatile
 18577                           
 18578                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 18579  000684  0E00               	movlw	0
 18580  000686  0100               	movlb	0	; () banked
 18581  000688  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 18582  00068A  0E04               	movlw	4
 18583  00068C  6FD3               	movwf	_TransferLength& (0+255),b
 18584                           
 18585                           ; BSR set to: 0
 18586                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 18587  00068E  0E00               	movlw	0
 18588  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18589  000692  0E04               	movlw	4
 18590  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18591  000696  ECBE  F033         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18592                           
 18593                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 18594  00069A  0EFD               	movlw	253
 18595  00069C  0100               	movlb	0	; () banked
 18596  00069E  6FE7               	movwf	_MSDCommandState& (0+255),b
 18597                           
 18598                           ;usb_device_msd.c: 839: break;
 18599  0006A0  0012               	return	
 18600  0006A2                     
 18601                           ; BSR set to: 0
 18602                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 18603                           
 18604                           ; BSR set to: 0
 18605  0006A2  0101               	movlb	1	; () banked
 18606  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18607  0006A6  0BF0               	andlw	-16
 18608  0006A8  0905               	iorlw	5
 18609  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18610                           
 18611                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 18612  0006AC  0E20               	movlw	32
 18613  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18614                           
 18615                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 18616  0006B0  0E00               	movlw	0
 18617  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18618                           
 18619                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 18620  0006B4  0E01               	movlw	1
 18621  0006B6  010D               	movlb	13	; () banked
 18622  0006B8  6F8C               	movwf	140,b	;volatile
 18623                           
 18624                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 18625  0006BA  0E00               	movlw	0
 18626  0006BC  6F88               	movwf	136,b	;volatile
 18627  0006BE  0E00               	movlw	0
 18628  0006C0  6F89               	movwf	137,b	;volatile
 18629  0006C2  0E00               	movlw	0
 18630  0006C4  6F8A               	movwf	138,b	;volatile
 18631  0006C6  0E00               	movlw	0
 18632  0006C8  6F8B               	movwf	139,b	;volatile
 18633                           
 18634                           ; BSR set to: 13
 18635                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 18636  0006CA  0100               	movlb	0	; () banked
 18637  0006CC  69E7               	setf	_MSDCommandState& (0+255),b
 18638                           
 18639                           ;usb_device_msd.c: 848: break;
 18640  0006CE  0012               	return	
 18641  0006D0                     
 18642                           ; BSR set to: 0
 18643                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 18644                           
 18645                           ; BSR set to: 0
 18646  0006D0  0E00               	movlw	0
 18647  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 18648  0006D4  0E00               	movlw	0
 18649  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 18650  0006D8  0E00               	movlw	0
 18651  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 18652  0006DC  0E00               	movlw	0
 18653  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 18654  0006E0  ECB5  F029         	call	_MSDCheckForErrorCases	;wreg free
 18655  0006E4  0900               	iorlw	0
 18656  0006E6  A4D8               	btfss	status,2,c
 18657  0006E8  0012               	return	
 18658                           
 18659                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 18660                           
 18661                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 18662  0006EA  0101               	movlb	1	; () banked
 18663  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18664  0006EE  0B0F               	andlw	15
 18665  0006F0  0A06               	xorlw	6
 18666  0006F2  A4D8               	btfss	status,2,c
 18667  0006F4  D007               	goto	l636
 18668                           
 18669                           ; BSR set to: 1
 18670  0006F6  010D               	movlb	13	; () banked
 18671  0006F8  058C               	decf	140,w,b	;volatile
 18672  0006FA  A4D8               	btfss	status,2,c
 18673  0006FC  D003               	goto	l636
 18674                           
 18675                           ; BSR set to: 13
 18676                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 18677  0006FE  0100               	movlb	0	; () banked
 18678  000700  69E7               	setf	_MSDCommandState& (0+255),b
 18679                           
 18680                           ;usb_device_msd.c: 870: }
 18681  000702  0012               	return	
 18682  000704                     l636:
 18683                           
 18684                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 18685                           
 18686                           ; BSR set to: 0
 18687  000704  EC56  F03B         	call	_ResetSenseData	;wreg free
 18688                           
 18689                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 18690  000708  0E00               	movlw	0
 18691  00070A  010D               	movlb	13	; () banked
 18692  00070C  6F88               	movwf	136,b	;volatile
 18693  00070E  0E00               	movlw	0
 18694  000710  6F89               	movwf	137,b	;volatile
 18695  000712  0E00               	movlw	0
 18696  000714  6F8A               	movwf	138,b	;volatile
 18697  000716  0E00               	movlw	0
 18698  000718  6F8B               	movwf	139,b	;volatile
 18699                           
 18700                           ; BSR set to: 13
 18701                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 18702  00071A  0100               	movlb	0	; () banked
 18703  00071C  69E7               	setf	_MSDCommandState& (0+255),b
 18704                           
 18705                           ; BSR set to: 0
 18706                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 18707  00071E  0012               	return	
 18708  000720                     
 18709                           ; BSR set to: 0
 18710                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 18711                           
 18712                           ; BSR set to: 0
 18713                           
 18714                           ; BSR set to: 0
 18715  000720  0E00               	movlw	0
 18716  000722  010D               	movlb	13	; () banked
 18717  000724  6F88               	movwf	136,b	;volatile
 18718  000726  0E00               	movlw	0
 18719  000728  6F89               	movwf	137,b	;volatile
 18720  00072A  0E00               	movlw	0
 18721  00072C  6F8A               	movwf	138,b	;volatile
 18722  00072E  0E00               	movlw	0
 18723  000730  6F8B               	movwf	139,b	;volatile
 18724                           
 18725                           ; BSR set to: 13
 18726                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 18727  000732  0100               	movlb	0	; () banked
 18728  000734  69E7               	setf	_MSDCommandState& (0+255),b
 18729                           
 18730                           ;usb_device_msd.c: 885: break;
 18731  000736  0012               	return	
 18732  000738                     
 18733                           ; BSR set to: 0
 18734                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 18735                           
 18736                           ; BSR set to: 0
 18737  000738  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 18738  00073A  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 18739  00073C  B4D8               	btfsc	status,2,c
 18740  00073E  D006               	goto	u9400
 18741                           
 18742                           ; BSR set to: 0
 18743  000740  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 18744  000744  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 18745  000748  BEDF               	btfsc	indf2,7,c
 18746  00074A  0012               	return	
 18747  00074C                     u9400:
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 18751                           
 18752                           ; BSR set to: 0
 18753  00074C  0101               	movlb	1	; () banked
 18754  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 18755  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18756  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18757  000754  E104               	bnz	u9410
 18758  000756  0E40               	movlw	64
 18759  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 18760  00075A  A0D8               	btfss	status,0,c
 18761  00075C  D009               	goto	l644
 18762  00075E                     u9410:
 18763                           
 18764                           ; BSR set to: 1
 18765                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 18766  00075E  0E40               	movlw	64
 18767  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 18768                           
 18769                           ; BSR set to: 1
 18770                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 18771  000762  0E40               	movlw	64
 18772  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 18773  000766  0E00               	movlw	0
 18774  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 18775  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 18776  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 18777                           
 18778                           ;usb_device_msd.c: 900: }
 18779  00076E  D00A               	goto	l645
 18780  000770                     l644:
 18781                           
 18782                           ; BSR set to: 1
 18783                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 18784  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 18785                           
 18786                           ; BSR set to: 1
 18787                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 18788  000774  0E00               	movlw	0
 18789  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 18790  000778  0E00               	movlw	0
 18791  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 18792  00077C  0E00               	movlw	0
 18793  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 18794  000780  0E00               	movlw	0
 18795  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 18796  000784                     l645:
 18797                           
 18798                           ; BSR set to: 1
 18799                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 18800                           
 18801                           ; BSR set to: 1
 18802  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 18803  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 18804  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 18805  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 18806  00078C  0100               	movlb	0	; () banked
 18807  00078E  5DD3               	subwf	_TransferLength& (0+255),w,b
 18808  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 18809  000792  59D4               	subwfb	(_TransferLength+1)& (0+255),w,b
 18810  000794  A0D8               	btfss	status,0,c
 18811  000796  D005               	goto	l646
 18812                           
 18813                           ; BSR set to: 0
 18814                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 18815  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 18816  00079A  5FD3               	subwf	_TransferLength& (0+255),f,b
 18817  00079C  0E00               	movlw	0
 18818  00079E  5BD4               	subwfb	(_TransferLength+1)& (0+255),f,b
 18819                           
 18820                           ;usb_device_msd.c: 918: }
 18821  0007A0  D01A               	goto	u9440
 18822  0007A2                     l646:
 18823                           
 18824                           ; BSR set to: 0
 18825                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 18826                           
 18827                           ; BSR set to: 0
 18828  0007A2  0E00               	movlw	0
 18829  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 18830  0007A6  D013               	goto	l648
 18831  0007A8                     
 18832                           ; BSR set to: 0
 18833                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 18834                           
 18835                           ; BSR set to: 0
 18836  0007A8  51D3               	movf	_TransferLength& (0+255),w,b
 18837  0007AA  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 18838  0007AC  B4D8               	btfsc	status,2,c
 18839  0007AE  D004               	goto	l650
 18840                           
 18841                           ; BSR set to: 0
 18842                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 18843  0007B0  07D3               	decf	_TransferLength& (0+255),f,b
 18844  0007B2  A0D8               	btfss	status,0,c
 18845  0007B4  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 18846                           
 18847                           ;usb_device_msd.c: 932: }
 18848  0007B6  D00A               	goto	l651
 18849  0007B8                     l650:
 18850                           
 18851                           ; BSR set to: 0
 18852                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 18853                           
 18854                           ; BSR set to: 0
 18855  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18856  0007BA  0D01               	mullw	1
 18857  0007BC  0E00               	movlw	0
 18858  0007BE  24F3               	addwf	prodl,w,c
 18859  0007C0  6ED9               	movwf	fsr2l,c
 18860  0007C2  0E06               	movlw	6
 18861  0007C4  20F4               	addwfc	prodh,w,c
 18862  0007C6  6EDA               	movwf	fsr2h,c
 18863  0007C8  0E00               	movlw	0
 18864  0007CA  6EDF               	movwf	indf2,c
 18865  0007CC                     l651:
 18866                           
 18867                           ; BSR set to: 0
 18868                           
 18869                           ; BSR set to: 0
 18870  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 18871  0007CE                     l648:
 18872                           
 18873                           ; BSR set to: 0
 18874                           
 18875                           ; BSR set to: 0
 18876  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 18877  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 18878  0007D2  A0D8               	btfss	status,0,c
 18879  0007D4  D7E9               	goto	l649
 18880  0007D6                     u9440:
 18881                           
 18882                           ; BSR set to: 0
 18883                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 18884                           
 18885                           ; BSR set to: 0
 18886                           
 18887                           ; BSR set to: 0
 18888  0007D6  0E01               	movlw	1
 18889  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 18890  0007DA  0E00               	movlw	0
 18891  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 18892  0007DE  0E06               	movlw	6
 18893  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 18894  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 18895  0007E6  0E02               	movlw	2
 18896  0007E8  ECEB  F026         	call	_USBTransferOnePacket
 18897  0007EC  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 18898  0007F0  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 18899                           
 18900                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 18901  0007F4  0101               	movlb	1	; () banked
 18902  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 18903  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18904  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18905  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 18906  0007FE  A4D8               	btfss	status,2,c
 18907  000800  0012               	return	
 18908                           
 18909                           ; BSR set to: 1
 18910                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 18911  000802  0100               	movlb	0	; () banked
 18912  000804  69E7               	setf	_MSDCommandState& (0+255),b
 18913                           
 18914                           ; BSR set to: 0
 18915                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 18916                           
 18917                           ; BSR set to: 0
 18918                           
 18919                           ;usb_device_msd.c: 949: break;
 18920  000806  0012               	return	
 18921  000808                     
 18922                           ; BSR set to: 0
 18923                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 18924                           
 18925                           ; BSR set to: 0
 18926                           
 18927                           ;usb_device_msd.c: 954: default:
 18928                           
 18929                           ; BSR set to: 0
 18930  000808  0E7F               	movlw	127
 18931  00080A  EC68  F026         	call	_MSDErrorHandler
 18932                           
 18933                           ;usb_device_msd.c: 960: }
 18934                           
 18935                           ;usb_device_msd.c: 959: break;
 18936  00080E  0012               	return	
 18937  000810                     l614:
 18938  000810  0100               	movlb	0	; () banked
 18939  000812  51E7               	movf	_MSDCommandState& (0+255),w,b
 18940                           
 18941                           ; Switch size 1, requested type "space"
 18942                           ; Number of cases is 12, Range of values is 0 to 254
 18943                           ; switch strategies available:
 18944                           ; Name         Instructions Cycles
 18945                           ; simple_byte           37    19 (average)
 18946                           ;	Chosen strategy is simple_byte
 18947  000814  0A00               	xorlw	0	; case 0
 18948  000816  B4D8               	btfsc	status,2,c
 18949  000818  D75B               	goto	l634
 18950  00081A  0A03               	xorlw	3	; case 3
 18951  00081C  B4D8               	btfsc	status,2,c
 18952  00081E  D6DD               	goto	l624
 18953  000820  0A11               	xorlw	17	; case 18
 18954  000822  B4D8               	btfsc	status,2,c
 18955  000824  D64C               	goto	l620
 18956  000826  0A08               	xorlw	8	; case 26
 18957  000828  B4D8               	btfsc	status,2,c
 18958  00082A  D704               	goto	l628
 18959  00082C  0A01               	xorlw	1	; case 27
 18960  00082E  B4D8               	btfsc	status,2,c
 18961  000830  D777               	goto	l638
 18962  000832  0A05               	xorlw	5	; case 30
 18963  000834  B4D8               	btfsc	status,2,c
 18964  000836  D735               	goto	l633
 18965  000838  0A3B               	xorlw	59	; case 37
 18966  00083A  B4D8               	btfsc	status,2,c
 18967  00083C  D671               	goto	l623
 18968  00083E  0A0D               	xorlw	13	; case 40
 18969  000840  B4D8               	btfsc	status,2,c
 18970  000842  D62D               	goto	l615
 18971  000844  0A02               	xorlw	2	; case 42
 18972  000846  B4D8               	btfsc	status,2,c
 18973  000848  D632               	goto	l618
 18974  00084A  0A05               	xorlw	5	; case 47
 18975  00084C  B4D8               	btfsc	status,2,c
 18976  00084E  D768               	goto	l638
 18977  000850  0AD2               	xorlw	210	; case 253
 18978  000852  B4D8               	btfsc	status,2,c
 18979  000854  D771               	goto	l640
 18980  000856  0A03               	xorlw	3	; case 254
 18981  000858  D7D7               	goto	l654
 18982  00085A                     __end_of_MSDProcessCommandMediaPresent:
 18983                           	opt stack 0
 18984                           tosu	equ	0xFFF
 18985                           tosh	equ	0xFFE
 18986                           tosl	equ	0xFFD
 18987                           pclath	equ	0xFFA
 18988                           tblptru	equ	0xFF8
 18989                           tblptrh	equ	0xFF7
 18990                           tblptrl	equ	0xFF6
 18991                           tablat	equ	0xFF5
 18992                           prodh	equ	0xFF4
 18993                           prodl	equ	0xFF3
 18994                           intcon	equ	0xFF2
 18995                           intcon2	equ	0xFF1
 18996                           intcon3	equ	0xFF0
 18997                           indf0	equ	0xFEF
 18998                           postinc0	equ	0xFEE
 18999                           fsr0h	equ	0xFEA
 19000                           fsr0l	equ	0xFE9
 19001                           wreg	equ	0xFE8
 19002                           indf1	equ	0xFE7
 19003                           postdec1	equ	0xFE5
 19004                           plusw1	equ	0xFE3
 19005                           fsr1h	equ	0xFE2
 19006                           fsr1l	equ	0xFE1
 19007                           indf2	equ	0xFDF
 19008                           postinc2	equ	0xFDE
 19009                           postdec2	equ	0xFDD
 19010                           plusw2	equ	0xFDB
 19011                           fsr2h	equ	0xFDA
 19012                           fsr2l	equ	0xFD9
 19013                           status	equ	0xFD8
 19014                           
 19015 ;; *************** function _MSDWriteHandler *****************
 19016 ;; Defined at:
 19017 ;;		line 1188 in file "usb_device_msd.c"
 19018 ;; Parameters:    Size  Location     Type
 19019 ;;		None
 19020 ;; Auto vars:     Size  Location     Type
 19021 ;;		None
 19022 ;; Return value:  Size  Location     Type
 19023 ;;                  1    wreg      unsigned char 
 19024 ;; Registers used:
 19025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19026 ;; Tracked objects:
 19027 ;;		On entry : 0/0
 19028 ;;		On exit  : 0/0
 19029 ;;		Unchanged: 0/0
 19030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19033 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19034 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19035 ;;Total ram usage:        5 bytes
 19036 ;; Hardware stack levels used:    1
 19037 ;; Hardware stack levels required when called:    6
 19038 ;; This function calls:
 19039 ;;		_ExternalFlash_SectorWrite
 19040 ;;		_ExternalFlash_WriteProtectStateGet
 19041 ;;		_MSDCheckForErrorCases
 19042 ;;		_USBStallEndpoint
 19043 ;;		_USBTransferOnePacket
 19044 ;; This function is called by:
 19045 ;;		_MSDProcessCommandMediaPresent
 19046 ;; This function uses a non-reentrant model
 19047 ;;
 19048                           
 19049                           	psect	text87
 19050  001590                     __ptext87:
 19051                           	opt stack 0
 19052  001590                     _MSDWriteHandler:
 19053                           	opt stack 20
 19054                           
 19055                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 19056                           
 19057                           ;incstack = 0
 19058  001590  D146               	goto	l684
 19059  001592                     l685:
 19060                           
 19061                           ; BSR set to: 0
 19062                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 19063  001592  C111  F15D         	movff	_gblCBW+17,_LBA+3
 19064                           
 19065                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 19066  001596  C112  F15C         	movff	_gblCBW+18,_LBA+2
 19067                           
 19068                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 19069  00159A  C113  F15B         	movff	_gblCBW+19,_LBA+1
 19070                           
 19071                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 19072  00159E  C114  F15A         	movff	_gblCBW+20,_LBA
 19073                           
 19074                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 19075  0015A2  C116  F0D4         	movff	_gblCBW+22,_TransferLength+1
 19076                           
 19077                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 19078  0015A6  C117  F0D3         	movff	_gblCBW+23,_TransferLength
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19082  0015AA  51D3               	movf	_TransferLength& (0+255),w,b
 19083  0015AC  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19084  0015AE  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 19085  0015B0  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 19086  0015B2  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19087  0015B4  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19088  0015B6  0E09               	movlw	9
 19089  0015B8                     u7935:
 19090  0015B8  90D8               	bcf	status,0,c
 19091  0015BA  3630               	rlcf	??_MSDWriteHandler,f,c
 19092  0015BC  3631               	rlcf	??_MSDWriteHandler+1,f,c
 19093  0015BE  3632               	rlcf	??_MSDWriteHandler+2,f,c
 19094  0015C0  3633               	rlcf	??_MSDWriteHandler+3,f,c
 19095  0015C2  2EE8               	decfsz	wreg,f,c
 19096  0015C4  D7F9               	goto	u7935
 19097  0015C6  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 19098  0015CA  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19099  0015CE  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19100  0015D2  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19101  0015D6  ECB5  F029         	call	_MSDCheckForErrorCases	;wreg free
 19102  0015DA  0900               	iorlw	0
 19103  0015DC  A4D8               	btfss	status,2,c
 19104  0015DE  D131               	goto	l687
 19105                           
 19106                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 19107                           
 19108                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 19109  0015E0  C1E7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19110  0015E4  C1E8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19111  0015E8  D801               	call	u7958
 19112  0015EA  D00A               	goto	u7959
 19113  0015EC                     u7958:
 19114  0015EC  0005               	push	
 19115  0015EE  6EFA               	movwf	pclath,c
 19116  0015F0  0101               	movlb	1	; () banked
 19117  0015F2  51E3               	movf	(_LUN+10)& (0+255),w,b
 19118  0015F4  6EFD               	movwf	tosl,c
 19119  0015F6  51E4               	movf	(_LUN+11)& (0+255),w,b
 19120  0015F8  6EFE               	movwf	tosh,c
 19121  0015FA  6AFF               	clrf	tosu,c
 19122  0015FC  50FA               	movf	pclath,w,c
 19123  0015FE  0012               	return		;indir
 19124  001600                     u7959:
 19125  001600  0900               	iorlw	0
 19126  001602  B4D8               	btfsc	status,2,c
 19127  001604  D016               	goto	l688
 19128                           
 19129                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 19130  001606  0E01               	movlw	1
 19131  001608  010D               	movlb	13	; () banked
 19132  00160A  6F8C               	movwf	140,b	;volatile
 19133                           
 19134                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 19135  00160C  0101               	movlb	1	; () banked
 19136  00160E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19137  001610  0BF0               	andlw	-16
 19138  001612  0907               	iorlw	7
 19139  001614  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19140                           
 19141                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 19142  001616  0E27               	movlw	39
 19143  001618  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19144                           
 19145                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 19146  00161A  0E00               	movlw	0
 19147  00161C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19148                           
 19149                           ; BSR set to: 1
 19150                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 19151  00161E  0E00               	movlw	0
 19152  001620  6E01               	movwf	USBStallEndpoint@dir,c
 19153  001622  0E02               	movlw	2
 19154  001624  ECDE  F024         	call	_USBStallEndpoint
 19155                           
 19156                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 19157  001628  0E00               	movlw	0
 19158  00162A  0100               	movlb	0	; () banked
 19159  00162C  6FE5               	movwf	_MSDWriteState& (0+255),b
 19160                           
 19161                           ; BSR set to: 0
 19162                           ;usb_device_msd.c: 1228: return MSDWriteState;
 19163  00162E  51E5               	movf	_MSDWriteState& (0+255),w,b
 19164                           
 19165                           ; BSR set to: 0
 19166  001630  0012               	return	
 19167  001632                     l688:
 19168                           
 19169                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 19170                           
 19171                           ; BSR set to: 0
 19172  001632  0E01               	movlw	1
 19173  001634  0100               	movlb	0	; () banked
 19174  001636  6FE8               	movwf	_MSD_State& (0+255),b
 19175  001638                     
 19176                           ; BSR set to: 0
 19177                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 19178                           
 19179                           ; BSR set to: 0
 19180  001638  51D3               	movf	_TransferLength& (0+255),w,b
 19181  00163A  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 19182  00163C  A4D8               	btfss	status,2,c
 19183  00163E  D002               	goto	l691
 19184                           
 19185                           ; BSR set to: 0
 19186                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 19187  001640  0E00               	movlw	0
 19188  001642  D056               	goto	L20
 19189  001644                     l691:
 19190                           
 19191                           ; BSR set to: 0
 19192                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 19193                           
 19194                           ; BSR set to: 0
 19195  001644  0E03               	movlw	3
 19196  001646  6FE5               	movwf	_MSDWriteState& (0+255),b
 19197                           
 19198                           ; BSR set to: 0
 19199                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 19200  001648  0E00               	movlw	0
 19201  00164A  0101               	movlb	1	; () banked
 19202  00164C  6F82               	movwf	_ptrNextData& (0+255),b
 19203  00164E  0E06               	movlw	6
 19204  001650  6F83               	movwf	(_ptrNextData+1)& (0+255),b
 19205                           
 19206                           ; BSR set to: 1
 19207                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 19208  001652  0E00               	movlw	0
 19209  001654  010D               	movlb	13	; () banked
 19210  001656  6F88               	movwf	136,b	;volatile
 19211  001658  0E02               	movlw	2
 19212  00165A  6F89               	movwf	137,b	;volatile
 19213  00165C  0E00               	movlw	0
 19214  00165E  6F8A               	movwf	138,b	;volatile
 19215  001660  0E00               	movlw	0
 19216  001662  6F8B               	movwf	139,b	;volatile
 19217  001664                     l692:
 19218                           
 19219                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 19220  001664  010D               	movlb	13	; () banked
 19221  001666  5188               	movf	136,w,b	;volatile
 19222  001668  1189               	iorwf	137,w,b	;volatile
 19223  00166A  118A               	iorwf	138,w,b	;volatile
 19224  00166C  118B               	iorwf	139,w,b	;volatile
 19225  00166E  B4D8               	btfsc	status,2,c
 19226  001670  D01E               	goto	l693
 19227                           
 19228                           ; BSR set to: 13
 19229                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 19230  001672  0100               	movlb	0	; () banked
 19231  001674  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 19232  001676  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19233  001678  B4D8               	btfsc	status,2,c
 19234  00167A  D006               	goto	l694
 19235                           
 19236                           ; BSR set to: 0
 19237  00167C  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19238  001680  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19239  001684  BEDF               	btfsc	indf2,7,c
 19240  001686  D0DD               	goto	l687
 19241  001688                     l694:
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 19245                           
 19246                           ; BSR set to: 0
 19247  001688  0E00               	movlw	0
 19248  00168A  6E01               	movwf	USBTransferOnePacket@dir,c
 19249  00168C  C182  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 19250  001690  C183  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 19251  001694  0E40               	movlw	64
 19252  001696  6E04               	movwf	USBTransferOnePacket@len,c
 19253  001698  0E02               	movlw	2
 19254  00169A  ECEB  F026         	call	_USBTransferOnePacket
 19255  00169E  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19256  0016A2  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19257                           
 19258                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 19259  0016A6  0E04               	movlw	4
 19260  0016A8  0100               	movlb	0	; () banked
 19261  0016AA  6FE5               	movwf	_MSDWriteState& (0+255),b
 19262                           
 19263                           ;usb_device_msd.c: 1260: }
 19264  0016AC  D023               	goto	l695
 19265  0016AE                     l693:
 19266                           
 19267                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 19268                           
 19269                           ; BSR set to: 0
 19270  0016AE  C1E7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19271  0016B2  C1E8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19272  0016B6  D801               	call	u8018
 19273  0016B8  D00A               	goto	u8019
 19274  0016BA                     u8018:
 19275  0016BA  0005               	push	
 19276  0016BC  6EFA               	movwf	pclath,c
 19277  0016BE  0101               	movlb	1	; () banked
 19278  0016C0  51E3               	movf	(_LUN+10)& (0+255),w,b
 19279  0016C2  6EFD               	movwf	tosl,c
 19280  0016C4  51E4               	movf	(_LUN+11)& (0+255),w,b
 19281  0016C6  6EFE               	movwf	tosh,c
 19282  0016C8  6AFF               	clrf	tosu,c
 19283  0016CA  50FA               	movf	pclath,w,c
 19284  0016CC  0012               	return		;indir
 19285  0016CE                     u8019:
 19286  0016CE  0900               	iorlw	0
 19287  0016D0  B4D8               	btfsc	status,2,c
 19288  0016D2  D00C               	goto	l696
 19289                           
 19290                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 19291  0016D4  0E01               	movlw	1
 19292  0016D6  010D               	movlb	13	; () banked
 19293  0016D8  6F8C               	movwf	140,b	;volatile
 19294                           
 19295                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 19296  0016DA  0101               	movlb	1	; () banked
 19297  0016DC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19298  0016DE  0BF0               	andlw	-16
 19299  0016E0  0902               	iorlw	2
 19300  0016E2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19301                           
 19302                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 19303  0016E4  0E27               	movlw	39
 19304  0016E6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19305                           
 19306                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 19307  0016E8  0E00               	movlw	0
 19308  0016EA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19309  0016EC                     l696:
 19310                           
 19311                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 19312  0016EC  0E02               	movlw	2
 19313  0016EE  D095               	goto	L22
 19314  0016F0                     L20:
 19315  0016F0  6FE5               	movwf	_MSDWriteState& (0+255),b
 19316                           
 19317                           ;usb_device_msd.c: 1280: break;
 19318  0016F2  D0A7               	goto	l687
 19319  0016F4                     l695:
 19320                           
 19321                           ; BSR set to: 0
 19322                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 19323                           
 19324                           ; BSR set to: 0
 19325                           
 19326                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 19327                           
 19328                           ; BSR set to: 0
 19329  0016F4  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 19330  0016F6  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19331  0016F8  B4D8               	btfsc	status,2,c
 19332  0016FA  D006               	goto	l698
 19333                           
 19334                           ; BSR set to: 0
 19335  0016FC  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19336  001700  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19337  001704  BEDF               	btfsc	indf2,7,c
 19338  001706  D09D               	goto	l687
 19339  001708                     l698:
 19340                           
 19341                           ; BSR set to: 0
 19342                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 19343                           
 19344                           ; BSR set to: 0
 19345  001708  EE20 F001          	lfsr	2,1
 19346  00170C  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 19347  00170E  26D9               	addwf	fsr2l,f,c
 19348  001710  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19349  001712  22DA               	addwfc	fsr2h,f,c
 19350  001714  50DF               	movf	indf2,w,c
 19351  001716  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19352  001718  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19353  00171C  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19354  00171E  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19355  001720  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19356  001722  5031               	movf	??_MSDWriteHandler+1,w,c
 19357  001724  0101               	movlb	1	; () banked
 19358  001726  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19359  001728  5032               	movf	??_MSDWriteHandler+2,w,c
 19360  00172A  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19361  00172C  5033               	movf	??_MSDWriteHandler+3,w,c
 19362  00172E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19363  001730  5034               	movf	??_MSDWriteHandler+4,w,c
 19364  001732  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19365                           
 19366                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 19367  001734  0100               	movlb	0	; () banked
 19368  001736  EE20 F001          	lfsr	2,1
 19369  00173A  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 19370  00173C  26D9               	addwf	fsr2l,f,c
 19371  00173E  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19372  001740  22DA               	addwfc	fsr2h,f,c
 19373  001742  50DF               	movf	indf2,w,c
 19374  001744  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19375  001746  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19376  00174A  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19377  00174C  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19378  00174E  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19379  001750  5031               	movf	??_MSDWriteHandler+1,w,c
 19380  001752  010D               	movlb	13	; () banked
 19381  001754  5F88               	subwf	136,f,b	;volatile
 19382  001756  5032               	movf	??_MSDWriteHandler+2,w,c
 19383  001758  5B89               	subwfb	137,f,b	;volatile
 19384  00175A  5033               	movf	??_MSDWriteHandler+3,w,c
 19385  00175C  5B8A               	subwfb	138,f,b	;volatile
 19386  00175E  5034               	movf	??_MSDWriteHandler+4,w,c
 19387  001760  5B8B               	subwfb	139,f,b	;volatile
 19388                           
 19389                           ; BSR set to: 13
 19390                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 19391  001762  0E40               	movlw	64
 19392  001764  0101               	movlb	1	; () banked
 19393  001766  2782               	addwf	_ptrNextData& (0+255),f,b
 19394  001768  0E00               	movlw	0
 19395  00176A  2383               	addwfc	(_ptrNextData+1)& (0+255),f,b
 19396                           
 19397                           ; BSR set to: 1
 19398                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 19399  00176C  0E03               	movlw	3
 19400  00176E  D055               	goto	L22
 19401  001770                     
 19402                           ; BSR set to: 0
 19403                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 19404                           
 19405                           ; BSR set to: 0
 19406  001770  010D               	movlb	13	; () banked
 19407  001772  518C               	movf	140,w,b	;volatile
 19408  001774  A4D8               	btfss	status,2,c
 19409  001776  D03B               	goto	l703
 19410                           
 19411                           ; BSR set to: 13
 19412                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 19413  001778  C1E7  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 19414  00177C  C1E8  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 19415  001780  C15A  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 19416  001784  C15B  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 19417  001788  C15C  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 19418  00178C  C15D  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 19419  001790  0E00               	movlw	0
 19420  001792  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 19421  001794  0E06               	movlw	6
 19422  001796  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 19423  001798  0101               	movlb	1	; () banked
 19424  00179A  515A               	movf	_LBA& (0+255),w,b
 19425  00179C  115B               	iorwf	(_LBA+1)& (0+255),w,b
 19426  00179E  115C               	iorwf	(_LBA+2)& (0+255),w,b
 19427  0017A0  115D               	iorwf	(_LBA+3)& (0+255),w,b
 19428  0017A2  A4D8               	btfss	status,2,c
 19429  0017A4  D002               	goto	u8060
 19430  0017A6  0E01               	movlw	1
 19431  0017A8  D001               	goto	u8070
 19432  0017AA                     u8060:
 19433  0017AA  0E00               	movlw	0
 19434  0017AC                     u8070:
 19435  0017AC  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 19436  0017AE  D801               	call	u8088
 19437  0017B0  D009               	goto	u8089
 19438  0017B2                     u8088:
 19439  0017B2  0005               	push	
 19440  0017B4  6EFA               	movwf	pclath,c
 19441  0017B6  51E5               	movf	(_LUN+12)& (0+255),w,b
 19442  0017B8  6EFD               	movwf	tosl,c
 19443  0017BA  51E6               	movf	(_LUN+13)& (0+255),w,b
 19444  0017BC  6EFE               	movwf	tosh,c
 19445  0017BE  6AFF               	clrf	tosu,c
 19446  0017C0  50FA               	movf	pclath,w,c
 19447  0017C2  0012               	return		;indir
 19448  0017C4                     u8089:
 19449  0017C4  06E8               	decf	wreg,f,c
 19450  0017C6  B4D8               	btfsc	status,2,c
 19451  0017C8  D012               	goto	l703
 19452                           
 19453                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 19454  0017CA  0E64               	movlw	100
 19455  0017CC  0100               	movlb	0	; () banked
 19456  0017CE  61E4               	cpfslt	_MSDRetryAttempt& (0+255),b
 19457  0017D0  D002               	goto	l702
 19458                           
 19459                           ; BSR set to: 0
 19460                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 19461  0017D2  2BE4               	incf	_MSDRetryAttempt& (0+255),f,b
 19462                           
 19463                           ;usb_device_msd.c: 1314: break;
 19464  0017D4  D036               	goto	l687
 19465  0017D6                     l702:
 19466                           
 19467                           ; BSR set to: 0
 19468                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 19469                           
 19470                           ; BSR set to: 0
 19471  0017D6  0E01               	movlw	1
 19472  0017D8  010D               	movlb	13	; () banked
 19473  0017DA  6F8C               	movwf	140,b	;volatile
 19474                           
 19475                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 19476  0017DC  0101               	movlb	1	; () banked
 19477  0017DE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19478  0017E0  0BF0               	andlw	-16
 19479  0017E2  0903               	iorlw	3
 19480  0017E4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19481                           
 19482                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 19483  0017E6  0E00               	movlw	0
 19484  0017E8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19485                           
 19486                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 19487  0017EA  0E00               	movlw	0
 19488  0017EC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19489  0017EE                     l703:
 19490                           
 19491                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 19492                           
 19493                           ; BSR set to: 1
 19494                           
 19495                           ; BSR set to: 1
 19496                           
 19497                           ; BSR set to: 1
 19498  0017EE  0E01               	movlw	1
 19499  0017F0  0101               	movlb	1	; () banked
 19500  0017F2  275A               	addwf	_LBA& (0+255),f,b
 19501  0017F4  0E00               	movlw	0
 19502  0017F6  235B               	addwfc	(_LBA+1)& (0+255),f,b
 19503  0017F8  235C               	addwfc	(_LBA+2)& (0+255),f,b
 19504  0017FA  235D               	addwfc	(_LBA+3)& (0+255),f,b
 19505                           
 19506                           ; BSR set to: 1
 19507                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 19508  0017FC  0100               	movlb	0	; () banked
 19509  0017FE  07D3               	decf	_TransferLength& (0+255),f,b
 19510  001800  A0D8               	btfss	status,0,c
 19511  001802  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 19512                           
 19513                           ; BSR set to: 0
 19514                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 19515  001804  0E01               	movlw	1
 19516  001806  D774               	goto	L20
 19517  001808                     
 19518                           ; BSR set to: 0
 19519                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 19520                           
 19521                           ; BSR set to: 0
 19522  001808  0E02               	movlw	2
 19523  00180A  010D               	movlb	13	; () banked
 19524  00180C  6F8C               	movwf	140,b	;volatile
 19525                           
 19526                           ; BSR set to: 13
 19527                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 19528  00180E  0E00               	movlw	0
 19529  001810  6E01               	movwf	USBStallEndpoint@dir,c
 19530  001812  0E02               	movlw	2
 19531  001814  ECDE  F024         	call	_USBStallEndpoint
 19532                           
 19533                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 19534  001818  0E00               	movlw	0
 19535  00181A                     L22:
 19536  00181A  0100               	movlb	0	; () banked
 19537  00181C  D769               	goto	L20
 19538  00181E                     l684:
 19539                           
 19540                           ; BSR set to: 0
 19541  00181E  0100               	movlb	0	; () banked
 19542  001820  51E5               	movf	_MSDWriteState& (0+255),w,b
 19543                           
 19544                           ; Switch size 1, requested type "space"
 19545                           ; Number of cases is 5, Range of values is 0 to 4
 19546                           ; switch strategies available:
 19547                           ; Name         Instructions Cycles
 19548                           ; simple_byte           16     9 (average)
 19549                           ;	Chosen strategy is simple_byte
 19550  001822  0A00               	xorlw	0	; case 0
 19551  001824  B4D8               	btfsc	status,2,c
 19552  001826  D6B5               	goto	l685
 19553  001828  0A01               	xorlw	1	; case 1
 19554  00182A  B4D8               	btfsc	status,2,c
 19555  00182C  D705               	goto	l690
 19556  00182E  0A03               	xorlw	3	; case 2
 19557  001830  B4D8               	btfsc	status,2,c
 19558  001832  D79E               	goto	l699
 19559  001834  0A01               	xorlw	1	; case 3
 19560  001836  B4D8               	btfsc	status,2,c
 19561  001838  D715               	goto	l692
 19562  00183A  0A07               	xorlw	7	; case 4
 19563  00183C  B4D8               	btfsc	status,2,c
 19564  00183E  D75A               	goto	l695
 19565  001840  D7E3               	goto	l704
 19566  001842                     l687:
 19567                           
 19568                           ;usb_device_msd.c: 1347: return MSDWriteState;
 19569                           
 19570                           ; BSR set to: 0
 19571  001842  0100               	movlb	0	; () banked
 19572  001844  51E5               	movf	_MSDWriteState& (0+255),w,b
 19573  001846  0012               	return	
 19574  001848                     __end_of_MSDWriteHandler:
 19575                           	opt stack 0
 19576                           tosu	equ	0xFFF
 19577                           tosh	equ	0xFFE
 19578                           tosl	equ	0xFFD
 19579                           pclath	equ	0xFFA
 19580                           tblptru	equ	0xFF8
 19581                           tblptrh	equ	0xFF7
 19582                           tblptrl	equ	0xFF6
 19583                           tablat	equ	0xFF5
 19584                           prodh	equ	0xFF4
 19585                           prodl	equ	0xFF3
 19586                           intcon	equ	0xFF2
 19587                           intcon2	equ	0xFF1
 19588                           intcon3	equ	0xFF0
 19589                           indf0	equ	0xFEF
 19590                           postinc0	equ	0xFEE
 19591                           fsr0h	equ	0xFEA
 19592                           fsr0l	equ	0xFE9
 19593                           wreg	equ	0xFE8
 19594                           indf1	equ	0xFE7
 19595                           postdec1	equ	0xFE5
 19596                           plusw1	equ	0xFE3
 19597                           fsr1h	equ	0xFE2
 19598                           fsr1l	equ	0xFE1
 19599                           indf2	equ	0xFDF
 19600                           postinc2	equ	0xFDE
 19601                           postdec2	equ	0xFDD
 19602                           plusw2	equ	0xFDB
 19603                           fsr2h	equ	0xFDA
 19604                           fsr2l	equ	0xFD9
 19605                           status	equ	0xFD8
 19606                           
 19607 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 19608 ;; Defined at:
 19609 ;;		line 34 in file "external_flash.c"
 19610 ;; Parameters:    Size  Location     Type
 19611 ;;  config          2    0[COMRAM] PTR void 
 19612 ;;		 -> NULL(0), 
 19613 ;; Auto vars:     Size  Location     Type
 19614 ;;		None
 19615 ;; Return value:  Size  Location     Type
 19616 ;;                  1    wreg      unsigned char 
 19617 ;; Registers used:
 19618 ;;		wreg
 19619 ;; Tracked objects:
 19620 ;;		On entry : 0/0
 19621 ;;		On exit  : 0/0
 19622 ;;		Unchanged: 0/0
 19623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19628 ;;Total ram usage:        2 bytes
 19629 ;; Hardware stack levels used:    1
 19630 ;; This function calls:
 19631 ;;		Nothing
 19632 ;; This function is called by:
 19633 ;;		_MSDWriteHandler
 19634 ;;		_MSDProcessCommandMediaPresent
 19635 ;; This function uses a non-reentrant model
 19636 ;;
 19637                           
 19638                           	psect	text88
 19639  0089BC                     __ptext88:
 19640                           	opt stack 0
 19641  0089BC                     _ExternalFlash_WriteProtectStateGet:
 19642                           	opt stack 25
 19643                           
 19644                           ;external_flash.c: 37: return 0;
 19645                           
 19646                           ; BSR set to: 0
 19647                           ;incstack = 0
 19648  0089BC  0E00               	movlw	0
 19649  0089BE  0012               	return	
 19650  0089C0                     __end_of_ExternalFlash_WriteProtectStateGet:
 19651                           	opt stack 0
 19652                           tosu	equ	0xFFF
 19653                           tosh	equ	0xFFE
 19654                           tosl	equ	0xFFD
 19655                           pclath	equ	0xFFA
 19656                           tblptru	equ	0xFF8
 19657                           tblptrh	equ	0xFF7
 19658                           tblptrl	equ	0xFF6
 19659                           tablat	equ	0xFF5
 19660                           prodh	equ	0xFF4
 19661                           prodl	equ	0xFF3
 19662                           intcon	equ	0xFF2
 19663                           intcon2	equ	0xFF1
 19664                           intcon3	equ	0xFF0
 19665                           indf0	equ	0xFEF
 19666                           postinc0	equ	0xFEE
 19667                           fsr0h	equ	0xFEA
 19668                           fsr0l	equ	0xFE9
 19669                           wreg	equ	0xFE8
 19670                           indf1	equ	0xFE7
 19671                           postdec1	equ	0xFE5
 19672                           plusw1	equ	0xFE3
 19673                           fsr1h	equ	0xFE2
 19674                           fsr1l	equ	0xFE1
 19675                           indf2	equ	0xFDF
 19676                           postinc2	equ	0xFDE
 19677                           postdec2	equ	0xFDD
 19678                           plusw2	equ	0xFDB
 19679                           fsr2h	equ	0xFDA
 19680                           fsr2l	equ	0xFD9
 19681                           status	equ	0xFD8
 19682                           
 19683 ;; *************** function _ExternalFlash_SectorWrite *****************
 19684 ;; Defined at:
 19685 ;;		line 56 in file "external_flash.c"
 19686 ;; Parameters:    Size  Location     Type
 19687 ;;  config          2   36[COMRAM] PTR void 
 19688 ;;		 -> NULL(0), 
 19689 ;;  sector_addr     4   38[COMRAM] unsigned long 
 19690 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 19691 ;;		 -> msd_buffer(512), 
 19692 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 19693 ;; Auto vars:     Size  Location     Type
 19694 ;;  page            2   45[COMRAM] unsigned int 
 19695 ;; Return value:  Size  Location     Type
 19696 ;;                  1    wreg      unsigned char 
 19697 ;; Registers used:
 19698 ;;		wreg, status,2, status,0, cstack
 19699 ;; Tracked objects:
 19700 ;;		On entry : 0/0
 19701 ;;		On exit  : 0/0
 19702 ;;		Unchanged: 0/0
 19703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19704 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19707 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19708 ;;Total ram usage:       11 bytes
 19709 ;; Hardware stack levels used:    1
 19710 ;; Hardware stack levels required when called:    5
 19711 ;; This function calls:
 19712 ;;		_flash_page_write
 19713 ;; This function is called by:
 19714 ;;		_MSDWriteHandler
 19715 ;; This function uses a non-reentrant model
 19716 ;;
 19717                           
 19718                           	psect	text89
 19719  00832C                     __ptext89:
 19720                           	opt stack 0
 19721  00832C                     _ExternalFlash_SectorWrite:
 19722                           	opt stack 20
 19723                           
 19724                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 19725                           
 19726                           ;incstack = 0
 19727  00832C  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 19728  008330  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 19729                           
 19730                           ;external_flash.c: 61: if(sector_addr >= 8192)
 19731  008334  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 19732  008336  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 19733  008338  E104               	bnz	u7610
 19734  00833A  0E20               	movlw	32
 19735  00833C  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 19736  00833E  A0D8               	btfss	status,0,c
 19737  008340  D002               	goto	l1880
 19738  008342                     u7610:
 19739                           
 19740                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 19741  008342  0E00               	movlw	0
 19742  008344  0012               	return	
 19743  008346                     l1880:
 19744                           
 19745                           ;external_flash.c: 64: };external_flash.c: 67: flash_page_write(page, buffer);
 19746  008346  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 19747  00834A  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 19748  00834E  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 19749  008352  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 19750  008356  ECFC  F03D         	call	_flash_page_write	;wreg free
 19751                           
 19752                           ;external_flash.c: 69: return 1;
 19753  00835A  0E01               	movlw	1
 19754  00835C  0012               	return	
 19755  00835E                     __end_of_ExternalFlash_SectorWrite:
 19756                           	opt stack 0
 19757                           tosu	equ	0xFFF
 19758                           tosh	equ	0xFFE
 19759                           tosl	equ	0xFFD
 19760                           pclath	equ	0xFFA
 19761                           tblptru	equ	0xFF8
 19762                           tblptrh	equ	0xFF7
 19763                           tblptrl	equ	0xFF6
 19764                           tablat	equ	0xFF5
 19765                           prodh	equ	0xFF4
 19766                           prodl	equ	0xFF3
 19767                           intcon	equ	0xFF2
 19768                           intcon2	equ	0xFF1
 19769                           intcon3	equ	0xFF0
 19770                           indf0	equ	0xFEF
 19771                           postinc0	equ	0xFEE
 19772                           fsr0h	equ	0xFEA
 19773                           fsr0l	equ	0xFE9
 19774                           wreg	equ	0xFE8
 19775                           indf1	equ	0xFE7
 19776                           postdec1	equ	0xFE5
 19777                           plusw1	equ	0xFE3
 19778                           fsr1h	equ	0xFE2
 19779                           fsr1l	equ	0xFE1
 19780                           indf2	equ	0xFDF
 19781                           postinc2	equ	0xFDE
 19782                           postdec2	equ	0xFDD
 19783                           plusw2	equ	0xFDB
 19784                           fsr2h	equ	0xFDA
 19785                           fsr2l	equ	0xFD9
 19786                           status	equ	0xFD8
 19787                           
 19788 ;; *************** function _MSDReadHandler *****************
 19789 ;; Defined at:
 19790 ;;		line 1038 in file "usb_device_msd.c"
 19791 ;; Parameters:    Size  Location     Type
 19792 ;;		None
 19793 ;; Auto vars:     Size  Location     Type
 19794 ;;		None
 19795 ;; Return value:  Size  Location     Type
 19796 ;;                  1    wreg      unsigned char 
 19797 ;; Registers used:
 19798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19799 ;; Tracked objects:
 19800 ;;		On entry : 0/0
 19801 ;;		On exit  : 0/0
 19802 ;;		Unchanged: 0/0
 19803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19806 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19807 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19808 ;;Total ram usage:        4 bytes
 19809 ;; Hardware stack levels used:    1
 19810 ;; Hardware stack levels required when called:    6
 19811 ;; This function calls:
 19812 ;;		_ExternalFlash_SectorRead
 19813 ;;		_MSDCheckForErrorCases
 19814 ;;		_USBStallEndpoint
 19815 ;;		_USBTransferOnePacket
 19816 ;; This function is called by:
 19817 ;;		_MSDProcessCommandMediaPresent
 19818 ;; This function uses a non-reentrant model
 19819 ;;
 19820                           
 19821                           	psect	text90
 19822  003246                     __ptext90:
 19823                           	opt stack 0
 19824  003246                     _MSDReadHandler:
 19825                           	opt stack 20
 19826                           
 19827                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 19828                           
 19829                           ;incstack = 0
 19830  003246  D0D7               	goto	l665
 19831  003248                     l666:
 19832                           
 19833                           ; BSR set to: 0
 19834                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 19835  003248  C111  F15D         	movff	_gblCBW+17,_LBA+3
 19836                           
 19837                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 19838  00324C  C112  F15C         	movff	_gblCBW+18,_LBA+2
 19839                           
 19840                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 19841  003250  C113  F15B         	movff	_gblCBW+19,_LBA+1
 19842                           
 19843                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 19844  003254  C114  F15A         	movff	_gblCBW+20,_LBA
 19845                           
 19846                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 19847  003258  C116  F0D4         	movff	_gblCBW+22,_TransferLength+1
 19848                           
 19849                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 19850  00325C  C117  F0D3         	movff	_gblCBW+23,_TransferLength
 19851                           
 19852                           ; BSR set to: 0
 19853                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19854  003260  51D3               	movf	_TransferLength& (0+255),w,b
 19855  003262  6E36               	movwf	??_MSDReadHandler& (0+255),c
 19856  003264  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 19857  003266  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 19858  003268  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 19859  00326A  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 19860  00326C  0E09               	movlw	9
 19861  00326E                     u7825:
 19862  00326E  90D8               	bcf	status,0,c
 19863  003270  3636               	rlcf	??_MSDReadHandler,f,c
 19864  003272  3637               	rlcf	??_MSDReadHandler+1,f,c
 19865  003274  3638               	rlcf	??_MSDReadHandler+2,f,c
 19866  003276  3639               	rlcf	??_MSDReadHandler+3,f,c
 19867  003278  2EE8               	decfsz	wreg,f,c
 19868  00327A  D7F9               	goto	u7825
 19869  00327C  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 19870  003280  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19871  003284  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19872  003288  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19873  00328C  ECB5  F029         	call	_MSDCheckForErrorCases	;wreg free
 19874  003290  0900               	iorlw	0
 19875  003292  A4D8               	btfss	status,2,c
 19876  003294  D0C2               	goto	l668
 19877                           
 19878                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 19879                           
 19880                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 19881  003296  0E01               	movlw	1
 19882  003298  0100               	movlb	0	; () banked
 19883  00329A  6FE6               	movwf	_MSDReadState& (0+255),b
 19884  00329C                     
 19885                           ; BSR set to: 0
 19886                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 19887                           
 19888                           ; BSR set to: 0
 19889  00329C  51D3               	movf	_TransferLength& (0+255),w,b
 19890  00329E  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 19891  0032A0  A4D8               	btfss	status,2,c
 19892  0032A2  D002               	goto	l670
 19893                           
 19894                           ; BSR set to: 0
 19895                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 19896  0032A4  0E00               	movlw	0
 19897  0032A6  D046               	goto	L23
 19898  0032A8                     l670:
 19899                           
 19900                           ; BSR set to: 0
 19901                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 19902                           
 19903                           ; BSR set to: 0
 19904  0032A8  07D3               	decf	_TransferLength& (0+255),f,b
 19905  0032AA  A0D8               	btfss	status,0,c
 19906  0032AC  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 19907                           
 19908                           ; BSR set to: 0
 19909                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 19910  0032AE  0E02               	movlw	2
 19911  0032B0  6FE6               	movwf	_MSDReadState& (0+255),b
 19912  0032B2                     
 19913                           ; BSR set to: 0
 19914                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 19915                           
 19916                           ; BSR set to: 0
 19917  0032B2  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 19918  0032B4  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 19919  0032B6  B4D8               	btfsc	status,2,c
 19920  0032B8  D006               	goto	l672
 19921                           
 19922                           ; BSR set to: 0
 19923  0032BA  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 19924  0032BE  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 19925  0032C2  BEDF               	btfsc	indf2,7,c
 19926  0032C4  D0AA               	goto	l668
 19927  0032C6                     l672:
 19928                           
 19929                           ; BSR set to: 0
 19930                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 19931                           
 19932                           ; BSR set to: 0
 19933  0032C6  C1E7  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 19934  0032CA  C1E8  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 19935  0032CE  C15A  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 19936  0032D2  C15B  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 19937  0032D6  C15C  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 19938  0032DA  C15D  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 19939  0032DE  0E00               	movlw	0
 19940  0032E0  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 19941  0032E2  0E06               	movlw	6
 19942  0032E4  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 19943  0032E6  D801               	call	u7878
 19944  0032E8  D00A               	goto	u7879
 19945  0032EA                     u7878:
 19946  0032EA  0005               	push	
 19947  0032EC  6EFA               	movwf	pclath,c
 19948  0032EE  0101               	movlb	1	; () banked
 19949  0032F0  51E1               	movf	(_LUN+8)& (0+255),w,b
 19950  0032F2  6EFD               	movwf	tosl,c
 19951  0032F4  51E2               	movf	(_LUN+9)& (0+255),w,b
 19952  0032F6  6EFE               	movwf	tosh,c
 19953  0032F8  6AFF               	clrf	tosu,c
 19954  0032FA  50FA               	movf	pclath,w,c
 19955  0032FC  0012               	return		;indir
 19956  0032FE                     u7879:
 19957  0032FE  06E8               	decf	wreg,f,c
 19958  003300  B4D8               	btfsc	status,2,c
 19959  003302  D01A               	goto	l675
 19960                           
 19961                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 19962  003304  0E64               	movlw	100
 19963  003306  0100               	movlb	0	; () banked
 19964  003308  61E4               	cpfslt	_MSDRetryAttempt& (0+255),b
 19965  00330A  D002               	goto	l674
 19966                           
 19967                           ; BSR set to: 0
 19968                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 19969  00330C  2BE4               	incf	_MSDRetryAttempt& (0+255),f,b
 19970                           
 19971                           ;usb_device_msd.c: 1088: break;
 19972  00330E  D085               	goto	l668
 19973  003310                     l674:
 19974                           
 19975                           ; BSR set to: 0
 19976                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 19977                           
 19978                           ; BSR set to: 0
 19979  003310  0E02               	movlw	2
 19980  003312  010D               	movlb	13	; () banked
 19981  003314  6F8C               	movwf	140,b	;volatile
 19982                           
 19983                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 19984  003316  0101               	movlb	1	; () banked
 19985  003318  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19986  00331A  0BF0               	andlw	-16
 19987  00331C  0903               	iorlw	3
 19988  00331E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19989                           
 19990                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 19991  003320  0E00               	movlw	0
 19992  003322  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19993                           
 19994                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 19995  003324  0E00               	movlw	0
 19996  003326  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19997                           
 19998                           ; BSR set to: 1
 19999                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 20000  003328  0E01               	movlw	1
 20001  00332A  6E01               	movwf	USBStallEndpoint@dir,c
 20002  00332C  0E02               	movlw	2
 20003  00332E  ECDE  F024         	call	_USBStallEndpoint
 20004  003332  D05E               	goto	l11048
 20005  003334                     L23:
 20006  003334  6FE6               	movwf	_MSDReadState& (0+255),b
 20007                           
 20008                           ;usb_device_msd.c: 1109: break;
 20009  003336  D071               	goto	l668
 20010  003338                     l675:
 20011                           
 20012                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 20013                           
 20014                           ; BSR set to: 0
 20015                           
 20016                           ; BSR set to: 0
 20017  003338  0E01               	movlw	1
 20018  00333A  0101               	movlb	1	; () banked
 20019  00333C  275A               	addwf	_LBA& (0+255),f,b
 20020  00333E  0E00               	movlw	0
 20021  003340  235B               	addwfc	(_LBA+1)& (0+255),f,b
 20022  003342  235C               	addwfc	(_LBA+2)& (0+255),f,b
 20023  003344  235D               	addwfc	(_LBA+3)& (0+255),f,b
 20024                           
 20025                           ; BSR set to: 1
 20026                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 20027  003346  0E00               	movlw	0
 20028  003348  010D               	movlb	13	; () banked
 20029  00334A  6F88               	movwf	136,b	;volatile
 20030  00334C  0E02               	movlw	2
 20031  00334E  6F89               	movwf	137,b	;volatile
 20032  003350  0E00               	movlw	0
 20033  003352  6F8A               	movwf	138,b	;volatile
 20034  003354  0E00               	movlw	0
 20035  003356  6F8B               	movwf	139,b	;volatile
 20036                           
 20037                           ; BSR set to: 13
 20038                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 20039  003358  0E00               	movlw	0
 20040  00335A  0101               	movlb	1	; () banked
 20041  00335C  6F82               	movwf	_ptrNextData& (0+255),b
 20042  00335E  0E06               	movlw	6
 20043  003360  6F83               	movwf	(_ptrNextData+1)& (0+255),b
 20044                           
 20045                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 20046  003362  0E03               	movlw	3
 20047  003364  0100               	movlb	0	; () banked
 20048  003366  6FE6               	movwf	_MSDReadState& (0+255),b
 20049  003368                     
 20050                           ; BSR set to: 0
 20051                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 20052                           
 20053                           ; BSR set to: 0
 20054  003368  010D               	movlb	13	; () banked
 20055  00336A  5188               	movf	136,w,b	;volatile
 20056  00336C  1189               	iorwf	137,w,b	;volatile
 20057  00336E  118A               	iorwf	138,w,b	;volatile
 20058  003370  118B               	iorwf	139,w,b	;volatile
 20059  003372  A4D8               	btfss	status,2,c
 20060  003374  D002               	goto	l677
 20061                           
 20062                           ; BSR set to: 13
 20063                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 20064  003376  0E01               	movlw	1
 20065  003378  D03C               	goto	L25
 20066  00337A                     l677:
 20067                           
 20068                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 20069                           
 20070                           ; BSR set to: 0
 20071  00337A  0E04               	movlw	4
 20072  00337C  0100               	movlb	0	; () banked
 20073  00337E  6FE6               	movwf	_MSDReadState& (0+255),b
 20074  003380                     
 20075                           ; BSR set to: 0
 20076                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 20077                           
 20078                           ; BSR set to: 0
 20079  003380  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 20080  003382  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20081  003384  B4D8               	btfsc	status,2,c
 20082  003386  D006               	goto	l679
 20083                           
 20084                           ; BSR set to: 0
 20085  003388  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 20086  00338C  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20087  003390  BEDF               	btfsc	indf2,7,c
 20088  003392  D043               	goto	l668
 20089  003394                     l679:
 20090                           
 20091                           ; BSR set to: 0
 20092                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 20093                           
 20094                           ; BSR set to: 0
 20095  003394  0E01               	movlw	1
 20096  003396  6E01               	movwf	USBTransferOnePacket@dir,c
 20097  003398  C182  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20098  00339C  C183  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20099  0033A0  0E40               	movlw	64
 20100  0033A2  6E04               	movwf	USBTransferOnePacket@len,c
 20101  0033A4  0E02               	movlw	2
 20102  0033A6  ECEB  F026         	call	_USBTransferOnePacket
 20103  0033AA  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20104  0033AE  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20105                           
 20106                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 20107  0033B2  0E03               	movlw	3
 20108  0033B4  0100               	movlb	0	; () banked
 20109  0033B6  6FE6               	movwf	_MSDReadState& (0+255),b
 20110                           
 20111                           ; BSR set to: 0
 20112                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 20113  0033B8  0E40               	movlw	64
 20114  0033BA  0101               	movlb	1	; () banked
 20115  0033BC  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20116  0033BE  0E00               	movlw	0
 20117  0033C0  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20118  0033C2  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20119  0033C4  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20120                           
 20121                           ; BSR set to: 1
 20122                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 20123  0033C6  0E40               	movlw	64
 20124  0033C8  010D               	movlb	13	; () banked
 20125  0033CA  5F88               	subwf	136,f,b	;volatile
 20126  0033CC  0E00               	movlw	0
 20127  0033CE  5B89               	subwfb	137,f,b	;volatile
 20128  0033D0  5B8A               	subwfb	138,f,b	;volatile
 20129  0033D2  5B8B               	subwfb	139,f,b	;volatile
 20130                           
 20131                           ; BSR set to: 13
 20132                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 20133  0033D4  0E40               	movlw	64
 20134  0033D6  0101               	movlb	1	; () banked
 20135  0033D8  2782               	addwf	_ptrNextData& (0+255),f,b
 20136  0033DA  0E00               	movlw	0
 20137  0033DC  2383               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20138                           
 20139                           ;usb_device_msd.c: 1149: break;
 20140  0033DE  D01D               	goto	l668
 20141  0033E0                     
 20142                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 20143                           
 20144                           ; BSR set to: 1
 20145  0033E0  0E02               	movlw	2
 20146  0033E2  010D               	movlb	13	; () banked
 20147  0033E4  6F8C               	movwf	140,b	;volatile
 20148                           
 20149                           ; BSR set to: 13
 20150                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 20151  0033E6  0E01               	movlw	1
 20152  0033E8  6E01               	movwf	USBStallEndpoint@dir,c
 20153  0033EA  0E02               	movlw	2
 20154  0033EC  ECDE  F024         	call	_USBStallEndpoint
 20155  0033F0                     l11048:
 20156                           
 20157                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 20158  0033F0  0E00               	movlw	0
 20159  0033F2                     L25:
 20160  0033F2  0100               	movlb	0	; () banked
 20161  0033F4  D79F               	goto	L23
 20162  0033F6                     l665:
 20163                           
 20164                           ; BSR set to: 0
 20165  0033F6  0100               	movlb	0	; () banked
 20166  0033F8  51E6               	movf	_MSDReadState& (0+255),w,b
 20167                           
 20168                           ; Switch size 1, requested type "space"
 20169                           ; Number of cases is 5, Range of values is 0 to 4
 20170                           ; switch strategies available:
 20171                           ; Name         Instructions Cycles
 20172                           ; simple_byte           16     9 (average)
 20173                           ;	Chosen strategy is simple_byte
 20174  0033FA  0A00               	xorlw	0	; case 0
 20175  0033FC  B4D8               	btfsc	status,2,c
 20176  0033FE  D724               	goto	l666
 20177  003400  0A01               	xorlw	1	; case 1
 20178  003402  B4D8               	btfsc	status,2,c
 20179  003404  D74B               	goto	l669
 20180  003406  0A03               	xorlw	3	; case 2
 20181  003408  B4D8               	btfsc	status,2,c
 20182  00340A  D753               	goto	l671
 20183  00340C  0A01               	xorlw	1	; case 3
 20184  00340E  B4D8               	btfsc	status,2,c
 20185  003410  D7AB               	goto	l676
 20186  003412  0A07               	xorlw	7	; case 4
 20187  003414  B4D8               	btfsc	status,2,c
 20188  003416  D7B4               	goto	l678
 20189  003418  D7E3               	goto	l680
 20190  00341A                     l668:
 20191                           
 20192                           ;usb_device_msd.c: 1161: return MSDReadState;
 20193                           
 20194                           ; BSR set to: 0
 20195  00341A  0100               	movlb	0	; () banked
 20196  00341C  51E6               	movf	_MSDReadState& (0+255),w,b
 20197  00341E  0012               	return	
 20198  003420                     __end_of_MSDReadHandler:
 20199                           	opt stack 0
 20200                           tosu	equ	0xFFF
 20201                           tosh	equ	0xFFE
 20202                           tosl	equ	0xFFD
 20203                           pclath	equ	0xFFA
 20204                           tblptru	equ	0xFF8
 20205                           tblptrh	equ	0xFF7
 20206                           tblptrl	equ	0xFF6
 20207                           tablat	equ	0xFF5
 20208                           prodh	equ	0xFF4
 20209                           prodl	equ	0xFF3
 20210                           intcon	equ	0xFF2
 20211                           intcon2	equ	0xFF1
 20212                           intcon3	equ	0xFF0
 20213                           indf0	equ	0xFEF
 20214                           postinc0	equ	0xFEE
 20215                           fsr0h	equ	0xFEA
 20216                           fsr0l	equ	0xFE9
 20217                           wreg	equ	0xFE8
 20218                           indf1	equ	0xFE7
 20219                           postdec1	equ	0xFE5
 20220                           plusw1	equ	0xFE3
 20221                           fsr1h	equ	0xFE2
 20222                           fsr1l	equ	0xFE1
 20223                           indf2	equ	0xFDF
 20224                           postinc2	equ	0xFDE
 20225                           postdec2	equ	0xFDD
 20226                           plusw2	equ	0xFDB
 20227                           fsr2h	equ	0xFDA
 20228                           fsr2l	equ	0xFD9
 20229                           status	equ	0xFD8
 20230                           
 20231 ;; *************** function _MSDCheckForErrorCases *****************
 20232 ;; Defined at:
 20233 ;;		line 1434 in file "usb_device_msd.c"
 20234 ;; Parameters:    Size  Location     Type
 20235 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 20236 ;; Auto vars:     Size  Location     Type
 20237 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 20238 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 20239 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 20240 ;; Return value:  Size  Location     Type
 20241 ;;                  1    wreg      unsigned char 
 20242 ;; Registers used:
 20243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20244 ;; Tracked objects:
 20245 ;;		On entry : 0/0
 20246 ;;		On exit  : 0/0
 20247 ;;		Unchanged: 0/0
 20248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20250 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20252 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20253 ;;Total ram usage:        7 bytes
 20254 ;; Hardware stack levels used:    1
 20255 ;; Hardware stack levels required when called:    2
 20256 ;; This function calls:
 20257 ;;		_MSDErrorHandler
 20258 ;; This function is called by:
 20259 ;;		_MSDProcessCommandMediaPresent
 20260 ;;		_MSDReadHandler
 20261 ;;		_MSDWriteHandler
 20262 ;; This function uses a non-reentrant model
 20263 ;;
 20264                           
 20265                           	psect	text91
 20266  00536A                     __ptext91:
 20267                           	opt stack 0
 20268  00536A                     _MSDCheckForErrorCases:
 20269                           	opt stack 23
 20270                           
 20271                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 20272                           
 20273                           ; BSR set to: 0
 20274                           ;incstack = 0
 20275  00536A  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20276  00536C  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20277  00536E  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20278  005370  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20279  005372  A4D8               	btfss	status,2,c
 20280  005374  D002               	goto	l710
 20281                           
 20282                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 20283  005376  0E01               	movlw	1
 20284  005378  D001               	goto	L26
 20285  00537A                     l710:
 20286                           
 20287                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 20288  00537A  0E00               	movlw	0
 20289  00537C                     L26:
 20290  00537C  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 20291                           
 20292                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 20293  00537E  0100               	movlb	0	; () banked
 20294  005380  05E2               	decf	_MSDHostNoData& (0+255),w,b
 20295  005382  A4D8               	btfss	status,2,c
 20296  005384  D005               	goto	l712
 20297                           
 20298                           ; BSR set to: 0
 20299  005386  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20300  005388  A4D8               	btfss	status,2,c
 20301  00538A  D002               	goto	l712
 20302                           
 20303                           ; BSR set to: 0
 20304                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 20305  00538C  0E00               	movlw	0
 20306                           
 20307                           ; BSR set to: 0
 20308  00538E  0012               	return	
 20309  005390                     l712:
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 20313                           
 20314                           ; BSR set to: 0
 20315  005390  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20316  005392  0101               	movlb	1	; () banked
 20317  005394  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 20318  005396  E11A               	bnz	l10628
 20319  005398  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20320  00539A  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 20321  00539C  E117               	bnz	l10628
 20322  00539E  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20323  0053A0  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 20324  0053A2  E114               	bnz	l10628
 20325  0053A4  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20326  0053A6  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 20327  0053A8  A4D8               	btfss	status,2,c
 20328  0053AA  D010               	goto	l718
 20329                           
 20330                           ; BSR set to: 1
 20331                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 20332  0053AC  0100               	movlb	0	; () banked
 20333  0053AE  05E8               	decf	_MSD_State& (0+255),w,b
 20334  0053B0  A4D8               	btfss	status,2,c
 20335  0053B2  D006               	goto	l715
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 20339  0053B4  0E2A               	movlw	42
 20340  0053B6  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 20341  0053B8  B4D8               	btfsc	status,2,c
 20342  0053BA  D008               	goto	l718
 20343                           
 20344                           ; BSR set to: 0
 20345                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 20346  0053BC  0E00               	movlw	0
 20347                           
 20348                           ; BSR set to: 0
 20349  0053BE  0012               	return	
 20350  0053C0                     l715:
 20351                           
 20352                           ; BSR set to: 0
 20353                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 20354                           
 20355                           ; BSR set to: 0
 20356  0053C0  0E2A               	movlw	42
 20357  0053C2  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 20358  0053C4  A4D8               	btfss	status,2,c
 20359  0053C6  D002               	goto	l718
 20360                           
 20361                           ; BSR set to: 0
 20362                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 20363  0053C8  0E00               	movlw	0
 20364                           
 20365                           ; BSR set to: 0
 20366  0053CA  0012               	return	
 20367  0053CC                     l718:
 20368  0053CC                     l10628:
 20369                           
 20370                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 20371  0053CC  0101               	movlb	1	; () banked
 20372  0053CE  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20373  0053D0  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 20374  0053D2  5109               	movf	(_gblCBW+9)& (0+255),w,b
 20375  0053D4  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20376  0053D6  510A               	movf	(_gblCBW+10)& (0+255),w,b
 20377  0053D8  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20378  0053DA  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20379  0053DC  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20380  0053DE  B0D8               	btfsc	status,0,c
 20381  0053E0  D002               	goto	l719
 20382                           
 20383                           ; BSR set to: 1
 20384                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 20385  0053E2  0E01               	movlw	1
 20386  0053E4  D001               	goto	L27
 20387  0053E6                     l719:
 20388                           
 20389                           ; BSR set to: 1
 20390                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 20391                           
 20392                           ; BSR set to: 1
 20393  0053E6  0E00               	movlw	0
 20394  0053E8                     L27:
 20395  0053E8  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 20396                           
 20397                           ; BSR set to: 1
 20398                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 20399                           
 20400                           ; BSR set to: 1
 20401  0053EA  0E02               	movlw	2
 20402  0053EC  0100               	movlb	0	; () banked
 20403  0053EE  19E8               	xorwf	_MSD_State& (0+255),w,b
 20404  0053F0  A4D8               	btfss	status,2,c
 20405  0053F2  D014               	goto	l721
 20406                           
 20407                           ; BSR set to: 0
 20408                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 20409  0053F4  0E2A               	movlw	42
 20410  0053F6  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 20411  0053F8  B4D8               	btfsc	status,2,c
 20412  0053FA  D005               	goto	l722
 20413                           
 20414                           ; BSR set to: 0
 20415  0053FC  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 20416  0053FE  A4D8               	btfss	status,2,c
 20417  005400  D002               	goto	l722
 20418  005402                     u7410:
 20419                           
 20420                           ; BSR set to: 0
 20421                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 20422  005402  0E05               	movlw	5
 20423  005404  D01D               	goto	L30
 20424  005406                     l722:
 20425                           
 20426                           ; BSR set to: 0
 20427                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 20428                           
 20429                           ; BSR set to: 0
 20430  005406  05E2               	decf	_MSDHostNoData& (0+255),w,b
 20431  005408  B4D8               	btfsc	status,2,c
 20432  00540A  D00F               	goto	u7460
 20433                           
 20434                           ; BSR set to: 0
 20435                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 20436                           
 20437                           ; BSR set to: 0
 20438                           
 20439                           ; BSR set to: 0
 20440                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 20441  00540C  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20442  00540E  B4D8               	btfsc	status,2,c
 20443  005410  D003               	goto	u7440
 20444                           
 20445                           ; BSR set to: 0
 20446                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 20447                           
 20448                           ; BSR set to: 0
 20449                           
 20450                           ; BSR set to: 0
 20451                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 20452  005412  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20453  005414  A4D8               	btfss	status,2,c
 20454  005416  D7F5               	goto	u7410
 20455  005418                     u7440:
 20456                           
 20457                           ; BSR set to: 0
 20458                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 20459  005418  0E04               	movlw	4
 20460  00541A  D012               	goto	L30
 20461  00541C                     l721:
 20462                           
 20463                           ; BSR set to: 0
 20464                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 20465                           
 20466                           ; BSR set to: 0
 20467  00541C  0E2A               	movlw	42
 20468  00541E  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 20469  005420  B4D8               	btfsc	status,2,c
 20470  005422  D00D               	goto	l737
 20471                           
 20472                           ; BSR set to: 0
 20473                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 20474                           
 20475                           ; BSR set to: 0
 20476                           
 20477                           ; BSR set to: 0
 20478                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 20479  005424  05E2               	decf	_MSDHostNoData& (0+255),w,b
 20480  005426  A4D8               	btfss	status,2,c
 20481  005428  D002               	goto	l733
 20482  00542A                     u7460:
 20483                           
 20484                           ; BSR set to: 0
 20485                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 20486  00542A  0E01               	movlw	1
 20487  00542C  D009               	goto	L30
 20488  00542E                     l733:
 20489                           
 20490                           ; BSR set to: 0
 20491                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 20492                           
 20493                           ; BSR set to: 0
 20494  00542E  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20495  005430  B4D8               	btfsc	status,2,c
 20496  005432  D003               	goto	u7480
 20497                           
 20498                           ; BSR set to: 0
 20499                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 20500                           
 20501                           ; BSR set to: 0
 20502                           
 20503                           ; BSR set to: 0
 20504                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 20505  005434  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20506  005436  A4D8               	btfss	status,2,c
 20507  005438  D002               	goto	l737
 20508  00543A                     u7480:
 20509                           
 20510                           ; BSR set to: 0
 20511                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 20512  00543A  0E02               	movlw	2
 20513  00543C  D001               	goto	L30
 20514  00543E                     l737:
 20515                           
 20516                           ; BSR set to: 0
 20517                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 20518                           
 20519                           ; BSR set to: 0
 20520  00543E  0E03               	movlw	3
 20521  005440                     L30:
 20522  005440  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 20523                           
 20524                           ; BSR set to: 0
 20525                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 20526                           
 20527                           ; BSR set to: 0
 20528                           
 20529                           ; BSR set to: 0
 20530                           
 20531                           ; BSR set to: 0
 20532                           
 20533                           ; BSR set to: 0
 20534                           
 20535                           ; BSR set to: 0
 20536  005442  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20537  005444  EC68  F026         	call	_MSDErrorHandler
 20538                           
 20539                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 20540  005448  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20541  00544A  0012               	return	
 20542  00544C                     __end_of_MSDCheckForErrorCases:
 20543                           	opt stack 0
 20544                           tosu	equ	0xFFF
 20545                           tosh	equ	0xFFE
 20546                           tosl	equ	0xFFD
 20547                           pclath	equ	0xFFA
 20548                           tblptru	equ	0xFF8
 20549                           tblptrh	equ	0xFF7
 20550                           tblptrl	equ	0xFF6
 20551                           tablat	equ	0xFF5
 20552                           prodh	equ	0xFF4
 20553                           prodl	equ	0xFF3
 20554                           intcon	equ	0xFF2
 20555                           intcon2	equ	0xFF1
 20556                           intcon3	equ	0xFF0
 20557                           indf0	equ	0xFEF
 20558                           postinc0	equ	0xFEE
 20559                           fsr0h	equ	0xFEA
 20560                           fsr0l	equ	0xFE9
 20561                           wreg	equ	0xFE8
 20562                           indf1	equ	0xFE7
 20563                           postdec1	equ	0xFE5
 20564                           plusw1	equ	0xFE3
 20565                           fsr1h	equ	0xFE2
 20566                           fsr1l	equ	0xFE1
 20567                           indf2	equ	0xFDF
 20568                           postinc2	equ	0xFDE
 20569                           postdec2	equ	0xFDD
 20570                           plusw2	equ	0xFDB
 20571                           fsr2h	equ	0xFDA
 20572                           fsr2l	equ	0xFD9
 20573                           status	equ	0xFD8
 20574                           
 20575 ;; *************** function _MSDErrorHandler *****************
 20576 ;; Defined at:
 20577 ;;		line 1577 in file "usb_device_msd.c"
 20578 ;; Parameters:    Size  Location     Type
 20579 ;;  ErrorCase       1    wreg     unsigned char 
 20580 ;; Auto vars:     Size  Location     Type
 20581 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 20582 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 20583 ;; Return value:  Size  Location     Type
 20584 ;;                  1    wreg      void 
 20585 ;; Registers used:
 20586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20587 ;; Tracked objects:
 20588 ;;		On entry : 0/0
 20589 ;;		On exit  : 0/0
 20590 ;;		Unchanged: 0/0
 20591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20593 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20596 ;;Total ram usage:        2 bytes
 20597 ;; Hardware stack levels used:    1
 20598 ;; Hardware stack levels required when called:    1
 20599 ;; This function calls:
 20600 ;;		_ResetSenseData
 20601 ;;		_USBStallEndpoint
 20602 ;; This function is called by:
 20603 ;;		_MSDProcessCommandMediaAbsent
 20604 ;;		_MSDProcessCommandMediaPresent
 20605 ;;		_MSDCheckForErrorCases
 20606 ;; This function uses a non-reentrant model
 20607 ;;
 20608                           
 20609                           	psect	text92
 20610  004CD0                     __ptext92:
 20611                           	opt stack 0
 20612  004CD0                     _MSDErrorHandler:
 20613                           	opt stack 23
 20614                           
 20615                           ;incstack = 0
 20616                           ;MSDErrorHandler@ErrorCase stored from wreg
 20617  004CD0  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 20618                           
 20619                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 20620  004CD2  0100               	movlb	0	; () banked
 20621  004CD4  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 20622  004CD6  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20623  004CD8  B4D8               	btfsc	status,2,c
 20624  004CDA  D006               	goto	u6970
 20625                           
 20626                           ; BSR set to: 0
 20627  004CDC  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 20628  004CE0  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20629  004CE4  BEDF               	btfsc	indf2,7,c
 20630  004CE6  0012               	return	
 20631  004CE8                     u6970:
 20632                           
 20633                           ; BSR set to: 0
 20634                           
 20635                           ; BSR set to: 0
 20636  004CE8  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 20637  004CEA  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20638  004CEC  B4D8               	btfsc	status,2,c
 20639  004CEE  D006               	goto	l741
 20640                           
 20641                           ; BSR set to: 0
 20642  004CF0  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20643  004CF4  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20644  004CF8  BEDF               	btfsc	indf2,7,c
 20645  004CFA  0012               	return	
 20646  004CFC                     l741:
 20647                           
 20648                           ; BSR set to: 0
 20649                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 20650  004CFC  C0E8  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 20651                           
 20652                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 20653  004D00  69E7               	setf	_MSDCommandState& (0+255),b
 20654                           
 20655                           ; BSR set to: 0
 20656                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 20657  004D02  0E00               	movlw	0
 20658  004D04  6FE6               	movwf	_MSDReadState& (0+255),b
 20659                           
 20660                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 20661  004D06  0E00               	movlw	0
 20662  004D08  6FE5               	movwf	_MSDWriteState& (0+255),b
 20663                           
 20664                           ; BSR set to: 0
 20665                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 20666  004D0A  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 20667  004D0E  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 20668  004D12  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 20669  004D16  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 20670                           
 20671                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 20672  004D1A  0E01               	movlw	1
 20673  004D1C  010D               	movlb	13	; () banked
 20674  004D1E  6F8C               	movwf	140,b	;volatile
 20675                           
 20676                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 20677  004D20  0E03               	movlw	3
 20678  004D22  0100               	movlb	0	; () banked
 20679  004D24  6FE8               	movwf	_MSD_State& (0+255),b
 20680                           
 20681                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 20682  004D26  D043               	goto	l747
 20683  004D28                     
 20684                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 20685                           
 20686                           ; BSR set to: 0
 20687  004D28  0E02               	movlw	2
 20688  004D2A  010D               	movlb	13	; () banked
 20689  004D2C  6F8C               	movwf	140,b	;volatile
 20690                           
 20691                           ;usb_device_msd.c: 1607: break;
 20692  004D2E  0012               	return	
 20693  004D30                     
 20694                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 20695                           
 20696                           ; BSR set to: 13
 20697  004D30  0E01               	movlw	1
 20698  004D32  6E01               	movwf	USBStallEndpoint@dir,c
 20699  004D34  0E02               	movlw	2
 20700  004D36  ECDE  F024         	call	_USBStallEndpoint
 20701                           
 20702                           ;usb_device_msd.c: 1611: break;
 20703  004D3A  0012               	return	
 20704  004D3C                     
 20705                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 20706  004D3C  0E02               	movlw	2
 20707  004D3E  010D               	movlb	13	; () banked
 20708  004D40  6F8C               	movwf	140,b	;volatile
 20709                           
 20710                           ; BSR set to: 13
 20711                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 20712  004D42  0E01               	movlw	1
 20713  004D44  6E01               	movwf	USBStallEndpoint@dir,c
 20714  004D46  0E02               	movlw	2
 20715  004D48  ECDE  F024         	call	_USBStallEndpoint
 20716                           
 20717                           ;usb_device_msd.c: 1616: break;
 20718  004D4C  0012               	return	
 20719  004D4E                     
 20720                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 20721  004D4E  0E00               	movlw	0
 20722  004D50  6E01               	movwf	USBStallEndpoint@dir,c
 20723  004D52  0E02               	movlw	2
 20724  004D54  ECDE  F024         	call	_USBStallEndpoint
 20725                           
 20726                           ;usb_device_msd.c: 1620: break;
 20727  004D58  0012               	return	
 20728  004D5A                     
 20729                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 20730  004D5A  0E02               	movlw	2
 20731  004D5C  010D               	movlb	13	; () banked
 20732  004D5E  6F8C               	movwf	140,b	;volatile
 20733                           
 20734                           ; BSR set to: 13
 20735                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 20736  004D60  0E00               	movlw	0
 20737  004D62  6E01               	movwf	USBStallEndpoint@dir,c
 20738  004D64  0E02               	movlw	2
 20739  004D66  ECDE  F024         	call	_USBStallEndpoint
 20740                           
 20741                           ;usb_device_msd.c: 1625: break;
 20742  004D6A  0012               	return	
 20743  004D6C                     
 20744                           ;usb_device_msd.c: 1628: ResetSenseData();
 20745  004D6C  EC56  F03B         	call	_ResetSenseData	;wreg free
 20746                           
 20747                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 20748  004D70  0101               	movlb	1	; () banked
 20749  004D72  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20750  004D74  0BF0               	andlw	-16
 20751  004D76  0905               	iorlw	5
 20752  004D78  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20753                           
 20754                           ; BSR set to: 1
 20755                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 20756  004D7A  0E20               	movlw	32
 20757  004D7C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20758                           
 20759                           ; BSR set to: 1
 20760                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 20761  004D7E  0E00               	movlw	0
 20762  004D80  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20763                           
 20764                           ; BSR set to: 1
 20765                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 20766  004D82  0E02               	movlw	2
 20767  004D84  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 20768  004D86  A4D8               	btfss	status,2,c
 20769  004D88  D00C               	goto	l755
 20770                           
 20771                           ; BSR set to: 1
 20772  004D8A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20773  004D8C  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20774  004D8E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20775  004D90  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20776  004D92  B4D8               	btfsc	status,2,c
 20777  004D94  D006               	goto	l755
 20778                           
 20779                           ; BSR set to: 1
 20780                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 20781  004D96  0E00               	movlw	0
 20782  004D98  6E01               	movwf	USBStallEndpoint@dir,c
 20783  004D9A  0E02               	movlw	2
 20784  004D9C  ECDE  F024         	call	_USBStallEndpoint
 20785                           
 20786                           ;usb_device_msd.c: 1636: }
 20787  004DA0  0012               	return	
 20788  004DA2                     l755:
 20789                           
 20790                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 20791  004DA2  0E01               	movlw	1
 20792  004DA4  6E01               	movwf	USBStallEndpoint@dir,c
 20793  004DA6  0E02               	movlw	2
 20794  004DA8  ECDE  F024         	call	_USBStallEndpoint
 20795                           
 20796                           ;usb_device_msd.c: 1644: }
 20797                           
 20798                           ;usb_device_msd.c: 1643: break;
 20799                           
 20800                           ;usb_device_msd.c: 1642: default:
 20801                           
 20802                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 20803  004DAC  0012               	return	
 20804  004DAE                     l747:
 20805  004DAE  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 20806                           
 20807                           ; Switch size 1, requested type "space"
 20808                           ; Number of cases is 6, Range of values is 1 to 127
 20809                           ; switch strategies available:
 20810                           ; Name         Instructions Cycles
 20811                           ; simple_byte           19    10 (average)
 20812                           ;	Chosen strategy is simple_byte
 20813  004DB0  0A01               	xorlw	1	; case 1
 20814  004DB2  B4D8               	btfsc	status,2,c
 20815  004DB4  D7B9               	goto	l748
 20816  004DB6  0A03               	xorlw	3	; case 2
 20817  004DB8  B4D8               	btfsc	status,2,c
 20818  004DBA  D7BA               	goto	l750
 20819  004DBC  0A01               	xorlw	1	; case 3
 20820  004DBE  B4D8               	btfsc	status,2,c
 20821  004DC0  D7BD               	goto	l751
 20822  004DC2  0A07               	xorlw	7	; case 4
 20823  004DC4  B4D8               	btfsc	status,2,c
 20824  004DC6  D7C3               	goto	l752
 20825  004DC8  0A01               	xorlw	1	; case 5
 20826  004DCA  B4D8               	btfsc	status,2,c
 20827  004DCC  D7C6               	goto	l753
 20828  004DCE  0A7A               	xorlw	122	; case 127
 20829  004DD0  A4D8               	btfss	status,2,c
 20830  004DD2  0012               	return	
 20831  004DD4  D7CB               	goto	l754
 20832  004DD6                     __end_of_MSDErrorHandler:
 20833                           	opt stack 0
 20834                           tosu	equ	0xFFF
 20835                           tosh	equ	0xFFE
 20836                           tosl	equ	0xFFD
 20837                           pclath	equ	0xFFA
 20838                           tblptru	equ	0xFF8
 20839                           tblptrh	equ	0xFF7
 20840                           tblptrl	equ	0xFF6
 20841                           tablat	equ	0xFF5
 20842                           prodh	equ	0xFF4
 20843                           prodl	equ	0xFF3
 20844                           intcon	equ	0xFF2
 20845                           intcon2	equ	0xFF1
 20846                           intcon3	equ	0xFF0
 20847                           indf0	equ	0xFEF
 20848                           postinc0	equ	0xFEE
 20849                           fsr0h	equ	0xFEA
 20850                           fsr0l	equ	0xFE9
 20851                           wreg	equ	0xFE8
 20852                           indf1	equ	0xFE7
 20853                           postdec1	equ	0xFE5
 20854                           plusw1	equ	0xFE3
 20855                           fsr1h	equ	0xFE2
 20856                           fsr1l	equ	0xFE1
 20857                           indf2	equ	0xFDF
 20858                           postinc2	equ	0xFDE
 20859                           postdec2	equ	0xFDD
 20860                           plusw2	equ	0xFDB
 20861                           fsr2h	equ	0xFDA
 20862                           fsr2l	equ	0xFD9
 20863                           status	equ	0xFD8
 20864                           
 20865 ;; *************** function _USBStallEndpoint *****************
 20866 ;; Defined at:
 20867 ;;		line 1073 in file "usb_device.c"
 20868 ;; Parameters:    Size  Location     Type
 20869 ;;  ep              1    wreg     unsigned char 
 20870 ;;  dir             1    0[COMRAM] unsigned char 
 20871 ;; Auto vars:     Size  Location     Type
 20872 ;;  ep              1    5[COMRAM] unsigned char 
 20873 ;;  p               2    6[COMRAM] PTR struct __BDT
 20874 ;;		 -> BDT(48), 
 20875 ;; Return value:  Size  Location     Type
 20876 ;;                  1    wreg      void 
 20877 ;; Registers used:
 20878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20879 ;; Tracked objects:
 20880 ;;		On entry : 0/0
 20881 ;;		On exit  : 0/0
 20882 ;;		Unchanged: 0/0
 20883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20884 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20885 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20886 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20887 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20888 ;;Total ram usage:        8 bytes
 20889 ;; Hardware stack levels used:    1
 20890 ;; This function calls:
 20891 ;;		Nothing
 20892 ;; This function is called by:
 20893 ;;		_MSDTasks
 20894 ;;		_MSDReadHandler
 20895 ;;		_MSDWriteHandler
 20896 ;;		_MSDErrorHandler
 20897 ;;		_MSDTransferTerminated
 20898 ;; This function uses a non-reentrant model
 20899 ;;
 20900                           
 20901                           	psect	text93
 20902  0049BC                     __ptext93:
 20903                           	opt stack 0
 20904  0049BC                     _USBStallEndpoint:
 20905                           	opt stack 27
 20906                           
 20907                           ;incstack = 0
 20908                           ;USBStallEndpoint@ep stored from wreg
 20909  0049BC  6E06               	movwf	USBStallEndpoint@ep,c
 20910                           
 20911                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 20912  0049BE  5006               	movf	USBStallEndpoint@ep,w,c
 20913  0049C0  A4D8               	btfss	status,2,c
 20914  0049C2  D02C               	goto	l191
 20915                           
 20916                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 20917  0049C4  0100               	movlb	0	; () banked
 20918  0049C6  EE20 F001          	lfsr	2,1
 20919  0049CA  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 20920  0049CC  26D9               	addwf	fsr2l,f,c
 20921  0049CE  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 20922  0049D0  22DA               	addwfc	fsr2h,f,c
 20923  0049D2  0E08               	movlw	8
 20924  0049D4  6EDF               	movwf	indf2,c
 20925                           
 20926                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20927  0049D6  EE20 F002          	lfsr	2,2
 20928  0049DA  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 20929  0049DC  26D9               	addwf	fsr2l,f,c
 20930  0049DE  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 20931  0049E0  22DA               	addwfc	fsr2h,f,c
 20932  0049E2  0E30               	movlw	48
 20933  0049E4  6EDE               	movwf	postinc2,c
 20934  0049E6  0E0D               	movlw	13
 20935  0049E8  6EDD               	movwf	postdec2,c
 20936                           
 20937                           ; BSR set to: 0
 20938                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 20939  0049EA  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20940  0049EE  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20941  0049F2  0E0C               	movlw	12
 20942  0049F4  6EDF               	movwf	indf2,c
 20943                           
 20944                           ; BSR set to: 0
 20945                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20946  0049F6  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20947  0049FA  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20948  0049FE  0E00               	movlw	0
 20949  004A00  8EDB               	bsf	plusw2,7,c
 20950                           
 20951                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 20952  004A02  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 20953  004A06  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20954  004A0A  0E04               	movlw	4
 20955  004A0C  6EDF               	movwf	indf2,c
 20956                           
 20957                           ; BSR set to: 0
 20958                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20959  004A0E  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 20960  004A12  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20961  004A16  0E00               	movlw	0
 20962  004A18  8EDB               	bsf	plusw2,7,c
 20963                           
 20964                           ;usb_device.c: 1089: }
 20965  004A1A  0012               	return	
 20966  004A1C                     l191:
 20967                           
 20968                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 20969                           
 20970                           ; BSR set to: 0
 20971  004A1C  5001               	movf	USBStallEndpoint@dir,w,c
 20972  004A1E  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 20973  004A20  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 20974  004A22  90D8               	bcf	status,0,c
 20975  004A24  3602               	rlcf	??_USBStallEndpoint,f,c
 20976  004A26  3603               	rlcf	??_USBStallEndpoint+1,f,c
 20977  004A28  5006               	movf	USBStallEndpoint@ep,w,c
 20978  004A2A  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 20979  004A2C  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 20980  004A2E  90D8               	bcf	status,0,c
 20981  004A30  3604               	rlcf	??_USBStallEndpoint+2,f,c
 20982  004A32  3605               	rlcf	??_USBStallEndpoint+3,f,c
 20983  004A34  90D8               	bcf	status,0,c
 20984  004A36  3604               	rlcf	??_USBStallEndpoint+2,f,c
 20985  004A38  3605               	rlcf	??_USBStallEndpoint+3,f,c
 20986  004A3A  5002               	movf	??_USBStallEndpoint,w,c
 20987  004A3C  2604               	addwf	??_USBStallEndpoint+2,f,c
 20988  004A3E  5003               	movf	??_USBStallEndpoint+1,w,c
 20989  004A40  2205               	addwfc	??_USBStallEndpoint+3,f,c
 20990  004A42  90D8               	bcf	status,0,c
 20991  004A44  3604               	rlcf	??_USBStallEndpoint+2,f,c
 20992  004A46  3605               	rlcf	??_USBStallEndpoint+3,f,c
 20993  004A48  90D8               	bcf	status,0,c
 20994  004A4A  3604               	rlcf	??_USBStallEndpoint+2,f,c
 20995  004A4C  3605               	rlcf	??_USBStallEndpoint+3,f,c
 20996  004A4E  0E00               	movlw	0
 20997  004A50  2404               	addwf	??_USBStallEndpoint+2,w,c
 20998  004A52  6E07               	movwf	USBStallEndpoint@p,c
 20999  004A54  0E0D               	movlw	13
 21000  004A56  2005               	addwfc	??_USBStallEndpoint+3,w,c
 21001  004A58  6E08               	movwf	USBStallEndpoint@p+1,c
 21002                           
 21003                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 21004  004A5A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21005  004A5E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21006  004A62  0E00               	movlw	0
 21007  004A64  84DB               	bsf	plusw2,2,c
 21008                           
 21009                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 21010  004A66  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21011  004A6A  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21012  004A6E  0E00               	movlw	0
 21013  004A70  8EDB               	bsf	plusw2,7,c
 21014                           
 21015                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 21016  004A72  5006               	movf	USBStallEndpoint@ep,w,c
 21017  004A74  0D04               	mullw	4
 21018  004A76  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 21019  004A7A  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 21020  004A7E  5001               	movf	USBStallEndpoint@dir,w,c
 21021  004A80  0D02               	mullw	2
 21022  004A82  50F3               	movf	prodl,w,c
 21023  004A84  2602               	addwf	??_USBStallEndpoint,f,c
 21024  004A86  50F4               	movf	prodh,w,c
 21025  004A88  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21026  004A8A  90D8               	bcf	status,0,c
 21027  004A8C  3602               	rlcf	??_USBStallEndpoint,f,c
 21028  004A8E  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21029  004A90  90D8               	bcf	status,0,c
 21030  004A92  3602               	rlcf	??_USBStallEndpoint,f,c
 21031  004A94  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21032  004A96  0E04               	movlw	4
 21033  004A98  2602               	addwf	??_USBStallEndpoint,f,c
 21034  004A9A  0E00               	movlw	0
 21035  004A9C  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21036  004A9E  0E00               	movlw	0
 21037  004AA0  2402               	addwf	??_USBStallEndpoint,w,c
 21038  004AA2  6E07               	movwf	USBStallEndpoint@p,c
 21039  004AA4  0E0D               	movlw	13
 21040  004AA6  2003               	addwfc	??_USBStallEndpoint+1,w,c
 21041  004AA8  6E08               	movwf	USBStallEndpoint@p+1,c
 21042                           
 21043                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 21044  004AAA  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21045  004AAE  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21046  004AB2  0E00               	movlw	0
 21047  004AB4  84DB               	bsf	plusw2,2,c
 21048                           
 21049                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 21050  004AB6  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21051  004ABA  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21052  004ABE  0E00               	movlw	0
 21053  004AC0  8EDB               	bsf	plusw2,7,c
 21054  004AC2  0012               	return	
 21055  004AC4                     __end_of_USBStallEndpoint:
 21056                           	opt stack 0
 21057                           tosu	equ	0xFFF
 21058                           tosh	equ	0xFFE
 21059                           tosl	equ	0xFFD
 21060                           pclath	equ	0xFFA
 21061                           tblptru	equ	0xFF8
 21062                           tblptrh	equ	0xFF7
 21063                           tblptrl	equ	0xFF6
 21064                           tablat	equ	0xFF5
 21065                           prodh	equ	0xFF4
 21066                           prodl	equ	0xFF3
 21067                           intcon	equ	0xFF2
 21068                           intcon2	equ	0xFF1
 21069                           intcon3	equ	0xFF0
 21070                           indf0	equ	0xFEF
 21071                           postinc0	equ	0xFEE
 21072                           fsr0h	equ	0xFEA
 21073                           fsr0l	equ	0xFE9
 21074                           wreg	equ	0xFE8
 21075                           indf1	equ	0xFE7
 21076                           postdec1	equ	0xFE5
 21077                           plusw1	equ	0xFE3
 21078                           fsr1h	equ	0xFE2
 21079                           fsr1l	equ	0xFE1
 21080                           indf2	equ	0xFDF
 21081                           postinc2	equ	0xFDE
 21082                           postdec2	equ	0xFDD
 21083                           plusw2	equ	0xFDB
 21084                           fsr2h	equ	0xFDA
 21085                           fsr2l	equ	0xFD9
 21086                           status	equ	0xFD8
 21087                           
 21088 ;; *************** function _ResetSenseData *****************
 21089 ;; Defined at:
 21090 ;;		line 1373 in file "usb_device_msd.c"
 21091 ;; Parameters:    Size  Location     Type
 21092 ;;		None
 21093 ;; Auto vars:     Size  Location     Type
 21094 ;;		None
 21095 ;; Return value:  Size  Location     Type
 21096 ;;                  1    wreg      void 
 21097 ;; Registers used:
 21098 ;;		wreg, status,2
 21099 ;; Tracked objects:
 21100 ;;		On entry : 0/0
 21101 ;;		On exit  : 0/0
 21102 ;;		Unchanged: 0/0
 21103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21108 ;;Total ram usage:        0 bytes
 21109 ;; Hardware stack levels used:    1
 21110 ;; This function calls:
 21111 ;;		Nothing
 21112 ;; This function is called by:
 21113 ;;		_USBMSDInit
 21114 ;;		_MSDProcessCommandMediaAbsent
 21115 ;;		_MSDProcessCommandMediaPresent
 21116 ;;		_MSDErrorHandler
 21117 ;; This function uses a non-reentrant model
 21118 ;;
 21119                           
 21120                           	psect	text94
 21121  0076AC                     __ptext94:
 21122                           	opt stack 0
 21123  0076AC                     _ResetSenseData:
 21124                           	opt stack 26
 21125                           
 21126                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 21127                           
 21128                           ;incstack = 0
 21129  0076AC  0101               	movlb	1	; () banked
 21130  0076AE  911F               	bcf	_gblSenseData& (0+255),0,b
 21131  0076B0  931F               	bcf	_gblSenseData& (0+255),1,b
 21132  0076B2  951F               	bcf	_gblSenseData& (0+255),2,b
 21133  0076B4  971F               	bcf	_gblSenseData& (0+255),3,b
 21134  0076B6  891F               	bsf	_gblSenseData& (0+255),4,b
 21135  0076B8  8B1F               	bsf	_gblSenseData& (0+255),5,b
 21136  0076BA  8D1F               	bsf	_gblSenseData& (0+255),6,b
 21137                           
 21138                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 21139  0076BC  9F1F               	bcf	_gblSenseData& (0+255),7,b
 21140                           
 21141                           ; BSR set to: 1
 21142                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 21143  0076BE  0E00               	movlw	0
 21144  0076C0  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 21145                           
 21146                           ; BSR set to: 1
 21147                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 21148  0076C2  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 21149  0076C4  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 21150  0076C6  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 21151  0076C8  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 21152                           
 21153                           ; BSR set to: 1
 21154                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 21155  0076CA  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 21156                           
 21157                           ; BSR set to: 1
 21158                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 21159  0076CC  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 21160                           
 21161                           ; BSR set to: 1
 21162                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 21163  0076CE  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 21164                           
 21165                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 21166  0076D0  0E00               	movlw	0
 21167  0076D2  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 21168                           
 21169                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 21170  0076D4  0E00               	movlw	0
 21171  0076D6  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 21172                           
 21173                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 21174  0076D8  0E00               	movlw	0
 21175  0076DA  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 21176                           
 21177                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 21178  0076DC  0E00               	movlw	0
 21179  0076DE  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 21180                           
 21181                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 21182  0076E0  0E0A               	movlw	10
 21183  0076E2  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 21184                           
 21185                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 21186  0076E4  0E00               	movlw	0
 21187  0076E6  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 21188  0076E8  0E00               	movlw	0
 21189  0076EA  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 21190  0076EC  0E00               	movlw	0
 21191  0076EE  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 21192  0076F0  0E00               	movlw	0
 21193  0076F2  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 21194                           
 21195                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 21196  0076F4  0E00               	movlw	0
 21197  0076F6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21198                           
 21199                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 21200  0076F8  0E00               	movlw	0
 21201  0076FA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21202                           
 21203                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 21204  0076FC  0E00               	movlw	0
 21205  0076FE  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 21206                           
 21207                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 21208  007700  0E00               	movlw	0
 21209  007702  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 21210                           
 21211                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 21212  007704  0E00               	movlw	0
 21213  007706  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 21214                           
 21215                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 21216  007708  0E00               	movlw	0
 21217  00770A  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 21218                           
 21219                           ; BSR set to: 1
 21220  00770C  0012               	return		;funcret
 21221  00770E                     __end_of_ResetSenseData:
 21222                           	opt stack 0
 21223                           tosu	equ	0xFFF
 21224                           tosh	equ	0xFFE
 21225                           tosl	equ	0xFFD
 21226                           pclath	equ	0xFFA
 21227                           tblptru	equ	0xFF8
 21228                           tblptrh	equ	0xFF7
 21229                           tblptrl	equ	0xFF6
 21230                           tablat	equ	0xFF5
 21231                           prodh	equ	0xFF4
 21232                           prodl	equ	0xFF3
 21233                           intcon	equ	0xFF2
 21234                           intcon2	equ	0xFF1
 21235                           intcon3	equ	0xFF0
 21236                           indf0	equ	0xFEF
 21237                           postinc0	equ	0xFEE
 21238                           fsr0h	equ	0xFEA
 21239                           fsr0l	equ	0xFE9
 21240                           wreg	equ	0xFE8
 21241                           indf1	equ	0xFE7
 21242                           postdec1	equ	0xFE5
 21243                           plusw1	equ	0xFE3
 21244                           fsr1h	equ	0xFE2
 21245                           fsr1l	equ	0xFE1
 21246                           indf2	equ	0xFDF
 21247                           postinc2	equ	0xFDE
 21248                           postdec2	equ	0xFDD
 21249                           plusw2	equ	0xFDB
 21250                           fsr2h	equ	0xFDA
 21251                           fsr2l	equ	0xFD9
 21252                           status	equ	0xFD8
 21253                           
 21254 ;; *************** function _ExternalFlash_SectorRead *****************
 21255 ;; Defined at:
 21256 ;;		line 40 in file "external_flash.c"
 21257 ;; Parameters:    Size  Location     Type
 21258 ;;  config          2   43[COMRAM] PTR void 
 21259 ;;		 -> NULL(0), 
 21260 ;;  sector_addr     4   45[COMRAM] unsigned long 
 21261 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 21262 ;;		 -> msd_buffer(512), 
 21263 ;; Auto vars:     Size  Location     Type
 21264 ;;  page            2   51[COMRAM] unsigned int 
 21265 ;; Return value:  Size  Location     Type
 21266 ;;                  1    wreg      unsigned char 
 21267 ;; Registers used:
 21268 ;;		wreg, status,2, status,0, cstack
 21269 ;; Tracked objects:
 21270 ;;		On entry : 0/0
 21271 ;;		On exit  : 0/0
 21272 ;;		Unchanged: 0/0
 21273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21274 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21277 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21278 ;;Total ram usage:       10 bytes
 21279 ;; Hardware stack levels used:    1
 21280 ;; Hardware stack levels required when called:    5
 21281 ;; This function calls:
 21282 ;;		_flash_page_read
 21283 ;; This function is called by:
 21284 ;;		_MSDReadHandler
 21285 ;; This function uses a non-reentrant model
 21286 ;;
 21287                           
 21288                           	psect	text95
 21289  00835E                     __ptext95:
 21290                           	opt stack 0
 21291  00835E                     _ExternalFlash_SectorRead:
 21292                           	opt stack 20
 21293                           
 21294                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 21295                           
 21296                           ; BSR set to: 1
 21297                           ;incstack = 0
 21298  00835E  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 21299  008362  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 21300                           
 21301                           ;external_flash.c: 45: if(sector_addr >= 8192)
 21302  008366  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 21303  008368  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 21304  00836A  E104               	bnz	u7600
 21305  00836C  0E20               	movlw	32
 21306  00836E  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 21307  008370  A0D8               	btfss	status,0,c
 21308  008372  D002               	goto	l1876
 21309  008374                     u7600:
 21310                           
 21311                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 21312  008374  0E00               	movlw	0
 21313  008376  0012               	return	
 21314  008378                     l1876:
 21315                           
 21316                           ;external_flash.c: 48: };external_flash.c: 51: flash_page_read(page, buffer);
 21317  008378  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 21318  00837C  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 21319  008380  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 21320  008384  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 21321  008388  ECC8  F041         	call	_flash_page_read	;wreg free
 21322                           
 21323                           ;external_flash.c: 53: return 1;
 21324  00838C  0E01               	movlw	1
 21325  00838E  0012               	return	
 21326  008390                     __end_of_ExternalFlash_SectorRead:
 21327                           	opt stack 0
 21328                           tosu	equ	0xFFF
 21329                           tosh	equ	0xFFE
 21330                           tosl	equ	0xFFD
 21331                           pclath	equ	0xFFA
 21332                           tblptru	equ	0xFF8
 21333                           tblptrh	equ	0xFF7
 21334                           tblptrl	equ	0xFF6
 21335                           tablat	equ	0xFF5
 21336                           prodh	equ	0xFF4
 21337                           prodl	equ	0xFF3
 21338                           intcon	equ	0xFF2
 21339                           intcon2	equ	0xFF1
 21340                           intcon3	equ	0xFF0
 21341                           indf0	equ	0xFEF
 21342                           postinc0	equ	0xFEE
 21343                           fsr0h	equ	0xFEA
 21344                           fsr0l	equ	0xFE9
 21345                           wreg	equ	0xFE8
 21346                           indf1	equ	0xFE7
 21347                           postdec1	equ	0xFE5
 21348                           plusw1	equ	0xFE3
 21349                           fsr1h	equ	0xFE2
 21350                           fsr1l	equ	0xFE1
 21351                           indf2	equ	0xFDF
 21352                           postinc2	equ	0xFDE
 21353                           postdec2	equ	0xFDD
 21354                           plusw2	equ	0xFDB
 21355                           fsr2h	equ	0xFDA
 21356                           fsr2l	equ	0xFD9
 21357                           status	equ	0xFD8
 21358                           
 21359 ;; *************** function _flash_page_read *****************
 21360 ;; Defined at:
 21361 ;;		line 419 in file "flash.c"
 21362 ;; Parameters:    Size  Location     Type
 21363 ;;  page            2   39[COMRAM] unsigned int 
 21364 ;;  data            2   41[COMRAM] PTR unsigned char 
 21365 ;;		 -> buffer(512), msd_buffer(512), 
 21366 ;; Auto vars:     Size  Location     Type
 21367 ;;		None
 21368 ;; Return value:  Size  Location     Type
 21369 ;;                  1    wreg      void 
 21370 ;; Registers used:
 21371 ;;		wreg, status,2, status,0, cstack
 21372 ;; Tracked objects:
 21373 ;;		On entry : 0/0
 21374 ;;		On exit  : 0/0
 21375 ;;		Unchanged: 0/0
 21376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21381 ;;Total ram usage:        4 bytes
 21382 ;; Hardware stack levels used:    1
 21383 ;; Hardware stack levels required when called:    4
 21384 ;; This function calls:
 21385 ;;		__flash_partial_read
 21386 ;;		_spi_set_configuration
 21387 ;; This function is called by:
 21388 ;;		_ExternalFlash_SectorRead
 21389 ;;		_fat_get_format_status
 21390 ;; This function uses a non-reentrant model
 21391 ;;
 21392                           
 21393                           	psect	text96
 21394  008390                     __ptext96:
 21395                           	opt stack 0
 21396  008390                     _flash_page_read:
 21397                           	opt stack 23
 21398                           
 21399                           ;flash.c: 422: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 21400                           
 21401                           ;incstack = 0
 21402  008390  0E00               	movlw	0
 21403  008392  EC59  F024         	call	_spi_set_configuration
 21404                           
 21405                           ;flash.c: 425: _flash_partial_read(page, 0, 512, data);
 21406  008396  C028  F014         	movff	flash_page_read@page,__flash_partial_read@page
 21407  00839A  C029  F015         	movff	flash_page_read@page+1,__flash_partial_read@page+1
 21408  00839E  0E00               	movlw	0
 21409  0083A0  6E17               	movwf	__flash_partial_read@start+1,c
 21410  0083A2  0E00               	movlw	0
 21411  0083A4  6E16               	movwf	__flash_partial_read@start,c
 21412  0083A6  0E02               	movlw	2
 21413  0083A8  6E19               	movwf	__flash_partial_read@length+1,c
 21414  0083AA  0E00               	movlw	0
 21415  0083AC  6E18               	movwf	__flash_partial_read@length,c
 21416  0083AE  C02A  F01A         	movff	flash_page_read@data,__flash_partial_read@data
 21417  0083B2  C02B  F01B         	movff	flash_page_read@data+1,__flash_partial_read@data+1
 21418  0083B6  EC5A  F038         	call	__flash_partial_read	;wreg free
 21419                           
 21420                           ;flash.c: 428: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 21421  0083BA  0E01               	movlw	1
 21422  0083BC  EC59  F024         	call	_spi_set_configuration
 21423  0083C0  0012               	return		;funcret
 21424  0083C2                     __end_of_flash_page_read:
 21425                           	opt stack 0
 21426                           tosu	equ	0xFFF
 21427                           tosh	equ	0xFFE
 21428                           tosl	equ	0xFFD
 21429                           pclath	equ	0xFFA
 21430                           tblptru	equ	0xFF8
 21431                           tblptrh	equ	0xFF7
 21432                           tblptrl	equ	0xFF6
 21433                           tablat	equ	0xFF5
 21434                           prodh	equ	0xFF4
 21435                           prodl	equ	0xFF3
 21436                           intcon	equ	0xFF2
 21437                           intcon2	equ	0xFF1
 21438                           intcon3	equ	0xFF0
 21439                           indf0	equ	0xFEF
 21440                           postinc0	equ	0xFEE
 21441                           fsr0h	equ	0xFEA
 21442                           fsr0l	equ	0xFE9
 21443                           wreg	equ	0xFE8
 21444                           indf1	equ	0xFE7
 21445                           postdec1	equ	0xFE5
 21446                           plusw1	equ	0xFE3
 21447                           fsr1h	equ	0xFE2
 21448                           fsr1l	equ	0xFE1
 21449                           indf2	equ	0xFDF
 21450                           postinc2	equ	0xFDE
 21451                           postdec2	equ	0xFDD
 21452                           plusw2	equ	0xFDB
 21453                           fsr2h	equ	0xFDA
 21454                           fsr2l	equ	0xFD9
 21455                           status	equ	0xFD8
 21456                           
 21457 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 21458 ;; Defined at:
 21459 ;;		line 993 in file "usb_device_msd.c"
 21460 ;; Parameters:    Size  Location     Type
 21461 ;;  DiExpected      2    0[COMRAM] unsigned int 
 21462 ;; Auto vars:     Size  Location     Type
 21463 ;;		None
 21464 ;; Return value:  Size  Location     Type
 21465 ;;                  1    wreg      void 
 21466 ;; Registers used:
 21467 ;;		wreg, status,2, status,0
 21468 ;; Tracked objects:
 21469 ;;		On entry : 0/0
 21470 ;;		On exit  : 0/0
 21471 ;;		Unchanged: 0/0
 21472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21475 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21476 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21477 ;;Total ram usage:        6 bytes
 21478 ;; Hardware stack levels used:    1
 21479 ;; This function calls:
 21480 ;;		Nothing
 21481 ;; This function is called by:
 21482 ;;		_MSDProcessCommandMediaPresent
 21483 ;; This function uses a non-reentrant model
 21484 ;;
 21485                           
 21486                           	psect	text97
 21487  00677C                     __ptext97:
 21488                           	opt stack 0
 21489  00677C                     _MSDComputeDeviceInAndResidue:
 21490                           	opt stack 26
 21491                           
 21492                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 21493                           
 21494                           ;incstack = 0
 21495  00677C  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21496  00677E  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21497  006780  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21498  006782  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21499  006784  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21500  006786  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21501  006788  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 21502  00678A  0101               	movlb	1	; () banked
 21503  00678C  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 21504  00678E  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 21505  006790  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 21506  006792  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 21507  006794  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 21508  006796  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 21509  006798  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 21510  00679A  B0D8               	btfsc	status,0,c
 21511  00679C  D00E               	goto	l659
 21512                           
 21513                           ; BSR set to: 1
 21514                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 21515  00679E  0E00               	movlw	0
 21516  0067A0  010D               	movlb	13	; () banked
 21517  0067A2  6F88               	movwf	136,b	;volatile
 21518  0067A4  0E00               	movlw	0
 21519  0067A6  6F89               	movwf	137,b	;volatile
 21520  0067A8  0E00               	movlw	0
 21521  0067AA  6F8A               	movwf	138,b	;volatile
 21522  0067AC  0E00               	movlw	0
 21523  0067AE  6F8B               	movwf	139,b	;volatile
 21524                           
 21525                           ; BSR set to: 13
 21526                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 21527  0067B0  C108  F0D3         	movff	_gblCBW+8,_TransferLength
 21528  0067B4  C109  F0D4         	movff	_gblCBW+9,_TransferLength+1
 21529                           
 21530                           ;usb_device_msd.c: 1002: }
 21531  0067B8  0012               	return	
 21532  0067BA                     l659:
 21533                           
 21534                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 21535                           
 21536                           ; BSR set to: 13
 21537  0067BA  0100               	movlb	0	; () banked
 21538  0067BC  51D3               	movf	_TransferLength& (0+255),w,b
 21539  0067BE  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21540  0067C0  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 21541  0067C2  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21542  0067C4  B0D8               	btfsc	status,0,c
 21543  0067C6  D004               	goto	l661
 21544                           
 21545                           ; BSR set to: 0
 21546                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 21547  0067C8  C001  F0D3         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 21548  0067CC  C002  F0D4         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 21549  0067D0                     l661:
 21550                           
 21551                           ; BSR set to: 0
 21552                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 21553                           
 21554                           ; BSR set to: 0
 21555  0067D0  51D3               	movf	_TransferLength& (0+255),w,b
 21556  0067D2  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21557  0067D4  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 21558  0067D6  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21559  0067D8  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21560  0067DA  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21561  0067DC  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 21562  0067DE  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 21563  0067E0  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 21564  0067E2  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 21565  0067E4  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 21566  0067E6  0E00               	movlw	0
 21567  0067E8  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 21568  0067EA  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 21569  0067EC  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 21570  0067EE  0101               	movlb	1	; () banked
 21571  0067F0  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21572  0067F2  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 21573  0067F4  010D               	movlb	13	; () banked
 21574  0067F6  6F88               	movwf	136,b	;volatile
 21575  0067F8  0101               	movlb	1	; () banked
 21576  0067FA  5109               	movf	(_gblCBW+9)& (0+255),w,b
 21577  0067FC  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 21578  0067FE  010D               	movlb	13	; () banked
 21579  006800  6F89               	movwf	137,b	;volatile
 21580  006802  0101               	movlb	1	; () banked
 21581  006804  510A               	movf	(_gblCBW+10)& (0+255),w,b
 21582  006806  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 21583  006808  010D               	movlb	13	; () banked
 21584  00680A  6F8A               	movwf	138,b	;volatile
 21585  00680C  0101               	movlb	1	; () banked
 21586  00680E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 21587  006810  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 21588  006812  010D               	movlb	13	; () banked
 21589  006814  6F8B               	movwf	139,b	;volatile
 21590  006816  0012               	return	
 21591  006818                     __end_of_MSDComputeDeviceInAndResidue:
 21592                           	opt stack 0
 21593                           tosu	equ	0xFFF
 21594                           tosh	equ	0xFFE
 21595                           tosl	equ	0xFFD
 21596                           pclath	equ	0xFFA
 21597                           tblptru	equ	0xFF8
 21598                           tblptrh	equ	0xFF7
 21599                           tblptrl	equ	0xFF6
 21600                           tablat	equ	0xFF5
 21601                           prodh	equ	0xFF4
 21602                           prodl	equ	0xFF3
 21603                           intcon	equ	0xFF2
 21604                           intcon2	equ	0xFF1
 21605                           intcon3	equ	0xFF0
 21606                           indf0	equ	0xFEF
 21607                           postinc0	equ	0xFEE
 21608                           fsr0h	equ	0xFEA
 21609                           fsr0l	equ	0xFE9
 21610                           wreg	equ	0xFE8
 21611                           indf1	equ	0xFE7
 21612                           postdec1	equ	0xFE5
 21613                           plusw1	equ	0xFE3
 21614                           fsr1h	equ	0xFE2
 21615                           fsr1l	equ	0xFE1
 21616                           indf2	equ	0xFDF
 21617                           postinc2	equ	0xFDE
 21618                           postdec2	equ	0xFDD
 21619                           plusw2	equ	0xFDB
 21620                           fsr2h	equ	0xFDA
 21621                           fsr2l	equ	0xFD9
 21622                           status	equ	0xFD8
 21623                           
 21624 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 21625 ;; Defined at:
 21626 ;;		line 18 in file "external_flash.c"
 21627 ;; Parameters:    Size  Location     Type
 21628 ;;  config          2    0[COMRAM] PTR void 
 21629 ;;		 -> NULL(0), 
 21630 ;; Auto vars:     Size  Location     Type
 21631 ;;		None
 21632 ;; Return value:  Size  Location     Type
 21633 ;;                  2    0[COMRAM] unsigned int 
 21634 ;; Registers used:
 21635 ;;		wreg, status,2
 21636 ;; Tracked objects:
 21637 ;;		On entry : 0/0
 21638 ;;		On exit  : 0/0
 21639 ;;		Unchanged: 0/0
 21640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21645 ;;Total ram usage:        2 bytes
 21646 ;; Hardware stack levels used:    1
 21647 ;; This function calls:
 21648 ;;		Nothing
 21649 ;; This function is called by:
 21650 ;;		_MSDProcessCommandMediaPresent
 21651 ;; This function uses a non-reentrant model
 21652 ;;
 21653                           
 21654                           	psect	text98
 21655  008930                     __ptext98:
 21656                           	opt stack 0
 21657  008930                     _ExternalFlash_SectorSizeRead:
 21658                           	opt stack 26
 21659                           
 21660                           ;external_flash.c: 20: return 512;
 21661                           
 21662                           ; BSR set to: 13
 21663                           ;incstack = 0
 21664  008930  0E02               	movlw	2
 21665  008932  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 21666  008934  0E00               	movlw	0
 21667  008936  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 21668  008938  0012               	return	
 21669  00893A                     __end_of_ExternalFlash_SectorSizeRead:
 21670                           	opt stack 0
 21671                           tosu	equ	0xFFF
 21672                           tosh	equ	0xFFE
 21673                           tosl	equ	0xFFD
 21674                           pclath	equ	0xFFA
 21675                           tblptru	equ	0xFF8
 21676                           tblptrh	equ	0xFF7
 21677                           tblptrl	equ	0xFF6
 21678                           tablat	equ	0xFF5
 21679                           prodh	equ	0xFF4
 21680                           prodl	equ	0xFF3
 21681                           intcon	equ	0xFF2
 21682                           intcon2	equ	0xFF1
 21683                           intcon3	equ	0xFF0
 21684                           indf0	equ	0xFEF
 21685                           postinc0	equ	0xFEE
 21686                           fsr0h	equ	0xFEA
 21687                           fsr0l	equ	0xFE9
 21688                           wreg	equ	0xFE8
 21689                           indf1	equ	0xFE7
 21690                           postdec1	equ	0xFE5
 21691                           plusw1	equ	0xFE3
 21692                           fsr1h	equ	0xFE2
 21693                           fsr1l	equ	0xFE1
 21694                           indf2	equ	0xFDF
 21695                           postinc2	equ	0xFDE
 21696                           postdec2	equ	0xFDD
 21697                           plusw2	equ	0xFDB
 21698                           fsr2h	equ	0xFDA
 21699                           fsr2l	equ	0xFD9
 21700                           status	equ	0xFD8
 21701                           
 21702 ;; *************** function _ExternalFlash_CapacityRead *****************
 21703 ;; Defined at:
 21704 ;;		line 23 in file "external_flash.c"
 21705 ;; Parameters:    Size  Location     Type
 21706 ;;  config          2    0[COMRAM] PTR void 
 21707 ;;		 -> NULL(0), 
 21708 ;; Auto vars:     Size  Location     Type
 21709 ;;		None
 21710 ;; Return value:  Size  Location     Type
 21711 ;;                  4    0[COMRAM] unsigned long 
 21712 ;; Registers used:
 21713 ;;		wreg, status,2
 21714 ;; Tracked objects:
 21715 ;;		On entry : 0/0
 21716 ;;		On exit  : 0/0
 21717 ;;		Unchanged: 0/0
 21718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21723 ;;Total ram usage:        4 bytes
 21724 ;; Hardware stack levels used:    1
 21725 ;; This function calls:
 21726 ;;		Nothing
 21727 ;; This function is called by:
 21728 ;;		_MSDProcessCommandMediaPresent
 21729 ;; This function uses a non-reentrant model
 21730 ;;
 21731                           
 21732                           	psect	text99
 21733  008858                     __ptext99:
 21734                           	opt stack 0
 21735  008858                     _ExternalFlash_CapacityRead:
 21736                           	opt stack 26
 21737                           
 21738                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 21739                           
 21740                           ;incstack = 0
 21741  008858  0EFF               	movlw	255
 21742  00885A  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 21743  00885C  0E1F               	movlw	31
 21744  00885E  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 21745  008860  0E00               	movlw	0
 21746  008862  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 21747  008864  0E00               	movlw	0
 21748  008866  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 21749  008868  0012               	return	
 21750  00886A                     __end_of_ExternalFlash_CapacityRead:
 21751                           	opt stack 0
 21752                           tosu	equ	0xFFF
 21753                           tosh	equ	0xFFE
 21754                           tosl	equ	0xFFD
 21755                           pclath	equ	0xFFA
 21756                           tblptru	equ	0xFF8
 21757                           tblptrh	equ	0xFF7
 21758                           tblptrl	equ	0xFF6
 21759                           tablat	equ	0xFF5
 21760                           prodh	equ	0xFF4
 21761                           prodl	equ	0xFF3
 21762                           intcon	equ	0xFF2
 21763                           intcon2	equ	0xFF1
 21764                           intcon3	equ	0xFF0
 21765                           indf0	equ	0xFEF
 21766                           postinc0	equ	0xFEE
 21767                           fsr0h	equ	0xFEA
 21768                           fsr0l	equ	0xFE9
 21769                           wreg	equ	0xFE8
 21770                           indf1	equ	0xFE7
 21771                           postdec1	equ	0xFE5
 21772                           plusw1	equ	0xFE3
 21773                           fsr1h	equ	0xFE2
 21774                           fsr1l	equ	0xFE1
 21775                           indf2	equ	0xFDF
 21776                           postinc2	equ	0xFDE
 21777                           postdec2	equ	0xFDD
 21778                           plusw2	equ	0xFDB
 21779                           fsr2h	equ	0xFDA
 21780                           fsr2l	equ	0xFD9
 21781                           status	equ	0xFD8
 21782                           
 21783 ;; *************** function _ExternalFlash_MediaInitialize *****************
 21784 ;; Defined at:
 21785 ;;		line 10 in file "external_flash.c"
 21786 ;; Parameters:    Size  Location     Type
 21787 ;;  config          2    0[COMRAM] PTR void 
 21788 ;;		 -> NULL(0), 
 21789 ;; Auto vars:     Size  Location     Type
 21790 ;;		None
 21791 ;; Return value:  Size  Location     Type
 21792 ;;                  2    0[COMRAM] PTR struct .
 21793 ;; Registers used:
 21794 ;;		wreg, status,2, status,0
 21795 ;; Tracked objects:
 21796 ;;		On entry : 0/0
 21797 ;;		On exit  : 0/0
 21798 ;;		Unchanged: 0/0
 21799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21804 ;;Total ram usage:        2 bytes
 21805 ;; Hardware stack levels used:    1
 21806 ;; This function calls:
 21807 ;;		Nothing
 21808 ;; This function is called by:
 21809 ;;		_USBMSDInit
 21810 ;;		_MSDProcessCommand
 21811 ;; This function uses a non-reentrant model
 21812 ;;
 21813                           
 21814                           	psect	text100
 21815  0087B8                     __ptext100:
 21816                           	opt stack 0
 21817  0087B8                     _ExternalFlash_MediaInitialize:
 21818                           	opt stack 26
 21819                           
 21820                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 21821                           
 21822                           ;incstack = 0
 21823  0087B8  0101               	movlb	1	; () banked
 21824  0087BA  81D3               	bsf	(_mediaInformation+1)& (0+255),0,b
 21825                           
 21826                           ; BSR set to: 1
 21827                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 21828  0087BC  0E02               	movlw	2
 21829  0087BE  6FD5               	movwf	(_mediaInformation+3)& (0+255),b
 21830  0087C0  0E00               	movlw	0
 21831  0087C2  6FD4               	movwf	(_mediaInformation+2)& (0+255),b
 21832                           
 21833                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 21834  0087C4  0E00               	movlw	0
 21835  0087C6  6FD2               	movwf	_mediaInformation& (0+255),b
 21836                           
 21837                           ; BSR set to: 1
 21838                           ;external_flash.c: 15: return &mediaInformation;
 21839  0087C8  0ED2               	movlw	low _mediaInformation
 21840  0087CA  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 21841  0087CC  0E01               	movlw	high _mediaInformation
 21842  0087CE  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 21843  0087D0  0012               	return	
 21844  0087D2                     __end_of_ExternalFlash_MediaInitialize:
 21845                           	opt stack 0
 21846                           tosu	equ	0xFFF
 21847                           tosh	equ	0xFFE
 21848                           tosl	equ	0xFFD
 21849                           pclath	equ	0xFFA
 21850                           tblptru	equ	0xFF8
 21851                           tblptrh	equ	0xFF7
 21852                           tblptrl	equ	0xFF6
 21853                           tablat	equ	0xFF5
 21854                           prodh	equ	0xFF4
 21855                           prodl	equ	0xFF3
 21856                           intcon	equ	0xFF2
 21857                           intcon2	equ	0xFF1
 21858                           intcon3	equ	0xFF0
 21859                           indf0	equ	0xFEF
 21860                           postinc0	equ	0xFEE
 21861                           fsr0h	equ	0xFEA
 21862                           fsr0l	equ	0xFE9
 21863                           wreg	equ	0xFE8
 21864                           indf1	equ	0xFE7
 21865                           postdec1	equ	0xFE5
 21866                           plusw1	equ	0xFE3
 21867                           fsr1h	equ	0xFE2
 21868                           fsr1l	equ	0xFE1
 21869                           indf2	equ	0xFDF
 21870                           postinc2	equ	0xFDE
 21871                           postdec2	equ	0xFDD
 21872                           plusw2	equ	0xFDB
 21873                           fsr2h	equ	0xFDA
 21874                           fsr2l	equ	0xFD9
 21875                           status	equ	0xFD8
 21876                           
 21877 ;; *************** function _ExternalFlash_MediaDetect *****************
 21878 ;; Defined at:
 21879 ;;		line 29 in file "external_flash.c"
 21880 ;; Parameters:    Size  Location     Type
 21881 ;;  config          2    0[COMRAM] PTR void 
 21882 ;;		 -> NULL(0), 
 21883 ;; Auto vars:     Size  Location     Type
 21884 ;;		None
 21885 ;; Return value:  Size  Location     Type
 21886 ;;                  1    wreg      unsigned char 
 21887 ;; Registers used:
 21888 ;;		wreg
 21889 ;; Tracked objects:
 21890 ;;		On entry : 0/0
 21891 ;;		On exit  : 0/0
 21892 ;;		Unchanged: 0/0
 21893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21898 ;;Total ram usage:        2 bytes
 21899 ;; Hardware stack levels used:    1
 21900 ;; This function calls:
 21901 ;;		Nothing
 21902 ;; This function is called by:
 21903 ;;		_USBMSDInit
 21904 ;;		_MSDProcessCommand
 21905 ;; This function uses a non-reentrant model
 21906 ;;
 21907                           
 21908                           	psect	text101
 21909  0089C0                     __ptext101:
 21910                           	opt stack 0
 21911  0089C0                     _ExternalFlash_MediaDetect:
 21912                           	opt stack 26
 21913                           
 21914                           ;external_flash.c: 31: return 1;
 21915                           
 21916                           ; BSR set to: 1
 21917                           ;incstack = 0
 21918  0089C0  0E01               	movlw	1
 21919  0089C2  0012               	return	
 21920  0089C4                     __end_of_ExternalFlash_MediaDetect:
 21921                           	opt stack 0
 21922                           tosu	equ	0xFFF
 21923                           tosh	equ	0xFFE
 21924                           tosl	equ	0xFFD
 21925                           pclath	equ	0xFFA
 21926                           tblptru	equ	0xFF8
 21927                           tblptrh	equ	0xFF7
 21928                           tblptrl	equ	0xFF6
 21929                           tablat	equ	0xFF5
 21930                           prodh	equ	0xFF4
 21931                           prodl	equ	0xFF3
 21932                           intcon	equ	0xFF2
 21933                           intcon2	equ	0xFF1
 21934                           intcon3	equ	0xFF0
 21935                           indf0	equ	0xFEF
 21936                           postinc0	equ	0xFEE
 21937                           fsr0h	equ	0xFEA
 21938                           fsr0l	equ	0xFE9
 21939                           wreg	equ	0xFE8
 21940                           indf1	equ	0xFE7
 21941                           postdec1	equ	0xFE5
 21942                           plusw1	equ	0xFE3
 21943                           fsr1h	equ	0xFE2
 21944                           fsr1l	equ	0xFE1
 21945                           indf2	equ	0xFDF
 21946                           postinc2	equ	0xFDE
 21947                           postdec2	equ	0xFDD
 21948                           plusw2	equ	0xFDB
 21949                           fsr2h	equ	0xFDA
 21950                           fsr2l	equ	0xFD9
 21951                           status	equ	0xFD8
 21952                           
 21953 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 21954 ;; Defined at:
 21955 ;;		line 74 in file "app_device_custom_hid.c"
 21956 ;; Parameters:    Size  Location     Type
 21957 ;;		None
 21958 ;; Auto vars:     Size  Location     Type
 21959 ;;  idx             1    0        unsigned char 
 21960 ;; Return value:  Size  Location     Type
 21961 ;;                  1    wreg      void 
 21962 ;; Registers used:
 21963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21964 ;; Tracked objects:
 21965 ;;		On entry : 0/0
 21966 ;;		On exit  : 0/0
 21967 ;;		Unchanged: 0/0
 21968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21971 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21972 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21973 ;;Total ram usage:        4 bytes
 21974 ;; Hardware stack levels used:    1
 21975 ;; Hardware stack levels required when called:   11
 21976 ;; This function calls:
 21977 ;;		_USBTransferOnePacket
 21978 ;;		_api_parse
 21979 ;;		_api_prepare
 21980 ;; This function is called by:
 21981 ;;		_main
 21982 ;; This function uses a non-reentrant model
 21983 ;;
 21984                           
 21985                           	psect	text102
 21986  006264                     __ptext102:
 21987                           	opt stack 0
 21988  006264                     _APP_DeviceCustomHIDTasks:
 21989                           	opt stack 19
 21990                           
 21991                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 21992                           
 21993                           ;incstack = 0
 21994  006264  0E20               	movlw	32
 21995  006266  0100               	movlb	0	; () banked
 21996  006268  61F6               	cpfslt	_USBDeviceState& (0+255),b
 21997  00626A  D001               	goto	l966
 21998  00626C  0012               	return	
 21999  00626E                     l966:
 22000                           
 22001                           ; BSR set to: 0
 22002                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 22003  00626E  B265               	btfsc	3941,1,c	;volatile
 22004  006270  0012               	return	
 22005                           
 22006                           ; BSR set to: 0
 22007                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 22008                           
 22009                           ; BSR set to: 0
 22010                           
 22011                           ; BSR set to: 0
 22012                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 22013  006272  0101               	movlb	1	; () banked
 22014  006274  517C               	movf	_USBOutHandle& (0+255),w,b
 22015  006276  117D               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 22016  006278  B4D8               	btfsc	status,2,c
 22017  00627A  D006               	goto	u12280
 22018                           
 22019                           ; BSR set to: 1
 22020  00627C  C17C  FFD9         	movff	_USBOutHandle,fsr2l
 22021  006280  C17D  FFDA         	movff	_USBOutHandle+1,fsr2h
 22022  006284  BEDF               	btfsc	indf2,7,c
 22023  006286  0012               	return	
 22024  006288                     u12280:
 22025                           
 22026                           ; BSR set to: 1
 22027                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 22028                           
 22029                           ; BSR set to: 1
 22030  006288  517A               	movf	_USBInHandle& (0+255),w,b
 22031  00628A  117B               	iorwf	(_USBInHandle+1)& (0+255),w,b
 22032  00628C  B4D8               	btfsc	status,2,c
 22033  00628E  D006               	goto	u12300
 22034                           
 22035                           ; BSR set to: 1
 22036  006290  C17A  FFD9         	movff	_USBInHandle,fsr2l
 22037  006294  C17B  FFDA         	movff	_USBInHandle+1,fsr2h
 22038  006298  BEDF               	btfsc	indf2,7,c
 22039  00629A  D020               	goto	l972
 22040  00629C                     u12300:
 22041                           
 22042                           ; BSR set to: 1
 22043                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 22044                           
 22045                           ; BSR set to: 1
 22046  00629C  0E90               	movlw	_ReceivedDataBuffer& (0+255)
 22047  00629E  0100               	movlb	0	; () banked
 22048  0062A0  6FAB               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 22049  0062A2  6BAC               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 22050  0062A4  C0AB  F0A7         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 22051  0062A8  C0AC  F0A8         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 22052  0062AC  0E40               	movlw	_ToSendDataBuffer& (0+255)
 22053  0062AE  6FAD               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 22054  0062B0  6BAE               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 22055  0062B2  C0AD  F0A9         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 22056  0062B6  C0AE  F0AA         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 22057  0062BA  ECE5  F020         	call	_api_prepare	;wreg free
 22058                           
 22059                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 22060  0062BE  0E01               	movlw	1
 22061  0062C0  6E01               	movwf	USBTransferOnePacket@dir,c
 22062  0062C2  0E40               	movlw	low _ToSendDataBuffer
 22063  0062C4  6E02               	movwf	USBTransferOnePacket@data,c
 22064  0062C6  0E03               	movlw	high _ToSendDataBuffer
 22065  0062C8  6E03               	movwf	USBTransferOnePacket@data+1,c
 22066  0062CA  0E40               	movlw	64
 22067  0062CC  6E04               	movwf	USBTransferOnePacket@len,c
 22068  0062CE  0E01               	movlw	1
 22069  0062D0  ECEB  F026         	call	_USBTransferOnePacket
 22070  0062D4  C001  F17A         	movff	?_USBTransferOnePacket,_USBInHandle
 22071  0062D8  C002  F17B         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 22072  0062DC                     l972:
 22073                           
 22074                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 22075  0062DC  0E90               	movlw	low _ReceivedDataBuffer
 22076  0062DE  0100               	movlb	0	; () banked
 22077  0062E0  6F93               	movwf	api_parse@inBuffer& (0+255),b
 22078  0062E2  0E02               	movlw	high _ReceivedDataBuffer
 22079  0062E4  6F94               	movwf	(api_parse@inBuffer+1)& (0+255),b
 22080  0062E6  0E40               	movlw	64
 22081  0062E8  6F95               	movwf	api_parse@receivedDataLength& (0+255),b
 22082  0062EA  EC4F  F02C         	call	_api_parse	;wreg free
 22083                           
 22084                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 22085  0062EE  0E00               	movlw	0
 22086  0062F0  6E01               	movwf	USBTransferOnePacket@dir,c
 22087  0062F2  0E90               	movlw	low _ReceivedDataBuffer
 22088  0062F4  6E02               	movwf	USBTransferOnePacket@data,c
 22089  0062F6  0E02               	movlw	high _ReceivedDataBuffer
 22090  0062F8  6E03               	movwf	USBTransferOnePacket@data+1,c
 22091  0062FA  0E40               	movlw	64
 22092  0062FC  6E04               	movwf	USBTransferOnePacket@len,c
 22093  0062FE  0E01               	movlw	1
 22094  006300  ECEB  F026         	call	_USBTransferOnePacket
 22095  006304  C001  F17C         	movff	?_USBTransferOnePacket,_USBOutHandle
 22096  006308  C002  F17D         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 22097  00630C  0012               	return	
 22098  00630E                     __end_of_APP_DeviceCustomHIDTasks:
 22099                           	opt stack 0
 22100                           tosu	equ	0xFFF
 22101                           tosh	equ	0xFFE
 22102                           tosl	equ	0xFFD
 22103                           pclath	equ	0xFFA
 22104                           tblptru	equ	0xFF8
 22105                           tblptrh	equ	0xFF7
 22106                           tblptrl	equ	0xFF6
 22107                           tablat	equ	0xFF5
 22108                           prodh	equ	0xFF4
 22109                           prodl	equ	0xFF3
 22110                           intcon	equ	0xFF2
 22111                           intcon2	equ	0xFF1
 22112                           intcon3	equ	0xFF0
 22113                           indf0	equ	0xFEF
 22114                           postinc0	equ	0xFEE
 22115                           fsr0h	equ	0xFEA
 22116                           fsr0l	equ	0xFE9
 22117                           wreg	equ	0xFE8
 22118                           indf1	equ	0xFE7
 22119                           postdec1	equ	0xFE5
 22120                           plusw1	equ	0xFE3
 22121                           fsr1h	equ	0xFE2
 22122                           fsr1l	equ	0xFE1
 22123                           indf2	equ	0xFDF
 22124                           postinc2	equ	0xFDE
 22125                           postdec2	equ	0xFDD
 22126                           plusw2	equ	0xFDB
 22127                           fsr2h	equ	0xFDA
 22128                           fsr2l	equ	0xFD9
 22129                           status	equ	0xFD8
 22130                           
 22131 ;; *************** function _api_prepare *****************
 22132 ;; Defined at:
 22133 ;;		line 53 in file "api.c"
 22134 ;; Parameters:    Size  Location     Type
 22135 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 22136 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22137 ;;  outBuffer       2   73[BANK0 ] PTR unsigned char 
 22138 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22139 ;; Auto vars:     Size  Location     Type
 22140 ;;  command         1   93[COMRAM] enum E6715
 22141 ;; Return value:  Size  Location     Type
 22142 ;;                  1    wreg      void 
 22143 ;; Registers used:
 22144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22145 ;; Tracked objects:
 22146 ;;		On entry : 0/0
 22147 ;;		On exit  : 0/0
 22148 ;;		Unchanged: 0/0
 22149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22150 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22153 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22154 ;;Total ram usage:        5 bytes
 22155 ;; Hardware stack levels used:    1
 22156 ;; Hardware stack levels required when called:    9
 22157 ;; This function calls:
 22158 ;;		__fill_buffer_find_file
 22159 ;;		__fill_buffer_get_bootloader_details
 22160 ;;		__fill_buffer_get_configuration
 22161 ;;		__fill_buffer_get_display
 22162 ;;		__fill_buffer_get_file_details
 22163 ;;		__fill_buffer_get_status
 22164 ;;		__fill_buffer_read_file
 22165 ;;		_memcpy
 22166 ;; This function is called by:
 22167 ;;		_main
 22168 ;;		_APP_DeviceCustomHIDTasks
 22169 ;; This function uses a non-reentrant model
 22170 ;;
 22171                           
 22172                           	psect	text103
 22173  0041CA                     __ptext103:
 22174                           	opt stack 0
 22175  0041CA                     _api_prepare:
 22176                           	opt stack 21
 22177                           
 22178                           ;api.c: 55: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 22179                           
 22180                           ;incstack = 0
 22181  0041CA  C0A7  FFD9         	movff	api_prepare@inBuffer,fsr2l
 22182  0041CE  C0A8  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 22183  0041D2  50DF               	movf	indf2,w,c
 22184  0041D4  6E5E               	movwf	api_prepare@command,c
 22185                           
 22186                           ;api.c: 57: if(command>0x7F)
 22187  0041D6  0E7F               	movlw	127
 22188  0041D8  645E               	cpfsgt	api_prepare@command,c
 22189  0041DA  D088               	goto	l2634
 22190  0041DC  D031               	goto	l2627
 22191  0041DE                     
 22192                           ;api.c: 73: _fill_buffer_get_file_details(inBuffer, outBuffer);
 22193  0041DE  C0A7  F03F         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 22194  0041E2  C0A8  F040         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 22195  0041E6  C0A9  F041         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 22196  0041EA  C0AA  F042         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 22197  0041EE  ECB4  F039         	call	__fill_buffer_get_file_details	;wreg free
 22198                           
 22199                           ;api.c: 74: break;
 22200  0041F2  0012               	return	
 22201  0041F4                     
 22202                           ;api.c: 78: _fill_buffer_find_file(inBuffer, outBuffer);
 22203  0041F4  C0A7  F044         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 22204  0041F8  C0A8  F045         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 22205  0041FC  C0A9  F046         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 22206  004200  C0AA  F047         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 22207  004204  EC7E  F032         	call	__fill_buffer_find_file	;wreg free
 22208                           
 22209                           ;api.c: 79: break;
 22210  004208  0012               	return	
 22211  00420A                     
 22212                           ;api.c: 83: _fill_buffer_read_file(inBuffer, outBuffer);
 22213  00420A  C0A7  F093         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 22214  00420E  C0A8  F094         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 22215  004212  C0A9  F095         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 22216  004216  C0AA  F096         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 22217  00421A  EC38  F014         	call	__fill_buffer_read_file	;wreg free
 22218                           
 22219                           ;api.c: 84: break;
 22220  00421E  0012               	return	
 22221  004220                     
 22222                           ;api.c: 87: outBuffer[0] = 0x99;
 22223  004220  C0A9  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22224  004224  C0AA  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22225  004228  0E99               	movlw	153
 22226  00422A  6EDF               	movwf	indf2,c
 22227                           
 22228                           ;api.c: 88: outBuffer[1] = 0x99;
 22229  00422C  0100               	movlb	0	; () banked
 22230  00422E  EE20 F001          	lfsr	2,1
 22231  004232  51A9               	movf	api_prepare@outBuffer& (0+255),w,b
 22232  004234  26D9               	addwf	fsr2l,f,c
 22233  004236  51AA               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22234  004238  22DA               	addwfc	fsr2h,f,c
 22235  00423A  0E99               	movlw	153
 22236  00423C  6EDF               	movwf	indf2,c
 22237                           
 22238                           ;api.c: 89: }
 22239  00423E  0012               	return	
 22240  004240                     l2627:
 22241                           
 22242                           ; BSR set to: 0
 22243  004240  505E               	movf	api_prepare@command,w,c
 22244                           
 22245                           ; Switch size 1, requested type "space"
 22246                           ; Number of cases is 3, Range of values is 128 to 130
 22247                           ; switch strategies available:
 22248                           ; Name         Instructions Cycles
 22249                           ; simple_byte           10     6 (average)
 22250                           ;	Chosen strategy is simple_byte
 22251  004242  0A80               	xorlw	128	; case 128
 22252  004244  B4D8               	btfsc	status,2,c
 22253  004246  D7CB               	goto	l2628
 22254  004248  0A01               	xorlw	1	; case 129
 22255  00424A  B4D8               	btfsc	status,2,c
 22256  00424C  D7D3               	goto	l2630
 22257  00424E  0A03               	xorlw	3	; case 130
 22258  004250  B4D8               	btfsc	status,2,c
 22259  004252  D7DB               	goto	l2631
 22260  004254  D7E5               	goto	l2632
 22261  004256                     
 22262                           ;api.c: 98: _fill_buffer_get_status(outBuffer);
 22263  004256  C0A9  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 22264  00425A  C0AA  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 22265  00425E  EC26  F02A         	call	__fill_buffer_get_status	;wreg free
 22266                           
 22267                           ;api.c: 99: break;
 22268  004262  0012               	return	
 22269  004264                     
 22270                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 0);
 22271  004264  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22272  004268  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22273  00426C  0E00               	movlw	0
 22274  00426E  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22275  004270  ECD3  F02F         	call	__fill_buffer_get_display	;wreg free
 22276                           
 22277                           ;api.c: 104: break;
 22278  004274  0012               	return	
 22279  004276                     
 22280                           ;api.c: 108: _fill_buffer_get_display(outBuffer, 1);
 22281  004276  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22282  00427A  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22283  00427E  0E01               	movlw	1
 22284  004280  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22285  004282  ECD3  F02F         	call	__fill_buffer_get_display	;wreg free
 22286                           
 22287                           ;api.c: 109: break;
 22288  004286  0012               	return	
 22289  004288                     
 22290                           ;api.c: 113: _fill_buffer_get_bootloader_details(outBuffer);
 22291  004288  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 22292  00428C  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 22293  004290  EC3D  F017         	call	__fill_buffer_get_bootloader_details	;wreg free
 22294                           
 22295                           ;api.c: 114: break;
 22296  004294  0012               	return	
 22297  004296                     
 22298                           ;api.c: 118: _fill_buffer_get_configuration(outBuffer);
 22299  004296  C0A9  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 22300  00429A  C0AA  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 22301  00429E  EC6F  F033         	call	__fill_buffer_get_configuration	;wreg free
 22302                           
 22303                           ;api.c: 119: break;
 22304  0042A2  0012               	return	
 22305  0042A4                     
 22306                           ;api.c: 123: memcpy(outBuffer, inBuffer, 64);
 22307  0042A4  C0A9  F001         	movff	api_prepare@outBuffer,memcpy@d1
 22308  0042A8  C0AA  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 22309  0042AC  C0A7  F003         	movff	api_prepare@inBuffer,memcpy@s1
 22310  0042B0  C0A8  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 22311  0042B4  5003               	movf	memcpy@s1,w,c
 22312  0042B6  1004               	iorwf	memcpy@s1+1,w,c
 22313  0042B8  A4D8               	btfss	status,2,c
 22314  0042BA  0E20               	movlw	32
 22315  0042BC  6E05               	movwf	memcpy@s1+2,c
 22316  0042BE  0E00               	movlw	0
 22317  0042C0  6E07               	movwf	memcpy@n+1,c
 22318  0042C2  0E40               	movlw	64
 22319  0042C4  6E06               	movwf	memcpy@n,c
 22320  0042C6  ECF2  F03A         	call	_memcpy	;wreg free
 22321                           
 22322                           ;api.c: 124: break;
 22323  0042CA  0012               	return	
 22324  0042CC                     
 22325                           ;api.c: 127: outBuffer[0] = 0x99;
 22326  0042CC  C0A9  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22327  0042D0  C0AA  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22328  0042D4  0E99               	movlw	153
 22329  0042D6  6EDF               	movwf	indf2,c
 22330                           
 22331                           ;api.c: 128: outBuffer[1] = 0x99;
 22332  0042D8  0100               	movlb	0	; () banked
 22333  0042DA  EE20 F001          	lfsr	2,1
 22334  0042DE  51A9               	movf	api_prepare@outBuffer& (0+255),w,b
 22335  0042E0  26D9               	addwf	fsr2l,f,c
 22336  0042E2  51AA               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22337  0042E4  22DA               	addwfc	fsr2h,f,c
 22338  0042E6  0E99               	movlw	153
 22339  0042E8  6EDF               	movwf	indf2,c
 22340                           
 22341                           ;api.c: 129: }
 22342  0042EA  0012               	return	
 22343  0042EC                     l2634:
 22344                           
 22345                           ; BSR set to: 0
 22346  0042EC  505E               	movf	api_prepare@command,w,c
 22347                           
 22348                           ; Switch size 1, requested type "space"
 22349                           ; Number of cases is 6, Range of values is 16 to 32
 22350                           ; switch strategies available:
 22351                           ; Name         Instructions Cycles
 22352                           ; simple_byte           19    10 (average)
 22353                           ;	Chosen strategy is simple_byte
 22354  0042EE  0A10               	xorlw	16	; case 16
 22355  0042F0  B4D8               	btfsc	status,2,c
 22356  0042F2  D7B1               	goto	l2635
 22357  0042F4  0A01               	xorlw	1	; case 17
 22358  0042F6  B4D8               	btfsc	status,2,c
 22359  0042F8  D7B5               	goto	l2637
 22360  0042FA  0A03               	xorlw	3	; case 18
 22361  0042FC  B4D8               	btfsc	status,2,c
 22362  0042FE  D7BB               	goto	l2638
 22363  004300  0A01               	xorlw	1	; case 19
 22364  004302  B4D8               	btfsc	status,2,c
 22365  004304  D7C1               	goto	l2639
 22366  004306  0A07               	xorlw	7	; case 20
 22367  004308  B4D8               	btfsc	status,2,c
 22368  00430A  D7C5               	goto	l2640
 22369  00430C  0A34               	xorlw	52	; case 32
 22370  00430E  B4D8               	btfsc	status,2,c
 22371  004310  D7C9               	goto	l2641
 22372  004312  D7DC               	goto	l2642
 22373  004314                     __end_of_api_prepare:
 22374                           	opt stack 0
 22375                           tosu	equ	0xFFF
 22376                           tosh	equ	0xFFE
 22377                           tosl	equ	0xFFD
 22378                           pclath	equ	0xFFA
 22379                           tblptru	equ	0xFF8
 22380                           tblptrh	equ	0xFF7
 22381                           tblptrl	equ	0xFF6
 22382                           tablat	equ	0xFF5
 22383                           prodh	equ	0xFF4
 22384                           prodl	equ	0xFF3
 22385                           intcon	equ	0xFF2
 22386                           intcon2	equ	0xFF1
 22387                           intcon3	equ	0xFF0
 22388                           indf0	equ	0xFEF
 22389                           postinc0	equ	0xFEE
 22390                           fsr0h	equ	0xFEA
 22391                           fsr0l	equ	0xFE9
 22392                           wreg	equ	0xFE8
 22393                           indf1	equ	0xFE7
 22394                           postdec1	equ	0xFE5
 22395                           plusw1	equ	0xFE3
 22396                           fsr1h	equ	0xFE2
 22397                           fsr1l	equ	0xFE1
 22398                           indf2	equ	0xFDF
 22399                           postinc2	equ	0xFDE
 22400                           postdec2	equ	0xFDD
 22401                           plusw2	equ	0xFDB
 22402                           fsr2h	equ	0xFDA
 22403                           fsr2l	equ	0xFD9
 22404                           status	equ	0xFD8
 22405                           
 22406 ;; *************** function __fill_buffer_read_file *****************
 22407 ;; Defined at:
 22408 ;;		line 384 in file "api.c"
 22409 ;; Parameters:    Size  Location     Type
 22410 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 22411 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22412 ;;  outBuffer       2   53[BANK0 ] PTR unsigned char 
 22413 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22414 ;; Auto vars:     Size  Location     Type
 22415 ;;  start           4   67[BANK0 ] unsigned long 
 22416 ;;  data_length     4   63[BANK0 ] unsigned long 
 22417 ;;  file_size       4   59[BANK0 ] unsigned long 
 22418 ;; Return value:  Size  Location     Type
 22419 ;;                  1    wreg      void 
 22420 ;; Registers used:
 22421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22422 ;; Tracked objects:
 22423 ;;		On entry : 0/0
 22424 ;;		On exit  : 0/0
 22425 ;;		Unchanged: 0/0
 22426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22427 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22428 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22429 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22430 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22431 ;;Total ram usage:       20 bytes
 22432 ;; Hardware stack levels used:    1
 22433 ;; Hardware stack levels required when called:    8
 22434 ;; This function calls:
 22435 ;;		_fat_get_file_size
 22436 ;;		_fat_read_from_file
 22437 ;; This function is called by:
 22438 ;;		_api_prepare
 22439 ;; This function uses a non-reentrant model
 22440 ;;
 22441                           
 22442                           	psect	text104
 22443  002870                     __ptext104:
 22444                           	opt stack 0
 22445  002870                     __fill_buffer_read_file:
 22446                           	opt stack 21
 22447                           
 22448                           ;api.c: 386: uint32_t start;;api.c: 387: uint32_t file_size;;api.c: 388: uint32_t data_l
      +                          ength;;api.c: 391: outBuffer[0] = DATAREQUEST_FIND_FILE;
 22449                           
 22450                           ;incstack = 0
 22451  002870  C095  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 22452  002874  C096  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 22453  002878  0E81               	movlw	129
 22454  00287A  6EDF               	movwf	indf2,c
 22455                           
 22456                           ;api.c: 394: outBuffer[1] = 0xC125 >> 8;
 22457  00287C  0100               	movlb	0	; () banked
 22458  00287E  EE20 F001          	lfsr	2,1
 22459  002882  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22460  002884  26D9               	addwf	fsr2l,f,c
 22461  002886  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22462  002888  22DA               	addwfc	fsr2h,f,c
 22463  00288A  0EC1               	movlw	193
 22464  00288C  6EDF               	movwf	indf2,c
 22465                           
 22466                           ; BSR set to: 0
 22467                           ;api.c: 395: outBuffer[2] = (uint8_t) 0xC125;
 22468  00288E  EE20 F002          	lfsr	2,2
 22469  002892  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22470  002894  26D9               	addwf	fsr2l,f,c
 22471  002896  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22472  002898  22DA               	addwfc	fsr2h,f,c
 22473  00289A  0E25               	movlw	37
 22474  00289C  6EDF               	movwf	indf2,c
 22475                           
 22476                           ; BSR set to: 0
 22477                           ;api.c: 398: outBuffer[3] = inBuffer[1];
 22478  00289E  EE20 F001          	lfsr	2,1
 22479  0028A2  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22480  0028A4  26D9               	addwf	fsr2l,f,c
 22481  0028A6  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22482  0028A8  22DA               	addwfc	fsr2h,f,c
 22483  0028AA  EE10 F003          	lfsr	1,3
 22484  0028AE  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22485  0028B0  26E1               	addwf	fsr1l,f,c
 22486  0028B2  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22487  0028B4  22E2               	addwfc	fsr1h,f,c
 22488  0028B6  CFDF FFE7          	movff	indf2,indf1
 22489                           
 22490                           ; BSR set to: 0
 22491                           ;api.c: 401: outBuffer[4] = inBuffer[1];
 22492  0028BA  EE20 F001          	lfsr	2,1
 22493  0028BE  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22494  0028C0  26D9               	addwf	fsr2l,f,c
 22495  0028C2  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22496  0028C4  22DA               	addwfc	fsr2h,f,c
 22497  0028C6  EE10 F004          	lfsr	1,4
 22498  0028CA  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22499  0028CC  26E1               	addwf	fsr1l,f,c
 22500  0028CE  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22501  0028D0  22E2               	addwfc	fsr1h,f,c
 22502  0028D2  CFDF FFE7          	movff	indf2,indf1
 22503                           
 22504                           ; BSR set to: 0
 22505                           ;api.c: 402: outBuffer[5] = inBuffer[2];
 22506  0028D6  EE20 F002          	lfsr	2,2
 22507  0028DA  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22508  0028DC  26D9               	addwf	fsr2l,f,c
 22509  0028DE  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22510  0028E0  22DA               	addwfc	fsr2h,f,c
 22511  0028E2  EE10 F005          	lfsr	1,5
 22512  0028E6  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22513  0028E8  26E1               	addwf	fsr1l,f,c
 22514  0028EA  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22515  0028EC  22E2               	addwfc	fsr1h,f,c
 22516  0028EE  CFDF FFE7          	movff	indf2,indf1
 22517                           
 22518                           ; BSR set to: 0
 22519                           ;api.c: 403: outBuffer[6] = inBuffer[3];
 22520  0028F2  EE20 F003          	lfsr	2,3
 22521  0028F6  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22522  0028F8  26D9               	addwf	fsr2l,f,c
 22523  0028FA  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22524  0028FC  22DA               	addwfc	fsr2h,f,c
 22525  0028FE  EE10 F006          	lfsr	1,6
 22526  002902  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22527  002904  26E1               	addwf	fsr1l,f,c
 22528  002906  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22529  002908  22E2               	addwfc	fsr1h,f,c
 22530  00290A  CFDF FFE7          	movff	indf2,indf1
 22531                           
 22532                           ; BSR set to: 0
 22533                           ;api.c: 404: outBuffer[7] = inBuffer[4];
 22534  00290E  EE20 F004          	lfsr	2,4
 22535  002912  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22536  002914  26D9               	addwf	fsr2l,f,c
 22537  002916  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22538  002918  22DA               	addwfc	fsr2h,f,c
 22539  00291A  EE10 F007          	lfsr	1,7
 22540  00291E  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22541  002920  26E1               	addwf	fsr1l,f,c
 22542  002922  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22543  002924  22E2               	addwfc	fsr1h,f,c
 22544  002926  CFDF FFE7          	movff	indf2,indf1
 22545                           
 22546                           ; BSR set to: 0
 22547                           ;api.c: 407: start = inBuffer[4];
 22548  00292A  EE20 F004          	lfsr	2,4
 22549  00292E  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22550  002930  26D9               	addwf	fsr2l,f,c
 22551  002932  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22552  002934  22DA               	addwfc	fsr2h,f,c
 22553  002936  50DF               	movf	indf2,w,c
 22554  002938  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 22555  00293A  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 22556  00293C  6FA3               	movwf	__fill_buffer_read_file@start& (0+255),b
 22557  00293E  6BA4               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 22558  002940  6BA5               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 22559  002942  6BA6               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 22560                           
 22561                           ; BSR set to: 0
 22562                           ;api.c: 408: start <<= 8;
 22563  002944  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22564  002948  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22565  00294C  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22566  002950  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 22567                           
 22568                           ; BSR set to: 0
 22569                           ;api.c: 409: start |= inBuffer[3];
 22570  002952  EE20 F003          	lfsr	2,3
 22571  002956  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22572  002958  26D9               	addwf	fsr2l,f,c
 22573  00295A  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22574  00295C  22DA               	addwfc	fsr2h,f,c
 22575  00295E  50DF               	movf	indf2,w,c
 22576  002960  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 22577  002962  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 22578  002964  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22579                           
 22580                           ; BSR set to: 0
 22581                           ;api.c: 410: start <<= 8;
 22582  002966  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22583  00296A  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22584  00296E  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22585  002972  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 22586                           
 22587                           ; BSR set to: 0
 22588                           ;api.c: 411: start |= inBuffer[2];
 22589  002974  EE20 F002          	lfsr	2,2
 22590  002978  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22591  00297A  26D9               	addwf	fsr2l,f,c
 22592  00297C  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22593  00297E  22DA               	addwfc	fsr2h,f,c
 22594  002980  50DF               	movf	indf2,w,c
 22595  002982  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 22596  002984  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 22597  002986  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22598                           
 22599                           ; BSR set to: 0
 22600                           ;api.c: 412: start <<= 8;
 22601  002988  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22602  00298C  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22603  002990  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22604  002994  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 22605                           
 22606                           ; BSR set to: 0
 22607                           ;api.c: 413: start |= inBuffer[1];
 22608  002996  EE20 F001          	lfsr	2,1
 22609  00299A  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22610  00299C  26D9               	addwf	fsr2l,f,c
 22611  00299E  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22612  0029A0  22DA               	addwfc	fsr2h,f,c
 22613  0029A2  50DF               	movf	indf2,w,c
 22614  0029A4  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 22615  0029A6  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 22616  0029A8  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22617                           
 22618                           ; BSR set to: 0
 22619                           ;api.c: 416: file_size = fat_get_file_size(inBuffer[1]);
 22620  0029AA  EE20 F001          	lfsr	2,1
 22621  0029AE  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22622  0029B0  26D9               	addwf	fsr2l,f,c
 22623  0029B2  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22624  0029B4  22DA               	addwfc	fsr2h,f,c
 22625  0029B6  50DF               	movf	indf2,w,c
 22626  0029B8  EC0B  F039         	call	_fat_get_file_size
 22627  0029BC  C030  F09B         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 22628  0029C0  C031  F09C         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 22629  0029C4  C032  F09D         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 22630  0029C8  C033  F09E         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 22631                           
 22632                           ;api.c: 417: data_length = file_size - start;
 22633  0029CC  C0A3  F097         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 22634  0029D0  C0A4  F098         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 22635  0029D4  C0A5  F099         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 22636  0029D8  C0A6  F09A         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 22637  0029DC  0100               	movlb	0	; () banked
 22638  0029DE  1F97               	comf	??__fill_buffer_read_file& (0+255),f,b
 22639  0029E0  1F98               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 22640  0029E2  1F99               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 22641  0029E4  1F9A               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 22642  0029E6  2B97               	incf	??__fill_buffer_read_file& (0+255),f,b
 22643  0029E8  0E00               	movlw	0
 22644  0029EA  2398               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 22645  0029EC  2399               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 22646  0029EE  239A               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 22647  0029F0  519B               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 22648  0029F2  2597               	addwf	??__fill_buffer_read_file& (0+255),w,b
 22649  0029F4  6F9F               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22650  0029F6  519C               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 22651  0029F8  2198               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 22652  0029FA  6FA0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22653  0029FC  519D               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 22654  0029FE  2199               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 22655  002A00  6FA1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22656  002A02  519E               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 22657  002A04  219A               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 22658  002A06  6FA2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22659                           
 22660                           ; BSR set to: 0
 22661                           ;api.c: 418: if(data_length>54)
 22662  002A08  51A2               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 22663  002A0A  11A1               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 22664  002A0C  11A0               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 22665  002A0E  E104               	bnz	u11130
 22666  002A10  0E37               	movlw	55
 22667  002A12  5D9F               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 22668  002A14  A0D8               	btfss	status,0,c
 22669  002A16  D008               	goto	l2694
 22670  002A18                     u11130:
 22671                           
 22672                           ; BSR set to: 0
 22673                           ;api.c: 419: {;api.c: 421: data_length = 54;
 22674  002A18  0E36               	movlw	54
 22675  002A1A  6F9F               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22676  002A1C  0E00               	movlw	0
 22677  002A1E  6FA0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22678  002A20  0E00               	movlw	0
 22679  002A22  6FA1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22680  002A24  0E00               	movlw	0
 22681  002A26  6FA2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22682  002A28                     l2694:
 22683                           
 22684                           ; BSR set to: 0
 22685                           ;api.c: 422: };api.c: 425: outBuffer[8] = (uint8_t) data_length;
 22686                           
 22687                           ; BSR set to: 0
 22688  002A28  EE20 F008          	lfsr	2,8
 22689  002A2C  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22690  002A2E  26D9               	addwf	fsr2l,f,c
 22691  002A30  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22692  002A32  22DA               	addwfc	fsr2h,f,c
 22693  002A34  C09F  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 22694                           
 22695                           ; BSR set to: 0
 22696                           ;api.c: 428: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 22697  002A38  C0A3  F060         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 22698  002A3C  C0A4  F061         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 22699  002A40  C0A5  F062         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 22700  002A44  C0A6  F063         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 22701  002A48  C09F  F064         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 22702  002A4C  C0A0  F065         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 22703  002A50  C0A1  F066         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 22704  002A54  C0A2  F067         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 22705  002A58  0E0A               	movlw	10
 22706  002A5A  2595               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22707  002A5C  6F68               	movwf	fat_read_from_file@data& (0+255),b
 22708  002A5E  0E00               	movlw	0
 22709  002A60  2196               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22710  002A62  6F69               	movwf	(fat_read_from_file@data+1)& (0+255),b
 22711  002A64  EE20 F001          	lfsr	2,1
 22712  002A68  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22713  002A6A  26D9               	addwf	fsr2l,f,c
 22714  002A6C  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22715  002A6E  22DA               	addwfc	fsr2h,f,c
 22716  002A70  50DF               	movf	indf2,w,c
 22717  002A72  ECA1  F034         	call	_fat_read_from_file
 22718  002A76  0100               	movlb	0	; () banked
 22719  002A78  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 22720  002A7A  EE20 F009          	lfsr	2,9
 22721  002A7E  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22722  002A80  26D9               	addwf	fsr2l,f,c
 22723  002A82  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22724  002A84  22DA               	addwfc	fsr2h,f,c
 22725  002A86  C097  FFDF         	movff	??__fill_buffer_read_file,indf2
 22726                           
 22727                           ; BSR set to: 0
 22728  002A8A  0012               	return		;funcret
 22729  002A8C                     __end_of__fill_buffer_read_file:
 22730                           	opt stack 0
 22731                           tosu	equ	0xFFF
 22732                           tosh	equ	0xFFE
 22733                           tosl	equ	0xFFD
 22734                           pclath	equ	0xFFA
 22735                           tblptru	equ	0xFF8
 22736                           tblptrh	equ	0xFF7
 22737                           tblptrl	equ	0xFF6
 22738                           tablat	equ	0xFF5
 22739                           prodh	equ	0xFF4
 22740                           prodl	equ	0xFF3
 22741                           intcon	equ	0xFF2
 22742                           intcon2	equ	0xFF1
 22743                           intcon3	equ	0xFF0
 22744                           indf0	equ	0xFEF
 22745                           postinc0	equ	0xFEE
 22746                           fsr0h	equ	0xFEA
 22747                           fsr0l	equ	0xFE9
 22748                           wreg	equ	0xFE8
 22749                           indf1	equ	0xFE7
 22750                           postdec1	equ	0xFE5
 22751                           plusw1	equ	0xFE3
 22752                           fsr1h	equ	0xFE2
 22753                           fsr1l	equ	0xFE1
 22754                           indf2	equ	0xFDF
 22755                           postinc2	equ	0xFDE
 22756                           postdec2	equ	0xFDD
 22757                           plusw2	equ	0xFDB
 22758                           fsr2h	equ	0xFDA
 22759                           fsr2l	equ	0xFD9
 22760                           status	equ	0xFD8
 22761                           
 22762 ;; *************** function _fat_read_from_file *****************
 22763 ;; Defined at:
 22764 ;;		line 561 in file "fat16.c"
 22765 ;; Parameters:    Size  Location     Type
 22766 ;;  file_number     1    wreg     unsigned char 
 22767 ;;  start_byte      4    0[BANK0 ] unsigned long 
 22768 ;;  length          4    4[BANK0 ] unsigned long 
 22769 ;;  data            2    8[BANK0 ] PTR unsigned char 
 22770 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22771 ;; Auto vars:     Size  Location     Type
 22772 ;;  file_number     1   14[BANK0 ] unsigned char 
 22773 ;;  root           32   19[BANK0 ] struct .
 22774 ;;  cluster         2   17[BANK0 ] unsigned int 
 22775 ;;  cluster_numb    2   15[BANK0 ] unsigned int 
 22776 ;; Return value:  Size  Location     Type
 22777 ;;                  1    wreg      unsigned char 
 22778 ;; Registers used:
 22779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22780 ;; Tracked objects:
 22781 ;;		On entry : 0/0
 22782 ;;		On exit  : 0/0
 22783 ;;		Unchanged: 0/0
 22784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22785 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22786 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22788 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22789 ;;Total ram usage:       51 bytes
 22790 ;; Hardware stack levels used:    1
 22791 ;; Hardware stack levels required when called:    7
 22792 ;; This function calls:
 22793 ;;		_fat_get_file_information
 22794 ;;		_fat_read_from_file_fast
 22795 ;; This function is called by:
 22796 ;;		__fill_buffer_read_file
 22797 ;; This function uses a non-reentrant model
 22798 ;;
 22799                           
 22800                           	psect	text105
 22801  006942                     __ptext105:
 22802                           	opt stack 0
 22803  006942                     _fat_read_from_file:
 22804                           	opt stack 21
 22805                           
 22806                           ; BSR set to: 0
 22807                           ;incstack = 0
 22808                           ;fat_read_from_file@file_number stored from wreg
 22809  006942  0100               	movlb	0	; () banked
 22810  006944  6F6E               	movwf	fat_read_from_file@file_number& (0+255),b
 22811                           
 22812                           ;fat16.c: 563: rootEntry_t root;;fat16.c: 564: uint16_t cluster;;fat16.c: 565: uint16_t 
      +                          cluster_number;;fat16.c: 568: fat_get_file_information(file_number, &root);
 22813  006946  0E73               	movlw	low fat_read_from_file@root
 22814  006948  6E37               	movwf	fat_get_file_information@data,c
 22815  00694A  0E00               	movlw	high fat_read_from_file@root
 22816  00694C  6E38               	movwf	fat_get_file_information@data+1,c
 22817  00694E  0100               	movlb	0	; () banked
 22818  006950  516E               	movf	fat_read_from_file@file_number& (0+255),w,b
 22819  006952  ECD1  F038         	call	_fat_get_file_information
 22820                           
 22821                           ;fat16.c: 569: cluster = root.firstCluster;
 22822  006956  C08D  F071         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 22823  00695A  C08E  F072         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 22824                           
 22825                           ;fat16.c: 570: cluster_number = 0;
 22826  00695E  0E00               	movlw	0
 22827  006960  0100               	movlb	0	; () banked
 22828  006962  6F70               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 22829  006964  0E00               	movlw	0
 22830  006966  6F6F               	movwf	fat_read_from_file@cluster_number& (0+255),b
 22831                           
 22832                           ; BSR set to: 0
 22833                           ;fat16.c: 573: if(start_byte+length > root.fileSize)
 22834  006968  5164               	movf	fat_read_from_file@length& (0+255),w,b
 22835  00696A  2560               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 22836  00696C  6F6A               	movwf	??_fat_read_from_file& (0+255),b
 22837  00696E  5165               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 22838  006970  2161               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 22839  006972  6F6B               	movwf	(??_fat_read_from_file+1)& (0+255),b
 22840  006974  5166               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 22841  006976  2162               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 22842  006978  6F6C               	movwf	(??_fat_read_from_file+2)& (0+255),b
 22843  00697A  5167               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 22844  00697C  2163               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 22845  00697E  6F6D               	movwf	(??_fat_read_from_file+3)& (0+255),b
 22846  006980  516A               	movf	??_fat_read_from_file& (0+255),w,b
 22847  006982  5D8F               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 22848  006984  516B               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 22849  006986  5990               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 22850  006988  516C               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 22851  00698A  5991               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 22852  00698C  516D               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 22853  00698E  5992               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 22854  006990  B0D8               	btfsc	status,0,c
 22855  006992  D002               	goto	l2024
 22856                           
 22857                           ; BSR set to: 0
 22858                           ;fat16.c: 574: {;fat16.c: 576: return 0xFF;
 22859  006994  0EFF               	movlw	255
 22860                           
 22861                           ; BSR set to: 0
 22862  006996  0012               	return	
 22863  006998                     l2024:
 22864                           
 22865                           ; BSR set to: 0
 22866                           ;fat16.c: 577: };fat16.c: 580: return fat_read_from_file_fast(start_byte, length, data, 
      +                          &cluster, &cluster_number);
 22867                           
 22868                           ; BSR set to: 0
 22869  006998  C060  F038         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 22870  00699C  C061  F039         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 22871  0069A0  C062  F03A         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 22872  0069A4  C063  F03B         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 22873  0069A8  C064  F03C         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 22874  0069AC  C065  F03D         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 22875  0069B0  C066  F03E         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 22876  0069B4  C067  F03F         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 22877  0069B8  C068  F040         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 22878  0069BC  C069  F041         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 22879  0069C0  0E71               	movlw	low fat_read_from_file@cluster
 22880  0069C2  6E42               	movwf	fat_read_from_file_fast@cluster,c
 22881  0069C4  0E00               	movlw	high fat_read_from_file@cluster
 22882  0069C6  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
 22883  0069C8  0E6F               	movlw	low fat_read_from_file@cluster_number
 22884  0069CA  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
 22885  0069CC  0E00               	movlw	high fat_read_from_file@cluster_number
 22886  0069CE  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
 22887  0069D0  EC10  F012         	call	_fat_read_from_file_fast	;wreg free
 22888  0069D4  0012               	return	
 22889  0069D6                     __end_of_fat_read_from_file:
 22890                           	opt stack 0
 22891                           tosu	equ	0xFFF
 22892                           tosh	equ	0xFFE
 22893                           tosl	equ	0xFFD
 22894                           pclath	equ	0xFFA
 22895                           tblptru	equ	0xFF8
 22896                           tblptrh	equ	0xFF7
 22897                           tblptrl	equ	0xFF6
 22898                           tablat	equ	0xFF5
 22899                           prodh	equ	0xFF4
 22900                           prodl	equ	0xFF3
 22901                           intcon	equ	0xFF2
 22902                           intcon2	equ	0xFF1
 22903                           intcon3	equ	0xFF0
 22904                           indf0	equ	0xFEF
 22905                           postinc0	equ	0xFEE
 22906                           fsr0h	equ	0xFEA
 22907                           fsr0l	equ	0xFE9
 22908                           wreg	equ	0xFE8
 22909                           indf1	equ	0xFE7
 22910                           postdec1	equ	0xFE5
 22911                           plusw1	equ	0xFE3
 22912                           fsr1h	equ	0xFE2
 22913                           fsr1l	equ	0xFE1
 22914                           indf2	equ	0xFDF
 22915                           postinc2	equ	0xFDE
 22916                           postdec2	equ	0xFDD
 22917                           plusw2	equ	0xFDB
 22918                           fsr2h	equ	0xFDA
 22919                           fsr2l	equ	0xFD9
 22920                           status	equ	0xFD8
 22921                           
 22922 ;; *************** function _fat_read_from_file_fast *****************
 22923 ;; Defined at:
 22924 ;;		line 583 in file "fat16.c"
 22925 ;; Parameters:    Size  Location     Type
 22926 ;;  start_byte      4   55[COMRAM] unsigned long 
 22927 ;;  length          4   59[COMRAM] unsigned long 
 22928 ;;  data            2   63[COMRAM] PTR unsigned char 
 22929 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 22930 ;;  cluster         2   65[COMRAM] PTR unsigned int 
 22931 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
 22932 ;;  cluster_numb    2   67[COMRAM] PTR unsigned int 
 22933 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
 22934 ;; Auto vars:     Size  Location     Type
 22935 ;;  position        4   89[COMRAM] unsigned long 
 22936 ;;  read_length     2   87[COMRAM] unsigned int 
 22937 ;;  offset          2   85[COMRAM] unsigned int 
 22938 ;;  working_clus    2   83[COMRAM] unsigned int 
 22939 ;;  sector          2   81[COMRAM] unsigned int 
 22940 ;; Return value:  Size  Location     Type
 22941 ;;                  1    wreg      unsigned char 
 22942 ;; Registers used:
 22943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22944 ;; Tracked objects:
 22945 ;;		On entry : 0/0
 22946 ;;		On exit  : 0/0
 22947 ;;		Unchanged: 0/0
 22948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22949 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22950 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22951 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22952 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22953 ;;Total ram usage:       38 bytes
 22954 ;; Hardware stack levels used:    1
 22955 ;; Hardware stack levels required when called:    6
 22956 ;; This function calls:
 22957 ;;		__read_fat
 22958 ;;		__sector_from_cluster
 22959 ;;		_flash_partial_read
 22960 ;; This function is called by:
 22961 ;;		_fat_read_from_file
 22962 ;;		__bootloader_verify_file
 22963 ;;		__bootloader_program
 22964 ;; This function uses a non-reentrant model
 22965 ;;
 22966                           
 22967                           	psect	text106
 22968  002420                     __ptext106:
 22969                           	opt stack 0
 22970  002420                     _fat_read_from_file_fast:
 22971                           	opt stack 22
 22972                           
 22973                           ;fat16.c: 585: uint32_t position;;fat16.c: 586: uint16_t offset;;fat16.c: 587: uint16_t 
      +                          sector;;fat16.c: 588: uint16_t read_length;;fat16.c: 589: uint16_t working_cluster;;fat1
      +                          6.c: 592: position = (*cluster_number);
 22974                           
 22975                           ;incstack = 0
 22976  002420  C044  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 22977  002424  C045  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 22978  002428  CFDE F046          	movff	postinc2,??_fat_read_from_file_fast
 22979  00242C  CFDD F047          	movff	postdec2,??_fat_read_from_file_fast+1
 22980  002430  C046  F05A         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 22981  002434  C047  F05B         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 22982  002438  6A5C               	clrf	fat_read_from_file_fast@position+2,c
 22983  00243A  6A5D               	clrf	fat_read_from_file_fast@position+3,c
 22984                           
 22985                           ;fat16.c: 593: position *= 512;
 22986  00243C  0E09               	movlw	9
 22987  00243E                     u9665:
 22988  00243E  90D8               	bcf	status,0,c
 22989  002440  365A               	rlcf	fat_read_from_file_fast@position,f,c
 22990  002442  365B               	rlcf	fat_read_from_file_fast@position+1,f,c
 22991  002444  365C               	rlcf	fat_read_from_file_fast@position+2,f,c
 22992  002446  365D               	rlcf	fat_read_from_file_fast@position+3,f,c
 22993  002448  2EE8               	decfsz	wreg,f,c
 22994  00244A  D7F9               	goto	u9665
 22995                           
 22996                           ;fat16.c: 594: if(position > start_byte)
 22997  00244C  505A               	movf	fat_read_from_file_fast@position,w,c
 22998  00244E  5C38               	subwf	fat_read_from_file_fast@start_byte,w,c
 22999  002450  505B               	movf	fat_read_from_file_fast@position+1,w,c
 23000  002452  5839               	subwfb	fat_read_from_file_fast@start_byte+1,w,c
 23001  002454  505C               	movf	fat_read_from_file_fast@position+2,w,c
 23002  002456  583A               	subwfb	fat_read_from_file_fast@start_byte+2,w,c
 23003  002458  505D               	movf	fat_read_from_file_fast@position+3,w,c
 23004  00245A  583B               	subwfb	fat_read_from_file_fast@start_byte+3,w,c
 23005  00245C  B0D8               	btfsc	status,0,c
 23006  00245E  D023               	goto	l2030
 23007                           
 23008                           ;fat16.c: 595: {;fat16.c: 597: return 0xFF;
 23009  002460  0EFF               	movlw	255
 23010  002462  0012               	return	
 23011  002464                     l12812:
 23012                           
 23013                           ;fat16.c: 600: {;fat16.c: 601: (*cluster) = _read_fat((*cluster));
 23014  002464  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23015  002468  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23016  00246C  CFDE F030          	movff	postinc2,__read_fat@cluster
 23017  002470  CFDD F031          	movff	postdec2,__read_fat@cluster+1
 23018  002474  EC91  F03F         	call	__read_fat	;wreg free
 23019  002478  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23020  00247C  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23021  002480  C030  FFDE         	movff	?__read_fat,postinc2
 23022  002484  C031  FFDD         	movff	?__read_fat+1,postdec2
 23023                           
 23024                           ;fat16.c: 602: ++(*cluster_number);
 23025  002488  C044  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23026  00248C  C045  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23027  002490  2ADE               	incf	postinc2,f,c
 23028  002492  0E00               	movlw	0
 23029  002494  22DD               	addwfc	postdec2,f,c
 23030                           
 23031                           ;fat16.c: 603: position += 512;
 23032  002496  0E00               	movlw	0
 23033  002498  265A               	addwf	fat_read_from_file_fast@position,f,c
 23034  00249A  0E02               	movlw	2
 23035  00249C  225B               	addwfc	fat_read_from_file_fast@position+1,f,c
 23036  00249E  0E00               	movlw	0
 23037  0024A0  225C               	addwfc	fat_read_from_file_fast@position+2,f,c
 23038  0024A2  0E00               	movlw	0
 23039  0024A4  225D               	addwfc	fat_read_from_file_fast@position+3,f,c
 23040  0024A6                     l2030:
 23041  0024A6  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23042  0024AA  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23043  0024AE  C05C  F048         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+2
 23044  0024B2  C05D  F049         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+3
 23045  0024B6  1E46               	comf	??_fat_read_from_file_fast,f,c
 23046  0024B8  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 23047  0024BA  1E48               	comf	??_fat_read_from_file_fast+2,f,c
 23048  0024BC  1E49               	comf	??_fat_read_from_file_fast+3,f,c
 23049  0024BE  2A46               	incf	??_fat_read_from_file_fast,f,c
 23050  0024C0  0E00               	movlw	0
 23051  0024C2  2247               	addwfc	??_fat_read_from_file_fast+1,f,c
 23052  0024C4  2248               	addwfc	??_fat_read_from_file_fast+2,f,c
 23053  0024C6  2249               	addwfc	??_fat_read_from_file_fast+3,f,c
 23054  0024C8  5038               	movf	fat_read_from_file_fast@start_byte,w,c
 23055  0024CA  2446               	addwf	??_fat_read_from_file_fast,w,c
 23056  0024CC  6E4A               	movwf	(??_fat_read_from_file_fast+4)& (0+255),c
 23057  0024CE  5039               	movf	fat_read_from_file_fast@start_byte+1,w,c
 23058  0024D0  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 23059  0024D2  6E4B               	movwf	(??_fat_read_from_file_fast+5)& (0+255),c
 23060  0024D4  503A               	movf	fat_read_from_file_fast@start_byte+2,w,c
 23061  0024D6  2048               	addwfc	??_fat_read_from_file_fast+2,w,c
 23062  0024D8  6E4C               	movwf	(??_fat_read_from_file_fast+6)& (0+255),c
 23063  0024DA  503B               	movf	fat_read_from_file_fast@start_byte+3,w,c
 23064  0024DC  2049               	addwfc	??_fat_read_from_file_fast+3,w,c
 23065  0024DE  6E4D               	movwf	(??_fat_read_from_file_fast+7)& (0+255),c
 23066  0024E0  504D               	movf	??_fat_read_from_file_fast+7,w,c
 23067  0024E2  104C               	iorwf	??_fat_read_from_file_fast+6,w,c
 23068  0024E4  E1BF               	bnz	l12812
 23069  0024E6  0E02               	movlw	2
 23070  0024E8  5C4B               	subwf	??_fat_read_from_file_fast+5,w,c
 23071  0024EA  B0D8               	btfsc	status,0,c
 23072  0024EC  D7BB               	goto	l2031
 23073                           
 23074                           ;fat16.c: 604: };fat16.c: 608: working_cluster = (*cluster);
 23075  0024EE  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23076  0024F2  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23077  0024F6  CFDE F054          	movff	postinc2,fat_read_from_file_fast@working_cluster
 23078  0024FA  CFDD F055          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 23079                           
 23080                           ;fat16.c: 611: offset = start_byte - position;
 23081  0024FE  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23082  002502  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23083  002506  1E46               	comf	??_fat_read_from_file_fast,f,c
 23084  002508  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 23085  00250A  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 23086  00250C  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 23087  00250E  5038               	movf	fat_read_from_file_fast@start_byte,w,c
 23088  002510  2446               	addwf	??_fat_read_from_file_fast,w,c
 23089  002512  6E56               	movwf	fat_read_from_file_fast@offset,c
 23090  002514  5039               	movf	fat_read_from_file_fast@start_byte+1,w,c
 23091  002516  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 23092  002518  6E57               	movwf	fat_read_from_file_fast@offset+1,c
 23093                           
 23094                           ;fat16.c: 614: position = 0;
 23095  00251A  0E00               	movlw	0
 23096  00251C  6E5A               	movwf	fat_read_from_file_fast@position,c
 23097  00251E  0E00               	movlw	0
 23098  002520  6E5B               	movwf	fat_read_from_file_fast@position+1,c
 23099  002522  0E00               	movlw	0
 23100  002524  6E5C               	movwf	fat_read_from_file_fast@position+2,c
 23101  002526  0E00               	movlw	0
 23102  002528  6E5D               	movwf	fat_read_from_file_fast@position+3,c
 23103                           
 23104                           ;fat16.c: 615: while(position < length)
 23105  00252A  D086               	goto	l2033
 23106  00252C                     
 23107                           ;fat16.c: 616: {;fat16.c: 618: if(offset==512)
 23108  00252C  0E02               	movlw	2
 23109  00252E  1857               	xorwf	fat_read_from_file_fast@offset+1,w,c
 23110  002530  1056               	iorwf	fat_read_from_file_fast@offset,w,c
 23111  002532  A4D8               	btfss	status,2,c
 23112  002534  D00E               	goto	l2035
 23113                           
 23114                           ;fat16.c: 619: {;fat16.c: 621: working_cluster = _read_fat(working_cluster);
 23115  002536  C054  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 23116  00253A  C055  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 23117  00253E  EC91  F03F         	call	__read_fat	;wreg free
 23118  002542  C030  F054         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 23119  002546  C031  F055         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 23120                           
 23121                           ;fat16.c: 622: offset = 0;
 23122  00254A  0E00               	movlw	0
 23123  00254C  6E57               	movwf	fat_read_from_file_fast@offset+1,c
 23124  00254E  0E00               	movlw	0
 23125  002550  6E56               	movwf	fat_read_from_file_fast@offset,c
 23126  002552                     l2035:
 23127                           
 23128                           ;fat16.c: 623: };fat16.c: 626: sector = _sector_from_cluster(working_cluster);
 23129  002552  C054  F001         	movff	fat_read_from_file_fast@working_cluster,__sector_from_cluster@fat_cluster
 23130  002556  C055  F002         	movff	fat_read_from_file_fast@working_cluster+1,__sector_from_cluster@fat_cluster+1
 23131  00255A  EC6D  F044         	call	__sector_from_cluster	;wreg free
 23132  00255E  C001  F052         	movff	?__sector_from_cluster,fat_read_from_file_fast@sector
 23133  002562  C002  F053         	movff	?__sector_from_cluster+1,fat_read_from_file_fast@sector+1
 23134                           
 23135                           ;fat16.c: 629: read_length = 512 - offset;
 23136  002566  C056  F046         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 23137  00256A  C057  F047         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 23138  00256E  1E46               	comf	??_fat_read_from_file_fast,f,c
 23139  002570  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 23140  002572  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 23141  002574  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 23142  002576  0E00               	movlw	0
 23143  002578  2446               	addwf	??_fat_read_from_file_fast,w,c
 23144  00257A  6E58               	movwf	fat_read_from_file_fast@read_length,c
 23145  00257C  0E02               	movlw	2
 23146  00257E  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 23147  002580  6E59               	movwf	fat_read_from_file_fast@read_length+1,c
 23148                           
 23149                           ;fat16.c: 630: if(read_length > (length-position))
 23150  002582  5058               	movf	fat_read_from_file_fast@read_length,w,c
 23151  002584  6E46               	movwf	??_fat_read_from_file_fast& (0+255),c
 23152  002586  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 23153  002588  6E47               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
 23154  00258A  6A48               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
 23155  00258C  6A49               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
 23156  00258E  C05A  F04A         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 23157  002592  C05B  F04B         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 23158  002596  C05C  F04C         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 23159  00259A  C05D  F04D         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 23160  00259E  1E4A               	comf	??_fat_read_from_file_fast+4,f,c
 23161  0025A0  1E4B               	comf	??_fat_read_from_file_fast+5,f,c
 23162  0025A2  1E4C               	comf	??_fat_read_from_file_fast+6,f,c
 23163  0025A4  1E4D               	comf	??_fat_read_from_file_fast+7,f,c
 23164  0025A6  2A4A               	incf	??_fat_read_from_file_fast+4,f,c
 23165  0025A8  0E00               	movlw	0
 23166  0025AA  224B               	addwfc	??_fat_read_from_file_fast+5,f,c
 23167  0025AC  224C               	addwfc	??_fat_read_from_file_fast+6,f,c
 23168  0025AE  224D               	addwfc	??_fat_read_from_file_fast+7,f,c
 23169  0025B0  503C               	movf	fat_read_from_file_fast@length,w,c
 23170  0025B2  244A               	addwf	??_fat_read_from_file_fast+4,w,c
 23171  0025B4  6E4E               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 23172  0025B6  503D               	movf	fat_read_from_file_fast@length+1,w,c
 23173  0025B8  204B               	addwfc	??_fat_read_from_file_fast+5,w,c
 23174  0025BA  6E4F               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 23175  0025BC  503E               	movf	fat_read_from_file_fast@length+2,w,c
 23176  0025BE  204C               	addwfc	??_fat_read_from_file_fast+6,w,c
 23177  0025C0  6E50               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 23178  0025C2  503F               	movf	fat_read_from_file_fast@length+3,w,c
 23179  0025C4  204D               	addwfc	??_fat_read_from_file_fast+7,w,c
 23180  0025C6  6E51               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 23181  0025C8  5046               	movf	??_fat_read_from_file_fast,w,c
 23182  0025CA  5C4E               	subwf	??_fat_read_from_file_fast+8,w,c
 23183  0025CC  5047               	movf	??_fat_read_from_file_fast+1,w,c
 23184  0025CE  584F               	subwfb	??_fat_read_from_file_fast+9,w,c
 23185  0025D0  5048               	movf	??_fat_read_from_file_fast+2,w,c
 23186  0025D2  5850               	subwfb	??_fat_read_from_file_fast+10,w,c
 23187  0025D4  5049               	movf	??_fat_read_from_file_fast+3,w,c
 23188  0025D6  5851               	subwfb	??_fat_read_from_file_fast+11,w,c
 23189  0025D8  B0D8               	btfsc	status,0,c
 23190  0025DA  D00E               	goto	l2036
 23191                           
 23192                           ;fat16.c: 631: {;fat16.c: 633: read_length = length - position;
 23193  0025DC  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23194  0025E0  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23195  0025E4  1E46               	comf	??_fat_read_from_file_fast,f,c
 23196  0025E6  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 23197  0025E8  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 23198  0025EA  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 23199  0025EC  503C               	movf	fat_read_from_file_fast@length,w,c
 23200  0025EE  2446               	addwf	??_fat_read_from_file_fast,w,c
 23201  0025F0  6E58               	movwf	fat_read_from_file_fast@read_length,c
 23202  0025F2  503D               	movf	fat_read_from_file_fast@length+1,w,c
 23203  0025F4  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 23204  0025F6  6E59               	movwf	fat_read_from_file_fast@read_length+1,c
 23205  0025F8                     l2036:
 23206                           
 23207                           ;fat16.c: 634: };fat16.c: 637: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 23208  0025F8  C052  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 23209  0025FC  C053  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 23210  002600  C056  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 23211  002604  C057  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 23212  002608  C058  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 23213  00260C  C059  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 23214  002610  505A               	movf	fat_read_from_file_fast@position,w,c
 23215  002612  2440               	addwf	fat_read_from_file_fast@data,w,c
 23216  002614  6E2E               	movwf	flash_partial_read@data,c
 23217  002616  505B               	movf	fat_read_from_file_fast@position+1,w,c
 23218  002618  2041               	addwfc	fat_read_from_file_fast@data+1,w,c
 23219  00261A  6E2F               	movwf	flash_partial_read@data+1,c
 23220  00261C  ECFA  F041         	call	_flash_partial_read	;wreg free
 23221                           
 23222                           ;fat16.c: 640: position += read_length;
 23223  002620  5058               	movf	fat_read_from_file_fast@read_length,w,c
 23224  002622  265A               	addwf	fat_read_from_file_fast@position,f,c
 23225  002624  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 23226  002626  225B               	addwfc	fat_read_from_file_fast@position+1,f,c
 23227  002628  0E00               	movlw	0
 23228  00262A  225C               	addwfc	fat_read_from_file_fast@position+2,f,c
 23229  00262C  0E00               	movlw	0
 23230  00262E  225D               	addwfc	fat_read_from_file_fast@position+3,f,c
 23231                           
 23232                           ;fat16.c: 641: offset += read_length;
 23233  002630  5058               	movf	fat_read_from_file_fast@read_length,w,c
 23234  002632  2656               	addwf	fat_read_from_file_fast@offset,f,c
 23235  002634  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 23236  002636  2257               	addwfc	fat_read_from_file_fast@offset+1,f,c
 23237  002638                     l2033:
 23238  002638  503C               	movf	fat_read_from_file_fast@length,w,c
 23239  00263A  5C5A               	subwf	fat_read_from_file_fast@position,w,c
 23240  00263C  503D               	movf	fat_read_from_file_fast@length+1,w,c
 23241  00263E  585B               	subwfb	fat_read_from_file_fast@position+1,w,c
 23242  002640  503E               	movf	fat_read_from_file_fast@length+2,w,c
 23243  002642  585C               	subwfb	fat_read_from_file_fast@position+2,w,c
 23244  002644  503F               	movf	fat_read_from_file_fast@length+3,w,c
 23245  002646  585D               	subwfb	fat_read_from_file_fast@position+3,w,c
 23246  002648  A0D8               	btfss	status,0,c
 23247  00264A  D770               	goto	l2034
 23248                           
 23249                           ;fat16.c: 642: };fat16.c: 645: return 0x00;
 23250  00264C  0E00               	movlw	0
 23251  00264E  0012               	return	
 23252  002650                     __end_of_fat_read_from_file_fast:
 23253                           	opt stack 0
 23254                           tosu	equ	0xFFF
 23255                           tosh	equ	0xFFE
 23256                           tosl	equ	0xFFD
 23257                           pclath	equ	0xFFA
 23258                           tblptru	equ	0xFF8
 23259                           tblptrh	equ	0xFF7
 23260                           tblptrl	equ	0xFF6
 23261                           tablat	equ	0xFF5
 23262                           prodh	equ	0xFF4
 23263                           prodl	equ	0xFF3
 23264                           intcon	equ	0xFF2
 23265                           intcon2	equ	0xFF1
 23266                           intcon3	equ	0xFF0
 23267                           indf0	equ	0xFEF
 23268                           postinc0	equ	0xFEE
 23269                           fsr0h	equ	0xFEA
 23270                           fsr0l	equ	0xFE9
 23271                           wreg	equ	0xFE8
 23272                           indf1	equ	0xFE7
 23273                           postdec1	equ	0xFE5
 23274                           plusw1	equ	0xFE3
 23275                           fsr1h	equ	0xFE2
 23276                           fsr1l	equ	0xFE1
 23277                           indf2	equ	0xFDF
 23278                           postinc2	equ	0xFDE
 23279                           postdec2	equ	0xFDD
 23280                           plusw2	equ	0xFDB
 23281                           fsr2h	equ	0xFDA
 23282                           fsr2l	equ	0xFD9
 23283                           status	equ	0xFD8
 23284                           
 23285 ;; *************** function _fat_get_file_size *****************
 23286 ;; Defined at:
 23287 ;;		line 299 in file "fat16.c"
 23288 ;; Parameters:    Size  Location     Type
 23289 ;;  file_number     1    wreg     unsigned char 
 23290 ;; Auto vars:     Size  Location     Type
 23291 ;;  file_number     1   60[COMRAM] unsigned char 
 23292 ;;  file_size       4   54[COMRAM] unsigned long 
 23293 ;;  offset          2   58[COMRAM] unsigned int 
 23294 ;;  sector          2   52[COMRAM] unsigned int 
 23295 ;; Return value:  Size  Location     Type
 23296 ;;                  4   47[COMRAM] unsigned long 
 23297 ;; Registers used:
 23298 ;;		wreg, status,2, status,0, cstack
 23299 ;; Tracked objects:
 23300 ;;		On entry : 0/0
 23301 ;;		On exit  : 0/0
 23302 ;;		Unchanged: 0/0
 23303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23305 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23306 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23307 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23308 ;;Total ram usage:       14 bytes
 23309 ;; Hardware stack levels used:    1
 23310 ;; Hardware stack levels required when called:    5
 23311 ;; This function calls:
 23312 ;;		_flash_partial_read
 23313 ;; This function is called by:
 23314 ;;		__bootloader_find_file
 23315 ;;		__bootloader_verify_file
 23316 ;;		__fill_buffer_read_file
 23317 ;; This function uses a non-reentrant model
 23318 ;;
 23319                           
 23320                           	psect	text107
 23321  007216                     __ptext107:
 23322                           	opt stack 0
 23323  007216                     _fat_get_file_size:
 23324                           	opt stack 23
 23325                           
 23326                           ;incstack = 0
 23327                           ;fat_get_file_size@file_number stored from wreg
 23328  007216  6E3D               	movwf	fat_get_file_size@file_number,c
 23329                           
 23330                           ;fat16.c: 301: uint16_t sector;;fat16.c: 302: uint16_t offset;;fat16.c: 303: uint32_t fi
      +                          le_size;;fat16.c: 304: sector = file_number >> 4;
 23331  007218  C03D  F034         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 23332  00721C  3A34               	swapf	??_fat_get_file_size,f,c
 23333  00721E  0E0F               	movlw	15
 23334  007220  1634               	andwf	??_fat_get_file_size,f,c
 23335  007222  5034               	movf	??_fat_get_file_size,w,c
 23336  007224  6E35               	movwf	fat_get_file_size@sector,c
 23337  007226  6A36               	clrf	fat_get_file_size@sector+1,c
 23338                           
 23339                           ;fat16.c: 305: sector += 34;
 23340  007228  0E22               	movlw	34
 23341  00722A  2635               	addwf	fat_get_file_size@sector,f,c
 23342  00722C  0E00               	movlw	0
 23343  00722E  2236               	addwfc	fat_get_file_size@sector+1,f,c
 23344                           
 23345                           ;fat16.c: 306: offset = file_number;
 23346  007230  C03D  F03B         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 23347  007234  6A3C               	clrf	fat_get_file_size@offset+1,c
 23348                           
 23349                           ;fat16.c: 307: offset <<= 5;
 23350  007236  0E05               	movlw	5
 23351  007238                     u10335:
 23352  007238  90D8               	bcf	status,0,c
 23353  00723A  363B               	rlcf	fat_get_file_size@offset,f,c
 23354  00723C  363C               	rlcf	fat_get_file_size@offset+1,f,c
 23355  00723E  2EE8               	decfsz	wreg,f,c
 23356  007240  D7FB               	goto	u10335
 23357                           
 23358                           ;fat16.c: 308: offset &= 0b111111111;
 23359  007242  0EFF               	movlw	255
 23360  007244  163B               	andwf	fat_get_file_size@offset,f,c
 23361  007246  0E01               	movlw	1
 23362  007248  163C               	andwf	fat_get_file_size@offset+1,f,c
 23363                           
 23364                           ;fat16.c: 309: offset += 28;
 23365  00724A  0E1C               	movlw	28
 23366  00724C  263B               	addwf	fat_get_file_size@offset,f,c
 23367  00724E  0E00               	movlw	0
 23368  007250  223C               	addwfc	fat_get_file_size@offset+1,f,c
 23369                           
 23370                           ;fat16.c: 310: flash_partial_read(sector, offset, 4, &file_size);
 23371  007252  C035  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 23372  007256  C036  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 23373  00725A  C03B  F02A         	movff	fat_get_file_size@offset,flash_partial_read@start
 23374  00725E  C03C  F02B         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 23375  007262  0E00               	movlw	0
 23376  007264  6E2D               	movwf	flash_partial_read@length+1,c
 23377  007266  0E04               	movlw	4
 23378  007268  6E2C               	movwf	flash_partial_read@length,c
 23379  00726A  0E37               	movlw	low fat_get_file_size@file_size
 23380  00726C  6E2E               	movwf	flash_partial_read@data,c
 23381  00726E  0E00               	movlw	high fat_get_file_size@file_size
 23382  007270  6E2F               	movwf	flash_partial_read@data+1,c
 23383  007272  ECFA  F041         	call	_flash_partial_read	;wreg free
 23384                           
 23385                           ;fat16.c: 311: return file_size;
 23386  007276  C037  F030         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 23387  00727A  C038  F031         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 23388  00727E  C039  F032         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 23389  007282  C03A  F033         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 23390  007286  0012               	return	
 23391  007288                     __end_of_fat_get_file_size:
 23392                           	opt stack 0
 23393                           tosu	equ	0xFFF
 23394                           tosh	equ	0xFFE
 23395                           tosl	equ	0xFFD
 23396                           pclath	equ	0xFFA
 23397                           tblptru	equ	0xFF8
 23398                           tblptrh	equ	0xFF7
 23399                           tblptrl	equ	0xFF6
 23400                           tablat	equ	0xFF5
 23401                           prodh	equ	0xFF4
 23402                           prodl	equ	0xFF3
 23403                           intcon	equ	0xFF2
 23404                           intcon2	equ	0xFF1
 23405                           intcon3	equ	0xFF0
 23406                           indf0	equ	0xFEF
 23407                           postinc0	equ	0xFEE
 23408                           fsr0h	equ	0xFEA
 23409                           fsr0l	equ	0xFE9
 23410                           wreg	equ	0xFE8
 23411                           indf1	equ	0xFE7
 23412                           postdec1	equ	0xFE5
 23413                           plusw1	equ	0xFE3
 23414                           fsr1h	equ	0xFE2
 23415                           fsr1l	equ	0xFE1
 23416                           indf2	equ	0xFDF
 23417                           postinc2	equ	0xFDE
 23418                           postdec2	equ	0xFDD
 23419                           plusw2	equ	0xFDB
 23420                           fsr2h	equ	0xFDA
 23421                           fsr2l	equ	0xFD9
 23422                           status	equ	0xFD8
 23423                           
 23424 ;; *************** function __fill_buffer_get_status *****************
 23425 ;; Defined at:
 23426 ;;		line 192 in file "api.c"
 23427 ;; Parameters:    Size  Location     Type
 23428 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 23429 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23430 ;; Auto vars:     Size  Location     Type
 23431 ;;		None
 23432 ;; Return value:  Size  Location     Type
 23433 ;;                  1    wreg      void 
 23434 ;; Registers used:
 23435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23436 ;; Tracked objects:
 23437 ;;		On entry : 0/0
 23438 ;;		On exit  : 0/0
 23439 ;;		Unchanged: 0/0
 23440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23445 ;;Total ram usage:        2 bytes
 23446 ;; Hardware stack levels used:    1
 23447 ;; Hardware stack levels required when called:    4
 23448 ;; This function calls:
 23449 ;;		_flash_is_busy
 23450 ;;		_ui_get_status
 23451 ;; This function is called by:
 23452 ;;		_api_prepare
 23453 ;; This function uses a non-reentrant model
 23454 ;;
 23455                           
 23456                           	psect	text108
 23457  00544C                     __ptext108:
 23458                           	opt stack 0
 23459  00544C                     __fill_buffer_get_status:
 23460                           	opt stack 25
 23461                           
 23462                           ;api.c: 195: outBuffer[0] = DATAREQUEST_GET_STATUS;
 23463                           
 23464                           ;incstack = 0
 23465  00544C  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 23466  005450  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 23467  005454  0E10               	movlw	16
 23468  005456  6EDF               	movwf	indf2,c
 23469                           
 23470                           ;api.c: 198: outBuffer[1] = 0xC125 >> 8;
 23471  005458  EE20 F001          	lfsr	2,1
 23472  00545C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23473  00545E  26D9               	addwf	fsr2l,f,c
 23474  005460  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23475  005462  22DA               	addwfc	fsr2h,f,c
 23476  005464  0EC1               	movlw	193
 23477  005466  6EDF               	movwf	indf2,c
 23478                           
 23479                           ;api.c: 199: outBuffer[2] = (uint8_t) 0xC125;
 23480  005468  EE20 F002          	lfsr	2,2
 23481  00546C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23482  00546E  26D9               	addwf	fsr2l,f,c
 23483  005470  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23484  005472  22DA               	addwfc	fsr2h,f,c
 23485  005474  0E25               	movlw	37
 23486  005476  6EDF               	movwf	indf2,c
 23487                           
 23488                           ;api.c: 203: outBuffer[3] = (uint8_t) flash_is_busy();
 23489  005478  EE20 F003          	lfsr	2,3
 23490  00547C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23491  00547E  26D9               	addwf	fsr2l,f,c
 23492  005480  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23493  005482  22DA               	addwfc	fsr2h,f,c
 23494  005484  EC02  F044         	call	_flash_is_busy	;wreg free
 23495  005488  6EDF               	movwf	indf2,c
 23496                           
 23497                           ;api.c: 206: outBuffer[4] = 0x00;
 23498  00548A  EE20 F004          	lfsr	2,4
 23499  00548E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23500  005490  26D9               	addwf	fsr2l,f,c
 23501  005492  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23502  005494  22DA               	addwfc	fsr2h,f,c
 23503  005496  0E00               	movlw	0
 23504  005498  6EDF               	movwf	indf2,c
 23505                           
 23506                           ;api.c: 207: outBuffer[5] = 0x02;
 23507  00549A  EE20 F005          	lfsr	2,5
 23508  00549E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23509  0054A0  26D9               	addwf	fsr2l,f,c
 23510  0054A2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23511  0054A4  22DA               	addwfc	fsr2h,f,c
 23512  0054A6  0E02               	movlw	2
 23513  0054A8  6EDF               	movwf	indf2,c
 23514                           
 23515                           ;api.c: 208: outBuffer[6] = 0x00;
 23516  0054AA  EE20 F006          	lfsr	2,6
 23517  0054AE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23518  0054B0  26D9               	addwf	fsr2l,f,c
 23519  0054B2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23520  0054B4  22DA               	addwfc	fsr2h,f,c
 23521  0054B6  0E00               	movlw	0
 23522  0054B8  6EDF               	movwf	indf2,c
 23523                           
 23524                           ;api.c: 211: outBuffer[7] = ui_get_status();
 23525  0054BA  EE20 F007          	lfsr	2,7
 23526  0054BE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23527  0054C0  26D9               	addwf	fsr2l,f,c
 23528  0054C2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23529  0054C4  22DA               	addwfc	fsr2h,f,c
 23530  0054C6  ECD8  F044         	call	_ui_get_status	;wreg free
 23531  0054CA  6EDF               	movwf	indf2,c
 23532                           
 23533                           ;api.c: 214: outBuffer[8] = os.encoderCount;
 23534  0054CC  EE20 F008          	lfsr	2,8
 23535  0054D0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23536  0054D2  26D9               	addwf	fsr2l,f,c
 23537  0054D4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23538  0054D6  22DA               	addwfc	fsr2h,f,c
 23539  0054D8  C0B9  FFDF         	movff	_os,indf2	;volatile
 23540                           
 23541                           ;api.c: 215: outBuffer[9] = os.buttonCount;
 23542  0054DC  EE20 F009          	lfsr	2,9
 23543  0054E0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23544  0054E2  26D9               	addwf	fsr2l,f,c
 23545  0054E4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23546  0054E6  22DA               	addwfc	fsr2h,f,c
 23547  0054E8  C0BA  FFDF         	movff	_os+1,indf2	;volatile
 23548                           
 23549                           ;api.c: 216: outBuffer[10] = os.timeSlot;
 23550  0054EC  EE20 F00A          	lfsr	2,10
 23551  0054F0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23552  0054F2  26D9               	addwf	fsr2l,f,c
 23553  0054F4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23554  0054F6  22DA               	addwfc	fsr2h,f,c
 23555  0054F8  C0BB  FFDF         	movff	_os+2,indf2	;volatile
 23556                           
 23557                           ;api.c: 217: outBuffer[11] = os.done;
 23558  0054FC  EE20 F00B          	lfsr	2,11
 23559  005500  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23560  005502  26D9               	addwf	fsr2l,f,c
 23561  005504  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23562  005506  22DA               	addwfc	fsr2h,f,c
 23563  005508  C0BC  FFDF         	movff	_os+3,indf2	;volatile
 23564                           
 23565                           ;api.c: 218: outBuffer[12] = os.bootloader_mode;
 23566  00550C  EE20 F00C          	lfsr	2,12
 23567  005510  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23568  005512  26D9               	addwf	fsr2l,f,c
 23569  005514  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23570  005516  22DA               	addwfc	fsr2h,f,c
 23571  005518  C0BD  FFDF         	movff	_os+4,indf2	;volatile
 23572                           
 23573                           ;api.c: 219: outBuffer[13] = os.display_mode;
 23574  00551C  EE20 F00D          	lfsr	2,13
 23575  005520  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23576  005522  26D9               	addwf	fsr2l,f,c
 23577  005524  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23578  005526  22DA               	addwfc	fsr2h,f,c
 23579  005528  C0BE  FFDF         	movff	_os+5,indf2	;volatile
 23580  00552C  0012               	return		;funcret
 23581  00552E                     __end_of__fill_buffer_get_status:
 23582                           	opt stack 0
 23583                           tosu	equ	0xFFF
 23584                           tosh	equ	0xFFE
 23585                           tosl	equ	0xFFD
 23586                           pclath	equ	0xFFA
 23587                           tblptru	equ	0xFF8
 23588                           tblptrh	equ	0xFF7
 23589                           tblptrl	equ	0xFF6
 23590                           tablat	equ	0xFF5
 23591                           prodh	equ	0xFF4
 23592                           prodl	equ	0xFF3
 23593                           intcon	equ	0xFF2
 23594                           intcon2	equ	0xFF1
 23595                           intcon3	equ	0xFF0
 23596                           indf0	equ	0xFEF
 23597                           postinc0	equ	0xFEE
 23598                           fsr0h	equ	0xFEA
 23599                           fsr0l	equ	0xFE9
 23600                           wreg	equ	0xFE8
 23601                           indf1	equ	0xFE7
 23602                           postdec1	equ	0xFE5
 23603                           plusw1	equ	0xFE3
 23604                           fsr1h	equ	0xFE2
 23605                           fsr1l	equ	0xFE1
 23606                           indf2	equ	0xFDF
 23607                           postinc2	equ	0xFDE
 23608                           postdec2	equ	0xFDD
 23609                           plusw2	equ	0xFDB
 23610                           fsr2h	equ	0xFDA
 23611                           fsr2l	equ	0xFD9
 23612                           status	equ	0xFD8
 23613                           
 23614 ;; *************** function _flash_is_busy *****************
 23615 ;; Defined at:
 23616 ;;		line 354 in file "flash.c"
 23617 ;; Parameters:    Size  Location     Type
 23618 ;;		None
 23619 ;; Auto vars:     Size  Location     Type
 23620 ;;  result          1   19[COMRAM] unsigned char 
 23621 ;; Return value:  Size  Location     Type
 23622 ;;                  1    wreg      unsigned char 
 23623 ;; Registers used:
 23624 ;;		wreg, status,2, status,0, cstack
 23625 ;; Tracked objects:
 23626 ;;		On entry : 0/0
 23627 ;;		On exit  : 0/0
 23628 ;;		Unchanged: 0/0
 23629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23634 ;;Total ram usage:        1 bytes
 23635 ;; Hardware stack levels used:    1
 23636 ;; Hardware stack levels required when called:    3
 23637 ;; This function calls:
 23638 ;;		__flash_is_busy
 23639 ;;		_spi_set_configuration
 23640 ;; This function is called by:
 23641 ;;		__fill_buffer_get_status
 23642 ;; This function uses a non-reentrant model
 23643 ;;
 23644                           
 23645                           	psect	text109
 23646  008804                     __ptext109:
 23647                           	opt stack 0
 23648  008804                     _flash_is_busy:
 23649                           	opt stack 25
 23650                           
 23651                           ;flash.c: 356: uint8_t result;;flash.c: 359: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 23652                           
 23653                           ;incstack = 0
 23654  008804  0E00               	movlw	0
 23655  008806  EC59  F024         	call	_spi_set_configuration
 23656                           
 23657                           ;flash.c: 362: result = _flash_is_busy();
 23658  00880A  EC92  F043         	call	__flash_is_busy	;wreg free
 23659  00880E  6E14               	movwf	flash_is_busy@result,c
 23660                           
 23661                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 23662  008810  0E01               	movlw	1
 23663  008812  EC59  F024         	call	_spi_set_configuration
 23664                           
 23665                           ;flash.c: 368: return result;
 23666  008816  5014               	movf	flash_is_busy@result,w,c
 23667  008818  0012               	return	
 23668  00881A                     __end_of_flash_is_busy:
 23669                           	opt stack 0
 23670                           tosu	equ	0xFFF
 23671                           tosh	equ	0xFFE
 23672                           tosl	equ	0xFFD
 23673                           pclath	equ	0xFFA
 23674                           tblptru	equ	0xFF8
 23675                           tblptrh	equ	0xFF7
 23676                           tblptrl	equ	0xFF6
 23677                           tablat	equ	0xFF5
 23678                           prodh	equ	0xFF4
 23679                           prodl	equ	0xFF3
 23680                           intcon	equ	0xFF2
 23681                           intcon2	equ	0xFF1
 23682                           intcon3	equ	0xFF0
 23683                           indf0	equ	0xFEF
 23684                           postinc0	equ	0xFEE
 23685                           fsr0h	equ	0xFEA
 23686                           fsr0l	equ	0xFE9
 23687                           wreg	equ	0xFE8
 23688                           indf1	equ	0xFE7
 23689                           postdec1	equ	0xFE5
 23690                           plusw1	equ	0xFE3
 23691                           fsr1h	equ	0xFE2
 23692                           fsr1l	equ	0xFE1
 23693                           indf2	equ	0xFDF
 23694                           postinc2	equ	0xFDE
 23695                           postdec2	equ	0xFDD
 23696                           plusw2	equ	0xFDB
 23697                           fsr2h	equ	0xFDA
 23698                           fsr2l	equ	0xFD9
 23699                           status	equ	0xFD8
 23700                           
 23701 ;; *************** function __fill_buffer_get_file_details *****************
 23702 ;; Defined at:
 23703 ;;		line 345 in file "api.c"
 23704 ;; Parameters:    Size  Location     Type
 23705 ;;  inBuffer        2   62[COMRAM] PTR unsigned char 
 23706 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 23707 ;;  outBuffer       2   64[COMRAM] PTR unsigned char 
 23708 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23709 ;; Auto vars:     Size  Location     Type
 23710 ;;  file_number     1   66[COMRAM] unsigned char 
 23711 ;; Return value:  Size  Location     Type
 23712 ;;                  1    wreg      void 
 23713 ;; Registers used:
 23714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23715 ;; Tracked objects:
 23716 ;;		On entry : 0/0
 23717 ;;		On exit  : 0/0
 23718 ;;		Unchanged: 0/0
 23719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23723 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23724 ;;Total ram usage:        5 bytes
 23725 ;; Hardware stack levels used:    1
 23726 ;; Hardware stack levels required when called:    7
 23727 ;; This function calls:
 23728 ;;		_fat_get_file_information
 23729 ;; This function is called by:
 23730 ;;		_api_prepare
 23731 ;; This function uses a non-reentrant model
 23732 ;;
 23733                           
 23734                           	psect	text110
 23735  007368                     __ptext110:
 23736                           	opt stack 0
 23737  007368                     __fill_buffer_get_file_details:
 23738                           	opt stack 22
 23739                           
 23740                           ;api.c: 347: uint8_t file_number = inBuffer[1];
 23741                           
 23742                           ;incstack = 0
 23743  007368  EE20 F001          	lfsr	2,1
 23744  00736C  503F               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 23745  00736E  26D9               	addwf	fsr2l,f,c
 23746  007370  5040               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 23747  007372  22DA               	addwfc	fsr2h,f,c
 23748  007374  50DF               	movf	indf2,w,c
 23749  007376  6E43               	movwf	__fill_buffer_get_file_details@file_number,c
 23750                           
 23751                           ;api.c: 350: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 23752  007378  C041  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 23753  00737C  C042  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 23754  007380  0E80               	movlw	128
 23755  007382  6EDF               	movwf	indf2,c
 23756                           
 23757                           ;api.c: 353: outBuffer[1] = 0xC125 >> 8;
 23758  007384  EE20 F001          	lfsr	2,1
 23759  007388  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23760  00738A  26D9               	addwf	fsr2l,f,c
 23761  00738C  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23762  00738E  22DA               	addwfc	fsr2h,f,c
 23763  007390  0EC1               	movlw	193
 23764  007392  6EDF               	movwf	indf2,c
 23765                           
 23766                           ;api.c: 354: outBuffer[2] = (uint8_t) 0xC125;
 23767  007394  EE20 F002          	lfsr	2,2
 23768  007398  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23769  00739A  26D9               	addwf	fsr2l,f,c
 23770  00739C  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23771  00739E  22DA               	addwfc	fsr2h,f,c
 23772  0073A0  0E25               	movlw	37
 23773  0073A2  6EDF               	movwf	indf2,c
 23774                           
 23775                           ;api.c: 357: outBuffer[3] = file_number;
 23776  0073A4  EE20 F003          	lfsr	2,3
 23777  0073A8  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23778  0073AA  26D9               	addwf	fsr2l,f,c
 23779  0073AC  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23780  0073AE  22DA               	addwfc	fsr2h,f,c
 23781  0073B0  C043  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 23782                           
 23783                           ;api.c: 360: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 23784  0073B4  EE20 F004          	lfsr	2,4
 23785  0073B8  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23786  0073BA  26D9               	addwf	fsr2l,f,c
 23787  0073BC  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23788  0073BE  22DA               	addwfc	fsr2h,f,c
 23789  0073C0  0E05               	movlw	5
 23790  0073C2  2441               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 23791  0073C4  6E37               	movwf	fat_get_file_information@data,c
 23792  0073C6  0E00               	movlw	0
 23793  0073C8  2042               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 23794  0073CA  6E38               	movwf	fat_get_file_information@data+1,c
 23795  0073CC  5043               	movf	__fill_buffer_get_file_details@file_number,w,c
 23796  0073CE  ECD1  F038         	call	_fat_get_file_information
 23797  0073D2  6EDF               	movwf	indf2,c
 23798  0073D4  0012               	return		;funcret
 23799  0073D6                     __end_of__fill_buffer_get_file_details:
 23800                           	opt stack 0
 23801                           tosu	equ	0xFFF
 23802                           tosh	equ	0xFFE
 23803                           tosl	equ	0xFFD
 23804                           pclath	equ	0xFFA
 23805                           tblptru	equ	0xFF8
 23806                           tblptrh	equ	0xFF7
 23807                           tblptrl	equ	0xFF6
 23808                           tablat	equ	0xFF5
 23809                           prodh	equ	0xFF4
 23810                           prodl	equ	0xFF3
 23811                           intcon	equ	0xFF2
 23812                           intcon2	equ	0xFF1
 23813                           intcon3	equ	0xFF0
 23814                           indf0	equ	0xFEF
 23815                           postinc0	equ	0xFEE
 23816                           fsr0h	equ	0xFEA
 23817                           fsr0l	equ	0xFE9
 23818                           wreg	equ	0xFE8
 23819                           indf1	equ	0xFE7
 23820                           postdec1	equ	0xFE5
 23821                           plusw1	equ	0xFE3
 23822                           fsr1h	equ	0xFE2
 23823                           fsr1l	equ	0xFE1
 23824                           indf2	equ	0xFDF
 23825                           postinc2	equ	0xFDE
 23826                           postdec2	equ	0xFDD
 23827                           plusw2	equ	0xFDB
 23828                           fsr2h	equ	0xFDA
 23829                           fsr2l	equ	0xFD9
 23830                           status	equ	0xFD8
 23831                           
 23832 ;; *************** function __fill_buffer_get_display *****************
 23833 ;; Defined at:
 23834 ;;		line 223 in file "api.c"
 23835 ;; Parameters:    Size  Location     Type
 23836 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 23837 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23838 ;;  secondHalf      1    6[COMRAM] unsigned char 
 23839 ;; Auto vars:     Size  Location     Type
 23840 ;;  position        1   15[COMRAM] unsigned char 
 23841 ;;  start_line      1   14[COMRAM] unsigned char 
 23842 ;;  line            1   13[COMRAM] unsigned char 
 23843 ;;  cntr            1   12[COMRAM] unsigned char 
 23844 ;; Return value:  Size  Location     Type
 23845 ;;                  1    wreg      void 
 23846 ;; Registers used:
 23847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23848 ;; Tracked objects:
 23849 ;;		On entry : 0/0
 23850 ;;		On exit  : 0/0
 23851 ;;		Unchanged: 0/0
 23852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23853 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23854 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23855 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23856 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23857 ;;Total ram usage:       12 bytes
 23858 ;; Hardware stack levels used:    1
 23859 ;; Hardware stack levels required when called:    1
 23860 ;; This function calls:
 23861 ;;		_display_get_character
 23862 ;; This function is called by:
 23863 ;;		_api_prepare
 23864 ;; This function uses a non-reentrant model
 23865 ;;
 23866                           
 23867                           	psect	text111
 23868  005FA6                     __ptext111:
 23869                           	opt stack 0
 23870  005FA6                     __fill_buffer_get_display:
 23871                           	opt stack 28
 23872                           
 23873                           ;api.c: 225: uint8_t cntr;;api.c: 226: uint8_t line;;api.c: 227: uint8_t start_line;;api
      +                          .c: 228: uint8_t position;;api.c: 231: if(secondHalf)
 23874                           
 23875                           ;incstack = 0
 23876  005FA6  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 23877  005FA8  B4D8               	btfsc	status,2,c
 23878  005FAA  D006               	goto	l2664
 23879                           
 23880                           ;api.c: 232: {;api.c: 233: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 23881  005FAC  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 23882  005FB0  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 23883  005FB4  0E12               	movlw	18
 23884  005FB6  D005               	goto	L31
 23885  005FB8                     l2664:
 23886                           
 23887                           ;api.c: 235: else;api.c: 236: {;api.c: 237: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 23888  005FB8  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 23889  005FBC  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 23890  005FC0  0E11               	movlw	17
 23891  005FC2                     L31:
 23892  005FC2  6EDF               	movwf	indf2,c
 23893                           
 23894                           ;api.c: 238: };api.c: 241: outBuffer[1] = 0xC125 >> 8;
 23895  005FC4  EE20 F001          	lfsr	2,1
 23896  005FC8  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 23897  005FCA  26D9               	addwf	fsr2l,f,c
 23898  005FCC  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 23899  005FCE  22DA               	addwfc	fsr2h,f,c
 23900  005FD0  0EC1               	movlw	193
 23901  005FD2  6EDF               	movwf	indf2,c
 23902                           
 23903                           ;api.c: 242: outBuffer[2] = (uint8_t) 0xC125;
 23904  005FD4  EE20 F002          	lfsr	2,2
 23905  005FD8  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 23906  005FDA  26D9               	addwf	fsr2l,f,c
 23907  005FDC  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 23908  005FDE  22DA               	addwfc	fsr2h,f,c
 23909  005FE0  0E25               	movlw	37
 23910  005FE2  6EDF               	movwf	indf2,c
 23911                           
 23912                           ;api.c: 245: cntr = 3;
 23913  005FE4  0E03               	movlw	3
 23914  005FE6  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 23915                           
 23916                           ;api.c: 246: if(secondHalf)
 23917  005FE8  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 23918  005FEA  B4D8               	btfsc	status,2,c
 23919  005FEC  D002               	goto	l2666
 23920                           
 23921                           ;api.c: 247: {;api.c: 248: start_line = 2;
 23922  005FEE  0E02               	movlw	2
 23923  005FF0  D001               	goto	L32
 23924  005FF2                     l2666:
 23925                           
 23926                           ;api.c: 250: else;api.c: 251: {;api.c: 252: start_line = 0;
 23927  005FF2  0E00               	movlw	0
 23928  005FF4                     L32:
 23929  005FF4  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 23930                           
 23931                           ;api.c: 253: };api.c: 254: for(line=start_line; line<start_line+2; ++line)
 23932  005FF6  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 23933  005FFA  D01A               	goto	l2668
 23934  005FFC                     
 23935                           ;api.c: 255: {;api.c: 256: for(position=0; position<20; ++position)
 23936  005FFC  0E00               	movlw	0
 23937  005FFE  6E10               	movwf	__fill_buffer_get_display@position,c
 23938  006000                     l14082:
 23939  006000  0E13               	movlw	19
 23940  006002  6410               	cpfsgt	__fill_buffer_get_display@position,c
 23941  006004  D001               	goto	l2670
 23942  006006  D013               	goto	u11170
 23943  006008                     l2670:
 23944                           
 23945                           ;api.c: 257: {;api.c: 258: outBuffer[cntr] = display_get_character(line, position);
 23946  006008  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 23947  00600C  500E               	movf	__fill_buffer_get_display@line,w,c
 23948  00600E  ECB3  F042         	call	_display_get_character
 23949  006012  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 23950  006014  500D               	movf	__fill_buffer_get_display@cntr,w,c
 23951  006016  0D01               	mullw	1
 23952  006018  50F3               	movf	prodl,w,c
 23953  00601A  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 23954  00601C  6ED9               	movwf	fsr2l,c
 23955  00601E  50F4               	movf	prodh,w,c
 23956  006020  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 23957  006022  6EDA               	movwf	fsr2h,c
 23958  006024  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 23959                           
 23960                           ;api.c: 259: ++cntr;
 23961  006028  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 23962  00602A  2A10               	incf	__fill_buffer_get_display@position,f,c
 23963  00602C  D7E9               	goto	l14082
 23964  00602E                     u11170:
 23965  00602E  2A0E               	incf	__fill_buffer_get_display@line,f,c
 23966  006030                     l2668:
 23967  006030  500F               	movf	__fill_buffer_get_display@start_line,w,c
 23968  006032  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 23969  006034  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 23970  006036  0E02               	movlw	2
 23971  006038  2608               	addwf	??__fill_buffer_get_display,f,c
 23972  00603A  0E00               	movlw	0
 23973  00603C  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 23974  00603E  500E               	movf	__fill_buffer_get_display@line,w,c
 23975  006040  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 23976  006042  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 23977  006044  5008               	movf	??__fill_buffer_get_display,w,c
 23978  006046  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 23979  006048  500B               	movf	??__fill_buffer_get_display+3,w,c
 23980  00604A  0A80               	xorlw	128
 23981  00604C  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 23982  00604E  5009               	movf	??__fill_buffer_get_display+1,w,c
 23983  006050  0A80               	xorlw	128
 23984  006052  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 23985  006054  B0D8               	btfsc	status,0,c
 23986  006056  0012               	return	
 23987  006058  D7D1               	goto	l2669
 23988  00605A                     __end_of__fill_buffer_get_display:
 23989                           	opt stack 0
 23990                           tosu	equ	0xFFF
 23991                           tosh	equ	0xFFE
 23992                           tosl	equ	0xFFD
 23993                           pclath	equ	0xFFA
 23994                           tblptru	equ	0xFF8
 23995                           tblptrh	equ	0xFF7
 23996                           tblptrl	equ	0xFF6
 23997                           tablat	equ	0xFF5
 23998                           prodh	equ	0xFF4
 23999                           prodl	equ	0xFF3
 24000                           intcon	equ	0xFF2
 24001                           intcon2	equ	0xFF1
 24002                           intcon3	equ	0xFF0
 24003                           indf0	equ	0xFEF
 24004                           postinc0	equ	0xFEE
 24005                           fsr0h	equ	0xFEA
 24006                           fsr0l	equ	0xFE9
 24007                           wreg	equ	0xFE8
 24008                           indf1	equ	0xFE7
 24009                           postdec1	equ	0xFE5
 24010                           plusw1	equ	0xFE3
 24011                           fsr1h	equ	0xFE2
 24012                           fsr1l	equ	0xFE1
 24013                           indf2	equ	0xFDF
 24014                           postinc2	equ	0xFDE
 24015                           postdec2	equ	0xFDD
 24016                           plusw2	equ	0xFDB
 24017                           fsr2h	equ	0xFDA
 24018                           fsr2l	equ	0xFD9
 24019                           status	equ	0xFD8
 24020                           
 24021 ;; *************** function _display_get_character *****************
 24022 ;; Defined at:
 24023 ;;		line 70 in file "display.c"
 24024 ;; Parameters:    Size  Location     Type
 24025 ;;  line            1    wreg     unsigned char 
 24026 ;;  position        1    0[COMRAM] unsigned char 
 24027 ;; Auto vars:     Size  Location     Type
 24028 ;;  line            1    3[COMRAM] unsigned char 
 24029 ;; Return value:  Size  Location     Type
 24030 ;;                  1    wreg      unsigned char 
 24031 ;; Registers used:
 24032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24033 ;; Tracked objects:
 24034 ;;		On entry : 0/0
 24035 ;;		On exit  : 0/0
 24036 ;;		Unchanged: 0/0
 24037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24038 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24040 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24041 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24042 ;;Total ram usage:        4 bytes
 24043 ;; Hardware stack levels used:    1
 24044 ;; This function calls:
 24045 ;;		Nothing
 24046 ;; This function is called by:
 24047 ;;		__fill_buffer_get_display
 24048 ;; This function uses a non-reentrant model
 24049 ;;
 24050                           
 24051                           	psect	text112
 24052  008566                     __ptext112:
 24053                           	opt stack 0
 24054  008566                     _display_get_character:
 24055                           	opt stack 28
 24056                           
 24057                           ;incstack = 0
 24058                           ;display_get_character@line stored from wreg
 24059  008566  6E04               	movwf	display_get_character@line,c
 24060                           
 24061                           ;display.c: 72: return display_content[line][position];
 24062  008568  5004               	movf	display_get_character@line,w,c
 24063  00856A  0D14               	mullw	20
 24064  00856C  0E00               	movlw	low _display_content
 24065  00856E  6E02               	movwf	??_display_get_character& (0+255),c
 24066  008570  0E02               	movlw	high _display_content
 24067  008572  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 24068  008574  50F3               	movf	prodl,w,c
 24069  008576  2602               	addwf	??_display_get_character,f,c
 24070  008578  50F4               	movf	prodh,w,c
 24071  00857A  2203               	addwfc	??_display_get_character+1,f,c
 24072  00857C  5001               	movf	display_get_character@position,w,c
 24073  00857E  0D01               	mullw	1
 24074  008580  50F3               	movf	prodl,w,c
 24075  008582  2402               	addwf	??_display_get_character,w,c
 24076  008584  6ED9               	movwf	fsr2l,c
 24077  008586  50F4               	movf	prodh,w,c
 24078  008588  2003               	addwfc	??_display_get_character+1,w,c
 24079  00858A  6EDA               	movwf	fsr2h,c
 24080  00858C  50DF               	movf	indf2,w,c
 24081  00858E  0012               	return	
 24082  008590                     __end_of_display_get_character:
 24083                           	opt stack 0
 24084                           tosu	equ	0xFFF
 24085                           tosh	equ	0xFFE
 24086                           tosl	equ	0xFFD
 24087                           pclath	equ	0xFFA
 24088                           tblptru	equ	0xFF8
 24089                           tblptrh	equ	0xFF7
 24090                           tblptrl	equ	0xFF6
 24091                           tablat	equ	0xFF5
 24092                           prodh	equ	0xFF4
 24093                           prodl	equ	0xFF3
 24094                           intcon	equ	0xFF2
 24095                           intcon2	equ	0xFF1
 24096                           intcon3	equ	0xFF0
 24097                           indf0	equ	0xFEF
 24098                           postinc0	equ	0xFEE
 24099                           fsr0h	equ	0xFEA
 24100                           fsr0l	equ	0xFE9
 24101                           wreg	equ	0xFE8
 24102                           indf1	equ	0xFE7
 24103                           postdec1	equ	0xFE5
 24104                           plusw1	equ	0xFE3
 24105                           fsr1h	equ	0xFE2
 24106                           fsr1l	equ	0xFE1
 24107                           indf2	equ	0xFDF
 24108                           postinc2	equ	0xFDE
 24109                           postdec2	equ	0xFDD
 24110                           plusw2	equ	0xFDB
 24111                           fsr2h	equ	0xFDA
 24112                           fsr2l	equ	0xFD9
 24113                           status	equ	0xFD8
 24114                           
 24115 ;; *************** function __fill_buffer_get_configuration *****************
 24116 ;; Defined at:
 24117 ;;		line 324 in file "api.c"
 24118 ;; Parameters:    Size  Location     Type
 24119 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 24120 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24121 ;; Auto vars:     Size  Location     Type
 24122 ;;		None
 24123 ;; Return value:  Size  Location     Type
 24124 ;;                  1    wreg      void 
 24125 ;; Registers used:
 24126 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24127 ;; Tracked objects:
 24128 ;;		On entry : 0/0
 24129 ;;		On exit  : 0/0
 24130 ;;		Unchanged: 0/0
 24131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24136 ;;Total ram usage:        2 bytes
 24137 ;; Hardware stack levels used:    1
 24138 ;; This function calls:
 24139 ;;		Nothing
 24140 ;; This function is called by:
 24141 ;;		_api_prepare
 24142 ;; This function uses a non-reentrant model
 24143 ;;
 24144                           
 24145                           	psect	text113
 24146  0066DE                     __ptext113:
 24147                           	opt stack 0
 24148  0066DE                     __fill_buffer_get_configuration:
 24149                           	opt stack 29
 24150                           
 24151                           ;api.c: 327: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24152                           
 24153                           ;incstack = 0
 24154  0066DE  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 24155  0066E2  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 24156  0066E6  0E10               	movlw	16
 24157  0066E8  6EDF               	movwf	indf2,c
 24158                           
 24159                           ;api.c: 330: outBuffer[1] = 0xC125 >> 8;
 24160  0066EA  EE20 F001          	lfsr	2,1
 24161  0066EE  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24162  0066F0  26D9               	addwf	fsr2l,f,c
 24163  0066F2  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24164  0066F4  22DA               	addwfc	fsr2h,f,c
 24165  0066F6  0EC1               	movlw	193
 24166  0066F8  6EDF               	movwf	indf2,c
 24167                           
 24168                           ;api.c: 331: outBuffer[2] = (uint8_t) 0xC125;
 24169  0066FA  EE20 F002          	lfsr	2,2
 24170  0066FE  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24171  006700  26D9               	addwf	fsr2l,f,c
 24172  006702  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24173  006704  22DA               	addwfc	fsr2h,f,c
 24174  006706  0E25               	movlw	37
 24175  006708  6EDF               	movwf	indf2,c
 24176                           
 24177                           ;api.c: 334: outBuffer[3] = communicationSettings.spiMode;
 24178  00670A  EE20 F003          	lfsr	2,3
 24179  00670E  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24180  006710  26D9               	addwf	fsr2l,f,c
 24181  006712  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24182  006714  22DA               	addwfc	fsr2h,f,c
 24183  006716  C139  FFDF         	movff	_communicationSettings,indf2
 24184                           
 24185                           ;api.c: 335: outBuffer[4] = communicationSettings.spiFrequency;
 24186  00671A  EE20 F004          	lfsr	2,4
 24187  00671E  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24188  006720  26D9               	addwf	fsr2l,f,c
 24189  006722  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24190  006724  22DA               	addwfc	fsr2h,f,c
 24191  006726  C13A  FFDF         	movff	_communicationSettings+1,indf2
 24192                           
 24193                           ;api.c: 336: outBuffer[5] = communicationSettings.spiPolarity;
 24194  00672A  EE20 F005          	lfsr	2,5
 24195  00672E  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24196  006730  26D9               	addwf	fsr2l,f,c
 24197  006732  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24198  006734  22DA               	addwfc	fsr2h,f,c
 24199  006736  C13B  FFDF         	movff	_communicationSettings+2,indf2
 24200                           
 24201                           ;api.c: 339: outBuffer[6] = communicationSettings.i2cMode;
 24202  00673A  EE20 F006          	lfsr	2,6
 24203  00673E  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24204  006740  26D9               	addwf	fsr2l,f,c
 24205  006742  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24206  006744  22DA               	addwfc	fsr2h,f,c
 24207  006746  C13C  FFDF         	movff	_communicationSettings+3,indf2
 24208                           
 24209                           ;api.c: 340: outBuffer[7] = communicationSettings.i2cFrequency;
 24210  00674A  EE20 F007          	lfsr	2,7
 24211  00674E  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24212  006750  26D9               	addwf	fsr2l,f,c
 24213  006752  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24214  006754  22DA               	addwfc	fsr2h,f,c
 24215  006756  C13D  FFDF         	movff	_communicationSettings+4,indf2
 24216                           
 24217                           ;api.c: 341: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 24218  00675A  EE20 F008          	lfsr	2,8
 24219  00675E  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24220  006760  26D9               	addwf	fsr2l,f,c
 24221  006762  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24222  006764  22DA               	addwfc	fsr2h,f,c
 24223  006766  C13E  FFDF         	movff	_communicationSettings+5,indf2
 24224                           
 24225                           ;api.c: 342: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 24226  00676A  EE20 F009          	lfsr	2,9
 24227  00676E  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24228  006770  26D9               	addwf	fsr2l,f,c
 24229  006772  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24230  006774  22DA               	addwfc	fsr2h,f,c
 24231  006776  C13F  FFDF         	movff	_communicationSettings+6,indf2
 24232  00677A  0012               	return		;funcret
 24233  00677C                     __end_of__fill_buffer_get_configuration:
 24234                           	opt stack 0
 24235                           tosu	equ	0xFFF
 24236                           tosh	equ	0xFFE
 24237                           tosl	equ	0xFFD
 24238                           pclath	equ	0xFFA
 24239                           tblptru	equ	0xFF8
 24240                           tblptrh	equ	0xFF7
 24241                           tblptrl	equ	0xFF6
 24242                           tablat	equ	0xFF5
 24243                           prodh	equ	0xFF4
 24244                           prodl	equ	0xFF3
 24245                           intcon	equ	0xFF2
 24246                           intcon2	equ	0xFF1
 24247                           intcon3	equ	0xFF0
 24248                           indf0	equ	0xFEF
 24249                           postinc0	equ	0xFEE
 24250                           fsr0h	equ	0xFEA
 24251                           fsr0l	equ	0xFE9
 24252                           wreg	equ	0xFE8
 24253                           indf1	equ	0xFE7
 24254                           postdec1	equ	0xFE5
 24255                           plusw1	equ	0xFE3
 24256                           fsr1h	equ	0xFE2
 24257                           fsr1l	equ	0xFE1
 24258                           indf2	equ	0xFDF
 24259                           postinc2	equ	0xFDE
 24260                           postdec2	equ	0xFDD
 24261                           plusw2	equ	0xFDB
 24262                           fsr2h	equ	0xFDA
 24263                           fsr2l	equ	0xFD9
 24264                           status	equ	0xFD8
 24265                           
 24266 ;; *************** function __fill_buffer_get_bootloader_details *****************
 24267 ;; Defined at:
 24268 ;;		line 264 in file "api.c"
 24269 ;; Parameters:    Size  Location     Type
 24270 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24271 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24272 ;; Auto vars:     Size  Location     Type
 24273 ;;  buffer_large    4   11[COMRAM] unsigned long 
 24274 ;;  buffer_small    2   15[COMRAM] unsigned int 
 24275 ;;  cntr            1   10[COMRAM] unsigned char 
 24276 ;;  data_length     1    9[COMRAM] unsigned char 
 24277 ;; Return value:  Size  Location     Type
 24278 ;;                  1    wreg      void 
 24279 ;; Registers used:
 24280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24281 ;; Tracked objects:
 24282 ;;		On entry : 0/0
 24283 ;;		On exit  : 0/0
 24284 ;;		Unchanged: 0/0
 24285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24287 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24288 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24289 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24290 ;;Total ram usage:       13 bytes
 24291 ;; Hardware stack levels used:    1
 24292 ;; Hardware stack levels required when called:    1
 24293 ;; This function calls:
 24294 ;;		_bootloader_get_entries
 24295 ;;		_bootloader_get_error
 24296 ;;		_bootloader_get_file_size
 24297 ;;		_bootloader_get_flashPagesWritten
 24298 ;;		_bootloader_get_rec_address
 24299 ;;		_bootloader_get_rec_checksum
 24300 ;;		_bootloader_get_rec_checksumCheck
 24301 ;;		_bootloader_get_rec_data
 24302 ;;		_bootloader_get_rec_dataLength
 24303 ;;		_bootloader_get_rec_recordType
 24304 ;;		_bootloader_get_total_entries
 24305 ;; This function is called by:
 24306 ;;		_api_prepare
 24307 ;; This function uses a non-reentrant model
 24308 ;;
 24309                           
 24310                           	psect	text114
 24311  002E7A                     __ptext114:
 24312                           	opt stack 0
 24313  002E7A                     __fill_buffer_get_bootloader_details:
 24314                           	opt stack 28
 24315                           
 24316                           ;api.c: 266: uint8_t cntr;;api.c: 267: uint8_t data_length;;api.c: 268: uint16_t buffer_
      +                          small;;api.c: 269: uint32_t buffer_large;;api.c: 272: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 24317                           
 24318                           ;incstack = 0
 24319  002E7A  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 24320  002E7E  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 24321  002E82  0E13               	movlw	19
 24322  002E84  6EDF               	movwf	indf2,c
 24323                           
 24324                           ;api.c: 275: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 24325  002E86  EE20 F001          	lfsr	2,1
 24326  002E8A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24327  002E8C  26D9               	addwf	fsr2l,f,c
 24328  002E8E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24329  002E90  22DA               	addwfc	fsr2h,f,c
 24330  002E92  0EC1               	movlw	193
 24331  002E94  6EDF               	movwf	indf2,c
 24332                           
 24333                           ;api.c: 276: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 24334  002E96  EE20 F002          	lfsr	2,2
 24335  002E9A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24336  002E9C  26D9               	addwf	fsr2l,f,c
 24337  002E9E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24338  002EA0  22DA               	addwfc	fsr2h,f,c
 24339  002EA2  0E25               	movlw	37
 24340  002EA4  6EDF               	movwf	indf2,c
 24341                           
 24342                           ;api.c: 279: buffer_large = bootloader_get_file_size();
 24343  002EA6  EC35  F044         	call	_bootloader_get_file_size	;wreg free
 24344  002EAA  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 24345  002EAE  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 24346  002EB2  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 24347  002EB6  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 24348                           
 24349                           ;api.c: 280: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 24350  002EBA  EE20 F003          	lfsr	2,3
 24351  002EBE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24352  002EC0  26D9               	addwf	fsr2l,f,c
 24353  002EC2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24354  002EC4  22DA               	addwfc	fsr2h,f,c
 24355  002EC6  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 24356  002EC8  6EDF               	movwf	indf2,c
 24357                           
 24358                           ;api.c: 281: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 24359  002ECA  EE20 F004          	lfsr	2,4
 24360  002ECE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24361  002ED0  26D9               	addwf	fsr2l,f,c
 24362  002ED2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24363  002ED4  22DA               	addwfc	fsr2h,f,c
 24364  002ED6  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 24365                           
 24366                           ;api.c: 282: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 24367  002EDA  EE20 F005          	lfsr	2,5
 24368  002EDE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24369  002EE0  26D9               	addwf	fsr2l,f,c
 24370  002EE2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24371  002EE4  22DA               	addwfc	fsr2h,f,c
 24372  002EE6  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 24373  002EE8  6EDF               	movwf	indf2,c
 24374                           
 24375                           ;api.c: 283: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 24376  002EEA  EE20 F006          	lfsr	2,6
 24377  002EEE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24378  002EF0  26D9               	addwf	fsr2l,f,c
 24379  002EF2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24380  002EF4  22DA               	addwfc	fsr2h,f,c
 24381  002EF6  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 24382                           
 24383                           ;api.c: 285: buffer_small = bootloader_get_entries();
 24384  002EFA  ECA7  F044         	call	_bootloader_get_entries	;wreg free
 24385  002EFE  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 24386  002F02  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 24387                           
 24388                           ;api.c: 286: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24389  002F06  EE20 F007          	lfsr	2,7
 24390  002F0A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24391  002F0C  26D9               	addwf	fsr2l,f,c
 24392  002F0E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24393  002F10  22DA               	addwfc	fsr2h,f,c
 24394  002F12  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24395  002F14  6EDF               	movwf	indf2,c
 24396                           
 24397                           ;api.c: 287: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 24398  002F16  EE20 F008          	lfsr	2,8
 24399  002F1A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24400  002F1C  26D9               	addwf	fsr2l,f,c
 24401  002F1E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24402  002F20  22DA               	addwfc	fsr2h,f,c
 24403  002F22  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24404                           
 24405                           ;api.c: 289: buffer_small = bootloader_get_total_entries();
 24406  002F26  ECB1  F044         	call	_bootloader_get_total_entries	;wreg free
 24407  002F2A  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 24408  002F2E  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 24409                           
 24410                           ;api.c: 290: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24411  002F32  EE20 F009          	lfsr	2,9
 24412  002F36  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24413  002F38  26D9               	addwf	fsr2l,f,c
 24414  002F3A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24415  002F3C  22DA               	addwfc	fsr2h,f,c
 24416  002F3E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24417  002F40  6EDF               	movwf	indf2,c
 24418                           
 24419                           ;api.c: 291: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 24420  002F42  EE20 F00A          	lfsr	2,10
 24421  002F46  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24422  002F48  26D9               	addwf	fsr2l,f,c
 24423  002F4A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24424  002F4C  22DA               	addwfc	fsr2h,f,c
 24425  002F4E  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24426                           
 24427                           ;api.c: 293: outBuffer[11] = (uint8_t) bootloader_get_error();
 24428  002F52  EE20 F00B          	lfsr	2,11
 24429  002F56  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24430  002F58  26D9               	addwf	fsr2l,f,c
 24431  002F5A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24432  002F5C  22DA               	addwfc	fsr2h,f,c
 24433  002F5E  ECDB  F044         	call	_bootloader_get_error	;wreg free
 24434  002F62  6EDF               	movwf	indf2,c
 24435                           
 24436                           ;api.c: 295: buffer_small = bootloader_get_flashPagesWritten();
 24437  002F64  ECAC  F044         	call	_bootloader_get_flashPagesWritten	;wreg free
 24438  002F68  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 24439  002F6C  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 24440                           
 24441                           ;api.c: 296: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24442  002F70  EE20 F00C          	lfsr	2,12
 24443  002F74  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24444  002F76  26D9               	addwf	fsr2l,f,c
 24445  002F78  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24446  002F7A  22DA               	addwfc	fsr2h,f,c
 24447  002F7C  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24448  002F7E  6EDF               	movwf	indf2,c
 24449                           
 24450                           ;api.c: 297: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 24451  002F80  EE20 F00D          	lfsr	2,13
 24452  002F84  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24453  002F86  26D9               	addwf	fsr2l,f,c
 24454  002F88  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24455  002F8A  22DA               	addwfc	fsr2h,f,c
 24456  002F8C  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24457                           
 24458                           ;api.c: 300: buffer_small = bootloader_get_rec_dataLength();
 24459  002F90  EC9D  F044         	call	_bootloader_get_rec_dataLength	;wreg free
 24460  002F94  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 24461  002F98  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 24462                           
 24463                           ;api.c: 301: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24464  002F9C  EE20 F00E          	lfsr	2,14
 24465  002FA0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24466  002FA2  26D9               	addwf	fsr2l,f,c
 24467  002FA4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24468  002FA6  22DA               	addwfc	fsr2h,f,c
 24469  002FA8  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24470  002FAA  6EDF               	movwf	indf2,c
 24471                           
 24472                           ;api.c: 302: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 24473  002FAC  EE20 F00F          	lfsr	2,15
 24474  002FB0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24475  002FB2  26D9               	addwf	fsr2l,f,c
 24476  002FB4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24477  002FB6  22DA               	addwfc	fsr2h,f,c
 24478  002FB8  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24479                           
 24480                           ;api.c: 304: buffer_small = bootloader_get_rec_address();
 24481  002FBC  ECA2  F044         	call	_bootloader_get_rec_address	;wreg free
 24482  002FC0  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 24483  002FC4  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 24484                           
 24485                           ;api.c: 305: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24486  002FC8  EE20 F010          	lfsr	2,16
 24487  002FCC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24488  002FCE  26D9               	addwf	fsr2l,f,c
 24489  002FD0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24490  002FD2  22DA               	addwfc	fsr2h,f,c
 24491  002FD4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24492  002FD6  6EDF               	movwf	indf2,c
 24493                           
 24494                           ;api.c: 306: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 24495  002FD8  EE20 F011          	lfsr	2,17
 24496  002FDC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24497  002FDE  26D9               	addwf	fsr2l,f,c
 24498  002FE0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24499  002FE2  22DA               	addwfc	fsr2h,f,c
 24500  002FE4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24501                           
 24502                           ;api.c: 308: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 24503  002FE8  EE20 F012          	lfsr	2,18
 24504  002FEC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24505  002FEE  26D9               	addwf	fsr2l,f,c
 24506  002FF0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24507  002FF2  22DA               	addwfc	fsr2h,f,c
 24508  002FF4  ECCF  F044         	call	_bootloader_get_rec_recordType	;wreg free
 24509  002FF8  6EDF               	movwf	indf2,c
 24510                           
 24511                           ;api.c: 309: outBuffer[19] = bootloader_get_rec_checksum();
 24512  002FFA  EE20 F013          	lfsr	2,19
 24513  002FFE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24514  003000  26D9               	addwf	fsr2l,f,c
 24515  003002  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24516  003004  22DA               	addwfc	fsr2h,f,c
 24517  003006  ECD5  F044         	call	_bootloader_get_rec_checksum	;wreg free
 24518  00300A  6EDF               	movwf	indf2,c
 24519                           
 24520                           ;api.c: 310: outBuffer[20] = bootloader_get_rec_checksumCheck();
 24521  00300C  EE20 F014          	lfsr	2,20
 24522  003010  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24523  003012  26D9               	addwf	fsr2l,f,c
 24524  003014  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24525  003016  22DA               	addwfc	fsr2h,f,c
 24526  003018  ECD2  F044         	call	_bootloader_get_rec_checksumCheck	;wreg free
 24527  00301C  6EDF               	movwf	indf2,c
 24528                           
 24529                           ;api.c: 312: data_length = (uint8_t) bootloader_get_rec_dataLength();
 24530  00301E  EC9D  F044         	call	_bootloader_get_rec_dataLength	;wreg free
 24531  003022  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 24532  003024  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24533                           
 24534                           ;api.c: 313: if(data_length>43)
 24535  003026  0E2B               	movlw	43
 24536  003028  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 24537  00302A  D002               	goto	l2676
 24538                           
 24539                           ;api.c: 314: {;api.c: 316: data_length = 43;
 24540  00302C  0E2B               	movlw	43
 24541  00302E  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24542  003030                     l2676:
 24543                           
 24544                           ;api.c: 317: };api.c: 318: for(cntr=0; cntr<data_length; ++cntr)
 24545  003030  0E00               	movlw	0
 24546  003032  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 24547  003034  D014               	goto	l2677
 24548  003036                     
 24549                           ;api.c: 319: {;api.c: 320: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 24550  003036  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24551  003038  EC0D  F044         	call	_bootloader_get_rec_data
 24552  00303C  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 24553  00303E  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24554  003040  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 24555  003042  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 24556  003044  0E15               	movlw	21
 24557  003046  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 24558  003048  0E00               	movlw	0
 24559  00304A  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 24560  00304C  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 24561  00304E  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24562  003050  6ED9               	movwf	fsr2l,c
 24563  003052  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 24564  003054  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24565  003056  6EDA               	movwf	fsr2h,c
 24566  003058  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 24567  00305C  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 24568  00305E                     l2677:
 24569  00305E  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 24570  003060  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 24571  003062  B0D8               	btfsc	status,0,c
 24572  003064  0012               	return	
 24573  003066  D7E7               	goto	l2678
 24574  003068                     __end_of__fill_buffer_get_bootloader_details:
 24575                           	opt stack 0
 24576                           tosu	equ	0xFFF
 24577                           tosh	equ	0xFFE
 24578                           tosl	equ	0xFFD
 24579                           pclath	equ	0xFFA
 24580                           tblptru	equ	0xFF8
 24581                           tblptrh	equ	0xFF7
 24582                           tblptrl	equ	0xFF6
 24583                           tablat	equ	0xFF5
 24584                           prodh	equ	0xFF4
 24585                           prodl	equ	0xFF3
 24586                           intcon	equ	0xFF2
 24587                           intcon2	equ	0xFF1
 24588                           intcon3	equ	0xFF0
 24589                           indf0	equ	0xFEF
 24590                           postinc0	equ	0xFEE
 24591                           fsr0h	equ	0xFEA
 24592                           fsr0l	equ	0xFE9
 24593                           wreg	equ	0xFE8
 24594                           indf1	equ	0xFE7
 24595                           postdec1	equ	0xFE5
 24596                           plusw1	equ	0xFE3
 24597                           fsr1h	equ	0xFE2
 24598                           fsr1l	equ	0xFE1
 24599                           indf2	equ	0xFDF
 24600                           postinc2	equ	0xFDE
 24601                           postdec2	equ	0xFDD
 24602                           plusw2	equ	0xFDB
 24603                           fsr2h	equ	0xFDA
 24604                           fsr2l	equ	0xFD9
 24605                           status	equ	0xFD8
 24606                           
 24607 ;; *************** function _bootloader_get_rec_recordType *****************
 24608 ;; Defined at:
 24609 ;;		line 488 in file "bootloader.c"
 24610 ;; Parameters:    Size  Location     Type
 24611 ;;		None
 24612 ;; Auto vars:     Size  Location     Type
 24613 ;;		None
 24614 ;; Return value:  Size  Location     Type
 24615 ;;                  1    wreg      enum E6772
 24616 ;; Registers used:
 24617 ;;		wreg, status,2
 24618 ;; Tracked objects:
 24619 ;;		On entry : 0/0
 24620 ;;		On exit  : 0/0
 24621 ;;		Unchanged: 0/0
 24622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24627 ;;Total ram usage:        0 bytes
 24628 ;; Hardware stack levels used:    1
 24629 ;; This function calls:
 24630 ;;		Nothing
 24631 ;; This function is called by:
 24632 ;;		__fill_buffer_get_bootloader_details
 24633 ;; This function uses a non-reentrant model
 24634 ;;
 24635                           
 24636                           	psect	text115
 24637  00899E                     __ptext115:
 24638                           	opt stack 0
 24639  00899E                     _bootloader_get_rec_recordType:
 24640                           	opt stack 28
 24641                           
 24642                           ;bootloader.c: 490: return hex_file_entry.recordType;
 24643                           
 24644                           ;incstack = 0
 24645  00899E  0101               	movlb	1	; () banked
 24646  0089A0  51BF               	movf	(_hex_file_entry+4)& (0+255),w,b
 24647  0089A2  0012               	return	
 24648  0089A4                     __end_of_bootloader_get_rec_recordType:
 24649                           	opt stack 0
 24650                           tosu	equ	0xFFF
 24651                           tosh	equ	0xFFE
 24652                           tosl	equ	0xFFD
 24653                           pclath	equ	0xFFA
 24654                           tblptru	equ	0xFF8
 24655                           tblptrh	equ	0xFF7
 24656                           tblptrl	equ	0xFF6
 24657                           tablat	equ	0xFF5
 24658                           prodh	equ	0xFF4
 24659                           prodl	equ	0xFF3
 24660                           intcon	equ	0xFF2
 24661                           intcon2	equ	0xFF1
 24662                           intcon3	equ	0xFF0
 24663                           indf0	equ	0xFEF
 24664                           postinc0	equ	0xFEE
 24665                           fsr0h	equ	0xFEA
 24666                           fsr0l	equ	0xFE9
 24667                           wreg	equ	0xFE8
 24668                           indf1	equ	0xFE7
 24669                           postdec1	equ	0xFE5
 24670                           plusw1	equ	0xFE3
 24671                           fsr1h	equ	0xFE2
 24672                           fsr1l	equ	0xFE1
 24673                           indf2	equ	0xFDF
 24674                           postinc2	equ	0xFDE
 24675                           postdec2	equ	0xFDD
 24676                           plusw2	equ	0xFDB
 24677                           fsr2h	equ	0xFDA
 24678                           fsr2l	equ	0xFD9
 24679                           status	equ	0xFD8
 24680                           
 24681 ;; *************** function _bootloader_get_rec_dataLength *****************
 24682 ;; Defined at:
 24683 ;;		line 477 in file "bootloader.c"
 24684 ;; Parameters:    Size  Location     Type
 24685 ;;		None
 24686 ;; Auto vars:     Size  Location     Type
 24687 ;;		None
 24688 ;; Return value:  Size  Location     Type
 24689 ;;                  2    0[COMRAM] unsigned int 
 24690 ;; Registers used:
 24691 ;;		None
 24692 ;; Tracked objects:
 24693 ;;		On entry : 0/0
 24694 ;;		On exit  : 0/0
 24695 ;;		Unchanged: 0/0
 24696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24701 ;;Total ram usage:        2 bytes
 24702 ;; Hardware stack levels used:    1
 24703 ;; This function calls:
 24704 ;;		Nothing
 24705 ;; This function is called by:
 24706 ;;		__fill_buffer_get_bootloader_details
 24707 ;; This function uses a non-reentrant model
 24708 ;;
 24709                           
 24710                           	psect	text116
 24711  00893A                     __ptext116:
 24712                           	opt stack 0
 24713  00893A                     _bootloader_get_rec_dataLength:
 24714                           	opt stack 28
 24715                           
 24716                           ;bootloader.c: 479: return hex_file_entry.dataLength;
 24717                           
 24718                           ; BSR set to: 1
 24719                           ;incstack = 0
 24720  00893A  C1BB  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 24721  00893E  C1BC  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 24722  008942  0012               	return		;funcret
 24723  008944                     __end_of_bootloader_get_rec_dataLength:
 24724                           	opt stack 0
 24725                           tosu	equ	0xFFF
 24726                           tosh	equ	0xFFE
 24727                           tosl	equ	0xFFD
 24728                           pclath	equ	0xFFA
 24729                           tblptru	equ	0xFF8
 24730                           tblptrh	equ	0xFF7
 24731                           tblptrl	equ	0xFF6
 24732                           tablat	equ	0xFF5
 24733                           prodh	equ	0xFF4
 24734                           prodl	equ	0xFF3
 24735                           intcon	equ	0xFF2
 24736                           intcon2	equ	0xFF1
 24737                           intcon3	equ	0xFF0
 24738                           indf0	equ	0xFEF
 24739                           postinc0	equ	0xFEE
 24740                           fsr0h	equ	0xFEA
 24741                           fsr0l	equ	0xFE9
 24742                           wreg	equ	0xFE8
 24743                           indf1	equ	0xFE7
 24744                           postdec1	equ	0xFE5
 24745                           plusw1	equ	0xFE3
 24746                           fsr1h	equ	0xFE2
 24747                           fsr1l	equ	0xFE1
 24748                           indf2	equ	0xFDF
 24749                           postinc2	equ	0xFDE
 24750                           postdec2	equ	0xFDD
 24751                           plusw2	equ	0xFDB
 24752                           fsr2h	equ	0xFDA
 24753                           fsr2l	equ	0xFD9
 24754                           status	equ	0xFD8
 24755                           
 24756 ;; *************** function _bootloader_get_rec_data *****************
 24757 ;; Defined at:
 24758 ;;		line 493 in file "bootloader.c"
 24759 ;; Parameters:    Size  Location     Type
 24760 ;;  index           1    wreg     unsigned char 
 24761 ;; Auto vars:     Size  Location     Type
 24762 ;;  index           1    0[COMRAM] unsigned char 
 24763 ;; Return value:  Size  Location     Type
 24764 ;;                  1    wreg      unsigned char 
 24765 ;; Registers used:
 24766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24767 ;; Tracked objects:
 24768 ;;		On entry : 0/0
 24769 ;;		On exit  : 0/0
 24770 ;;		Unchanged: 0/0
 24771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24776 ;;Total ram usage:        1 bytes
 24777 ;; Hardware stack levels used:    1
 24778 ;; This function calls:
 24779 ;;		Nothing
 24780 ;; This function is called by:
 24781 ;;		__fill_buffer_get_bootloader_details
 24782 ;; This function uses a non-reentrant model
 24783 ;;
 24784                           
 24785                           	psect	text117
 24786  00881A                     __ptext117:
 24787                           	opt stack 0
 24788  00881A                     _bootloader_get_rec_data:
 24789                           	opt stack 28
 24790                           
 24791                           ;incstack = 0
 24792                           ;bootloader_get_rec_data@index stored from wreg
 24793  00881A  6E01               	movwf	bootloader_get_rec_data@index,c
 24794                           
 24795                           ;bootloader.c: 495: return hex_file_entry.data[index];
 24796  00881C  5001               	movf	bootloader_get_rec_data@index,w,c
 24797  00881E  0D01               	mullw	1
 24798  008820  0EC0               	movlw	low (_hex_file_entry+5)
 24799  008822  24F3               	addwf	prodl,w,c
 24800  008824  6ED9               	movwf	fsr2l,c
 24801  008826  0E01               	movlw	high (_hex_file_entry+5)
 24802  008828  20F4               	addwfc	prodh,w,c
 24803  00882A  6EDA               	movwf	fsr2h,c
 24804  00882C  50DF               	movf	indf2,w,c
 24805  00882E  0012               	return	
 24806  008830                     __end_of_bootloader_get_rec_data:
 24807                           	opt stack 0
 24808                           tosu	equ	0xFFF
 24809                           tosh	equ	0xFFE
 24810                           tosl	equ	0xFFD
 24811                           pclath	equ	0xFFA
 24812                           tblptru	equ	0xFF8
 24813                           tblptrh	equ	0xFF7
 24814                           tblptrl	equ	0xFF6
 24815                           tablat	equ	0xFF5
 24816                           prodh	equ	0xFF4
 24817                           prodl	equ	0xFF3
 24818                           intcon	equ	0xFF2
 24819                           intcon2	equ	0xFF1
 24820                           intcon3	equ	0xFF0
 24821                           indf0	equ	0xFEF
 24822                           postinc0	equ	0xFEE
 24823                           fsr0h	equ	0xFEA
 24824                           fsr0l	equ	0xFE9
 24825                           wreg	equ	0xFE8
 24826                           indf1	equ	0xFE7
 24827                           postdec1	equ	0xFE5
 24828                           plusw1	equ	0xFE3
 24829                           fsr1h	equ	0xFE2
 24830                           fsr1l	equ	0xFE1
 24831                           indf2	equ	0xFDF
 24832                           postinc2	equ	0xFDE
 24833                           postdec2	equ	0xFDD
 24834                           plusw2	equ	0xFDB
 24835                           fsr2h	equ	0xFDA
 24836                           fsr2l	equ	0xFD9
 24837                           status	equ	0xFD8
 24838                           
 24839 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 24840 ;; Defined at:
 24841 ;;		line 503 in file "bootloader.c"
 24842 ;; Parameters:    Size  Location     Type
 24843 ;;		None
 24844 ;; Auto vars:     Size  Location     Type
 24845 ;;		None
 24846 ;; Return value:  Size  Location     Type
 24847 ;;                  1    wreg      unsigned char 
 24848 ;; Registers used:
 24849 ;;		wreg, status,2
 24850 ;; Tracked objects:
 24851 ;;		On entry : 0/0
 24852 ;;		On exit  : 0/0
 24853 ;;		Unchanged: 0/0
 24854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24859 ;;Total ram usage:        0 bytes
 24860 ;; Hardware stack levels used:    1
 24861 ;; This function calls:
 24862 ;;		Nothing
 24863 ;; This function is called by:
 24864 ;;		__fill_buffer_get_bootloader_details
 24865 ;; This function uses a non-reentrant model
 24866 ;;
 24867                           
 24868                           	psect	text118
 24869  0089A4                     __ptext118:
 24870                           	opt stack 0
 24871  0089A4                     _bootloader_get_rec_checksumCheck:
 24872                           	opt stack 28
 24873                           
 24874                           ;bootloader.c: 505: return hex_file_entry.checksumCheck;
 24875                           
 24876                           ;incstack = 0
 24877  0089A4  0101               	movlb	1	; () banked
 24878  0089A6  51D1               	movf	(_hex_file_entry+22)& (0+255),w,b
 24879  0089A8  0012               	return	
 24880  0089AA                     __end_of_bootloader_get_rec_checksumCheck:
 24881                           	opt stack 0
 24882                           tosu	equ	0xFFF
 24883                           tosh	equ	0xFFE
 24884                           tosl	equ	0xFFD
 24885                           pclath	equ	0xFFA
 24886                           tblptru	equ	0xFF8
 24887                           tblptrh	equ	0xFF7
 24888                           tblptrl	equ	0xFF6
 24889                           tablat	equ	0xFF5
 24890                           prodh	equ	0xFF4
 24891                           prodl	equ	0xFF3
 24892                           intcon	equ	0xFF2
 24893                           intcon2	equ	0xFF1
 24894                           intcon3	equ	0xFF0
 24895                           indf0	equ	0xFEF
 24896                           postinc0	equ	0xFEE
 24897                           fsr0h	equ	0xFEA
 24898                           fsr0l	equ	0xFE9
 24899                           wreg	equ	0xFE8
 24900                           indf1	equ	0xFE7
 24901                           postdec1	equ	0xFE5
 24902                           plusw1	equ	0xFE3
 24903                           fsr1h	equ	0xFE2
 24904                           fsr1l	equ	0xFE1
 24905                           indf2	equ	0xFDF
 24906                           postinc2	equ	0xFDE
 24907                           postdec2	equ	0xFDD
 24908                           plusw2	equ	0xFDB
 24909                           fsr2h	equ	0xFDA
 24910                           fsr2l	equ	0xFD9
 24911                           status	equ	0xFD8
 24912                           
 24913 ;; *************** function _bootloader_get_rec_checksum *****************
 24914 ;; Defined at:
 24915 ;;		line 498 in file "bootloader.c"
 24916 ;; Parameters:    Size  Location     Type
 24917 ;;		None
 24918 ;; Auto vars:     Size  Location     Type
 24919 ;;		None
 24920 ;; Return value:  Size  Location     Type
 24921 ;;                  1    wreg      unsigned char 
 24922 ;; Registers used:
 24923 ;;		wreg, status,2
 24924 ;; Tracked objects:
 24925 ;;		On entry : 0/0
 24926 ;;		On exit  : 0/0
 24927 ;;		Unchanged: 0/0
 24928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24933 ;;Total ram usage:        0 bytes
 24934 ;; Hardware stack levels used:    1
 24935 ;; This function calls:
 24936 ;;		Nothing
 24937 ;; This function is called by:
 24938 ;;		__fill_buffer_get_bootloader_details
 24939 ;; This function uses a non-reentrant model
 24940 ;;
 24941                           
 24942                           	psect	text119
 24943  0089AA                     __ptext119:
 24944                           	opt stack 0
 24945  0089AA                     _bootloader_get_rec_checksum:
 24946                           	opt stack 28
 24947                           
 24948                           ;bootloader.c: 500: return hex_file_entry.checksum;
 24949                           
 24950                           ; BSR set to: 1
 24951                           ;incstack = 0
 24952  0089AA  0101               	movlb	1	; () banked
 24953  0089AC  51D0               	movf	(_hex_file_entry+21)& (0+255),w,b
 24954  0089AE  0012               	return	
 24955  0089B0                     __end_of_bootloader_get_rec_checksum:
 24956                           	opt stack 0
 24957                           tosu	equ	0xFFF
 24958                           tosh	equ	0xFFE
 24959                           tosl	equ	0xFFD
 24960                           pclath	equ	0xFFA
 24961                           tblptru	equ	0xFF8
 24962                           tblptrh	equ	0xFF7
 24963                           tblptrl	equ	0xFF6
 24964                           tablat	equ	0xFF5
 24965                           prodh	equ	0xFF4
 24966                           prodl	equ	0xFF3
 24967                           intcon	equ	0xFF2
 24968                           intcon2	equ	0xFF1
 24969                           intcon3	equ	0xFF0
 24970                           indf0	equ	0xFEF
 24971                           postinc0	equ	0xFEE
 24972                           fsr0h	equ	0xFEA
 24973                           fsr0l	equ	0xFE9
 24974                           wreg	equ	0xFE8
 24975                           indf1	equ	0xFE7
 24976                           postdec1	equ	0xFE5
 24977                           plusw1	equ	0xFE3
 24978                           fsr1h	equ	0xFE2
 24979                           fsr1l	equ	0xFE1
 24980                           indf2	equ	0xFDF
 24981                           postinc2	equ	0xFDE
 24982                           postdec2	equ	0xFDD
 24983                           plusw2	equ	0xFDB
 24984                           fsr2h	equ	0xFDA
 24985                           fsr2l	equ	0xFD9
 24986                           status	equ	0xFD8
 24987                           
 24988 ;; *************** function __fill_buffer_find_file *****************
 24989 ;; Defined at:
 24990 ;;		line 363 in file "api.c"
 24991 ;; Parameters:    Size  Location     Type
 24992 ;;  inBuffer        2   67[COMRAM] PTR unsigned char 
 24993 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 24994 ;;  outBuffer       2   69[COMRAM] PTR unsigned char 
 24995 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24996 ;; Auto vars:     Size  Location     Type
 24997 ;;  cntr            1   75[COMRAM] unsigned char 
 24998 ;; Return value:  Size  Location     Type
 24999 ;;                  1    wreg      void 
 25000 ;; Registers used:
 25001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25002 ;; Tracked objects:
 25003 ;;		On entry : 0/0
 25004 ;;		On exit  : 0/0
 25005 ;;		Unchanged: 0/0
 25006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25009 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25010 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25011 ;;Total ram usage:        9 bytes
 25012 ;; Hardware stack levels used:    1
 25013 ;; Hardware stack levels required when called:    6
 25014 ;; This function calls:
 25015 ;;		_fat_find_file
 25016 ;; This function is called by:
 25017 ;;		_api_prepare
 25018 ;; This function uses a non-reentrant model
 25019 ;;
 25020                           
 25021                           	psect	text120
 25022  0064FC                     __ptext120:
 25023                           	opt stack 0
 25024  0064FC                     __fill_buffer_find_file:
 25025                           	opt stack 23
 25026                           
 25027                           ;api.c: 365: uint8_t cntr;;api.c: 368: outBuffer[0] = DATAREQUEST_FIND_FILE;
 25028                           
 25029                           ; BSR set to: 1
 25030                           ;incstack = 0
 25031  0064FC  C046  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 25032  006500  C047  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 25033  006504  0E81               	movlw	129
 25034  006506  6EDF               	movwf	indf2,c
 25035                           
 25036                           ;api.c: 371: outBuffer[1] = 0xC125 >> 8;
 25037  006508  EE20 F001          	lfsr	2,1
 25038  00650C  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 25039  00650E  26D9               	addwf	fsr2l,f,c
 25040  006510  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25041  006512  22DA               	addwfc	fsr2h,f,c
 25042  006514  0EC1               	movlw	193
 25043  006516  6EDF               	movwf	indf2,c
 25044                           
 25045                           ;api.c: 372: outBuffer[2] = (uint8_t) 0xC125;
 25046  006518  EE20 F002          	lfsr	2,2
 25047  00651C  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 25048  00651E  26D9               	addwf	fsr2l,f,c
 25049  006520  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25050  006522  22DA               	addwfc	fsr2h,f,c
 25051  006524  0E25               	movlw	37
 25052  006526  6EDF               	movwf	indf2,c
 25053                           
 25054                           ;api.c: 375: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 25055  006528  0E01               	movlw	1
 25056  00652A  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25057  00652C  6E30               	movwf	fat_find_file@name,c
 25058  00652E  0E00               	movlw	0
 25059  006530  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25060  006532  6E31               	movwf	fat_find_file@name+1,c
 25061  006534  0E09               	movlw	9
 25062  006536  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25063  006538  6E32               	movwf	fat_find_file@extension,c
 25064  00653A  0E00               	movlw	0
 25065  00653C  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25066  00653E  6E33               	movwf	fat_find_file@extension+1,c
 25067  006540  EC73  F02F         	call	_fat_find_file	;wreg free
 25068  006544  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 25069  006546  EE20 F003          	lfsr	2,3
 25070  00654A  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 25071  00654C  26D9               	addwf	fsr2l,f,c
 25072  00654E  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25073  006550  22DA               	addwfc	fsr2h,f,c
 25074  006552  C048  FFDF         	movff	??__fill_buffer_find_file,indf2
 25075                           
 25076                           ;api.c: 378: for(cntr=0; cntr<11; ++cntr)
 25077  006556  0E00               	movlw	0
 25078  006558  6E4C               	movwf	__fill_buffer_find_file@cntr,c
 25079  00655A                     l13980:
 25080  00655A  0E0A               	movlw	10
 25081  00655C  644C               	cpfsgt	__fill_buffer_find_file@cntr,c
 25082  00655E  D001               	goto	l2689
 25083  006560  0012               	return	
 25084  006562                     l2689:
 25085                           
 25086                           ;api.c: 379: {;api.c: 380: outBuffer[cntr+12] = inBuffer[cntr+1];
 25087  006562  504C               	movf	__fill_buffer_find_file@cntr,w,c
 25088  006564  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 25089  006566  6A49               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 25090  006568  0E01               	movlw	1
 25091  00656A  2648               	addwf	??__fill_buffer_find_file,f,c
 25092  00656C  0E00               	movlw	0
 25093  00656E  2249               	addwfc	??__fill_buffer_find_file+1,f,c
 25094  006570  5048               	movf	??__fill_buffer_find_file,w,c
 25095  006572  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25096  006574  6ED9               	movwf	fsr2l,c
 25097  006576  5049               	movf	??__fill_buffer_find_file+1,w,c
 25098  006578  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25099  00657A  6EDA               	movwf	fsr2h,c
 25100  00657C  504C               	movf	__fill_buffer_find_file@cntr,w,c
 25101  00657E  6E4A               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 25102  006580  6A4B               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 25103  006582  0E0C               	movlw	12
 25104  006584  264A               	addwf	??__fill_buffer_find_file+2,f,c
 25105  006586  0E00               	movlw	0
 25106  006588  224B               	addwfc	??__fill_buffer_find_file+3,f,c
 25107  00658A  504A               	movf	??__fill_buffer_find_file+2,w,c
 25108  00658C  2446               	addwf	__fill_buffer_find_file@outBuffer,w,c
 25109  00658E  6EE1               	movwf	fsr1l,c
 25110  006590  504B               	movf	??__fill_buffer_find_file+3,w,c
 25111  006592  2047               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 25112  006594  6EE2               	movwf	fsr1h,c
 25113  006596  CFDF FFE7          	movff	indf2,indf1
 25114  00659A  2A4C               	incf	__fill_buffer_find_file@cntr,f,c
 25115  00659C  D7DE               	goto	l13980
 25116  00659E                     __end_of__fill_buffer_find_file:
 25117                           	opt stack 0
 25118                           tosu	equ	0xFFF
 25119                           tosh	equ	0xFFE
 25120                           tosl	equ	0xFFD
 25121                           pclath	equ	0xFFA
 25122                           tblptru	equ	0xFF8
 25123                           tblptrh	equ	0xFF7
 25124                           tblptrl	equ	0xFF6
 25125                           tablat	equ	0xFF5
 25126                           prodh	equ	0xFF4
 25127                           prodl	equ	0xFF3
 25128                           intcon	equ	0xFF2
 25129                           intcon2	equ	0xFF1
 25130                           intcon3	equ	0xFF0
 25131                           indf0	equ	0xFEF
 25132                           postinc0	equ	0xFEE
 25133                           fsr0h	equ	0xFEA
 25134                           fsr0l	equ	0xFE9
 25135                           wreg	equ	0xFE8
 25136                           indf1	equ	0xFE7
 25137                           postdec1	equ	0xFE5
 25138                           plusw1	equ	0xFE3
 25139                           fsr1h	equ	0xFE2
 25140                           fsr1l	equ	0xFE1
 25141                           indf2	equ	0xFDF
 25142                           postinc2	equ	0xFDE
 25143                           postdec2	equ	0xFDD
 25144                           plusw2	equ	0xFDB
 25145                           fsr2h	equ	0xFDA
 25146                           fsr2l	equ	0xFD9
 25147                           status	equ	0xFD8
 25148                           
 25149 ;; *************** function _api_parse *****************
 25150 ;; Defined at:
 25151 ;;		line 133 in file "api.c"
 25152 ;; Parameters:    Size  Location     Type
 25153 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 25154 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 25155 ;;  receivedData    1   53[BANK0 ] unsigned char 
 25156 ;; Auto vars:     Size  Location     Type
 25157 ;;  idx             1   94[COMRAM] unsigned char 
 25158 ;; Return value:  Size  Location     Type
 25159 ;;                  1    wreg      void 
 25160 ;; Registers used:
 25161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25162 ;; Tracked objects:
 25163 ;;		On entry : 0/0
 25164 ;;		On exit  : 0/0
 25165 ;;		Unchanged: 0/0
 25166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25167 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25169 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25170 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25171 ;;Total ram usage:        6 bytes
 25172 ;; Hardware stack levels used:    1
 25173 ;; Hardware stack levels required when called:   10
 25174 ;; This function calls:
 25175 ;;		__parse_command_long
 25176 ;;		__parse_command_short
 25177 ;; This function is called by:
 25178 ;;		_main
 25179 ;;		_APP_DeviceCustomHIDTasks
 25180 ;; This function uses a non-reentrant model
 25181 ;;
 25182                           
 25183                           	psect	text121
 25184  00589E                     __ptext121:
 25185                           	opt stack 0
 25186  00589E                     _api_parse:
 25187                           	opt stack 20
 25188                           
 25189                           ;api.c: 137: uint8_t idx;;api.c: 139: if(inBuffer[0]>0x7F)
 25190                           
 25191                           ;incstack = 0
 25192  00589E  C093  FFD9         	movff	api_parse@inBuffer,fsr2l
 25193  0058A2  C094  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25194  0058A6  0E7F               	movlw	127
 25195  0058A8  64DF               	cpfsgt	indf2,c
 25196  0058AA  D001               	goto	l2646
 25197  0058AC  0012               	return	
 25198  0058AE                     l2646:
 25199                           
 25200                           ;api.c: 144: };api.c: 146: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 25201  0058AE  C093  FFD9         	movff	api_parse@inBuffer,fsr2l
 25202  0058B2  C094  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25203  0058B6  0E20               	movlw	32
 25204  0058B8  18DE               	xorwf	postinc2,w,c
 25205  0058BA  B4D8               	btfsc	status,2,c
 25206  0058BC  0012               	return	
 25207                           
 25208                           ;api.c: 151: };api.c: 153: idx = 1;
 25209                           
 25210                           ;api.c: 147: {;api.c: 150: return;
 25211  0058BE  0E01               	movlw	1
 25212  0058C0  6E5F               	movwf	api_parse@idx,c
 25213                           
 25214                           ;api.c: 154: while(idx<receivedDataLength)
 25215  0058C2  D051               	goto	l2654
 25216  0058C4                     
 25217                           ;api.c: 155: {;api.c: 157: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 25218  0058C4  505F               	movf	api_parse@idx,w,c
 25219  0058C6  0D01               	mullw	1
 25220  0058C8  50F3               	movf	prodl,w,c
 25221  0058CA  0100               	movlb	0	; () banked
 25222  0058CC  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 25223  0058CE  6ED9               	movwf	fsr2l,c
 25224  0058D0  50F4               	movf	prodh,w,c
 25225  0058D2  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25226  0058D4  6EDA               	movwf	fsr2h,c
 25227  0058D6  0E99               	movlw	153
 25228  0058D8  18DE               	xorwf	postinc2,w,c
 25229  0058DA  B4D8               	btfsc	status,2,c
 25230  0058DC  0012               	return	
 25231  0058DE  D027               	goto	l2652
 25232  0058E0                     
 25233                           ; BSR set to: 0
 25234                           ;api.c: 165: _parse_command_short(inBuffer[idx]);
 25235                           
 25236                           ; BSR set to: 0
 25237  0058E0  505F               	movf	api_parse@idx,w,c
 25238  0058E2  0D01               	mullw	1
 25239  0058E4  50F3               	movf	prodl,w,c
 25240  0058E6  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 25241  0058E8  6ED9               	movwf	fsr2l,c
 25242  0058EA  50F4               	movf	prodh,w,c
 25243  0058EC  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25244  0058EE  6EDA               	movwf	fsr2h,c
 25245  0058F0  50DF               	movf	indf2,w,c
 25246  0058F2  EC2D  F030         	call	__parse_command_short
 25247  0058F6  D00C               	goto	l14546
 25248  0058F8                     
 25249                           ;api.c: 170: _parse_command_short(inBuffer[idx]);
 25250  0058F8  505F               	movf	api_parse@idx,w,c
 25251  0058FA  0D01               	mullw	1
 25252  0058FC  50F3               	movf	prodl,w,c
 25253  0058FE  0100               	movlb	0	; () banked
 25254  005900  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 25255  005902  6ED9               	movwf	fsr2l,c
 25256  005904  50F4               	movf	prodh,w,c
 25257  005906  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25258  005908  6EDA               	movwf	fsr2h,c
 25259  00590A  50DF               	movf	indf2,w,c
 25260  00590C  EC2D  F030         	call	__parse_command_short
 25261  005910                     l14546:
 25262                           
 25263                           ;api.c: 171: ++idx;
 25264  005910  2A5F               	incf	api_parse@idx,f,c
 25265                           
 25266                           ;api.c: 172: break;
 25267  005912  D029               	goto	l2654
 25268  005914                     
 25269                           ;api.c: 175: idx += _parse_command_long(&inBuffer[idx]);
 25270  005914  505F               	movf	api_parse@idx,w,c
 25271  005916  0D01               	mullw	1
 25272  005918  50F3               	movf	prodl,w,c
 25273  00591A  0100               	movlb	0	; () banked
 25274  00591C  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 25275  00591E  6E5C               	movwf	__parse_command_long@data,c
 25276  005920  50F4               	movf	prodh,w,c
 25277  005922  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25278  005924  6E5D               	movwf	__parse_command_long@data+1,c
 25279  005926  ECCF  F032         	call	__parse_command_long	;wreg free
 25280  00592A  265F               	addwf	api_parse@idx,f,c
 25281                           
 25282                           ;api.c: 176: break;
 25283  00592C  D01C               	goto	l2654
 25284  00592E                     l2652:
 25285  00592E  505F               	movf	api_parse@idx,w,c
 25286  005930  0D01               	mullw	1
 25287  005932  50F3               	movf	prodl,w,c
 25288  005934  0100               	movlb	0	; () banked
 25289  005936  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 25290  005938  6ED9               	movwf	fsr2l,c
 25291  00593A  50F4               	movf	prodh,w,c
 25292  00593C  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25293  00593E  6EDA               	movwf	fsr2h,c
 25294  005940  50DF               	movf	indf2,w,c
 25295  005942  0BF0               	andlw	240
 25296  005944  6F96               	movwf	??_api_parse& (0+255),b
 25297  005946  6B97               	clrf	(??_api_parse+1)& (0+255),b
 25298                           
 25299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25300                           ; Switch size 1, requested type "space"
 25301                           ; Number of cases is 1, Range of values is 0 to 0
 25302                           ; switch strategies available:
 25303                           ; Name         Instructions Cycles
 25304                           ; simple_byte            4     3 (average)
 25305                           ;	Chosen strategy is simple_byte
 25306  005948  5197               	movf	(??_api_parse+1)& (0+255),w,b
 25307  00594A  0A00               	xorlw	0	; case 0
 25308  00594C  A4D8               	btfss	status,2,c
 25309  00594E  0012               	return	
 25310                           
 25311                           ; BSR set to: 0
 25312                           ; Switch size 1, requested type "space"
 25313                           ; Number of cases is 3, Range of values is 32 to 80
 25314                           ; switch strategies available:
 25315                           ; Name         Instructions Cycles
 25316                           ; simple_byte           10     6 (average)
 25317                           ;	Chosen strategy is simple_byte
 25318  005950  5196               	movf	??_api_parse& (0+255),w,b
 25319  005952  0A20               	xorlw	32	; case 32
 25320  005954  B4D8               	btfsc	status,2,c
 25321  005956  D7C4               	goto	l2653
 25322  005958  0A10               	xorlw	16	; case 48
 25323  00595A  B4D8               	btfsc	status,2,c
 25324  00595C  D7CD               	goto	l2655
 25325  00595E  0A60               	xorlw	96	; case 80
 25326  005960  A4D8               	btfss	status,2,c
 25327  005962  0012               	return	
 25328  005964  D7D7               	goto	l2656
 25329  005966                     l2654:
 25330                           
 25331                           ; BSR set to: 0
 25332                           
 25333                           ; BSR set to: 0
 25334  005966  0100               	movlb	0	; () banked
 25335  005968  5195               	movf	api_parse@receivedDataLength& (0+255),w,b
 25336  00596A  5C5F               	subwf	api_parse@idx,w,c
 25337  00596C  B0D8               	btfsc	status,0,c
 25338  00596E  0012               	return	
 25339  005970  D7A9               	goto	l2650
 25340  005972                     __end_of_api_parse:
 25341                           	opt stack 0
 25342                           tosu	equ	0xFFF
 25343                           tosh	equ	0xFFE
 25344                           tosl	equ	0xFFD
 25345                           pclath	equ	0xFFA
 25346                           tblptru	equ	0xFF8
 25347                           tblptrh	equ	0xFF7
 25348                           tblptrl	equ	0xFF6
 25349                           tablat	equ	0xFF5
 25350                           prodh	equ	0xFF4
 25351                           prodl	equ	0xFF3
 25352                           intcon	equ	0xFF2
 25353                           intcon2	equ	0xFF1
 25354                           intcon3	equ	0xFF0
 25355                           indf0	equ	0xFEF
 25356                           postinc0	equ	0xFEE
 25357                           fsr0h	equ	0xFEA
 25358                           fsr0l	equ	0xFE9
 25359                           wreg	equ	0xFE8
 25360                           indf1	equ	0xFE7
 25361                           postdec1	equ	0xFE5
 25362                           plusw1	equ	0xFE3
 25363                           fsr1h	equ	0xFE2
 25364                           fsr1l	equ	0xFE1
 25365                           indf2	equ	0xFDF
 25366                           postinc2	equ	0xFDE
 25367                           postdec2	equ	0xFDD
 25368                           plusw2	equ	0xFDB
 25369                           fsr2h	equ	0xFDA
 25370                           fsr2l	equ	0xFD9
 25371                           status	equ	0xFD8
 25372                           
 25373 ;; *************** function __parse_command_short *****************
 25374 ;; Defined at:
 25375 ;;		line 432 in file "api.c"
 25376 ;; Parameters:    Size  Location     Type
 25377 ;;  cmd             1    wreg     unsigned char 
 25378 ;; Auto vars:     Size  Location     Type
 25379 ;;  cmd             1   43[COMRAM] unsigned char 
 25380 ;; Return value:  Size  Location     Type
 25381 ;;                  1    wreg      void 
 25382 ;; Registers used:
 25383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25384 ;; Tracked objects:
 25385 ;;		On entry : 0/0
 25386 ;;		On exit  : 0/0
 25387 ;;		Unchanged: 0/0
 25388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25393 ;;Total ram usage:        1 bytes
 25394 ;; Hardware stack levels used:    1
 25395 ;; Hardware stack levels required when called:    8
 25396 ;; This function calls:
 25397 ;;		_i2c_eeprom_writeByte
 25398 ;;		_reboot
 25399 ;;		_system_delay_ms
 25400 ;; This function is called by:
 25401 ;;		_api_parse
 25402 ;; This function uses a non-reentrant model
 25403 ;;
 25404                           
 25405                           	psect	text122
 25406  00605A                     __ptext122:
 25407                           	opt stack 0
 25408  00605A                     __parse_command_short:
 25409                           	opt stack 21
 25410                           
 25411                           ;incstack = 0
 25412                           ;__parse_command_short@cmd stored from wreg
 25413  00605A  6E2C               	movwf	__parse_command_short@cmd,c
 25414                           
 25415                           ;api.c: 434: switch(cmd)
 25416  00605C  D041               	goto	l2698
 25417  00605E                     
 25418                           ;api.c: 437: i2c_eeprom_writeByte(0x100, 0x00);
 25419  00605E  0E01               	movlw	1
 25420  006060  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25421  006062  0E00               	movlw	0
 25422  006064  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25423  006066  0E00               	movlw	0
 25424  006068  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25425  00606A  EC5C  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25426                           
 25427                           ;api.c: 438: system_delay_ms(10);
 25428  00606E  0E0A               	movlw	10
 25429  006070  EC29  F043         	call	_system_delay_ms
 25430                           
 25431                           ;api.c: 439: reboot();
 25432  006074  ECE9  F043         	call	_reboot	;wreg free
 25433                           
 25434                           ;api.c: 440: break;
 25435  006078  0012               	return	
 25436  00607A                     
 25437                           ;api.c: 443: i2c_eeprom_writeByte(0x100, 0x94);
 25438  00607A  0E01               	movlw	1
 25439  00607C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25440  00607E  0E00               	movlw	0
 25441  006080  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25442  006082  0E94               	movlw	148
 25443  006084  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25444  006086  EC5C  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25445                           
 25446                           ;api.c: 444: system_delay_ms(10);
 25447  00608A  0E0A               	movlw	10
 25448  00608C  EC29  F043         	call	_system_delay_ms
 25449                           
 25450                           ;api.c: 445: reboot();
 25451  006090  ECE9  F043         	call	_reboot	;wreg free
 25452                           
 25453                           ;api.c: 446: break;
 25454  006094  0012               	return	
 25455  006096                     
 25456                           ;api.c: 449: i2c_eeprom_writeByte(0x100, 0x78);
 25457  006096  0E01               	movlw	1
 25458  006098  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25459  00609A  0E00               	movlw	0
 25460  00609C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25461  00609E  0E78               	movlw	120
 25462  0060A0  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25463  0060A2  EC5C  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25464                           
 25465                           ;api.c: 450: system_delay_ms(10);
 25466  0060A6  0E0A               	movlw	10
 25467  0060A8  EC29  F043         	call	_system_delay_ms
 25468                           
 25469                           ;api.c: 451: reboot();
 25470  0060AC  ECE9  F043         	call	_reboot	;wreg free
 25471                           
 25472                           ;api.c: 452: break;
 25473  0060B0  0012               	return	
 25474  0060B2                     
 25475                           ;api.c: 456: i2c_eeprom_writeByte(0x100, 0x78);
 25476  0060B2  0E01               	movlw	1
 25477  0060B4  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25478  0060B6  0E00               	movlw	0
 25479  0060B8  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25480  0060BA  0E78               	movlw	120
 25481  0060BC  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25482  0060BE  EC5C  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25483                           
 25484                           ;api.c: 457: system_delay_ms(10);
 25485  0060C2  0E0A               	movlw	10
 25486  0060C4  EC29  F043         	call	_system_delay_ms
 25487                           
 25488                           ;api.c: 458: reboot();
 25489  0060C8  ECE9  F043         	call	_reboot	;wreg free
 25490                           
 25491                           ;api.c: 459: break;
 25492  0060CC  0012               	return	
 25493  0060CE                     
 25494                           ;api.c: 462: --os.encoderCount;
 25495  0060CE  0100               	movlb	0	; () banked
 25496  0060D0  07B9               	decf	_os& (0+255),f,b	;volatile
 25497                           
 25498                           ;api.c: 463: break;
 25499  0060D2  0012               	return	
 25500  0060D4                     
 25501                           ;api.c: 466: ++os.encoderCount;
 25502                           
 25503                           ; BSR set to: 0
 25504  0060D4  0100               	movlb	0	; () banked
 25505  0060D6  2BB9               	incf	_os& (0+255),f,b	;volatile
 25506                           
 25507                           ;api.c: 467: break;
 25508  0060D8  0012               	return	
 25509  0060DA                     
 25510                           ;api.c: 470: ++os.buttonCount;
 25511                           
 25512                           ; BSR set to: 0
 25513  0060DA  0100               	movlb	0	; () banked
 25514  0060DC  2BBA               	incf	(_os+1)& (0+255),f,b	;volatile
 25515                           
 25516                           ; BSR set to: 0
 25517                           ;api.c: 472: }
 25518                           
 25519                           ;api.c: 471: break;
 25520  0060DE  0012               	return	
 25521  0060E0                     l2698:
 25522                           
 25523                           ; BSR set to: 0
 25524  0060E0  502C               	movf	__parse_command_short@cmd,w,c
 25525                           
 25526                           ; Switch size 1, requested type "space"
 25527                           ; Number of cases is 7, Range of values is 32 to 62
 25528                           ; switch strategies available:
 25529                           ; Name         Instructions Cycles
 25530                           ; simple_byte           22    12 (average)
 25531                           ;	Chosen strategy is simple_byte
 25532  0060E2  0A20               	xorlw	32	; case 32
 25533  0060E4  B4D8               	btfsc	status,2,c
 25534  0060E6  D7BB               	goto	l2699
 25535  0060E8  0A01               	xorlw	1	; case 33
 25536  0060EA  B4D8               	btfsc	status,2,c
 25537  0060EC  D7C6               	goto	l2701
 25538  0060EE  0A03               	xorlw	3	; case 34
 25539  0060F0  B4D8               	btfsc	status,2,c
 25540  0060F2  D7D1               	goto	l2702
 25541  0060F4  0A01               	xorlw	1	; case 35
 25542  0060F6  B4D8               	btfsc	status,2,c
 25543  0060F8  D7DC               	goto	l2703
 25544  0060FA  0A1F               	xorlw	31	; case 60
 25545  0060FC  B4D8               	btfsc	status,2,c
 25546  0060FE  D7E7               	goto	l2704
 25547  006100  0A01               	xorlw	1	; case 61
 25548  006102  B4D8               	btfsc	status,2,c
 25549  006104  D7E7               	goto	l2705
 25550  006106  0A03               	xorlw	3	; case 62
 25551  006108  A4D8               	btfss	status,2,c
 25552  00610A  0012               	return	
 25553  00610C  D7E6               	goto	l2706
 25554  00610E                     __end_of__parse_command_short:
 25555                           	opt stack 0
 25556                           tosu	equ	0xFFF
 25557                           tosh	equ	0xFFE
 25558                           tosl	equ	0xFFD
 25559                           pclath	equ	0xFFA
 25560                           tblptru	equ	0xFF8
 25561                           tblptrh	equ	0xFF7
 25562                           tblptrl	equ	0xFF6
 25563                           tablat	equ	0xFF5
 25564                           prodh	equ	0xFF4
 25565                           prodl	equ	0xFF3
 25566                           intcon	equ	0xFF2
 25567                           intcon2	equ	0xFF1
 25568                           intcon3	equ	0xFF0
 25569                           indf0	equ	0xFEF
 25570                           postinc0	equ	0xFEE
 25571                           fsr0h	equ	0xFEA
 25572                           fsr0l	equ	0xFE9
 25573                           wreg	equ	0xFE8
 25574                           indf1	equ	0xFE7
 25575                           postdec1	equ	0xFE5
 25576                           plusw1	equ	0xFE3
 25577                           fsr1h	equ	0xFE2
 25578                           fsr1l	equ	0xFE1
 25579                           indf2	equ	0xFDF
 25580                           postinc2	equ	0xFDE
 25581                           postdec2	equ	0xFDD
 25582                           plusw2	equ	0xFDB
 25583                           fsr2h	equ	0xFDA
 25584                           fsr2l	equ	0xFD9
 25585                           status	equ	0xFD8
 25586                           
 25587 ;; *************** function _system_delay_ms *****************
 25588 ;; Defined at:
 25589 ;;		line 63 in file "os.c"
 25590 ;; Parameters:    Size  Location     Type
 25591 ;;  ms              1    wreg     unsigned char 
 25592 ;; Auto vars:     Size  Location     Type
 25593 ;;  ms              1    1[COMRAM] unsigned char 
 25594 ;;  cntr            1    2[COMRAM] unsigned char 
 25595 ;; Return value:  Size  Location     Type
 25596 ;;                  1    wreg      void 
 25597 ;; Registers used:
 25598 ;;		wreg, status,2, status,0, cstack
 25599 ;; Tracked objects:
 25600 ;;		On entry : 0/0
 25601 ;;		On exit  : 0/0
 25602 ;;		Unchanged: 0/0
 25603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25607 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25608 ;;Total ram usage:        3 bytes
 25609 ;; Hardware stack levels used:    1
 25610 ;; This function calls:
 25611 ;;		Nothing
 25612 ;; This function is called by:
 25613 ;;		__ui_encoder
 25614 ;;		__parse_command_short
 25615 ;; This function uses a non-reentrant model
 25616 ;;
 25617                           
 25618                           	psect	text123
 25619  008652                     __ptext123:
 25620                           	opt stack 0
 25621  008652                     _system_delay_ms:
 25622                           	opt stack 28
 25623                           
 25624                           ;incstack = 0
 25625                           ;system_delay_ms@ms stored from wreg
 25626  008652  6E02               	movwf	system_delay_ms@ms,c
 25627                           
 25628                           ;os.c: 65: uint8_t cntr;;os.c: 66: for(cntr=0; cntr<ms; ++cntr)
 25629  008654  0E00               	movlw	0
 25630  008656  6E03               	movwf	system_delay_ms@cntr,c
 25631  008658  D009               	goto	l1090
 25632  00865A                     
 25633                           ;os.c: 67: {;os.c: 68: _delay((unsigned long)((6)*(8000000/4000.0)));
 25634  00865A  0E10               	movlw	16
 25635  00865C  6E01               	movwf	??_system_delay_ms& (0+255),c
 25636  00865E  0E94               	movlw	148
 25637  008660                     u12797:
 25638  008660  2EE8               	decfsz	wreg,f,c
 25639  008662  D7FE               	bra	u12797
 25640  008664  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 25641  008666  D7FC               	bra	u12797
 25642  008668  D000               	nop2	
 25643  00866A  2A03               	incf	system_delay_ms@cntr,f,c
 25644  00866C                     l1090:
 25645  00866C  5002               	movf	system_delay_ms@ms,w,c
 25646  00866E  5C03               	subwf	system_delay_ms@cntr,w,c
 25647  008670  B0D8               	btfsc	status,0,c
 25648  008672  0012               	return	
 25649  008674  D7F2               	goto	l1091
 25650  008676                     __end_of_system_delay_ms:
 25651                           	opt stack 0
 25652                           tosu	equ	0xFFF
 25653                           tosh	equ	0xFFE
 25654                           tosl	equ	0xFFD
 25655                           pclath	equ	0xFFA
 25656                           tblptru	equ	0xFF8
 25657                           tblptrh	equ	0xFF7
 25658                           tblptrl	equ	0xFF6
 25659                           tablat	equ	0xFF5
 25660                           prodh	equ	0xFF4
 25661                           prodl	equ	0xFF3
 25662                           intcon	equ	0xFF2
 25663                           intcon2	equ	0xFF1
 25664                           intcon3	equ	0xFF0
 25665                           indf0	equ	0xFEF
 25666                           postinc0	equ	0xFEE
 25667                           fsr0h	equ	0xFEA
 25668                           fsr0l	equ	0xFE9
 25669                           wreg	equ	0xFE8
 25670                           indf1	equ	0xFE7
 25671                           postdec1	equ	0xFE5
 25672                           plusw1	equ	0xFE3
 25673                           fsr1h	equ	0xFE2
 25674                           fsr1l	equ	0xFE1
 25675                           indf2	equ	0xFDF
 25676                           postinc2	equ	0xFDE
 25677                           postdec2	equ	0xFDD
 25678                           plusw2	equ	0xFDB
 25679                           fsr2h	equ	0xFDA
 25680                           fsr2l	equ	0xFD9
 25681                           status	equ	0xFD8
 25682                           
 25683 ;; *************** function _reboot *****************
 25684 ;; Defined at:
 25685 ;;		line 256 in file "os.c"
 25686 ;; Parameters:    Size  Location     Type
 25687 ;;		None
 25688 ;; Auto vars:     Size  Location     Type
 25689 ;;		None
 25690 ;; Return value:  Size  Location     Type
 25691 ;;                  1    wreg      void 
 25692 ;; Registers used:
 25693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25694 ;; Tracked objects:
 25695 ;;		On entry : 0/0
 25696 ;;		On exit  : 0/0
 25697 ;;		Unchanged: 0/0
 25698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25703 ;;Total ram usage:        0 bytes
 25704 ;; Hardware stack levels used:    1
 25705 ;; Hardware stack levels required when called:    7
 25706 ;; This function calls:
 25707 ;;		_display_prepare
 25708 ;;		_display_update
 25709 ;;		_ui_get_status
 25710 ;; This function is called by:
 25711 ;;		__ui_encoder
 25712 ;;		__parse_command_short
 25713 ;; This function uses a non-reentrant model
 25714 ;;
 25715                           
 25716                           	psect	text124
 25717  0087D2                     __ptext124:
 25718                           	opt stack 0
 25719  0087D2                     _reboot:
 25720                           	opt stack 21
 25721                           
 25722                           ;os.c: 259: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 25723                           
 25724                           ;incstack = 0
 25725  0087D2  0E80               	movlw	128
 25726  0087D4  0100               	movlb	0	; () banked
 25727  0087D6  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 25728                           
 25729                           ; BSR set to: 0
 25730                           ;os.c: 260: display_prepare(os.display_mode);
 25731  0087D8  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
 25732  0087DA  ECB9  F02C         	call	_display_prepare
 25733                           
 25734                           ;os.c: 261: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 25735  0087DE  ECD8  F044         	call	_ui_get_status	;wreg free
 25736  0087E2  0A05               	xorlw	5
 25737  0087E4  B4D8               	btfsc	status,2,c
 25738                           
 25739                           ;os.c: 262: {;os.c: 263: display_update();
 25740  0087E6  ECEB  F039         	call	_display_update	;wreg free
 25741  0087EA                     
 25742                           ;os.c: 264: };os.c: 267: while(1);
 25743  0087EA  D7FF               	goto	l1117
 25744  0087EC                     __end_of_reboot:
 25745                           	opt stack 0
 25746                           tosu	equ	0xFFF
 25747                           tosh	equ	0xFFE
 25748                           tosl	equ	0xFFD
 25749                           pclath	equ	0xFFA
 25750                           tblptru	equ	0xFF8
 25751                           tblptrh	equ	0xFF7
 25752                           tblptrl	equ	0xFF6
 25753                           tablat	equ	0xFF5
 25754                           prodh	equ	0xFF4
 25755                           prodl	equ	0xFF3
 25756                           intcon	equ	0xFF2
 25757                           intcon2	equ	0xFF1
 25758                           intcon3	equ	0xFF0
 25759                           indf0	equ	0xFEF
 25760                           postinc0	equ	0xFEE
 25761                           fsr0h	equ	0xFEA
 25762                           fsr0l	equ	0xFE9
 25763                           wreg	equ	0xFE8
 25764                           indf1	equ	0xFE7
 25765                           postdec1	equ	0xFE5
 25766                           plusw1	equ	0xFE3
 25767                           fsr1h	equ	0xFE2
 25768                           fsr1l	equ	0xFE1
 25769                           indf2	equ	0xFDF
 25770                           postinc2	equ	0xFDE
 25771                           postdec2	equ	0xFDD
 25772                           plusw2	equ	0xFDB
 25773                           fsr2h	equ	0xFDA
 25774                           fsr2l	equ	0xFD9
 25775                           status	equ	0xFD8
 25776                           
 25777 ;; *************** function _ui_get_status *****************
 25778 ;; Defined at:
 25779 ;;		line 95 in file "ui.c"
 25780 ;; Parameters:    Size  Location     Type
 25781 ;;		None
 25782 ;; Auto vars:     Size  Location     Type
 25783 ;;		None
 25784 ;; Return value:  Size  Location     Type
 25785 ;;                  1    wreg      enum E7928
 25786 ;; Registers used:
 25787 ;;		wreg, status,2
 25788 ;; Tracked objects:
 25789 ;;		On entry : 0/0
 25790 ;;		On exit  : 0/0
 25791 ;;		Unchanged: 0/0
 25792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25797 ;;Total ram usage:        0 bytes
 25798 ;; Hardware stack levels used:    1
 25799 ;; This function calls:
 25800 ;;		Nothing
 25801 ;; This function is called by:
 25802 ;;		_main
 25803 ;;		_reboot
 25804 ;;		__fill_buffer_get_status
 25805 ;; This function uses a non-reentrant model
 25806 ;;
 25807                           
 25808                           	psect	text125
 25809  0089B0                     __ptext125:
 25810                           	opt stack 0
 25811  0089B0                     _ui_get_status:
 25812                           	opt stack 27
 25813                           
 25814                           ;ui.c: 97: return userInterfaceStatus;
 25815                           
 25816                           ;incstack = 0
 25817  0089B0  0100               	movlb	0	; () banked
 25818  0089B2  51E0               	movf	_userInterfaceStatus& (0+255),w,b
 25819  0089B4  0012               	return	
 25820  0089B6                     __end_of_ui_get_status:
 25821                           	opt stack 0
 25822                           tosu	equ	0xFFF
 25823                           tosh	equ	0xFFE
 25824                           tosl	equ	0xFFD
 25825                           pclath	equ	0xFFA
 25826                           tblptru	equ	0xFF8
 25827                           tblptrh	equ	0xFF7
 25828                           tblptrl	equ	0xFF6
 25829                           tablat	equ	0xFF5
 25830                           prodh	equ	0xFF4
 25831                           prodl	equ	0xFF3
 25832                           intcon	equ	0xFF2
 25833                           intcon2	equ	0xFF1
 25834                           intcon3	equ	0xFF0
 25835                           indf0	equ	0xFEF
 25836                           postinc0	equ	0xFEE
 25837                           fsr0h	equ	0xFEA
 25838                           fsr0l	equ	0xFE9
 25839                           wreg	equ	0xFE8
 25840                           indf1	equ	0xFE7
 25841                           postdec1	equ	0xFE5
 25842                           plusw1	equ	0xFE3
 25843                           fsr1h	equ	0xFE2
 25844                           fsr1l	equ	0xFE1
 25845                           indf2	equ	0xFDF
 25846                           postinc2	equ	0xFDE
 25847                           postdec2	equ	0xFDD
 25848                           plusw2	equ	0xFDB
 25849                           fsr2h	equ	0xFDA
 25850                           fsr2l	equ	0xFD9
 25851                           status	equ	0xFD8
 25852                           
 25853 ;; *************** function _display_update *****************
 25854 ;; Defined at:
 25855 ;;		line 555 in file "display.c"
 25856 ;; Parameters:    Size  Location     Type
 25857 ;;		None
 25858 ;; Auto vars:     Size  Location     Type
 25859 ;;		None
 25860 ;; Return value:  Size  Location     Type
 25861 ;;                  1    wreg      void 
 25862 ;; Registers used:
 25863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25864 ;; Tracked objects:
 25865 ;;		On entry : 0/0
 25866 ;;		On exit  : 0/0
 25867 ;;		Unchanged: 0/0
 25868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25873 ;;Total ram usage:        0 bytes
 25874 ;; Hardware stack levels used:    1
 25875 ;; Hardware stack levels required when called:    4
 25876 ;; This function calls:
 25877 ;;		_i2c_display_cursor
 25878 ;;		_i2c_display_write_fixed
 25879 ;; This function is called by:
 25880 ;;		_main
 25881 ;;		_reboot
 25882 ;; This function uses a non-reentrant model
 25883 ;;
 25884                           
 25885                           	psect	text126
 25886  0073D6                     __ptext126:
 25887                           	opt stack 0
 25888  0073D6                     _display_update:
 25889                           	opt stack 23
 25890                           
 25891                           ;display.c: 557: i2c_display_cursor(0, 0);
 25892                           
 25893                           ; BSR set to: 0
 25894                           ;incstack = 0
 25895  0073D6  0E00               	movlw	0
 25896  0073D8  6E0E               	movwf	i2c_display_cursor@position,c
 25897  0073DA  0E00               	movlw	0
 25898  0073DC  EC3B  F043         	call	_i2c_display_cursor
 25899                           
 25900                           ;display.c: 558: i2c_display_write_fixed(&display_content[0][0], 20);
 25901  0073E0  0E00               	movlw	low _display_content
 25902  0073E2  6E06               	movwf	i2c_display_write_fixed@data,c
 25903  0073E4  0E02               	movlw	high _display_content
 25904  0073E6  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25905  0073E8  0E14               	movlw	20
 25906  0073EA  6E08               	movwf	i2c_display_write_fixed@length,c
 25907  0073EC  ECA6  F03D         	call	_i2c_display_write_fixed	;wreg free
 25908                           
 25909                           ;display.c: 559: i2c_display_cursor(1, 0);
 25910  0073F0  0E00               	movlw	0
 25911  0073F2  6E0E               	movwf	i2c_display_cursor@position,c
 25912  0073F4  0E01               	movlw	1
 25913  0073F6  EC3B  F043         	call	_i2c_display_cursor
 25914                           
 25915                           ;display.c: 560: i2c_display_write_fixed(&display_content[1][0], 20);
 25916  0073FA  0E14               	movlw	low (_display_content+20)
 25917  0073FC  6E06               	movwf	i2c_display_write_fixed@data,c
 25918  0073FE  0E02               	movlw	high (_display_content+20)
 25919  007400  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25920  007402  0E14               	movlw	20
 25921  007404  6E08               	movwf	i2c_display_write_fixed@length,c
 25922  007406  ECA6  F03D         	call	_i2c_display_write_fixed	;wreg free
 25923                           
 25924                           ;display.c: 561: i2c_display_cursor(2, 0);
 25925  00740A  0E00               	movlw	0
 25926  00740C  6E0E               	movwf	i2c_display_cursor@position,c
 25927  00740E  0E02               	movlw	2
 25928  007410  EC3B  F043         	call	_i2c_display_cursor
 25929                           
 25930                           ;display.c: 562: i2c_display_write_fixed(&display_content[2][0], 20);
 25931  007414  0E28               	movlw	low (_display_content+40)
 25932  007416  6E06               	movwf	i2c_display_write_fixed@data,c
 25933  007418  0E02               	movlw	high (_display_content+40)
 25934  00741A  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25935  00741C  0E14               	movlw	20
 25936  00741E  6E08               	movwf	i2c_display_write_fixed@length,c
 25937  007420  ECA6  F03D         	call	_i2c_display_write_fixed	;wreg free
 25938                           
 25939                           ;display.c: 563: i2c_display_cursor(3, 0);
 25940  007424  0E00               	movlw	0
 25941  007426  6E0E               	movwf	i2c_display_cursor@position,c
 25942  007428  0E03               	movlw	3
 25943  00742A  EC3B  F043         	call	_i2c_display_cursor
 25944                           
 25945                           ;display.c: 564: i2c_display_write_fixed(&display_content[3][0], 20);
 25946  00742E  0E3C               	movlw	low (_display_content+60)
 25947  007430  6E06               	movwf	i2c_display_write_fixed@data,c
 25948  007432  0E02               	movlw	high (_display_content+60)
 25949  007434  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25950  007436  0E14               	movlw	20
 25951  007438  6E08               	movwf	i2c_display_write_fixed@length,c
 25952  00743A  ECA6  F03D         	call	_i2c_display_write_fixed	;wreg free
 25953  00743E  0012               	return		;funcret
 25954  007440                     __end_of_display_update:
 25955                           	opt stack 0
 25956                           tosu	equ	0xFFF
 25957                           tosh	equ	0xFFE
 25958                           tosl	equ	0xFFD
 25959                           pclath	equ	0xFFA
 25960                           tblptru	equ	0xFF8
 25961                           tblptrh	equ	0xFF7
 25962                           tblptrl	equ	0xFF6
 25963                           tablat	equ	0xFF5
 25964                           prodh	equ	0xFF4
 25965                           prodl	equ	0xFF3
 25966                           intcon	equ	0xFF2
 25967                           intcon2	equ	0xFF1
 25968                           intcon3	equ	0xFF0
 25969                           indf0	equ	0xFEF
 25970                           postinc0	equ	0xFEE
 25971                           fsr0h	equ	0xFEA
 25972                           fsr0l	equ	0xFE9
 25973                           wreg	equ	0xFE8
 25974                           indf1	equ	0xFE7
 25975                           postdec1	equ	0xFE5
 25976                           plusw1	equ	0xFE3
 25977                           fsr1h	equ	0xFE2
 25978                           fsr1l	equ	0xFE1
 25979                           indf2	equ	0xFDF
 25980                           postinc2	equ	0xFDE
 25981                           postdec2	equ	0xFDD
 25982                           plusw2	equ	0xFDB
 25983                           fsr2h	equ	0xFDA
 25984                           fsr2l	equ	0xFD9
 25985                           status	equ	0xFD8
 25986                           
 25987 ;; *************** function _i2c_display_write_fixed *****************
 25988 ;; Defined at:
 25989 ;;		line 270 in file "i2c.c"
 25990 ;; Parameters:    Size  Location     Type
 25991 ;;  data            2    5[COMRAM] PTR unsigned char 
 25992 ;;		 -> display_content(80), 
 25993 ;;  length          1    7[COMRAM] unsigned char 
 25994 ;; Auto vars:     Size  Location     Type
 25995 ;;  pos             1    8[COMRAM] unsigned char 
 25996 ;; Return value:  Size  Location     Type
 25997 ;;                  1    wreg      void 
 25998 ;; Registers used:
 25999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26000 ;; Tracked objects:
 26001 ;;		On entry : 0/0
 26002 ;;		On exit  : 0/0
 26003 ;;		Unchanged: 0/0
 26004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26005 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26008 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26009 ;;Total ram usage:        4 bytes
 26010 ;; Hardware stack levels used:    1
 26011 ;; Hardware stack levels required when called:    1
 26012 ;; This function calls:
 26013 ;;		__i2c_send
 26014 ;;		__i2c_start
 26015 ;;		__i2c_stop
 26016 ;;		__i2c_wait_idle
 26017 ;;		_i2c_set_frequency
 26018 ;; This function is called by:
 26019 ;;		_display_update
 26020 ;; This function uses a non-reentrant model
 26021 ;;
 26022                           
 26023                           	psect	text127
 26024  007B4C                     __ptext127:
 26025                           	opt stack 0
 26026  007B4C                     _i2c_display_write_fixed:
 26027                           	opt stack 25
 26028                           
 26029                           ;i2c.c: 272: uint8_t pos;;i2c.c: 275: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26030                           
 26031                           ;incstack = 0
 26032  007B4C  0E02               	movlw	2
 26033  007B4E  EC9D  F042         	call	_i2c_set_frequency
 26034                           
 26035                           ;i2c.c: 277: _i2c_wait_idle();
 26036  007B52  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 26037                           
 26038                           ;i2c.c: 278: _i2c_start();
 26039  007B56  ECC4  F044         	call	__i2c_start	;wreg free
 26040                           
 26041                           ;i2c.c: 279: _i2c_wait_idle();
 26042  007B5A  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 26043                           
 26044                           ;i2c.c: 280: _i2c_send(0b01111000);
 26045  007B5E  0E78               	movlw	120
 26046  007B60  ECC8  F044         	call	__i2c_send
 26047                           
 26048                           ;i2c.c: 281: _i2c_wait_idle();
 26049  007B64  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 26050                           
 26051                           ;i2c.c: 282: _i2c_send(0b01000000);
 26052  007B68  0E40               	movlw	64
 26053  007B6A  ECC8  F044         	call	__i2c_send
 26054                           
 26055                           ;i2c.c: 283: _i2c_wait_idle();
 26056  007B6E  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 26057                           
 26058                           ;i2c.c: 286: for(pos=0; pos<length; ++pos)
 26059  007B72  0E00               	movlw	0
 26060  007B74  6E09               	movwf	i2c_display_write_fixed@pos,c
 26061  007B76  D00E               	goto	l1232
 26062  007B78                     
 26063                           ;i2c.c: 287: {;i2c.c: 288: _i2c_send(data[pos]);
 26064  007B78  5009               	movf	i2c_display_write_fixed@pos,w,c
 26065  007B7A  0D01               	mullw	1
 26066  007B7C  50F3               	movf	prodl,w,c
 26067  007B7E  2406               	addwf	i2c_display_write_fixed@data,w,c
 26068  007B80  6ED9               	movwf	fsr2l,c
 26069  007B82  50F4               	movf	prodh,w,c
 26070  007B84  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 26071  007B86  6EDA               	movwf	fsr2h,c
 26072  007B88  50DF               	movf	indf2,w,c
 26073  007B8A  ECC8  F044         	call	__i2c_send
 26074                           
 26075                           ;i2c.c: 289: _i2c_wait_idle();
 26076  007B8E  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 26077  007B92  2A09               	incf	i2c_display_write_fixed@pos,f,c
 26078  007B94                     l1232:
 26079  007B94  5008               	movf	i2c_display_write_fixed@length,w,c
 26080  007B96  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 26081  007B98  A0D8               	btfss	status,0,c
 26082  007B9A  D7EE               	goto	l1233
 26083                           
 26084                           ;i2c.c: 290: };i2c.c: 292: _i2c_stop();
 26085  007B9C  ECC0  F044         	call	__i2c_stop	;wreg free
 26086  007BA0  0012               	return		;funcret
 26087  007BA2                     __end_of_i2c_display_write_fixed:
 26088                           	opt stack 0
 26089                           tosu	equ	0xFFF
 26090                           tosh	equ	0xFFE
 26091                           tosl	equ	0xFFD
 26092                           pclath	equ	0xFFA
 26093                           tblptru	equ	0xFF8
 26094                           tblptrh	equ	0xFF7
 26095                           tblptrl	equ	0xFF6
 26096                           tablat	equ	0xFF5
 26097                           prodh	equ	0xFF4
 26098                           prodl	equ	0xFF3
 26099                           intcon	equ	0xFF2
 26100                           intcon2	equ	0xFF1
 26101                           intcon3	equ	0xFF0
 26102                           indf0	equ	0xFEF
 26103                           postinc0	equ	0xFEE
 26104                           fsr0h	equ	0xFEA
 26105                           fsr0l	equ	0xFE9
 26106                           wreg	equ	0xFE8
 26107                           indf1	equ	0xFE7
 26108                           postdec1	equ	0xFE5
 26109                           plusw1	equ	0xFE3
 26110                           fsr1h	equ	0xFE2
 26111                           fsr1l	equ	0xFE1
 26112                           indf2	equ	0xFDF
 26113                           postinc2	equ	0xFDE
 26114                           postdec2	equ	0xFDD
 26115                           plusw2	equ	0xFDB
 26116                           fsr2h	equ	0xFDA
 26117                           fsr2l	equ	0xFD9
 26118                           status	equ	0xFD8
 26119                           
 26120 ;; *************** function _i2c_display_cursor *****************
 26121 ;; Defined at:
 26122 ;;		line 230 in file "i2c.c"
 26123 ;; Parameters:    Size  Location     Type
 26124 ;;  line            1    wreg     unsigned char 
 26125 ;;  position        1   13[COMRAM] unsigned char 
 26126 ;; Auto vars:     Size  Location     Type
 26127 ;;  line            1   14[COMRAM] unsigned char 
 26128 ;;  address         1   15[COMRAM] unsigned char 
 26129 ;; Return value:  Size  Location     Type
 26130 ;;                  1    wreg      void 
 26131 ;; Registers used:
 26132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26133 ;; Tracked objects:
 26134 ;;		On entry : 0/0
 26135 ;;		On exit  : 0/0
 26136 ;;		Unchanged: 0/0
 26137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26138 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26139 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26141 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26142 ;;Total ram usage:        3 bytes
 26143 ;; Hardware stack levels used:    1
 26144 ;; Hardware stack levels required when called:    3
 26145 ;; This function calls:
 26146 ;;		__ic2_display_set_address
 26147 ;;		_i2c_set_frequency
 26148 ;; This function is called by:
 26149 ;;		_display_update
 26150 ;; This function uses a non-reentrant model
 26151 ;;
 26152                           
 26153                           	psect	text128
 26154  008676                     __ptext128:
 26155                           	opt stack 0
 26156  008676                     _i2c_display_cursor:
 26157                           	opt stack 23
 26158                           
 26159                           ;incstack = 0
 26160                           ;i2c_display_cursor@line stored from wreg
 26161  008676  6E0F               	movwf	i2c_display_cursor@line,c
 26162                           
 26163                           ;i2c.c: 232: uint8_t address;;i2c.c: 235: line &= 0b11;
 26164  008678  0E03               	movlw	3
 26165  00867A  160F               	andwf	i2c_display_cursor@line,f,c
 26166                           
 26167                           ;i2c.c: 236: address = line<<5;
 26168  00867C  380F               	swapf	i2c_display_cursor@line,w,c
 26169  00867E  46E8               	rlncf	wreg,f,c
 26170  008680  0BE0               	andlw	224
 26171  008682  6E10               	movwf	i2c_display_cursor@address,c
 26172                           
 26173                           ;i2c.c: 237: position &= 0b11111;
 26174  008684  0E1F               	movlw	31
 26175  008686  160E               	andwf	i2c_display_cursor@position,f,c
 26176                           
 26177                           ;i2c.c: 238: address |= position;
 26178  008688  500E               	movf	i2c_display_cursor@position,w,c
 26179  00868A  1210               	iorwf	i2c_display_cursor@address,f,c
 26180                           
 26181                           ;i2c.c: 241: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26182  00868C  0E02               	movlw	2
 26183  00868E  EC9D  F042         	call	_i2c_set_frequency
 26184                           
 26185                           ;i2c.c: 244: _ic2_display_set_address(address);
 26186  008692  5010               	movf	i2c_display_cursor@address,w,c
 26187  008694  EC03  F043         	call	__ic2_display_set_address
 26188  008698  0012               	return		;funcret
 26189  00869A                     __end_of_i2c_display_cursor:
 26190                           	opt stack 0
 26191                           tosu	equ	0xFFF
 26192                           tosh	equ	0xFFE
 26193                           tosl	equ	0xFFD
 26194                           pclath	equ	0xFFA
 26195                           tblptru	equ	0xFF8
 26196                           tblptrh	equ	0xFF7
 26197                           tblptrl	equ	0xFF6
 26198                           tablat	equ	0xFF5
 26199                           prodh	equ	0xFF4
 26200                           prodl	equ	0xFF3
 26201                           intcon	equ	0xFF2
 26202                           intcon2	equ	0xFF1
 26203                           intcon3	equ	0xFF0
 26204                           indf0	equ	0xFEF
 26205                           postinc0	equ	0xFEE
 26206                           fsr0h	equ	0xFEA
 26207                           fsr0l	equ	0xFE9
 26208                           wreg	equ	0xFE8
 26209                           indf1	equ	0xFE7
 26210                           postdec1	equ	0xFE5
 26211                           plusw1	equ	0xFE3
 26212                           fsr1h	equ	0xFE2
 26213                           fsr1l	equ	0xFE1
 26214                           indf2	equ	0xFDF
 26215                           postinc2	equ	0xFDE
 26216                           postdec2	equ	0xFDD
 26217                           plusw2	equ	0xFDB
 26218                           fsr2h	equ	0xFDA
 26219                           fsr2l	equ	0xFD9
 26220                           status	equ	0xFD8
 26221                           
 26222 ;; *************** function __ic2_display_set_address *****************
 26223 ;; Defined at:
 26224 ;;		line 194 in file "i2c.c"
 26225 ;; Parameters:    Size  Location     Type
 26226 ;;  address         1    wreg     unsigned char 
 26227 ;; Auto vars:     Size  Location     Type
 26228 ;;  address         1   10[COMRAM] unsigned char 
 26229 ;;  data_array      2   11[COMRAM] unsigned char [2]
 26230 ;; Return value:  Size  Location     Type
 26231 ;;                  1    wreg      void 
 26232 ;; Registers used:
 26233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26234 ;; Tracked objects:
 26235 ;;		On entry : 0/0
 26236 ;;		On exit  : 0/0
 26237 ;;		Unchanged: 0/0
 26238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26240 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26242 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26243 ;;Total ram usage:        3 bytes
 26244 ;; Hardware stack levels used:    1
 26245 ;; Hardware stack levels required when called:    2
 26246 ;; This function calls:
 26247 ;;		__i2c_write
 26248 ;;		_i2c_set_frequency
 26249 ;; This function is called by:
 26250 ;;		_i2c_display_cursor
 26251 ;; This function uses a non-reentrant model
 26252 ;;
 26253                           
 26254                           	psect	text129
 26255  008606                     __ptext129:
 26256                           	opt stack 0
 26257  008606                     __ic2_display_set_address:
 26258                           	opt stack 23
 26259                           
 26260                           ;incstack = 0
 26261                           ;__ic2_display_set_address@address stored from wreg
 26262  008606  6E0B               	movwf	__ic2_display_set_address@address,c
 26263                           
 26264                           ;i2c.c: 196: uint8_t data_array[2];;i2c.c: 197: data_array[0] = 0b00000000;
 26265  008608  0E00               	movlw	0
 26266  00860A  6E0C               	movwf	__ic2_display_set_address@data_array,c
 26267                           
 26268                           ;i2c.c: 198: data_array[1] = 0b10000000 | address;
 26269  00860C  500B               	movf	__ic2_display_set_address@address,w,c
 26270  00860E  0980               	iorlw	128
 26271  008610  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 26272                           
 26273                           ;i2c.c: 201: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26274  008612  0E02               	movlw	2
 26275  008614  EC9D  F042         	call	_i2c_set_frequency
 26276                           
 26277                           ;i2c.c: 204: _i2c_write(0b01111000, &data_array[0], 2);
 26278  008618  0E0C               	movlw	low __ic2_display_set_address@data_array
 26279  00861A  6E06               	movwf	__i2c_write@data,c
 26280  00861C  0E00               	movlw	high __ic2_display_set_address@data_array
 26281  00861E  6E07               	movwf	__i2c_write@data+1,c
 26282  008620  0E02               	movlw	2
 26283  008622  6E08               	movwf	__i2c_write@length,c
 26284  008624  0E78               	movlw	120
 26285  008626  EC6D  F03F         	call	__i2c_write
 26286  00862A  0012               	return		;funcret
 26287  00862C                     __end_of__ic2_display_set_address:
 26288                           	opt stack 0
 26289                           tosu	equ	0xFFF
 26290                           tosh	equ	0xFFE
 26291                           tosl	equ	0xFFD
 26292                           pclath	equ	0xFFA
 26293                           tblptru	equ	0xFF8
 26294                           tblptrh	equ	0xFF7
 26295                           tblptrl	equ	0xFF6
 26296                           tablat	equ	0xFF5
 26297                           prodh	equ	0xFF4
 26298                           prodl	equ	0xFF3
 26299                           intcon	equ	0xFF2
 26300                           intcon2	equ	0xFF1
 26301                           intcon3	equ	0xFF0
 26302                           indf0	equ	0xFEF
 26303                           postinc0	equ	0xFEE
 26304                           fsr0h	equ	0xFEA
 26305                           fsr0l	equ	0xFE9
 26306                           wreg	equ	0xFE8
 26307                           indf1	equ	0xFE7
 26308                           postdec1	equ	0xFE5
 26309                           plusw1	equ	0xFE3
 26310                           fsr1h	equ	0xFE2
 26311                           fsr1l	equ	0xFE1
 26312                           indf2	equ	0xFDF
 26313                           postinc2	equ	0xFDE
 26314                           postdec2	equ	0xFDD
 26315                           plusw2	equ	0xFDB
 26316                           fsr2h	equ	0xFDA
 26317                           fsr2l	equ	0xFD9
 26318                           status	equ	0xFD8
 26319                           
 26320 ;; *************** function _display_prepare *****************
 26321 ;; Defined at:
 26322 ;;		line 286 in file "display.c"
 26323 ;; Parameters:    Size  Location     Type
 26324 ;;  mode            1    wreg     unsigned char 
 26325 ;; Auto vars:     Size  Location     Type
 26326 ;;  mode            1   42[COMRAM] unsigned char 
 26327 ;; Return value:  Size  Location     Type
 26328 ;;                  1    wreg      void 
 26329 ;; Registers used:
 26330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26331 ;; Tracked objects:
 26332 ;;		On entry : 0/0
 26333 ;;		On exit  : 0/0
 26334 ;;		Unchanged: 0/0
 26335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26339 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26340 ;;Total ram usage:        3 bytes
 26341 ;; Hardware stack levels used:    1
 26342 ;; Hardware stack levels required when called:    6
 26343 ;; This function calls:
 26344 ;;		__display_checked
 26345 ;;		__display_clear
 26346 ;;		__display_done
 26347 ;;		__display_failed
 26348 ;;		__display_found
 26349 ;;		__display_programming
 26350 ;;		__display_rebooting
 26351 ;;		__display_search
 26352 ;;		__display_start
 26353 ;;		__display_verify
 26354 ;; This function is called by:
 26355 ;;		_main
 26356 ;;		_reboot
 26357 ;; This function uses a non-reentrant model
 26358 ;;
 26359                           
 26360                           	psect	text130
 26361  005972                     __ptext130:
 26362                           	opt stack 0
 26363  005972                     _display_prepare:
 26364                           	opt stack 21
 26365                           
 26366                           ;incstack = 0
 26367                           ;display_prepare@mode stored from wreg
 26368  005972  6E2B               	movwf	display_prepare@mode,c
 26369                           
 26370                           ;display.c: 288: _display_clear();
 26371  005974  EC49  F03F         	call	__display_clear	;wreg free
 26372                           
 26373                           ;display.c: 290: switch(mode&0xF0)
 26374  005978  D01B               	goto	l1542
 26375  00597A                     
 26376                           ;display.c: 293: _display_start();
 26377  00597A  EC45  F016         	call	__display_start	;wreg free
 26378                           
 26379                           ;display.c: 294: break;
 26380  00597E  D047               	goto	l1553
 26381  005980                     
 26382                           ;display.c: 297: _display_search();
 26383  005980  EC95  F01F         	call	__display_search	;wreg free
 26384                           
 26385                           ;display.c: 298: break;
 26386  005984  D044               	goto	l1553
 26387  005986                     
 26388                           ;display.c: 301: _display_found();
 26389  005986  EC34  F018         	call	__display_found	;wreg free
 26390                           
 26391                           ;display.c: 302: break;
 26392  00598A  D041               	goto	l1553
 26393  00598C                     
 26394                           ;display.c: 305: _display_verify();
 26395  00598C  EC27  F022         	call	__display_verify	;wreg free
 26396                           
 26397                           ;display.c: 306: break;
 26398  005990  D03E               	goto	l1553
 26399  005992                     
 26400                           ;display.c: 309: _display_checked();
 26401  005992  EC64  F01D         	call	__display_checked	;wreg free
 26402                           
 26403                           ;display.c: 310: break;
 26404  005996  D03B               	goto	l1553
 26405  005998                     
 26406                           ;display.c: 313: _display_failed();
 26407  005998  EC4D  F009         	call	__display_failed	;wreg free
 26408                           
 26409                           ;display.c: 314: break;
 26410  00599C  D038               	goto	l1553
 26411  00599E                     
 26412                           ;display.c: 317: _display_programming();
 26413  00599E  EC10  F01A         	call	__display_programming	;wreg free
 26414                           
 26415                           ;display.c: 318: break;
 26416  0059A2  D035               	goto	l1553
 26417  0059A4                     
 26418                           ;display.c: 321: _display_done();
 26419  0059A4  EC22  F01E         	call	__display_done	;wreg free
 26420                           
 26421                           ;display.c: 322: break;
 26422  0059A8  D032               	goto	l1553
 26423  0059AA                     
 26424                           ;display.c: 325: _display_rebooting();
 26425  0059AA  ECD1  F03D         	call	__display_rebooting	;wreg free
 26426                           
 26427                           ;display.c: 327: }
 26428                           
 26429                           ;display.c: 326: break;
 26430  0059AE  D02F               	goto	l1553
 26431  0059B0                     l1542:
 26432  0059B0  502B               	movf	display_prepare@mode,w,c
 26433  0059B2  0BF0               	andlw	240
 26434  0059B4  6E29               	movwf	??_display_prepare& (0+255),c
 26435  0059B6  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 26436                           
 26437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26438                           ; Switch size 1, requested type "space"
 26439                           ; Number of cases is 1, Range of values is 0 to 0
 26440                           ; switch strategies available:
 26441                           ; Name         Instructions Cycles
 26442                           ; simple_byte            4     3 (average)
 26443                           ;	Chosen strategy is simple_byte
 26444  0059B8  502A               	movf	??_display_prepare+1,w,c
 26445  0059BA  0A00               	xorlw	0	; case 0
 26446  0059BC  A4D8               	btfss	status,2,c
 26447  0059BE  D027               	goto	l1553
 26448                           
 26449                           ; Switch size 1, requested type "space"
 26450                           ; Number of cases is 9, Range of values is 0 to 128
 26451                           ; switch strategies available:
 26452                           ; Name         Instructions Cycles
 26453                           ; simple_byte           28    15 (average)
 26454                           ;	Chosen strategy is simple_byte
 26455  0059C0  5029               	movf	??_display_prepare,w,c
 26456  0059C2  0A00               	xorlw	0	; case 0
 26457  0059C4  B4D8               	btfsc	status,2,c
 26458  0059C6  D7D9               	goto	l1543
 26459  0059C8  0A10               	xorlw	16	; case 16
 26460  0059CA  B4D8               	btfsc	status,2,c
 26461  0059CC  D7D9               	goto	l1545
 26462  0059CE  0A30               	xorlw	48	; case 32
 26463  0059D0  B4D8               	btfsc	status,2,c
 26464  0059D2  D7D9               	goto	l1546
 26465  0059D4  0A10               	xorlw	16	; case 48
 26466  0059D6  B4D8               	btfsc	status,2,c
 26467  0059D8  D7D9               	goto	l1547
 26468  0059DA  0A70               	xorlw	112	; case 64
 26469  0059DC  B4D8               	btfsc	status,2,c
 26470  0059DE  D7D9               	goto	l1548
 26471  0059E0  0A10               	xorlw	16	; case 80
 26472  0059E2  B4D8               	btfsc	status,2,c
 26473  0059E4  D7D9               	goto	l1549
 26474  0059E6  0A30               	xorlw	48	; case 96
 26475  0059E8  B4D8               	btfsc	status,2,c
 26476  0059EA  D7D9               	goto	l1550
 26477  0059EC  0A10               	xorlw	16	; case 112
 26478  0059EE  B4D8               	btfsc	status,2,c
 26479  0059F0  D7D9               	goto	l1551
 26480  0059F2  0AF0               	xorlw	240	; case 128
 26481  0059F4  B4D8               	btfsc	status,2,c
 26482  0059F6  D7D9               	goto	l1552
 26483                           
 26484                           ;display.c: 330: switch((os.timeSlot>>5)&0b11)
 26485  0059F8  D00A               	goto	l1553
 26486  0059FA                     
 26487                           ;display.c: 333: display_content[0][17] = '.';
 26488  0059FA  0E2E               	movlw	46
 26489  0059FC  0102               	movlb	2	; () banked
 26490  0059FE  6F11               	movwf	(_display_content+17)& (0+255),b
 26491  005A00                     l1555:
 26492                           
 26493                           ;display.c: 336: display_content[0][16] = '.';
 26494  005A00  0E2E               	movlw	46
 26495  005A02  0102               	movlb	2	; () banked
 26496  005A04  6F10               	movwf	(_display_content+16)& (0+255),b
 26497  005A06                     l1556:
 26498                           
 26499                           ;display.c: 339: display_content[0][15] = '.';
 26500  005A06  0E2E               	movlw	46
 26501  005A08  0102               	movlb	2	; () banked
 26502  005A0A  6F0F               	movwf	(_display_content+15)& (0+255),b
 26503                           
 26504                           ;display.c: 341: }
 26505  005A0C  D015               	goto	l1557
 26506  005A0E                     l1553:
 26507                           
 26508                           ; BSR set to: 2
 26509  005A0E  0100               	movlb	0	; () banked
 26510  005A10  39BB               	swapf	(_os+2)& (0+255),w,b	;volatile
 26511  005A12  42E8               	rrncf	wreg,f,c
 26512  005A14  0B07               	andlw	7
 26513  005A16  0B03               	andlw	3
 26514  005A18  6E29               	movwf	??_display_prepare& (0+255),c
 26515  005A1A  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 26516                           
 26517                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26518                           ; Switch size 1, requested type "space"
 26519                           ; Number of cases is 1, Range of values is 0 to 0
 26520                           ; switch strategies available:
 26521                           ; Name         Instructions Cycles
 26522                           ; simple_byte            4     3 (average)
 26523                           ;	Chosen strategy is simple_byte
 26524  005A1C  502A               	movf	??_display_prepare+1,w,c
 26525  005A1E  0A00               	xorlw	0	; case 0
 26526  005A20  A4D8               	btfss	status,2,c
 26527  005A22  D00A               	goto	l1557
 26528                           
 26529                           ; BSR set to: 0
 26530                           ; Switch size 1, requested type "space"
 26531                           ; Number of cases is 3, Range of values is 1 to 3
 26532                           ; switch strategies available:
 26533                           ; Name         Instructions Cycles
 26534                           ; simple_byte           10     6 (average)
 26535                           ;	Chosen strategy is simple_byte
 26536  005A24  5029               	movf	??_display_prepare,w,c
 26537  005A26  0A01               	xorlw	1	; case 1
 26538  005A28  B4D8               	btfsc	status,2,c
 26539  005A2A  D7ED               	goto	l1556
 26540  005A2C  0A03               	xorlw	3	; case 2
 26541  005A2E  B4D8               	btfsc	status,2,c
 26542  005A30  D7E7               	goto	l1555
 26543  005A32  0A01               	xorlw	1	; case 3
 26544  005A34  B4D8               	btfsc	status,2,c
 26545  005A36  D7E1               	goto	l1554
 26546  005A38                     l1557:
 26547                           
 26548                           ;display.c: 345: if(INTCONbits.GIE)
 26549  005A38  AEF2               	btfss	intcon,7,c	;volatile
 26550  005A3A  0012               	return	
 26551                           
 26552                           ;display.c: 346: {;display.c: 347: display_content[0][18] = 'I';
 26553  005A3C  0E49               	movlw	73
 26554  005A3E  0102               	movlb	2	; () banked
 26555  005A40  6F12               	movwf	(_display_content+18)& (0+255),b
 26556  005A42  0012               	return	
 26557  005A44                     __end_of_display_prepare:
 26558                           	opt stack 0
 26559                           tosu	equ	0xFFF
 26560                           tosh	equ	0xFFE
 26561                           tosl	equ	0xFFD
 26562                           pclath	equ	0xFFA
 26563                           tblptru	equ	0xFF8
 26564                           tblptrh	equ	0xFF7
 26565                           tblptrl	equ	0xFF6
 26566                           tablat	equ	0xFF5
 26567                           prodh	equ	0xFF4
 26568                           prodl	equ	0xFF3
 26569                           intcon	equ	0xFF2
 26570                           intcon2	equ	0xFF1
 26571                           intcon3	equ	0xFF0
 26572                           indf0	equ	0xFEF
 26573                           postinc0	equ	0xFEE
 26574                           fsr0h	equ	0xFEA
 26575                           fsr0l	equ	0xFE9
 26576                           wreg	equ	0xFE8
 26577                           indf1	equ	0xFE7
 26578                           postdec1	equ	0xFE5
 26579                           plusw1	equ	0xFE3
 26580                           fsr1h	equ	0xFE2
 26581                           fsr1l	equ	0xFE1
 26582                           indf2	equ	0xFDF
 26583                           postinc2	equ	0xFDE
 26584                           postdec2	equ	0xFDD
 26585                           plusw2	equ	0xFDB
 26586                           fsr2h	equ	0xFDA
 26587                           fsr2l	equ	0xFD9
 26588                           status	equ	0xFD8
 26589                           
 26590 ;; *************** function __display_verify *****************
 26591 ;; Defined at:
 26592 ;;		line 417 in file "display.c"
 26593 ;; Parameters:    Size  Location     Type
 26594 ;;		None
 26595 ;; Auto vars:     Size  Location     Type
 26596 ;;  cntr            1   32[COMRAM] unsigned char 
 26597 ;;  start           1    0        unsigned char 
 26598 ;; Return value:  Size  Location     Type
 26599 ;;                  1    wreg      void 
 26600 ;; Registers used:
 26601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26602 ;; Tracked objects:
 26603 ;;		On entry : 0/0
 26604 ;;		On exit  : 0/0
 26605 ;;		Unchanged: 0/0
 26606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26610 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26611 ;;Total ram usage:        3 bytes
 26612 ;; Hardware stack levels used:    1
 26613 ;; Hardware stack levels required when called:    4
 26614 ;; This function calls:
 26615 ;;		__display_itoa_u16
 26616 ;;		_bootloader_get_entries
 26617 ;; This function is called by:
 26618 ;;		_display_prepare
 26619 ;; This function uses a non-reentrant model
 26620 ;;
 26621                           
 26622                           	psect	text131
 26623  00444E                     __ptext131:
 26624                           	opt stack 0
 26625  00444E                     __display_verify:
 26626                           	opt stack 22
 26627                           
 26628                           ;display.c: 419: uint8_t cntr;;display.c: 420: uint8_t start;;display.c: 421: cntr = 0;
 26629                           
 26630                           ;incstack = 0
 26631  00444E  0E00               	movlw	0
 26632  004450  6E21               	movwf	__display_verify@cntr,c
 26633                           
 26634                           ;display.c: 422: while(verify_line1[cntr])
 26635  004452  D017               	goto	l1610
 26636  004454                     
 26637                           ;display.c: 423: display_content[0][cntr] = verify_line1[cntr++];
 26638  004454  5021               	movf	__display_verify@cntr,w,c
 26639  004456  0D01               	mullw	1
 26640  004458  0EC4               	movlw	low _verify_line1
 26641  00445A  24F3               	addwf	prodl,w,c
 26642  00445C  6EF6               	movwf	tblptrl,c
 26643  00445E  0E8D               	movlw	high _verify_line1
 26644  004460  20F4               	addwfc	prodh,w,c
 26645  004462  6EF7               	movwf	tblptrh,c
 26646  004464                     	if	1	;There are 3 active tblptr bytes
 26647  004464  6AF8               	clrf	tblptru,c
 26648  004466  0E00               	movlw	low (__mediumconst shr (0+16))
 26649  004468  22F8               	addwfc	tblptru,f,c
 26650  00446A                     	endif
 26651  00446A  5021               	movf	__display_verify@cntr,w,c
 26652  00446C  0D01               	mullw	1
 26653  00446E  0E00               	movlw	low _display_content
 26654  004470  24F3               	addwf	prodl,w,c
 26655  004472  6ED9               	movwf	fsr2l,c
 26656  004474  0E02               	movlw	high _display_content
 26657  004476  20F4               	addwfc	prodh,w,c
 26658  004478  6EDA               	movwf	fsr2h,c
 26659  00447A  0008               	tblrd		*
 26660  00447C  CFF5 FFDF          	movff	tablat,indf2
 26661  004480  2A21               	incf	__display_verify@cntr,f,c
 26662  004482                     l1610:
 26663  004482  5021               	movf	__display_verify@cntr,w,c
 26664  004484  0D01               	mullw	1
 26665  004486  0EC4               	movlw	low _verify_line1
 26666  004488  24F3               	addwf	prodl,w,c
 26667  00448A  6EF6               	movwf	tblptrl,c
 26668  00448C  0E8D               	movlw	high _verify_line1
 26669  00448E  20F4               	addwfc	prodh,w,c
 26670  004490  6EF7               	movwf	tblptrh,c
 26671  004492                     	if	1	;There are 3 active tblptr bytes
 26672  004492  6AF8               	clrf	tblptru,c
 26673  004494  0E00               	movlw	low (__mediumconst shr (0+16))
 26674  004496  22F8               	addwfc	tblptru,f,c
 26675  004498                     	endif
 26676  004498  0008               	tblrd		*
 26677  00449A  50F5               	movf	tablat,w,c
 26678  00449C  0900               	iorlw	0
 26679  00449E  A4D8               	btfss	status,2,c
 26680  0044A0  D7D9               	goto	l1611
 26681                           
 26682                           ;display.c: 424: cntr = 0;
 26683  0044A2  0E00               	movlw	0
 26684  0044A4  6E21               	movwf	__display_verify@cntr,c
 26685                           
 26686                           ;display.c: 425: while(verify_line2[cntr])
 26687  0044A6  D017               	goto	l1613
 26688  0044A8                     
 26689                           ;display.c: 426: display_content[1][cntr] = verify_line2[cntr++];
 26690  0044A8  5021               	movf	__display_verify@cntr,w,c
 26691  0044AA  0D01               	mullw	1
 26692  0044AC  0E4C               	movlw	low _verify_line2
 26693  0044AE  24F3               	addwf	prodl,w,c
 26694  0044B0  6EF6               	movwf	tblptrl,c
 26695  0044B2  0E8E               	movlw	high _verify_line2
 26696  0044B4  20F4               	addwfc	prodh,w,c
 26697  0044B6  6EF7               	movwf	tblptrh,c
 26698  0044B8                     	if	1	;There are 3 active tblptr bytes
 26699  0044B8  6AF8               	clrf	tblptru,c
 26700  0044BA  0E00               	movlw	low (__mediumconst shr (0+16))
 26701  0044BC  22F8               	addwfc	tblptru,f,c
 26702  0044BE                     	endif
 26703  0044BE  5021               	movf	__display_verify@cntr,w,c
 26704  0044C0  0D01               	mullw	1
 26705  0044C2  0E14               	movlw	low (_display_content+20)
 26706  0044C4  24F3               	addwf	prodl,w,c
 26707  0044C6  6ED9               	movwf	fsr2l,c
 26708  0044C8  0E02               	movlw	high (_display_content+20)
 26709  0044CA  20F4               	addwfc	prodh,w,c
 26710  0044CC  6EDA               	movwf	fsr2h,c
 26711  0044CE  0008               	tblrd		*
 26712  0044D0  CFF5 FFDF          	movff	tablat,indf2
 26713  0044D4  2A21               	incf	__display_verify@cntr,f,c
 26714  0044D6                     l1613:
 26715  0044D6  5021               	movf	__display_verify@cntr,w,c
 26716  0044D8  0D01               	mullw	1
 26717  0044DA  0E4C               	movlw	low _verify_line2
 26718  0044DC  24F3               	addwf	prodl,w,c
 26719  0044DE  6EF6               	movwf	tblptrl,c
 26720  0044E0  0E8E               	movlw	high _verify_line2
 26721  0044E2  20F4               	addwfc	prodh,w,c
 26722  0044E4  6EF7               	movwf	tblptrh,c
 26723  0044E6                     	if	1	;There are 3 active tblptr bytes
 26724  0044E6  6AF8               	clrf	tblptru,c
 26725  0044E8  0E00               	movlw	low (__mediumconst shr (0+16))
 26726  0044EA  22F8               	addwfc	tblptru,f,c
 26727  0044EC                     	endif
 26728  0044EC  0008               	tblrd		*
 26729  0044EE  50F5               	movf	tablat,w,c
 26730  0044F0  0900               	iorlw	0
 26731  0044F2  A4D8               	btfss	status,2,c
 26732  0044F4  D7D9               	goto	l1614
 26733                           
 26734                           ;display.c: 427: cntr = 0;
 26735  0044F6  0E00               	movlw	0
 26736  0044F8  6E21               	movwf	__display_verify@cntr,c
 26737                           
 26738                           ;display.c: 428: while(verify_line3[cntr])
 26739  0044FA  D017               	goto	l1616
 26740  0044FC                     
 26741                           ;display.c: 429: display_content[2][cntr] = verify_line3[cntr++];
 26742  0044FC  5021               	movf	__display_verify@cntr,w,c
 26743  0044FE  0D01               	mullw	1
 26744  004500  0E8A               	movlw	low _verify_line3
 26745  004502  24F3               	addwf	prodl,w,c
 26746  004504  6EF6               	movwf	tblptrl,c
 26747  004506  0E8E               	movlw	high _verify_line3
 26748  004508  20F4               	addwfc	prodh,w,c
 26749  00450A  6EF7               	movwf	tblptrh,c
 26750  00450C                     	if	1	;There are 3 active tblptr bytes
 26751  00450C  6AF8               	clrf	tblptru,c
 26752  00450E  0E00               	movlw	low (__mediumconst shr (0+16))
 26753  004510  22F8               	addwfc	tblptru,f,c
 26754  004512                     	endif
 26755  004512  5021               	movf	__display_verify@cntr,w,c
 26756  004514  0D01               	mullw	1
 26757  004516  0E28               	movlw	low (_display_content+40)
 26758  004518  24F3               	addwf	prodl,w,c
 26759  00451A  6ED9               	movwf	fsr2l,c
 26760  00451C  0E02               	movlw	high (_display_content+40)
 26761  00451E  20F4               	addwfc	prodh,w,c
 26762  004520  6EDA               	movwf	fsr2h,c
 26763  004522  0008               	tblrd		*
 26764  004524  CFF5 FFDF          	movff	tablat,indf2
 26765  004528  2A21               	incf	__display_verify@cntr,f,c
 26766  00452A                     l1616:
 26767  00452A  5021               	movf	__display_verify@cntr,w,c
 26768  00452C  0D01               	mullw	1
 26769  00452E  0E8A               	movlw	low _verify_line3
 26770  004530  24F3               	addwf	prodl,w,c
 26771  004532  6EF6               	movwf	tblptrl,c
 26772  004534  0E8E               	movlw	high _verify_line3
 26773  004536  20F4               	addwfc	prodh,w,c
 26774  004538  6EF7               	movwf	tblptrh,c
 26775  00453A                     	if	1	;There are 3 active tblptr bytes
 26776  00453A  6AF8               	clrf	tblptru,c
 26777  00453C  0E00               	movlw	low (__mediumconst shr (0+16))
 26778  00453E  22F8               	addwfc	tblptru,f,c
 26779  004540                     	endif
 26780  004540  0008               	tblrd		*
 26781  004542  50F5               	movf	tablat,w,c
 26782  004544  0900               	iorlw	0
 26783  004546  A4D8               	btfss	status,2,c
 26784  004548  D7D9               	goto	l1617
 26785                           
 26786                           ;display.c: 430: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 26787  00454A  ECA7  F044         	call	_bootloader_get_entries	;wreg free
 26788  00454E  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 26789  004552  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 26790  004556  6A1B               	clrf	__display_itoa_u16@value+2,c
 26791  004558  6A1C               	clrf	__display_itoa_u16@value+3,c
 26792  00455A  5021               	movf	__display_verify@cntr,w,c
 26793  00455C  6E1F               	movwf	??__display_verify& (0+255),c
 26794  00455E  6A20               	clrf	(??__display_verify+1)& (0+255),c
 26795  004560  0E01               	movlw	1
 26796  004562  261F               	addwf	??__display_verify,f,c
 26797  004564  0E00               	movlw	0
 26798  004566  2220               	addwfc	??__display_verify+1,f,c
 26799  004568  0E28               	movlw	low (_display_content+40)
 26800  00456A  241F               	addwf	??__display_verify,w,c
 26801  00456C  6E1D               	movwf	__display_itoa_u16@text,c
 26802  00456E  0E02               	movlw	high (_display_content+40)
 26803  004570  2020               	addwfc	??__display_verify+1,w,c
 26804  004572  6E1E               	movwf	__display_itoa_u16@text+1,c
 26805  004574  EC4F  F02E         	call	__display_itoa_u16	;wreg free
 26806  004578  0012               	return		;funcret
 26807  00457A                     __end_of__display_verify:
 26808                           	opt stack 0
 26809                           tosu	equ	0xFFF
 26810                           tosh	equ	0xFFE
 26811                           tosl	equ	0xFFD
 26812                           pclath	equ	0xFFA
 26813                           tblptru	equ	0xFF8
 26814                           tblptrh	equ	0xFF7
 26815                           tblptrl	equ	0xFF6
 26816                           tablat	equ	0xFF5
 26817                           prodh	equ	0xFF4
 26818                           prodl	equ	0xFF3
 26819                           intcon	equ	0xFF2
 26820                           intcon2	equ	0xFF1
 26821                           intcon3	equ	0xFF0
 26822                           indf0	equ	0xFEF
 26823                           postinc0	equ	0xFEE
 26824                           fsr0h	equ	0xFEA
 26825                           fsr0l	equ	0xFE9
 26826                           wreg	equ	0xFE8
 26827                           indf1	equ	0xFE7
 26828                           postdec1	equ	0xFE5
 26829                           plusw1	equ	0xFE3
 26830                           fsr1h	equ	0xFE2
 26831                           fsr1l	equ	0xFE1
 26832                           indf2	equ	0xFDF
 26833                           postinc2	equ	0xFDE
 26834                           postdec2	equ	0xFDD
 26835                           plusw2	equ	0xFDB
 26836                           fsr2h	equ	0xFDA
 26837                           fsr2l	equ	0xFD9
 26838                           status	equ	0xFD8
 26839                           
 26840 ;; *************** function __display_start *****************
 26841 ;; Defined at:
 26842 ;;		line 351 in file "display.c"
 26843 ;; Parameters:    Size  Location     Type
 26844 ;;		None
 26845 ;; Auto vars:     Size  Location     Type
 26846 ;;  cntr            1   36[COMRAM] unsigned char 
 26847 ;; Return value:  Size  Location     Type
 26848 ;;                  1    wreg      void 
 26849 ;; Registers used:
 26850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26851 ;; Tracked objects:
 26852 ;;		On entry : 0/0
 26853 ;;		On exit  : 0/0
 26854 ;;		Unchanged: 0/0
 26855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26860 ;;Total ram usage:        1 bytes
 26861 ;; Hardware stack levels used:    1
 26862 ;; Hardware stack levels required when called:    5
 26863 ;; This function calls:
 26864 ;;		__display_itoa_u32
 26865 ;; This function is called by:
 26866 ;;		_display_prepare
 26867 ;; This function uses a non-reentrant model
 26868 ;;
 26869                           
 26870                           	psect	text132
 26871  002C8A                     __ptext132:
 26872                           	opt stack 0
 26873  002C8A                     __display_start:
 26874                           	opt stack 21
 26875                           
 26876                           ;display.c: 353: uint8_t cntr;;display.c: 354: cntr = 0;
 26877                           
 26878                           ;incstack = 0
 26879  002C8A  0E00               	movlw	0
 26880  002C8C  6E25               	movwf	__display_start@cntr,c
 26881                           
 26882                           ;display.c: 355: while(start_line1[cntr])
 26883  002C8E  D017               	goto	l1562
 26884  002C90                     
 26885                           ;display.c: 356: display_content[0][cntr] = start_line1[cntr++];
 26886  002C90  5025               	movf	__display_start@cntr,w,c
 26887  002C92  0D01               	mullw	1
 26888  002C94  0EF4               	movlw	low _start_line1
 26889  002C96  24F3               	addwf	prodl,w,c
 26890  002C98  6EF6               	movwf	tblptrl,c
 26891  002C9A  0E8D               	movlw	high _start_line1
 26892  002C9C  20F4               	addwfc	prodh,w,c
 26893  002C9E  6EF7               	movwf	tblptrh,c
 26894  002CA0                     	if	1	;There are 3 active tblptr bytes
 26895  002CA0  6AF8               	clrf	tblptru,c
 26896  002CA2  0E00               	movlw	low (__mediumconst shr (0+16))
 26897  002CA4  22F8               	addwfc	tblptru,f,c
 26898  002CA6                     	endif
 26899  002CA6  5025               	movf	__display_start@cntr,w,c
 26900  002CA8  0D01               	mullw	1
 26901  002CAA  0E00               	movlw	low _display_content
 26902  002CAC  24F3               	addwf	prodl,w,c
 26903  002CAE  6ED9               	movwf	fsr2l,c
 26904  002CB0  0E02               	movlw	high _display_content
 26905  002CB2  20F4               	addwfc	prodh,w,c
 26906  002CB4  6EDA               	movwf	fsr2h,c
 26907  002CB6  0008               	tblrd		*
 26908  002CB8  CFF5 FFDF          	movff	tablat,indf2
 26909  002CBC  2A25               	incf	__display_start@cntr,f,c
 26910  002CBE                     l1562:
 26911  002CBE  5025               	movf	__display_start@cntr,w,c
 26912  002CC0  0D01               	mullw	1
 26913  002CC2  0EF4               	movlw	low _start_line1
 26914  002CC4  24F3               	addwf	prodl,w,c
 26915  002CC6  6EF6               	movwf	tblptrl,c
 26916  002CC8  0E8D               	movlw	high _start_line1
 26917  002CCA  20F4               	addwfc	prodh,w,c
 26918  002CCC  6EF7               	movwf	tblptrh,c
 26919  002CCE                     	if	1	;There are 3 active tblptr bytes
 26920  002CCE  6AF8               	clrf	tblptru,c
 26921  002CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 26922  002CD2  22F8               	addwfc	tblptru,f,c
 26923  002CD4                     	endif
 26924  002CD4  0008               	tblrd		*
 26925  002CD6  50F5               	movf	tablat,w,c
 26926  002CD8  0900               	iorlw	0
 26927  002CDA  A4D8               	btfss	status,2,c
 26928  002CDC  D7D9               	goto	l1563
 26929                           
 26930                           ;display.c: 357: cntr = 0;
 26931  002CDE  0E00               	movlw	0
 26932  002CE0  6E25               	movwf	__display_start@cntr,c
 26933                           
 26934                           ;display.c: 358: while(start_line2[cntr])
 26935  002CE2  D017               	goto	l1565
 26936  002CE4                     
 26937                           ;display.c: 359: display_content[1][cntr] = start_line2[cntr++];
 26938  002CE4  5025               	movf	__display_start@cntr,w,c
 26939  002CE6  0D01               	mullw	1
 26940  002CE8  0E62               	movlw	low _start_line2
 26941  002CEA  24F3               	addwf	prodl,w,c
 26942  002CEC  6EF6               	movwf	tblptrl,c
 26943  002CEE  0E8E               	movlw	high _start_line2
 26944  002CF0  20F4               	addwfc	prodh,w,c
 26945  002CF2  6EF7               	movwf	tblptrh,c
 26946  002CF4                     	if	1	;There are 3 active tblptr bytes
 26947  002CF4  6AF8               	clrf	tblptru,c
 26948  002CF6  0E00               	movlw	low (__mediumconst shr (0+16))
 26949  002CF8  22F8               	addwfc	tblptru,f,c
 26950  002CFA                     	endif
 26951  002CFA  5025               	movf	__display_start@cntr,w,c
 26952  002CFC  0D01               	mullw	1
 26953  002CFE  0E14               	movlw	low (_display_content+20)
 26954  002D00  24F3               	addwf	prodl,w,c
 26955  002D02  6ED9               	movwf	fsr2l,c
 26956  002D04  0E02               	movlw	high (_display_content+20)
 26957  002D06  20F4               	addwfc	prodh,w,c
 26958  002D08  6EDA               	movwf	fsr2h,c
 26959  002D0A  0008               	tblrd		*
 26960  002D0C  CFF5 FFDF          	movff	tablat,indf2
 26961  002D10  2A25               	incf	__display_start@cntr,f,c
 26962  002D12                     l1565:
 26963  002D12  5025               	movf	__display_start@cntr,w,c
 26964  002D14  0D01               	mullw	1
 26965  002D16  0E62               	movlw	low _start_line2
 26966  002D18  24F3               	addwf	prodl,w,c
 26967  002D1A  6EF6               	movwf	tblptrl,c
 26968  002D1C  0E8E               	movlw	high _start_line2
 26969  002D1E  20F4               	addwfc	prodh,w,c
 26970  002D20  6EF7               	movwf	tblptrh,c
 26971  002D22                     	if	1	;There are 3 active tblptr bytes
 26972  002D22  6AF8               	clrf	tblptru,c
 26973  002D24  0E00               	movlw	low (__mediumconst shr (0+16))
 26974  002D26  22F8               	addwfc	tblptru,f,c
 26975  002D28                     	endif
 26976  002D28  0008               	tblrd		*
 26977  002D2A  50F5               	movf	tablat,w,c
 26978  002D2C  0900               	iorlw	0
 26979  002D2E  A4D8               	btfss	status,2,c
 26980  002D30  D7D9               	goto	l1566
 26981                           
 26982                           ;display.c: 360: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 26983  002D32  0E00               	movlw	0
 26984  002D34  6E1F               	movwf	__display_itoa_u32@value,c
 26985  002D36  0E00               	movlw	0
 26986  002D38  6E20               	movwf	__display_itoa_u32@value+1,c
 26987  002D3A  0E00               	movlw	0
 26988  002D3C  6E21               	movwf	__display_itoa_u32@value+2,c
 26989  002D3E  0E00               	movlw	0
 26990  002D40  6E22               	movwf	__display_itoa_u32@value+3,c
 26991  002D42  5025               	movf	__display_start@cntr,w,c
 26992  002D44  0D01               	mullw	1
 26993  002D46  0E14               	movlw	low (_display_content+20)
 26994  002D48  24F3               	addwf	prodl,w,c
 26995  002D4A  6E23               	movwf	__display_itoa_u32@text,c
 26996  002D4C  0E02               	movlw	high (_display_content+20)
 26997  002D4E  20F4               	addwfc	prodh,w,c
 26998  002D50  6E24               	movwf	__display_itoa_u32@text+1,c
 26999  002D52  EC07  F006         	call	__display_itoa_u32	;wreg free
 27000  002D56  2625               	addwf	__display_start@cntr,f,c
 27001                           
 27002                           ;display.c: 361: display_content[1][cntr++] = '.';
 27003  002D58  5025               	movf	__display_start@cntr,w,c
 27004  002D5A  0D01               	mullw	1
 27005  002D5C  0E14               	movlw	low (_display_content+20)
 27006  002D5E  24F3               	addwf	prodl,w,c
 27007  002D60  6ED9               	movwf	fsr2l,c
 27008  002D62  0E02               	movlw	high (_display_content+20)
 27009  002D64  20F4               	addwfc	prodh,w,c
 27010  002D66  6EDA               	movwf	fsr2h,c
 27011  002D68  0E2E               	movlw	46
 27012  002D6A  6EDF               	movwf	indf2,c
 27013  002D6C  2A25               	incf	__display_start@cntr,f,c
 27014                           
 27015                           ;display.c: 362: cntr += _display_itoa_u32(0x02, &display_content[1][cntr]);
 27016  002D6E  0E02               	movlw	2
 27017  002D70  6E1F               	movwf	__display_itoa_u32@value,c
 27018  002D72  0E00               	movlw	0
 27019  002D74  6E20               	movwf	__display_itoa_u32@value+1,c
 27020  002D76  0E00               	movlw	0
 27021  002D78  6E21               	movwf	__display_itoa_u32@value+2,c
 27022  002D7A  0E00               	movlw	0
 27023  002D7C  6E22               	movwf	__display_itoa_u32@value+3,c
 27024  002D7E  5025               	movf	__display_start@cntr,w,c
 27025  002D80  0D01               	mullw	1
 27026  002D82  0E14               	movlw	low (_display_content+20)
 27027  002D84  24F3               	addwf	prodl,w,c
 27028  002D86  6E23               	movwf	__display_itoa_u32@text,c
 27029  002D88  0E02               	movlw	high (_display_content+20)
 27030  002D8A  20F4               	addwfc	prodh,w,c
 27031  002D8C  6E24               	movwf	__display_itoa_u32@text+1,c
 27032  002D8E  EC07  F006         	call	__display_itoa_u32	;wreg free
 27033  002D92  2625               	addwf	__display_start@cntr,f,c
 27034                           
 27035                           ;display.c: 363: display_content[1][cntr++] = '.';
 27036  002D94  5025               	movf	__display_start@cntr,w,c
 27037  002D96  0D01               	mullw	1
 27038  002D98  0E14               	movlw	low (_display_content+20)
 27039  002D9A  24F3               	addwf	prodl,w,c
 27040  002D9C  6ED9               	movwf	fsr2l,c
 27041  002D9E  0E02               	movlw	high (_display_content+20)
 27042  002DA0  20F4               	addwfc	prodh,w,c
 27043  002DA2  6EDA               	movwf	fsr2h,c
 27044  002DA4  0E2E               	movlw	46
 27045  002DA6  6EDF               	movwf	indf2,c
 27046  002DA8  2A25               	incf	__display_start@cntr,f,c
 27047                           
 27048                           ;display.c: 364: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 27049  002DAA  0E00               	movlw	0
 27050  002DAC  6E1F               	movwf	__display_itoa_u32@value,c
 27051  002DAE  0E00               	movlw	0
 27052  002DB0  6E20               	movwf	__display_itoa_u32@value+1,c
 27053  002DB2  0E00               	movlw	0
 27054  002DB4  6E21               	movwf	__display_itoa_u32@value+2,c
 27055  002DB6  0E00               	movlw	0
 27056  002DB8  6E22               	movwf	__display_itoa_u32@value+3,c
 27057  002DBA  5025               	movf	__display_start@cntr,w,c
 27058  002DBC  0D01               	mullw	1
 27059  002DBE  0E14               	movlw	low (_display_content+20)
 27060  002DC0  24F3               	addwf	prodl,w,c
 27061  002DC2  6E23               	movwf	__display_itoa_u32@text,c
 27062  002DC4  0E02               	movlw	high (_display_content+20)
 27063  002DC6  20F4               	addwfc	prodh,w,c
 27064  002DC8  6E24               	movwf	__display_itoa_u32@text+1,c
 27065  002DCA  EC07  F006         	call	__display_itoa_u32	;wreg free
 27066  002DCE  2625               	addwf	__display_start@cntr,f,c
 27067                           
 27068                           ;display.c: 365: cntr = 0;
 27069  002DD0  0E00               	movlw	0
 27070  002DD2  6E25               	movwf	__display_start@cntr,c
 27071                           
 27072                           ;display.c: 366: while(start_line3[cntr])
 27073  002DD4  D017               	goto	l1568
 27074  002DD6                     
 27075                           ;display.c: 367: display_content[2][cntr] = start_line3[cntr++];
 27076  002DD6  5025               	movf	__display_start@cntr,w,c
 27077  002DD8  0D01               	mullw	1
 27078  002DDA  0EA7               	movlw	low _start_line3
 27079  002DDC  24F3               	addwf	prodl,w,c
 27080  002DDE  6EF6               	movwf	tblptrl,c
 27081  002DE0  0E8E               	movlw	high _start_line3
 27082  002DE2  20F4               	addwfc	prodh,w,c
 27083  002DE4  6EF7               	movwf	tblptrh,c
 27084  002DE6                     	if	1	;There are 3 active tblptr bytes
 27085  002DE6  6AF8               	clrf	tblptru,c
 27086  002DE8  0E00               	movlw	low (__mediumconst shr (0+16))
 27087  002DEA  22F8               	addwfc	tblptru,f,c
 27088  002DEC                     	endif
 27089  002DEC  5025               	movf	__display_start@cntr,w,c
 27090  002DEE  0D01               	mullw	1
 27091  002DF0  0E28               	movlw	low (_display_content+40)
 27092  002DF2  24F3               	addwf	prodl,w,c
 27093  002DF4  6ED9               	movwf	fsr2l,c
 27094  002DF6  0E02               	movlw	high (_display_content+40)
 27095  002DF8  20F4               	addwfc	prodh,w,c
 27096  002DFA  6EDA               	movwf	fsr2h,c
 27097  002DFC  0008               	tblrd		*
 27098  002DFE  CFF5 FFDF          	movff	tablat,indf2
 27099  002E02  2A25               	incf	__display_start@cntr,f,c
 27100  002E04                     l1568:
 27101  002E04  5025               	movf	__display_start@cntr,w,c
 27102  002E06  0D01               	mullw	1
 27103  002E08  0EA7               	movlw	low _start_line3
 27104  002E0A  24F3               	addwf	prodl,w,c
 27105  002E0C  6EF6               	movwf	tblptrl,c
 27106  002E0E  0E8E               	movlw	high _start_line3
 27107  002E10  20F4               	addwfc	prodh,w,c
 27108  002E12  6EF7               	movwf	tblptrh,c
 27109  002E14                     	if	1	;There are 3 active tblptr bytes
 27110  002E14  6AF8               	clrf	tblptru,c
 27111  002E16  0E00               	movlw	low (__mediumconst shr (0+16))
 27112  002E18  22F8               	addwfc	tblptru,f,c
 27113  002E1A                     	endif
 27114  002E1A  0008               	tblrd		*
 27115  002E1C  50F5               	movf	tablat,w,c
 27116  002E1E  0900               	iorlw	0
 27117  002E20  A4D8               	btfss	status,2,c
 27118  002E22  D7D9               	goto	l1569
 27119                           
 27120                           ;display.c: 368: cntr = 0;
 27121  002E24  0E00               	movlw	0
 27122  002E26  6E25               	movwf	__display_start@cntr,c
 27123                           
 27124                           ;display.c: 369: while(start_line4[cntr])
 27125  002E28  D017               	goto	l1571
 27126  002E2A                     
 27127                           ;display.c: 370: display_content[3][cntr] = start_line4[cntr++];
 27128  002E2A  5025               	movf	__display_start@cntr,w,c
 27129  002E2C  0D01               	mullw	1
 27130  002E2E  0E22               	movlw	low _start_line4
 27131  002E30  24F3               	addwf	prodl,w,c
 27132  002E32  6EF6               	movwf	tblptrl,c
 27133  002E34  0E8E               	movlw	high _start_line4
 27134  002E36  20F4               	addwfc	prodh,w,c
 27135  002E38  6EF7               	movwf	tblptrh,c
 27136  002E3A                     	if	1	;There are 3 active tblptr bytes
 27137  002E3A  6AF8               	clrf	tblptru,c
 27138  002E3C  0E00               	movlw	low (__mediumconst shr (0+16))
 27139  002E3E  22F8               	addwfc	tblptru,f,c
 27140  002E40                     	endif
 27141  002E40  5025               	movf	__display_start@cntr,w,c
 27142  002E42  0D01               	mullw	1
 27143  002E44  0E3C               	movlw	low (_display_content+60)
 27144  002E46  24F3               	addwf	prodl,w,c
 27145  002E48  6ED9               	movwf	fsr2l,c
 27146  002E4A  0E02               	movlw	high (_display_content+60)
 27147  002E4C  20F4               	addwfc	prodh,w,c
 27148  002E4E  6EDA               	movwf	fsr2h,c
 27149  002E50  0008               	tblrd		*
 27150  002E52  CFF5 FFDF          	movff	tablat,indf2
 27151  002E56  2A25               	incf	__display_start@cntr,f,c
 27152  002E58                     l1571:
 27153  002E58  5025               	movf	__display_start@cntr,w,c
 27154  002E5A  0D01               	mullw	1
 27155  002E5C  0E22               	movlw	low _start_line4
 27156  002E5E  24F3               	addwf	prodl,w,c
 27157  002E60  6EF6               	movwf	tblptrl,c
 27158  002E62  0E8E               	movlw	high _start_line4
 27159  002E64  20F4               	addwfc	prodh,w,c
 27160  002E66  6EF7               	movwf	tblptrh,c
 27161  002E68                     	if	1	;There are 3 active tblptr bytes
 27162  002E68  6AF8               	clrf	tblptru,c
 27163  002E6A  0E00               	movlw	low (__mediumconst shr (0+16))
 27164  002E6C  22F8               	addwfc	tblptru,f,c
 27165  002E6E                     	endif
 27166  002E6E  0008               	tblrd		*
 27167  002E70  50F5               	movf	tablat,w,c
 27168  002E72  0900               	iorlw	0
 27169  002E74  B4D8               	btfsc	status,2,c
 27170  002E76  0012               	return	
 27171  002E78  D7D8               	goto	l1572
 27172  002E7A                     __end_of__display_start:
 27173                           	opt stack 0
 27174                           tosu	equ	0xFFF
 27175                           tosh	equ	0xFFE
 27176                           tosl	equ	0xFFD
 27177                           pclath	equ	0xFFA
 27178                           tblptru	equ	0xFF8
 27179                           tblptrh	equ	0xFF7
 27180                           tblptrl	equ	0xFF6
 27181                           tablat	equ	0xFF5
 27182                           prodh	equ	0xFF4
 27183                           prodl	equ	0xFF3
 27184                           intcon	equ	0xFF2
 27185                           intcon2	equ	0xFF1
 27186                           intcon3	equ	0xFF0
 27187                           indf0	equ	0xFEF
 27188                           postinc0	equ	0xFEE
 27189                           fsr0h	equ	0xFEA
 27190                           fsr0l	equ	0xFE9
 27191                           wreg	equ	0xFE8
 27192                           indf1	equ	0xFE7
 27193                           postdec1	equ	0xFE5
 27194                           plusw1	equ	0xFE3
 27195                           fsr1h	equ	0xFE2
 27196                           fsr1l	equ	0xFE1
 27197                           indf2	equ	0xFDF
 27198                           postinc2	equ	0xFDE
 27199                           postdec2	equ	0xFDD
 27200                           plusw2	equ	0xFDB
 27201                           fsr2h	equ	0xFDA
 27202                           fsr2l	equ	0xFD9
 27203                           status	equ	0xFD8
 27204                           
 27205 ;; *************** function __display_search *****************
 27206 ;; Defined at:
 27207 ;;		line 373 in file "display.c"
 27208 ;; Parameters:    Size  Location     Type
 27209 ;;		None
 27210 ;; Auto vars:     Size  Location     Type
 27211 ;;  cntr            1    0[COMRAM] unsigned char 
 27212 ;; Return value:  Size  Location     Type
 27213 ;;                  1    wreg      void 
 27214 ;; Registers used:
 27215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27216 ;; Tracked objects:
 27217 ;;		On entry : 0/0
 27218 ;;		On exit  : 0/0
 27219 ;;		Unchanged: 0/0
 27220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27225 ;;Total ram usage:        1 bytes
 27226 ;; Hardware stack levels used:    1
 27227 ;; This function calls:
 27228 ;;		Nothing
 27229 ;; This function is called by:
 27230 ;;		_display_prepare
 27231 ;; This function uses a non-reentrant model
 27232 ;;
 27233                           
 27234                           	psect	text133
 27235  003F2A                     __ptext133:
 27236                           	opt stack 0
 27237  003F2A                     __display_search:
 27238                           	opt stack 26
 27239                           
 27240                           ;display.c: 375: uint8_t cntr;;display.c: 376: cntr = 0;
 27241                           
 27242                           ;incstack = 0
 27243  003F2A  0E00               	movlw	0
 27244  003F2C  6E01               	movwf	__display_search@cntr,c
 27245                           
 27246                           ;display.c: 377: while(search_line1[cntr])
 27247  003F2E  D017               	goto	l1577
 27248  003F30                     
 27249                           ;display.c: 378: display_content[0][cntr] = search_line1[cntr++];
 27250  003F30  5001               	movf	__display_search@cntr,w,c
 27251  003F32  0D01               	mullw	1
 27252  003F34  0EE4               	movlw	low _search_line1
 27253  003F36  24F3               	addwf	prodl,w,c
 27254  003F38  6EF6               	movwf	tblptrl,c
 27255  003F3A  0E8D               	movlw	high _search_line1
 27256  003F3C  20F4               	addwfc	prodh,w,c
 27257  003F3E  6EF7               	movwf	tblptrh,c
 27258  003F40                     	if	1	;There are 3 active tblptr bytes
 27259  003F40  6AF8               	clrf	tblptru,c
 27260  003F42  0E00               	movlw	low (__mediumconst shr (0+16))
 27261  003F44  22F8               	addwfc	tblptru,f,c
 27262  003F46                     	endif
 27263  003F46  5001               	movf	__display_search@cntr,w,c
 27264  003F48  0D01               	mullw	1
 27265  003F4A  0E00               	movlw	low _display_content
 27266  003F4C  24F3               	addwf	prodl,w,c
 27267  003F4E  6ED9               	movwf	fsr2l,c
 27268  003F50  0E02               	movlw	high _display_content
 27269  003F52  20F4               	addwfc	prodh,w,c
 27270  003F54  6EDA               	movwf	fsr2h,c
 27271  003F56  0008               	tblrd		*
 27272  003F58  CFF5 FFDF          	movff	tablat,indf2
 27273  003F5C  2A01               	incf	__display_search@cntr,f,c
 27274  003F5E                     l1577:
 27275  003F5E  5001               	movf	__display_search@cntr,w,c
 27276  003F60  0D01               	mullw	1
 27277  003F62  0EE4               	movlw	low _search_line1
 27278  003F64  24F3               	addwf	prodl,w,c
 27279  003F66  6EF6               	movwf	tblptrl,c
 27280  003F68  0E8D               	movlw	high _search_line1
 27281  003F6A  20F4               	addwfc	prodh,w,c
 27282  003F6C  6EF7               	movwf	tblptrh,c
 27283  003F6E                     	if	1	;There are 3 active tblptr bytes
 27284  003F6E  6AF8               	clrf	tblptru,c
 27285  003F70  0E00               	movlw	low (__mediumconst shr (0+16))
 27286  003F72  22F8               	addwfc	tblptru,f,c
 27287  003F74                     	endif
 27288  003F74  0008               	tblrd		*
 27289  003F76  50F5               	movf	tablat,w,c
 27290  003F78  0900               	iorlw	0
 27291  003F7A  A4D8               	btfss	status,2,c
 27292  003F7C  D7D9               	goto	l1578
 27293                           
 27294                           ;display.c: 379: cntr = 0;
 27295  003F7E  0E00               	movlw	0
 27296  003F80  6E01               	movwf	__display_search@cntr,c
 27297                           
 27298                           ;display.c: 380: while(search_line2[cntr])
 27299  003F82  D017               	goto	l1580
 27300  003F84                     
 27301                           ;display.c: 381: display_content[1][cntr] = search_line2[cntr++];
 27302  003F84  5001               	movf	__display_search@cntr,w,c
 27303  003F86  0D01               	mullw	1
 27304  003F88  0E43               	movlw	low _search_line2
 27305  003F8A  24F3               	addwf	prodl,w,c
 27306  003F8C  6EF6               	movwf	tblptrl,c
 27307  003F8E  0E8D               	movlw	high _search_line2
 27308  003F90  20F4               	addwfc	prodh,w,c
 27309  003F92  6EF7               	movwf	tblptrh,c
 27310  003F94                     	if	1	;There are 3 active tblptr bytes
 27311  003F94  6AF8               	clrf	tblptru,c
 27312  003F96  0E00               	movlw	low (__mediumconst shr (0+16))
 27313  003F98  22F8               	addwfc	tblptru,f,c
 27314  003F9A                     	endif
 27315  003F9A  5001               	movf	__display_search@cntr,w,c
 27316  003F9C  0D01               	mullw	1
 27317  003F9E  0E14               	movlw	low (_display_content+20)
 27318  003FA0  24F3               	addwf	prodl,w,c
 27319  003FA2  6ED9               	movwf	fsr2l,c
 27320  003FA4  0E02               	movlw	high (_display_content+20)
 27321  003FA6  20F4               	addwfc	prodh,w,c
 27322  003FA8  6EDA               	movwf	fsr2h,c
 27323  003FAA  0008               	tblrd		*
 27324  003FAC  CFF5 FFDF          	movff	tablat,indf2
 27325  003FB0  2A01               	incf	__display_search@cntr,f,c
 27326  003FB2                     l1580:
 27327  003FB2  5001               	movf	__display_search@cntr,w,c
 27328  003FB4  0D01               	mullw	1
 27329  003FB6  0E43               	movlw	low _search_line2
 27330  003FB8  24F3               	addwf	prodl,w,c
 27331  003FBA  6EF6               	movwf	tblptrl,c
 27332  003FBC  0E8D               	movlw	high _search_line2
 27333  003FBE  20F4               	addwfc	prodh,w,c
 27334  003FC0  6EF7               	movwf	tblptrh,c
 27335  003FC2                     	if	1	;There are 3 active tblptr bytes
 27336  003FC2  6AF8               	clrf	tblptru,c
 27337  003FC4  0E00               	movlw	low (__mediumconst shr (0+16))
 27338  003FC6  22F8               	addwfc	tblptru,f,c
 27339  003FC8                     	endif
 27340  003FC8  0008               	tblrd		*
 27341  003FCA  50F5               	movf	tablat,w,c
 27342  003FCC  0900               	iorlw	0
 27343  003FCE  A4D8               	btfss	status,2,c
 27344  003FD0  D7D9               	goto	l1581
 27345                           
 27346                           ;display.c: 382: cntr = 0;
 27347  003FD2  0E00               	movlw	0
 27348  003FD4  6E01               	movwf	__display_search@cntr,c
 27349                           
 27350                           ;display.c: 383: while(search_line3[cntr])
 27351  003FD6  D017               	goto	l1583
 27352  003FD8                     
 27353                           ;display.c: 384: display_content[2][cntr] = search_line3[cntr++];
 27354  003FD8  5001               	movf	__display_search@cntr,w,c
 27355  003FDA  0D01               	mullw	1
 27356  003FDC  0EC2               	movlw	low _search_line3
 27357  003FDE  24F3               	addwf	prodl,w,c
 27358  003FE0  6EF6               	movwf	tblptrl,c
 27359  003FE2  0E8C               	movlw	high _search_line3
 27360  003FE4  20F4               	addwfc	prodh,w,c
 27361  003FE6  6EF7               	movwf	tblptrh,c
 27362  003FE8                     	if	1	;There are 3 active tblptr bytes
 27363  003FE8  6AF8               	clrf	tblptru,c
 27364  003FEA  0E00               	movlw	low (__mediumconst shr (0+16))
 27365  003FEC  22F8               	addwfc	tblptru,f,c
 27366  003FEE                     	endif
 27367  003FEE  5001               	movf	__display_search@cntr,w,c
 27368  003FF0  0D01               	mullw	1
 27369  003FF2  0E28               	movlw	low (_display_content+40)
 27370  003FF4  24F3               	addwf	prodl,w,c
 27371  003FF6  6ED9               	movwf	fsr2l,c
 27372  003FF8  0E02               	movlw	high (_display_content+40)
 27373  003FFA  20F4               	addwfc	prodh,w,c
 27374  003FFC  6EDA               	movwf	fsr2h,c
 27375  003FFE  0008               	tblrd		*
 27376  004000  CFF5 FFDF          	movff	tablat,indf2
 27377  004004  2A01               	incf	__display_search@cntr,f,c
 27378  004006                     l1583:
 27379  004006  5001               	movf	__display_search@cntr,w,c
 27380  004008  0D01               	mullw	1
 27381  00400A  0EC2               	movlw	low _search_line3
 27382  00400C  24F3               	addwf	prodl,w,c
 27383  00400E  6EF6               	movwf	tblptrl,c
 27384  004010  0E8C               	movlw	high _search_line3
 27385  004012  20F4               	addwfc	prodh,w,c
 27386  004014  6EF7               	movwf	tblptrh,c
 27387  004016                     	if	1	;There are 3 active tblptr bytes
 27388  004016  6AF8               	clrf	tblptru,c
 27389  004018  0E00               	movlw	low (__mediumconst shr (0+16))
 27390  00401A  22F8               	addwfc	tblptru,f,c
 27391  00401C                     	endif
 27392  00401C  0008               	tblrd		*
 27393  00401E  50F5               	movf	tablat,w,c
 27394  004020  0900               	iorlw	0
 27395  004022  A4D8               	btfss	status,2,c
 27396  004024  D7D9               	goto	l1584
 27397                           
 27398                           ;display.c: 385: cntr = 0;
 27399  004026  0E00               	movlw	0
 27400  004028  6E01               	movwf	__display_search@cntr,c
 27401                           
 27402                           ;display.c: 386: while(search_line4[cntr])
 27403  00402A  D017               	goto	l1586
 27404  00402C                     
 27405                           ;display.c: 387: display_content[3][cntr] = search_line4[cntr++];
 27406  00402C  5001               	movf	__display_search@cntr,w,c
 27407  00402E  0D01               	mullw	1
 27408  004030  0E59               	movlw	low _search_line4
 27409  004032  24F3               	addwf	prodl,w,c
 27410  004034  6EF6               	movwf	tblptrl,c
 27411  004036  0E8E               	movlw	high _search_line4
 27412  004038  20F4               	addwfc	prodh,w,c
 27413  00403A  6EF7               	movwf	tblptrh,c
 27414  00403C                     	if	1	;There are 3 active tblptr bytes
 27415  00403C  6AF8               	clrf	tblptru,c
 27416  00403E  0E00               	movlw	low (__mediumconst shr (0+16))
 27417  004040  22F8               	addwfc	tblptru,f,c
 27418  004042                     	endif
 27419  004042  5001               	movf	__display_search@cntr,w,c
 27420  004044  0D01               	mullw	1
 27421  004046  0E3C               	movlw	low (_display_content+60)
 27422  004048  24F3               	addwf	prodl,w,c
 27423  00404A  6ED9               	movwf	fsr2l,c
 27424  00404C  0E02               	movlw	high (_display_content+60)
 27425  00404E  20F4               	addwfc	prodh,w,c
 27426  004050  6EDA               	movwf	fsr2h,c
 27427  004052  0008               	tblrd		*
 27428  004054  CFF5 FFDF          	movff	tablat,indf2
 27429  004058  2A01               	incf	__display_search@cntr,f,c
 27430  00405A                     l1586:
 27431  00405A  5001               	movf	__display_search@cntr,w,c
 27432  00405C  0D01               	mullw	1
 27433  00405E  0E59               	movlw	low _search_line4
 27434  004060  24F3               	addwf	prodl,w,c
 27435  004062  6EF6               	movwf	tblptrl,c
 27436  004064  0E8E               	movlw	high _search_line4
 27437  004066  20F4               	addwfc	prodh,w,c
 27438  004068  6EF7               	movwf	tblptrh,c
 27439  00406A                     	if	1	;There are 3 active tblptr bytes
 27440  00406A  6AF8               	clrf	tblptru,c
 27441  00406C  0E00               	movlw	low (__mediumconst shr (0+16))
 27442  00406E  22F8               	addwfc	tblptru,f,c
 27443  004070                     	endif
 27444  004070  0008               	tblrd		*
 27445  004072  50F5               	movf	tablat,w,c
 27446  004074  0900               	iorlw	0
 27447  004076  B4D8               	btfsc	status,2,c
 27448  004078  0012               	return	
 27449  00407A  D7D8               	goto	l1587
 27450  00407C                     __end_of__display_search:
 27451                           	opt stack 0
 27452                           tosu	equ	0xFFF
 27453                           tosh	equ	0xFFE
 27454                           tosl	equ	0xFFD
 27455                           pclath	equ	0xFFA
 27456                           tblptru	equ	0xFF8
 27457                           tblptrh	equ	0xFF7
 27458                           tblptrl	equ	0xFF6
 27459                           tablat	equ	0xFF5
 27460                           prodh	equ	0xFF4
 27461                           prodl	equ	0xFF3
 27462                           intcon	equ	0xFF2
 27463                           intcon2	equ	0xFF1
 27464                           intcon3	equ	0xFF0
 27465                           indf0	equ	0xFEF
 27466                           postinc0	equ	0xFEE
 27467                           fsr0h	equ	0xFEA
 27468                           fsr0l	equ	0xFE9
 27469                           wreg	equ	0xFE8
 27470                           indf1	equ	0xFE7
 27471                           postdec1	equ	0xFE5
 27472                           plusw1	equ	0xFE3
 27473                           fsr1h	equ	0xFE2
 27474                           fsr1l	equ	0xFE1
 27475                           indf2	equ	0xFDF
 27476                           postinc2	equ	0xFDE
 27477                           postdec2	equ	0xFDD
 27478                           plusw2	equ	0xFDB
 27479                           fsr2h	equ	0xFDA
 27480                           fsr2l	equ	0xFD9
 27481                           status	equ	0xFD8
 27482                           
 27483 ;; *************** function __display_rebooting *****************
 27484 ;; Defined at:
 27485 ;;		line 547 in file "display.c"
 27486 ;; Parameters:    Size  Location     Type
 27487 ;;		None
 27488 ;; Auto vars:     Size  Location     Type
 27489 ;;  cntr            1    0[COMRAM] unsigned char 
 27490 ;; Return value:  Size  Location     Type
 27491 ;;                  1    wreg      void 
 27492 ;; Registers used:
 27493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27494 ;; Tracked objects:
 27495 ;;		On entry : 0/0
 27496 ;;		On exit  : 0/0
 27497 ;;		Unchanged: 0/0
 27498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27503 ;;Total ram usage:        1 bytes
 27504 ;; Hardware stack levels used:    1
 27505 ;; This function calls:
 27506 ;;		Nothing
 27507 ;; This function is called by:
 27508 ;;		_display_prepare
 27509 ;; This function uses a non-reentrant model
 27510 ;;
 27511                           
 27512                           	psect	text134
 27513  007BA2                     __ptext134:
 27514                           	opt stack 0
 27515  007BA2                     __display_rebooting:
 27516                           	opt stack 26
 27517                           
 27518                           ;display.c: 549: uint8_t cntr;;display.c: 550: cntr = 0;
 27519                           
 27520                           ;incstack = 0
 27521  007BA2  0E00               	movlw	0
 27522  007BA4  6E01               	movwf	__display_rebooting@cntr,c
 27523                           
 27524                           ;display.c: 551: while(reboot_line1[cntr])
 27525  007BA6  D017               	goto	l1701
 27526  007BA8                     
 27527                           ;display.c: 552: display_content[0][cntr] = reboot_line1[cntr++];
 27528  007BA8  5001               	movf	__display_rebooting@cntr,w,c
 27529  007BAA  0D01               	mullw	1
 27530  007BAC  0E3F               	movlw	low _reboot_line1
 27531  007BAE  24F3               	addwf	prodl,w,c
 27532  007BB0  6EF6               	movwf	tblptrl,c
 27533  007BB2  0E8E               	movlw	high _reboot_line1
 27534  007BB4  20F4               	addwfc	prodh,w,c
 27535  007BB6  6EF7               	movwf	tblptrh,c
 27536  007BB8                     	if	1	;There are 3 active tblptr bytes
 27537  007BB8  6AF8               	clrf	tblptru,c
 27538  007BBA  0E00               	movlw	low (__mediumconst shr (0+16))
 27539  007BBC  22F8               	addwfc	tblptru,f,c
 27540  007BBE                     	endif
 27541  007BBE  5001               	movf	__display_rebooting@cntr,w,c
 27542  007BC0  0D01               	mullw	1
 27543  007BC2  0E00               	movlw	low _display_content
 27544  007BC4  24F3               	addwf	prodl,w,c
 27545  007BC6  6ED9               	movwf	fsr2l,c
 27546  007BC8  0E02               	movlw	high _display_content
 27547  007BCA  20F4               	addwfc	prodh,w,c
 27548  007BCC  6EDA               	movwf	fsr2h,c
 27549  007BCE  0008               	tblrd		*
 27550  007BD0  CFF5 FFDF          	movff	tablat,indf2
 27551  007BD4  2A01               	incf	__display_rebooting@cntr,f,c
 27552  007BD6                     l1701:
 27553  007BD6  5001               	movf	__display_rebooting@cntr,w,c
 27554  007BD8  0D01               	mullw	1
 27555  007BDA  0E3F               	movlw	low _reboot_line1
 27556  007BDC  24F3               	addwf	prodl,w,c
 27557  007BDE  6EF6               	movwf	tblptrl,c
 27558  007BE0  0E8E               	movlw	high _reboot_line1
 27559  007BE2  20F4               	addwfc	prodh,w,c
 27560  007BE4  6EF7               	movwf	tblptrh,c
 27561  007BE6                     	if	1	;There are 3 active tblptr bytes
 27562  007BE6  6AF8               	clrf	tblptru,c
 27563  007BE8  0E00               	movlw	low (__mediumconst shr (0+16))
 27564  007BEA  22F8               	addwfc	tblptru,f,c
 27565  007BEC                     	endif
 27566  007BEC  0008               	tblrd		*
 27567  007BEE  50F5               	movf	tablat,w,c
 27568  007BF0  0900               	iorlw	0
 27569  007BF2  B4D8               	btfsc	status,2,c
 27570  007BF4  0012               	return	
 27571  007BF6  D7D8               	goto	l1702
 27572  007BF8                     __end_of__display_rebooting:
 27573                           	opt stack 0
 27574                           tosu	equ	0xFFF
 27575                           tosh	equ	0xFFE
 27576                           tosl	equ	0xFFD
 27577                           pclath	equ	0xFFA
 27578                           tblptru	equ	0xFF8
 27579                           tblptrh	equ	0xFF7
 27580                           tblptrl	equ	0xFF6
 27581                           tablat	equ	0xFF5
 27582                           prodh	equ	0xFF4
 27583                           prodl	equ	0xFF3
 27584                           intcon	equ	0xFF2
 27585                           intcon2	equ	0xFF1
 27586                           intcon3	equ	0xFF0
 27587                           indf0	equ	0xFEF
 27588                           postinc0	equ	0xFEE
 27589                           fsr0h	equ	0xFEA
 27590                           fsr0l	equ	0xFE9
 27591                           wreg	equ	0xFE8
 27592                           indf1	equ	0xFE7
 27593                           postdec1	equ	0xFE5
 27594                           plusw1	equ	0xFE3
 27595                           fsr1h	equ	0xFE2
 27596                           fsr1l	equ	0xFE1
 27597                           indf2	equ	0xFDF
 27598                           postinc2	equ	0xFDE
 27599                           postdec2	equ	0xFDD
 27600                           plusw2	equ	0xFDB
 27601                           fsr2h	equ	0xFDA
 27602                           fsr2l	equ	0xFD9
 27603                           status	equ	0xFD8
 27604                           
 27605 ;; *************** function __display_programming *****************
 27606 ;; Defined at:
 27607 ;;		line 505 in file "display.c"
 27608 ;; Parameters:    Size  Location     Type
 27609 ;;		None
 27610 ;; Auto vars:     Size  Location     Type
 27611 ;;  cntr            1   30[COMRAM] unsigned char 
 27612 ;; Return value:  Size  Location     Type
 27613 ;;                  1    wreg      void 
 27614 ;; Registers used:
 27615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27616 ;; Tracked objects:
 27617 ;;		On entry : 0/0
 27618 ;;		On exit  : 0/0
 27619 ;;		Unchanged: 0/0
 27620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27625 ;;Total ram usage:        1 bytes
 27626 ;; Hardware stack levels used:    1
 27627 ;; Hardware stack levels required when called:    4
 27628 ;; This function calls:
 27629 ;;		__display_itoa_u16
 27630 ;;		_bootloader_get_entries
 27631 ;;		_bootloader_get_flashPagesWritten
 27632 ;;		_bootloader_get_total_entries
 27633 ;; This function is called by:
 27634 ;;		_display_prepare
 27635 ;; This function uses a non-reentrant model
 27636 ;;
 27637                           
 27638                           	psect	text135
 27639  003420                     __ptext135:
 27640                           	opt stack 0
 27641  003420                     __display_programming:
 27642                           	opt stack 22
 27643                           
 27644                           ;display.c: 507: uint8_t cntr;;display.c: 508: cntr = 0;
 27645                           
 27646                           ;incstack = 0
 27647  003420  0E00               	movlw	0
 27648  003422  6E1F               	movwf	__display_programming@cntr,c
 27649                           
 27650                           ;display.c: 509: while(programming_line1[cntr])
 27651  003424  D017               	goto	l1671
 27652  003426                     
 27653                           ;display.c: 510: display_content[0][cntr] = programming_line1[cntr++];
 27654  003426  501F               	movf	__display_programming@cntr,w,c
 27655  003428  0D01               	mullw	1
 27656  00342A  0E94               	movlw	low _programming_line1
 27657  00342C  24F3               	addwf	prodl,w,c
 27658  00342E  6EF6               	movwf	tblptrl,c
 27659  003430  0E8D               	movlw	high _programming_line1
 27660  003432  20F4               	addwfc	prodh,w,c
 27661  003434  6EF7               	movwf	tblptrh,c
 27662  003436                     	if	1	;There are 3 active tblptr bytes
 27663  003436  6AF8               	clrf	tblptru,c
 27664  003438  0E00               	movlw	low (__mediumconst shr (0+16))
 27665  00343A  22F8               	addwfc	tblptru,f,c
 27666  00343C                     	endif
 27667  00343C  501F               	movf	__display_programming@cntr,w,c
 27668  00343E  0D01               	mullw	1
 27669  003440  0E00               	movlw	low _display_content
 27670  003442  24F3               	addwf	prodl,w,c
 27671  003444  6ED9               	movwf	fsr2l,c
 27672  003446  0E02               	movlw	high _display_content
 27673  003448  20F4               	addwfc	prodh,w,c
 27674  00344A  6EDA               	movwf	fsr2h,c
 27675  00344C  0008               	tblrd		*
 27676  00344E  CFF5 FFDF          	movff	tablat,indf2
 27677  003452  2A1F               	incf	__display_programming@cntr,f,c
 27678  003454                     l1671:
 27679  003454  501F               	movf	__display_programming@cntr,w,c
 27680  003456  0D01               	mullw	1
 27681  003458  0E94               	movlw	low _programming_line1
 27682  00345A  24F3               	addwf	prodl,w,c
 27683  00345C  6EF6               	movwf	tblptrl,c
 27684  00345E  0E8D               	movlw	high _programming_line1
 27685  003460  20F4               	addwfc	prodh,w,c
 27686  003462  6EF7               	movwf	tblptrh,c
 27687  003464                     	if	1	;There are 3 active tblptr bytes
 27688  003464  6AF8               	clrf	tblptru,c
 27689  003466  0E00               	movlw	low (__mediumconst shr (0+16))
 27690  003468  22F8               	addwfc	tblptru,f,c
 27691  00346A                     	endif
 27692  00346A  0008               	tblrd		*
 27693  00346C  50F5               	movf	tablat,w,c
 27694  00346E  0900               	iorlw	0
 27695  003470  A4D8               	btfss	status,2,c
 27696  003472  D7D9               	goto	l1672
 27697                           
 27698                           ;display.c: 512: cntr = 0;
 27699  003474  0E00               	movlw	0
 27700  003476  6E1F               	movwf	__display_programming@cntr,c
 27701                           
 27702                           ;display.c: 513: while(programming_line2[cntr])
 27703  003478  D017               	goto	l1674
 27704  00347A                     
 27705                           ;display.c: 514: display_content[1][cntr] = programming_line2[cntr++];
 27706  00347A  501F               	movf	__display_programming@cntr,w,c
 27707  00347C  0D01               	mullw	1
 27708  00347E  0EFC               	movlw	low _programming_line2
 27709  003480  24F3               	addwf	prodl,w,c
 27710  003482  6EF6               	movwf	tblptrl,c
 27711  003484  0E8C               	movlw	high _programming_line2
 27712  003486  20F4               	addwfc	prodh,w,c
 27713  003488  6EF7               	movwf	tblptrh,c
 27714  00348A                     	if	1	;There are 3 active tblptr bytes
 27715  00348A  6AF8               	clrf	tblptru,c
 27716  00348C  0E00               	movlw	low (__mediumconst shr (0+16))
 27717  00348E  22F8               	addwfc	tblptru,f,c
 27718  003490                     	endif
 27719  003490  501F               	movf	__display_programming@cntr,w,c
 27720  003492  0D01               	mullw	1
 27721  003494  0E14               	movlw	low (_display_content+20)
 27722  003496  24F3               	addwf	prodl,w,c
 27723  003498  6ED9               	movwf	fsr2l,c
 27724  00349A  0E02               	movlw	high (_display_content+20)
 27725  00349C  20F4               	addwfc	prodh,w,c
 27726  00349E  6EDA               	movwf	fsr2h,c
 27727  0034A0  0008               	tblrd		*
 27728  0034A2  CFF5 FFDF          	movff	tablat,indf2
 27729  0034A6  2A1F               	incf	__display_programming@cntr,f,c
 27730  0034A8                     l1674:
 27731  0034A8  501F               	movf	__display_programming@cntr,w,c
 27732  0034AA  0D01               	mullw	1
 27733  0034AC  0EFC               	movlw	low _programming_line2
 27734  0034AE  24F3               	addwf	prodl,w,c
 27735  0034B0  6EF6               	movwf	tblptrl,c
 27736  0034B2  0E8C               	movlw	high _programming_line2
 27737  0034B4  20F4               	addwfc	prodh,w,c
 27738  0034B6  6EF7               	movwf	tblptrh,c
 27739  0034B8                     	if	1	;There are 3 active tblptr bytes
 27740  0034B8  6AF8               	clrf	tblptru,c
 27741  0034BA  0E00               	movlw	low (__mediumconst shr (0+16))
 27742  0034BC  22F8               	addwfc	tblptru,f,c
 27743  0034BE                     	endif
 27744  0034BE  0008               	tblrd		*
 27745  0034C0  50F5               	movf	tablat,w,c
 27746  0034C2  0900               	iorlw	0
 27747  0034C4  A4D8               	btfss	status,2,c
 27748  0034C6  D7D9               	goto	l1675
 27749                           
 27750                           ;display.c: 516: cntr = 0;
 27751  0034C8  0E00               	movlw	0
 27752  0034CA  6E1F               	movwf	__display_programming@cntr,c
 27753                           
 27754                           ;display.c: 517: while(programming_line3[cntr])
 27755  0034CC  D017               	goto	l1677
 27756  0034CE                     
 27757                           ;display.c: 518: display_content[2][cntr] = programming_line3[cntr++];
 27758  0034CE  501F               	movf	__display_programming@cntr,w,c
 27759  0034D0  0D01               	mullw	1
 27760  0034D2  0E83               	movlw	low _programming_line3
 27761  0034D4  24F3               	addwf	prodl,w,c
 27762  0034D6  6EF6               	movwf	tblptrl,c
 27763  0034D8  0E8E               	movlw	high _programming_line3
 27764  0034DA  20F4               	addwfc	prodh,w,c
 27765  0034DC  6EF7               	movwf	tblptrh,c
 27766  0034DE                     	if	1	;There are 3 active tblptr bytes
 27767  0034DE  6AF8               	clrf	tblptru,c
 27768  0034E0  0E00               	movlw	low (__mediumconst shr (0+16))
 27769  0034E2  22F8               	addwfc	tblptru,f,c
 27770  0034E4                     	endif
 27771  0034E4  501F               	movf	__display_programming@cntr,w,c
 27772  0034E6  0D01               	mullw	1
 27773  0034E8  0E28               	movlw	low (_display_content+40)
 27774  0034EA  24F3               	addwf	prodl,w,c
 27775  0034EC  6ED9               	movwf	fsr2l,c
 27776  0034EE  0E02               	movlw	high (_display_content+40)
 27777  0034F0  20F4               	addwfc	prodh,w,c
 27778  0034F2  6EDA               	movwf	fsr2h,c
 27779  0034F4  0008               	tblrd		*
 27780  0034F6  CFF5 FFDF          	movff	tablat,indf2
 27781  0034FA  2A1F               	incf	__display_programming@cntr,f,c
 27782  0034FC                     l1677:
 27783  0034FC  501F               	movf	__display_programming@cntr,w,c
 27784  0034FE  0D01               	mullw	1
 27785  003500  0E83               	movlw	low _programming_line3
 27786  003502  24F3               	addwf	prodl,w,c
 27787  003504  6EF6               	movwf	tblptrl,c
 27788  003506  0E8E               	movlw	high _programming_line3
 27789  003508  20F4               	addwfc	prodh,w,c
 27790  00350A  6EF7               	movwf	tblptrh,c
 27791  00350C                     	if	1	;There are 3 active tblptr bytes
 27792  00350C  6AF8               	clrf	tblptru,c
 27793  00350E  0E00               	movlw	low (__mediumconst shr (0+16))
 27794  003510  22F8               	addwfc	tblptru,f,c
 27795  003512                     	endif
 27796  003512  0008               	tblrd		*
 27797  003514  50F5               	movf	tablat,w,c
 27798  003516  0900               	iorlw	0
 27799  003518  A4D8               	btfss	status,2,c
 27800  00351A  D7D9               	goto	l1678
 27801                           
 27802                           ;display.c: 519: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 27803  00351C  ECA7  F044         	call	_bootloader_get_entries	;wreg free
 27804  003520  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27805  003524  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27806  003528  6A1B               	clrf	__display_itoa_u16@value+2,c
 27807  00352A  6A1C               	clrf	__display_itoa_u16@value+3,c
 27808  00352C  501F               	movf	__display_programming@cntr,w,c
 27809  00352E  0D01               	mullw	1
 27810  003530  0E28               	movlw	low (_display_content+40)
 27811  003532  24F3               	addwf	prodl,w,c
 27812  003534  6E1D               	movwf	__display_itoa_u16@text,c
 27813  003536  0E02               	movlw	high (_display_content+40)
 27814  003538  20F4               	addwfc	prodh,w,c
 27815  00353A  6E1E               	movwf	__display_itoa_u16@text+1,c
 27816  00353C  EC4F  F02E         	call	__display_itoa_u16	;wreg free
 27817  003540  261F               	addwf	__display_programming@cntr,f,c
 27818                           
 27819                           ;display.c: 520: display_content[2][cntr++] = '/';
 27820  003542  501F               	movf	__display_programming@cntr,w,c
 27821  003544  0D01               	mullw	1
 27822  003546  0E28               	movlw	low (_display_content+40)
 27823  003548  24F3               	addwf	prodl,w,c
 27824  00354A  6ED9               	movwf	fsr2l,c
 27825  00354C  0E02               	movlw	high (_display_content+40)
 27826  00354E  20F4               	addwfc	prodh,w,c
 27827  003550  6EDA               	movwf	fsr2h,c
 27828  003552  0E2F               	movlw	47
 27829  003554  6EDF               	movwf	indf2,c
 27830  003556  2A1F               	incf	__display_programming@cntr,f,c
 27831                           
 27832                           ;display.c: 521: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 27833  003558  ECB1  F044         	call	_bootloader_get_total_entries	;wreg free
 27834  00355C  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 27835  003560  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 27836  003564  6A1B               	clrf	__display_itoa_u16@value+2,c
 27837  003566  6A1C               	clrf	__display_itoa_u16@value+3,c
 27838  003568  501F               	movf	__display_programming@cntr,w,c
 27839  00356A  0D01               	mullw	1
 27840  00356C  0E28               	movlw	low (_display_content+40)
 27841  00356E  24F3               	addwf	prodl,w,c
 27842  003570  6E1D               	movwf	__display_itoa_u16@text,c
 27843  003572  0E02               	movlw	high (_display_content+40)
 27844  003574  20F4               	addwfc	prodh,w,c
 27845  003576  6E1E               	movwf	__display_itoa_u16@text+1,c
 27846  003578  EC4F  F02E         	call	__display_itoa_u16	;wreg free
 27847                           
 27848                           ;display.c: 523: cntr = 0;
 27849  00357C  0E00               	movlw	0
 27850  00357E  6E1F               	movwf	__display_programming@cntr,c
 27851                           
 27852                           ;display.c: 524: while(programming_line4[cntr])
 27853  003580  D017               	goto	l1680
 27854  003582                     
 27855                           ;display.c: 525: display_content[3][cntr] = programming_line4[cntr++];
 27856  003582  501F               	movf	__display_programming@cntr,w,c
 27857  003584  0D01               	mullw	1
 27858  003586  0E84               	movlw	low _programming_line4
 27859  003588  24F3               	addwf	prodl,w,c
 27860  00358A  6EF6               	movwf	tblptrl,c
 27861  00358C  0E8D               	movlw	high _programming_line4
 27862  00358E  20F4               	addwfc	prodh,w,c
 27863  003590  6EF7               	movwf	tblptrh,c
 27864  003592                     	if	1	;There are 3 active tblptr bytes
 27865  003592  6AF8               	clrf	tblptru,c
 27866  003594  0E00               	movlw	low (__mediumconst shr (0+16))
 27867  003596  22F8               	addwfc	tblptru,f,c
 27868  003598                     	endif
 27869  003598  501F               	movf	__display_programming@cntr,w,c
 27870  00359A  0D01               	mullw	1
 27871  00359C  0E3C               	movlw	low (_display_content+60)
 27872  00359E  24F3               	addwf	prodl,w,c
 27873  0035A0  6ED9               	movwf	fsr2l,c
 27874  0035A2  0E02               	movlw	high (_display_content+60)
 27875  0035A4  20F4               	addwfc	prodh,w,c
 27876  0035A6  6EDA               	movwf	fsr2h,c
 27877  0035A8  0008               	tblrd		*
 27878  0035AA  CFF5 FFDF          	movff	tablat,indf2
 27879  0035AE  2A1F               	incf	__display_programming@cntr,f,c
 27880  0035B0                     l1680:
 27881  0035B0  501F               	movf	__display_programming@cntr,w,c
 27882  0035B2  0D01               	mullw	1
 27883  0035B4  0E84               	movlw	low _programming_line4
 27884  0035B6  24F3               	addwf	prodl,w,c
 27885  0035B8  6EF6               	movwf	tblptrl,c
 27886  0035BA  0E8D               	movlw	high _programming_line4
 27887  0035BC  20F4               	addwfc	prodh,w,c
 27888  0035BE  6EF7               	movwf	tblptrh,c
 27889  0035C0                     	if	1	;There are 3 active tblptr bytes
 27890  0035C0  6AF8               	clrf	tblptru,c
 27891  0035C2  0E00               	movlw	low (__mediumconst shr (0+16))
 27892  0035C4  22F8               	addwfc	tblptru,f,c
 27893  0035C6                     	endif
 27894  0035C6  0008               	tblrd		*
 27895  0035C8  50F5               	movf	tablat,w,c
 27896  0035CA  0900               	iorlw	0
 27897  0035CC  A4D8               	btfss	status,2,c
 27898  0035CE  D7D9               	goto	l1681
 27899                           
 27900                           ;display.c: 526: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 27901  0035D0  ECAC  F044         	call	_bootloader_get_flashPagesWritten	;wreg free
 27902  0035D4  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 27903  0035D8  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 27904  0035DC  6A1B               	clrf	__display_itoa_u16@value+2,c
 27905  0035DE  6A1C               	clrf	__display_itoa_u16@value+3,c
 27906  0035E0  501F               	movf	__display_programming@cntr,w,c
 27907  0035E2  0D01               	mullw	1
 27908  0035E4  0E3C               	movlw	low (_display_content+60)
 27909  0035E6  24F3               	addwf	prodl,w,c
 27910  0035E8  6E1D               	movwf	__display_itoa_u16@text,c
 27911  0035EA  0E02               	movlw	high (_display_content+60)
 27912  0035EC  20F4               	addwfc	prodh,w,c
 27913  0035EE  6E1E               	movwf	__display_itoa_u16@text+1,c
 27914  0035F0  EC4F  F02E         	call	__display_itoa_u16	;wreg free
 27915  0035F4  0012               	return		;funcret
 27916  0035F6                     __end_of__display_programming:
 27917                           	opt stack 0
 27918                           tosu	equ	0xFFF
 27919                           tosh	equ	0xFFE
 27920                           tosl	equ	0xFFD
 27921                           pclath	equ	0xFFA
 27922                           tblptru	equ	0xFF8
 27923                           tblptrh	equ	0xFF7
 27924                           tblptrl	equ	0xFF6
 27925                           tablat	equ	0xFF5
 27926                           prodh	equ	0xFF4
 27927                           prodl	equ	0xFF3
 27928                           intcon	equ	0xFF2
 27929                           intcon2	equ	0xFF1
 27930                           intcon3	equ	0xFF0
 27931                           indf0	equ	0xFEF
 27932                           postinc0	equ	0xFEE
 27933                           fsr0h	equ	0xFEA
 27934                           fsr0l	equ	0xFE9
 27935                           wreg	equ	0xFE8
 27936                           indf1	equ	0xFE7
 27937                           postdec1	equ	0xFE5
 27938                           plusw1	equ	0xFE3
 27939                           fsr1h	equ	0xFE2
 27940                           fsr1l	equ	0xFE1
 27941                           indf2	equ	0xFDF
 27942                           postinc2	equ	0xFDE
 27943                           postdec2	equ	0xFDD
 27944                           plusw2	equ	0xFDB
 27945                           fsr2h	equ	0xFDA
 27946                           fsr2l	equ	0xFD9
 27947                           status	equ	0xFD8
 27948                           
 27949 ;; *************** function __display_found *****************
 27950 ;; Defined at:
 27951 ;;		line 390 in file "display.c"
 27952 ;; Parameters:    Size  Location     Type
 27953 ;;		None
 27954 ;; Auto vars:     Size  Location     Type
 27955 ;;  cntr            1   39[COMRAM] unsigned char 
 27956 ;;  start           1   38[COMRAM] unsigned char 
 27957 ;; Return value:  Size  Location     Type
 27958 ;;                  1    wreg      void 
 27959 ;; Registers used:
 27960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27961 ;; Tracked objects:
 27962 ;;		On entry : 0/0
 27963 ;;		On exit  : 0/0
 27964 ;;		Unchanged: 0/0
 27965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27968 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27970 ;;Total ram usage:        4 bytes
 27971 ;; Hardware stack levels used:    1
 27972 ;; Hardware stack levels required when called:    5
 27973 ;; This function calls:
 27974 ;;		__display_itoa_u32
 27975 ;;		_bootloader_get_file_size
 27976 ;; This function is called by:
 27977 ;;		_display_prepare
 27978 ;; This function uses a non-reentrant model
 27979 ;;
 27980                           
 27981                           	psect	text136
 27982  003068                     __ptext136:
 27983                           	opt stack 0
 27984  003068                     __display_found:
 27985                           	opt stack 21
 27986                           
 27987                           ;display.c: 392: uint8_t cntr;;display.c: 393: uint8_t start;;display.c: 395: cntr = 0;
 27988                           
 27989                           ;incstack = 0
 27990  003068  0E00               	movlw	0
 27991  00306A  6E28               	movwf	__display_found@cntr,c
 27992                           
 27993                           ;display.c: 396: while(found_line1[cntr])
 27994  00306C  D017               	goto	l1592
 27995  00306E                     
 27996                           ;display.c: 397: display_content[0][cntr] = found_line1[cntr++];
 27997  00306E  5028               	movf	__display_found@cntr,w,c
 27998  003070  0D01               	mullw	1
 27999  003072  0ED4               	movlw	low _found_line1
 28000  003074  24F3               	addwf	prodl,w,c
 28001  003076  6EF6               	movwf	tblptrl,c
 28002  003078  0E8D               	movlw	high _found_line1
 28003  00307A  20F4               	addwfc	prodh,w,c
 28004  00307C  6EF7               	movwf	tblptrh,c
 28005  00307E                     	if	1	;There are 3 active tblptr bytes
 28006  00307E  6AF8               	clrf	tblptru,c
 28007  003080  0E00               	movlw	low (__mediumconst shr (0+16))
 28008  003082  22F8               	addwfc	tblptru,f,c
 28009  003084                     	endif
 28010  003084  5028               	movf	__display_found@cntr,w,c
 28011  003086  0D01               	mullw	1
 28012  003088  0E00               	movlw	low _display_content
 28013  00308A  24F3               	addwf	prodl,w,c
 28014  00308C  6ED9               	movwf	fsr2l,c
 28015  00308E  0E02               	movlw	high _display_content
 28016  003090  20F4               	addwfc	prodh,w,c
 28017  003092  6EDA               	movwf	fsr2h,c
 28018  003094  0008               	tblrd		*
 28019  003096  CFF5 FFDF          	movff	tablat,indf2
 28020  00309A  2A28               	incf	__display_found@cntr,f,c
 28021  00309C                     l1592:
 28022  00309C  5028               	movf	__display_found@cntr,w,c
 28023  00309E  0D01               	mullw	1
 28024  0030A0  0ED4               	movlw	low _found_line1
 28025  0030A2  24F3               	addwf	prodl,w,c
 28026  0030A4  6EF6               	movwf	tblptrl,c
 28027  0030A6  0E8D               	movlw	high _found_line1
 28028  0030A8  20F4               	addwfc	prodh,w,c
 28029  0030AA  6EF7               	movwf	tblptrh,c
 28030  0030AC                     	if	1	;There are 3 active tblptr bytes
 28031  0030AC  6AF8               	clrf	tblptru,c
 28032  0030AE  0E00               	movlw	low (__mediumconst shr (0+16))
 28033  0030B0  22F8               	addwfc	tblptru,f,c
 28034  0030B2                     	endif
 28035  0030B2  0008               	tblrd		*
 28036  0030B4  50F5               	movf	tablat,w,c
 28037  0030B6  0900               	iorlw	0
 28038  0030B8  A4D8               	btfss	status,2,c
 28039  0030BA  D7D9               	goto	l1593
 28040                           
 28041                           ;display.c: 399: cntr = 0;
 28042  0030BC  0E00               	movlw	0
 28043  0030BE  6E28               	movwf	__display_found@cntr,c
 28044                           
 28045                           ;display.c: 400: while(found_line2[cntr])
 28046  0030C0  D017               	goto	l1595
 28047  0030C2                     
 28048                           ;display.c: 401: display_content[1][cntr] = found_line2[cntr++];
 28049  0030C2  5028               	movf	__display_found@cntr,w,c
 28050  0030C4  0D01               	mullw	1
 28051  0030C6  0EE9               	movlw	low _found_line2
 28052  0030C8  24F3               	addwf	prodl,w,c
 28053  0030CA  6EF6               	movwf	tblptrl,c
 28054  0030CC  0E8C               	movlw	high _found_line2
 28055  0030CE  20F4               	addwfc	prodh,w,c
 28056  0030D0  6EF7               	movwf	tblptrh,c
 28057  0030D2                     	if	1	;There are 3 active tblptr bytes
 28058  0030D2  6AF8               	clrf	tblptru,c
 28059  0030D4  0E00               	movlw	low (__mediumconst shr (0+16))
 28060  0030D6  22F8               	addwfc	tblptru,f,c
 28061  0030D8                     	endif
 28062  0030D8  5028               	movf	__display_found@cntr,w,c
 28063  0030DA  0D01               	mullw	1
 28064  0030DC  0E14               	movlw	low (_display_content+20)
 28065  0030DE  24F3               	addwf	prodl,w,c
 28066  0030E0  6ED9               	movwf	fsr2l,c
 28067  0030E2  0E02               	movlw	high (_display_content+20)
 28068  0030E4  20F4               	addwfc	prodh,w,c
 28069  0030E6  6EDA               	movwf	fsr2h,c
 28070  0030E8  0008               	tblrd		*
 28071  0030EA  CFF5 FFDF          	movff	tablat,indf2
 28072  0030EE  2A28               	incf	__display_found@cntr,f,c
 28073  0030F0                     l1595:
 28074  0030F0  5028               	movf	__display_found@cntr,w,c
 28075  0030F2  0D01               	mullw	1
 28076  0030F4  0EE9               	movlw	low _found_line2
 28077  0030F6  24F3               	addwf	prodl,w,c
 28078  0030F8  6EF6               	movwf	tblptrl,c
 28079  0030FA  0E8C               	movlw	high _found_line2
 28080  0030FC  20F4               	addwfc	prodh,w,c
 28081  0030FE  6EF7               	movwf	tblptrh,c
 28082  003100                     	if	1	;There are 3 active tblptr bytes
 28083  003100  6AF8               	clrf	tblptru,c
 28084  003102  0E00               	movlw	low (__mediumconst shr (0+16))
 28085  003104  22F8               	addwfc	tblptru,f,c
 28086  003106                     	endif
 28087  003106  0008               	tblrd		*
 28088  003108  50F5               	movf	tablat,w,c
 28089  00310A  0900               	iorlw	0
 28090  00310C  A4D8               	btfss	status,2,c
 28091  00310E  D7D9               	goto	l1596
 28092                           
 28093                           ;display.c: 403: cntr = 0;
 28094  003110  0E00               	movlw	0
 28095  003112  6E28               	movwf	__display_found@cntr,c
 28096                           
 28097                           ;display.c: 404: while(found_line3[cntr])
 28098  003114  D017               	goto	l1598
 28099  003116                     
 28100                           ;display.c: 405: display_content[2][cntr] = found_line3[cntr++];
 28101  003116  5028               	movf	__display_found@cntr,w,c
 28102  003118  0D01               	mullw	1
 28103  00311A  0E98               	movlw	low _found_line3
 28104  00311C  24F3               	addwf	prodl,w,c
 28105  00311E  6EF6               	movwf	tblptrl,c
 28106  003120  0E8E               	movlw	high _found_line3
 28107  003122  20F4               	addwfc	prodh,w,c
 28108  003124  6EF7               	movwf	tblptrh,c
 28109  003126                     	if	1	;There are 3 active tblptr bytes
 28110  003126  6AF8               	clrf	tblptru,c
 28111  003128  0E00               	movlw	low (__mediumconst shr (0+16))
 28112  00312A  22F8               	addwfc	tblptru,f,c
 28113  00312C                     	endif
 28114  00312C  5028               	movf	__display_found@cntr,w,c
 28115  00312E  0D01               	mullw	1
 28116  003130  0E28               	movlw	low (_display_content+40)
 28117  003132  24F3               	addwf	prodl,w,c
 28118  003134  6ED9               	movwf	fsr2l,c
 28119  003136  0E02               	movlw	high (_display_content+40)
 28120  003138  20F4               	addwfc	prodh,w,c
 28121  00313A  6EDA               	movwf	fsr2h,c
 28122  00313C  0008               	tblrd		*
 28123  00313E  CFF5 FFDF          	movff	tablat,indf2
 28124  003142  2A28               	incf	__display_found@cntr,f,c
 28125  003144                     l1598:
 28126  003144  5028               	movf	__display_found@cntr,w,c
 28127  003146  0D01               	mullw	1
 28128  003148  0E98               	movlw	low _found_line3
 28129  00314A  24F3               	addwf	prodl,w,c
 28130  00314C  6EF6               	movwf	tblptrl,c
 28131  00314E  0E8E               	movlw	high _found_line3
 28132  003150  20F4               	addwfc	prodh,w,c
 28133  003152  6EF7               	movwf	tblptrh,c
 28134  003154                     	if	1	;There are 3 active tblptr bytes
 28135  003154  6AF8               	clrf	tblptru,c
 28136  003156  0E00               	movlw	low (__mediumconst shr (0+16))
 28137  003158  22F8               	addwfc	tblptru,f,c
 28138  00315A                     	endif
 28139  00315A  0008               	tblrd		*
 28140  00315C  50F5               	movf	tablat,w,c
 28141  00315E  0900               	iorlw	0
 28142  003160  A4D8               	btfss	status,2,c
 28143  003162  D7D9               	goto	l1599
 28144                           
 28145                           ;display.c: 406: start = cntr;
 28146  003164  C028  F027         	movff	__display_found@cntr,__display_found@start
 28147                           
 28148                           ;display.c: 407: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 28149  003168  EC35  F044         	call	_bootloader_get_file_size	;wreg free
 28150  00316C  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 28151  003170  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 28152  003174  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 28153  003178  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 28154  00317C  5028               	movf	__display_found@cntr,w,c
 28155  00317E  0D01               	mullw	1
 28156  003180  0E28               	movlw	low (_display_content+40)
 28157  003182  24F3               	addwf	prodl,w,c
 28158  003184  6E23               	movwf	__display_itoa_u32@text,c
 28159  003186  0E02               	movlw	high (_display_content+40)
 28160  003188  20F4               	addwfc	prodh,w,c
 28161  00318A  6E24               	movwf	__display_itoa_u32@text+1,c
 28162  00318C  EC07  F006         	call	__display_itoa_u32	;wreg free
 28163  003190  2627               	addwf	__display_found@start,f,c
 28164                           
 28165                           ;display.c: 408: cntr = 0;
 28166  003192  0E00               	movlw	0
 28167  003194  6E28               	movwf	__display_found@cntr,c
 28168                           
 28169                           ;display.c: 409: while(found_line3b[cntr])
 28170  003196  D01C               	goto	l1601
 28171  003198                     
 28172                           ;display.c: 410: display_content[2][start+cntr] = found_line3b[cntr++];
 28173  003198  5028               	movf	__display_found@cntr,w,c
 28174  00319A  0D01               	mullw	1
 28175  00319C  0E91               	movlw	low _found_line3b
 28176  00319E  24F3               	addwf	prodl,w,c
 28177  0031A0  6EF6               	movwf	tblptrl,c
 28178  0031A2  0E8E               	movlw	high _found_line3b
 28179  0031A4  20F4               	addwfc	prodh,w,c
 28180  0031A6  6EF7               	movwf	tblptrh,c
 28181  0031A8                     	if	1	;There are 3 active tblptr bytes
 28182  0031A8  6AF8               	clrf	tblptru,c
 28183  0031AA  0E00               	movlw	low (__mediumconst shr (0+16))
 28184  0031AC  22F8               	addwfc	tblptru,f,c
 28185  0031AE                     	endif
 28186  0031AE  5028               	movf	__display_found@cntr,w,c
 28187  0031B0  C027  F025         	movff	__display_found@start,??__display_found
 28188  0031B4  6A26               	clrf	(??__display_found+1)& (0+255),c
 28189  0031B6  2625               	addwf	??__display_found,f,c
 28190  0031B8  0E00               	movlw	0
 28191  0031BA  2226               	addwfc	??__display_found+1,f,c
 28192  0031BC  0E28               	movlw	low (_display_content+40)
 28193  0031BE  2425               	addwf	??__display_found,w,c
 28194  0031C0  6ED9               	movwf	fsr2l,c
 28195  0031C2  0E02               	movlw	high (_display_content+40)
 28196  0031C4  2026               	addwfc	??__display_found+1,w,c
 28197  0031C6  6EDA               	movwf	fsr2h,c
 28198  0031C8  0008               	tblrd		*
 28199  0031CA  CFF5 FFDF          	movff	tablat,indf2
 28200  0031CE  2A28               	incf	__display_found@cntr,f,c
 28201  0031D0                     l1601:
 28202  0031D0  5028               	movf	__display_found@cntr,w,c
 28203  0031D2  0D01               	mullw	1
 28204  0031D4  0E91               	movlw	low _found_line3b
 28205  0031D6  24F3               	addwf	prodl,w,c
 28206  0031D8  6EF6               	movwf	tblptrl,c
 28207  0031DA  0E8E               	movlw	high _found_line3b
 28208  0031DC  20F4               	addwfc	prodh,w,c
 28209  0031DE  6EF7               	movwf	tblptrh,c
 28210  0031E0                     	if	1	;There are 3 active tblptr bytes
 28211  0031E0  6AF8               	clrf	tblptru,c
 28212  0031E2  0E00               	movlw	low (__mediumconst shr (0+16))
 28213  0031E4  22F8               	addwfc	tblptru,f,c
 28214  0031E6                     	endif
 28215  0031E6  0008               	tblrd		*
 28216  0031E8  50F5               	movf	tablat,w,c
 28217  0031EA  0900               	iorlw	0
 28218  0031EC  A4D8               	btfss	status,2,c
 28219  0031EE  D7D4               	goto	l1602
 28220                           
 28221                           ;display.c: 412: cntr = 0;
 28222  0031F0  0E00               	movlw	0
 28223  0031F2  6E28               	movwf	__display_found@cntr,c
 28224                           
 28225                           ;display.c: 413: while(found_line4[cntr])
 28226  0031F4  D017               	goto	l1604
 28227  0031F6                     
 28228                           ;display.c: 414: display_content[3][cntr] = found_line4[cntr++];
 28229  0031F6  5028               	movf	__display_found@cntr,w,c
 28230  0031F8  0D01               	mullw	1
 28231  0031FA  0E20               	movlw	low _found_line4
 28232  0031FC  24F3               	addwf	prodl,w,c
 28233  0031FE  6EF6               	movwf	tblptrl,c
 28234  003200  0E8D               	movlw	high _found_line4
 28235  003202  20F4               	addwfc	prodh,w,c
 28236  003204  6EF7               	movwf	tblptrh,c
 28237  003206                     	if	1	;There are 3 active tblptr bytes
 28238  003206  6AF8               	clrf	tblptru,c
 28239  003208  0E00               	movlw	low (__mediumconst shr (0+16))
 28240  00320A  22F8               	addwfc	tblptru,f,c
 28241  00320C                     	endif
 28242  00320C  5028               	movf	__display_found@cntr,w,c
 28243  00320E  0D01               	mullw	1
 28244  003210  0E3C               	movlw	low (_display_content+60)
 28245  003212  24F3               	addwf	prodl,w,c
 28246  003214  6ED9               	movwf	fsr2l,c
 28247  003216  0E02               	movlw	high (_display_content+60)
 28248  003218  20F4               	addwfc	prodh,w,c
 28249  00321A  6EDA               	movwf	fsr2h,c
 28250  00321C  0008               	tblrd		*
 28251  00321E  CFF5 FFDF          	movff	tablat,indf2
 28252  003222  2A28               	incf	__display_found@cntr,f,c
 28253  003224                     l1604:
 28254  003224  5028               	movf	__display_found@cntr,w,c
 28255  003226  0D01               	mullw	1
 28256  003228  0E20               	movlw	low _found_line4
 28257  00322A  24F3               	addwf	prodl,w,c
 28258  00322C  6EF6               	movwf	tblptrl,c
 28259  00322E  0E8D               	movlw	high _found_line4
 28260  003230  20F4               	addwfc	prodh,w,c
 28261  003232  6EF7               	movwf	tblptrh,c
 28262  003234                     	if	1	;There are 3 active tblptr bytes
 28263  003234  6AF8               	clrf	tblptru,c
 28264  003236  0E00               	movlw	low (__mediumconst shr (0+16))
 28265  003238  22F8               	addwfc	tblptru,f,c
 28266  00323A                     	endif
 28267  00323A  0008               	tblrd		*
 28268  00323C  50F5               	movf	tablat,w,c
 28269  00323E  0900               	iorlw	0
 28270  003240  B4D8               	btfsc	status,2,c
 28271  003242  0012               	return	
 28272  003244  D7D8               	goto	l1605
 28273  003246                     __end_of__display_found:
 28274                           	opt stack 0
 28275                           tosu	equ	0xFFF
 28276                           tosh	equ	0xFFE
 28277                           tosl	equ	0xFFD
 28278                           pclath	equ	0xFFA
 28279                           tblptru	equ	0xFF8
 28280                           tblptrh	equ	0xFF7
 28281                           tblptrl	equ	0xFF6
 28282                           tablat	equ	0xFF5
 28283                           prodh	equ	0xFF4
 28284                           prodl	equ	0xFF3
 28285                           intcon	equ	0xFF2
 28286                           intcon2	equ	0xFF1
 28287                           intcon3	equ	0xFF0
 28288                           indf0	equ	0xFEF
 28289                           postinc0	equ	0xFEE
 28290                           fsr0h	equ	0xFEA
 28291                           fsr0l	equ	0xFE9
 28292                           wreg	equ	0xFE8
 28293                           indf1	equ	0xFE7
 28294                           postdec1	equ	0xFE5
 28295                           plusw1	equ	0xFE3
 28296                           fsr1h	equ	0xFE2
 28297                           fsr1l	equ	0xFE1
 28298                           indf2	equ	0xFDF
 28299                           postinc2	equ	0xFDE
 28300                           postdec2	equ	0xFDD
 28301                           plusw2	equ	0xFDB
 28302                           fsr2h	equ	0xFDA
 28303                           fsr2l	equ	0xFD9
 28304                           status	equ	0xFD8
 28305                           
 28306 ;; *************** function _bootloader_get_file_size *****************
 28307 ;; Defined at:
 28308 ;;		line 457 in file "bootloader.c"
 28309 ;; Parameters:    Size  Location     Type
 28310 ;;		None
 28311 ;; Auto vars:     Size  Location     Type
 28312 ;;		None
 28313 ;; Return value:  Size  Location     Type
 28314 ;;                  4    0[COMRAM] unsigned long 
 28315 ;; Registers used:
 28316 ;;		None
 28317 ;; Tracked objects:
 28318 ;;		On entry : 0/0
 28319 ;;		On exit  : 0/0
 28320 ;;		Unchanged: 0/0
 28321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28325 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28326 ;;Total ram usage:        4 bytes
 28327 ;; Hardware stack levels used:    1
 28328 ;; This function calls:
 28329 ;;		Nothing
 28330 ;; This function is called by:
 28331 ;;		__display_found
 28332 ;;		__fill_buffer_get_bootloader_details
 28333 ;; This function uses a non-reentrant model
 28334 ;;
 28335                           
 28336                           	psect	text137
 28337  00886A                     __ptext137:
 28338                           	opt stack 0
 28339  00886A                     _bootloader_get_file_size:
 28340                           	opt stack 25
 28341                           
 28342                           ;bootloader.c: 459: return hex_file_size;
 28343                           
 28344                           ;incstack = 0
 28345  00886A  C0CB  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 28346  00886E  C0CC  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 28347  008872  C0CD  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 28348  008876  C0CE  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 28349  00887A  0012               	return		;funcret
 28350  00887C                     __end_of_bootloader_get_file_size:
 28351                           	opt stack 0
 28352                           tosu	equ	0xFFF
 28353                           tosh	equ	0xFFE
 28354                           tosl	equ	0xFFD
 28355                           pclath	equ	0xFFA
 28356                           tblptru	equ	0xFF8
 28357                           tblptrh	equ	0xFF7
 28358                           tblptrl	equ	0xFF6
 28359                           tablat	equ	0xFF5
 28360                           prodh	equ	0xFF4
 28361                           prodl	equ	0xFF3
 28362                           intcon	equ	0xFF2
 28363                           intcon2	equ	0xFF1
 28364                           intcon3	equ	0xFF0
 28365                           indf0	equ	0xFEF
 28366                           postinc0	equ	0xFEE
 28367                           fsr0h	equ	0xFEA
 28368                           fsr0l	equ	0xFE9
 28369                           wreg	equ	0xFE8
 28370                           indf1	equ	0xFE7
 28371                           postdec1	equ	0xFE5
 28372                           plusw1	equ	0xFE3
 28373                           fsr1h	equ	0xFE2
 28374                           fsr1l	equ	0xFE1
 28375                           indf2	equ	0xFDF
 28376                           postinc2	equ	0xFDE
 28377                           postdec2	equ	0xFDD
 28378                           plusw2	equ	0xFDB
 28379                           fsr2h	equ	0xFDA
 28380                           fsr2l	equ	0xFD9
 28381                           status	equ	0xFD8
 28382                           
 28383 ;; *************** function __display_failed *****************
 28384 ;; Defined at:
 28385 ;;		line 455 in file "display.c"
 28386 ;; Parameters:    Size  Location     Type
 28387 ;;		None
 28388 ;; Auto vars:     Size  Location     Type
 28389 ;;  cntr            1   36[COMRAM] unsigned char 
 28390 ;;  start           1    0        unsigned char 
 28391 ;; Return value:  Size  Location     Type
 28392 ;;                  1    wreg      void 
 28393 ;; Registers used:
 28394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28395 ;; Tracked objects:
 28396 ;;		On entry : 0/0
 28397 ;;		On exit  : 0/0
 28398 ;;		Unchanged: 0/0
 28399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28404 ;;Total ram usage:        1 bytes
 28405 ;; Hardware stack levels used:    1
 28406 ;; Hardware stack levels required when called:    5
 28407 ;; This function calls:
 28408 ;;		__display_itoa_u16
 28409 ;;		__display_itoa_u32
 28410 ;;		_bootloader_get_entries
 28411 ;;		_bootloader_get_error
 28412 ;;		_bootloader_get_rec_address
 28413 ;; This function is called by:
 28414 ;;		_display_prepare
 28415 ;; This function uses a non-reentrant model
 28416 ;;
 28417                           
 28418                           	psect	text138
 28419  00129A                     __ptext138:
 28420                           	opt stack 0
 28421  00129A                     __display_failed:
 28422                           	opt stack 21
 28423                           
 28424                           ;display.c: 457: uint8_t cntr;;display.c: 458: uint8_t start;;display.c: 459: cntr = 0;
 28425                           
 28426                           ;incstack = 0
 28427  00129A  0E00               	movlw	0
 28428  00129C  6E25               	movwf	__display_failed@cntr,c
 28429                           
 28430                           ;display.c: 460: while(failed_line1[cntr])
 28431  00129E  D017               	goto	l1637
 28432  0012A0                     
 28433                           ;display.c: 461: display_content[0][cntr] = failed_line1[cntr++];
 28434  0012A0  5025               	movf	__display_failed@cntr,w,c
 28435  0012A2  0D01               	mullw	1
 28436  0012A4  0EA4               	movlw	low _failed_line1
 28437  0012A6  24F3               	addwf	prodl,w,c
 28438  0012A8  6EF6               	movwf	tblptrl,c
 28439  0012AA  0E8D               	movlw	high _failed_line1
 28440  0012AC  20F4               	addwfc	prodh,w,c
 28441  0012AE  6EF7               	movwf	tblptrh,c
 28442  0012B0                     	if	1	;There are 3 active tblptr bytes
 28443  0012B0  6AF8               	clrf	tblptru,c
 28444  0012B2  0E00               	movlw	low (__mediumconst shr (0+16))
 28445  0012B4  22F8               	addwfc	tblptru,f,c
 28446  0012B6                     	endif
 28447  0012B6  5025               	movf	__display_failed@cntr,w,c
 28448  0012B8  0D01               	mullw	1
 28449  0012BA  0E00               	movlw	low _display_content
 28450  0012BC  24F3               	addwf	prodl,w,c
 28451  0012BE  6ED9               	movwf	fsr2l,c
 28452  0012C0  0E02               	movlw	high _display_content
 28453  0012C2  20F4               	addwfc	prodh,w,c
 28454  0012C4  6EDA               	movwf	fsr2h,c
 28455  0012C6  0008               	tblrd		*
 28456  0012C8  CFF5 FFDF          	movff	tablat,indf2
 28457  0012CC  2A25               	incf	__display_failed@cntr,f,c
 28458  0012CE                     l1637:
 28459  0012CE  5025               	movf	__display_failed@cntr,w,c
 28460  0012D0  0D01               	mullw	1
 28461  0012D2  0EA4               	movlw	low _failed_line1
 28462  0012D4  24F3               	addwf	prodl,w,c
 28463  0012D6  6EF6               	movwf	tblptrl,c
 28464  0012D8  0E8D               	movlw	high _failed_line1
 28465  0012DA  20F4               	addwfc	prodh,w,c
 28466  0012DC  6EF7               	movwf	tblptrh,c
 28467  0012DE                     	if	1	;There are 3 active tblptr bytes
 28468  0012DE  6AF8               	clrf	tblptru,c
 28469  0012E0  0E00               	movlw	low (__mediumconst shr (0+16))
 28470  0012E2  22F8               	addwfc	tblptru,f,c
 28471  0012E4                     	endif
 28472  0012E4  0008               	tblrd		*
 28473  0012E6  50F5               	movf	tablat,w,c
 28474  0012E8  0900               	iorlw	0
 28475  0012EA  A4D8               	btfss	status,2,c
 28476  0012EC  D7D9               	goto	l1638
 28477                           
 28478                           ;display.c: 462: cntr = 0;
 28479  0012EE  0E00               	movlw	0
 28480  0012F0  6E25               	movwf	__display_failed@cntr,c
 28481                           
 28482                           ;display.c: 463: while(failed_line2[cntr])
 28483  0012F2  D017               	goto	l1640
 28484  0012F4                     
 28485                           ;display.c: 464: display_content[1][cntr] = failed_line2[cntr++];
 28486  0012F4  5025               	movf	__display_failed@cntr,w,c
 28487  0012F6  0D01               	mullw	1
 28488  0012F8  0E0E               	movlw	low _failed_line2
 28489  0012FA  24F3               	addwf	prodl,w,c
 28490  0012FC  6EF6               	movwf	tblptrl,c
 28491  0012FE  0E8D               	movlw	high _failed_line2
 28492  001300  20F4               	addwfc	prodh,w,c
 28493  001302  6EF7               	movwf	tblptrh,c
 28494  001304                     	if	1	;There are 3 active tblptr bytes
 28495  001304  6AF8               	clrf	tblptru,c
 28496  001306  0E00               	movlw	low (__mediumconst shr (0+16))
 28497  001308  22F8               	addwfc	tblptru,f,c
 28498  00130A                     	endif
 28499  00130A  5025               	movf	__display_failed@cntr,w,c
 28500  00130C  0D01               	mullw	1
 28501  00130E  0E14               	movlw	low (_display_content+20)
 28502  001310  24F3               	addwf	prodl,w,c
 28503  001312  6ED9               	movwf	fsr2l,c
 28504  001314  0E02               	movlw	high (_display_content+20)
 28505  001316  20F4               	addwfc	prodh,w,c
 28506  001318  6EDA               	movwf	fsr2h,c
 28507  00131A  0008               	tblrd		*
 28508  00131C  CFF5 FFDF          	movff	tablat,indf2
 28509  001320  2A25               	incf	__display_failed@cntr,f,c
 28510  001322                     l1640:
 28511  001322  5025               	movf	__display_failed@cntr,w,c
 28512  001324  0D01               	mullw	1
 28513  001326  0E0E               	movlw	low _failed_line2
 28514  001328  24F3               	addwf	prodl,w,c
 28515  00132A  6EF6               	movwf	tblptrl,c
 28516  00132C  0E8D               	movlw	high _failed_line2
 28517  00132E  20F4               	addwfc	prodh,w,c
 28518  001330  6EF7               	movwf	tblptrh,c
 28519  001332                     	if	1	;There are 3 active tblptr bytes
 28520  001332  6AF8               	clrf	tblptru,c
 28521  001334  0E00               	movlw	low (__mediumconst shr (0+16))
 28522  001336  22F8               	addwfc	tblptru,f,c
 28523  001338                     	endif
 28524  001338  0008               	tblrd		*
 28525  00133A  50F5               	movf	tablat,w,c
 28526  00133C  0900               	iorlw	0
 28527  00133E  A4D8               	btfss	status,2,c
 28528  001340  D7D9               	goto	l1641
 28529                           
 28530                           ;display.c: 466: cntr = 0;
 28531  001342  0E00               	movlw	0
 28532  001344  6E25               	movwf	__display_failed@cntr,c
 28533                           
 28534                           ;display.c: 467: switch(bootloader_get_error())
 28535  001346  D0D6               	goto	l1643
 28536  001348                     
 28537                           ;display.c: 471: display_content[2][cntr] = failed_line3_startCode[cntr++];
 28538  001348  5025               	movf	__display_failed@cntr,w,c
 28539  00134A  0D01               	mullw	1
 28540  00134C  0ED6               	movlw	low _failed_line3_startCode
 28541  00134E  24F3               	addwf	prodl,w,c
 28542  001350  6EF6               	movwf	tblptrl,c
 28543  001352  0E8C               	movlw	high _failed_line3_startCode
 28544  001354  20F4               	addwfc	prodh,w,c
 28545  001356  6EF7               	movwf	tblptrh,c
 28546  001358                     	if	1	;There are 3 active tblptr bytes
 28547  001358  6AF8               	clrf	tblptru,c
 28548  00135A  0E00               	movlw	low (__mediumconst shr (0+16))
 28549  00135C  22F8               	addwfc	tblptru,f,c
 28550  00135E                     	endif
 28551  00135E  5025               	movf	__display_failed@cntr,w,c
 28552  001360  0D01               	mullw	1
 28553  001362  0E28               	movlw	low (_display_content+40)
 28554  001364  24F3               	addwf	prodl,w,c
 28555  001366  6ED9               	movwf	fsr2l,c
 28556  001368  0E02               	movlw	high (_display_content+40)
 28557  00136A  20F4               	addwfc	prodh,w,c
 28558  00136C  6EDA               	movwf	fsr2h,c
 28559  00136E  0008               	tblrd		*
 28560  001370  CFF5 FFDF          	movff	tablat,indf2
 28561  001374  2A25               	incf	__display_failed@cntr,f,c
 28562  001376  5025               	movf	__display_failed@cntr,w,c
 28563  001378  0D01               	mullw	1
 28564  00137A  0ED6               	movlw	low _failed_line3_startCode
 28565  00137C  24F3               	addwf	prodl,w,c
 28566  00137E  6EF6               	movwf	tblptrl,c
 28567  001380  0E8C               	movlw	high _failed_line3_startCode
 28568  001382  20F4               	addwfc	prodh,w,c
 28569  001384  6EF7               	movwf	tblptrh,c
 28570  001386                     	if	1	;There are 3 active tblptr bytes
 28571  001386  6AF8               	clrf	tblptru,c
 28572  001388  0E00               	movlw	low (__mediumconst shr (0+16))
 28573  00138A  22F8               	addwfc	tblptru,f,c
 28574  00138C                     	endif
 28575  00138C  0008               	tblrd		*
 28576  00138E  50F5               	movf	tablat,w,c
 28577  001390  0900               	iorlw	0
 28578  001392  B4D8               	btfsc	status,2,c
 28579  001394  D0C0               	goto	l1648
 28580  001396  D7D8               	goto	l1646
 28581  001398                     
 28582                           ;display.c: 476: display_content[2][cntr] = failed_line3_checksum[cntr++];
 28583  001398  5025               	movf	__display_failed@cntr,w,c
 28584  00139A  0D01               	mullw	1
 28585  00139C  0E04               	movlw	low _failed_line3_checksum
 28586  00139E  24F3               	addwf	prodl,w,c
 28587  0013A0  6EF6               	movwf	tblptrl,c
 28588  0013A2  0E8E               	movlw	high _failed_line3_checksum
 28589  0013A4  20F4               	addwfc	prodh,w,c
 28590  0013A6  6EF7               	movwf	tblptrh,c
 28591  0013A8                     	if	1	;There are 3 active tblptr bytes
 28592  0013A8  6AF8               	clrf	tblptru,c
 28593  0013AA  0E00               	movlw	low (__mediumconst shr (0+16))
 28594  0013AC  22F8               	addwfc	tblptru,f,c
 28595  0013AE                     	endif
 28596  0013AE  5025               	movf	__display_failed@cntr,w,c
 28597  0013B0  0D01               	mullw	1
 28598  0013B2  0E28               	movlw	low (_display_content+40)
 28599  0013B4  24F3               	addwf	prodl,w,c
 28600  0013B6  6ED9               	movwf	fsr2l,c
 28601  0013B8  0E02               	movlw	high (_display_content+40)
 28602  0013BA  20F4               	addwfc	prodh,w,c
 28603  0013BC  6EDA               	movwf	fsr2h,c
 28604  0013BE  0008               	tblrd		*
 28605  0013C0  CFF5 FFDF          	movff	tablat,indf2
 28606  0013C4  2A25               	incf	__display_failed@cntr,f,c
 28607  0013C6  5025               	movf	__display_failed@cntr,w,c
 28608  0013C8  0D01               	mullw	1
 28609  0013CA  0E04               	movlw	low _failed_line3_checksum
 28610  0013CC  24F3               	addwf	prodl,w,c
 28611  0013CE  6EF6               	movwf	tblptrl,c
 28612  0013D0  0E8E               	movlw	high _failed_line3_checksum
 28613  0013D2  20F4               	addwfc	prodh,w,c
 28614  0013D4  6EF7               	movwf	tblptrh,c
 28615  0013D6                     	if	1	;There are 3 active tblptr bytes
 28616  0013D6  6AF8               	clrf	tblptru,c
 28617  0013D8  0E00               	movlw	low (__mediumconst shr (0+16))
 28618  0013DA  22F8               	addwfc	tblptru,f,c
 28619  0013DC                     	endif
 28620  0013DC  0008               	tblrd		*
 28621  0013DE  50F5               	movf	tablat,w,c
 28622  0013E0  0900               	iorlw	0
 28623  0013E2  B4D8               	btfsc	status,2,c
 28624  0013E4  D098               	goto	l1648
 28625  0013E6  D7D8               	goto	l1651
 28626  0013E8                     
 28627                           ;display.c: 483: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 28628  0013E8  5025               	movf	__display_failed@cntr,w,c
 28629  0013EA  0D01               	mullw	1
 28630  0013EC  0E13               	movlw	low _failed_line3_noNextRecord
 28631  0013EE  24F3               	addwf	prodl,w,c
 28632  0013F0  6EF6               	movwf	tblptrl,c
 28633  0013F2  0E8E               	movlw	high _failed_line3_noNextRecord
 28634  0013F4  20F4               	addwfc	prodh,w,c
 28635  0013F6  6EF7               	movwf	tblptrh,c
 28636  0013F8                     	if	1	;There are 3 active tblptr bytes
 28637  0013F8  6AF8               	clrf	tblptru,c
 28638  0013FA  0E00               	movlw	low (__mediumconst shr (0+16))
 28639  0013FC  22F8               	addwfc	tblptru,f,c
 28640  0013FE                     	endif
 28641  0013FE  5025               	movf	__display_failed@cntr,w,c
 28642  001400  0D01               	mullw	1
 28643  001402  0E28               	movlw	low (_display_content+40)
 28644  001404  24F3               	addwf	prodl,w,c
 28645  001406  6ED9               	movwf	fsr2l,c
 28646  001408  0E02               	movlw	high (_display_content+40)
 28647  00140A  20F4               	addwfc	prodh,w,c
 28648  00140C  6EDA               	movwf	fsr2h,c
 28649  00140E  0008               	tblrd		*
 28650  001410  CFF5 FFDF          	movff	tablat,indf2
 28651  001414  2A25               	incf	__display_failed@cntr,f,c
 28652  001416  5025               	movf	__display_failed@cntr,w,c
 28653  001418  0D01               	mullw	1
 28654  00141A  0E13               	movlw	low _failed_line3_noNextRecord
 28655  00141C  24F3               	addwf	prodl,w,c
 28656  00141E  6EF6               	movwf	tblptrl,c
 28657  001420  0E8E               	movlw	high _failed_line3_noNextRecord
 28658  001422  20F4               	addwfc	prodh,w,c
 28659  001424  6EF7               	movwf	tblptrh,c
 28660  001426                     	if	1	;There are 3 active tblptr bytes
 28661  001426  6AF8               	clrf	tblptru,c
 28662  001428  0E00               	movlw	low (__mediumconst shr (0+16))
 28663  00142A  22F8               	addwfc	tblptru,f,c
 28664  00142C                     	endif
 28665  00142C  0008               	tblrd		*
 28666  00142E  50F5               	movf	tablat,w,c
 28667  001430  0900               	iorlw	0
 28668  001432  B4D8               	btfsc	status,2,c
 28669  001434  D070               	goto	l1648
 28670  001436  D7D8               	goto	l1655
 28671  001438                     
 28672                           ;display.c: 488: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 28673  001438  5025               	movf	__display_failed@cntr,w,c
 28674  00143A  0D01               	mullw	1
 28675  00143C  0E31               	movlw	low _failed_line3_dataTooLong
 28676  00143E  24F3               	addwf	prodl,w,c
 28677  001440  6EF6               	movwf	tblptrl,c
 28678  001442  0E8E               	movlw	high _failed_line3_dataTooLong
 28679  001444  20F4               	addwfc	prodh,w,c
 28680  001446  6EF7               	movwf	tblptrh,c
 28681  001448                     	if	1	;There are 3 active tblptr bytes
 28682  001448  6AF8               	clrf	tblptru,c
 28683  00144A  0E00               	movlw	low (__mediumconst shr (0+16))
 28684  00144C  22F8               	addwfc	tblptru,f,c
 28685  00144E                     	endif
 28686  00144E  5025               	movf	__display_failed@cntr,w,c
 28687  001450  0D01               	mullw	1
 28688  001452  0E28               	movlw	low (_display_content+40)
 28689  001454  24F3               	addwf	prodl,w,c
 28690  001456  6ED9               	movwf	fsr2l,c
 28691  001458  0E02               	movlw	high (_display_content+40)
 28692  00145A  20F4               	addwfc	prodh,w,c
 28693  00145C  6EDA               	movwf	fsr2h,c
 28694  00145E  0008               	tblrd		*
 28695  001460  CFF5 FFDF          	movff	tablat,indf2
 28696  001464  2A25               	incf	__display_failed@cntr,f,c
 28697  001466  5025               	movf	__display_failed@cntr,w,c
 28698  001468  0D01               	mullw	1
 28699  00146A  0E31               	movlw	low _failed_line3_dataTooLong
 28700  00146C  24F3               	addwf	prodl,w,c
 28701  00146E  6EF6               	movwf	tblptrl,c
 28702  001470  0E8E               	movlw	high _failed_line3_dataTooLong
 28703  001472  20F4               	addwfc	prodh,w,c
 28704  001474  6EF7               	movwf	tblptrh,c
 28705  001476                     	if	1	;There are 3 active tblptr bytes
 28706  001476  6AF8               	clrf	tblptru,c
 28707  001478  0E00               	movlw	low (__mediumconst shr (0+16))
 28708  00147A  22F8               	addwfc	tblptru,f,c
 28709  00147C                     	endif
 28710  00147C  0008               	tblrd		*
 28711  00147E  50F5               	movf	tablat,w,c
 28712  001480  0900               	iorlw	0
 28713  001482  B4D8               	btfsc	status,2,c
 28714  001484  D048               	goto	l1648
 28715  001486  D7D8               	goto	l1659
 28716  001488                     
 28717                           ;display.c: 493: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 28718  001488  5025               	movf	__display_failed@cntr,w,c
 28719  00148A  0D01               	mullw	1
 28720  00148C  0EAE               	movlw	low _failed_line3_addressRange
 28721  00148E  24F3               	addwf	prodl,w,c
 28722  001490  6EF6               	movwf	tblptrl,c
 28723  001492  0E8C               	movlw	high _failed_line3_addressRange
 28724  001494  20F4               	addwfc	prodh,w,c
 28725  001496  6EF7               	movwf	tblptrh,c
 28726  001498                     	if	1	;There are 3 active tblptr bytes
 28727  001498  6AF8               	clrf	tblptru,c
 28728  00149A  0E00               	movlw	low (__mediumconst shr (0+16))
 28729  00149C  22F8               	addwfc	tblptru,f,c
 28730  00149E                     	endif
 28731  00149E  5025               	movf	__display_failed@cntr,w,c
 28732  0014A0  0D01               	mullw	1
 28733  0014A2  0E28               	movlw	low (_display_content+40)
 28734  0014A4  24F3               	addwf	prodl,w,c
 28735  0014A6  6ED9               	movwf	fsr2l,c
 28736  0014A8  0E02               	movlw	high (_display_content+40)
 28737  0014AA  20F4               	addwfc	prodh,w,c
 28738  0014AC  6EDA               	movwf	fsr2h,c
 28739  0014AE  0008               	tblrd		*
 28740  0014B0  CFF5 FFDF          	movff	tablat,indf2
 28741  0014B4  2A25               	incf	__display_failed@cntr,f,c
 28742  0014B6  5025               	movf	__display_failed@cntr,w,c
 28743  0014B8  0D01               	mullw	1
 28744  0014BA  0EAE               	movlw	low _failed_line3_addressRange
 28745  0014BC  24F3               	addwf	prodl,w,c
 28746  0014BE  6EF6               	movwf	tblptrl,c
 28747  0014C0  0E8C               	movlw	high _failed_line3_addressRange
 28748  0014C2  20F4               	addwfc	prodh,w,c
 28749  0014C4  6EF7               	movwf	tblptrh,c
 28750  0014C6                     	if	1	;There are 3 active tblptr bytes
 28751  0014C6  6AF8               	clrf	tblptru,c
 28752  0014C8  0E00               	movlw	low (__mediumconst shr (0+16))
 28753  0014CA  22F8               	addwfc	tblptru,f,c
 28754  0014CC                     	endif
 28755  0014CC  0008               	tblrd		*
 28756  0014CE  50F5               	movf	tablat,w,c
 28757  0014D0  0900               	iorlw	0
 28758  0014D2  A4D8               	btfss	status,2,c
 28759  0014D4  D7D9               	goto	l1663
 28760                           
 28761                           ;display.c: 494: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 28762  0014D6  ECA2  F044         	call	_bootloader_get_rec_address	;wreg free
 28763  0014DA  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 28764  0014DE  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 28765  0014E2  6A21               	clrf	__display_itoa_u32@value+2,c
 28766  0014E4  6A22               	clrf	__display_itoa_u32@value+3,c
 28767  0014E6  0E4A               	movlw	low (_display_content+74)
 28768  0014E8  6E23               	movwf	__display_itoa_u32@text,c
 28769  0014EA  0E02               	movlw	high (_display_content+74)
 28770  0014EC  6E24               	movwf	__display_itoa_u32@text+1,c
 28771  0014EE  EC07  F006         	call	__display_itoa_u32	;wreg free
 28772                           
 28773                           ;display.c: 497: }
 28774                           
 28775                           ;display.c: 495: break;
 28776  0014F2  D011               	goto	l1648
 28777  0014F4                     l1643:
 28778  0014F4  ECDB  F044         	call	_bootloader_get_error	;wreg free
 28779                           
 28780                           ; Switch size 1, requested type "space"
 28781                           ; Number of cases is 5, Range of values is 11 to 15
 28782                           ; switch strategies available:
 28783                           ; Name         Instructions Cycles
 28784                           ; simple_byte           16     9 (average)
 28785                           ;	Chosen strategy is simple_byte
 28786  0014F8  0A0B               	xorlw	11	; case 11
 28787  0014FA  B4D8               	btfsc	status,2,c
 28788  0014FC  D7DC               	goto	l1662
 28789  0014FE  0A07               	xorlw	7	; case 12
 28790  001500  B4D8               	btfsc	status,2,c
 28791  001502  D7B1               	goto	l1658
 28792  001504  0A01               	xorlw	1	; case 13
 28793  001506  B4D8               	btfsc	status,2,c
 28794  001508  D786               	goto	l1654
 28795  00150A  0A03               	xorlw	3	; case 14
 28796  00150C  B4D8               	btfsc	status,2,c
 28797  00150E  D75B               	goto	l1650
 28798  001510  0A01               	xorlw	1	; case 15
 28799  001512  B4D8               	btfsc	status,2,c
 28800  001514  D730               	goto	l1645
 28801  001516                     l1648:
 28802                           
 28803                           ;display.c: 499: cntr = 0;
 28804  001516  0E00               	movlw	0
 28805  001518  6E25               	movwf	__display_failed@cntr,c
 28806                           
 28807                           ;display.c: 500: while(failed_line4[cntr])
 28808  00151A  D017               	goto	l1665
 28809  00151C                     
 28810                           ;display.c: 501: display_content[3][cntr] = failed_line4[cntr++];
 28811  00151C  5025               	movf	__display_failed@cntr,w,c
 28812  00151E  0D01               	mullw	1
 28813  001520  0E6B               	movlw	low _failed_line4
 28814  001522  24F3               	addwf	prodl,w,c
 28815  001524  6EF6               	movwf	tblptrl,c
 28816  001526  0E8E               	movlw	high _failed_line4
 28817  001528  20F4               	addwfc	prodh,w,c
 28818  00152A  6EF7               	movwf	tblptrh,c
 28819  00152C                     	if	1	;There are 3 active tblptr bytes
 28820  00152C  6AF8               	clrf	tblptru,c
 28821  00152E  0E00               	movlw	low (__mediumconst shr (0+16))
 28822  001530  22F8               	addwfc	tblptru,f,c
 28823  001532                     	endif
 28824  001532  5025               	movf	__display_failed@cntr,w,c
 28825  001534  0D01               	mullw	1
 28826  001536  0E3C               	movlw	low (_display_content+60)
 28827  001538  24F3               	addwf	prodl,w,c
 28828  00153A  6ED9               	movwf	fsr2l,c
 28829  00153C  0E02               	movlw	high (_display_content+60)
 28830  00153E  20F4               	addwfc	prodh,w,c
 28831  001540  6EDA               	movwf	fsr2h,c
 28832  001542  0008               	tblrd		*
 28833  001544  CFF5 FFDF          	movff	tablat,indf2
 28834  001548  2A25               	incf	__display_failed@cntr,f,c
 28835  00154A                     l1665:
 28836  00154A  5025               	movf	__display_failed@cntr,w,c
 28837  00154C  0D01               	mullw	1
 28838  00154E  0E6B               	movlw	low _failed_line4
 28839  001550  24F3               	addwf	prodl,w,c
 28840  001552  6EF6               	movwf	tblptrl,c
 28841  001554  0E8E               	movlw	high _failed_line4
 28842  001556  20F4               	addwfc	prodh,w,c
 28843  001558  6EF7               	movwf	tblptrh,c
 28844  00155A                     	if	1	;There are 3 active tblptr bytes
 28845  00155A  6AF8               	clrf	tblptru,c
 28846  00155C  0E00               	movlw	low (__mediumconst shr (0+16))
 28847  00155E  22F8               	addwfc	tblptru,f,c
 28848  001560                     	endif
 28849  001560  0008               	tblrd		*
 28850  001562  50F5               	movf	tablat,w,c
 28851  001564  0900               	iorlw	0
 28852  001566  A4D8               	btfss	status,2,c
 28853  001568  D7D9               	goto	l1666
 28854                           
 28855                           ;display.c: 502: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 28856  00156A  ECA7  F044         	call	_bootloader_get_entries	;wreg free
 28857  00156E  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28858  001572  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28859  001576  6A1B               	clrf	__display_itoa_u16@value+2,c
 28860  001578  6A1C               	clrf	__display_itoa_u16@value+3,c
 28861  00157A  5025               	movf	__display_failed@cntr,w,c
 28862  00157C  0D01               	mullw	1
 28863  00157E  0E3C               	movlw	low (_display_content+60)
 28864  001580  24F3               	addwf	prodl,w,c
 28865  001582  6E1D               	movwf	__display_itoa_u16@text,c
 28866  001584  0E02               	movlw	high (_display_content+60)
 28867  001586  20F4               	addwfc	prodh,w,c
 28868  001588  6E1E               	movwf	__display_itoa_u16@text+1,c
 28869  00158A  EC4F  F02E         	call	__display_itoa_u16	;wreg free
 28870  00158E  0012               	return		;funcret
 28871  001590                     __end_of__display_failed:
 28872                           	opt stack 0
 28873                           tosu	equ	0xFFF
 28874                           tosh	equ	0xFFE
 28875                           tosl	equ	0xFFD
 28876                           pclath	equ	0xFFA
 28877                           tblptru	equ	0xFF8
 28878                           tblptrh	equ	0xFF7
 28879                           tblptrl	equ	0xFF6
 28880                           tablat	equ	0xFF5
 28881                           prodh	equ	0xFF4
 28882                           prodl	equ	0xFF3
 28883                           intcon	equ	0xFF2
 28884                           intcon2	equ	0xFF1
 28885                           intcon3	equ	0xFF0
 28886                           indf0	equ	0xFEF
 28887                           postinc0	equ	0xFEE
 28888                           fsr0h	equ	0xFEA
 28889                           fsr0l	equ	0xFE9
 28890                           wreg	equ	0xFE8
 28891                           indf1	equ	0xFE7
 28892                           postdec1	equ	0xFE5
 28893                           plusw1	equ	0xFE3
 28894                           fsr1h	equ	0xFE2
 28895                           fsr1l	equ	0xFE1
 28896                           indf2	equ	0xFDF
 28897                           postinc2	equ	0xFDE
 28898                           postdec2	equ	0xFDD
 28899                           plusw2	equ	0xFDB
 28900                           fsr2h	equ	0xFDA
 28901                           fsr2l	equ	0xFD9
 28902                           status	equ	0xFD8
 28903                           
 28904 ;; *************** function _bootloader_get_rec_address *****************
 28905 ;; Defined at:
 28906 ;;		line 482 in file "bootloader.c"
 28907 ;; Parameters:    Size  Location     Type
 28908 ;;		None
 28909 ;; Auto vars:     Size  Location     Type
 28910 ;;		None
 28911 ;; Return value:  Size  Location     Type
 28912 ;;                  2    0[COMRAM] unsigned int 
 28913 ;; Registers used:
 28914 ;;		None
 28915 ;; Tracked objects:
 28916 ;;		On entry : 0/0
 28917 ;;		On exit  : 0/0
 28918 ;;		Unchanged: 0/0
 28919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28924 ;;Total ram usage:        2 bytes
 28925 ;; Hardware stack levels used:    1
 28926 ;; This function calls:
 28927 ;;		Nothing
 28928 ;; This function is called by:
 28929 ;;		__display_failed
 28930 ;;		__fill_buffer_get_bootloader_details
 28931 ;; This function uses a non-reentrant model
 28932 ;;
 28933                           
 28934                           	psect	text139
 28935  008944                     __ptext139:
 28936                           	opt stack 0
 28937  008944                     _bootloader_get_rec_address:
 28938                           	opt stack 25
 28939                           
 28940                           ;bootloader.c: 485: return hex_file_entry.address;
 28941                           
 28942                           ;incstack = 0
 28943  008944  C1BD  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 28944  008948  C1BE  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 28945  00894C  0012               	return		;funcret
 28946  00894E                     __end_of_bootloader_get_rec_address:
 28947                           	opt stack 0
 28948                           tosu	equ	0xFFF
 28949                           tosh	equ	0xFFE
 28950                           tosl	equ	0xFFD
 28951                           pclath	equ	0xFFA
 28952                           tblptru	equ	0xFF8
 28953                           tblptrh	equ	0xFF7
 28954                           tblptrl	equ	0xFF6
 28955                           tablat	equ	0xFF5
 28956                           prodh	equ	0xFF4
 28957                           prodl	equ	0xFF3
 28958                           intcon	equ	0xFF2
 28959                           intcon2	equ	0xFF1
 28960                           intcon3	equ	0xFF0
 28961                           indf0	equ	0xFEF
 28962                           postinc0	equ	0xFEE
 28963                           fsr0h	equ	0xFEA
 28964                           fsr0l	equ	0xFE9
 28965                           wreg	equ	0xFE8
 28966                           indf1	equ	0xFE7
 28967                           postdec1	equ	0xFE5
 28968                           plusw1	equ	0xFE3
 28969                           fsr1h	equ	0xFE2
 28970                           fsr1l	equ	0xFE1
 28971                           indf2	equ	0xFDF
 28972                           postinc2	equ	0xFDE
 28973                           postdec2	equ	0xFDD
 28974                           plusw2	equ	0xFDB
 28975                           fsr2h	equ	0xFDA
 28976                           fsr2l	equ	0xFD9
 28977                           status	equ	0xFD8
 28978                           
 28979 ;; *************** function _bootloader_get_error *****************
 28980 ;; Defined at:
 28981 ;;		line 472 in file "bootloader.c"
 28982 ;; Parameters:    Size  Location     Type
 28983 ;;		None
 28984 ;; Auto vars:     Size  Location     Type
 28985 ;;		None
 28986 ;; Return value:  Size  Location     Type
 28987 ;;                  1    wreg      enum E7014
 28988 ;; Registers used:
 28989 ;;		wreg, status,2
 28990 ;; Tracked objects:
 28991 ;;		On entry : 0/0
 28992 ;;		On exit  : 0/0
 28993 ;;		Unchanged: 0/0
 28994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28999 ;;Total ram usage:        0 bytes
 29000 ;; Hardware stack levels used:    1
 29001 ;; This function calls:
 29002 ;;		Nothing
 29003 ;; This function is called by:
 29004 ;;		__display_failed
 29005 ;;		__fill_buffer_get_bootloader_details
 29006 ;; This function uses a non-reentrant model
 29007 ;;
 29008                           
 29009                           	psect	text140
 29010  0089B6                     __ptext140:
 29011                           	opt stack 0
 29012  0089B6                     _bootloader_get_error:
 29013                           	opt stack 25
 29014                           
 29015                           ;bootloader.c: 474: return last_error;
 29016                           
 29017                           ;incstack = 0
 29018  0089B6  0100               	movlb	0	; () banked
 29019  0089B8  51DE               	movf	_last_error& (0+255),w,b
 29020  0089BA  0012               	return	
 29021  0089BC                     __end_of_bootloader_get_error:
 29022                           	opt stack 0
 29023                           tosu	equ	0xFFF
 29024                           tosh	equ	0xFFE
 29025                           tosl	equ	0xFFD
 29026                           pclath	equ	0xFFA
 29027                           tblptru	equ	0xFF8
 29028                           tblptrh	equ	0xFF7
 29029                           tblptrl	equ	0xFF6
 29030                           tablat	equ	0xFF5
 29031                           prodh	equ	0xFF4
 29032                           prodl	equ	0xFF3
 29033                           intcon	equ	0xFF2
 29034                           intcon2	equ	0xFF1
 29035                           intcon3	equ	0xFF0
 29036                           indf0	equ	0xFEF
 29037                           postinc0	equ	0xFEE
 29038                           fsr0h	equ	0xFEA
 29039                           fsr0l	equ	0xFE9
 29040                           wreg	equ	0xFE8
 29041                           indf1	equ	0xFE7
 29042                           postdec1	equ	0xFE5
 29043                           plusw1	equ	0xFE3
 29044                           fsr1h	equ	0xFE2
 29045                           fsr1l	equ	0xFE1
 29046                           indf2	equ	0xFDF
 29047                           postinc2	equ	0xFDE
 29048                           postdec2	equ	0xFDD
 29049                           plusw2	equ	0xFDB
 29050                           fsr2h	equ	0xFDA
 29051                           fsr2l	equ	0xFD9
 29052                           status	equ	0xFD8
 29053                           
 29054 ;; *************** function _bootloader_get_entries *****************
 29055 ;; Defined at:
 29056 ;;		line 462 in file "bootloader.c"
 29057 ;; Parameters:    Size  Location     Type
 29058 ;;		None
 29059 ;; Auto vars:     Size  Location     Type
 29060 ;;		None
 29061 ;; Return value:  Size  Location     Type
 29062 ;;                  2    0[COMRAM] unsigned int 
 29063 ;; Registers used:
 29064 ;;		None
 29065 ;; Tracked objects:
 29066 ;;		On entry : 0/0
 29067 ;;		On exit  : 0/0
 29068 ;;		Unchanged: 0/0
 29069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29074 ;;Total ram usage:        2 bytes
 29075 ;; Hardware stack levels used:    1
 29076 ;; This function calls:
 29077 ;;		Nothing
 29078 ;; This function is called by:
 29079 ;;		__display_verify
 29080 ;;		__display_failed
 29081 ;;		__display_programming
 29082 ;;		__fill_buffer_get_bootloader_details
 29083 ;; This function uses a non-reentrant model
 29084 ;;
 29085                           
 29086                           	psect	text141
 29087  00894E                     __ptext141:
 29088                           	opt stack 0
 29089  00894E                     _bootloader_get_entries:
 29090                           	opt stack 25
 29091                           
 29092                           ;bootloader.c: 464: return hex_file_entries;
 29093                           
 29094                           ; BSR set to: 0
 29095                           ;incstack = 0
 29096  00894E  C174  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 29097  008952  C175  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 29098  008956  0012               	return		;funcret
 29099  008958                     __end_of_bootloader_get_entries:
 29100                           	opt stack 0
 29101                           tosu	equ	0xFFF
 29102                           tosh	equ	0xFFE
 29103                           tosl	equ	0xFFD
 29104                           pclath	equ	0xFFA
 29105                           tblptru	equ	0xFF8
 29106                           tblptrh	equ	0xFF7
 29107                           tblptrl	equ	0xFF6
 29108                           tablat	equ	0xFF5
 29109                           prodh	equ	0xFF4
 29110                           prodl	equ	0xFF3
 29111                           intcon	equ	0xFF2
 29112                           intcon2	equ	0xFF1
 29113                           intcon3	equ	0xFF0
 29114                           indf0	equ	0xFEF
 29115                           postinc0	equ	0xFEE
 29116                           fsr0h	equ	0xFEA
 29117                           fsr0l	equ	0xFE9
 29118                           wreg	equ	0xFE8
 29119                           indf1	equ	0xFE7
 29120                           postdec1	equ	0xFE5
 29121                           plusw1	equ	0xFE3
 29122                           fsr1h	equ	0xFE2
 29123                           fsr1l	equ	0xFE1
 29124                           indf2	equ	0xFDF
 29125                           postinc2	equ	0xFDE
 29126                           postdec2	equ	0xFDD
 29127                           plusw2	equ	0xFDB
 29128                           fsr2h	equ	0xFDA
 29129                           fsr2l	equ	0xFD9
 29130                           status	equ	0xFD8
 29131                           
 29132 ;; *************** function __display_itoa_u32 *****************
 29133 ;; Defined at:
 29134 ;;		line 172 in file "display.c"
 29135 ;; Parameters:    Size  Location     Type
 29136 ;;  value           4   30[COMRAM] unsigned long 
 29137 ;;  text            2   34[COMRAM] PTR unsigned char 
 29138 ;;		 -> display_content(80), 
 29139 ;; Auto vars:     Size  Location     Type
 29140 ;;		None
 29141 ;; Return value:  Size  Location     Type
 29142 ;;                  1    wreg      unsigned char 
 29143 ;; Registers used:
 29144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29145 ;; Tracked objects:
 29146 ;;		On entry : 0/0
 29147 ;;		On exit  : 0/0
 29148 ;;		Unchanged: 0/0
 29149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29150 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29153 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29154 ;;Total ram usage:        6 bytes
 29155 ;; Hardware stack levels used:    1
 29156 ;; Hardware stack levels required when called:    4
 29157 ;; This function calls:
 29158 ;;		___lldiv
 29159 ;;		___llmod
 29160 ;;		__display_itoa_u16
 29161 ;;		_itoa
 29162 ;; This function is called by:
 29163 ;;		__display_start
 29164 ;;		__display_found
 29165 ;;		__display_failed
 29166 ;; This function uses a non-reentrant model
 29167 ;;
 29168                           
 29169                           	psect	text142
 29170  000C0E                     __ptext142:
 29171                           	opt stack 0
 29172  000C0E                     __display_itoa_u32:
 29173                           	opt stack 21
 29174                           
 29175                           ;display.c: 175: if(value<=0x7FFF)
 29176                           
 29177                           ;incstack = 0
 29178  000C0E  5022               	movf	__display_itoa_u32@value+3,w,c
 29179  000C10  1021               	iorwf	__display_itoa_u32@value+2,w,c
 29180  000C12  E111               	bnz	l10730
 29181  000C14  0E80               	movlw	128
 29182  000C16  5C20               	subwf	__display_itoa_u32@value+1,w,c
 29183  000C18  B0D8               	btfsc	status,0,c
 29184  000C1A  D00D               	goto	l1508
 29185                           
 29186                           ;display.c: 176: {;display.c: 177: return _display_itoa_u16((uint16_t) value, text);
 29187  000C1C  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 29188  000C20  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 29189  000C24  6A1B               	clrf	__display_itoa_u16@value+2,c
 29190  000C26  6A1C               	clrf	__display_itoa_u16@value+3,c
 29191  000C28  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 29192  000C2C  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 29193  000C30  EC4F  F02E         	call	__display_itoa_u16	;wreg free
 29194  000C34  0012               	return	
 29195  000C36                     l1508:
 29196  000C36                     l10730:
 29197                           
 29198                           ;display.c: 178: };display.c: 181: if(value>100000000)
 29199  000C36  041F               	decf	__display_itoa_u32@value,w,c
 29200  000C38  0EE1               	movlw	225
 29201  000C3A  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29202  000C3C  0EF5               	movlw	245
 29203  000C3E  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29204  000C40  0E05               	movlw	5
 29205  000C42  5822               	subwfb	__display_itoa_u32@value+3,w,c
 29206  000C44  A0D8               	btfss	status,0,c
 29207  000C46  D04C               	goto	l1510
 29208                           
 29209                           ;display.c: 182: {;display.c: 183: itoa(text, (uint16_t)(value/10000), 10);
 29210  000C48  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29211  000C4C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29212  000C50  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29213  000C54  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29214  000C58  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29215  000C5C  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29216  000C60  0E10               	movlw	16
 29217  000C62  6E05               	movwf	___lldiv@divisor,c
 29218  000C64  0E27               	movlw	39
 29219  000C66  6E06               	movwf	___lldiv@divisor+1,c
 29220  000C68  0E00               	movlw	0
 29221  000C6A  6E07               	movwf	___lldiv@divisor+2,c
 29222  000C6C  0E00               	movlw	0
 29223  000C6E  6E08               	movwf	___lldiv@divisor+3,c
 29224  000C70  EC20  F037         	call	___lldiv	;wreg free
 29225  000C74  C001  F013         	movff	?___lldiv,itoa@val
 29226  000C78  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29227  000C7C  0E00               	movlw	0
 29228  000C7E  6E16               	movwf	itoa@base+1,c
 29229  000C80  0E0A               	movlw	10
 29230  000C82  6E15               	movwf	itoa@base,c
 29231  000C84  EC1A  F040         	call	_itoa	;wreg free
 29232                           
 29233                           ;display.c: 184: itoa(text+5, (uint16_t)(value%10000), 10);
 29234  000C88  0E05               	movlw	5
 29235  000C8A  2423               	addwf	__display_itoa_u32@text,w,c
 29236  000C8C  6E11               	movwf	itoa@buf,c
 29237  000C8E  0E00               	movlw	0
 29238  000C90  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29239  000C92  6E12               	movwf	itoa@buf+1,c
 29240  000C94  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29241  000C98  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29242  000C9C  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29243  000CA0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29244  000CA4  0E10               	movlw	16
 29245  000CA6  6E05               	movwf	___llmod@divisor,c
 29246  000CA8  0E27               	movlw	39
 29247  000CAA  6E06               	movwf	___llmod@divisor+1,c
 29248  000CAC  0E00               	movlw	0
 29249  000CAE  6E07               	movwf	___llmod@divisor+2,c
 29250  000CB0  0E00               	movlw	0
 29251  000CB2  6E08               	movwf	___llmod@divisor+3,c
 29252  000CB4  ECBF  F03A         	call	___llmod	;wreg free
 29253  000CB8  C001  F013         	movff	?___llmod,itoa@val
 29254  000CBC  C002  F014         	movff	?___llmod+1,itoa@val+1
 29255  000CC0  0E00               	movlw	0
 29256  000CC2  6E16               	movwf	itoa@base+1,c
 29257  000CC4  0E0A               	movlw	10
 29258  000CC6  6E15               	movwf	itoa@base,c
 29259  000CC8  EC1A  F040         	call	_itoa	;wreg free
 29260                           
 29261                           ;display.c: 185: *(text+9) = ' ';
 29262  000CCC  EE20 F009          	lfsr	2,9
 29263  000CD0  5023               	movf	__display_itoa_u32@text,w,c
 29264  000CD2  26D9               	addwf	fsr2l,f,c
 29265  000CD4  5024               	movf	__display_itoa_u32@text+1,w,c
 29266  000CD6  22DA               	addwfc	fsr2h,f,c
 29267  000CD8  0E20               	movlw	32
 29268  000CDA  6EDF               	movwf	indf2,c
 29269                           
 29270                           ;display.c: 186: return 9;
 29271  000CDC  0E09               	movlw	9
 29272                           
 29273                           ;display.c: 187: }
 29274  000CDE  0012               	return	
 29275  000CE0                     l1510:
 29276                           
 29277                           ;display.c: 188: else if(value>10000000)
 29278  000CE0  5022               	movf	__display_itoa_u32@value+3,w,c
 29279  000CE2  E108               	bnz	u7550
 29280  000CE4  0E81               	movlw	129
 29281  000CE6  5C1F               	subwf	__display_itoa_u32@value,w,c
 29282  000CE8  0E96               	movlw	150
 29283  000CEA  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29284  000CEC  0E98               	movlw	152
 29285  000CEE  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29286  000CF0  A0D8               	btfss	status,0,c
 29287  000CF2  D04C               	goto	l1512
 29288  000CF4                     u7550:
 29289                           
 29290                           ;display.c: 189: {;display.c: 190: itoa(text, (uint16_t)(value/10000), 10);
 29291  000CF4  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29292  000CF8  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29293  000CFC  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29294  000D00  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29295  000D04  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29296  000D08  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29297  000D0C  0E10               	movlw	16
 29298  000D0E  6E05               	movwf	___lldiv@divisor,c
 29299  000D10  0E27               	movlw	39
 29300  000D12  6E06               	movwf	___lldiv@divisor+1,c
 29301  000D14  0E00               	movlw	0
 29302  000D16  6E07               	movwf	___lldiv@divisor+2,c
 29303  000D18  0E00               	movlw	0
 29304  000D1A  6E08               	movwf	___lldiv@divisor+3,c
 29305  000D1C  EC20  F037         	call	___lldiv	;wreg free
 29306  000D20  C001  F013         	movff	?___lldiv,itoa@val
 29307  000D24  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29308  000D28  0E00               	movlw	0
 29309  000D2A  6E16               	movwf	itoa@base+1,c
 29310  000D2C  0E0A               	movlw	10
 29311  000D2E  6E15               	movwf	itoa@base,c
 29312  000D30  EC1A  F040         	call	_itoa	;wreg free
 29313                           
 29314                           ;display.c: 191: itoa(text+4, (uint16_t)(value%10000), 10);
 29315  000D34  0E04               	movlw	4
 29316  000D36  2423               	addwf	__display_itoa_u32@text,w,c
 29317  000D38  6E11               	movwf	itoa@buf,c
 29318  000D3A  0E00               	movlw	0
 29319  000D3C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29320  000D3E  6E12               	movwf	itoa@buf+1,c
 29321  000D40  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29322  000D44  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29323  000D48  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29324  000D4C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29325  000D50  0E10               	movlw	16
 29326  000D52  6E05               	movwf	___llmod@divisor,c
 29327  000D54  0E27               	movlw	39
 29328  000D56  6E06               	movwf	___llmod@divisor+1,c
 29329  000D58  0E00               	movlw	0
 29330  000D5A  6E07               	movwf	___llmod@divisor+2,c
 29331  000D5C  0E00               	movlw	0
 29332  000D5E  6E08               	movwf	___llmod@divisor+3,c
 29333  000D60  ECBF  F03A         	call	___llmod	;wreg free
 29334  000D64  C001  F013         	movff	?___llmod,itoa@val
 29335  000D68  C002  F014         	movff	?___llmod+1,itoa@val+1
 29336  000D6C  0E00               	movlw	0
 29337  000D6E  6E16               	movwf	itoa@base+1,c
 29338  000D70  0E0A               	movlw	10
 29339  000D72  6E15               	movwf	itoa@base,c
 29340  000D74  EC1A  F040         	call	_itoa	;wreg free
 29341                           
 29342                           ;display.c: 192: *(text+8) = ' ';
 29343  000D78  EE20 F008          	lfsr	2,8
 29344  000D7C  5023               	movf	__display_itoa_u32@text,w,c
 29345  000D7E  26D9               	addwf	fsr2l,f,c
 29346  000D80  5024               	movf	__display_itoa_u32@text+1,w,c
 29347  000D82  22DA               	addwfc	fsr2h,f,c
 29348  000D84  0E20               	movlw	32
 29349  000D86  6EDF               	movwf	indf2,c
 29350                           
 29351                           ;display.c: 193: return 8;
 29352  000D88  0E08               	movlw	8
 29353                           
 29354                           ;display.c: 194: }
 29355  000D8A  0012               	return	
 29356  000D8C                     l1512:
 29357                           
 29358                           ;display.c: 195: else if(value>1000000)
 29359  000D8C  5022               	movf	__display_itoa_u32@value+3,w,c
 29360  000D8E  E108               	bnz	u7560
 29361  000D90  0E41               	movlw	65
 29362  000D92  5C1F               	subwf	__display_itoa_u32@value,w,c
 29363  000D94  0E42               	movlw	66
 29364  000D96  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29365  000D98  0E0F               	movlw	15
 29366  000D9A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29367  000D9C  A0D8               	btfss	status,0,c
 29368  000D9E  D04C               	goto	l1514
 29369  000DA0                     u7560:
 29370                           
 29371                           ;display.c: 196: {;display.c: 197: itoa(text, (uint16_t)(value/10000), 10);
 29372  000DA0  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29373  000DA4  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29374  000DA8  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29375  000DAC  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29376  000DB0  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29377  000DB4  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29378  000DB8  0E10               	movlw	16
 29379  000DBA  6E05               	movwf	___lldiv@divisor,c
 29380  000DBC  0E27               	movlw	39
 29381  000DBE  6E06               	movwf	___lldiv@divisor+1,c
 29382  000DC0  0E00               	movlw	0
 29383  000DC2  6E07               	movwf	___lldiv@divisor+2,c
 29384  000DC4  0E00               	movlw	0
 29385  000DC6  6E08               	movwf	___lldiv@divisor+3,c
 29386  000DC8  EC20  F037         	call	___lldiv	;wreg free
 29387  000DCC  C001  F013         	movff	?___lldiv,itoa@val
 29388  000DD0  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29389  000DD4  0E00               	movlw	0
 29390  000DD6  6E16               	movwf	itoa@base+1,c
 29391  000DD8  0E0A               	movlw	10
 29392  000DDA  6E15               	movwf	itoa@base,c
 29393  000DDC  EC1A  F040         	call	_itoa	;wreg free
 29394                           
 29395                           ;display.c: 198: itoa(text+3, (uint16_t)(value%10000), 10);
 29396  000DE0  0E03               	movlw	3
 29397  000DE2  2423               	addwf	__display_itoa_u32@text,w,c
 29398  000DE4  6E11               	movwf	itoa@buf,c
 29399  000DE6  0E00               	movlw	0
 29400  000DE8  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29401  000DEA  6E12               	movwf	itoa@buf+1,c
 29402  000DEC  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29403  000DF0  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29404  000DF4  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29405  000DF8  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29406  000DFC  0E10               	movlw	16
 29407  000DFE  6E05               	movwf	___llmod@divisor,c
 29408  000E00  0E27               	movlw	39
 29409  000E02  6E06               	movwf	___llmod@divisor+1,c
 29410  000E04  0E00               	movlw	0
 29411  000E06  6E07               	movwf	___llmod@divisor+2,c
 29412  000E08  0E00               	movlw	0
 29413  000E0A  6E08               	movwf	___llmod@divisor+3,c
 29414  000E0C  ECBF  F03A         	call	___llmod	;wreg free
 29415  000E10  C001  F013         	movff	?___llmod,itoa@val
 29416  000E14  C002  F014         	movff	?___llmod+1,itoa@val+1
 29417  000E18  0E00               	movlw	0
 29418  000E1A  6E16               	movwf	itoa@base+1,c
 29419  000E1C  0E0A               	movlw	10
 29420  000E1E  6E15               	movwf	itoa@base,c
 29421  000E20  EC1A  F040         	call	_itoa	;wreg free
 29422                           
 29423                           ;display.c: 199: *(text+7) = ' ';
 29424  000E24  EE20 F007          	lfsr	2,7
 29425  000E28  5023               	movf	__display_itoa_u32@text,w,c
 29426  000E2A  26D9               	addwf	fsr2l,f,c
 29427  000E2C  5024               	movf	__display_itoa_u32@text+1,w,c
 29428  000E2E  22DA               	addwfc	fsr2h,f,c
 29429  000E30  0E20               	movlw	32
 29430  000E32  6EDF               	movwf	indf2,c
 29431                           
 29432                           ;display.c: 200: return 7;
 29433  000E34  0E07               	movlw	7
 29434                           
 29435                           ;display.c: 201: }
 29436  000E36  0012               	return	
 29437  000E38                     l1514:
 29438                           
 29439                           ;display.c: 202: else if(value>100000)
 29440  000E38  5022               	movf	__display_itoa_u32@value+3,w,c
 29441  000E3A  E108               	bnz	u7570
 29442  000E3C  0EA1               	movlw	161
 29443  000E3E  5C1F               	subwf	__display_itoa_u32@value,w,c
 29444  000E40  0E86               	movlw	134
 29445  000E42  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29446  000E44  0E01               	movlw	1
 29447  000E46  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29448  000E48  A0D8               	btfss	status,0,c
 29449  000E4A  D04C               	goto	l1516
 29450  000E4C                     u7570:
 29451                           
 29452                           ;display.c: 203: {;display.c: 204: itoa(text, (uint16_t)(value/10000), 10);
 29453  000E4C  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29454  000E50  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29455  000E54  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29456  000E58  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29457  000E5C  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29458  000E60  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29459  000E64  0E10               	movlw	16
 29460  000E66  6E05               	movwf	___lldiv@divisor,c
 29461  000E68  0E27               	movlw	39
 29462  000E6A  6E06               	movwf	___lldiv@divisor+1,c
 29463  000E6C  0E00               	movlw	0
 29464  000E6E  6E07               	movwf	___lldiv@divisor+2,c
 29465  000E70  0E00               	movlw	0
 29466  000E72  6E08               	movwf	___lldiv@divisor+3,c
 29467  000E74  EC20  F037         	call	___lldiv	;wreg free
 29468  000E78  C001  F013         	movff	?___lldiv,itoa@val
 29469  000E7C  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29470  000E80  0E00               	movlw	0
 29471  000E82  6E16               	movwf	itoa@base+1,c
 29472  000E84  0E0A               	movlw	10
 29473  000E86  6E15               	movwf	itoa@base,c
 29474  000E88  EC1A  F040         	call	_itoa	;wreg free
 29475                           
 29476                           ;display.c: 205: itoa(text+2, (uint16_t)(value%10000), 10);
 29477  000E8C  0E02               	movlw	2
 29478  000E8E  2423               	addwf	__display_itoa_u32@text,w,c
 29479  000E90  6E11               	movwf	itoa@buf,c
 29480  000E92  0E00               	movlw	0
 29481  000E94  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29482  000E96  6E12               	movwf	itoa@buf+1,c
 29483  000E98  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29484  000E9C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29485  000EA0  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29486  000EA4  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29487  000EA8  0E10               	movlw	16
 29488  000EAA  6E05               	movwf	___llmod@divisor,c
 29489  000EAC  0E27               	movlw	39
 29490  000EAE  6E06               	movwf	___llmod@divisor+1,c
 29491  000EB0  0E00               	movlw	0
 29492  000EB2  6E07               	movwf	___llmod@divisor+2,c
 29493  000EB4  0E00               	movlw	0
 29494  000EB6  6E08               	movwf	___llmod@divisor+3,c
 29495  000EB8  ECBF  F03A         	call	___llmod	;wreg free
 29496  000EBC  C001  F013         	movff	?___llmod,itoa@val
 29497  000EC0  C002  F014         	movff	?___llmod+1,itoa@val+1
 29498  000EC4  0E00               	movlw	0
 29499  000EC6  6E16               	movwf	itoa@base+1,c
 29500  000EC8  0E0A               	movlw	10
 29501  000ECA  6E15               	movwf	itoa@base,c
 29502  000ECC  EC1A  F040         	call	_itoa	;wreg free
 29503                           
 29504                           ;display.c: 206: *(text+6) = ' ';
 29505  000ED0  EE20 F006          	lfsr	2,6
 29506  000ED4  5023               	movf	__display_itoa_u32@text,w,c
 29507  000ED6  26D9               	addwf	fsr2l,f,c
 29508  000ED8  5024               	movf	__display_itoa_u32@text+1,w,c
 29509  000EDA  22DA               	addwfc	fsr2h,f,c
 29510  000EDC  0E20               	movlw	32
 29511  000EDE  6EDF               	movwf	indf2,c
 29512                           
 29513                           ;display.c: 207: return 6;
 29514  000EE0  0E06               	movlw	6
 29515                           
 29516                           ;display.c: 208: }
 29517  000EE2  0012               	return	
 29518  000EE4                     l1516:
 29519                           
 29520                           ;display.c: 209: else;display.c: 210: {;display.c: 211: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 29521  000EE4  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29522  000EE8  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29523  000EEC  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29524  000EF0  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29525  000EF4  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29526  000EF8  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29527  000EFC  0E10               	movlw	16
 29528  000EFE  6E05               	movwf	___lldiv@divisor,c
 29529  000F00  0E27               	movlw	39
 29530  000F02  6E06               	movwf	___lldiv@divisor+1,c
 29531  000F04  0E00               	movlw	0
 29532  000F06  6E07               	movwf	___lldiv@divisor+2,c
 29533  000F08  0E00               	movlw	0
 29534  000F0A  6E08               	movwf	___lldiv@divisor+3,c
 29535  000F0C  EC20  F037         	call	___lldiv	;wreg free
 29536  000F10  C001  F013         	movff	?___lldiv,itoa@val
 29537  000F14  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29538  000F18  0E00               	movlw	0
 29539  000F1A  6E16               	movwf	itoa@base+1,c
 29540  000F1C  0E0A               	movlw	10
 29541  000F1E  6E15               	movwf	itoa@base,c
 29542  000F20  EC1A  F040         	call	_itoa	;wreg free
 29543                           
 29544                           ;display.c: 212: itoa(text+1, (uint16_t)(value%10000), 10);
 29545  000F24  0E01               	movlw	1
 29546  000F26  2423               	addwf	__display_itoa_u32@text,w,c
 29547  000F28  6E11               	movwf	itoa@buf,c
 29548  000F2A  0E00               	movlw	0
 29549  000F2C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29550  000F2E  6E12               	movwf	itoa@buf+1,c
 29551  000F30  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29552  000F34  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29553  000F38  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29554  000F3C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29555  000F40  0E10               	movlw	16
 29556  000F42  6E05               	movwf	___llmod@divisor,c
 29557  000F44  0E27               	movlw	39
 29558  000F46  6E06               	movwf	___llmod@divisor+1,c
 29559  000F48  0E00               	movlw	0
 29560  000F4A  6E07               	movwf	___llmod@divisor+2,c
 29561  000F4C  0E00               	movlw	0
 29562  000F4E  6E08               	movwf	___llmod@divisor+3,c
 29563  000F50  ECBF  F03A         	call	___llmod	;wreg free
 29564  000F54  C001  F013         	movff	?___llmod,itoa@val
 29565  000F58  C002  F014         	movff	?___llmod+1,itoa@val+1
 29566  000F5C  0E00               	movlw	0
 29567  000F5E  6E16               	movwf	itoa@base+1,c
 29568  000F60  0E0A               	movlw	10
 29569  000F62  6E15               	movwf	itoa@base,c
 29570  000F64  EC1A  F040         	call	_itoa	;wreg free
 29571                           
 29572                           ;display.c: 213: *(text+5) = ' ';
 29573  000F68  EE20 F005          	lfsr	2,5
 29574  000F6C  5023               	movf	__display_itoa_u32@text,w,c
 29575  000F6E  26D9               	addwf	fsr2l,f,c
 29576  000F70  5024               	movf	__display_itoa_u32@text+1,w,c
 29577  000F72  22DA               	addwfc	fsr2h,f,c
 29578  000F74  0E20               	movlw	32
 29579  000F76  6EDF               	movwf	indf2,c
 29580                           
 29581                           ;display.c: 214: return 5;
 29582  000F78  0E05               	movlw	5
 29583  000F7A  0012               	return	
 29584  000F7C                     __end_of__display_itoa_u32:
 29585                           	opt stack 0
 29586                           tosu	equ	0xFFF
 29587                           tosh	equ	0xFFE
 29588                           tosl	equ	0xFFD
 29589                           pclath	equ	0xFFA
 29590                           tblptru	equ	0xFF8
 29591                           tblptrh	equ	0xFF7
 29592                           tblptrl	equ	0xFF6
 29593                           tablat	equ	0xFF5
 29594                           prodh	equ	0xFF4
 29595                           prodl	equ	0xFF3
 29596                           intcon	equ	0xFF2
 29597                           intcon2	equ	0xFF1
 29598                           intcon3	equ	0xFF0
 29599                           indf0	equ	0xFEF
 29600                           postinc0	equ	0xFEE
 29601                           fsr0h	equ	0xFEA
 29602                           fsr0l	equ	0xFE9
 29603                           wreg	equ	0xFE8
 29604                           indf1	equ	0xFE7
 29605                           postdec1	equ	0xFE5
 29606                           plusw1	equ	0xFE3
 29607                           fsr1h	equ	0xFE2
 29608                           fsr1l	equ	0xFE1
 29609                           indf2	equ	0xFDF
 29610                           postinc2	equ	0xFDE
 29611                           postdec2	equ	0xFDD
 29612                           plusw2	equ	0xFDB
 29613                           fsr2h	equ	0xFDA
 29614                           fsr2l	equ	0xFD9
 29615                           status	equ	0xFD8
 29616                           
 29617 ;; *************** function ___llmod *****************
 29618 ;; Defined at:
 29619 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 29620 ;; Parameters:    Size  Location     Type
 29621 ;;  dividend        4    0[COMRAM] unsigned long 
 29622 ;;  divisor         4    4[COMRAM] unsigned long 
 29623 ;; Auto vars:     Size  Location     Type
 29624 ;;  counter         1    8[COMRAM] unsigned char 
 29625 ;; Return value:  Size  Location     Type
 29626 ;;                  4    0[COMRAM] unsigned long 
 29627 ;; Registers used:
 29628 ;;		wreg, status,2, status,0
 29629 ;; Tracked objects:
 29630 ;;		On entry : 0/0
 29631 ;;		On exit  : 0/0
 29632 ;;		Unchanged: 0/0
 29633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29634 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29637 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29638 ;;Total ram usage:        9 bytes
 29639 ;; Hardware stack levels used:    1
 29640 ;; This function calls:
 29641 ;;		Nothing
 29642 ;; This function is called by:
 29643 ;;		__display_itoa_u32
 29644 ;; This function uses a non-reentrant model
 29645 ;;
 29646                           
 29647                           	psect	text143
 29648  00757E                     __ptext143:
 29649                           	opt stack 0
 29650  00757E                     ___llmod:
 29651                           	opt stack 24
 29652                           
 29653                           ;incstack = 0
 29654  00757E  5005               	movf	___llmod@divisor,w,c
 29655  007580  1006               	iorwf	___llmod@divisor+1,w,c
 29656  007582  1007               	iorwf	___llmod@divisor+2,w,c
 29657  007584  1008               	iorwf	___llmod@divisor+3,w,c
 29658  007586  B4D8               	btfsc	status,2,c
 29659  007588  D024               	goto	l3328
 29660  00758A  0E01               	movlw	1
 29661  00758C  6E09               	movwf	___llmod@counter,c
 29662  00758E  D006               	goto	l3323
 29663  007590  90D8               	bcf	status,0,c
 29664  007592  3605               	rlcf	___llmod@divisor,f,c
 29665  007594  3606               	rlcf	___llmod@divisor+1,f,c
 29666  007596  3607               	rlcf	___llmod@divisor+2,f,c
 29667  007598  3608               	rlcf	___llmod@divisor+3,f,c
 29668  00759A  2A09               	incf	___llmod@counter,f,c
 29669  00759C                     l3323:
 29670  00759C  AE08               	btfss	___llmod@divisor+3,7,c
 29671  00759E  D7F8               	goto	l3324
 29672  0075A0                     u7160:
 29673  0075A0  5005               	movf	___llmod@divisor,w,c
 29674  0075A2  5C01               	subwf	___llmod@dividend,w,c
 29675  0075A4  5006               	movf	___llmod@divisor+1,w,c
 29676  0075A6  5802               	subwfb	___llmod@dividend+1,w,c
 29677  0075A8  5007               	movf	___llmod@divisor+2,w,c
 29678  0075AA  5803               	subwfb	___llmod@dividend+2,w,c
 29679  0075AC  5008               	movf	___llmod@divisor+3,w,c
 29680  0075AE  5804               	subwfb	___llmod@dividend+3,w,c
 29681  0075B0  A0D8               	btfss	status,0,c
 29682  0075B2  D008               	goto	l3327
 29683  0075B4  5005               	movf	___llmod@divisor,w,c
 29684  0075B6  5E01               	subwf	___llmod@dividend,f,c
 29685  0075B8  5006               	movf	___llmod@divisor+1,w,c
 29686  0075BA  5A02               	subwfb	___llmod@dividend+1,f,c
 29687  0075BC  5007               	movf	___llmod@divisor+2,w,c
 29688  0075BE  5A03               	subwfb	___llmod@dividend+2,f,c
 29689  0075C0  5008               	movf	___llmod@divisor+3,w,c
 29690  0075C2  5A04               	subwfb	___llmod@dividend+3,f,c
 29691  0075C4                     l3327:
 29692  0075C4  90D8               	bcf	status,0,c
 29693  0075C6  3208               	rrcf	___llmod@divisor+3,f,c
 29694  0075C8  3207               	rrcf	___llmod@divisor+2,f,c
 29695  0075CA  3206               	rrcf	___llmod@divisor+1,f,c
 29696  0075CC  3205               	rrcf	___llmod@divisor,f,c
 29697  0075CE  2E09               	decfsz	___llmod@counter,f,c
 29698  0075D0  D7E7               	goto	u7160
 29699  0075D2                     l3328:
 29700  0075D2  C001  F001         	movff	___llmod@dividend,?___llmod
 29701  0075D6  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 29702  0075DA  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 29703  0075DE  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 29704  0075E2  0012               	return		;funcret
 29705  0075E4                     __end_of___llmod:
 29706                           	opt stack 0
 29707                           tosu	equ	0xFFF
 29708                           tosh	equ	0xFFE
 29709                           tosl	equ	0xFFD
 29710                           pclath	equ	0xFFA
 29711                           tblptru	equ	0xFF8
 29712                           tblptrh	equ	0xFF7
 29713                           tblptrl	equ	0xFF6
 29714                           tablat	equ	0xFF5
 29715                           prodh	equ	0xFF4
 29716                           prodl	equ	0xFF3
 29717                           intcon	equ	0xFF2
 29718                           intcon2	equ	0xFF1
 29719                           intcon3	equ	0xFF0
 29720                           indf0	equ	0xFEF
 29721                           postinc0	equ	0xFEE
 29722                           fsr0h	equ	0xFEA
 29723                           fsr0l	equ	0xFE9
 29724                           wreg	equ	0xFE8
 29725                           indf1	equ	0xFE7
 29726                           postdec1	equ	0xFE5
 29727                           plusw1	equ	0xFE3
 29728                           fsr1h	equ	0xFE2
 29729                           fsr1l	equ	0xFE1
 29730                           indf2	equ	0xFDF
 29731                           postinc2	equ	0xFDE
 29732                           postdec2	equ	0xFDD
 29733                           plusw2	equ	0xFDB
 29734                           fsr2h	equ	0xFDA
 29735                           fsr2l	equ	0xFD9
 29736                           status	equ	0xFD8
 29737                           
 29738 ;; *************** function ___lldiv *****************
 29739 ;; Defined at:
 29740 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 29741 ;; Parameters:    Size  Location     Type
 29742 ;;  dividend        4    0[COMRAM] unsigned long 
 29743 ;;  divisor         4    4[COMRAM] unsigned long 
 29744 ;; Auto vars:     Size  Location     Type
 29745 ;;  quotient        4    8[COMRAM] unsigned long 
 29746 ;;  counter         1   12[COMRAM] unsigned char 
 29747 ;; Return value:  Size  Location     Type
 29748 ;;                  4    0[COMRAM] unsigned long 
 29749 ;; Registers used:
 29750 ;;		wreg, status,2, status,0
 29751 ;; Tracked objects:
 29752 ;;		On entry : 0/0
 29753 ;;		On exit  : 0/0
 29754 ;;		Unchanged: 0/0
 29755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29756 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29757 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29759 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29760 ;;Total ram usage:       13 bytes
 29761 ;; Hardware stack levels used:    1
 29762 ;; This function calls:
 29763 ;;		Nothing
 29764 ;; This function is called by:
 29765 ;;		__display_itoa_u32
 29766 ;; This function uses a non-reentrant model
 29767 ;;
 29768                           
 29769                           	psect	text144
 29770  006E40                     __ptext144:
 29771                           	opt stack 0
 29772  006E40                     ___lldiv:
 29773                           	opt stack 24
 29774                           
 29775                           ;incstack = 0
 29776  006E40  0E00               	movlw	0
 29777  006E42  6E09               	movwf	___lldiv@quotient,c
 29778  006E44  0E00               	movlw	0
 29779  006E46  6E0A               	movwf	___lldiv@quotient+1,c
 29780  006E48  0E00               	movlw	0
 29781  006E4A  6E0B               	movwf	___lldiv@quotient+2,c
 29782  006E4C  0E00               	movlw	0
 29783  006E4E  6E0C               	movwf	___lldiv@quotient+3,c
 29784  006E50  5005               	movf	___lldiv@divisor,w,c
 29785  006E52  1006               	iorwf	___lldiv@divisor+1,w,c
 29786  006E54  1007               	iorwf	___lldiv@divisor+2,w,c
 29787  006E56  1008               	iorwf	___lldiv@divisor+3,w,c
 29788  006E58  B4D8               	btfsc	status,2,c
 29789  006E5A  D02A               	goto	l2947
 29790  006E5C  0E01               	movlw	1
 29791  006E5E  6E0D               	movwf	___lldiv@counter,c
 29792  006E60  D006               	goto	l2942
 29793  006E62  90D8               	bcf	status,0,c
 29794  006E64  3605               	rlcf	___lldiv@divisor,f,c
 29795  006E66  3606               	rlcf	___lldiv@divisor+1,f,c
 29796  006E68  3607               	rlcf	___lldiv@divisor+2,f,c
 29797  006E6A  3608               	rlcf	___lldiv@divisor+3,f,c
 29798  006E6C  2A0D               	incf	___lldiv@counter,f,c
 29799  006E6E                     l2942:
 29800  006E6E  AE08               	btfss	___lldiv@divisor+3,7,c
 29801  006E70  D7F8               	goto	l2943
 29802  006E72                     u7130:
 29803  006E72  90D8               	bcf	status,0,c
 29804  006E74  3609               	rlcf	___lldiv@quotient,f,c
 29805  006E76  360A               	rlcf	___lldiv@quotient+1,f,c
 29806  006E78  360B               	rlcf	___lldiv@quotient+2,f,c
 29807  006E7A  360C               	rlcf	___lldiv@quotient+3,f,c
 29808  006E7C  5005               	movf	___lldiv@divisor,w,c
 29809  006E7E  5C01               	subwf	___lldiv@dividend,w,c
 29810  006E80  5006               	movf	___lldiv@divisor+1,w,c
 29811  006E82  5802               	subwfb	___lldiv@dividend+1,w,c
 29812  006E84  5007               	movf	___lldiv@divisor+2,w,c
 29813  006E86  5803               	subwfb	___lldiv@dividend+2,w,c
 29814  006E88  5008               	movf	___lldiv@divisor+3,w,c
 29815  006E8A  5804               	subwfb	___lldiv@dividend+3,w,c
 29816  006E8C  A0D8               	btfss	status,0,c
 29817  006E8E  D009               	goto	l2946
 29818  006E90  5005               	movf	___lldiv@divisor,w,c
 29819  006E92  5E01               	subwf	___lldiv@dividend,f,c
 29820  006E94  5006               	movf	___lldiv@divisor+1,w,c
 29821  006E96  5A02               	subwfb	___lldiv@dividend+1,f,c
 29822  006E98  5007               	movf	___lldiv@divisor+2,w,c
 29823  006E9A  5A03               	subwfb	___lldiv@dividend+2,f,c
 29824  006E9C  5008               	movf	___lldiv@divisor+3,w,c
 29825  006E9E  5A04               	subwfb	___lldiv@dividend+3,f,c
 29826  006EA0  8009               	bsf	___lldiv@quotient,0,c
 29827  006EA2                     l2946:
 29828  006EA2  90D8               	bcf	status,0,c
 29829  006EA4  3208               	rrcf	___lldiv@divisor+3,f,c
 29830  006EA6  3207               	rrcf	___lldiv@divisor+2,f,c
 29831  006EA8  3206               	rrcf	___lldiv@divisor+1,f,c
 29832  006EAA  3205               	rrcf	___lldiv@divisor,f,c
 29833  006EAC  2E0D               	decfsz	___lldiv@counter,f,c
 29834  006EAE  D7E1               	goto	u7130
 29835  006EB0                     l2947:
 29836  006EB0  C009  F001         	movff	___lldiv@quotient,?___lldiv
 29837  006EB4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 29838  006EB8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 29839  006EBC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 29840  006EC0  0012               	return		;funcret
 29841  006EC2                     __end_of___lldiv:
 29842                           	opt stack 0
 29843                           tosu	equ	0xFFF
 29844                           tosh	equ	0xFFE
 29845                           tosl	equ	0xFFD
 29846                           pclath	equ	0xFFA
 29847                           tblptru	equ	0xFF8
 29848                           tblptrh	equ	0xFF7
 29849                           tblptrl	equ	0xFF6
 29850                           tablat	equ	0xFF5
 29851                           prodh	equ	0xFF4
 29852                           prodl	equ	0xFF3
 29853                           intcon	equ	0xFF2
 29854                           intcon2	equ	0xFF1
 29855                           intcon3	equ	0xFF0
 29856                           indf0	equ	0xFEF
 29857                           postinc0	equ	0xFEE
 29858                           fsr0h	equ	0xFEA
 29859                           fsr0l	equ	0xFE9
 29860                           wreg	equ	0xFE8
 29861                           indf1	equ	0xFE7
 29862                           postdec1	equ	0xFE5
 29863                           plusw1	equ	0xFE3
 29864                           fsr1h	equ	0xFE2
 29865                           fsr1l	equ	0xFE1
 29866                           indf2	equ	0xFDF
 29867                           postinc2	equ	0xFDE
 29868                           postdec2	equ	0xFDD
 29869                           plusw2	equ	0xFDB
 29870                           fsr2h	equ	0xFDA
 29871                           fsr2l	equ	0xFD9
 29872                           status	equ	0xFD8
 29873                           
 29874 ;; *************** function __display_done *****************
 29875 ;; Defined at:
 29876 ;;		line 529 in file "display.c"
 29877 ;; Parameters:    Size  Location     Type
 29878 ;;		None
 29879 ;; Auto vars:     Size  Location     Type
 29880 ;;  cntr            1   30[COMRAM] unsigned char 
 29881 ;; Return value:  Size  Location     Type
 29882 ;;                  1    wreg      void 
 29883 ;; Registers used:
 29884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29885 ;; Tracked objects:
 29886 ;;		On entry : 0/0
 29887 ;;		On exit  : 0/0
 29888 ;;		Unchanged: 0/0
 29889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29894 ;;Total ram usage:        1 bytes
 29895 ;; Hardware stack levels used:    1
 29896 ;; Hardware stack levels required when called:    4
 29897 ;; This function calls:
 29898 ;;		__display_itoa_u16
 29899 ;;		_bootloader_get_flashPagesWritten
 29900 ;; This function is called by:
 29901 ;;		_display_prepare
 29902 ;; This function uses a non-reentrant model
 29903 ;;
 29904                           
 29905                           	psect	text145
 29906  003C44                     __ptext145:
 29907                           	opt stack 0
 29908  003C44                     __display_done:
 29909                           	opt stack 22
 29910                           
 29911                           ;display.c: 531: uint8_t cntr;;display.c: 532: cntr = 0;
 29912                           
 29913                           ;incstack = 0
 29914  003C44  0E00               	movlw	0
 29915  003C46  6E1F               	movwf	__display_done@cntr,c
 29916                           
 29917                           ;display.c: 533: while(done_line1[cntr])
 29918  003C48  D017               	goto	l1686
 29919  003C4A                     
 29920                           ;display.c: 534: display_content[0][cntr] = done_line1[cntr++];
 29921  003C4A  501F               	movf	__display_done@cntr,w,c
 29922  003C4C  0D01               	mullw	1
 29923  003C4E  0E74               	movlw	low _done_line1
 29924  003C50  24F3               	addwf	prodl,w,c
 29925  003C52  6EF6               	movwf	tblptrl,c
 29926  003C54  0E8D               	movlw	high _done_line1
 29927  003C56  20F4               	addwfc	prodh,w,c
 29928  003C58  6EF7               	movwf	tblptrh,c
 29929  003C5A                     	if	1	;There are 3 active tblptr bytes
 29930  003C5A  6AF8               	clrf	tblptru,c
 29931  003C5C  0E00               	movlw	low (__mediumconst shr (0+16))
 29932  003C5E  22F8               	addwfc	tblptru,f,c
 29933  003C60                     	endif
 29934  003C60  501F               	movf	__display_done@cntr,w,c
 29935  003C62  0D01               	mullw	1
 29936  003C64  0E00               	movlw	low _display_content
 29937  003C66  24F3               	addwf	prodl,w,c
 29938  003C68  6ED9               	movwf	fsr2l,c
 29939  003C6A  0E02               	movlw	high _display_content
 29940  003C6C  20F4               	addwfc	prodh,w,c
 29941  003C6E  6EDA               	movwf	fsr2h,c
 29942  003C70  0008               	tblrd		*
 29943  003C72  CFF5 FFDF          	movff	tablat,indf2
 29944  003C76  2A1F               	incf	__display_done@cntr,f,c
 29945  003C78                     l1686:
 29946  003C78  501F               	movf	__display_done@cntr,w,c
 29947  003C7A  0D01               	mullw	1
 29948  003C7C  0E74               	movlw	low _done_line1
 29949  003C7E  24F3               	addwf	prodl,w,c
 29950  003C80  6EF6               	movwf	tblptrl,c
 29951  003C82  0E8D               	movlw	high _done_line1
 29952  003C84  20F4               	addwfc	prodh,w,c
 29953  003C86  6EF7               	movwf	tblptrh,c
 29954  003C88                     	if	1	;There are 3 active tblptr bytes
 29955  003C88  6AF8               	clrf	tblptru,c
 29956  003C8A  0E00               	movlw	low (__mediumconst shr (0+16))
 29957  003C8C  22F8               	addwfc	tblptru,f,c
 29958  003C8E                     	endif
 29959  003C8E  0008               	tblrd		*
 29960  003C90  50F5               	movf	tablat,w,c
 29961  003C92  0900               	iorlw	0
 29962  003C94  A4D8               	btfss	status,2,c
 29963  003C96  D7D9               	goto	l1687
 29964                           
 29965                           ;display.c: 535: cntr = 0;
 29966  003C98  0E00               	movlw	0
 29967  003C9A  6E1F               	movwf	__display_done@cntr,c
 29968                           
 29969                           ;display.c: 536: while(done_line2[cntr])
 29970  003C9C  D017               	goto	l1689
 29971  003C9E                     
 29972                           ;display.c: 537: display_content[1][cntr] = done_line2[cntr++];
 29973  003C9E  501F               	movf	__display_done@cntr,w,c
 29974  003CA0  0D01               	mullw	1
 29975  003CA2  0E9F               	movlw	low _done_line2
 29976  003CA4  24F3               	addwf	prodl,w,c
 29977  003CA6  6EF6               	movwf	tblptrl,c
 29978  003CA8  0E8E               	movlw	high _done_line2
 29979  003CAA  20F4               	addwfc	prodh,w,c
 29980  003CAC  6EF7               	movwf	tblptrh,c
 29981  003CAE                     	if	1	;There are 3 active tblptr bytes
 29982  003CAE  6AF8               	clrf	tblptru,c
 29983  003CB0  0E00               	movlw	low (__mediumconst shr (0+16))
 29984  003CB2  22F8               	addwfc	tblptru,f,c
 29985  003CB4                     	endif
 29986  003CB4  501F               	movf	__display_done@cntr,w,c
 29987  003CB6  0D01               	mullw	1
 29988  003CB8  0E14               	movlw	low (_display_content+20)
 29989  003CBA  24F3               	addwf	prodl,w,c
 29990  003CBC  6ED9               	movwf	fsr2l,c
 29991  003CBE  0E02               	movlw	high (_display_content+20)
 29992  003CC0  20F4               	addwfc	prodh,w,c
 29993  003CC2  6EDA               	movwf	fsr2h,c
 29994  003CC4  0008               	tblrd		*
 29995  003CC6  CFF5 FFDF          	movff	tablat,indf2
 29996  003CCA  2A1F               	incf	__display_done@cntr,f,c
 29997  003CCC                     l1689:
 29998  003CCC  501F               	movf	__display_done@cntr,w,c
 29999  003CCE  0D01               	mullw	1
 30000  003CD0  0E9F               	movlw	low _done_line2
 30001  003CD2  24F3               	addwf	prodl,w,c
 30002  003CD4  6EF6               	movwf	tblptrl,c
 30003  003CD6  0E8E               	movlw	high _done_line2
 30004  003CD8  20F4               	addwfc	prodh,w,c
 30005  003CDA  6EF7               	movwf	tblptrh,c
 30006  003CDC                     	if	1	;There are 3 active tblptr bytes
 30007  003CDC  6AF8               	clrf	tblptru,c
 30008  003CDE  0E00               	movlw	low (__mediumconst shr (0+16))
 30009  003CE0  22F8               	addwfc	tblptru,f,c
 30010  003CE2                     	endif
 30011  003CE2  0008               	tblrd		*
 30012  003CE4  50F5               	movf	tablat,w,c
 30013  003CE6  0900               	iorlw	0
 30014  003CE8  A4D8               	btfss	status,2,c
 30015  003CEA  D7D9               	goto	l1690
 30016                           
 30017                           ;display.c: 538: cntr = 0;
 30018  003CEC  0E00               	movlw	0
 30019  003CEE  6E1F               	movwf	__display_done@cntr,c
 30020                           
 30021                           ;display.c: 539: while(done_line3[cntr])
 30022  003CF0  D017               	goto	l1692
 30023  003CF2                     
 30024                           ;display.c: 540: display_content[2][cntr] = done_line3[cntr++];
 30025  003CF2  501F               	movf	__display_done@cntr,w,c
 30026  003CF4  0D01               	mullw	1
 30027  003CF6  0E64               	movlw	low _done_line3
 30028  003CF8  24F3               	addwf	prodl,w,c
 30029  003CFA  6EF6               	movwf	tblptrl,c
 30030  003CFC  0E8D               	movlw	high _done_line3
 30031  003CFE  20F4               	addwfc	prodh,w,c
 30032  003D00  6EF7               	movwf	tblptrh,c
 30033  003D02                     	if	1	;There are 3 active tblptr bytes
 30034  003D02  6AF8               	clrf	tblptru,c
 30035  003D04  0E00               	movlw	low (__mediumconst shr (0+16))
 30036  003D06  22F8               	addwfc	tblptru,f,c
 30037  003D08                     	endif
 30038  003D08  501F               	movf	__display_done@cntr,w,c
 30039  003D0A  0D01               	mullw	1
 30040  003D0C  0E28               	movlw	low (_display_content+40)
 30041  003D0E  24F3               	addwf	prodl,w,c
 30042  003D10  6ED9               	movwf	fsr2l,c
 30043  003D12  0E02               	movlw	high (_display_content+40)
 30044  003D14  20F4               	addwfc	prodh,w,c
 30045  003D16  6EDA               	movwf	fsr2h,c
 30046  003D18  0008               	tblrd		*
 30047  003D1A  CFF5 FFDF          	movff	tablat,indf2
 30048  003D1E  2A1F               	incf	__display_done@cntr,f,c
 30049  003D20                     l1692:
 30050  003D20  501F               	movf	__display_done@cntr,w,c
 30051  003D22  0D01               	mullw	1
 30052  003D24  0E64               	movlw	low _done_line3
 30053  003D26  24F3               	addwf	prodl,w,c
 30054  003D28  6EF6               	movwf	tblptrl,c
 30055  003D2A  0E8D               	movlw	high _done_line3
 30056  003D2C  20F4               	addwfc	prodh,w,c
 30057  003D2E  6EF7               	movwf	tblptrh,c
 30058  003D30                     	if	1	;There are 3 active tblptr bytes
 30059  003D30  6AF8               	clrf	tblptru,c
 30060  003D32  0E00               	movlw	low (__mediumconst shr (0+16))
 30061  003D34  22F8               	addwfc	tblptru,f,c
 30062  003D36                     	endif
 30063  003D36  0008               	tblrd		*
 30064  003D38  50F5               	movf	tablat,w,c
 30065  003D3A  0900               	iorlw	0
 30066  003D3C  A4D8               	btfss	status,2,c
 30067  003D3E  D7D9               	goto	l1693
 30068                           
 30069                           ;display.c: 541: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 30070  003D40  ECAC  F044         	call	_bootloader_get_flashPagesWritten	;wreg free
 30071  003D44  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 30072  003D48  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 30073  003D4C  6A1B               	clrf	__display_itoa_u16@value+2,c
 30074  003D4E  6A1C               	clrf	__display_itoa_u16@value+3,c
 30075  003D50  501F               	movf	__display_done@cntr,w,c
 30076  003D52  0D01               	mullw	1
 30077  003D54  0E28               	movlw	low (_display_content+40)
 30078  003D56  24F3               	addwf	prodl,w,c
 30079  003D58  6E1D               	movwf	__display_itoa_u16@text,c
 30080  003D5A  0E02               	movlw	high (_display_content+40)
 30081  003D5C  20F4               	addwfc	prodh,w,c
 30082  003D5E  6E1E               	movwf	__display_itoa_u16@text+1,c
 30083  003D60  EC4F  F02E         	call	__display_itoa_u16	;wreg free
 30084                           
 30085                           ;display.c: 542: cntr = 0;
 30086  003D64  0E00               	movlw	0
 30087  003D66  6E1F               	movwf	__display_done@cntr,c
 30088                           
 30089                           ;display.c: 543: while(done_line4[cntr])
 30090  003D68  D017               	goto	l1695
 30091  003D6A                     
 30092                           ;display.c: 544: display_content[3][cntr] = done_line4[cntr++];
 30093  003D6A  501F               	movf	__display_done@cntr,w,c
 30094  003D6C  0D01               	mullw	1
 30095  003D6E  0E54               	movlw	low _done_line4
 30096  003D70  24F3               	addwf	prodl,w,c
 30097  003D72  6EF6               	movwf	tblptrl,c
 30098  003D74  0E8D               	movlw	high _done_line4
 30099  003D76  20F4               	addwfc	prodh,w,c
 30100  003D78  6EF7               	movwf	tblptrh,c
 30101  003D7A                     	if	1	;There are 3 active tblptr bytes
 30102  003D7A  6AF8               	clrf	tblptru,c
 30103  003D7C  0E00               	movlw	low (__mediumconst shr (0+16))
 30104  003D7E  22F8               	addwfc	tblptru,f,c
 30105  003D80                     	endif
 30106  003D80  501F               	movf	__display_done@cntr,w,c
 30107  003D82  0D01               	mullw	1
 30108  003D84  0E3C               	movlw	low (_display_content+60)
 30109  003D86  24F3               	addwf	prodl,w,c
 30110  003D88  6ED9               	movwf	fsr2l,c
 30111  003D8A  0E02               	movlw	high (_display_content+60)
 30112  003D8C  20F4               	addwfc	prodh,w,c
 30113  003D8E  6EDA               	movwf	fsr2h,c
 30114  003D90  0008               	tblrd		*
 30115  003D92  CFF5 FFDF          	movff	tablat,indf2
 30116  003D96  2A1F               	incf	__display_done@cntr,f,c
 30117  003D98                     l1695:
 30118  003D98  501F               	movf	__display_done@cntr,w,c
 30119  003D9A  0D01               	mullw	1
 30120  003D9C  0E54               	movlw	low _done_line4
 30121  003D9E  24F3               	addwf	prodl,w,c
 30122  003DA0  6EF6               	movwf	tblptrl,c
 30123  003DA2  0E8D               	movlw	high _done_line4
 30124  003DA4  20F4               	addwfc	prodh,w,c
 30125  003DA6  6EF7               	movwf	tblptrh,c
 30126  003DA8                     	if	1	;There are 3 active tblptr bytes
 30127  003DA8  6AF8               	clrf	tblptru,c
 30128  003DAA  0E00               	movlw	low (__mediumconst shr (0+16))
 30129  003DAC  22F8               	addwfc	tblptru,f,c
 30130  003DAE                     	endif
 30131  003DAE  0008               	tblrd		*
 30132  003DB0  50F5               	movf	tablat,w,c
 30133  003DB2  0900               	iorlw	0
 30134  003DB4  B4D8               	btfsc	status,2,c
 30135  003DB6  0012               	return	
 30136  003DB8  D7D8               	goto	l1696
 30137  003DBA                     __end_of__display_done:
 30138                           	opt stack 0
 30139                           tosu	equ	0xFFF
 30140                           tosh	equ	0xFFE
 30141                           tosl	equ	0xFFD
 30142                           pclath	equ	0xFFA
 30143                           tblptru	equ	0xFF8
 30144                           tblptrh	equ	0xFF7
 30145                           tblptrl	equ	0xFF6
 30146                           tablat	equ	0xFF5
 30147                           prodh	equ	0xFF4
 30148                           prodl	equ	0xFF3
 30149                           intcon	equ	0xFF2
 30150                           intcon2	equ	0xFF1
 30151                           intcon3	equ	0xFF0
 30152                           indf0	equ	0xFEF
 30153                           postinc0	equ	0xFEE
 30154                           fsr0h	equ	0xFEA
 30155                           fsr0l	equ	0xFE9
 30156                           wreg	equ	0xFE8
 30157                           indf1	equ	0xFE7
 30158                           postdec1	equ	0xFE5
 30159                           plusw1	equ	0xFE3
 30160                           fsr1h	equ	0xFE2
 30161                           fsr1l	equ	0xFE1
 30162                           indf2	equ	0xFDF
 30163                           postinc2	equ	0xFDE
 30164                           postdec2	equ	0xFDD
 30165                           plusw2	equ	0xFDB
 30166                           fsr2h	equ	0xFDA
 30167                           fsr2l	equ	0xFD9
 30168                           status	equ	0xFD8
 30169                           
 30170 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30171 ;; Defined at:
 30172 ;;		line 508 in file "bootloader.c"
 30173 ;; Parameters:    Size  Location     Type
 30174 ;;		None
 30175 ;; Auto vars:     Size  Location     Type
 30176 ;;		None
 30177 ;; Return value:  Size  Location     Type
 30178 ;;                  2    0[COMRAM] unsigned int 
 30179 ;; Registers used:
 30180 ;;		None
 30181 ;; Tracked objects:
 30182 ;;		On entry : 0/0
 30183 ;;		On exit  : 0/0
 30184 ;;		Unchanged: 0/0
 30185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30190 ;;Total ram usage:        2 bytes
 30191 ;; Hardware stack levels used:    1
 30192 ;; This function calls:
 30193 ;;		Nothing
 30194 ;; This function is called by:
 30195 ;;		__display_programming
 30196 ;;		__display_done
 30197 ;;		__fill_buffer_get_bootloader_details
 30198 ;; This function uses a non-reentrant model
 30199 ;;
 30200                           
 30201                           	psect	text146
 30202  008958                     __ptext146:
 30203                           	opt stack 0
 30204  008958                     _bootloader_get_flashPagesWritten:
 30205                           	opt stack 25
 30206                           
 30207                           ;bootloader.c: 510: return flash_pages_written;
 30208                           
 30209                           ;incstack = 0
 30210  008958  C170  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30211  00895C  C171  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30212  008960  0012               	return		;funcret
 30213  008962                     __end_of_bootloader_get_flashPagesWritten:
 30214                           	opt stack 0
 30215                           tosu	equ	0xFFF
 30216                           tosh	equ	0xFFE
 30217                           tosl	equ	0xFFD
 30218                           pclath	equ	0xFFA
 30219                           tblptru	equ	0xFF8
 30220                           tblptrh	equ	0xFF7
 30221                           tblptrl	equ	0xFF6
 30222                           tablat	equ	0xFF5
 30223                           prodh	equ	0xFF4
 30224                           prodl	equ	0xFF3
 30225                           intcon	equ	0xFF2
 30226                           intcon2	equ	0xFF1
 30227                           intcon3	equ	0xFF0
 30228                           indf0	equ	0xFEF
 30229                           postinc0	equ	0xFEE
 30230                           fsr0h	equ	0xFEA
 30231                           fsr0l	equ	0xFE9
 30232                           wreg	equ	0xFE8
 30233                           indf1	equ	0xFE7
 30234                           postdec1	equ	0xFE5
 30235                           plusw1	equ	0xFE3
 30236                           fsr1h	equ	0xFE2
 30237                           fsr1l	equ	0xFE1
 30238                           indf2	equ	0xFDF
 30239                           postinc2	equ	0xFDE
 30240                           postdec2	equ	0xFDD
 30241                           plusw2	equ	0xFDB
 30242                           fsr2h	equ	0xFDA
 30243                           fsr2l	equ	0xFD9
 30244                           status	equ	0xFD8
 30245                           
 30246 ;; *************** function __display_clear *****************
 30247 ;; Defined at:
 30248 ;;		line 75 in file "display.c"
 30249 ;; Parameters:    Size  Location     Type
 30250 ;;		None
 30251 ;; Auto vars:     Size  Location     Type
 30252 ;;  col             1    3[COMRAM] unsigned char 
 30253 ;;  row             1    2[COMRAM] unsigned char 
 30254 ;; Return value:  Size  Location     Type
 30255 ;;                  1    wreg      void 
 30256 ;; Registers used:
 30257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30258 ;; Tracked objects:
 30259 ;;		On entry : 0/0
 30260 ;;		On exit  : 0/0
 30261 ;;		Unchanged: 0/0
 30262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30264 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30266 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30267 ;;Total ram usage:        4 bytes
 30268 ;; Hardware stack levels used:    1
 30269 ;; This function calls:
 30270 ;;		Nothing
 30271 ;; This function is called by:
 30272 ;;		_display_prepare
 30273 ;; This function uses a non-reentrant model
 30274 ;;
 30275                           
 30276                           	psect	text147
 30277  007E92                     __ptext147:
 30278                           	opt stack 0
 30279  007E92                     __display_clear:
 30280                           	opt stack 26
 30281                           
 30282                           ;display.c: 77: uint8_t row;;display.c: 78: uint8_t col;;display.c: 79: for(row=0;row<4;
      +                          ++row)
 30283                           
 30284                           ;incstack = 0
 30285  007E92  0E00               	movlw	0
 30286  007E94  6E03               	movwf	__display_clear@row,c
 30287  007E96                     l11192:
 30288  007E96  0E03               	movlw	3
 30289  007E98  6403               	cpfsgt	__display_clear@row,c
 30290  007E9A  D001               	goto	l1464
 30291  007E9C  0012               	return	
 30292  007E9E                     l1464:
 30293                           
 30294                           ;display.c: 80: {;display.c: 81: for(col=0;col<20;++col)
 30295  007E9E  0E00               	movlw	0
 30296  007EA0  6E04               	movwf	__display_clear@col,c
 30297  007EA2                     l11198:
 30298  007EA2  0E13               	movlw	19
 30299  007EA4  6404               	cpfsgt	__display_clear@col,c
 30300  007EA6  D001               	goto	l1466
 30301  007EA8  D016               	goto	u8160
 30302  007EAA                     l1466:
 30303                           
 30304                           ;display.c: 82: {;display.c: 83: display_content[row][col] = ' ';
 30305  007EAA  5003               	movf	__display_clear@row,w,c
 30306  007EAC  0D14               	mullw	20
 30307  007EAE  0E00               	movlw	low _display_content
 30308  007EB0  6E01               	movwf	??__display_clear& (0+255),c
 30309  007EB2  0E02               	movlw	high _display_content
 30310  007EB4  6E02               	movwf	(??__display_clear+1)& (0+255),c
 30311  007EB6  50F3               	movf	prodl,w,c
 30312  007EB8  2601               	addwf	??__display_clear,f,c
 30313  007EBA  50F4               	movf	prodh,w,c
 30314  007EBC  2202               	addwfc	??__display_clear+1,f,c
 30315  007EBE  5004               	movf	__display_clear@col,w,c
 30316  007EC0  0D01               	mullw	1
 30317  007EC2  50F3               	movf	prodl,w,c
 30318  007EC4  2401               	addwf	??__display_clear,w,c
 30319  007EC6  6ED9               	movwf	fsr2l,c
 30320  007EC8  50F4               	movf	prodh,w,c
 30321  007ECA  2002               	addwfc	??__display_clear+1,w,c
 30322  007ECC  6EDA               	movwf	fsr2h,c
 30323  007ECE  0E20               	movlw	32
 30324  007ED0  6EDF               	movwf	indf2,c
 30325  007ED2  2A04               	incf	__display_clear@col,f,c
 30326  007ED4  D7E6               	goto	l11198
 30327  007ED6                     u8160:
 30328  007ED6  2A03               	incf	__display_clear@row,f,c
 30329  007ED8  D7DE               	goto	l11192
 30330  007EDA                     __end_of__display_clear:
 30331                           	opt stack 0
 30332                           tosu	equ	0xFFF
 30333                           tosh	equ	0xFFE
 30334                           tosl	equ	0xFFD
 30335                           pclath	equ	0xFFA
 30336                           tblptru	equ	0xFF8
 30337                           tblptrh	equ	0xFF7
 30338                           tblptrl	equ	0xFF6
 30339                           tablat	equ	0xFF5
 30340                           prodh	equ	0xFF4
 30341                           prodl	equ	0xFF3
 30342                           intcon	equ	0xFF2
 30343                           intcon2	equ	0xFF1
 30344                           intcon3	equ	0xFF0
 30345                           indf0	equ	0xFEF
 30346                           postinc0	equ	0xFEE
 30347                           fsr0h	equ	0xFEA
 30348                           fsr0l	equ	0xFE9
 30349                           wreg	equ	0xFE8
 30350                           indf1	equ	0xFE7
 30351                           postdec1	equ	0xFE5
 30352                           plusw1	equ	0xFE3
 30353                           fsr1h	equ	0xFE2
 30354                           fsr1l	equ	0xFE1
 30355                           indf2	equ	0xFDF
 30356                           postinc2	equ	0xFDE
 30357                           postdec2	equ	0xFDD
 30358                           plusw2	equ	0xFDB
 30359                           fsr2h	equ	0xFDA
 30360                           fsr2l	equ	0xFD9
 30361                           status	equ	0xFD8
 30362                           
 30363 ;; *************** function __display_checked *****************
 30364 ;; Defined at:
 30365 ;;		line 433 in file "display.c"
 30366 ;; Parameters:    Size  Location     Type
 30367 ;;		None
 30368 ;; Auto vars:     Size  Location     Type
 30369 ;;  cntr            1   33[COMRAM] unsigned char 
 30370 ;;  start           1   32[COMRAM] unsigned char 
 30371 ;; Return value:  Size  Location     Type
 30372 ;;                  1    wreg      void 
 30373 ;; Registers used:
 30374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30375 ;; Tracked objects:
 30376 ;;		On entry : 0/0
 30377 ;;		On exit  : 0/0
 30378 ;;		Unchanged: 0/0
 30379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30383 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30384 ;;Total ram usage:        4 bytes
 30385 ;; Hardware stack levels used:    1
 30386 ;; Hardware stack levels required when called:    4
 30387 ;; This function calls:
 30388 ;;		__display_itoa_u16
 30389 ;;		_bootloader_get_total_entries
 30390 ;; This function is called by:
 30391 ;;		_display_prepare
 30392 ;; This function uses a non-reentrant model
 30393 ;;
 30394                           
 30395                           	psect	text148
 30396  003AC8                     __ptext148:
 30397                           	opt stack 0
 30398  003AC8                     __display_checked:
 30399                           	opt stack 22
 30400                           
 30401                           ;display.c: 435: uint8_t cntr;;display.c: 436: uint8_t start;;display.c: 437: cntr = 0;
 30402                           
 30403                           ;incstack = 0
 30404  003AC8  0E00               	movlw	0
 30405  003ACA  6E22               	movwf	__display_checked@cntr,c
 30406                           
 30407                           ;display.c: 438: while(checked_line1[cntr])
 30408  003ACC  D017               	goto	l1622
 30409  003ACE                     
 30410                           ;display.c: 439: display_content[0][cntr] = checked_line1[cntr++];
 30411  003ACE  5022               	movf	__display_checked@cntr,w,c
 30412  003AD0  0D01               	mullw	1
 30413  003AD2  0EB4               	movlw	low _checked_line1
 30414  003AD4  24F3               	addwf	prodl,w,c
 30415  003AD6  6EF6               	movwf	tblptrl,c
 30416  003AD8  0E8D               	movlw	high _checked_line1
 30417  003ADA  20F4               	addwfc	prodh,w,c
 30418  003ADC  6EF7               	movwf	tblptrh,c
 30419  003ADE                     	if	1	;There are 3 active tblptr bytes
 30420  003ADE  6AF8               	clrf	tblptru,c
 30421  003AE0  0E00               	movlw	low (__mediumconst shr (0+16))
 30422  003AE2  22F8               	addwfc	tblptru,f,c
 30423  003AE4                     	endif
 30424  003AE4  5022               	movf	__display_checked@cntr,w,c
 30425  003AE6  0D01               	mullw	1
 30426  003AE8  0E00               	movlw	low _display_content
 30427  003AEA  24F3               	addwf	prodl,w,c
 30428  003AEC  6ED9               	movwf	fsr2l,c
 30429  003AEE  0E02               	movlw	high _display_content
 30430  003AF0  20F4               	addwfc	prodh,w,c
 30431  003AF2  6EDA               	movwf	fsr2h,c
 30432  003AF4  0008               	tblrd		*
 30433  003AF6  CFF5 FFDF          	movff	tablat,indf2
 30434  003AFA  2A22               	incf	__display_checked@cntr,f,c
 30435  003AFC                     l1622:
 30436  003AFC  5022               	movf	__display_checked@cntr,w,c
 30437  003AFE  0D01               	mullw	1
 30438  003B00  0EB4               	movlw	low _checked_line1
 30439  003B02  24F3               	addwf	prodl,w,c
 30440  003B04  6EF6               	movwf	tblptrl,c
 30441  003B06  0E8D               	movlw	high _checked_line1
 30442  003B08  20F4               	addwfc	prodh,w,c
 30443  003B0A  6EF7               	movwf	tblptrh,c
 30444  003B0C                     	if	1	;There are 3 active tblptr bytes
 30445  003B0C  6AF8               	clrf	tblptru,c
 30446  003B0E  0E00               	movlw	low (__mediumconst shr (0+16))
 30447  003B10  22F8               	addwfc	tblptru,f,c
 30448  003B12                     	endif
 30449  003B12  0008               	tblrd		*
 30450  003B14  50F5               	movf	tablat,w,c
 30451  003B16  0900               	iorlw	0
 30452  003B18  A4D8               	btfss	status,2,c
 30453  003B1A  D7D9               	goto	l1623
 30454                           
 30455                           ;display.c: 440: cntr = 0;
 30456  003B1C  0E00               	movlw	0
 30457  003B1E  6E22               	movwf	__display_checked@cntr,c
 30458                           
 30459                           ;display.c: 441: while(checked_line2[cntr])
 30460  003B20  D017               	goto	l1625
 30461  003B22                     
 30462                           ;display.c: 442: display_content[1][cntr] = checked_line2[cntr++];
 30463  003B22  5022               	movf	__display_checked@cntr,w,c
 30464  003B24  0D01               	mullw	1
 30465  003B26  0E99               	movlw	low _checked_line2
 30466  003B28  24F3               	addwf	prodl,w,c
 30467  003B2A  6EF6               	movwf	tblptrl,c
 30468  003B2C  0E8C               	movlw	high _checked_line2
 30469  003B2E  20F4               	addwfc	prodh,w,c
 30470  003B30  6EF7               	movwf	tblptrh,c
 30471  003B32                     	if	1	;There are 3 active tblptr bytes
 30472  003B32  6AF8               	clrf	tblptru,c
 30473  003B34  0E00               	movlw	low (__mediumconst shr (0+16))
 30474  003B36  22F8               	addwfc	tblptru,f,c
 30475  003B38                     	endif
 30476  003B38  5022               	movf	__display_checked@cntr,w,c
 30477  003B3A  0D01               	mullw	1
 30478  003B3C  0E14               	movlw	low (_display_content+20)
 30479  003B3E  24F3               	addwf	prodl,w,c
 30480  003B40  6ED9               	movwf	fsr2l,c
 30481  003B42  0E02               	movlw	high (_display_content+20)
 30482  003B44  20F4               	addwfc	prodh,w,c
 30483  003B46  6EDA               	movwf	fsr2h,c
 30484  003B48  0008               	tblrd		*
 30485  003B4A  CFF5 FFDF          	movff	tablat,indf2
 30486  003B4E  2A22               	incf	__display_checked@cntr,f,c
 30487  003B50                     l1625:
 30488  003B50  5022               	movf	__display_checked@cntr,w,c
 30489  003B52  0D01               	mullw	1
 30490  003B54  0E99               	movlw	low _checked_line2
 30491  003B56  24F3               	addwf	prodl,w,c
 30492  003B58  6EF6               	movwf	tblptrl,c
 30493  003B5A  0E8C               	movlw	high _checked_line2
 30494  003B5C  20F4               	addwfc	prodh,w,c
 30495  003B5E  6EF7               	movwf	tblptrh,c
 30496  003B60                     	if	1	;There are 3 active tblptr bytes
 30497  003B60  6AF8               	clrf	tblptru,c
 30498  003B62  0E00               	movlw	low (__mediumconst shr (0+16))
 30499  003B64  22F8               	addwfc	tblptru,f,c
 30500  003B66                     	endif
 30501  003B66  0008               	tblrd		*
 30502  003B68  50F5               	movf	tablat,w,c
 30503  003B6A  0900               	iorlw	0
 30504  003B6C  A4D8               	btfss	status,2,c
 30505  003B6E  D7D9               	goto	l1626
 30506                           
 30507                           ;display.c: 444: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 30508  003B70  ECB1  F044         	call	_bootloader_get_total_entries	;wreg free
 30509  003B74  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 30510  003B78  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 30511  003B7C  6A1B               	clrf	__display_itoa_u16@value+2,c
 30512  003B7E  6A1C               	clrf	__display_itoa_u16@value+3,c
 30513  003B80  0E28               	movlw	low (_display_content+40)
 30514  003B82  6E1D               	movwf	__display_itoa_u16@text,c
 30515  003B84  0E02               	movlw	high (_display_content+40)
 30516  003B86  6E1E               	movwf	__display_itoa_u16@text+1,c
 30517  003B88  EC4F  F02E         	call	__display_itoa_u16	;wreg free
 30518  003B8C  6E21               	movwf	__display_checked@start,c
 30519                           
 30520                           ;display.c: 445: start++;
 30521  003B8E  2A21               	incf	__display_checked@start,f,c
 30522                           
 30523                           ;display.c: 446: cntr = 0;
 30524  003B90  0E00               	movlw	0
 30525  003B92  6E22               	movwf	__display_checked@cntr,c
 30526                           
 30527                           ;display.c: 447: while(checked_line3[cntr])
 30528  003B94  D01C               	goto	l1628
 30529  003B96                     
 30530                           ;display.c: 448: display_content[2][start+cntr] = checked_line3[cntr++];
 30531  003B96  5022               	movf	__display_checked@cntr,w,c
 30532  003B98  0D01               	mullw	1
 30533  003B9A  0E73               	movlw	low _checked_line3
 30534  003B9C  24F3               	addwf	prodl,w,c
 30535  003B9E  6EF6               	movwf	tblptrl,c
 30536  003BA0  0E8E               	movlw	high _checked_line3
 30537  003BA2  20F4               	addwfc	prodh,w,c
 30538  003BA4  6EF7               	movwf	tblptrh,c
 30539  003BA6                     	if	1	;There are 3 active tblptr bytes
 30540  003BA6  6AF8               	clrf	tblptru,c
 30541  003BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 30542  003BAA  22F8               	addwfc	tblptru,f,c
 30543  003BAC                     	endif
 30544  003BAC  5022               	movf	__display_checked@cntr,w,c
 30545  003BAE  C021  F01F         	movff	__display_checked@start,??__display_checked
 30546  003BB2  6A20               	clrf	(??__display_checked+1)& (0+255),c
 30547  003BB4  261F               	addwf	??__display_checked,f,c
 30548  003BB6  0E00               	movlw	0
 30549  003BB8  2220               	addwfc	??__display_checked+1,f,c
 30550  003BBA  0E28               	movlw	low (_display_content+40)
 30551  003BBC  241F               	addwf	??__display_checked,w,c
 30552  003BBE  6ED9               	movwf	fsr2l,c
 30553  003BC0  0E02               	movlw	high (_display_content+40)
 30554  003BC2  2020               	addwfc	??__display_checked+1,w,c
 30555  003BC4  6EDA               	movwf	fsr2h,c
 30556  003BC6  0008               	tblrd		*
 30557  003BC8  CFF5 FFDF          	movff	tablat,indf2
 30558  003BCC  2A22               	incf	__display_checked@cntr,f,c
 30559  003BCE                     l1628:
 30560  003BCE  5022               	movf	__display_checked@cntr,w,c
 30561  003BD0  0D01               	mullw	1
 30562  003BD2  0E73               	movlw	low _checked_line3
 30563  003BD4  24F3               	addwf	prodl,w,c
 30564  003BD6  6EF6               	movwf	tblptrl,c
 30565  003BD8  0E8E               	movlw	high _checked_line3
 30566  003BDA  20F4               	addwfc	prodh,w,c
 30567  003BDC  6EF7               	movwf	tblptrh,c
 30568  003BDE                     	if	1	;There are 3 active tblptr bytes
 30569  003BDE  6AF8               	clrf	tblptru,c
 30570  003BE0  0E00               	movlw	low (__mediumconst shr (0+16))
 30571  003BE2  22F8               	addwfc	tblptru,f,c
 30572  003BE4                     	endif
 30573  003BE4  0008               	tblrd		*
 30574  003BE6  50F5               	movf	tablat,w,c
 30575  003BE8  0900               	iorlw	0
 30576  003BEA  A4D8               	btfss	status,2,c
 30577  003BEC  D7D4               	goto	l1629
 30578                           
 30579                           ;display.c: 450: cntr = 0;
 30580  003BEE  0E00               	movlw	0
 30581  003BF0  6E22               	movwf	__display_checked@cntr,c
 30582                           
 30583                           ;display.c: 451: while(checked_line4[cntr])
 30584  003BF2  D017               	goto	l1631
 30585  003BF4                     
 30586                           ;display.c: 452: display_content[3][cntr] = checked_line4[cntr++];
 30587  003BF4  5022               	movf	__display_checked@cntr,w,c
 30588  003BF6  0D01               	mullw	1
 30589  003BF8  0E32               	movlw	low _checked_line4
 30590  003BFA  24F3               	addwf	prodl,w,c
 30591  003BFC  6EF6               	movwf	tblptrl,c
 30592  003BFE  0E8D               	movlw	high _checked_line4
 30593  003C00  20F4               	addwfc	prodh,w,c
 30594  003C02  6EF7               	movwf	tblptrh,c
 30595  003C04                     	if	1	;There are 3 active tblptr bytes
 30596  003C04  6AF8               	clrf	tblptru,c
 30597  003C06  0E00               	movlw	low (__mediumconst shr (0+16))
 30598  003C08  22F8               	addwfc	tblptru,f,c
 30599  003C0A                     	endif
 30600  003C0A  5022               	movf	__display_checked@cntr,w,c
 30601  003C0C  0D01               	mullw	1
 30602  003C0E  0E3C               	movlw	low (_display_content+60)
 30603  003C10  24F3               	addwf	prodl,w,c
 30604  003C12  6ED9               	movwf	fsr2l,c
 30605  003C14  0E02               	movlw	high (_display_content+60)
 30606  003C16  20F4               	addwfc	prodh,w,c
 30607  003C18  6EDA               	movwf	fsr2h,c
 30608  003C1A  0008               	tblrd		*
 30609  003C1C  CFF5 FFDF          	movff	tablat,indf2
 30610  003C20  2A22               	incf	__display_checked@cntr,f,c
 30611  003C22                     l1631:
 30612  003C22  5022               	movf	__display_checked@cntr,w,c
 30613  003C24  0D01               	mullw	1
 30614  003C26  0E32               	movlw	low _checked_line4
 30615  003C28  24F3               	addwf	prodl,w,c
 30616  003C2A  6EF6               	movwf	tblptrl,c
 30617  003C2C  0E8D               	movlw	high _checked_line4
 30618  003C2E  20F4               	addwfc	prodh,w,c
 30619  003C30  6EF7               	movwf	tblptrh,c
 30620  003C32                     	if	1	;There are 3 active tblptr bytes
 30621  003C32  6AF8               	clrf	tblptru,c
 30622  003C34  0E00               	movlw	low (__mediumconst shr (0+16))
 30623  003C36  22F8               	addwfc	tblptru,f,c
 30624  003C38                     	endif
 30625  003C38  0008               	tblrd		*
 30626  003C3A  50F5               	movf	tablat,w,c
 30627  003C3C  0900               	iorlw	0
 30628  003C3E  B4D8               	btfsc	status,2,c
 30629  003C40  0012               	return	
 30630  003C42  D7D8               	goto	l1632
 30631  003C44                     __end_of__display_checked:
 30632                           	opt stack 0
 30633                           tosu	equ	0xFFF
 30634                           tosh	equ	0xFFE
 30635                           tosl	equ	0xFFD
 30636                           pclath	equ	0xFFA
 30637                           tblptru	equ	0xFF8
 30638                           tblptrh	equ	0xFF7
 30639                           tblptrl	equ	0xFF6
 30640                           tablat	equ	0xFF5
 30641                           prodh	equ	0xFF4
 30642                           prodl	equ	0xFF3
 30643                           intcon	equ	0xFF2
 30644                           intcon2	equ	0xFF1
 30645                           intcon3	equ	0xFF0
 30646                           indf0	equ	0xFEF
 30647                           postinc0	equ	0xFEE
 30648                           fsr0h	equ	0xFEA
 30649                           fsr0l	equ	0xFE9
 30650                           wreg	equ	0xFE8
 30651                           indf1	equ	0xFE7
 30652                           postdec1	equ	0xFE5
 30653                           plusw1	equ	0xFE3
 30654                           fsr1h	equ	0xFE2
 30655                           fsr1l	equ	0xFE1
 30656                           indf2	equ	0xFDF
 30657                           postinc2	equ	0xFDE
 30658                           postdec2	equ	0xFDD
 30659                           plusw2	equ	0xFDB
 30660                           fsr2h	equ	0xFDA
 30661                           fsr2l	equ	0xFD9
 30662                           status	equ	0xFD8
 30663                           
 30664 ;; *************** function _bootloader_get_total_entries *****************
 30665 ;; Defined at:
 30666 ;;		line 467 in file "bootloader.c"
 30667 ;; Parameters:    Size  Location     Type
 30668 ;;		None
 30669 ;; Auto vars:     Size  Location     Type
 30670 ;;		None
 30671 ;; Return value:  Size  Location     Type
 30672 ;;                  2    0[COMRAM] unsigned int 
 30673 ;; Registers used:
 30674 ;;		None
 30675 ;; Tracked objects:
 30676 ;;		On entry : 0/0
 30677 ;;		On exit  : 0/0
 30678 ;;		Unchanged: 0/0
 30679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30684 ;;Total ram usage:        2 bytes
 30685 ;; Hardware stack levels used:    1
 30686 ;; This function calls:
 30687 ;;		Nothing
 30688 ;; This function is called by:
 30689 ;;		__display_checked
 30690 ;;		__display_programming
 30691 ;;		__fill_buffer_get_bootloader_details
 30692 ;; This function uses a non-reentrant model
 30693 ;;
 30694                           
 30695                           	psect	text149
 30696  008962                     __ptext149:
 30697                           	opt stack 0
 30698  008962                     _bootloader_get_total_entries:
 30699                           	opt stack 25
 30700                           
 30701                           ;bootloader.c: 469: return total_hex_file_entries;
 30702                           
 30703                           ;incstack = 0
 30704  008962  C172  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 30705  008966  C173  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 30706  00896A  0012               	return		;funcret
 30707  00896C                     __end_of_bootloader_get_total_entries:
 30708                           	opt stack 0
 30709                           tosu	equ	0xFFF
 30710                           tosh	equ	0xFFE
 30711                           tosl	equ	0xFFD
 30712                           pclath	equ	0xFFA
 30713                           tblptru	equ	0xFF8
 30714                           tblptrh	equ	0xFF7
 30715                           tblptrl	equ	0xFF6
 30716                           tablat	equ	0xFF5
 30717                           prodh	equ	0xFF4
 30718                           prodl	equ	0xFF3
 30719                           intcon	equ	0xFF2
 30720                           intcon2	equ	0xFF1
 30721                           intcon3	equ	0xFF0
 30722                           indf0	equ	0xFEF
 30723                           postinc0	equ	0xFEE
 30724                           fsr0h	equ	0xFEA
 30725                           fsr0l	equ	0xFE9
 30726                           wreg	equ	0xFE8
 30727                           indf1	equ	0xFE7
 30728                           postdec1	equ	0xFE5
 30729                           plusw1	equ	0xFE3
 30730                           fsr1h	equ	0xFE2
 30731                           fsr1l	equ	0xFE1
 30732                           indf2	equ	0xFDF
 30733                           postinc2	equ	0xFDE
 30734                           postdec2	equ	0xFDD
 30735                           plusw2	equ	0xFDB
 30736                           fsr2h	equ	0xFDA
 30737                           fsr2l	equ	0xFD9
 30738                           status	equ	0xFD8
 30739                           
 30740 ;; *************** function __display_itoa_u16 *****************
 30741 ;; Defined at:
 30742 ;;		line 88 in file "display.c"
 30743 ;; Parameters:    Size  Location     Type
 30744 ;;  value           4   24[COMRAM] unsigned long 
 30745 ;;  text            2   28[COMRAM] PTR unsigned char 
 30746 ;;		 -> display_content(80), 
 30747 ;; Auto vars:     Size  Location     Type
 30748 ;;		None
 30749 ;; Return value:  Size  Location     Type
 30750 ;;                  1    wreg      unsigned char 
 30751 ;; Registers used:
 30752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30753 ;; Tracked objects:
 30754 ;;		On entry : 0/0
 30755 ;;		On exit  : 0/0
 30756 ;;		Unchanged: 0/0
 30757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30758 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30761 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30762 ;;Total ram usage:        6 bytes
 30763 ;; Hardware stack levels used:    1
 30764 ;; Hardware stack levels required when called:    3
 30765 ;; This function calls:
 30766 ;;		_itoa
 30767 ;; This function is called by:
 30768 ;;		__display_itoa_u32
 30769 ;;		__display_verify
 30770 ;;		__display_checked
 30771 ;;		__display_failed
 30772 ;;		__display_programming
 30773 ;;		__display_done
 30774 ;; This function uses a non-reentrant model
 30775 ;;
 30776                           
 30777                           	psect	text150
 30778  005C9E                     __ptext150:
 30779                           	opt stack 0
 30780  005C9E                     __display_itoa_u16:
 30781                           	opt stack 22
 30782                           
 30783                           ;display.c: 90: itoa(text, value, 10);
 30784                           
 30785                           ;incstack = 0
 30786  005C9E  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 30787  005CA2  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 30788  005CA6  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 30789  005CAA  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 30790  005CAE  0E00               	movlw	0
 30791  005CB0  6E16               	movwf	itoa@base+1,c
 30792  005CB2  0E0A               	movlw	10
 30793  005CB4  6E15               	movwf	itoa@base,c
 30794  005CB6  EC1A  F040         	call	_itoa	;wreg free
 30795                           
 30796                           ;display.c: 91: if(value>9999)
 30797  005CBA  501C               	movf	__display_itoa_u16@value+3,w,c
 30798  005CBC  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30799  005CBE  E106               	bnz	u7030
 30800  005CC0  0E10               	movlw	16
 30801  005CC2  5C19               	subwf	__display_itoa_u16@value,w,c
 30802  005CC4  0E27               	movlw	39
 30803  005CC6  581A               	subwfb	__display_itoa_u16@value+1,w,c
 30804  005CC8  A0D8               	btfss	status,0,c
 30805  005CCA  D00A               	goto	l1471
 30806  005CCC                     u7030:
 30807                           
 30808                           ;display.c: 92: {;display.c: 93: *(text+5) = ' ';
 30809  005CCC  EE20 F005          	lfsr	2,5
 30810  005CD0  501D               	movf	__display_itoa_u16@text,w,c
 30811  005CD2  26D9               	addwf	fsr2l,f,c
 30812  005CD4  501E               	movf	__display_itoa_u16@text+1,w,c
 30813  005CD6  22DA               	addwfc	fsr2h,f,c
 30814  005CD8  0E20               	movlw	32
 30815  005CDA  6EDF               	movwf	indf2,c
 30816                           
 30817                           ;display.c: 94: return 5;
 30818  005CDC  0E05               	movlw	5
 30819                           
 30820                           ;display.c: 95: }
 30821  005CDE  0012               	return	
 30822  005CE0                     l1471:
 30823                           
 30824                           ;display.c: 96: else if (value>999)
 30825  005CE0  501C               	movf	__display_itoa_u16@value+3,w,c
 30826  005CE2  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30827  005CE4  E106               	bnz	u7040
 30828  005CE6  0EE8               	movlw	232
 30829  005CE8  5C19               	subwf	__display_itoa_u16@value,w,c
 30830  005CEA  0E03               	movlw	3
 30831  005CEC  581A               	subwfb	__display_itoa_u16@value+1,w,c
 30832  005CEE  A0D8               	btfss	status,0,c
 30833  005CF0  D00A               	goto	l1474
 30834  005CF2                     u7040:
 30835                           
 30836                           ;display.c: 97: {;display.c: 98: *(text+4) = ' ';
 30837  005CF2  EE20 F004          	lfsr	2,4
 30838  005CF6  501D               	movf	__display_itoa_u16@text,w,c
 30839  005CF8  26D9               	addwf	fsr2l,f,c
 30840  005CFA  501E               	movf	__display_itoa_u16@text+1,w,c
 30841  005CFC  22DA               	addwfc	fsr2h,f,c
 30842  005CFE  0E20               	movlw	32
 30843  005D00  6EDF               	movwf	indf2,c
 30844                           
 30845                           ;display.c: 99: return 4;
 30846  005D02  0E04               	movlw	4
 30847                           
 30848                           ;display.c: 100: }
 30849  005D04  0012               	return	
 30850  005D06                     l1474:
 30851                           
 30852                           ;display.c: 101: else if (value>99)
 30853  005D06  501C               	movf	__display_itoa_u16@value+3,w,c
 30854  005D08  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30855  005D0A  101A               	iorwf	__display_itoa_u16@value+1,w,c
 30856  005D0C  E104               	bnz	u7050
 30857  005D0E  0E64               	movlw	100
 30858  005D10  5C19               	subwf	__display_itoa_u16@value,w,c
 30859  005D12  A0D8               	btfss	status,0,c
 30860  005D14  D00A               	goto	l1476
 30861  005D16                     u7050:
 30862                           
 30863                           ;display.c: 102: {;display.c: 103: *(text+3) = ' ';
 30864  005D16  EE20 F003          	lfsr	2,3
 30865  005D1A  501D               	movf	__display_itoa_u16@text,w,c
 30866  005D1C  26D9               	addwf	fsr2l,f,c
 30867  005D1E  501E               	movf	__display_itoa_u16@text+1,w,c
 30868  005D20  22DA               	addwfc	fsr2h,f,c
 30869  005D22  0E20               	movlw	32
 30870  005D24  6EDF               	movwf	indf2,c
 30871                           
 30872                           ;display.c: 104: return 3;
 30873  005D26  0E03               	movlw	3
 30874                           
 30875                           ;display.c: 105: }
 30876  005D28  0012               	return	
 30877  005D2A                     l1476:
 30878                           
 30879                           ;display.c: 106: else if (value>9)
 30880  005D2A  501C               	movf	__display_itoa_u16@value+3,w,c
 30881  005D2C  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30882  005D2E  101A               	iorwf	__display_itoa_u16@value+1,w,c
 30883  005D30  E104               	bnz	u7060
 30884  005D32  0E0A               	movlw	10
 30885  005D34  5C19               	subwf	__display_itoa_u16@value,w,c
 30886  005D36  A0D8               	btfss	status,0,c
 30887  005D38  D00A               	goto	l1478
 30888  005D3A                     u7060:
 30889                           
 30890                           ;display.c: 107: {;display.c: 108: *(text+2) = ' ';
 30891  005D3A  EE20 F002          	lfsr	2,2
 30892  005D3E  501D               	movf	__display_itoa_u16@text,w,c
 30893  005D40  26D9               	addwf	fsr2l,f,c
 30894  005D42  501E               	movf	__display_itoa_u16@text+1,w,c
 30895  005D44  22DA               	addwfc	fsr2h,f,c
 30896  005D46  0E20               	movlw	32
 30897  005D48  6EDF               	movwf	indf2,c
 30898                           
 30899                           ;display.c: 109: return 2;
 30900  005D4A  0E02               	movlw	2
 30901                           
 30902                           ;display.c: 110: }
 30903  005D4C  0012               	return	
 30904  005D4E                     l1478:
 30905                           
 30906                           ;display.c: 111: else;display.c: 112: {;display.c: 113: *(text+1) = ' ';
 30907  005D4E  EE20 F001          	lfsr	2,1
 30908  005D52  501D               	movf	__display_itoa_u16@text,w,c
 30909  005D54  26D9               	addwf	fsr2l,f,c
 30910  005D56  501E               	movf	__display_itoa_u16@text+1,w,c
 30911  005D58  22DA               	addwfc	fsr2h,f,c
 30912  005D5A  0E20               	movlw	32
 30913  005D5C  6EDF               	movwf	indf2,c
 30914                           
 30915                           ;display.c: 114: return 1;
 30916  005D5E  0E01               	movlw	1
 30917  005D60  0012               	return	
 30918  005D62                     __end_of__display_itoa_u16:
 30919                           	opt stack 0
 30920                           tosu	equ	0xFFF
 30921                           tosh	equ	0xFFE
 30922                           tosl	equ	0xFFD
 30923                           pclath	equ	0xFFA
 30924                           tblptru	equ	0xFF8
 30925                           tblptrh	equ	0xFF7
 30926                           tblptrl	equ	0xFF6
 30927                           tablat	equ	0xFF5
 30928                           prodh	equ	0xFF4
 30929                           prodl	equ	0xFF3
 30930                           intcon	equ	0xFF2
 30931                           intcon2	equ	0xFF1
 30932                           intcon3	equ	0xFF0
 30933                           indf0	equ	0xFEF
 30934                           postinc0	equ	0xFEE
 30935                           fsr0h	equ	0xFEA
 30936                           fsr0l	equ	0xFE9
 30937                           wreg	equ	0xFE8
 30938                           indf1	equ	0xFE7
 30939                           postdec1	equ	0xFE5
 30940                           plusw1	equ	0xFE3
 30941                           fsr1h	equ	0xFE2
 30942                           fsr1l	equ	0xFE1
 30943                           indf2	equ	0xFDF
 30944                           postinc2	equ	0xFDE
 30945                           postdec2	equ	0xFDD
 30946                           plusw2	equ	0xFDB
 30947                           fsr2h	equ	0xFDA
 30948                           fsr2l	equ	0xFD9
 30949                           status	equ	0xFD8
 30950                           
 30951 ;; *************** function _itoa *****************
 30952 ;; Defined at:
 30953 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 30954 ;; Parameters:    Size  Location     Type
 30955 ;;  buf             2   16[COMRAM] PTR unsigned char 
 30956 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 30957 ;;  val             2   18[COMRAM] int 
 30958 ;;  base            2   20[COMRAM] int 
 30959 ;; Auto vars:     Size  Location     Type
 30960 ;;  cp              2   22[COMRAM] PTR unsigned char 
 30961 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 30962 ;; Return value:  Size  Location     Type
 30963 ;;                  2   16[COMRAM] PTR unsigned char 
 30964 ;; Registers used:
 30965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30966 ;; Tracked objects:
 30967 ;;		On entry : 0/0
 30968 ;;		On exit  : 0/0
 30969 ;;		Unchanged: 0/0
 30970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30971 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30974 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30975 ;;Total ram usage:        8 bytes
 30976 ;; Hardware stack levels used:    1
 30977 ;; Hardware stack levels required when called:    2
 30978 ;; This function calls:
 30979 ;;		_utoa
 30980 ;; This function is called by:
 30981 ;;		__display_itoa_u16
 30982 ;;		__display_itoa_u32
 30983 ;;		__display_itoa
 30984 ;; This function uses a non-reentrant model
 30985 ;;
 30986                           
 30987                           	psect	text151
 30988  008034                     __ptext151:
 30989                           	opt stack 0
 30990  008034                     _itoa:
 30991                           	opt stack 22
 30992                           
 30993                           ;incstack = 0
 30994  008034  C011  F017         	movff	itoa@buf,itoa@cp
 30995  008038  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 30996  00803C  AE14               	btfss	itoa@val+1,7,c
 30997  00803E  D00C               	goto	l3578
 30998  008040  C011  FFD9         	movff	itoa@buf,fsr2l
 30999  008044  C012  FFDA         	movff	itoa@buf+1,fsr2h
 31000  008048  0E2D               	movlw	45
 31001  00804A  6EDF               	movwf	indf2,c
 31002  00804C  4A11               	infsnz	itoa@buf,f,c
 31003  00804E  2A12               	incf	itoa@buf+1,f,c
 31004  008050  6C13               	negf	itoa@val,c
 31005  008052  1E14               	comf	itoa@val+1,f,c
 31006  008054  B0D8               	btfsc	status,0,c
 31007  008056  2A14               	incf	itoa@val+1,f,c
 31008  008058                     l3578:
 31009  008058  C011  F008         	movff	itoa@buf,utoa@buf
 31010  00805C  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 31011  008060  C013  F00A         	movff	itoa@val,utoa@val
 31012  008064  C014  F00B         	movff	itoa@val+1,utoa@val+1
 31013  008068  C015  F00C         	movff	itoa@base,utoa@base
 31014  00806C  C016  F00D         	movff	itoa@base+1,utoa@base+1
 31015  008070  EC2C  F032         	call	_utoa	;wreg free
 31016  008074  0012               	return	
 31017  008076                     __end_of_itoa:
 31018                           	opt stack 0
 31019                           tosu	equ	0xFFF
 31020                           tosh	equ	0xFFE
 31021                           tosl	equ	0xFFD
 31022                           pclath	equ	0xFFA
 31023                           tblptru	equ	0xFF8
 31024                           tblptrh	equ	0xFF7
 31025                           tblptrl	equ	0xFF6
 31026                           tablat	equ	0xFF5
 31027                           prodh	equ	0xFF4
 31028                           prodl	equ	0xFF3
 31029                           intcon	equ	0xFF2
 31030                           intcon2	equ	0xFF1
 31031                           intcon3	equ	0xFF0
 31032                           indf0	equ	0xFEF
 31033                           postinc0	equ	0xFEE
 31034                           fsr0h	equ	0xFEA
 31035                           fsr0l	equ	0xFE9
 31036                           wreg	equ	0xFE8
 31037                           indf1	equ	0xFE7
 31038                           postdec1	equ	0xFE5
 31039                           plusw1	equ	0xFE3
 31040                           fsr1h	equ	0xFE2
 31041                           fsr1l	equ	0xFE1
 31042                           indf2	equ	0xFDF
 31043                           postinc2	equ	0xFDE
 31044                           postdec2	equ	0xFDD
 31045                           plusw2	equ	0xFDB
 31046                           fsr2h	equ	0xFDA
 31047                           fsr2l	equ	0xFD9
 31048                           status	equ	0xFD8
 31049                           
 31050 ;; *************** function _utoa *****************
 31051 ;; Defined at:
 31052 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31053 ;; Parameters:    Size  Location     Type
 31054 ;;  buf             2    7[COMRAM] PTR unsigned char 
 31055 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31056 ;;  val             2    9[COMRAM] unsigned int 
 31057 ;;  base            2   11[COMRAM] int 
 31058 ;; Auto vars:     Size  Location     Type
 31059 ;;  v               2   13[COMRAM] unsigned int 
 31060 ;;  c               1   15[COMRAM] unsigned char 
 31061 ;; Return value:  Size  Location     Type
 31062 ;;                  2    7[COMRAM] PTR unsigned char 
 31063 ;; Registers used:
 31064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31065 ;; Tracked objects:
 31066 ;;		On entry : 0/0
 31067 ;;		On exit  : 0/0
 31068 ;;		Unchanged: 0/0
 31069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31070 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31071 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31073 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31074 ;;Total ram usage:        9 bytes
 31075 ;; Hardware stack levels used:    1
 31076 ;; Hardware stack levels required when called:    1
 31077 ;; This function calls:
 31078 ;;		___lwdiv
 31079 ;;		___lwmod
 31080 ;; This function is called by:
 31081 ;;		_itoa
 31082 ;; This function uses a non-reentrant model
 31083 ;;
 31084                           
 31085                           	psect	text152
 31086  006458                     __ptext152:
 31087                           	opt stack 0
 31088  006458                     _utoa:
 31089                           	opt stack 22
 31090                           
 31091                           ;incstack = 0
 31092  006458  C00A  F00E         	movff	utoa@val,utoa@v
 31093  00645C  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 31094  006460  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 31095  006464  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 31096  006468  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31097  00646C  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31098  006470  ECA7  F03E         	call	___lwdiv	;wreg free
 31099  006474  C001  F00E         	movff	?___lwdiv,utoa@v
 31100  006478  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 31101  00647C  4A08               	infsnz	utoa@buf,f,c
 31102  00647E  2A09               	incf	utoa@buf+1,f,c
 31103  006480  500E               	movf	utoa@v,w,c
 31104  006482  100F               	iorwf	utoa@v+1,w,c
 31105  006484  A4D8               	btfss	status,2,c
 31106  006486  D7EC               	goto	l3582
 31107  006488  C008  FFD9         	movff	utoa@buf,fsr2l
 31108  00648C  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31109  006490  0E00               	movlw	0
 31110  006492  6EDF               	movwf	indf2,c
 31111  006494  0608               	decf	utoa@buf,f,c
 31112  006496  A0D8               	btfss	status,0,c
 31113  006498  0609               	decf	utoa@buf+1,f,c
 31114  00649A  C00A  F001         	movff	utoa@val,___lwmod@dividend
 31115  00649E  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 31116  0064A2  C00C  F003         	movff	utoa@base,___lwmod@divisor
 31117  0064A6  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 31118  0064AA  EC3B  F040         	call	___lwmod	;wreg free
 31119  0064AE  5001               	movf	?___lwmod,w,c
 31120  0064B0  6E10               	movwf	utoa@c,c
 31121  0064B2  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 31122  0064B6  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 31123  0064BA  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31124  0064BE  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31125  0064C2  ECA7  F03E         	call	___lwdiv	;wreg free
 31126  0064C6  C001  F00A         	movff	?___lwdiv,utoa@val
 31127  0064CA  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 31128  0064CE  0E09               	movlw	9
 31129  0064D0  6410               	cpfsgt	utoa@c,c
 31130  0064D2  D002               	goto	l3585
 31131  0064D4  0E07               	movlw	7
 31132  0064D6  2610               	addwf	utoa@c,f,c
 31133  0064D8                     l3585:
 31134  0064D8  0E30               	movlw	48
 31135  0064DA  2610               	addwf	utoa@c,f,c
 31136  0064DC  C008  FFD9         	movff	utoa@buf,fsr2l
 31137  0064E0  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31138  0064E4  C010  FFDF         	movff	utoa@c,indf2
 31139  0064E8  0608               	decf	utoa@buf,f,c
 31140  0064EA  A0D8               	btfss	status,0,c
 31141  0064EC  0609               	decf	utoa@buf+1,f,c
 31142  0064EE  500A               	movf	utoa@val,w,c
 31143  0064F0  100B               	iorwf	utoa@val+1,w,c
 31144  0064F2  A4D8               	btfss	status,2,c
 31145  0064F4  D7D2               	goto	l3584
 31146                           
 31147                           ;	Return value of _utoa is never used
 31148  0064F6  4A08               	infsnz	utoa@buf,f,c
 31149  0064F8  2A09               	incf	utoa@buf+1,f,c
 31150  0064FA  0012               	return	
 31151  0064FC                     __end_of_utoa:
 31152                           	opt stack 0
 31153                           tosu	equ	0xFFF
 31154                           tosh	equ	0xFFE
 31155                           tosl	equ	0xFFD
 31156                           pclath	equ	0xFFA
 31157                           tblptru	equ	0xFF8
 31158                           tblptrh	equ	0xFF7
 31159                           tblptrl	equ	0xFF6
 31160                           tablat	equ	0xFF5
 31161                           prodh	equ	0xFF4
 31162                           prodl	equ	0xFF3
 31163                           intcon	equ	0xFF2
 31164                           intcon2	equ	0xFF1
 31165                           intcon3	equ	0xFF0
 31166                           indf0	equ	0xFEF
 31167                           postinc0	equ	0xFEE
 31168                           fsr0h	equ	0xFEA
 31169                           fsr0l	equ	0xFE9
 31170                           wreg	equ	0xFE8
 31171                           indf1	equ	0xFE7
 31172                           postdec1	equ	0xFE5
 31173                           plusw1	equ	0xFE3
 31174                           fsr1h	equ	0xFE2
 31175                           fsr1l	equ	0xFE1
 31176                           indf2	equ	0xFDF
 31177                           postinc2	equ	0xFDE
 31178                           postdec2	equ	0xFDD
 31179                           plusw2	equ	0xFDB
 31180                           fsr2h	equ	0xFDA
 31181                           fsr2l	equ	0xFD9
 31182                           status	equ	0xFD8
 31183                           
 31184 ;; *************** function ___lwmod *****************
 31185 ;; Defined at:
 31186 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 31187 ;; Parameters:    Size  Location     Type
 31188 ;;  dividend        2    0[COMRAM] unsigned int 
 31189 ;;  divisor         2    2[COMRAM] unsigned int 
 31190 ;; Auto vars:     Size  Location     Type
 31191 ;;  counter         1    4[COMRAM] unsigned char 
 31192 ;; Return value:  Size  Location     Type
 31193 ;;                  2    0[COMRAM] unsigned int 
 31194 ;; Registers used:
 31195 ;;		wreg, status,2, status,0
 31196 ;; Tracked objects:
 31197 ;;		On entry : 0/0
 31198 ;;		On exit  : 0/0
 31199 ;;		Unchanged: 0/0
 31200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31204 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31205 ;;Total ram usage:        5 bytes
 31206 ;; Hardware stack levels used:    1
 31207 ;; This function calls:
 31208 ;;		Nothing
 31209 ;; This function is called by:
 31210 ;;		_utoa
 31211 ;; This function uses a non-reentrant model
 31212 ;;
 31213                           
 31214                           	psect	text153
 31215  008076                     __ptext153:
 31216                           	opt stack 0
 31217  008076                     ___lwmod:
 31218                           	opt stack 22
 31219                           
 31220                           ;incstack = 0
 31221  008076  5003               	movf	___lwmod@divisor,w,c
 31222  008078  1004               	iorwf	___lwmod@divisor+1,w,c
 31223  00807A  B4D8               	btfsc	status,2,c
 31224  00807C  D018               	goto	l3409
 31225  00807E  0E01               	movlw	1
 31226  008080  6E05               	movwf	___lwmod@counter,c
 31227  008082  D004               	goto	l3404
 31228  008084  90D8               	bcf	status,0,c
 31229  008086  3603               	rlcf	___lwmod@divisor,f,c
 31230  008088  3604               	rlcf	___lwmod@divisor+1,f,c
 31231  00808A  2A05               	incf	___lwmod@counter,f,c
 31232  00808C                     l3404:
 31233  00808C  AE04               	btfss	___lwmod@divisor+1,7,c
 31234  00808E  D7FA               	goto	l3405
 31235  008090                     u6480:
 31236  008090  5003               	movf	___lwmod@divisor,w,c
 31237  008092  5C01               	subwf	___lwmod@dividend,w,c
 31238  008094  5004               	movf	___lwmod@divisor+1,w,c
 31239  008096  5802               	subwfb	___lwmod@dividend+1,w,c
 31240  008098  A0D8               	btfss	status,0,c
 31241  00809A  D004               	goto	l3408
 31242  00809C  5003               	movf	___lwmod@divisor,w,c
 31243  00809E  5E01               	subwf	___lwmod@dividend,f,c
 31244  0080A0  5004               	movf	___lwmod@divisor+1,w,c
 31245  0080A2  5A02               	subwfb	___lwmod@dividend+1,f,c
 31246  0080A4                     l3408:
 31247  0080A4  90D8               	bcf	status,0,c
 31248  0080A6  3204               	rrcf	___lwmod@divisor+1,f,c
 31249  0080A8  3203               	rrcf	___lwmod@divisor,f,c
 31250  0080AA  2E05               	decfsz	___lwmod@counter,f,c
 31251  0080AC  D7F1               	goto	u6480
 31252  0080AE                     l3409:
 31253  0080AE  C001  F001         	movff	___lwmod@dividend,?___lwmod
 31254  0080B2  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 31255  0080B6  0012               	return		;funcret
 31256  0080B8                     __end_of___lwmod:
 31257                           	opt stack 0
 31258                           tosu	equ	0xFFF
 31259                           tosh	equ	0xFFE
 31260                           tosl	equ	0xFFD
 31261                           pclath	equ	0xFFA
 31262                           tblptru	equ	0xFF8
 31263                           tblptrh	equ	0xFF7
 31264                           tblptrl	equ	0xFF6
 31265                           tablat	equ	0xFF5
 31266                           prodh	equ	0xFF4
 31267                           prodl	equ	0xFF3
 31268                           intcon	equ	0xFF2
 31269                           intcon2	equ	0xFF1
 31270                           intcon3	equ	0xFF0
 31271                           indf0	equ	0xFEF
 31272                           postinc0	equ	0xFEE
 31273                           fsr0h	equ	0xFEA
 31274                           fsr0l	equ	0xFE9
 31275                           wreg	equ	0xFE8
 31276                           indf1	equ	0xFE7
 31277                           postdec1	equ	0xFE5
 31278                           plusw1	equ	0xFE3
 31279                           fsr1h	equ	0xFE2
 31280                           fsr1l	equ	0xFE1
 31281                           indf2	equ	0xFDF
 31282                           postinc2	equ	0xFDE
 31283                           postdec2	equ	0xFDD
 31284                           plusw2	equ	0xFDB
 31285                           fsr2h	equ	0xFDA
 31286                           fsr2l	equ	0xFD9
 31287                           status	equ	0xFD8
 31288                           
 31289 ;; *************** function ___lwdiv *****************
 31290 ;; Defined at:
 31291 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 31292 ;; Parameters:    Size  Location     Type
 31293 ;;  dividend        2    0[COMRAM] unsigned int 
 31294 ;;  divisor         2    2[COMRAM] unsigned int 
 31295 ;; Auto vars:     Size  Location     Type
 31296 ;;  quotient        2    4[COMRAM] unsigned int 
 31297 ;;  counter         1    6[COMRAM] unsigned char 
 31298 ;; Return value:  Size  Location     Type
 31299 ;;                  2    0[COMRAM] unsigned int 
 31300 ;; Registers used:
 31301 ;;		wreg, status,2, status,0
 31302 ;; Tracked objects:
 31303 ;;		On entry : 0/0
 31304 ;;		On exit  : 0/0
 31305 ;;		Unchanged: 0/0
 31306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31308 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31310 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31311 ;;Total ram usage:        7 bytes
 31312 ;; Hardware stack levels used:    1
 31313 ;; This function calls:
 31314 ;;		Nothing
 31315 ;; This function is called by:
 31316 ;;		_utoa
 31317 ;; This function uses a non-reentrant model
 31318 ;;
 31319                           
 31320                           	psect	text154
 31321  007D4E                     __ptext154:
 31322                           	opt stack 0
 31323  007D4E                     ___lwdiv:
 31324                           	opt stack 22
 31325                           
 31326                           ;incstack = 0
 31327  007D4E  0E00               	movlw	0
 31328  007D50  6E06               	movwf	___lwdiv@quotient+1,c
 31329  007D52  0E00               	movlw	0
 31330  007D54  6E05               	movwf	___lwdiv@quotient,c
 31331  007D56  5003               	movf	___lwdiv@divisor,w,c
 31332  007D58  1004               	iorwf	___lwdiv@divisor+1,w,c
 31333  007D5A  B4D8               	btfsc	status,2,c
 31334  007D5C  D01C               	goto	l3399
 31335  007D5E  0E01               	movlw	1
 31336  007D60  6E07               	movwf	___lwdiv@counter,c
 31337  007D62  D004               	goto	l3394
 31338  007D64  90D8               	bcf	status,0,c
 31339  007D66  3603               	rlcf	___lwdiv@divisor,f,c
 31340  007D68  3604               	rlcf	___lwdiv@divisor+1,f,c
 31341  007D6A  2A07               	incf	___lwdiv@counter,f,c
 31342  007D6C                     l3394:
 31343  007D6C  AE04               	btfss	___lwdiv@divisor+1,7,c
 31344  007D6E  D7FA               	goto	l3395
 31345  007D70                     u6450:
 31346  007D70  90D8               	bcf	status,0,c
 31347  007D72  3605               	rlcf	___lwdiv@quotient,f,c
 31348  007D74  3606               	rlcf	___lwdiv@quotient+1,f,c
 31349  007D76  5003               	movf	___lwdiv@divisor,w,c
 31350  007D78  5C01               	subwf	___lwdiv@dividend,w,c
 31351  007D7A  5004               	movf	___lwdiv@divisor+1,w,c
 31352  007D7C  5802               	subwfb	___lwdiv@dividend+1,w,c
 31353  007D7E  A0D8               	btfss	status,0,c
 31354  007D80  D005               	goto	l3398
 31355  007D82  5003               	movf	___lwdiv@divisor,w,c
 31356  007D84  5E01               	subwf	___lwdiv@dividend,f,c
 31357  007D86  5004               	movf	___lwdiv@divisor+1,w,c
 31358  007D88  5A02               	subwfb	___lwdiv@dividend+1,f,c
 31359  007D8A  8005               	bsf	___lwdiv@quotient,0,c
 31360  007D8C                     l3398:
 31361  007D8C  90D8               	bcf	status,0,c
 31362  007D8E  3204               	rrcf	___lwdiv@divisor+1,f,c
 31363  007D90  3203               	rrcf	___lwdiv@divisor,f,c
 31364  007D92  2E07               	decfsz	___lwdiv@counter,f,c
 31365  007D94  D7ED               	goto	u6450
 31366  007D96                     l3399:
 31367  007D96  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 31368  007D9A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 31369  007D9E  0012               	return		;funcret
 31370  007DA0                     __end_of___lwdiv:
 31371                           	opt stack 0
 31372                           tosu	equ	0xFFF
 31373                           tosh	equ	0xFFE
 31374                           tosl	equ	0xFFD
 31375                           pclath	equ	0xFFA
 31376                           tblptru	equ	0xFF8
 31377                           tblptrh	equ	0xFF7
 31378                           tblptrl	equ	0xFF6
 31379                           tablat	equ	0xFF5
 31380                           prodh	equ	0xFF4
 31381                           prodl	equ	0xFF3
 31382                           intcon	equ	0xFF2
 31383                           intcon2	equ	0xFF1
 31384                           intcon3	equ	0xFF0
 31385                           indf0	equ	0xFEF
 31386                           postinc0	equ	0xFEE
 31387                           fsr0h	equ	0xFEA
 31388                           fsr0l	equ	0xFE9
 31389                           wreg	equ	0xFE8
 31390                           indf1	equ	0xFE7
 31391                           postdec1	equ	0xFE5
 31392                           plusw1	equ	0xFE3
 31393                           fsr1h	equ	0xFE2
 31394                           fsr1l	equ	0xFE1
 31395                           indf2	equ	0xFDF
 31396                           postinc2	equ	0xFDE
 31397                           postdec2	equ	0xFDD
 31398                           plusw2	equ	0xFDB
 31399                           fsr2h	equ	0xFDA
 31400                           fsr2l	equ	0xFD9
 31401                           status	equ	0xFD8
 31402                           
 31403 ;; *************** function _i2c_eeprom_writeByte *****************
 31404 ;; Defined at:
 31405 ;;		line 352 in file "i2c.c"
 31406 ;; Parameters:    Size  Location     Type
 31407 ;;  address         2   10[COMRAM] unsigned int 
 31408 ;;  data            1   12[COMRAM] unsigned char 
 31409 ;; Auto vars:     Size  Location     Type
 31410 ;;  dat             2   16[COMRAM] unsigned char [2]
 31411 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31412 ;; Return value:  Size  Location     Type
 31413 ;;                  1    wreg      void 
 31414 ;; Registers used:
 31415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31416 ;; Tracked objects:
 31417 ;;		On entry : 0/0
 31418 ;;		On exit  : 0/0
 31419 ;;		Unchanged: 0/0
 31420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31421 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31422 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31423 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31424 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31425 ;;Total ram usage:        9 bytes
 31426 ;; Hardware stack levels used:    1
 31427 ;; Hardware stack levels required when called:    2
 31428 ;; This function calls:
 31429 ;;		__i2c_write
 31430 ;;		_i2c_set_frequency
 31431 ;; This function is called by:
 31432 ;;		__normal_mode
 31433 ;;		__ui_encoder
 31434 ;;		__parse_command_short
 31435 ;; This function uses a non-reentrant model
 31436 ;;
 31437                           
 31438                           	psect	text155
 31439  0080B8                     __ptext155:
 31440                           	opt stack 0
 31441  0080B8                     _i2c_eeprom_writeByte:
 31442                           	opt stack 26
 31443                           
 31444                           ;i2c.c: 354: uint8_t slave_address;;i2c.c: 355: uint8_t dat[2];;i2c.c: 357: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 31445                           
 31446                           ;incstack = 0
 31447  0080B8  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31448  0080BC  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31449  0080C0  0E07               	movlw	7
 31450  0080C2  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31451  0080C4                     u10275:
 31452  0080C4  90D8               	bcf	status,0,c
 31453  0080C6  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31454  0080C8  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31455  0080CA  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31456  0080CC  D7FB               	goto	u10275
 31457  0080CE  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31458  0080D0  0B0E               	andlw	14
 31459  0080D2  09A0               	iorlw	160
 31460  0080D4  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31461                           
 31462                           ;i2c.c: 358: dat[0] = address & 0xFF;
 31463  0080D6  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31464                           
 31465                           ;i2c.c: 359: dat[1] = data;
 31466  0080DA  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31467                           
 31468                           ;i2c.c: 362: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 31469  0080DE  0E02               	movlw	2
 31470  0080E0  EC9D  F042         	call	_i2c_set_frequency
 31471                           
 31472                           ;i2c.c: 364: _i2c_write(slave_address, &dat[0], 2);
 31473  0080E4  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31474  0080E6  6E06               	movwf	__i2c_write@data,c
 31475  0080E8  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31476  0080EA  6E07               	movwf	__i2c_write@data+1,c
 31477  0080EC  0E02               	movlw	2
 31478  0080EE  6E08               	movwf	__i2c_write@length,c
 31479  0080F0  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31480  0080F2  EC6D  F03F         	call	__i2c_write
 31481  0080F6  0012               	return		;funcret
 31482  0080F8                     __end_of_i2c_eeprom_writeByte:
 31483                           	opt stack 0
 31484                           tosu	equ	0xFFF
 31485                           tosh	equ	0xFFE
 31486                           tosl	equ	0xFFD
 31487                           pclath	equ	0xFFA
 31488                           tblptru	equ	0xFF8
 31489                           tblptrh	equ	0xFF7
 31490                           tblptrl	equ	0xFF6
 31491                           tablat	equ	0xFF5
 31492                           prodh	equ	0xFF4
 31493                           prodl	equ	0xFF3
 31494                           intcon	equ	0xFF2
 31495                           intcon2	equ	0xFF1
 31496                           intcon3	equ	0xFF0
 31497                           indf0	equ	0xFEF
 31498                           postinc0	equ	0xFEE
 31499                           fsr0h	equ	0xFEA
 31500                           fsr0l	equ	0xFE9
 31501                           wreg	equ	0xFE8
 31502                           indf1	equ	0xFE7
 31503                           postdec1	equ	0xFE5
 31504                           plusw1	equ	0xFE3
 31505                           fsr1h	equ	0xFE2
 31506                           fsr1l	equ	0xFE1
 31507                           indf2	equ	0xFDF
 31508                           postinc2	equ	0xFDE
 31509                           postdec2	equ	0xFDD
 31510                           plusw2	equ	0xFDB
 31511                           fsr2h	equ	0xFDA
 31512                           fsr2l	equ	0xFD9
 31513                           status	equ	0xFD8
 31514                           
 31515 ;; *************** function _i2c_set_frequency *****************
 31516 ;; Defined at:
 31517 ;;		line 123 in file "i2c.c"
 31518 ;; Parameters:    Size  Location     Type
 31519 ;;  frequency       1    wreg     enum E6622
 31520 ;; Auto vars:     Size  Location     Type
 31521 ;;  frequency       1    0[COMRAM] enum E6622
 31522 ;; Return value:  Size  Location     Type
 31523 ;;                  1    wreg      void 
 31524 ;; Registers used:
 31525 ;;		wreg, status,2, status,0
 31526 ;; Tracked objects:
 31527 ;;		On entry : 0/0
 31528 ;;		On exit  : 0/0
 31529 ;;		Unchanged: 0/0
 31530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31535 ;;Total ram usage:        1 bytes
 31536 ;; Hardware stack levels used:    1
 31537 ;; This function calls:
 31538 ;;		Nothing
 31539 ;; This function is called by:
 31540 ;;		_i2c_init
 31541 ;;		__ic2_display_set_address
 31542 ;;		_i2c_display_send_init_sequence
 31543 ;;		_i2c_display_cursor
 31544 ;;		_i2c_display_write_fixed
 31545 ;;		_i2c_digipot_reset_on
 31546 ;;		_i2c_digipot_reset_off
 31547 ;;		_i2c_digipot_backlight
 31548 ;;		_i2c_eeprom_writeByte
 31549 ;;		_i2c_eeprom_readByte
 31550 ;;		_i2c_display_write
 31551 ;;		_i2c_eeprom_write
 31552 ;;		_i2c_eeprom_read
 31553 ;; This function uses a non-reentrant model
 31554 ;;
 31555                           
 31556                           	psect	text156
 31557  00853A                     __ptext156:
 31558                           	opt stack 0
 31559  00853A                     _i2c_set_frequency:
 31560                           	opt stack 28
 31561                           
 31562                           ;incstack = 0
 31563                           ;i2c_set_frequency@frequency stored from wreg
 31564  00853A  6E01               	movwf	i2c_set_frequency@frequency,c
 31565                           
 31566                           ;i2c.c: 125: switch(frequency)
 31567  00853C  D007               	goto	l1195
 31568  00853E                     
 31569                           ;i2c.c: 128: SSP1ADD = 119;
 31570  00853E  0E77               	movlw	119
 31571  008540  D003               	goto	L34
 31572  008542                     
 31573                           ;i2c.c: 131: SSP1ADD = 59;
 31574  008542  0E3B               	movlw	59
 31575  008544  D001               	goto	L34
 31576  008546                     
 31577                           ;i2c.c: 134: SSP1ADD = 29;
 31578  008546  0E1D               	movlw	29
 31579  008548                     L34:
 31580  008548  6EC8               	movwf	4040,c	;volatile
 31581                           
 31582                           ;i2c.c: 136: }
 31583                           
 31584                           ;i2c.c: 135: break;
 31585  00854A  D00A               	goto	l1197
 31586  00854C                     l1195:
 31587  00854C  5001               	movf	i2c_set_frequency@frequency,w,c
 31588                           
 31589                           ; Switch size 1, requested type "space"
 31590                           ; Number of cases is 3, Range of values is 0 to 2
 31591                           ; switch strategies available:
 31592                           ; Name         Instructions Cycles
 31593                           ; simple_byte           10     6 (average)
 31594                           ;	Chosen strategy is simple_byte
 31595  00854E  0A00               	xorlw	0	; case 0
 31596  008550  B4D8               	btfsc	status,2,c
 31597  008552  D7F5               	goto	l1196
 31598  008554  0A01               	xorlw	1	; case 1
 31599  008556  B4D8               	btfsc	status,2,c
 31600  008558  D7F4               	goto	l1198
 31601  00855A  0A03               	xorlw	3	; case 2
 31602  00855C  B4D8               	btfsc	status,2,c
 31603  00855E  D7F3               	goto	l1199
 31604  008560                     l1197:
 31605                           
 31606                           ;i2c.c: 138: i2c_frequency = frequency;
 31607  008560  C001  F187         	movff	i2c_set_frequency@frequency,_i2c_frequency
 31608  008564  0012               	return		;funcret
 31609  008566                     __end_of_i2c_set_frequency:
 31610                           	opt stack 0
 31611                           tosu	equ	0xFFF
 31612                           tosh	equ	0xFFE
 31613                           tosl	equ	0xFFD
 31614                           pclath	equ	0xFFA
 31615                           tblptru	equ	0xFF8
 31616                           tblptrh	equ	0xFF7
 31617                           tblptrl	equ	0xFF6
 31618                           tablat	equ	0xFF5
 31619                           prodh	equ	0xFF4
 31620                           prodl	equ	0xFF3
 31621                           intcon	equ	0xFF2
 31622                           intcon2	equ	0xFF1
 31623                           intcon3	equ	0xFF0
 31624                           indf0	equ	0xFEF
 31625                           postinc0	equ	0xFEE
 31626                           fsr0h	equ	0xFEA
 31627                           fsr0l	equ	0xFE9
 31628                           wreg	equ	0xFE8
 31629                           indf1	equ	0xFE7
 31630                           postdec1	equ	0xFE5
 31631                           plusw1	equ	0xFE3
 31632                           fsr1h	equ	0xFE2
 31633                           fsr1l	equ	0xFE1
 31634                           indf2	equ	0xFDF
 31635                           postinc2	equ	0xFDE
 31636                           postdec2	equ	0xFDD
 31637                           plusw2	equ	0xFDB
 31638                           fsr2h	equ	0xFDA
 31639                           fsr2l	equ	0xFD9
 31640                           status	equ	0xFD8
 31641                           
 31642 ;; *************** function __i2c_write *****************
 31643 ;; Defined at:
 31644 ;;		line 142 in file "i2c.c"
 31645 ;; Parameters:    Size  Location     Type
 31646 ;;  slave_addres    1    wreg     unsigned char 
 31647 ;;  data            2    5[COMRAM] PTR unsigned char 
 31648 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 31649 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 31650 ;;		 -> _ic2_display_set_address@data_array(2), 
 31651 ;;  length          1    7[COMRAM] unsigned char 
 31652 ;; Auto vars:     Size  Location     Type
 31653 ;;  slave_addres    1    8[COMRAM] unsigned char 
 31654 ;;  cntr            1    9[COMRAM] unsigned char 
 31655 ;; Return value:  Size  Location     Type
 31656 ;;                  1    wreg      void 
 31657 ;; Registers used:
 31658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31659 ;; Tracked objects:
 31660 ;;		On entry : 0/0
 31661 ;;		On exit  : 0/0
 31662 ;;		Unchanged: 0/0
 31663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31664 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31667 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31668 ;;Total ram usage:        5 bytes
 31669 ;; Hardware stack levels used:    1
 31670 ;; Hardware stack levels required when called:    1
 31671 ;; This function calls:
 31672 ;;		__i2c_send
 31673 ;;		__i2c_start
 31674 ;;		__i2c_stop
 31675 ;;		__i2c_wait_idle
 31676 ;; This function is called by:
 31677 ;;		__ic2_display_set_address
 31678 ;;		_i2c_display_send_init_sequence
 31679 ;;		_i2c_digipot_reset_on
 31680 ;;		_i2c_digipot_reset_off
 31681 ;;		_i2c_digipot_backlight
 31682 ;;		_i2c_eeprom_writeByte
 31683 ;;		_i2c_eeprom_readByte
 31684 ;;		_i2c_eeprom_write
 31685 ;;		_i2c_eeprom_read
 31686 ;; This function uses a non-reentrant model
 31687 ;;
 31688                           
 31689                           	psect	text157
 31690  007EDA                     __ptext157:
 31691                           	opt stack 0
 31692  007EDA                     __i2c_write:
 31693                           	opt stack 27
 31694                           
 31695                           ;incstack = 0
 31696                           ;__i2c_write@slave_address stored from wreg
 31697  007EDA  6E09               	movwf	__i2c_write@slave_address,c
 31698                           
 31699                           ;i2c.c: 144: uint8_t cntr;;i2c.c: 146: _i2c_wait_idle();
 31700  007EDC  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 31701                           
 31702                           ;i2c.c: 147: _i2c_start();
 31703  007EE0  ECC4  F044         	call	__i2c_start	;wreg free
 31704                           
 31705                           ;i2c.c: 148: _i2c_wait_idle();
 31706  007EE4  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 31707                           
 31708                           ;i2c.c: 149: _i2c_send(slave_address);
 31709  007EE8  5009               	movf	__i2c_write@slave_address,w,c
 31710  007EEA  ECC8  F044         	call	__i2c_send
 31711                           
 31712                           ;i2c.c: 150: _i2c_wait_idle();
 31713  007EEE  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 31714                           
 31715                           ;i2c.c: 152: for(cntr=0; cntr<length; ++cntr)
 31716  007EF2  0E00               	movlw	0
 31717  007EF4  6E0A               	movwf	__i2c_write@cntr,c
 31718  007EF6  D00E               	goto	l1203
 31719  007EF8                     
 31720                           ;i2c.c: 153: {;i2c.c: 154: _i2c_send(data[cntr]);
 31721  007EF8  500A               	movf	__i2c_write@cntr,w,c
 31722  007EFA  0D01               	mullw	1
 31723  007EFC  50F3               	movf	prodl,w,c
 31724  007EFE  2406               	addwf	__i2c_write@data,w,c
 31725  007F00  6ED9               	movwf	fsr2l,c
 31726  007F02  50F4               	movf	prodh,w,c
 31727  007F04  2007               	addwfc	__i2c_write@data+1,w,c
 31728  007F06  6EDA               	movwf	fsr2h,c
 31729  007F08  50DF               	movf	indf2,w,c
 31730  007F0A  ECC8  F044         	call	__i2c_send
 31731                           
 31732                           ;i2c.c: 155: _i2c_wait_idle();
 31733  007F0E  EC9F  F03C         	call	__i2c_wait_idle	;wreg free
 31734  007F12  2A0A               	incf	__i2c_write@cntr,f,c
 31735  007F14                     l1203:
 31736  007F14  5008               	movf	__i2c_write@length,w,c
 31737  007F16  5C0A               	subwf	__i2c_write@cntr,w,c
 31738  007F18  A0D8               	btfss	status,0,c
 31739  007F1A  D7EE               	goto	l1204
 31740                           
 31741                           ;i2c.c: 156: };i2c.c: 158: _i2c_stop();
 31742  007F1C  ECC0  F044         	call	__i2c_stop	;wreg free
 31743  007F20  0012               	return		;funcret
 31744  007F22                     __end_of__i2c_write:
 31745                           	opt stack 0
 31746                           tosu	equ	0xFFF
 31747                           tosh	equ	0xFFE
 31748                           tosl	equ	0xFFD
 31749                           pclath	equ	0xFFA
 31750                           tblptru	equ	0xFF8
 31751                           tblptrh	equ	0xFF7
 31752                           tblptrl	equ	0xFF6
 31753                           tablat	equ	0xFF5
 31754                           prodh	equ	0xFF4
 31755                           prodl	equ	0xFF3
 31756                           intcon	equ	0xFF2
 31757                           intcon2	equ	0xFF1
 31758                           intcon3	equ	0xFF0
 31759                           indf0	equ	0xFEF
 31760                           postinc0	equ	0xFEE
 31761                           fsr0h	equ	0xFEA
 31762                           fsr0l	equ	0xFE9
 31763                           wreg	equ	0xFE8
 31764                           indf1	equ	0xFE7
 31765                           postdec1	equ	0xFE5
 31766                           plusw1	equ	0xFE3
 31767                           fsr1h	equ	0xFE2
 31768                           fsr1l	equ	0xFE1
 31769                           indf2	equ	0xFDF
 31770                           postinc2	equ	0xFDE
 31771                           postdec2	equ	0xFDD
 31772                           plusw2	equ	0xFDB
 31773                           fsr2h	equ	0xFDA
 31774                           fsr2l	equ	0xFD9
 31775                           status	equ	0xFD8
 31776                           
 31777 ;; *************** function __i2c_wait_idle *****************
 31778 ;; Defined at:
 31779 ;;		line 48 in file "i2c.c"
 31780 ;; Parameters:    Size  Location     Type
 31781 ;;		None
 31782 ;; Auto vars:     Size  Location     Type
 31783 ;;		None
 31784 ;; Return value:  Size  Location     Type
 31785 ;;                  1    wreg      void 
 31786 ;; Registers used:
 31787 ;;		wreg, status,2, status,0
 31788 ;; Tracked objects:
 31789 ;;		On entry : 0/0
 31790 ;;		On exit  : 0/0
 31791 ;;		Unchanged: 0/0
 31792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31795 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31796 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31797 ;;Total ram usage:        5 bytes
 31798 ;; Hardware stack levels used:    1
 31799 ;; This function calls:
 31800 ;;		Nothing
 31801 ;; This function is called by:
 31802 ;;		__i2c_write
 31803 ;;		__i2c_read
 31804 ;;		_i2c_display_write_fixed
 31805 ;;		_i2c_display_write
 31806 ;; This function uses a non-reentrant model
 31807 ;;
 31808                           
 31809                           	psect	text158
 31810  00793E                     __ptext158:
 31811                           	opt stack 0
 31812  00793E                     __i2c_wait_idle:
 31813                           	opt stack 27
 31814                           
 31815                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 31816                           
 31817                           ;incstack = 0
 31818  00793E  A4C7               	btfss	4039,2,c	;volatile
 31819  007940  D003               	goto	u6620
 31820  007942  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31821  007944  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 31822  007946  D001               	goto	u6628
 31823  007948                     u6620:
 31824  007948  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31825  00794A                     u6628:
 31826  00794A  A0C5               	btfss	4037,0,c	;volatile
 31827  00794C  D003               	goto	u6630
 31828  00794E  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31829  007950  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 31830  007952  D001               	goto	u6638
 31831  007954                     u6630:
 31832  007954  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31833  007956                     u6638:
 31834  007956  A2C5               	btfss	4037,1,c	;volatile
 31835  007958  D003               	goto	u6640
 31836  00795A  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31837  00795C  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 31838  00795E  D001               	goto	u6648
 31839  007960                     u6640:
 31840  007960  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31841  007962                     u6648:
 31842  007962  A4C5               	btfss	4037,2,c	;volatile
 31843  007964  D003               	goto	u6650
 31844  007966  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31845  007968  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 31846  00796A  D001               	goto	u6658
 31847  00796C                     u6650:
 31848  00796C  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31849  00796E                     u6658:
 31850  00796E  A6C5               	btfss	4037,3,c	;volatile
 31851  007970  D003               	goto	u6660
 31852  007972  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31853  007974  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 31854  007976  D001               	goto	u6668
 31855  007978                     u6660:
 31856  007978  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31857  00797A                     u6668:
 31858  00797A  A8C5               	btfss	4037,4,c	;volatile
 31859  00797C  D002               	goto	u6670
 31860  00797E  0E01               	movlw	1
 31861  007980  D001               	goto	u6676
 31862  007982                     u6670:
 31863  007982  0E00               	movlw	0
 31864  007984                     u6676:
 31865  007984  1005               	iorwf	??__i2c_wait_idle+4,w,c
 31866  007986  1004               	iorwf	??__i2c_wait_idle+3,w,c
 31867  007988  1003               	iorwf	??__i2c_wait_idle+2,w,c
 31868  00798A  1002               	iorwf	??__i2c_wait_idle+1,w,c
 31869  00798C  1001               	iorwf	??__i2c_wait_idle,w,c
 31870  00798E  0900               	iorlw	0
 31871  007990  B4D8               	btfsc	status,2,c
 31872  007992  0012               	return	
 31873  007994  D7D4               	goto	__i2c_wait_idle
 31874  007996                     __end_of__i2c_wait_idle:
 31875                           	opt stack 0
 31876                           tosu	equ	0xFFF
 31877                           tosh	equ	0xFFE
 31878                           tosl	equ	0xFFD
 31879                           pclath	equ	0xFFA
 31880                           tblptru	equ	0xFF8
 31881                           tblptrh	equ	0xFF7
 31882                           tblptrl	equ	0xFF6
 31883                           tablat	equ	0xFF5
 31884                           prodh	equ	0xFF4
 31885                           prodl	equ	0xFF3
 31886                           intcon	equ	0xFF2
 31887                           intcon2	equ	0xFF1
 31888                           intcon3	equ	0xFF0
 31889                           indf0	equ	0xFEF
 31890                           postinc0	equ	0xFEE
 31891                           fsr0h	equ	0xFEA
 31892                           fsr0l	equ	0xFE9
 31893                           wreg	equ	0xFE8
 31894                           indf1	equ	0xFE7
 31895                           postdec1	equ	0xFE5
 31896                           plusw1	equ	0xFE3
 31897                           fsr1h	equ	0xFE2
 31898                           fsr1l	equ	0xFE1
 31899                           indf2	equ	0xFDF
 31900                           postinc2	equ	0xFDE
 31901                           postdec2	equ	0xFDD
 31902                           plusw2	equ	0xFDB
 31903                           fsr2h	equ	0xFDA
 31904                           fsr2l	equ	0xFD9
 31905                           status	equ	0xFD8
 31906                           
 31907 ;; *************** function __i2c_stop *****************
 31908 ;; Defined at:
 31909 ;;		line 75 in file "i2c.c"
 31910 ;; Parameters:    Size  Location     Type
 31911 ;;		None
 31912 ;; Auto vars:     Size  Location     Type
 31913 ;;		None
 31914 ;; Return value:  Size  Location     Type
 31915 ;;                  1    wreg      void 
 31916 ;; Registers used:
 31917 ;;		None
 31918 ;; Tracked objects:
 31919 ;;		On entry : 0/0
 31920 ;;		On exit  : 0/0
 31921 ;;		Unchanged: 0/0
 31922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31927 ;;Total ram usage:        0 bytes
 31928 ;; Hardware stack levels used:    1
 31929 ;; This function calls:
 31930 ;;		Nothing
 31931 ;; This function is called by:
 31932 ;;		__i2c_write
 31933 ;;		__i2c_read
 31934 ;;		_i2c_display_write_fixed
 31935 ;;		_i2c_display_write
 31936 ;; This function uses a non-reentrant model
 31937 ;;
 31938                           
 31939                           	psect	text159
 31940  008980                     __ptext159:
 31941                           	opt stack 0
 31942  008980                     __i2c_stop:
 31943                           	opt stack 27
 31944                           
 31945                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 31946                           
 31947                           ;incstack = 0
 31948  008980  84C5               	bsf	4037,2,c	;volatile
 31949  008982  A4C5               	btfss	4037,2,c	;volatile
 31950  008984  0012               	return	
 31951  008986  D7FD               	goto	l1169
 31952  008988                     __end_of__i2c_stop:
 31953                           	opt stack 0
 31954                           tosu	equ	0xFFF
 31955                           tosh	equ	0xFFE
 31956                           tosl	equ	0xFFD
 31957                           pclath	equ	0xFFA
 31958                           tblptru	equ	0xFF8
 31959                           tblptrh	equ	0xFF7
 31960                           tblptrl	equ	0xFF6
 31961                           tablat	equ	0xFF5
 31962                           prodh	equ	0xFF4
 31963                           prodl	equ	0xFF3
 31964                           intcon	equ	0xFF2
 31965                           intcon2	equ	0xFF1
 31966                           intcon3	equ	0xFF0
 31967                           indf0	equ	0xFEF
 31968                           postinc0	equ	0xFEE
 31969                           fsr0h	equ	0xFEA
 31970                           fsr0l	equ	0xFE9
 31971                           wreg	equ	0xFE8
 31972                           indf1	equ	0xFE7
 31973                           postdec1	equ	0xFE5
 31974                           plusw1	equ	0xFE3
 31975                           fsr1h	equ	0xFE2
 31976                           fsr1l	equ	0xFE1
 31977                           indf2	equ	0xFDF
 31978                           postinc2	equ	0xFDE
 31979                           postdec2	equ	0xFDD
 31980                           plusw2	equ	0xFDB
 31981                           fsr2h	equ	0xFDA
 31982                           fsr2l	equ	0xFD9
 31983                           status	equ	0xFD8
 31984                           
 31985 ;; *************** function __i2c_start *****************
 31986 ;; Defined at:
 31987 ;;		line 54 in file "i2c.c"
 31988 ;; Parameters:    Size  Location     Type
 31989 ;;		None
 31990 ;; Auto vars:     Size  Location     Type
 31991 ;;		None
 31992 ;; Return value:  Size  Location     Type
 31993 ;;                  1    wreg      void 
 31994 ;; Registers used:
 31995 ;;		None
 31996 ;; Tracked objects:
 31997 ;;		On entry : 0/0
 31998 ;;		On exit  : 0/0
 31999 ;;		Unchanged: 0/0
 32000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32005 ;;Total ram usage:        0 bytes
 32006 ;; Hardware stack levels used:    1
 32007 ;; This function calls:
 32008 ;;		Nothing
 32009 ;; This function is called by:
 32010 ;;		__i2c_write
 32011 ;;		__i2c_read
 32012 ;;		_i2c_display_write_fixed
 32013 ;;		_i2c_display_write
 32014 ;; This function uses a non-reentrant model
 32015 ;;
 32016                           
 32017                           	psect	text160
 32018  008988                     __ptext160:
 32019                           	opt stack 0
 32020  008988                     __i2c_start:
 32021                           	opt stack 27
 32022                           
 32023                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 32024                           
 32025                           ;incstack = 0
 32026  008988  80C5               	bsf	4037,0,c	;volatile
 32027  00898A  A0C5               	btfss	4037,0,c	;volatile
 32028  00898C  0012               	return	
 32029  00898E  D7FD               	goto	l1154
 32030  008990                     __end_of__i2c_start:
 32031                           	opt stack 0
 32032                           tosu	equ	0xFFF
 32033                           tosh	equ	0xFFE
 32034                           tosl	equ	0xFFD
 32035                           pclath	equ	0xFFA
 32036                           tblptru	equ	0xFF8
 32037                           tblptrh	equ	0xFF7
 32038                           tblptrl	equ	0xFF6
 32039                           tablat	equ	0xFF5
 32040                           prodh	equ	0xFF4
 32041                           prodl	equ	0xFF3
 32042                           intcon	equ	0xFF2
 32043                           intcon2	equ	0xFF1
 32044                           intcon3	equ	0xFF0
 32045                           indf0	equ	0xFEF
 32046                           postinc0	equ	0xFEE
 32047                           fsr0h	equ	0xFEA
 32048                           fsr0l	equ	0xFE9
 32049                           wreg	equ	0xFE8
 32050                           indf1	equ	0xFE7
 32051                           postdec1	equ	0xFE5
 32052                           plusw1	equ	0xFE3
 32053                           fsr1h	equ	0xFE2
 32054                           fsr1l	equ	0xFE1
 32055                           indf2	equ	0xFDF
 32056                           postinc2	equ	0xFDE
 32057                           postdec2	equ	0xFDD
 32058                           plusw2	equ	0xFDB
 32059                           fsr2h	equ	0xFDA
 32060                           fsr2l	equ	0xFD9
 32061                           status	equ	0xFD8
 32062                           
 32063 ;; *************** function __i2c_send *****************
 32064 ;; Defined at:
 32065 ;;		line 61 in file "i2c.c"
 32066 ;; Parameters:    Size  Location     Type
 32067 ;;  dat             1    wreg     unsigned char 
 32068 ;; Auto vars:     Size  Location     Type
 32069 ;;  dat             1    0[COMRAM] unsigned char 
 32070 ;; Return value:  Size  Location     Type
 32071 ;;                  1    wreg      void 
 32072 ;; Registers used:
 32073 ;;		wreg
 32074 ;; Tracked objects:
 32075 ;;		On entry : 0/0
 32076 ;;		On exit  : 0/0
 32077 ;;		Unchanged: 0/0
 32078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32083 ;;Total ram usage:        1 bytes
 32084 ;; Hardware stack levels used:    1
 32085 ;; This function calls:
 32086 ;;		Nothing
 32087 ;; This function is called by:
 32088 ;;		__i2c_write
 32089 ;;		__i2c_read
 32090 ;;		_i2c_display_write_fixed
 32091 ;;		_i2c_display_write
 32092 ;; This function uses a non-reentrant model
 32093 ;;
 32094                           
 32095                           	psect	text161
 32096  008990                     __ptext161:
 32097                           	opt stack 0
 32098  008990                     __i2c_send:
 32099                           	opt stack 27
 32100                           
 32101                           ;incstack = 0
 32102                           ;__i2c_send@dat stored from wreg
 32103  008990  6E01               	movwf	__i2c_send@dat,c
 32104                           
 32105                           ;i2c.c: 63: SSP1BUF = dat;
 32106  008992  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32107  008996  0012               	return		;funcret
 32108  008998                     __end_of__i2c_send:
 32109                           	opt stack 0
 32110                           tosu	equ	0xFFF
 32111                           tosh	equ	0xFFE
 32112                           tosl	equ	0xFFD
 32113                           pclath	equ	0xFFA
 32114                           tblptru	equ	0xFF8
 32115                           tblptrh	equ	0xFF7
 32116                           tblptrl	equ	0xFF6
 32117                           tablat	equ	0xFF5
 32118                           prodh	equ	0xFF4
 32119                           prodl	equ	0xFF3
 32120                           intcon	equ	0xFF2
 32121                           intcon2	equ	0xFF1
 32122                           intcon3	equ	0xFF0
 32123                           indf0	equ	0xFEF
 32124                           postinc0	equ	0xFEE
 32125                           fsr0h	equ	0xFEA
 32126                           fsr0l	equ	0xFE9
 32127                           wreg	equ	0xFE8
 32128                           indf1	equ	0xFE7
 32129                           postdec1	equ	0xFE5
 32130                           plusw1	equ	0xFE3
 32131                           fsr1h	equ	0xFE2
 32132                           fsr1l	equ	0xFE1
 32133                           indf2	equ	0xFDF
 32134                           postinc2	equ	0xFDE
 32135                           postdec2	equ	0xFDD
 32136                           plusw2	equ	0xFDB
 32137                           fsr2h	equ	0xFDA
 32138                           fsr2l	equ	0xFD9
 32139                           status	equ	0xFD8
 32140                           
 32141 ;; *************** function __parse_command_long *****************
 32142 ;; Defined at:
 32143 ;;		line 475 in file "api.c"
 32144 ;; Parameters:    Size  Location     Type
 32145 ;;  data            2   91[COMRAM] PTR unsigned char 
 32146 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 32147 ;; Auto vars:     Size  Location     Type
 32148 ;;  length          1   93[COMRAM] unsigned char 
 32149 ;; Return value:  Size  Location     Type
 32150 ;;                  1    wreg      unsigned char 
 32151 ;; Registers used:
 32152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32153 ;; Tracked objects:
 32154 ;;		On entry : 0/0
 32155 ;;		On exit  : 0/0
 32156 ;;		Unchanged: 0/0
 32157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32161 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32162 ;;Total ram usage:        3 bytes
 32163 ;; Hardware stack levels used:    1
 32164 ;; Hardware stack levels required when called:    9
 32165 ;; This function calls:
 32166 ;;		__parse_file_append
 32167 ;;		__parse_file_create
 32168 ;;		__parse_file_delete
 32169 ;;		__parse_file_modify
 32170 ;;		__parse_file_rename
 32171 ;;		__parse_file_resize
 32172 ;;		__parse_format_drive
 32173 ;; This function is called by:
 32174 ;;		_api_parse
 32175 ;; This function uses a non-reentrant model
 32176 ;;
 32177                           
 32178                           	psect	text162
 32179  00659E                     __ptext162:
 32180                           	opt stack 0
 32181  00659E                     __parse_command_long:
 32182                           	opt stack 20
 32183                           
 32184                           ;api.c: 477: uint8_t length = 65;
 32185                           
 32186                           ;incstack = 0
 32187  00659E  0E41               	movlw	65
 32188  0065A0  6E5E               	movwf	__parse_command_long@length,c
 32189                           
 32190                           ;api.c: 479: switch(data[0])
 32191  0065A2  D032               	goto	l2710
 32192  0065A4                     
 32193                           ;api.c: 482: length = _parse_file_resize(data);
 32194  0065A4  C05C  F047         	movff	__parse_command_long@data,__parse_file_resize@data
 32195  0065A8  C05D  F048         	movff	__parse_command_long@data+1,__parse_file_resize@data+1
 32196  0065AC  EC97  F02A         	call	__parse_file_resize	;wreg free
 32197  0065B0  D029               	goto	L40
 32198  0065B2                     
 32199                           ;api.c: 486: length = _parse_file_delete(data);
 32200  0065B2  C05C  F03F         	movff	__parse_command_long@data,__parse_file_delete@data
 32201  0065B6  C05D  F040         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 32202  0065BA  ECD0  F03E         	call	__parse_file_delete	;wreg free
 32203  0065BE  D022               	goto	L40
 32204  0065C0                     
 32205                           ;api.c: 490: length = _parse_file_create(data);
 32206  0065C0  C05C  F050         	movff	__parse_command_long@data,__parse_file_create@data
 32207  0065C4  C05D  F051         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 32208  0065C8  ECEC  F027         	call	__parse_file_create	;wreg free
 32209  0065CC  D01B               	goto	L40
 32210  0065CE                     
 32211                           ;api.c: 494: length = _parse_file_rename(data);
 32212  0065CE  C05C  F043         	movff	__parse_command_long@data,__parse_file_rename@data
 32213  0065D2  C05D  F044         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 32214  0065D6  EC20  F03A         	call	__parse_file_rename	;wreg free
 32215  0065DA  D014               	goto	L40
 32216  0065DC                     
 32217                           ;api.c: 498: length = _parse_file_append(data);
 32218  0065DC  C05C  F04B         	movff	__parse_command_long@data,__parse_file_append@data
 32219  0065E0  C05D  F04C         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 32220  0065E4  EC61  F037         	call	__parse_file_append	;wreg free
 32221  0065E8  D00D               	goto	L40
 32222  0065EA                     
 32223                           ;api.c: 502: length = _parse_file_modify(data);
 32224  0065EA  C05C  F053         	movff	__parse_command_long@data,__parse_file_modify@data
 32225  0065EE  C05D  F054         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 32226  0065F2  ECD2  F023         	call	__parse_file_modify	;wreg free
 32227  0065F6  D006               	goto	L40
 32228  0065F8                     
 32229                           ;api.c: 506: length = _parse_format_drive(data);
 32230  0065F8  C05C  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 32231  0065FC  C05D  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 32232  006600  ECD7  F03F         	call	__parse_format_drive	;wreg free
 32233  006604                     L40:
 32234  006604  6E5E               	movwf	__parse_command_long@length,c
 32235                           
 32236                           ;api.c: 508: }
 32237                           
 32238                           ;api.c: 507: break;
 32239  006606  D01A               	goto	l2712
 32240  006608                     l2710:
 32241  006608  C05C  FFD9         	movff	__parse_command_long@data,fsr2l
 32242  00660C  C05D  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32243  006610  50DF               	movf	indf2,w,c
 32244                           
 32245                           ; Switch size 1, requested type "space"
 32246                           ; Number of cases is 7, Range of values is 80 to 86
 32247                           ; switch strategies available:
 32248                           ; Name         Instructions Cycles
 32249                           ; simple_byte           22    12 (average)
 32250                           ;	Chosen strategy is simple_byte
 32251  006612  0A50               	xorlw	80	; case 80
 32252  006614  B4D8               	btfsc	status,2,c
 32253  006616  D7C6               	goto	l2711
 32254  006618  0A01               	xorlw	1	; case 81
 32255  00661A  B4D8               	btfsc	status,2,c
 32256  00661C  D7CA               	goto	l2713
 32257  00661E  0A03               	xorlw	3	; case 82
 32258  006620  B4D8               	btfsc	status,2,c
 32259  006622  D7CE               	goto	l2714
 32260  006624  0A01               	xorlw	1	; case 83
 32261  006626  B4D8               	btfsc	status,2,c
 32262  006628  D7D2               	goto	l2715
 32263  00662A  0A07               	xorlw	7	; case 84
 32264  00662C  B4D8               	btfsc	status,2,c
 32265  00662E  D7D6               	goto	l2716
 32266  006630  0A01               	xorlw	1	; case 85
 32267  006632  B4D8               	btfsc	status,2,c
 32268  006634  D7DA               	goto	l2717
 32269  006636  0A03               	xorlw	3	; case 86
 32270  006638  B4D8               	btfsc	status,2,c
 32271  00663A  D7DE               	goto	l2718
 32272  00663C                     l2712:
 32273                           
 32274                           ;api.c: 510: return length;
 32275  00663C  505E               	movf	__parse_command_long@length,w,c
 32276  00663E  0012               	return	
 32277  006640                     __end_of__parse_command_long:
 32278                           	opt stack 0
 32279                           tosu	equ	0xFFF
 32280                           tosh	equ	0xFFE
 32281                           tosl	equ	0xFFD
 32282                           pclath	equ	0xFFA
 32283                           tblptru	equ	0xFF8
 32284                           tblptrh	equ	0xFF7
 32285                           tblptrl	equ	0xFF6
 32286                           tablat	equ	0xFF5
 32287                           prodh	equ	0xFF4
 32288                           prodl	equ	0xFF3
 32289                           intcon	equ	0xFF2
 32290                           intcon2	equ	0xFF1
 32291                           intcon3	equ	0xFF0
 32292                           indf0	equ	0xFEF
 32293                           postinc0	equ	0xFEE
 32294                           fsr0h	equ	0xFEA
 32295                           fsr0l	equ	0xFE9
 32296                           wreg	equ	0xFE8
 32297                           indf1	equ	0xFE7
 32298                           postdec1	equ	0xFE5
 32299                           plusw1	equ	0xFE3
 32300                           fsr1h	equ	0xFE2
 32301                           fsr1l	equ	0xFE1
 32302                           indf2	equ	0xFDF
 32303                           postinc2	equ	0xFDE
 32304                           postdec2	equ	0xFDD
 32305                           plusw2	equ	0xFDB
 32306                           fsr2h	equ	0xFDA
 32307                           fsr2l	equ	0xFD9
 32308                           status	equ	0xFD8
 32309                           
 32310 ;; *************** function __parse_format_drive *****************
 32311 ;; Defined at:
 32312 ;;		line 629 in file "api.c"
 32313 ;; Parameters:    Size  Location     Type
 32314 ;;  data            2   38[COMRAM] PTR unsigned char 
 32315 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 32316 ;; Auto vars:     Size  Location     Type
 32317 ;;		None
 32318 ;; Return value:  Size  Location     Type
 32319 ;;                  1    wreg      unsigned char 
 32320 ;; Registers used:
 32321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32322 ;; Tracked objects:
 32323 ;;		On entry : 0/0
 32324 ;;		On exit  : 0/0
 32325 ;;		Unchanged: 0/0
 32326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32330 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32331 ;;Total ram usage:        3 bytes
 32332 ;; Hardware stack levels used:    1
 32333 ;; Hardware stack levels required when called:    6
 32334 ;; This function calls:
 32335 ;;		_fat_format
 32336 ;; This function is called by:
 32337 ;;		__parse_command_long
 32338 ;; This function uses a non-reentrant model
 32339 ;;
 32340                           
 32341                           	psect	text163
 32342  007FAE                     __ptext163:
 32343                           	opt stack 0
 32344  007FAE                     __parse_format_drive:
 32345                           	opt stack 22
 32346                           
 32347                           ;api.c: 632: if((data[0]!=COMMAND_FORMAT_DRIVE) || (data[1]!=0xDA) || (data[2]!=0x22))
 32348                           
 32349                           ;incstack = 0
 32350  007FAE  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 32351  007FB2  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 32352  007FB6  0E56               	movlw	86
 32353  007FB8  18DE               	xorwf	postinc2,w,c
 32354  007FBA  A4D8               	btfss	status,2,c
 32355  007FBC  D014               	goto	u10600
 32356  007FBE  EE20 F001          	lfsr	2,1
 32357  007FC2  5027               	movf	__parse_format_drive@data,w,c
 32358  007FC4  26D9               	addwf	fsr2l,f,c
 32359  007FC6  5028               	movf	__parse_format_drive@data+1,w,c
 32360  007FC8  22DA               	addwfc	fsr2h,f,c
 32361  007FCA  0EDA               	movlw	218
 32362  007FCC  18DE               	xorwf	postinc2,w,c
 32363  007FCE  A4D8               	btfss	status,2,c
 32364  007FD0  D00A               	goto	u10600
 32365  007FD2  EE20 F002          	lfsr	2,2
 32366  007FD6  5027               	movf	__parse_format_drive@data,w,c
 32367  007FD8  26D9               	addwf	fsr2l,f,c
 32368  007FDA  5028               	movf	__parse_format_drive@data+1,w,c
 32369  007FDC  22DA               	addwfc	fsr2h,f,c
 32370  007FDE  0E22               	movlw	34
 32371  007FE0  18DE               	xorwf	postinc2,w,c
 32372  007FE2  B4D8               	btfsc	status,2,c
 32373  007FE4  D002               	goto	l2758
 32374  007FE6                     u10600:
 32375                           
 32376                           ;api.c: 633: {;api.c: 634: return 3;
 32377  007FE6  0E03               	movlw	3
 32378  007FE8  0012               	return	
 32379  007FEA                     l2758:
 32380                           
 32381                           ;api.c: 635: };api.c: 636: fat_format();
 32382  007FEA  EC46  F015         	call	_fat_format	;wreg free
 32383                           
 32384                           ;api.c: 637: return 3;
 32385  007FEE  0E03               	movlw	3
 32386  007FF0  0012               	return	
 32387  007FF2                     __end_of__parse_format_drive:
 32388                           	opt stack 0
 32389                           tosu	equ	0xFFF
 32390                           tosh	equ	0xFFE
 32391                           tosl	equ	0xFFD
 32392                           pclath	equ	0xFFA
 32393                           tblptru	equ	0xFF8
 32394                           tblptrh	equ	0xFF7
 32395                           tblptrl	equ	0xFF6
 32396                           tablat	equ	0xFF5
 32397                           prodh	equ	0xFF4
 32398                           prodl	equ	0xFF3
 32399                           intcon	equ	0xFF2
 32400                           intcon2	equ	0xFF1
 32401                           intcon3	equ	0xFF0
 32402                           indf0	equ	0xFEF
 32403                           postinc0	equ	0xFEE
 32404                           fsr0h	equ	0xFEA
 32405                           fsr0l	equ	0xFE9
 32406                           wreg	equ	0xFE8
 32407                           indf1	equ	0xFE7
 32408                           postdec1	equ	0xFE5
 32409                           plusw1	equ	0xFE3
 32410                           fsr1h	equ	0xFE2
 32411                           fsr1l	equ	0xFE1
 32412                           indf2	equ	0xFDF
 32413                           postinc2	equ	0xFDE
 32414                           postdec2	equ	0xFDD
 32415                           plusw2	equ	0xFDB
 32416                           fsr2h	equ	0xFDA
 32417                           fsr2l	equ	0xFD9
 32418                           status	equ	0xFD8
 32419                           
 32420 ;; *************** function _fat_format *****************
 32421 ;; Defined at:
 32422 ;;		line 1127 in file "fat16.c"
 32423 ;; Parameters:    Size  Location     Type
 32424 ;;		None
 32425 ;; Auto vars:     Size  Location     Type
 32426 ;;  cntr            2   36[COMRAM] unsigned int 
 32427 ;; Return value:  Size  Location     Type
 32428 ;;                  1    wreg      void 
 32429 ;; Registers used:
 32430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32431 ;; Tracked objects:
 32432 ;;		On entry : 0/0
 32433 ;;		On exit  : 0/0
 32434 ;;		Unchanged: 0/0
 32435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32437 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32440 ;;Total ram usage:        2 bytes
 32441 ;; Hardware stack levels used:    1
 32442 ;; Hardware stack levels required when called:    5
 32443 ;; This function calls:
 32444 ;;		__get_data
 32445 ;;		__get_fat
 32446 ;;		__get_fbr
 32447 ;;		__get_mbr
 32448 ;;		__get_root
 32449 ;;		_flash_page_write
 32450 ;; This function is called by:
 32451 ;;		_fat_init
 32452 ;;		__parse_format_drive
 32453 ;; This function uses a non-reentrant model
 32454 ;;
 32455                           
 32456                           	psect	text164
 32457  002A8C                     __ptext164:
 32458                           	opt stack 0
 32459  002A8C                     _fat_format:
 32460                           	opt stack 23
 32461                           
 32462                           ;fat16.c: 1129: uint16_t cntr;;fat16.c: 1132: for(cntr=0; cntr<512; ++cntr)
 32463                           
 32464                           ;incstack = 0
 32465  002A8C  0E00               	movlw	0
 32466  002A8E  6E26               	movwf	fat_format@cntr+1,c
 32467  002A90  0E00               	movlw	0
 32468  002A92  6E25               	movwf	fat_format@cntr,c
 32469  002A94                     l12976:
 32470  002A94  0E02               	movlw	2
 32471  002A96  5C26               	subwf	fat_format@cntr+1,w,c
 32472  002A98  B0D8               	btfsc	status,0,c
 32473  002A9A  D010               	goto	u9940
 32474                           
 32475                           ;fat16.c: 1133: {;fat16.c: 1134: buffer[cntr] = _get_mbr(cntr);
 32476  002A9C  0E80               	movlw	low _buffer
 32477  002A9E  2425               	addwf	fat_format@cntr,w,c
 32478  002AA0  6ED9               	movwf	fsr2l,c
 32479  002AA2  0E03               	movlw	high _buffer
 32480  002AA4  2026               	addwfc	fat_format@cntr+1,w,c
 32481  002AA6  6EDA               	movwf	fsr2h,c
 32482  002AA8  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 32483  002AAC  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 32484  002AB0  EC22  F02D         	call	__get_mbr	;wreg free
 32485  002AB4  6EDF               	movwf	indf2,c
 32486  002AB6  4A25               	infsnz	fat_format@cntr,f,c
 32487  002AB8  2A26               	incf	fat_format@cntr+1,f,c
 32488  002ABA  D7EC               	goto	l12976
 32489  002ABC                     u9940:
 32490                           
 32491                           ;fat16.c: 1135: };fat16.c: 1136: flash_page_write(0, buffer);
 32492  002ABC  0E00               	movlw	0
 32493  002ABE  6E21               	movwf	flash_page_write@page+1,c
 32494  002AC0  0E00               	movlw	0
 32495  002AC2  6E20               	movwf	flash_page_write@page,c
 32496  002AC4  0E80               	movlw	low _buffer
 32497  002AC6  6E22               	movwf	flash_page_write@data,c
 32498  002AC8  0E03               	movlw	high _buffer
 32499  002ACA  6E23               	movwf	flash_page_write@data+1,c
 32500  002ACC  ECFC  F03D         	call	_flash_page_write	;wreg free
 32501                           
 32502                           ;fat16.c: 1139: for(cntr=0; cntr<512; ++cntr)
 32503  002AD0  0E00               	movlw	0
 32504  002AD2  6E26               	movwf	fat_format@cntr+1,c
 32505  002AD4  0E00               	movlw	0
 32506  002AD6  6E25               	movwf	fat_format@cntr,c
 32507  002AD8                     l12990:
 32508  002AD8  0E02               	movlw	2
 32509  002ADA  5C26               	subwf	fat_format@cntr+1,w,c
 32510  002ADC  B0D8               	btfsc	status,0,c
 32511  002ADE  D010               	goto	u9960
 32512                           
 32513                           ;fat16.c: 1140: {;fat16.c: 1141: buffer[cntr] = _get_fbr(cntr);
 32514  002AE0  0E80               	movlw	low _buffer
 32515  002AE2  2425               	addwf	fat_format@cntr,w,c
 32516  002AE4  6ED9               	movwf	fsr2l,c
 32517  002AE6  0E03               	movlw	high _buffer
 32518  002AE8  2026               	addwfc	fat_format@cntr+1,w,c
 32519  002AEA  6EDA               	movwf	fsr2h,c
 32520  002AEC  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 32521  002AF0  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 32522  002AF4  EC66  F00D         	call	__get_fbr	;wreg free
 32523  002AF8  6EDF               	movwf	indf2,c
 32524  002AFA  4A25               	infsnz	fat_format@cntr,f,c
 32525  002AFC  2A26               	incf	fat_format@cntr+1,f,c
 32526  002AFE  D7EC               	goto	l12990
 32527  002B00                     u9960:
 32528                           
 32529                           ;fat16.c: 1142: };fat16.c: 1143: flash_page_write(1, buffer);
 32530  002B00  0E00               	movlw	0
 32531  002B02  6E21               	movwf	flash_page_write@page+1,c
 32532  002B04  0E01               	movlw	1
 32533  002B06  6E20               	movwf	flash_page_write@page,c
 32534  002B08  0E80               	movlw	low _buffer
 32535  002B0A  6E22               	movwf	flash_page_write@data,c
 32536  002B0C  0E03               	movlw	high _buffer
 32537  002B0E  6E23               	movwf	flash_page_write@data+1,c
 32538  002B10  ECFC  F03D         	call	_flash_page_write	;wreg free
 32539                           
 32540                           ;fat16.c: 1146: for(cntr=0; cntr<512; ++cntr)
 32541  002B14  0E00               	movlw	0
 32542  002B16  6E26               	movwf	fat_format@cntr+1,c
 32543  002B18  0E00               	movlw	0
 32544  002B1A  6E25               	movwf	fat_format@cntr,c
 32545  002B1C                     l13004:
 32546  002B1C  0E02               	movlw	2
 32547  002B1E  5C26               	subwf	fat_format@cntr+1,w,c
 32548  002B20  B0D8               	btfsc	status,0,c
 32549  002B22  D010               	goto	u9980
 32550                           
 32551                           ;fat16.c: 1147: {;fat16.c: 1148: buffer[cntr] = _get_fat(cntr);
 32552  002B24  0E80               	movlw	low _buffer
 32553  002B26  2425               	addwf	fat_format@cntr,w,c
 32554  002B28  6ED9               	movwf	fsr2l,c
 32555  002B2A  0E03               	movlw	high _buffer
 32556  002B2C  2026               	addwfc	fat_format@cntr+1,w,c
 32557  002B2E  6EDA               	movwf	fsr2h,c
 32558  002B30  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 32559  002B34  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 32560  002B38  EC27  F03E         	call	__get_fat	;wreg free
 32561  002B3C  6EDF               	movwf	indf2,c
 32562  002B3E  4A25               	infsnz	fat_format@cntr,f,c
 32563  002B40  2A26               	incf	fat_format@cntr+1,f,c
 32564  002B42  D7EC               	goto	l13004
 32565  002B44                     u9980:
 32566                           
 32567                           ;fat16.c: 1149: };fat16.c: 1150: flash_page_write(2, buffer);
 32568  002B44  0E00               	movlw	0
 32569  002B46  6E21               	movwf	flash_page_write@page+1,c
 32570  002B48  0E02               	movlw	2
 32571  002B4A  6E20               	movwf	flash_page_write@page,c
 32572  002B4C  0E80               	movlw	low _buffer
 32573  002B4E  6E22               	movwf	flash_page_write@data,c
 32574  002B50  0E03               	movlw	high _buffer
 32575  002B52  6E23               	movwf	flash_page_write@data+1,c
 32576  002B54  ECFC  F03D         	call	_flash_page_write	;wreg free
 32577                           
 32578                           ;fat16.c: 1153: for(cntr=0; cntr<512; ++cntr)
 32579  002B58  0E00               	movlw	0
 32580  002B5A  6E26               	movwf	fat_format@cntr+1,c
 32581  002B5C  0E00               	movlw	0
 32582  002B5E  6E25               	movwf	fat_format@cntr,c
 32583  002B60                     l13018:
 32584  002B60  0E02               	movlw	2
 32585  002B62  5C26               	subwf	fat_format@cntr+1,w,c
 32586  002B64  B0D8               	btfsc	status,0,c
 32587  002B66  D00B               	goto	u10000
 32588                           
 32589                           ;fat16.c: 1154: {;fat16.c: 1155: buffer[cntr] = 0x00;
 32590  002B68  0E80               	movlw	low _buffer
 32591  002B6A  2425               	addwf	fat_format@cntr,w,c
 32592  002B6C  6ED9               	movwf	fsr2l,c
 32593  002B6E  0E03               	movlw	high _buffer
 32594  002B70  2026               	addwfc	fat_format@cntr+1,w,c
 32595  002B72  6EDA               	movwf	fsr2h,c
 32596  002B74  0E00               	movlw	0
 32597  002B76  6EDF               	movwf	indf2,c
 32598  002B78  4A25               	infsnz	fat_format@cntr,f,c
 32599  002B7A  2A26               	incf	fat_format@cntr+1,f,c
 32600  002B7C  D7F1               	goto	l13018
 32601  002B7E                     u10000:
 32602                           
 32603                           ;fat16.c: 1156: };fat16.c: 1157: for(cntr=2+1; cntr<=33; ++cntr)
 32604  002B7E  0E00               	movlw	0
 32605  002B80  6E26               	movwf	fat_format@cntr+1,c
 32606  002B82  0E03               	movlw	3
 32607  002B84  6E25               	movwf	fat_format@cntr,c
 32608  002B86                     l13030:
 32609  002B86  5026               	movf	fat_format@cntr+1,w,c
 32610  002B88  E111               	bnz	l13040
 32611  002B8A  0E22               	movlw	34
 32612  002B8C  5C25               	subwf	fat_format@cntr,w,c
 32613  002B8E  B0D8               	btfsc	status,0,c
 32614  002B90  D00D               	goto	u10020
 32615                           
 32616                           ;fat16.c: 1158: {;fat16.c: 1159: flash_page_write(cntr, buffer);
 32617  002B92  C025  F020         	movff	fat_format@cntr,flash_page_write@page
 32618  002B96  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
 32619  002B9A  0E80               	movlw	low _buffer
 32620  002B9C  6E22               	movwf	flash_page_write@data,c
 32621  002B9E  0E03               	movlw	high _buffer
 32622  002BA0  6E23               	movwf	flash_page_write@data+1,c
 32623  002BA2  ECFC  F03D         	call	_flash_page_write	;wreg free
 32624  002BA6  4A25               	infsnz	fat_format@cntr,f,c
 32625  002BA8  2A26               	incf	fat_format@cntr+1,f,c
 32626  002BAA  D7ED               	goto	l13030
 32627  002BAC                     u10020:
 32628  002BAC                     l13040:
 32629                           
 32630                           ;fat16.c: 1160: };fat16.c: 1163: for(cntr=0; cntr<512; ++cntr)
 32631  002BAC  0E00               	movlw	0
 32632  002BAE  6E26               	movwf	fat_format@cntr+1,c
 32633  002BB0  0E00               	movlw	0
 32634  002BB2  6E25               	movwf	fat_format@cntr,c
 32635  002BB4                     l13042:
 32636  002BB4  0E02               	movlw	2
 32637  002BB6  5C26               	subwf	fat_format@cntr+1,w,c
 32638  002BB8  B0D8               	btfsc	status,0,c
 32639  002BBA  D010               	goto	u10040
 32640                           
 32641                           ;fat16.c: 1164: {;fat16.c: 1165: buffer[cntr] = _get_root(cntr);
 32642  002BBC  0E80               	movlw	low _buffer
 32643  002BBE  2425               	addwf	fat_format@cntr,w,c
 32644  002BC0  6ED9               	movwf	fsr2l,c
 32645  002BC2  0E03               	movlw	high _buffer
 32646  002BC4  2026               	addwfc	fat_format@cntr+1,w,c
 32647  002BC6  6EDA               	movwf	fsr2h,c
 32648  002BC8  C025  F001         	movff	fat_format@cntr,__get_root@idx
 32649  002BCC  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 32650  002BD0  ECD9  F01B         	call	__get_root	;wreg free
 32651  002BD4  6EDF               	movwf	indf2,c
 32652  002BD6  4A25               	infsnz	fat_format@cntr,f,c
 32653  002BD8  2A26               	incf	fat_format@cntr+1,f,c
 32654  002BDA  D7EC               	goto	l13042
 32655  002BDC                     u10040:
 32656                           
 32657                           ;fat16.c: 1166: };fat16.c: 1167: flash_page_write(34, buffer);
 32658  002BDC  0E00               	movlw	0
 32659  002BDE  6E21               	movwf	flash_page_write@page+1,c
 32660  002BE0  0E22               	movlw	34
 32661  002BE2  6E20               	movwf	flash_page_write@page,c
 32662  002BE4  0E80               	movlw	low _buffer
 32663  002BE6  6E22               	movwf	flash_page_write@data,c
 32664  002BE8  0E03               	movlw	high _buffer
 32665  002BEA  6E23               	movwf	flash_page_write@data+1,c
 32666  002BEC  ECFC  F03D         	call	_flash_page_write	;wreg free
 32667                           
 32668                           ;fat16.c: 1170: for(cntr=0; cntr<512; ++cntr)
 32669  002BF0  0E00               	movlw	0
 32670  002BF2  6E26               	movwf	fat_format@cntr+1,c
 32671  002BF4  0E00               	movlw	0
 32672  002BF6  6E25               	movwf	fat_format@cntr,c
 32673  002BF8                     l13056:
 32674  002BF8  0E02               	movlw	2
 32675  002BFA  5C26               	subwf	fat_format@cntr+1,w,c
 32676  002BFC  B0D8               	btfsc	status,0,c
 32677  002BFE  D00B               	goto	u10060
 32678                           
 32679                           ;fat16.c: 1171: {;fat16.c: 1172: buffer[cntr] = 0x00;
 32680  002C00  0E80               	movlw	low _buffer
 32681  002C02  2425               	addwf	fat_format@cntr,w,c
 32682  002C04  6ED9               	movwf	fsr2l,c
 32683  002C06  0E03               	movlw	high _buffer
 32684  002C08  2026               	addwfc	fat_format@cntr+1,w,c
 32685  002C0A  6EDA               	movwf	fsr2h,c
 32686  002C0C  0E00               	movlw	0
 32687  002C0E  6EDF               	movwf	indf2,c
 32688  002C10  4A25               	infsnz	fat_format@cntr,f,c
 32689  002C12  2A26               	incf	fat_format@cntr+1,f,c
 32690  002C14  D7F1               	goto	l13056
 32691  002C16                     u10060:
 32692                           
 32693                           ;fat16.c: 1173: };fat16.c: 1174: for(cntr=34+1; cntr<=37; ++cntr)
 32694  002C16  0E00               	movlw	0
 32695  002C18  6E26               	movwf	fat_format@cntr+1,c
 32696  002C1A  0E23               	movlw	35
 32697  002C1C  6E25               	movwf	fat_format@cntr,c
 32698  002C1E                     l13068:
 32699  002C1E  5026               	movf	fat_format@cntr+1,w,c
 32700  002C20  E111               	bnz	l13078
 32701  002C22  0E26               	movlw	38
 32702  002C24  5C25               	subwf	fat_format@cntr,w,c
 32703  002C26  B0D8               	btfsc	status,0,c
 32704  002C28  D00D               	goto	u10080
 32705                           
 32706                           ;fat16.c: 1175: {;fat16.c: 1176: flash_page_write(cntr, buffer);
 32707  002C2A  C025  F020         	movff	fat_format@cntr,flash_page_write@page
 32708  002C2E  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
 32709  002C32  0E80               	movlw	low _buffer
 32710  002C34  6E22               	movwf	flash_page_write@data,c
 32711  002C36  0E03               	movlw	high _buffer
 32712  002C38  6E23               	movwf	flash_page_write@data+1,c
 32713  002C3A  ECFC  F03D         	call	_flash_page_write	;wreg free
 32714  002C3E  4A25               	infsnz	fat_format@cntr,f,c
 32715  002C40  2A26               	incf	fat_format@cntr+1,f,c
 32716  002C42  D7ED               	goto	l13068
 32717  002C44                     u10080:
 32718  002C44                     l13078:
 32719                           
 32720                           ;fat16.c: 1177: };fat16.c: 1180: for(cntr=0; cntr<512; ++cntr)
 32721  002C44  0E00               	movlw	0
 32722  002C46  6E26               	movwf	fat_format@cntr+1,c
 32723  002C48  0E00               	movlw	0
 32724  002C4A  6E25               	movwf	fat_format@cntr,c
 32725  002C4C                     l13080:
 32726  002C4C  0E02               	movlw	2
 32727  002C4E  5C26               	subwf	fat_format@cntr+1,w,c
 32728  002C50  B0D8               	btfsc	status,0,c
 32729  002C52  D010               	goto	u10100
 32730                           
 32731                           ;fat16.c: 1181: {;fat16.c: 1182: buffer[cntr] = _get_data(cntr);
 32732  002C54  0E80               	movlw	low _buffer
 32733  002C56  2425               	addwf	fat_format@cntr,w,c
 32734  002C58  6ED9               	movwf	fsr2l,c
 32735  002C5A  0E03               	movlw	high _buffer
 32736  002C5C  2026               	addwfc	fat_format@cntr+1,w,c
 32737  002C5E  6EDA               	movwf	fsr2h,c
 32738  002C60  C025  F001         	movff	fat_format@cntr,__get_data@idx
 32739  002C64  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 32740  002C68  ECDC  F042         	call	__get_data	;wreg free
 32741  002C6C  6EDF               	movwf	indf2,c
 32742  002C6E  4A25               	infsnz	fat_format@cntr,f,c
 32743  002C70  2A26               	incf	fat_format@cntr+1,f,c
 32744  002C72  D7EC               	goto	l13080
 32745  002C74                     u10100:
 32746                           
 32747                           ;fat16.c: 1183: };fat16.c: 1184: flash_page_write(38, buffer);
 32748  002C74  0E00               	movlw	0
 32749  002C76  6E21               	movwf	flash_page_write@page+1,c
 32750  002C78  0E26               	movlw	38
 32751  002C7A  6E20               	movwf	flash_page_write@page,c
 32752  002C7C  0E80               	movlw	low _buffer
 32753  002C7E  6E22               	movwf	flash_page_write@data,c
 32754  002C80  0E03               	movlw	high _buffer
 32755  002C82  6E23               	movwf	flash_page_write@data+1,c
 32756  002C84  ECFC  F03D         	call	_flash_page_write	;wreg free
 32757  002C88  0012               	return		;funcret
 32758  002C8A                     __end_of_fat_format:
 32759                           	opt stack 0
 32760                           tosu	equ	0xFFF
 32761                           tosh	equ	0xFFE
 32762                           tosl	equ	0xFFD
 32763                           pclath	equ	0xFFA
 32764                           tblptru	equ	0xFF8
 32765                           tblptrh	equ	0xFF7
 32766                           tblptrl	equ	0xFF6
 32767                           tablat	equ	0xFF5
 32768                           prodh	equ	0xFF4
 32769                           prodl	equ	0xFF3
 32770                           intcon	equ	0xFF2
 32771                           intcon2	equ	0xFF1
 32772                           intcon3	equ	0xFF0
 32773                           indf0	equ	0xFEF
 32774                           postinc0	equ	0xFEE
 32775                           fsr0h	equ	0xFEA
 32776                           fsr0l	equ	0xFE9
 32777                           wreg	equ	0xFE8
 32778                           indf1	equ	0xFE7
 32779                           postdec1	equ	0xFE5
 32780                           plusw1	equ	0xFE3
 32781                           fsr1h	equ	0xFE2
 32782                           fsr1l	equ	0xFE1
 32783                           indf2	equ	0xFDF
 32784                           postinc2	equ	0xFDE
 32785                           postdec2	equ	0xFDD
 32786                           plusw2	equ	0xFDB
 32787                           fsr2h	equ	0xFDA
 32788                           fsr2l	equ	0xFD9
 32789                           status	equ	0xFD8
 32790                           
 32791 ;; *************** function _flash_page_write *****************
 32792 ;; Defined at:
 32793 ;;		line 433 in file "flash.c"
 32794 ;; Parameters:    Size  Location     Type
 32795 ;;  page            2   31[COMRAM] unsigned int 
 32796 ;;  data            2   33[COMRAM] PTR unsigned char 
 32797 ;;		 -> buffer(512), msd_buffer(512), 
 32798 ;; Auto vars:     Size  Location     Type
 32799 ;;  match           1   35[COMRAM] enum E6894
 32800 ;; Return value:  Size  Location     Type
 32801 ;;                  1    wreg      void 
 32802 ;; Registers used:
 32803 ;;		wreg, status,2, status,0, cstack
 32804 ;; Tracked objects:
 32805 ;;		On entry : 0/0
 32806 ;;		On exit  : 0/0
 32807 ;;		Unchanged: 0/0
 32808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32812 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32813 ;;Total ram usage:        5 bytes
 32814 ;; Hardware stack levels used:    1
 32815 ;; Hardware stack levels required when called:    4
 32816 ;; This function calls:
 32817 ;;		__flash_compare_page_to_buffer
 32818 ;;		__flash_write_page_from_buffer
 32819 ;;		__flash_write_to_buffer
 32820 ;;		_spi_set_configuration
 32821 ;; This function is called by:
 32822 ;;		_ExternalFlash_SectorWrite
 32823 ;;		_fat_format
 32824 ;; This function uses a non-reentrant model
 32825 ;;
 32826                           
 32827                           	psect	text165
 32828  007BF8                     __ptext165:
 32829                           	opt stack 0
 32830  007BF8                     _flash_page_write:
 32831                           	opt stack 23
 32832                           
 32833                           ;flash.c: 435: flashMatchResult_t match;;flash.c: 438: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 32834                           
 32835                           ;incstack = 0
 32836  007BF8  0E00               	movlw	0
 32837  007BFA  EC59  F024         	call	_spi_set_configuration
 32838                           
 32839                           ;flash.c: 441: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 32840  007BFE  0E00               	movlw	0
 32841  007C00  6E15               	movwf	__flash_write_to_buffer@start+1,c
 32842  007C02  0E00               	movlw	0
 32843  007C04  6E14               	movwf	__flash_write_to_buffer@start,c
 32844  007C06  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 32845  007C0A  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 32846  007C0E  0E02               	movlw	2
 32847  007C10  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 32848  007C12  0E00               	movlw	0
 32849  007C14  6E18               	movwf	__flash_write_to_buffer@data_length,c
 32850  007C16  0E00               	movlw	0
 32851  007C18  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 32852  007C1A  EC21  F03F         	call	__flash_write_to_buffer	;wreg free
 32853                           
 32854                           ;flash.c: 444: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 32855  007C1E  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 32856  007C22  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 32857  007C26  0E00               	movlw	0
 32858  007C28  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 32859  007C2A  EC1E  F038         	call	__flash_compare_page_to_buffer	;wreg free
 32860  007C2E  6E24               	movwf	flash_page_write@match,c
 32861                           
 32862                           ;flash.c: 447: if(match==DATA_DOES_NOT_MATCH)
 32863  007C30  0424               	decf	flash_page_write@match,w,c
 32864  007C32  A4D8               	btfss	status,2,c
 32865  007C34  D008               	goto	l1837
 32866                           
 32867                           ;flash.c: 448: {;flash.c: 449: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 32868  007C36  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 32869  007C3A  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 32870  007C3E  0E00               	movlw	0
 32871  007C40  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 32872  007C42  ECF7  F03C         	call	__flash_write_page_from_buffer	;wreg free
 32873  007C46                     l1837:
 32874                           
 32875                           ;flash.c: 450: };flash.c: 453: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 32876  007C46  0E01               	movlw	1
 32877  007C48  EC59  F024         	call	_spi_set_configuration
 32878  007C4C  0012               	return		;funcret
 32879  007C4E                     __end_of_flash_page_write:
 32880                           	opt stack 0
 32881                           tosu	equ	0xFFF
 32882                           tosh	equ	0xFFE
 32883                           tosl	equ	0xFFD
 32884                           pclath	equ	0xFFA
 32885                           tblptru	equ	0xFF8
 32886                           tblptrh	equ	0xFF7
 32887                           tblptrl	equ	0xFF6
 32888                           tablat	equ	0xFF5
 32889                           prodh	equ	0xFF4
 32890                           prodl	equ	0xFF3
 32891                           intcon	equ	0xFF2
 32892                           intcon2	equ	0xFF1
 32893                           intcon3	equ	0xFF0
 32894                           indf0	equ	0xFEF
 32895                           postinc0	equ	0xFEE
 32896                           fsr0h	equ	0xFEA
 32897                           fsr0l	equ	0xFE9
 32898                           wreg	equ	0xFE8
 32899                           indf1	equ	0xFE7
 32900                           postdec1	equ	0xFE5
 32901                           plusw1	equ	0xFE3
 32902                           fsr1h	equ	0xFE2
 32903                           fsr1l	equ	0xFE1
 32904                           indf2	equ	0xFDF
 32905                           postinc2	equ	0xFDE
 32906                           postdec2	equ	0xFDD
 32907                           plusw2	equ	0xFDB
 32908                           fsr2h	equ	0xFDA
 32909                           fsr2l	equ	0xFD9
 32910                           status	equ	0xFD8
 32911                           
 32912 ;; *************** function __get_root *****************
 32913 ;; Defined at:
 32914 ;;		line 1013 in file "fat16.c"
 32915 ;; Parameters:    Size  Location     Type
 32916 ;;  idx             2    0[COMRAM] unsigned int 
 32917 ;; Auto vars:     Size  Location     Type
 32918 ;;		None
 32919 ;; Return value:  Size  Location     Type
 32920 ;;                  1    wreg      unsigned char 
 32921 ;; Registers used:
 32922 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 32923 ;; Tracked objects:
 32924 ;;		On entry : 0/0
 32925 ;;		On exit  : 0/0
 32926 ;;		Unchanged: 0/0
 32927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32930 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32931 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32932 ;;Total ram usage:        6 bytes
 32933 ;; Hardware stack levels used:    1
 32934 ;; This function calls:
 32935 ;;		Nothing
 32936 ;; This function is called by:
 32937 ;;		_fat_format
 32938 ;; This function uses a non-reentrant model
 32939 ;;
 32940                           
 32941                           	psect	text166
 32942  0037B2                     __ptext166:
 32943                           	opt stack 0
 32944  0037B2                     __get_root:
 32945                           	opt stack 27
 32946                           
 32947                           ;fat16.c: 1015: if (idx < 0x20)
 32948                           
 32949                           ;incstack = 0
 32950  0037B2  5002               	movf	__get_root@idx+1,w,c
 32951  0037B4  E11D               	bnz	l12088
 32952  0037B6  0E20               	movlw	32
 32953  0037B8  5C01               	subwf	__get_root@idx,w,c
 32954  0037BA  B0D8               	btfsc	status,0,c
 32955  0037BC  D019               	goto	l2172
 32956                           
 32957                           ;fat16.c: 1016: {;fat16.c: 1017: if (idx < 11)
 32958  0037BE  5002               	movf	__get_root@idx+1,w,c
 32959  0037C0  E110               	bnz	l12082
 32960  0037C2  0E0B               	movlw	11
 32961  0037C4  5C01               	subwf	__get_root@idx,w,c
 32962  0037C6  B0D8               	btfsc	status,0,c
 32963  0037C8  D00C               	goto	l2170
 32964                           
 32965                           ;fat16.c: 1018: {;fat16.c: 1019: return "SolarChargr"[idx];
 32966  0037CA  0EDD               	movlw	low STR_9
 32967  0037CC  2401               	addwf	__get_root@idx,w,c
 32968  0037CE  6EF6               	movwf	tblptrl,c
 32969  0037D0  0E8F               	movlw	high STR_9
 32970  0037D2  2002               	addwfc	__get_root@idx+1,w,c
 32971  0037D4  6EF7               	movwf	tblptrh,c
 32972  0037D6                     	if	1	;There are 3 active tblptr bytes
 32973  0037D6  6AF8               	clrf	tblptru,c
 32974  0037D8  0E00               	movlw	low (__mediumconst shr (0+16))
 32975  0037DA  22F8               	addwfc	tblptru,f,c
 32976  0037DC                     	endif
 32977  0037DC  0008               	tblrd		*
 32978  0037DE  50F5               	movf	tablat,w,c
 32979  0037E0  0012               	return	
 32980  0037E2                     l2170:
 32981  0037E2                     l12082:
 32982                           
 32983                           ;fat16.c: 1020: };fat16.c: 1021: if(idx==11)
 32984  0037E2  0E0B               	movlw	11
 32985  0037E4  1801               	xorwf	__get_root@idx,w,c
 32986  0037E6  1002               	iorwf	__get_root@idx+1,w,c
 32987  0037E8  A4D8               	btfss	status,2,c
 32988  0037EA  D002               	goto	l2172
 32989                           
 32990                           ;fat16.c: 1022: {;fat16.c: 1023: return 0x08;
 32991  0037EC  0E08               	movlw	8
 32992  0037EE  0012               	return	
 32993  0037F0                     l2172:
 32994  0037F0                     l12088:
 32995                           
 32996                           ;fat16.c: 1024: };fat16.c: 1025: };fat16.c: 1026: if (idx < 0x40)
 32997  0037F0  5002               	movf	__get_root@idx+1,w,c
 32998  0037F2  E103               	bnz	u8831
 32999  0037F4  0E40               	movlw	64
 33000  0037F6  5C01               	subwf	__get_root@idx,w,c
 33001  0037F8  B0D8               	btfsc	status,0,c
 33002  0037FA                     u8831:
 33003  0037FA  D0A4               	goto	l2198
 33004                           
 33005                           ;fat16.c: 1027: {;fat16.c: 1028: idx -= 0x20;
 33006  0037FC  0E20               	movlw	32
 33007  0037FE  5E01               	subwf	__get_root@idx,f,c
 33008  003800  0E00               	movlw	0
 33009  003802  5A02               	subwfb	__get_root@idx+1,f,c
 33010                           
 33011                           ;fat16.c: 1029: if (idx < 0+8)
 33012  003804  5002               	movf	__get_root@idx+1,w,c
 33013  003806  E110               	bnz	l12096
 33014  003808  0E08               	movlw	8
 33015  00380A  5C01               	subwf	__get_root@idx,w,c
 33016  00380C  B0D8               	btfsc	status,0,c
 33017  00380E  D00C               	goto	l2174
 33018                           
 33019                           ;fat16.c: 1030: {;fat16.c: 1031: return "FILE    "[idx];
 33020  003810  0EE9               	movlw	low STR_10
 33021  003812  2401               	addwf	__get_root@idx,w,c
 33022  003814  6EF6               	movwf	tblptrl,c
 33023  003816  0E8F               	movlw	high STR_10
 33024  003818  2002               	addwfc	__get_root@idx+1,w,c
 33025  00381A  6EF7               	movwf	tblptrh,c
 33026  00381C                     	if	1	;There are 3 active tblptr bytes
 33027  00381C  6AF8               	clrf	tblptru,c
 33028  00381E  0E00               	movlw	low (__mediumconst shr (0+16))
 33029  003820  22F8               	addwfc	tblptru,f,c
 33030  003822                     	endif
 33031  003822  0008               	tblrd		*
 33032  003824  50F5               	movf	tablat,w,c
 33033  003826  0012               	return	
 33034  003828                     l2174:
 33035  003828                     l12096:
 33036                           
 33037                           ;fat16.c: 1032: };fat16.c: 1033: if (idx < 11)
 33038  003828  5002               	movf	__get_root@idx+1,w,c
 33039  00382A  E146               	bnz	l12188
 33040  00382C  0E0B               	movlw	11
 33041  00382E  5C01               	subwf	__get_root@idx,w,c
 33042  003830  B0D8               	btfsc	status,0,c
 33043  003832  D042               	goto	l2176
 33044                           
 33045                           ;fat16.c: 1034: {;fat16.c: 1035: return "TXT"[idx-8];
 33046  003834  0EF8               	movlw	248
 33047  003836  6E03               	movwf	??__get_root& (0+255),c
 33048  003838  0EFF               	movlw	255
 33049  00383A  6E04               	movwf	(??__get_root+1)& (0+255),c
 33050  00383C  C001  F005         	movff	__get_root@idx,??__get_root+2
 33051  003840  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 33052  003844  5003               	movf	??__get_root,w,c
 33053  003846  2605               	addwf	??__get_root+2,f,c
 33054  003848  5004               	movf	??__get_root+1,w,c
 33055  00384A  2206               	addwfc	??__get_root+3,f,c
 33056  00384C  0EFB               	movlw	low STR_11
 33057  00384E  2405               	addwf	??__get_root+2,w,c
 33058  003850  6EF6               	movwf	tblptrl,c
 33059  003852  0E8F               	movlw	high STR_11
 33060  003854  2006               	addwfc	??__get_root+3,w,c
 33061  003856  6EF7               	movwf	tblptrh,c
 33062  003858                     	if	1	;There are 3 active tblptr bytes
 33063  003858  6AF8               	clrf	tblptru,c
 33064  00385A  0E00               	movlw	low (__mediumconst shr (0+16))
 33065  00385C  22F8               	addwfc	tblptru,f,c
 33066  00385E                     	endif
 33067  00385E  0008               	tblrd		*
 33068  003860  50F5               	movf	tablat,w,c
 33069  003862  0012               	return	
 33070  003864                     
 33071                           ;fat16.c: 1040: return 0x20;
 33072  003864  0E20               	movlw	32
 33073  003866  0012               	return	
 33074  003868                     
 33075                           ;fat16.c: 1042: return 0x06;
 33076  003868  0E06               	movlw	6
 33077  00386A  0012               	return	
 33078  00386C                     
 33079                           ;fat16.c: 1044: return 0x28;
 33080  00386C  0E28               	movlw	40
 33081  00386E  0012               	return	
 33082  003870                     
 33083                           ;fat16.c: 1046: return 0x78;
 33084  003870  0E78               	movlw	120
 33085  003872  0012               	return	
 33086  003874                     
 33087                           ;fat16.c: 1048: return 0xDE;
 33088  003874  0EDE               	movlw	222
 33089  003876  0012               	return	
 33090  003878                     
 33091                           ;fat16.c: 1050: return 0x38;
 33092  003878  0E38               	movlw	56
 33093  00387A  0012               	return	
 33094  00387C                     
 33095                           ;fat16.c: 1052: return 0x5F;
 33096  00387C  0E5F               	movlw	95
 33097  00387E  0012               	return	
 33098  003880                     
 33099                           ;fat16.c: 1054: return 0x4B;
 33100  003880  0E4B               	movlw	75
 33101  003882  0012               	return	
 33102  003884                     
 33103                           ;fat16.c: 1056: return 0x00;
 33104  003884  0E00               	movlw	0
 33105  003886  0012               	return	
 33106  003888                     
 33107                           ;fat16.c: 1058: return 0x00;
 33108  003888  0E00               	movlw	0
 33109  00388A  0012               	return	
 33110  00388C                     
 33111                           ;fat16.c: 1060: return 0x04;
 33112  00388C  0E04               	movlw	4
 33113  00388E  0012               	return	
 33114  003890                     
 33115                           ;fat16.c: 1062: return 0x77;
 33116  003890  0E77               	movlw	119
 33117  003892  0012               	return	
 33118  003894                     
 33119                           ;fat16.c: 1064: return 0xDE;
 33120  003894  0EDE               	movlw	222
 33121  003896  0012               	return	
 33122  003898                     
 33123                           ;fat16.c: 1066: return 0x38;
 33124  003898  0E38               	movlw	56
 33125  00389A  0012               	return	
 33126  00389C                     
 33127                           ;fat16.c: 1068: return ((unsigned char)((((uint16_t)2))&0xFF));
 33128  00389C  0E02               	movlw	2
 33129  00389E  0012               	return	
 33130  0038A0                     
 33131                           ;fat16.c: 1070: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 33132  0038A0  0E00               	movlw	0
 33133  0038A2  0012               	return	
 33134  0038A4                     
 33135                           ;fat16.c: 1072: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 33136  0038A4  0E0C               	movlw	12
 33137  0038A6  0012               	return	
 33138  0038A8                     
 33139                           ;fat16.c: 1075: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 33140  0038A8  0E00               	movlw	0
 33141  0038AA  0012               	return	
 33142  0038AC                     
 33143                           ;fat16.c: 1078: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 33144  0038AC  0E00               	movlw	0
 33145  0038AE  0012               	return	
 33146  0038B0                     
 33147                           ;fat16.c: 1081: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 33148  0038B0  0E00               	movlw	0
 33149  0038B2  0012               	return	
 33150  0038B4                     
 33151                           ;fat16.c: 1084: return 0x00;
 33152  0038B4  0E00               	movlw	0
 33153  0038B6  0012               	return	
 33154  0038B8                     l2176:
 33155  0038B8                     l12188:
 33156  0038B8  C001  F003         	movff	__get_root@idx,??__get_root
 33157  0038BC  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 33158                           
 33159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33160                           ; Switch size 1, requested type "space"
 33161                           ; Number of cases is 1, Range of values is 0 to 0
 33162                           ; switch strategies available:
 33163                           ; Name         Instructions Cycles
 33164                           ; simple_byte            4     3 (average)
 33165                           ;	Chosen strategy is simple_byte
 33166  0038C0  5004               	movf	??__get_root+1,w,c
 33167  0038C2  0A00               	xorlw	0	; case 0
 33168  0038C4  A4D8               	btfss	status,2,c
 33169  0038C6  D7F6               	goto	l2197
 33170                           
 33171                           ; Switch size 1, requested type "space"
 33172                           ; Number of cases is 20, Range of values is 11 to 31
 33173                           ; switch strategies available:
 33174                           ; Name         Instructions Cycles
 33175                           ; simple_byte           61    31 (average)
 33176                           ;	Chosen strategy is simple_byte
 33177  0038C8  5003               	movf	??__get_root,w,c
 33178  0038CA  0A0B               	xorlw	11	; case 11
 33179  0038CC  B4D8               	btfsc	status,2,c
 33180  0038CE  D7CA               	goto	l2177
 33181  0038D0  0A06               	xorlw	6	; case 13
 33182  0038D2  B4D8               	btfsc	status,2,c
 33183  0038D4  D7C9               	goto	l2178
 33184  0038D6  0A03               	xorlw	3	; case 14
 33185  0038D8  B4D8               	btfsc	status,2,c
 33186  0038DA  D7C8               	goto	l2179
 33187  0038DC  0A01               	xorlw	1	; case 15
 33188  0038DE  B4D8               	btfsc	status,2,c
 33189  0038E0  D7C7               	goto	l2180
 33190  0038E2  0A1F               	xorlw	31	; case 16
 33191  0038E4  B4D8               	btfsc	status,2,c
 33192  0038E6  D7C6               	goto	l2181
 33193  0038E8  0A01               	xorlw	1	; case 17
 33194  0038EA  B4D8               	btfsc	status,2,c
 33195  0038EC  D7C5               	goto	l2182
 33196  0038EE  0A03               	xorlw	3	; case 18
 33197  0038F0  B4D8               	btfsc	status,2,c
 33198  0038F2  D7C4               	goto	l2183
 33199  0038F4  0A01               	xorlw	1	; case 19
 33200  0038F6  B4D8               	btfsc	status,2,c
 33201  0038F8  D7C3               	goto	l2184
 33202  0038FA  0A07               	xorlw	7	; case 20
 33203  0038FC  B4D8               	btfsc	status,2,c
 33204  0038FE  D7C2               	goto	l2185
 33205  003900  0A01               	xorlw	1	; case 21
 33206  003902  B4D8               	btfsc	status,2,c
 33207  003904  D7C1               	goto	l2186
 33208  003906  0A03               	xorlw	3	; case 22
 33209  003908  B4D8               	btfsc	status,2,c
 33210  00390A  D7C0               	goto	l2187
 33211  00390C  0A01               	xorlw	1	; case 23
 33212  00390E  B4D8               	btfsc	status,2,c
 33213  003910  D7BF               	goto	l2188
 33214  003912  0A0F               	xorlw	15	; case 24
 33215  003914  B4D8               	btfsc	status,2,c
 33216  003916  D7BE               	goto	l2189
 33217  003918  0A01               	xorlw	1	; case 25
 33218  00391A  B4D8               	btfsc	status,2,c
 33219  00391C  D7BD               	goto	l2190
 33220  00391E  0A03               	xorlw	3	; case 26
 33221  003920  B4D8               	btfsc	status,2,c
 33222  003922  D7BC               	goto	l2191
 33223  003924  0A01               	xorlw	1	; case 27
 33224  003926  B4D8               	btfsc	status,2,c
 33225  003928  D7BB               	goto	l2192
 33226  00392A  0A07               	xorlw	7	; case 28
 33227  00392C  B4D8               	btfsc	status,2,c
 33228  00392E  D7BA               	goto	l2193
 33229  003930  0A01               	xorlw	1	; case 29
 33230  003932  B4D8               	btfsc	status,2,c
 33231  003934  D7B9               	goto	l2194
 33232  003936  0A03               	xorlw	3	; case 30
 33233  003938  B4D8               	btfsc	status,2,c
 33234  00393A  D7B8               	goto	l2195
 33235  00393C  0A01               	xorlw	1	; case 31
 33236  00393E  B4D8               	btfsc	status,2,c
 33237  003940  D7B7               	goto	l2196
 33238  003942  D7B8               	goto	l2197
 33239  003944                     l2198:
 33240                           
 33241                           ;fat16.c: 1086: };fat16.c: 1087: return 0X00;
 33242  003944  0E00               	movlw	0
 33243  003946  0012               	return	
 33244  003948                     __end_of__get_root:
 33245                           	opt stack 0
 33246                           tosu	equ	0xFFF
 33247                           tosh	equ	0xFFE
 33248                           tosl	equ	0xFFD
 33249                           pclath	equ	0xFFA
 33250                           tblptru	equ	0xFF8
 33251                           tblptrh	equ	0xFF7
 33252                           tblptrl	equ	0xFF6
 33253                           tablat	equ	0xFF5
 33254                           prodh	equ	0xFF4
 33255                           prodl	equ	0xFF3
 33256                           intcon	equ	0xFF2
 33257                           intcon2	equ	0xFF1
 33258                           intcon3	equ	0xFF0
 33259                           indf0	equ	0xFEF
 33260                           postinc0	equ	0xFEE
 33261                           fsr0h	equ	0xFEA
 33262                           fsr0l	equ	0xFE9
 33263                           wreg	equ	0xFE8
 33264                           indf1	equ	0xFE7
 33265                           postdec1	equ	0xFE5
 33266                           plusw1	equ	0xFE3
 33267                           fsr1h	equ	0xFE2
 33268                           fsr1l	equ	0xFE1
 33269                           indf2	equ	0xFDF
 33270                           postinc2	equ	0xFDE
 33271                           postdec2	equ	0xFDD
 33272                           plusw2	equ	0xFDB
 33273                           fsr2h	equ	0xFDA
 33274                           fsr2l	equ	0xFD9
 33275                           status	equ	0xFD8
 33276                           
 33277 ;; *************** function __get_mbr *****************
 33278 ;; Defined at:
 33279 ;;		line 840 in file "fat16.c"
 33280 ;; Parameters:    Size  Location     Type
 33281 ;;  idx             2    0[COMRAM] unsigned int 
 33282 ;; Auto vars:     Size  Location     Type
 33283 ;;		None
 33284 ;; Return value:  Size  Location     Type
 33285 ;;                  1    wreg      unsigned char 
 33286 ;; Registers used:
 33287 ;;		wreg, status,2, status,0
 33288 ;; Tracked objects:
 33289 ;;		On entry : 0/0
 33290 ;;		On exit  : 0/0
 33291 ;;		Unchanged: 0/0
 33292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33296 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33297 ;;Total ram usage:        4 bytes
 33298 ;; Hardware stack levels used:    1
 33299 ;; This function calls:
 33300 ;;		Nothing
 33301 ;; This function is called by:
 33302 ;;		_fat_get_format_status
 33303 ;;		_fat_format
 33304 ;; This function uses a non-reentrant model
 33305 ;;
 33306                           
 33307                           	psect	text167
 33308  005A44                     __ptext167:
 33309                           	opt stack 0
 33310  005A44                     __get_mbr:
 33311                           	opt stack 27
 33312                           
 33313                           ;fat16.c: 842: switch (idx)
 33314                           
 33315                           ;incstack = 0
 33316  005A44  D026               	goto	l2079
 33317  005A46                     
 33318                           ;fat16.c: 845: return 0x80;
 33319  005A46  0E80               	movlw	128
 33320  005A48  0012               	return	
 33321  005A4A                     
 33322                           ;fat16.c: 847: return 0;
 33323  005A4A  0E00               	movlw	0
 33324  005A4C  0012               	return	
 33325  005A4E                     
 33326                           ;fat16.c: 849: return 2;
 33327  005A4E  0E02               	movlw	2
 33328  005A50  0012               	return	
 33329  005A52                     
 33330                           ;fat16.c: 851: return 0;
 33331  005A52  0E00               	movlw	0
 33332  005A54  0012               	return	
 33333  005A56                     
 33334                           ;fat16.c: 853: return 0x04;
 33335  005A56  0E04               	movlw	4
 33336  005A58  0012               	return	
 33337  005A5A                     
 33338                           ;fat16.c: 855: return 2;
 33339  005A5A  0E02               	movlw	2
 33340  005A5C  0012               	return	
 33341  005A5E                     
 33342                           ;fat16.c: 857: return 3;
 33343  005A5E  0E03               	movlw	3
 33344  005A60  0012               	return	
 33345  005A62                     
 33346                           ;fat16.c: 859: return 8;
 33347  005A62  0E08               	movlw	8
 33348  005A64  0012               	return	
 33349  005A66                     
 33350                           ;fat16.c: 861: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
 33351  005A66  0E01               	movlw	1
 33352  005A68  0012               	return	
 33353  005A6A                     
 33354                           ;fat16.c: 863: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
 33355  005A6A  0E00               	movlw	0
 33356  005A6C  0012               	return	
 33357  005A6E                     
 33358                           ;fat16.c: 865: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
 33359  005A6E  0E00               	movlw	0
 33360  005A70  0012               	return	
 33361  005A72                     
 33362                           ;fat16.c: 867: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
 33363  005A72  0E00               	movlw	0
 33364  005A74  0012               	return	
 33365  005A76                     
 33366                           ;fat16.c: 869: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&0
      +                          xFF));
 33367  005A76  0EFF               	movlw	255
 33368  005A78  0012               	return	
 33369  005A7A                     
 33370                           ;fat16.c: 871: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))>
      +                          >8)&0xFF));
 33371  005A7A  0E1F               	movlw	31
 33372  005A7C  0012               	return	
 33373  005A7E                     
 33374                           ;fat16.c: 873: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFFF
      +                          F)))&0xFF));
 33375  005A7E  0E00               	movlw	0
 33376  005A80  0012               	return	
 33377  005A82                     
 33378                           ;fat16.c: 875: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
 33379  005A82  0E00               	movlw	0
 33380  005A84  0012               	return	
 33381  005A86                     
 33382                           ;fat16.c: 877: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 33383  005A86  0E55               	movlw	85
 33384  005A88  0012               	return	
 33385  005A8A                     
 33386                           ;fat16.c: 879: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 33387  005A8A  0EAA               	movlw	170
 33388  005A8C  0012               	return	
 33389  005A8E                     
 33390                           ;fat16.c: 881: return 0X00;
 33391  005A8E  0E00               	movlw	0
 33392                           
 33393                           ;fat16.c: 882: }
 33394  005A90  0012               	return	
 33395  005A92                     l2079:
 33396  005A92  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 33397  005A96  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 33398                           
 33399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33400                           ; Switch size 1, requested type "space"
 33401                           ; Number of cases is 1, Range of values is 1 to 1
 33402                           ; switch strategies available:
 33403                           ; Name         Instructions Cycles
 33404                           ; simple_byte            4     3 (average)
 33405                           ;	Chosen strategy is simple_byte
 33406  005A9A  5004               	movf	??__get_mbr+1,w,c
 33407  005A9C  0A01               	xorlw	1	; case 1
 33408  005A9E  A4D8               	btfss	status,2,c
 33409  005AA0  D7F6               	goto	l2099
 33410                           
 33411                           ; Switch size 1, requested type "space"
 33412                           ; Number of cases is 18, Range of values is 190 to 255
 33413                           ; switch strategies available:
 33414                           ; Name         Instructions Cycles
 33415                           ; simple_byte           55    28 (average)
 33416                           ;	Chosen strategy is simple_byte
 33417  005AA2  5003               	movf	??__get_mbr,w,c
 33418  005AA4  0ABE               	xorlw	190	; case 190
 33419  005AA6  B4D8               	btfsc	status,2,c
 33420  005AA8  D7CE               	goto	l2080
 33421  005AAA  0A01               	xorlw	1	; case 191
 33422  005AAC  B4D8               	btfsc	status,2,c
 33423  005AAE  D7CD               	goto	l2082
 33424  005AB0  0A7F               	xorlw	127	; case 192
 33425  005AB2  B4D8               	btfsc	status,2,c
 33426  005AB4  D7CC               	goto	l2083
 33427  005AB6  0A01               	xorlw	1	; case 193
 33428  005AB8  B4D8               	btfsc	status,2,c
 33429  005ABA  D7CB               	goto	l2084
 33430  005ABC  0A03               	xorlw	3	; case 194
 33431  005ABE  B4D8               	btfsc	status,2,c
 33432  005AC0  D7CA               	goto	l2085
 33433  005AC2  0A01               	xorlw	1	; case 195
 33434  005AC4  B4D8               	btfsc	status,2,c
 33435  005AC6  D7C9               	goto	l2086
 33436  005AC8  0A07               	xorlw	7	; case 196
 33437  005ACA  B4D8               	btfsc	status,2,c
 33438  005ACC  D7C8               	goto	l2087
 33439  005ACE  0A01               	xorlw	1	; case 197
 33440  005AD0  B4D8               	btfsc	status,2,c
 33441  005AD2  D7C7               	goto	l2088
 33442  005AD4  0A03               	xorlw	3	; case 198
 33443  005AD6  B4D8               	btfsc	status,2,c
 33444  005AD8  D7C6               	goto	l2089
 33445  005ADA  0A01               	xorlw	1	; case 199
 33446  005ADC  B4D8               	btfsc	status,2,c
 33447  005ADE  D7C5               	goto	l2090
 33448  005AE0  0A0F               	xorlw	15	; case 200
 33449  005AE2  B4D8               	btfsc	status,2,c
 33450  005AE4  D7C4               	goto	l2091
 33451  005AE6  0A01               	xorlw	1	; case 201
 33452  005AE8  B4D8               	btfsc	status,2,c
 33453  005AEA  D7C3               	goto	l2092
 33454  005AEC  0A03               	xorlw	3	; case 202
 33455  005AEE  B4D8               	btfsc	status,2,c
 33456  005AF0  D7C2               	goto	l2093
 33457  005AF2  0A01               	xorlw	1	; case 203
 33458  005AF4  B4D8               	btfsc	status,2,c
 33459  005AF6  D7C1               	goto	l2094
 33460  005AF8  0A07               	xorlw	7	; case 204
 33461  005AFA  B4D8               	btfsc	status,2,c
 33462  005AFC  D7C0               	goto	l2095
 33463  005AFE  0A01               	xorlw	1	; case 205
 33464  005B00  B4D8               	btfsc	status,2,c
 33465  005B02  D7BF               	goto	l2096
 33466  005B04  0A33               	xorlw	51	; case 254
 33467  005B06  B4D8               	btfsc	status,2,c
 33468  005B08  D7BE               	goto	l2097
 33469  005B0A  0A01               	xorlw	1	; case 255
 33470  005B0C  B4D8               	btfsc	status,2,c
 33471  005B0E  D7BD               	goto	l2098
 33472  005B10  D7BE               	goto	l2099
 33473  005B12                     __end_of__get_mbr:
 33474                           	opt stack 0
 33475                           tosu	equ	0xFFF
 33476                           tosh	equ	0xFFE
 33477                           tosl	equ	0xFFD
 33478                           pclath	equ	0xFFA
 33479                           tblptru	equ	0xFF8
 33480                           tblptrh	equ	0xFF7
 33481                           tblptrl	equ	0xFF6
 33482                           tablat	equ	0xFF5
 33483                           prodh	equ	0xFF4
 33484                           prodl	equ	0xFF3
 33485                           intcon	equ	0xFF2
 33486                           intcon2	equ	0xFF1
 33487                           intcon3	equ	0xFF0
 33488                           indf0	equ	0xFEF
 33489                           postinc0	equ	0xFEE
 33490                           fsr0h	equ	0xFEA
 33491                           fsr0l	equ	0xFE9
 33492                           wreg	equ	0xFE8
 33493                           indf1	equ	0xFE7
 33494                           postdec1	equ	0xFE5
 33495                           plusw1	equ	0xFE3
 33496                           fsr1h	equ	0xFE2
 33497                           fsr1l	equ	0xFE1
 33498                           indf2	equ	0xFDF
 33499                           postinc2	equ	0xFDE
 33500                           postdec2	equ	0xFDD
 33501                           plusw2	equ	0xFDB
 33502                           fsr2h	equ	0xFDA
 33503                           fsr2l	equ	0xFD9
 33504                           status	equ	0xFD8
 33505                           
 33506 ;; *************** function __get_fbr *****************
 33507 ;; Defined at:
 33508 ;;		line 885 in file "fat16.c"
 33509 ;; Parameters:    Size  Location     Type
 33510 ;;  idx             2    0[COMRAM] unsigned int 
 33511 ;; Auto vars:     Size  Location     Type
 33512 ;;		None
 33513 ;; Return value:  Size  Location     Type
 33514 ;;                  1    wreg      unsigned char 
 33515 ;; Registers used:
 33516 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 33517 ;; Tracked objects:
 33518 ;;		On entry : 0/0
 33519 ;;		On exit  : 0/0
 33520 ;;		Unchanged: 0/0
 33521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33525 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33526 ;;Total ram usage:        4 bytes
 33527 ;; Hardware stack levels used:    1
 33528 ;; This function calls:
 33529 ;;		Nothing
 33530 ;; This function is called by:
 33531 ;;		_fat_get_format_status
 33532 ;;		_fat_format
 33533 ;; This function uses a non-reentrant model
 33534 ;;
 33535                           
 33536                           	psect	text168
 33537  001ACC                     __ptext168:
 33538                           	opt stack 0
 33539  001ACC                     __get_fbr:
 33540                           	opt stack 27
 33541                           
 33542                           ;fat16.c: 887: switch (idx)
 33543                           
 33544                           ;incstack = 0
 33545  001ACC  D091               	goto	l2103
 33546  001ACE                     
 33547                           ;fat16.c: 890: return 0xEB;
 33548  001ACE  0EEB               	movlw	235
 33549  001AD0  0012               	return	
 33550  001AD2                     
 33551                           ;fat16.c: 892: return 0x3C;
 33552  001AD2  0E3C               	movlw	60
 33553  001AD4  0012               	return	
 33554  001AD6                     
 33555                           ;fat16.c: 894: return 0x90;
 33556  001AD6  0E90               	movlw	144
 33557  001AD8  0012               	return	
 33558  001ADA                     
 33559                           ;fat16.c: 896: return "MSDOS5.0"[0];
 33560  001ADA  0EF2               	movlw	low STR_1
 33561  001ADC  6EF6               	movwf	tblptrl,c
 33562  001ADE                     	if	1	;There is more than 1 active tblptr byte
 33563  001ADE  0E8F               	movlw	high STR_1
 33564  001AE0  6EF7               	movwf	tblptrh,c
 33565  001AE2                     	endif
 33566  001AE2                     	if	1	;There are 3 active tblptr bytes
 33567  001AE2  0E00               	movlw	low (STR_1 shr (0+16))
 33568  001AE4  6EF8               	movwf	tblptru,c
 33569  001AE6                     	endif
 33570  001AE6  0008               	tblrd		*
 33571  001AE8  50F5               	movf	tablat,w,c
 33572  001AEA  0012               	return	
 33573  001AEC                     
 33574                           ;fat16.c: 898: return "MSDOS5.0"[1];
 33575  001AEC  0EF3               	movlw	low (STR_1+1)
 33576  001AEE  6EF6               	movwf	tblptrl,c
 33577  001AF0  0E8F               	movlw	high (STR_1+1)
 33578  001AF2  6EF7               	movwf	tblptrh,c
 33579  001AF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33580  001AF4  6AF8               	clrf	tblptru,c
 33581  001AF6                     	endif
 33582  001AF6                     	if	0	;tblptru may be non-zero
 33583  001AF6                     	endif
 33584  001AF6  0008               	tblrd		*
 33585  001AF8  50F5               	movf	tablat,w,c
 33586  001AFA  0012               	return	
 33587  001AFC                     
 33588                           ;fat16.c: 900: return "MSDOS5.0"[2];
 33589  001AFC  0EF4               	movlw	low (STR_1+2)
 33590  001AFE  6EF6               	movwf	tblptrl,c
 33591  001B00  0E8F               	movlw	high (STR_1+2)
 33592  001B02  6EF7               	movwf	tblptrh,c
 33593  001B04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33594  001B04  6AF8               	clrf	tblptru,c
 33595  001B06                     	endif
 33596  001B06                     	if	0	;tblptru may be non-zero
 33597  001B06                     	endif
 33598  001B06  0008               	tblrd		*
 33599  001B08  50F5               	movf	tablat,w,c
 33600  001B0A  0012               	return	
 33601  001B0C                     
 33602                           ;fat16.c: 902: return "MSDOS5.0"[3];
 33603  001B0C  0EF5               	movlw	low (STR_1+3)
 33604  001B0E  6EF6               	movwf	tblptrl,c
 33605  001B10  0E8F               	movlw	high (STR_1+3)
 33606  001B12  6EF7               	movwf	tblptrh,c
 33607  001B14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33608  001B14  6AF8               	clrf	tblptru,c
 33609  001B16                     	endif
 33610  001B16                     	if	0	;tblptru may be non-zero
 33611  001B16                     	endif
 33612  001B16  0008               	tblrd		*
 33613  001B18  50F5               	movf	tablat,w,c
 33614  001B1A  0012               	return	
 33615  001B1C                     
 33616                           ;fat16.c: 904: return "MSDOS5.0"[4];
 33617  001B1C  0EF6               	movlw	low (STR_1+4)
 33618  001B1E  6EF6               	movwf	tblptrl,c
 33619  001B20  0E8F               	movlw	high (STR_1+4)
 33620  001B22  6EF7               	movwf	tblptrh,c
 33621  001B24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33622  001B24  6AF8               	clrf	tblptru,c
 33623  001B26                     	endif
 33624  001B26                     	if	0	;tblptru may be non-zero
 33625  001B26                     	endif
 33626  001B26  0008               	tblrd		*
 33627  001B28  50F5               	movf	tablat,w,c
 33628  001B2A  0012               	return	
 33629  001B2C                     
 33630                           ;fat16.c: 906: return "MSDOS5.0"[5];
 33631  001B2C  0EF7               	movlw	low (STR_1+5)
 33632  001B2E  6EF6               	movwf	tblptrl,c
 33633  001B30  0E8F               	movlw	high (STR_1+5)
 33634  001B32  6EF7               	movwf	tblptrh,c
 33635  001B34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33636  001B34  6AF8               	clrf	tblptru,c
 33637  001B36                     	endif
 33638  001B36                     	if	0	;tblptru may be non-zero
 33639  001B36                     	endif
 33640  001B36  0008               	tblrd		*
 33641  001B38  50F5               	movf	tablat,w,c
 33642  001B3A  0012               	return	
 33643  001B3C                     
 33644                           ;fat16.c: 908: return "MSDOS5.0"[6];
 33645  001B3C  0EF8               	movlw	low (STR_1+6)
 33646  001B3E  6EF6               	movwf	tblptrl,c
 33647  001B40  0E8F               	movlw	high (STR_1+6)
 33648  001B42  6EF7               	movwf	tblptrh,c
 33649  001B44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33650  001B44  6AF8               	clrf	tblptru,c
 33651  001B46                     	endif
 33652  001B46                     	if	0	;tblptru may be non-zero
 33653  001B46                     	endif
 33654  001B46  0008               	tblrd		*
 33655  001B48  50F5               	movf	tablat,w,c
 33656  001B4A  0012               	return	
 33657  001B4C                     
 33658                           ;fat16.c: 910: return "MSDOS5.0"[7];
 33659  001B4C  0EF9               	movlw	low (STR_1+7)
 33660  001B4E  6EF6               	movwf	tblptrl,c
 33661  001B50  0E8F               	movlw	high (STR_1+7)
 33662  001B52  6EF7               	movwf	tblptrh,c
 33663  001B54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33664  001B54  6AF8               	clrf	tblptru,c
 33665  001B56                     	endif
 33666  001B56                     	if	0	;tblptru may be non-zero
 33667  001B56                     	endif
 33668  001B56  0008               	tblrd		*
 33669  001B58  50F5               	movf	tablat,w,c
 33670  001B5A  0012               	return	
 33671  001B5C                     
 33672                           ;fat16.c: 912: return ((unsigned char)((((uint16_t)512))&0xFF));
 33673  001B5C  0E00               	movlw	0
 33674  001B5E  0012               	return	
 33675  001B60                     
 33676                           ;fat16.c: 914: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 33677  001B60  0E02               	movlw	2
 33678  001B62  0012               	return	
 33679  001B64                     
 33680                           ;fat16.c: 916: return 1;
 33681  001B64  0E01               	movlw	1
 33682  001B66  0012               	return	
 33683  001B68                     
 33684                           ;fat16.c: 918: return ((unsigned char)((((uint16_t)1))&0xFF));
 33685  001B68  0E01               	movlw	1
 33686  001B6A  0012               	return	
 33687  001B6C                     
 33688                           ;fat16.c: 920: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 33689  001B6C  0E00               	movlw	0
 33690  001B6E  0012               	return	
 33691  001B70                     
 33692                           ;fat16.c: 922: return 1;
 33693  001B70  0E01               	movlw	1
 33694  001B72  0012               	return	
 33695  001B74                     
 33696                           ;fat16.c: 924: return ((unsigned char)((((uint16_t)64))&0xFF));
 33697  001B74  0E40               	movlw	64
 33698  001B76  0012               	return	
 33699  001B78                     
 33700                           ;fat16.c: 926: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 33701  001B78  0E00               	movlw	0
 33702  001B7A  0012               	return	
 33703  001B7C                     
 33704                           ;fat16.c: 928: return ((unsigned char)((((uint16_t)8191))&0xFF));
 33705  001B7C  0EFF               	movlw	255
 33706  001B7E  0012               	return	
 33707  001B80                     
 33708                           ;fat16.c: 930: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 33709  001B80  0E1F               	movlw	31
 33710  001B82  0012               	return	
 33711  001B84                     
 33712                           ;fat16.c: 932: return 0XF8;
 33713  001B84  0EF8               	movlw	248
 33714  001B86  0012               	return	
 33715  001B88                     
 33716                           ;fat16.c: 934: return ((unsigned char)((((uint16_t)32))&0xFF));
 33717  001B88  0E20               	movlw	32
 33718  001B8A  0012               	return	
 33719  001B8C                     
 33720                           ;fat16.c: 936: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 33721  001B8C  0E00               	movlw	0
 33722  001B8E  0012               	return	
 33723  001B90                     
 33724                           ;fat16.c: 938: return ((unsigned char)((((uint16_t)63))&0xFF));
 33725  001B90  0E3F               	movlw	63
 33726  001B92  0012               	return	
 33727  001B94                     
 33728                           ;fat16.c: 940: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 33729  001B94  0E00               	movlw	0
 33730  001B96  0012               	return	
 33731  001B98                     
 33732                           ;fat16.c: 942: return ((unsigned char)((((uint16_t)16))&0xFF));
 33733  001B98  0E10               	movlw	16
 33734  001B9A  0012               	return	
 33735  001B9C                     
 33736                           ;fat16.c: 944: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 33737  001B9C  0E00               	movlw	0
 33738  001B9E  0012               	return	
 33739  001BA0                     
 33740                           ;fat16.c: 946: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
 33741  001BA0  0E00               	movlw	0
 33742  001BA2  0012               	return	
 33743  001BA4                     
 33744                           ;fat16.c: 948: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
 33745  001BA4  0E00               	movlw	0
 33746  001BA6  0012               	return	
 33747  001BA8                     
 33748                           ;fat16.c: 950: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
 33749  001BA8  0E00               	movlw	0
 33750  001BAA  0012               	return	
 33751  001BAC                     
 33752                           ;fat16.c: 952: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
 33753  001BAC  0E00               	movlw	0
 33754  001BAE  0012               	return	
 33755  001BB0                     
 33756                           ;fat16.c: 954: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 33757  001BB0  0E01               	movlw	1
 33758  001BB2  0012               	return	
 33759  001BB4                     
 33760                           ;fat16.c: 956: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 33761  001BB4  0E00               	movlw	0
 33762  001BB6  0012               	return	
 33763  001BB8                     
 33764                           ;fat16.c: 958: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0xF
      +                          F));
 33765  001BB8  0E22               	movlw	34
 33766  001BBA  0012               	return	
 33767  001BBC                     
 33768                           ;fat16.c: 960: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>8
      +                          )&0xFF));
 33769  001BBC  0E00               	movlw	0
 33770  001BBE  0012               	return	
 33771  001BC0                     
 33772                           ;fat16.c: 964: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 33773                           
 33774                           ;fat16.c: 963: case 0x2F:
 33775  001BC0  0E00               	movlw	0
 33776  001BC2  0012               	return	
 33777  001BC4                     
 33778                           ;fat16.c: 966: return 'F';
 33779  001BC4  0E46               	movlw	70
 33780  001BC6  0012               	return	
 33781  001BC8                     
 33782                           ;fat16.c: 968: return 'A';
 33783  001BC8  0E41               	movlw	65
 33784  001BCA  0012               	return	
 33785  001BCC                     
 33786                           ;fat16.c: 970: return 'T';
 33787  001BCC  0E54               	movlw	84
 33788  001BCE  0012               	return	
 33789  001BD0                     
 33790                           ;fat16.c: 972: return '1';
 33791  001BD0  0E31               	movlw	49
 33792  001BD2  0012               	return	
 33793  001BD4                     
 33794                           ;fat16.c: 974: return '6';
 33795  001BD4  0E36               	movlw	54
 33796  001BD6  0012               	return	
 33797  001BD8                     
 33798                           ;fat16.c: 976: return ' ';
 33799  001BD8  0E20               	movlw	32
 33800  001BDA  0012               	return	
 33801  001BDC                     
 33802                           ;fat16.c: 978: return ' ';
 33803  001BDC  0E20               	movlw	32
 33804  001BDE  0012               	return	
 33805  001BE0                     
 33806                           ;fat16.c: 980: return ' ';
 33807  001BE0  0E20               	movlw	32
 33808  001BE2  0012               	return	
 33809  001BE4                     
 33810                           ;fat16.c: 982: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 33811  001BE4  0E55               	movlw	85
 33812  001BE6  0012               	return	
 33813  001BE8                     
 33814                           ;fat16.c: 984: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 33815  001BE8  0EAA               	movlw	170
 33816  001BEA  0012               	return	
 33817  001BEC                     
 33818                           ;fat16.c: 986: return 0X00;
 33819  001BEC  0E00               	movlw	0
 33820                           
 33821                           ;fat16.c: 987: }
 33822  001BEE  0012               	return	
 33823  001BF0                     l2103:
 33824  001BF0  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 33825  001BF4  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 33826                           
 33827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 33828                           ; Switch size 1, requested type "space"
 33829                           ; Number of cases is 2, Range of values is 0 to 1
 33830                           ; switch strategies available:
 33831                           ; Name         Instructions Cycles
 33832                           ; simple_byte            7     4 (average)
 33833                           ;	Chosen strategy is simple_byte
 33834  001BF8  5004               	movf	??__get_fbr+1,w,c
 33835  001BFA  0A00               	xorlw	0	; case 0
 33836  001BFC  B4D8               	btfsc	status,2,c
 33837  001BFE  D004               	goto	l15746
 33838  001C00  0A01               	xorlw	1	; case 1
 33839  001C02  B4D8               	btfsc	status,2,c
 33840  001C04  D08D               	goto	l15748
 33841  001C06  D7F2               	goto	l2153
 33842  001C08                     l15746:
 33843                           
 33844                           ; Switch size 1, requested type "space"
 33845                           ; Number of cases is 46, Range of values is 0 to 61
 33846                           ; switch strategies available:
 33847                           ; Name         Instructions Cycles
 33848                           ; simple_byte          139    70 (average)
 33849                           ;	Chosen strategy is simple_byte
 33850  001C08  5003               	movf	??__get_fbr,w,c
 33851  001C0A  0A00               	xorlw	0	; case 0
 33852  001C0C  B4D8               	btfsc	status,2,c
 33853  001C0E  D75F               	goto	l2104
 33854  001C10  0A01               	xorlw	1	; case 1
 33855  001C12  B4D8               	btfsc	status,2,c
 33856  001C14  D75E               	goto	l2106
 33857  001C16  0A03               	xorlw	3	; case 2
 33858  001C18  B4D8               	btfsc	status,2,c
 33859  001C1A  D75D               	goto	l2107
 33860  001C1C  0A01               	xorlw	1	; case 3
 33861  001C1E  B4D8               	btfsc	status,2,c
 33862  001C20  D75C               	goto	l2108
 33863  001C22  0A07               	xorlw	7	; case 4
 33864  001C24  B4D8               	btfsc	status,2,c
 33865  001C26  D762               	goto	l2109
 33866  001C28  0A01               	xorlw	1	; case 5
 33867  001C2A  B4D8               	btfsc	status,2,c
 33868  001C2C  D767               	goto	l2110
 33869  001C2E  0A03               	xorlw	3	; case 6
 33870  001C30  B4D8               	btfsc	status,2,c
 33871  001C32  D76C               	goto	l2111
 33872  001C34  0A01               	xorlw	1	; case 7
 33873  001C36  B4D8               	btfsc	status,2,c
 33874  001C38  D771               	goto	l2112
 33875  001C3A  0A0F               	xorlw	15	; case 8
 33876  001C3C  B4D8               	btfsc	status,2,c
 33877  001C3E  D776               	goto	l2113
 33878  001C40  0A01               	xorlw	1	; case 9
 33879  001C42  B4D8               	btfsc	status,2,c
 33880  001C44  D77B               	goto	l2114
 33881  001C46  0A03               	xorlw	3	; case 10
 33882  001C48  B4D8               	btfsc	status,2,c
 33883  001C4A  D780               	goto	l2115
 33884  001C4C  0A01               	xorlw	1	; case 11
 33885  001C4E  B4D8               	btfsc	status,2,c
 33886  001C50  D785               	goto	l2116
 33887  001C52  0A07               	xorlw	7	; case 12
 33888  001C54  B4D8               	btfsc	status,2,c
 33889  001C56  D784               	goto	l2117
 33890  001C58  0A01               	xorlw	1	; case 13
 33891  001C5A  B4D8               	btfsc	status,2,c
 33892  001C5C  D783               	goto	l2118
 33893  001C5E  0A03               	xorlw	3	; case 14
 33894  001C60  B4D8               	btfsc	status,2,c
 33895  001C62  D782               	goto	l2119
 33896  001C64  0A01               	xorlw	1	; case 15
 33897  001C66  B4D8               	btfsc	status,2,c
 33898  001C68  D781               	goto	l2120
 33899  001C6A  0A1F               	xorlw	31	; case 16
 33900  001C6C  B4D8               	btfsc	status,2,c
 33901  001C6E  D780               	goto	l2121
 33902  001C70  0A01               	xorlw	1	; case 17
 33903  001C72  B4D8               	btfsc	status,2,c
 33904  001C74  D77F               	goto	l2122
 33905  001C76  0A03               	xorlw	3	; case 18
 33906  001C78  B4D8               	btfsc	status,2,c
 33907  001C7A  D77E               	goto	l2123
 33908  001C7C  0A01               	xorlw	1	; case 19
 33909  001C7E  B4D8               	btfsc	status,2,c
 33910  001C80  D77D               	goto	l2124
 33911  001C82  0A07               	xorlw	7	; case 20
 33912  001C84  B4D8               	btfsc	status,2,c
 33913  001C86  D77C               	goto	l2125
 33914  001C88  0A01               	xorlw	1	; case 21
 33915  001C8A  B4D8               	btfsc	status,2,c
 33916  001C8C  D77B               	goto	l2126
 33917  001C8E  0A03               	xorlw	3	; case 22
 33918  001C90  B4D8               	btfsc	status,2,c
 33919  001C92  D77A               	goto	l2127
 33920  001C94  0A01               	xorlw	1	; case 23
 33921  001C96  B4D8               	btfsc	status,2,c
 33922  001C98  D779               	goto	l2128
 33923  001C9A  0A0F               	xorlw	15	; case 24
 33924  001C9C  B4D8               	btfsc	status,2,c
 33925  001C9E  D778               	goto	l2129
 33926  001CA0  0A01               	xorlw	1	; case 25
 33927  001CA2  B4D8               	btfsc	status,2,c
 33928  001CA4  D777               	goto	l2130
 33929  001CA6  0A03               	xorlw	3	; case 26
 33930  001CA8  B4D8               	btfsc	status,2,c
 33931  001CAA  D776               	goto	l2131
 33932  001CAC  0A01               	xorlw	1	; case 27
 33933  001CAE  B4D8               	btfsc	status,2,c
 33934  001CB0  D775               	goto	l2132
 33935  001CB2  0A07               	xorlw	7	; case 28
 33936  001CB4  B4D8               	btfsc	status,2,c
 33937  001CB6  D774               	goto	l2133
 33938  001CB8  0A01               	xorlw	1	; case 29
 33939  001CBA  B4D8               	btfsc	status,2,c
 33940  001CBC  D773               	goto	l2134
 33941  001CBE  0A03               	xorlw	3	; case 30
 33942  001CC0  B4D8               	btfsc	status,2,c
 33943  001CC2  D772               	goto	l2135
 33944  001CC4  0A01               	xorlw	1	; case 31
 33945  001CC6  B4D8               	btfsc	status,2,c
 33946  001CC8  D771               	goto	l2136
 33947  001CCA  0A37               	xorlw	55	; case 40
 33948  001CCC  B4D8               	btfsc	status,2,c
 33949  001CCE  D770               	goto	l2137
 33950  001CD0  0A01               	xorlw	1	; case 41
 33951  001CD2  B4D8               	btfsc	status,2,c
 33952  001CD4  D76F               	goto	l2138
 33953  001CD6  0A05               	xorlw	5	; case 44
 33954  001CD8  B4D8               	btfsc	status,2,c
 33955  001CDA  D76E               	goto	l2139
 33956  001CDC  0A01               	xorlw	1	; case 45
 33957  001CDE  B4D8               	btfsc	status,2,c
 33958  001CE0  D76D               	goto	l2140
 33959  001CE2  0A03               	xorlw	3	; case 46
 33960  001CE4  B4D8               	btfsc	status,2,c
 33961  001CE6  D76C               	goto	l2141
 33962  001CE8  0A01               	xorlw	1	; case 47
 33963  001CEA  B4D8               	btfsc	status,2,c
 33964  001CEC  D769               	goto	l2141
 33965  001CEE  0A19               	xorlw	25	; case 54
 33966  001CF0  B4D8               	btfsc	status,2,c
 33967  001CF2  D768               	goto	l2143
 33968  001CF4  0A01               	xorlw	1	; case 55
 33969  001CF6  B4D8               	btfsc	status,2,c
 33970  001CF8  D767               	goto	l2144
 33971  001CFA  0A0F               	xorlw	15	; case 56
 33972  001CFC  B4D8               	btfsc	status,2,c
 33973  001CFE  D766               	goto	l2145
 33974  001D00  0A01               	xorlw	1	; case 57
 33975  001D02  B4D8               	btfsc	status,2,c
 33976  001D04  D765               	goto	l2146
 33977  001D06  0A03               	xorlw	3	; case 58
 33978  001D08  B4D8               	btfsc	status,2,c
 33979  001D0A  D764               	goto	l2147
 33980  001D0C  0A01               	xorlw	1	; case 59
 33981  001D0E  B4D8               	btfsc	status,2,c
 33982  001D10  D763               	goto	l2148
 33983  001D12  0A07               	xorlw	7	; case 60
 33984  001D14  B4D8               	btfsc	status,2,c
 33985  001D16  D762               	goto	l2149
 33986  001D18  0A01               	xorlw	1	; case 61
 33987  001D1A  B4D8               	btfsc	status,2,c
 33988  001D1C  D761               	goto	l2150
 33989  001D1E  D766               	goto	l2153
 33990  001D20                     l15748:
 33991                           
 33992                           ; Switch size 1, requested type "space"
 33993                           ; Number of cases is 2, Range of values is 254 to 255
 33994                           ; switch strategies available:
 33995                           ; Name         Instructions Cycles
 33996                           ; simple_byte            7     4 (average)
 33997                           ;	Chosen strategy is simple_byte
 33998  001D20  5003               	movf	??__get_fbr,w,c
 33999  001D22  0AFE               	xorlw	254	; case 254
 34000  001D24  B4D8               	btfsc	status,2,c
 34001  001D26  D75E               	goto	l2151
 34002  001D28  0A01               	xorlw	1	; case 255
 34003  001D2A  B4D8               	btfsc	status,2,c
 34004  001D2C  D75D               	goto	l2152
 34005  001D2E  D75E               	goto	l2153
 34006  001D30                     __end_of__get_fbr:
 34007                           	opt stack 0
 34008                           tosu	equ	0xFFF
 34009                           tosh	equ	0xFFE
 34010                           tosl	equ	0xFFD
 34011                           pclath	equ	0xFFA
 34012                           tblptru	equ	0xFF8
 34013                           tblptrh	equ	0xFF7
 34014                           tblptrl	equ	0xFF6
 34015                           tablat	equ	0xFF5
 34016                           prodh	equ	0xFF4
 34017                           prodl	equ	0xFF3
 34018                           intcon	equ	0xFF2
 34019                           intcon2	equ	0xFF1
 34020                           intcon3	equ	0xFF0
 34021                           indf0	equ	0xFEF
 34022                           postinc0	equ	0xFEE
 34023                           fsr0h	equ	0xFEA
 34024                           fsr0l	equ	0xFE9
 34025                           wreg	equ	0xFE8
 34026                           indf1	equ	0xFE7
 34027                           postdec1	equ	0xFE5
 34028                           plusw1	equ	0xFE3
 34029                           fsr1h	equ	0xFE2
 34030                           fsr1l	equ	0xFE1
 34031                           indf2	equ	0xFDF
 34032                           postinc2	equ	0xFDE
 34033                           postdec2	equ	0xFDD
 34034                           plusw2	equ	0xFDB
 34035                           fsr2h	equ	0xFDA
 34036                           fsr2l	equ	0xFD9
 34037                           status	equ	0xFD8
 34038                           
 34039 ;; *************** function __get_fat *****************
 34040 ;; Defined at:
 34041 ;;		line 990 in file "fat16.c"
 34042 ;; Parameters:    Size  Location     Type
 34043 ;;  idx             2    0[COMRAM] unsigned int 
 34044 ;; Auto vars:     Size  Location     Type
 34045 ;;		None
 34046 ;; Return value:  Size  Location     Type
 34047 ;;                  1    wreg      unsigned char 
 34048 ;; Registers used:
 34049 ;;		wreg, status,2, status,0
 34050 ;; Tracked objects:
 34051 ;;		On entry : 0/0
 34052 ;;		On exit  : 0/0
 34053 ;;		Unchanged: 0/0
 34054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34057 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34058 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34059 ;;Total ram usage:        4 bytes
 34060 ;; Hardware stack levels used:    1
 34061 ;; This function calls:
 34062 ;;		Nothing
 34063 ;; This function is called by:
 34064 ;;		_fat_format
 34065 ;; This function uses a non-reentrant model
 34066 ;;
 34067                           
 34068                           	psect	text169
 34069  007C4E                     __ptext169:
 34070                           	opt stack 0
 34071  007C4E                     __get_fat:
 34072                           	opt stack 27
 34073                           
 34074                           ;fat16.c: 992: switch (idx)
 34075                           
 34076                           ;incstack = 0
 34077  007C4E  D00E               	goto	l2157
 34078  007C50                     
 34079                           ;fat16.c: 996: return 0xF8;
 34080  007C50  0EF8               	movlw	248
 34081  007C52  0012               	return	
 34082  007C54                     
 34083                           ;fat16.c: 998: return 0xFF;
 34084  007C54  0EFF               	movlw	255
 34085  007C56  0012               	return	
 34086  007C58                     
 34087                           ;fat16.c: 1000: return 0xFF;
 34088  007C58  0EFF               	movlw	255
 34089  007C5A  0012               	return	
 34090  007C5C                     
 34091                           ;fat16.c: 1002: return 0xFF;
 34092  007C5C  0EFF               	movlw	255
 34093  007C5E  0012               	return	
 34094  007C60                     
 34095                           ;fat16.c: 1005: return 0xFF;
 34096  007C60  0EFF               	movlw	255
 34097  007C62  0012               	return	
 34098  007C64                     
 34099                           ;fat16.c: 1007: return 0xFF;
 34100  007C64  0EFF               	movlw	255
 34101  007C66  0012               	return	
 34102  007C68                     
 34103                           ;fat16.c: 1009: return 0X00;
 34104  007C68  0E00               	movlw	0
 34105                           
 34106                           ;fat16.c: 1010: }
 34107  007C6A  0012               	return	
 34108  007C6C                     l2157:
 34109  007C6C  C001  F003         	movff	__get_fat@idx,??__get_fat
 34110  007C70  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 34111                           
 34112                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34113                           ; Switch size 1, requested type "space"
 34114                           ; Number of cases is 1, Range of values is 0 to 0
 34115                           ; switch strategies available:
 34116                           ; Name         Instructions Cycles
 34117                           ; simple_byte            4     3 (average)
 34118                           ;	Chosen strategy is simple_byte
 34119  007C74  5004               	movf	??__get_fat+1,w,c
 34120  007C76  0A00               	xorlw	0	; case 0
 34121  007C78  A4D8               	btfss	status,2,c
 34122  007C7A  D7F6               	goto	l2165
 34123                           
 34124                           ; Switch size 1, requested type "space"
 34125                           ; Number of cases is 6, Range of values is 0 to 5
 34126                           ; switch strategies available:
 34127                           ; Name         Instructions Cycles
 34128                           ; simple_byte           19    10 (average)
 34129                           ;	Chosen strategy is simple_byte
 34130  007C7C  5003               	movf	??__get_fat,w,c
 34131  007C7E  0A00               	xorlw	0	; case 0
 34132  007C80  B4D8               	btfsc	status,2,c
 34133  007C82  D7E6               	goto	l2158
 34134  007C84  0A01               	xorlw	1	; case 1
 34135  007C86  B4D8               	btfsc	status,2,c
 34136  007C88  D7E5               	goto	l2160
 34137  007C8A  0A03               	xorlw	3	; case 2
 34138  007C8C  B4D8               	btfsc	status,2,c
 34139  007C8E  D7E4               	goto	l2161
 34140  007C90  0A01               	xorlw	1	; case 3
 34141  007C92  B4D8               	btfsc	status,2,c
 34142  007C94  D7E3               	goto	l2162
 34143  007C96  0A07               	xorlw	7	; case 4
 34144  007C98  B4D8               	btfsc	status,2,c
 34145  007C9A  D7E2               	goto	l2163
 34146  007C9C  0A01               	xorlw	1	; case 5
 34147  007C9E  B4D8               	btfsc	status,2,c
 34148  007CA0  D7E1               	goto	l2164
 34149  007CA2  D7E2               	goto	l2165
 34150  007CA4                     __end_of__get_fat:
 34151                           	opt stack 0
 34152                           tosu	equ	0xFFF
 34153                           tosh	equ	0xFFE
 34154                           tosl	equ	0xFFD
 34155                           pclath	equ	0xFFA
 34156                           tblptru	equ	0xFF8
 34157                           tblptrh	equ	0xFF7
 34158                           tblptrl	equ	0xFF6
 34159                           tablat	equ	0xFF5
 34160                           prodh	equ	0xFF4
 34161                           prodl	equ	0xFF3
 34162                           intcon	equ	0xFF2
 34163                           intcon2	equ	0xFF1
 34164                           intcon3	equ	0xFF0
 34165                           indf0	equ	0xFEF
 34166                           postinc0	equ	0xFEE
 34167                           fsr0h	equ	0xFEA
 34168                           fsr0l	equ	0xFE9
 34169                           wreg	equ	0xFE8
 34170                           indf1	equ	0xFE7
 34171                           postdec1	equ	0xFE5
 34172                           plusw1	equ	0xFE3
 34173                           fsr1h	equ	0xFE2
 34174                           fsr1l	equ	0xFE1
 34175                           indf2	equ	0xFDF
 34176                           postinc2	equ	0xFDE
 34177                           postdec2	equ	0xFDD
 34178                           plusw2	equ	0xFDB
 34179                           fsr2h	equ	0xFDA
 34180                           fsr2l	equ	0xFD9
 34181                           status	equ	0xFD8
 34182                           
 34183 ;; *************** function __get_data *****************
 34184 ;; Defined at:
 34185 ;;		line 1090 in file "fat16.c"
 34186 ;; Parameters:    Size  Location     Type
 34187 ;;  idx             2    0[COMRAM] unsigned int 
 34188 ;; Auto vars:     Size  Location     Type
 34189 ;;		None
 34190 ;; Return value:  Size  Location     Type
 34191 ;;                  1    wreg      unsigned char 
 34192 ;; Registers used:
 34193 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34194 ;; Tracked objects:
 34195 ;;		On entry : 0/0
 34196 ;;		On exit  : 0/0
 34197 ;;		Unchanged: 0/0
 34198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34202 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34203 ;;Total ram usage:        2 bytes
 34204 ;; Hardware stack levels used:    1
 34205 ;; This function calls:
 34206 ;;		Nothing
 34207 ;; This function is called by:
 34208 ;;		_fat_format
 34209 ;; This function uses a non-reentrant model
 34210 ;;
 34211                           
 34212                           	psect	text170
 34213  0085B8                     __ptext170:
 34214                           	opt stack 0
 34215  0085B8                     __get_data:
 34216                           	opt stack 27
 34217                           
 34218                           ;fat16.c: 1092: if (idx < 12)
 34219                           
 34220                           ;incstack = 0
 34221  0085B8  5002               	movf	__get_data@idx+1,w,c
 34222  0085BA  E110               	bnz	l12204
 34223  0085BC  0E0C               	movlw	12
 34224  0085BE  5C01               	subwf	__get_data@idx,w,c
 34225  0085C0  B0D8               	btfsc	status,0,c
 34226  0085C2  D00C               	goto	l2201
 34227                           
 34228                           ;fat16.c: 1093: {;fat16.c: 1094: return "hello world!"[idx];
 34229  0085C4  0ED0               	movlw	low STR_12
 34230  0085C6  2401               	addwf	__get_data@idx,w,c
 34231  0085C8  6EF6               	movwf	tblptrl,c
 34232  0085CA  0E8F               	movlw	high STR_12
 34233  0085CC  2002               	addwfc	__get_data@idx+1,w,c
 34234  0085CE  6EF7               	movwf	tblptrh,c
 34235  0085D0                     	if	1	;There are 3 active tblptr bytes
 34236  0085D0  6AF8               	clrf	tblptru,c
 34237  0085D2  0E00               	movlw	low (__mediumconst shr (0+16))
 34238  0085D4  22F8               	addwfc	tblptru,f,c
 34239  0085D6                     	endif
 34240  0085D6  0008               	tblrd		*
 34241  0085D8  50F5               	movf	tablat,w,c
 34242  0085DA  0012               	return	
 34243  0085DC                     l2201:
 34244  0085DC                     l12204:
 34245                           
 34246                           ;fat16.c: 1095: };fat16.c: 1096: return 0X00;
 34247  0085DC  0E00               	movlw	0
 34248  0085DE  0012               	return	
 34249  0085E0                     __end_of__get_data:
 34250                           	opt stack 0
 34251                           tosu	equ	0xFFF
 34252                           tosh	equ	0xFFE
 34253                           tosl	equ	0xFFD
 34254                           pclath	equ	0xFFA
 34255                           tblptru	equ	0xFF8
 34256                           tblptrh	equ	0xFF7
 34257                           tblptrl	equ	0xFF6
 34258                           tablat	equ	0xFF5
 34259                           prodh	equ	0xFF4
 34260                           prodl	equ	0xFF3
 34261                           intcon	equ	0xFF2
 34262                           intcon2	equ	0xFF1
 34263                           intcon3	equ	0xFF0
 34264                           indf0	equ	0xFEF
 34265                           postinc0	equ	0xFEE
 34266                           fsr0h	equ	0xFEA
 34267                           fsr0l	equ	0xFE9
 34268                           wreg	equ	0xFE8
 34269                           indf1	equ	0xFE7
 34270                           postdec1	equ	0xFE5
 34271                           plusw1	equ	0xFE3
 34272                           fsr1h	equ	0xFE2
 34273                           fsr1l	equ	0xFE1
 34274                           indf2	equ	0xFDF
 34275                           postinc2	equ	0xFDE
 34276                           postdec2	equ	0xFDD
 34277                           plusw2	equ	0xFDB
 34278                           fsr2h	equ	0xFDA
 34279                           fsr2l	equ	0xFD9
 34280                           status	equ	0xFD8
 34281                           
 34282 ;; *************** function __parse_file_resize *****************
 34283 ;; Defined at:
 34284 ;;		line 513 in file "api.c"
 34285 ;; Parameters:    Size  Location     Type
 34286 ;;  data            2   70[COMRAM] PTR unsigned char 
 34287 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34288 ;; Auto vars:     Size  Location     Type
 34289 ;;  file_size       4   73[COMRAM] unsigned long 
 34290 ;; Return value:  Size  Location     Type
 34291 ;;                  1    wreg      unsigned char 
 34292 ;; Registers used:
 34293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34294 ;; Tracked objects:
 34295 ;;		On entry : 0/0
 34296 ;;		On exit  : 0/0
 34297 ;;		Unchanged: 0/0
 34298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34300 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34302 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34303 ;;Total ram usage:        7 bytes
 34304 ;; Hardware stack levels used:    1
 34305 ;; Hardware stack levels required when called:    8
 34306 ;; This function calls:
 34307 ;;		_fat_resize_file
 34308 ;; This function is called by:
 34309 ;;		__parse_command_long
 34310 ;; This function uses a non-reentrant model
 34311 ;;
 34312                           
 34313                           	psect	text171
 34314  00552E                     __ptext171:
 34315                           	opt stack 0
 34316  00552E                     __parse_file_resize:
 34317                           	opt stack 20
 34318                           
 34319                           ;api.c: 516: uint32_t file_size;;api.c: 517: if((data[0]!=COMMAND_FILE_RESIZE) || (data[
      +                          6]!=0x4C) || (data[7]!=0xEA))
 34320                           
 34321                           ;incstack = 0
 34322  00552E  C047  FFD9         	movff	__parse_file_resize@data,fsr2l
 34323  005532  C048  FFDA         	movff	__parse_file_resize@data+1,fsr2h
 34324  005536  0E50               	movlw	80
 34325  005538  18DE               	xorwf	postinc2,w,c
 34326  00553A  A4D8               	btfss	status,2,c
 34327  00553C  D014               	goto	u10420
 34328  00553E  EE20 F006          	lfsr	2,6
 34329  005542  5047               	movf	__parse_file_resize@data,w,c
 34330  005544  26D9               	addwf	fsr2l,f,c
 34331  005546  5048               	movf	__parse_file_resize@data+1,w,c
 34332  005548  22DA               	addwfc	fsr2h,f,c
 34333  00554A  0E4C               	movlw	76
 34334  00554C  18DE               	xorwf	postinc2,w,c
 34335  00554E  A4D8               	btfss	status,2,c
 34336  005550  D00A               	goto	u10420
 34337  005552  EE20 F007          	lfsr	2,7
 34338  005556  5047               	movf	__parse_file_resize@data,w,c
 34339  005558  26D9               	addwf	fsr2l,f,c
 34340  00555A  5048               	movf	__parse_file_resize@data+1,w,c
 34341  00555C  22DA               	addwfc	fsr2h,f,c
 34342  00555E  0EEA               	movlw	234
 34343  005560  18DE               	xorwf	postinc2,w,c
 34344  005562  B4D8               	btfsc	status,2,c
 34345  005564  D002               	goto	l2722
 34346  005566                     u10420:
 34347                           
 34348                           ;api.c: 518: {;api.c: 519: return 8;
 34349  005566  0E08               	movlw	8
 34350  005568  0012               	return	
 34351  00556A                     l2722:
 34352                           
 34353                           ;api.c: 520: };api.c: 523: file_size = data[2];
 34354  00556A  EE20 F002          	lfsr	2,2
 34355  00556E  5047               	movf	__parse_file_resize@data,w,c
 34356  005570  26D9               	addwf	fsr2l,f,c
 34357  005572  5048               	movf	__parse_file_resize@data+1,w,c
 34358  005574  22DA               	addwfc	fsr2h,f,c
 34359  005576  50DF               	movf	indf2,w,c
 34360  005578  6E49               	movwf	??__parse_file_resize& (0+255),c
 34361  00557A  5049               	movf	??__parse_file_resize,w,c
 34362  00557C  6E4A               	movwf	__parse_file_resize@file_size,c
 34363  00557E  6A4B               	clrf	__parse_file_resize@file_size+1,c
 34364  005580  6A4C               	clrf	__parse_file_resize@file_size+2,c
 34365  005582  6A4D               	clrf	__parse_file_resize@file_size+3,c
 34366                           
 34367                           ;api.c: 524: file_size <<= 8;
 34368  005584  C04C  F04D         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 34369  005588  C04B  F04C         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 34370  00558C  C04A  F04B         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 34371  005590  6A4A               	clrf	__parse_file_resize@file_size,c
 34372                           
 34373                           ;api.c: 525: file_size |= data[3];
 34374  005592  EE20 F003          	lfsr	2,3
 34375  005596  5047               	movf	__parse_file_resize@data,w,c
 34376  005598  26D9               	addwf	fsr2l,f,c
 34377  00559A  5048               	movf	__parse_file_resize@data+1,w,c
 34378  00559C  22DA               	addwfc	fsr2h,f,c
 34379  00559E  50DF               	movf	indf2,w,c
 34380  0055A0  6E49               	movwf	??__parse_file_resize& (0+255),c
 34381  0055A2  5049               	movf	??__parse_file_resize,w,c
 34382  0055A4  124A               	iorwf	__parse_file_resize@file_size,f,c
 34383                           
 34384                           ;api.c: 526: file_size <<= 8;
 34385  0055A6  C04C  F04D         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 34386  0055AA  C04B  F04C         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 34387  0055AE  C04A  F04B         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 34388  0055B2  6A4A               	clrf	__parse_file_resize@file_size,c
 34389                           
 34390                           ;api.c: 527: file_size |= data[4];
 34391  0055B4  EE20 F004          	lfsr	2,4
 34392  0055B8  5047               	movf	__parse_file_resize@data,w,c
 34393  0055BA  26D9               	addwf	fsr2l,f,c
 34394  0055BC  5048               	movf	__parse_file_resize@data+1,w,c
 34395  0055BE  22DA               	addwfc	fsr2h,f,c
 34396  0055C0  50DF               	movf	indf2,w,c
 34397  0055C2  6E49               	movwf	??__parse_file_resize& (0+255),c
 34398  0055C4  5049               	movf	??__parse_file_resize,w,c
 34399  0055C6  124A               	iorwf	__parse_file_resize@file_size,f,c
 34400                           
 34401                           ;api.c: 528: file_size <<= 8;
 34402  0055C8  C04C  F04D         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 34403  0055CC  C04B  F04C         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 34404  0055D0  C04A  F04B         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 34405  0055D4  6A4A               	clrf	__parse_file_resize@file_size,c
 34406                           
 34407                           ;api.c: 529: file_size |= data[5];
 34408  0055D6  EE20 F005          	lfsr	2,5
 34409  0055DA  5047               	movf	__parse_file_resize@data,w,c
 34410  0055DC  26D9               	addwf	fsr2l,f,c
 34411  0055DE  5048               	movf	__parse_file_resize@data+1,w,c
 34412  0055E0  22DA               	addwfc	fsr2h,f,c
 34413  0055E2  50DF               	movf	indf2,w,c
 34414  0055E4  6E49               	movwf	??__parse_file_resize& (0+255),c
 34415  0055E6  5049               	movf	??__parse_file_resize,w,c
 34416  0055E8  124A               	iorwf	__parse_file_resize@file_size,f,c
 34417                           
 34418                           ;api.c: 532: fat_resize_file(data[1], file_size);
 34419  0055EA  C04A  F03F         	movff	__parse_file_resize@file_size,fat_resize_file@new_file_size
 34420  0055EE  C04B  F040         	movff	__parse_file_resize@file_size+1,fat_resize_file@new_file_size+1
 34421  0055F2  C04C  F041         	movff	__parse_file_resize@file_size+2,fat_resize_file@new_file_size+2
 34422  0055F6  C04D  F042         	movff	__parse_file_resize@file_size+3,fat_resize_file@new_file_size+3
 34423  0055FA  EE20 F001          	lfsr	2,1
 34424  0055FE  5047               	movf	__parse_file_resize@data,w,c
 34425  005600  26D9               	addwf	fsr2l,f,c
 34426  005602  5048               	movf	__parse_file_resize@data+1,w,c
 34427  005604  22DA               	addwfc	fsr2h,f,c
 34428  005606  50DF               	movf	indf2,w,c
 34429  005608  ECF2  F010         	call	_fat_resize_file
 34430                           
 34431                           ;api.c: 533: return 8;
 34432  00560C  0E08               	movlw	8
 34433  00560E  0012               	return	
 34434  005610                     __end_of__parse_file_resize:
 34435                           	opt stack 0
 34436                           tosu	equ	0xFFF
 34437                           tosh	equ	0xFFE
 34438                           tosl	equ	0xFFD
 34439                           pclath	equ	0xFFA
 34440                           tblptru	equ	0xFF8
 34441                           tblptrh	equ	0xFF7
 34442                           tblptrl	equ	0xFF6
 34443                           tablat	equ	0xFF5
 34444                           prodh	equ	0xFF4
 34445                           prodl	equ	0xFF3
 34446                           intcon	equ	0xFF2
 34447                           intcon2	equ	0xFF1
 34448                           intcon3	equ	0xFF0
 34449                           indf0	equ	0xFEF
 34450                           postinc0	equ	0xFEE
 34451                           fsr0h	equ	0xFEA
 34452                           fsr0l	equ	0xFE9
 34453                           wreg	equ	0xFE8
 34454                           indf1	equ	0xFE7
 34455                           postdec1	equ	0xFE5
 34456                           plusw1	equ	0xFE3
 34457                           fsr1h	equ	0xFE2
 34458                           fsr1l	equ	0xFE1
 34459                           indf2	equ	0xFDF
 34460                           postinc2	equ	0xFDE
 34461                           postdec2	equ	0xFDD
 34462                           plusw2	equ	0xFDB
 34463                           fsr2h	equ	0xFDA
 34464                           fsr2l	equ	0xFD9
 34465                           status	equ	0xFD8
 34466                           
 34467 ;; *************** function _fat_resize_file *****************
 34468 ;; Defined at:
 34469 ;;		line 648 in file "fat16.c"
 34470 ;; Parameters:    Size  Location     Type
 34471 ;;  file_number     1    wreg     unsigned char 
 34472 ;;  new_file_siz    4   62[COMRAM] unsigned long 
 34473 ;; Auto vars:     Size  Location     Type
 34474 ;;  file_number     1    6[BANK0 ] unsigned char 
 34475 ;;  root           32   11[BANK0 ] struct .
 34476 ;;  old_file_siz    4    0[BANK0 ] unsigned long 
 34477 ;;  cluster         2   45[BANK0 ] unsigned int 
 34478 ;;  next_cluster    2   43[BANK0 ] unsigned int 
 34479 ;;  new_number_o    2    9[BANK0 ] unsigned int 
 34480 ;;  cntr            2    7[BANK0 ] unsigned int 
 34481 ;;  old_number_o    2    4[BANK0 ] unsigned int 
 34482 ;; Return value:  Size  Location     Type
 34483 ;;                  1    wreg      unsigned char 
 34484 ;; Registers used:
 34485 ;;		wreg, status,2, status,0, cstack
 34486 ;; Tracked objects:
 34487 ;;		On entry : 0/0
 34488 ;;		On exit  : 0/0
 34489 ;;		Unchanged: 0/0
 34490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34492 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34493 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34494 ;;      Totals:         8      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34495 ;;Total ram usage:       55 bytes
 34496 ;; Hardware stack levels used:    1
 34497 ;; Hardware stack levels required when called:    7
 34498 ;; This function calls:
 34499 ;;		__get_empty_cluster
 34500 ;;		__read_fat
 34501 ;;		__root_is_available
 34502 ;;		__write_fat
 34503 ;;		__write_root
 34504 ;;		_fat_get_file_information
 34505 ;; This function is called by:
 34506 ;;		__parse_file_resize
 34507 ;; This function uses a non-reentrant model
 34508 ;;
 34509                           
 34510                           	psect	text172
 34511  0021E4                     __ptext172:
 34512                           	opt stack 0
 34513  0021E4                     _fat_resize_file:
 34514                           	opt stack 20
 34515                           
 34516                           ;incstack = 0
 34517                           ;fat_resize_file@file_number stored from wreg
 34518  0021E4  0100               	movlb	0	; () banked
 34519  0021E6  6F66               	movwf	fat_resize_file@file_number& (0+255),b
 34520                           
 34521                           ;fat16.c: 650: rootEntry_t root;;fat16.c: 651: uint32_t old_file_size;;fat16.c: 652: uin
      +                          t16_t cluster;;fat16.c: 653: uint16_t next_cluster;;fat16.c: 654: uint16_t old_number_of
      +                          _clusters;;fat16.c: 655: uint16_t new_number_of_clusters;;fat16.c: 656: uint16_t cntr;;f
      +                          at16.c: 659: if(file_number>=64)
 34522  0021E8  0E3F               	movlw	63
 34523  0021EA  0100               	movlb	0	; () banked
 34524  0021EC  6566               	cpfsgt	fat_resize_file@file_number& (0+255),b
 34525  0021EE  D001               	goto	l2040
 34526  0021F0  0012               	return	
 34527  0021F2                     l2040:
 34528                           
 34529                           ; BSR set to: 0
 34530                           ;fat16.c: 663: };fat16.c: 666: if(_root_is_available(file_number))
 34531                           
 34532                           ; BSR set to: 0
 34533  0021F2  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 34534  0021F4  EC96  F038         	call	__root_is_available
 34535  0021F8  0900               	iorlw	0
 34536  0021FA  A4D8               	btfss	status,2,c
 34537  0021FC  0012               	return	
 34538                           
 34539                           ;fat16.c: 670: };fat16.c: 673: fat_get_file_information(file_number, &root);
 34540                           
 34541                           ;fat16.c: 667: {;fat16.c: 669: return 0xFE;;	Return value of _fat_resize_file is never u
      +                          sed
 34542  0021FE  0E6B               	movlw	low fat_resize_file@root
 34543  002200  6E37               	movwf	fat_get_file_information@data,c
 34544  002202  0E00               	movlw	high fat_resize_file@root
 34545  002204  6E38               	movwf	fat_get_file_information@data+1,c
 34546  002206  0100               	movlb	0	; () banked
 34547  002208  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 34548  00220A  ECD1  F038         	call	_fat_get_file_information
 34549                           
 34550                           ;fat16.c: 674: old_file_size = root.fileSize;
 34551  00220E  C087  F060         	movff	fat_resize_file@root+28,fat_resize_file@old_file_size
 34552  002212  C088  F061         	movff	fat_resize_file@root+29,fat_resize_file@old_file_size+1
 34553  002216  C089  F062         	movff	fat_resize_file@root+30,fat_resize_file@old_file_size+2
 34554  00221A  C08A  F063         	movff	fat_resize_file@root+31,fat_resize_file@old_file_size+3
 34555                           
 34556                           ;fat16.c: 676: if(new_file_size==old_file_size)
 34557  00221E  0100               	movlb	0	; () banked
 34558  002220  5160               	movf	fat_resize_file@old_file_size& (0+255),w,b
 34559  002222  183F               	xorwf	fat_resize_file@new_file_size,w,c
 34560  002224  E10A               	bnz	l2043
 34561  002226  5161               	movf	(fat_resize_file@old_file_size+1)& (0+255),w,b
 34562  002228  1840               	xorwf	fat_resize_file@new_file_size+1,w,c
 34563  00222A  E107               	bnz	l2043
 34564  00222C  5162               	movf	(fat_resize_file@old_file_size+2)& (0+255),w,b
 34565  00222E  1841               	xorwf	fat_resize_file@new_file_size+2,w,c
 34566  002230  E104               	bnz	l2043
 34567  002232  5163               	movf	(fat_resize_file@old_file_size+3)& (0+255),w,b
 34568  002234  1842               	xorwf	fat_resize_file@new_file_size+3,w,c
 34569  002236  B4D8               	btfsc	status,2,c
 34570  002238  0012               	return	
 34571  00223A                     l2043:
 34572                           
 34573                           ; BSR set to: 0
 34574                           ;fat16.c: 680: };fat16.c: 683: cluster = root.firstCluster;
 34575  00223A  C085  F08D         	movff	fat_resize_file@root+26,fat_resize_file@cluster
 34576  00223E  C086  F08E         	movff	fat_resize_file@root+27,fat_resize_file@cluster+1
 34577                           
 34578                           ; BSR set to: 0
 34579                           ;fat16.c: 684: if(cluster==0)
 34580  002242  518D               	movf	fat_resize_file@cluster& (0+255),w,b
 34581  002244  118E               	iorwf	(fat_resize_file@cluster+1)& (0+255),w,b
 34582  002246  A4D8               	btfss	status,2,c
 34583  002248  D00E               	goto	l2044
 34584                           
 34585                           ; BSR set to: 0
 34586                           ;fat16.c: 685: {;fat16.c: 687: cluster = _get_empty_cluster(0x0000);
 34587  00224A  0E00               	movlw	0
 34588  00224C  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 34589  00224E  0E00               	movlw	0
 34590  002250  6E30               	movwf	__get_empty_cluster@first_cluster,c
 34591  002252  EC99  F036         	call	__get_empty_cluster	;wreg free
 34592  002256  C030  F08D         	movff	?__get_empty_cluster,fat_resize_file@cluster
 34593  00225A  C031  F08E         	movff	?__get_empty_cluster+1,fat_resize_file@cluster+1
 34594                           
 34595                           ;fat16.c: 688: root.firstCluster = cluster;
 34596  00225E  C08D  F085         	movff	fat_resize_file@cluster,fat_resize_file@root+26
 34597  002262  C08E  F086         	movff	fat_resize_file@cluster+1,fat_resize_file@root+27
 34598  002266                     l2044:
 34599                           
 34600                           ;fat16.c: 689: };fat16.c: 692: old_number_of_clusters = (old_file_size+511)>>9;
 34601  002266  0EFF               	movlw	255
 34602  002268  0100               	movlb	0	; () banked
 34603  00226A  2560               	addwf	fat_resize_file@old_file_size& (0+255),w,b
 34604  00226C  6E43               	movwf	??_fat_resize_file& (0+255),c
 34605  00226E  0E01               	movlw	1
 34606  002270  2161               	addwfc	(fat_resize_file@old_file_size+1)& (0+255),w,b
 34607  002272  6E44               	movwf	(??_fat_resize_file+1)& (0+255),c
 34608  002274  0E00               	movlw	0
 34609  002276  2162               	addwfc	(fat_resize_file@old_file_size+2)& (0+255),w,b
 34610  002278  6E45               	movwf	(??_fat_resize_file+2)& (0+255),c
 34611  00227A  0E00               	movlw	0
 34612  00227C  2163               	addwfc	(fat_resize_file@old_file_size+3)& (0+255),w,b
 34613  00227E  6E46               	movwf	(??_fat_resize_file+3)& (0+255),c
 34614  002280  0E0A               	movlw	10
 34615  002282  D005               	goto	u9760
 34616  002284                     u9765:
 34617  002284  90D8               	bcf	status,0,c
 34618  002286  3246               	rrcf	??_fat_resize_file+3,f,c
 34619  002288  3245               	rrcf	??_fat_resize_file+2,f,c
 34620  00228A  3244               	rrcf	??_fat_resize_file+1,f,c
 34621  00228C  3243               	rrcf	??_fat_resize_file,f,c
 34622  00228E                     u9760:
 34623  00228E  2EE8               	decfsz	wreg,f,c
 34624  002290  D7F9               	goto	u9765
 34625  002292  C043  F064         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 34626  002296  C044  F065         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 34627                           
 34628                           ; BSR set to: 0
 34629                           ;fat16.c: 693: new_number_of_clusters = (new_file_size+511)>>9;
 34630  00229A  0EFF               	movlw	255
 34631  00229C  243F               	addwf	fat_resize_file@new_file_size,w,c
 34632  00229E  6E43               	movwf	??_fat_resize_file& (0+255),c
 34633  0022A0  0E01               	movlw	1
 34634  0022A2  2040               	addwfc	fat_resize_file@new_file_size+1,w,c
 34635  0022A4  6E44               	movwf	(??_fat_resize_file+1)& (0+255),c
 34636  0022A6  0E00               	movlw	0
 34637  0022A8  2041               	addwfc	fat_resize_file@new_file_size+2,w,c
 34638  0022AA  6E45               	movwf	(??_fat_resize_file+2)& (0+255),c
 34639  0022AC  0E00               	movlw	0
 34640  0022AE  2042               	addwfc	fat_resize_file@new_file_size+3,w,c
 34641  0022B0  6E46               	movwf	(??_fat_resize_file+3)& (0+255),c
 34642  0022B2  0E0A               	movlw	10
 34643  0022B4  D005               	goto	u9770
 34644  0022B6                     u9775:
 34645  0022B6  90D8               	bcf	status,0,c
 34646  0022B8  3246               	rrcf	??_fat_resize_file+3,f,c
 34647  0022BA  3245               	rrcf	??_fat_resize_file+2,f,c
 34648  0022BC  3244               	rrcf	??_fat_resize_file+1,f,c
 34649  0022BE  3243               	rrcf	??_fat_resize_file,f,c
 34650  0022C0                     u9770:
 34651  0022C0  2EE8               	decfsz	wreg,f,c
 34652  0022C2  D7F9               	goto	u9775
 34653  0022C4  C043  F069         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 34654  0022C8  C044  F06A         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 34655                           
 34656                           ; BSR set to: 0
 34657                           ;fat16.c: 699: if(old_number_of_clusters<new_number_of_clusters)
 34658  0022CC  5169               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34659  0022CE  5D64               	subwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 34660  0022D0  516A               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34661  0022D2  5965               	subwfb	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 34662  0022D4  B0D8               	btfsc	status,0,c
 34663  0022D6  D050               	goto	l2045
 34664                           
 34665                           ; BSR set to: 0
 34666                           ;fat16.c: 700: {;fat16.c: 701: for(cntr=1; cntr<=new_number_of_clusters; ++cntr)
 34667  0022D8  0E00               	movlw	0
 34668  0022DA  6F68               	movwf	(fat_resize_file@cntr+1)& (0+255),b
 34669  0022DC  0E01               	movlw	1
 34670  0022DE  6F67               	movwf	fat_resize_file@cntr& (0+255),b
 34671  0022E0  D044               	goto	l2046
 34672  0022E2                     
 34673                           ; BSR set to: 0
 34674                           ;fat16.c: 702: {;fat16.c: 703: next_cluster = _read_fat(cluster);
 34675                           
 34676                           ; BSR set to: 0
 34677  0022E2  C08D  F030         	movff	fat_resize_file@cluster,__read_fat@cluster
 34678  0022E6  C08E  F031         	movff	fat_resize_file@cluster+1,__read_fat@cluster+1
 34679  0022EA  EC91  F03F         	call	__read_fat	;wreg free
 34680  0022EE  C030  F08B         	movff	?__read_fat,fat_resize_file@next_cluster
 34681  0022F2  C031  F08C         	movff	?__read_fat+1,fat_resize_file@next_cluster+1
 34682                           
 34683                           ;fat16.c: 705: if(cntr==new_number_of_clusters)
 34684  0022F6  0100               	movlb	0	; () banked
 34685  0022F8  5169               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34686  0022FA  1967               	xorwf	fat_resize_file@cntr& (0+255),w,b
 34687  0022FC  E10E               	bnz	l12888
 34688  0022FE  516A               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34689  002300  1968               	xorwf	(fat_resize_file@cntr+1)& (0+255),w,b
 34690  002302  A4D8               	btfss	status,2,c
 34691  002304  D00A               	goto	l2048
 34692                           
 34693                           ; BSR set to: 0
 34694                           ;fat16.c: 706: {;fat16.c: 708: _write_fat(cluster, 0xFFFF);
 34695  002306  C08D  F029         	movff	fat_resize_file@cluster,__write_fat@cluster
 34696  00230A  C08E  F02A         	movff	fat_resize_file@cluster+1,__write_fat@cluster+1
 34697  00230E  0EFF               	movlw	255
 34698  002310  6E2C               	movwf	__write_fat@value+1,c
 34699  002312  682B               	setf	__write_fat@value,c
 34700  002314  EC7C  F040         	call	__write_fat	;wreg free
 34701                           
 34702                           ;fat16.c: 709: }
 34703  002318  D025               	goto	l2053
 34704  00231A                     l2048:
 34705  00231A                     l12888:
 34706                           
 34707                           ;fat16.c: 710: else;fat16.c: 711: {;fat16.c: 713: if((next_cluster>=0xFFF0) || (next_clu
      +                          ster==0))
 34708  00231A  0EF0               	movlw	240
 34709  00231C  0100               	movlb	0	; () banked
 34710  00231E  5D8B               	subwf	fat_resize_file@next_cluster& (0+255),w,b
 34711  002320  0EFF               	movlw	255
 34712  002322  598C               	subwfb	(fat_resize_file@next_cluster+1)& (0+255),w,b
 34713  002324  B0D8               	btfsc	status,0,c
 34714  002326  D004               	goto	u9810
 34715                           
 34716                           ; BSR set to: 0
 34717  002328  518B               	movf	fat_resize_file@next_cluster& (0+255),w,b
 34718  00232A  118C               	iorwf	(fat_resize_file@next_cluster+1)& (0+255),w,b
 34719  00232C  A4D8               	btfss	status,2,c
 34720  00232E  D016               	goto	l12894
 34721  002330                     u9810:
 34722                           
 34723                           ; BSR set to: 0
 34724                           ;fat16.c: 714: {;fat16.c: 716: next_cluster = _get_empty_cluster(cluster+1);
 34725                           
 34726                           ; BSR set to: 0
 34727  002330  0E01               	movlw	1
 34728  002332  258D               	addwf	fat_resize_file@cluster& (0+255),w,b
 34729  002334  6E30               	movwf	__get_empty_cluster@first_cluster,c
 34730  002336  0E00               	movlw	0
 34731  002338  218E               	addwfc	(fat_resize_file@cluster+1)& (0+255),w,b
 34732  00233A  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 34733  00233C  EC99  F036         	call	__get_empty_cluster	;wreg free
 34734  002340  C030  F08B         	movff	?__get_empty_cluster,fat_resize_file@next_cluster
 34735  002344  C031  F08C         	movff	?__get_empty_cluster+1,fat_resize_file@next_cluster+1
 34736                           
 34737                           ;fat16.c: 718: _write_fat(cluster, next_cluster);
 34738  002348  C08D  F029         	movff	fat_resize_file@cluster,__write_fat@cluster
 34739  00234C  C08E  F02A         	movff	fat_resize_file@cluster+1,__write_fat@cluster+1
 34740  002350  C08B  F02B         	movff	fat_resize_file@next_cluster,__write_fat@value
 34741  002354  C08C  F02C         	movff	fat_resize_file@next_cluster+1,__write_fat@value+1
 34742  002358  EC7C  F040         	call	__write_fat	;wreg free
 34743  00235C                     l12894:
 34744                           
 34745                           ; BSR set to: 0
 34746                           ;fat16.c: 722: else;fat16.c: 723: {;fat16.c: 726: cluster = next_cluster;
 34747                           
 34748                           ;fat16.c: 721: }
 34749                           
 34750                           ;fat16.c: 720: cluster = next_cluster;
 34751  00235C  C08B  F08D         	movff	fat_resize_file@next_cluster,fat_resize_file@cluster
 34752  002360  C08C  F08E         	movff	fat_resize_file@next_cluster+1,fat_resize_file@cluster+1
 34753  002364                     l2053:
 34754                           
 34755                           ; BSR set to: 0
 34756                           
 34757                           ; BSR set to: 0
 34758  002364  0100               	movlb	0	; () banked
 34759  002366  4B67               	infsnz	fat_resize_file@cntr& (0+255),f,b
 34760  002368  2B68               	incf	(fat_resize_file@cntr+1)& (0+255),f,b
 34761  00236A                     l2046:
 34762                           
 34763                           ; BSR set to: 0
 34764                           
 34765                           ; BSR set to: 0
 34766  00236A  5167               	movf	fat_resize_file@cntr& (0+255),w,b
 34767  00236C  5D69               	subwf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34768  00236E  5168               	movf	(fat_resize_file@cntr+1)& (0+255),w,b
 34769  002370  596A               	subwfb	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34770  002372  A0D8               	btfss	status,0,c
 34771  002374  D045               	goto	u9860
 34772  002376  D7B5               	goto	l2047
 34773  002378                     l2045:
 34774                           
 34775                           ; BSR set to: 0
 34776                           ;fat16.c: 733: else if(old_number_of_clusters>new_number_of_clusters)
 34777                           
 34778                           ; BSR set to: 0
 34779  002378  5164               	movf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 34780  00237A  5D69               	subwf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34781  00237C  5165               	movf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 34782  00237E  596A               	subwfb	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34783  002380  B0D8               	btfsc	status,0,c
 34784  002382  D03E               	goto	u9860
 34785                           
 34786                           ; BSR set to: 0
 34787                           ;fat16.c: 734: {;fat16.c: 735: for(cntr=1; cntr<=old_number_of_clusters; ++cntr)
 34788  002384  0E00               	movlw	0
 34789  002386  6F68               	movwf	(fat_resize_file@cntr+1)& (0+255),b
 34790  002388  0E01               	movlw	1
 34791  00238A  6F67               	movwf	fat_resize_file@cntr& (0+255),b
 34792  00238C  D033               	goto	l2057
 34793  00238E                     
 34794                           ; BSR set to: 0
 34795                           ;fat16.c: 736: {;fat16.c: 737: next_cluster = _read_fat(cluster);
 34796                           
 34797                           ; BSR set to: 0
 34798  00238E  C08D  F030         	movff	fat_resize_file@cluster,__read_fat@cluster
 34799  002392  C08E  F031         	movff	fat_resize_file@cluster+1,__read_fat@cluster+1
 34800  002396  EC91  F03F         	call	__read_fat	;wreg free
 34801  00239A  C030  F08B         	movff	?__read_fat,fat_resize_file@next_cluster
 34802  00239E  C031  F08C         	movff	?__read_fat+1,fat_resize_file@next_cluster+1
 34803                           
 34804                           ;fat16.c: 739: if(cntr<new_number_of_clusters)
 34805  0023A2  0100               	movlb	0	; () banked
 34806  0023A4  5169               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34807  0023A6  5D67               	subwf	fat_resize_file@cntr& (0+255),w,b
 34808  0023A8  516A               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34809  0023AA  5968               	subwfb	(fat_resize_file@cntr+1)& (0+255),w,b
 34810  0023AC  A0D8               	btfss	status,0,c
 34811  0023AE  D01B               	goto	l12918
 34812                           
 34813                           ; BSR set to: 0
 34814                           ;fat16.c: 744: else if(cntr==new_number_of_clusters)
 34815                           
 34816                           ; BSR set to: 0
 34817                           
 34818                           ;fat16.c: 743: }
 34819                           
 34820                           ; BSR set to: 0
 34821                           ;fat16.c: 740: {;fat16.c: 742: cluster = next_cluster;
 34822  0023B0  5169               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34823  0023B2  1967               	xorwf	fat_resize_file@cntr& (0+255),w,b
 34824  0023B4  E10E               	bnz	l12916
 34825  0023B6  516A               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34826  0023B8  1968               	xorwf	(fat_resize_file@cntr+1)& (0+255),w,b
 34827  0023BA  A4D8               	btfss	status,2,c
 34828  0023BC  D00A               	goto	l2061
 34829                           
 34830                           ; BSR set to: 0
 34831                           ;fat16.c: 745: {;fat16.c: 747: _write_fat(cluster, 0xFFFF);
 34832  0023BE  C08D  F029         	movff	fat_resize_file@cluster,__write_fat@cluster
 34833  0023C2  C08E  F02A         	movff	fat_resize_file@cluster+1,__write_fat@cluster+1
 34834  0023C6  0EFF               	movlw	255
 34835  0023C8  6E2C               	movwf	__write_fat@value+1,c
 34836  0023CA  682B               	setf	__write_fat@value,c
 34837  0023CC  EC7C  F040         	call	__write_fat	;wreg free
 34838  0023D0  D00A               	goto	l12918
 34839  0023D2                     l2061:
 34840  0023D2                     l12916:
 34841                           
 34842                           ;fat16.c: 751: else;fat16.c: 752: {;fat16.c: 754: _write_fat(cluster, 0x0000);
 34843  0023D2  C08D  F029         	movff	fat_resize_file@cluster,__write_fat@cluster
 34844  0023D6  C08E  F02A         	movff	fat_resize_file@cluster+1,__write_fat@cluster+1
 34845  0023DA  0E00               	movlw	0
 34846  0023DC  6E2C               	movwf	__write_fat@value+1,c
 34847  0023DE  0E00               	movlw	0
 34848  0023E0  6E2B               	movwf	__write_fat@value,c
 34849  0023E2  EC7C  F040         	call	__write_fat	;wreg free
 34850  0023E6                     l12918:
 34851                           
 34852                           ;fat16.c: 756: cluster = next_cluster;
 34853  0023E6  C08B  F08D         	movff	fat_resize_file@next_cluster,fat_resize_file@cluster
 34854  0023EA  C08C  F08E         	movff	fat_resize_file@next_cluster+1,fat_resize_file@cluster+1
 34855  0023EE  0100               	movlb	0	; () banked
 34856  0023F0  4B67               	infsnz	fat_resize_file@cntr& (0+255),f,b
 34857  0023F2  2B68               	incf	(fat_resize_file@cntr+1)& (0+255),f,b
 34858  0023F4                     l2057:
 34859                           
 34860                           ; BSR set to: 0
 34861                           
 34862                           ; BSR set to: 0
 34863  0023F4  5167               	movf	fat_resize_file@cntr& (0+255),w,b
 34864  0023F6  5D64               	subwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 34865  0023F8  5168               	movf	(fat_resize_file@cntr+1)& (0+255),w,b
 34866  0023FA  5965               	subwfb	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 34867  0023FC  B0D8               	btfsc	status,0,c
 34868  0023FE  D7C7               	goto	l2058
 34869  002400                     u9860:
 34870                           
 34871                           ; BSR set to: 0
 34872                           ;fat16.c: 757: };fat16.c: 758: };fat16.c: 759: };fat16.c: 763: root.fileSize = new_file_
      +                          size;
 34873                           
 34874                           ; BSR set to: 0
 34875                           
 34876                           ; BSR set to: 0
 34877  002400  C03F  F087         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 34878  002404  C040  F088         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 34879  002408  C041  F089         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 34880  00240C  C042  F08A         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 34881                           
 34882                           ; BSR set to: 0
 34883                           ;fat16.c: 764: _write_root(file_number, &root);
 34884  002410  0E6B               	movlw	low fat_resize_file@root
 34885  002412  6E29               	movwf	__write_root@data,c
 34886  002414  0E00               	movlw	high fat_resize_file@root
 34887  002416  6E2A               	movwf	__write_root@data+1,c
 34888  002418  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 34889  00241A  ECCB  F03C         	call	__write_root
 34890  00241E  0012               	return	
 34891  002420                     __end_of_fat_resize_file:
 34892                           	opt stack 0
 34893                           tosu	equ	0xFFF
 34894                           tosh	equ	0xFFE
 34895                           tosl	equ	0xFFD
 34896                           pclath	equ	0xFFA
 34897                           tblptru	equ	0xFF8
 34898                           tblptrh	equ	0xFF7
 34899                           tblptrl	equ	0xFF6
 34900                           tablat	equ	0xFF5
 34901                           prodh	equ	0xFF4
 34902                           prodl	equ	0xFF3
 34903                           intcon	equ	0xFF2
 34904                           intcon2	equ	0xFF1
 34905                           intcon3	equ	0xFF0
 34906                           indf0	equ	0xFEF
 34907                           postinc0	equ	0xFEE
 34908                           fsr0h	equ	0xFEA
 34909                           fsr0l	equ	0xFE9
 34910                           wreg	equ	0xFE8
 34911                           indf1	equ	0xFE7
 34912                           postdec1	equ	0xFE5
 34913                           plusw1	equ	0xFE3
 34914                           fsr1h	equ	0xFE2
 34915                           fsr1l	equ	0xFE1
 34916                           indf2	equ	0xFDF
 34917                           postinc2	equ	0xFDE
 34918                           postdec2	equ	0xFDD
 34919                           plusw2	equ	0xFDB
 34920                           fsr2h	equ	0xFDA
 34921                           fsr2l	equ	0xFD9
 34922                           status	equ	0xFD8
 34923                           
 34924 ;; *************** function __parse_file_rename *****************
 34925 ;; Defined at:
 34926 ;;		line 574 in file "api.c"
 34927 ;; Parameters:    Size  Location     Type
 34928 ;;  data            2   66[COMRAM] PTR unsigned char 
 34929 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34930 ;; Auto vars:     Size  Location     Type
 34931 ;;		None
 34932 ;; Return value:  Size  Location     Type
 34933 ;;                  1    wreg      unsigned char 
 34934 ;; Registers used:
 34935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34936 ;; Tracked objects:
 34937 ;;		On entry : 0/0
 34938 ;;		On exit  : 0/0
 34939 ;;		Unchanged: 0/0
 34940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34944 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34945 ;;Total ram usage:        3 bytes
 34946 ;; Hardware stack levels used:    1
 34947 ;; Hardware stack levels required when called:    8
 34948 ;; This function calls:
 34949 ;;		_fat_rename_file
 34950 ;; This function is called by:
 34951 ;;		__parse_command_long
 34952 ;; This function uses a non-reentrant model
 34953 ;;
 34954                           
 34955                           	psect	text173
 34956  007440                     __ptext173:
 34957                           	opt stack 0
 34958  007440                     __parse_file_rename:
 34959                           	opt stack 20
 34960                           
 34961                           ;api.c: 577: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 34962                           
 34963                           ;incstack = 0
 34964  007440  C043  FFD9         	movff	__parse_file_rename@data,fsr2l
 34965  007444  C044  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 34966  007448  0E53               	movlw	83
 34967  00744A  18DE               	xorwf	postinc2,w,c
 34968  00744C  A4D8               	btfss	status,2,c
 34969  00744E  D014               	goto	u10510
 34970  007450  EE20 F00D          	lfsr	2,13
 34971  007454  5043               	movf	__parse_file_rename@data,w,c
 34972  007456  26D9               	addwf	fsr2l,f,c
 34973  007458  5044               	movf	__parse_file_rename@data+1,w,c
 34974  00745A  22DA               	addwfc	fsr2h,f,c
 34975  00745C  0E7E               	movlw	126
 34976  00745E  18DE               	xorwf	postinc2,w,c
 34977  007460  A4D8               	btfss	status,2,c
 34978  007462  D00A               	goto	u10510
 34979  007464  EE20 F00E          	lfsr	2,14
 34980  007468  5043               	movf	__parse_file_rename@data,w,c
 34981  00746A  26D9               	addwf	fsr2l,f,c
 34982  00746C  5044               	movf	__parse_file_rename@data+1,w,c
 34983  00746E  22DA               	addwfc	fsr2h,f,c
 34984  007470  0E18               	movlw	24
 34985  007472  18DE               	xorwf	postinc2,w,c
 34986  007474  B4D8               	btfsc	status,2,c
 34987  007476  D002               	goto	l2740
 34988  007478                     u10510:
 34989                           
 34990                           ;api.c: 578: {;api.c: 579: return 15;
 34991  007478  0E0F               	movlw	15
 34992  00747A  0012               	return	
 34993  00747C                     l2740:
 34994                           
 34995                           ;api.c: 580: };api.c: 583: fat_rename_file(data[1], &data[2], &data[10]);
 34996  00747C  0E02               	movlw	2
 34997  00747E  2443               	addwf	__parse_file_rename@data,w,c
 34998  007480  6E3F               	movwf	fat_rename_file@name,c
 34999  007482  0E00               	movlw	0
 35000  007484  2044               	addwfc	__parse_file_rename@data+1,w,c
 35001  007486  6E40               	movwf	fat_rename_file@name+1,c
 35002  007488  0E0A               	movlw	10
 35003  00748A  2443               	addwf	__parse_file_rename@data,w,c
 35004  00748C  6E41               	movwf	fat_rename_file@extension,c
 35005  00748E  0E00               	movlw	0
 35006  007490  2044               	addwfc	__parse_file_rename@data+1,w,c
 35007  007492  6E42               	movwf	fat_rename_file@extension+1,c
 35008  007494  EE20 F001          	lfsr	2,1
 35009  007498  5043               	movf	__parse_file_rename@data,w,c
 35010  00749A  26D9               	addwf	fsr2l,f,c
 35011  00749C  5044               	movf	__parse_file_rename@data+1,w,c
 35012  00749E  22DA               	addwfc	fsr2h,f,c
 35013  0074A0  50DF               	movf	indf2,w,c
 35014  0074A2  EC0C  F034         	call	_fat_rename_file
 35015                           
 35016                           ;api.c: 584: return 15;
 35017  0074A6  0E0F               	movlw	15
 35018  0074A8  0012               	return	
 35019  0074AA                     __end_of__parse_file_rename:
 35020                           	opt stack 0
 35021                           tosu	equ	0xFFF
 35022                           tosh	equ	0xFFE
 35023                           tosl	equ	0xFFD
 35024                           pclath	equ	0xFFA
 35025                           tblptru	equ	0xFF8
 35026                           tblptrh	equ	0xFF7
 35027                           tblptrl	equ	0xFF6
 35028                           tablat	equ	0xFF5
 35029                           prodh	equ	0xFF4
 35030                           prodl	equ	0xFF3
 35031                           intcon	equ	0xFF2
 35032                           intcon2	equ	0xFF1
 35033                           intcon3	equ	0xFF0
 35034                           indf0	equ	0xFEF
 35035                           postinc0	equ	0xFEE
 35036                           fsr0h	equ	0xFEA
 35037                           fsr0l	equ	0xFE9
 35038                           wreg	equ	0xFE8
 35039                           indf1	equ	0xFE7
 35040                           postdec1	equ	0xFE5
 35041                           plusw1	equ	0xFE3
 35042                           fsr1h	equ	0xFE2
 35043                           fsr1l	equ	0xFE1
 35044                           indf2	equ	0xFDF
 35045                           postinc2	equ	0xFDE
 35046                           postdec2	equ	0xFDD
 35047                           plusw2	equ	0xFDB
 35048                           fsr2h	equ	0xFDA
 35049                           fsr2l	equ	0xFD9
 35050                           status	equ	0xFD8
 35051                           
 35052 ;; *************** function _fat_rename_file *****************
 35053 ;; Defined at:
 35054 ;;		line 538 in file "fat16.c"
 35055 ;; Parameters:    Size  Location     Type
 35056 ;;  file_number     1    wreg     unsigned char 
 35057 ;;  name            2   62[COMRAM] PTR unsigned char 
 35058 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35059 ;;  extension       2   64[COMRAM] PTR unsigned char 
 35060 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35061 ;; Auto vars:     Size  Location     Type
 35062 ;;  file_number     1    0[BANK0 ] unsigned char 
 35063 ;;  root           32    1[BANK0 ] struct .
 35064 ;;  cntr            1   33[BANK0 ] unsigned char 
 35065 ;; Return value:  Size  Location     Type
 35066 ;;                  1    wreg      void 
 35067 ;; Registers used:
 35068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35069 ;; Tracked objects:
 35070 ;;		On entry : 0/0
 35071 ;;		On exit  : 0/0
 35072 ;;		Unchanged: 0/0
 35073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35075 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35077 ;;      Totals:         4      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35078 ;;Total ram usage:       38 bytes
 35079 ;; Hardware stack levels used:    1
 35080 ;; Hardware stack levels required when called:    7
 35081 ;; This function calls:
 35082 ;;		__write_root
 35083 ;;		_fat_get_file_information
 35084 ;; This function is called by:
 35085 ;;		__parse_file_rename
 35086 ;; This function uses a non-reentrant model
 35087 ;;
 35088                           
 35089                           	psect	text174
 35090  006818                     __ptext174:
 35091                           	opt stack 0
 35092  006818                     _fat_rename_file:
 35093                           	opt stack 20
 35094                           
 35095                           ;incstack = 0
 35096                           ;fat_rename_file@file_number stored from wreg
 35097  006818  0100               	movlb	0	; () banked
 35098  00681A  6F60               	movwf	fat_rename_file@file_number& (0+255),b
 35099                           
 35100                           ;fat16.c: 540: rootEntry_t root;;fat16.c: 541: uint8_t cntr;;fat16.c: 544: fat_get_file_
      +                          information(file_number, &root);
 35101  00681C  0E61               	movlw	low fat_rename_file@root
 35102  00681E  6E37               	movwf	fat_get_file_information@data,c
 35103  006820  0E00               	movlw	high fat_rename_file@root
 35104  006822  6E38               	movwf	fat_get_file_information@data+1,c
 35105  006824  0100               	movlb	0	; () banked
 35106  006826  5160               	movf	fat_rename_file@file_number& (0+255),w,b
 35107  006828  ECD1  F038         	call	_fat_get_file_information
 35108                           
 35109                           ;fat16.c: 547: for(cntr=0; cntr<8; ++cntr)
 35110  00682C  0E00               	movlw	0
 35111  00682E  0100               	movlb	0	; () banked
 35112  006830  6F81               	movwf	fat_rename_file@cntr& (0+255),b
 35113  006832                     l12778:
 35114                           
 35115                           ; BSR set to: 0
 35116  006832  0E07               	movlw	7
 35117  006834  6581               	cpfsgt	fat_rename_file@cntr& (0+255),b
 35118  006836  D001               	goto	l2017
 35119  006838  D014               	goto	u9630
 35120  00683A                     l2017:
 35121                           
 35122                           ; BSR set to: 0
 35123                           ;fat16.c: 548: {;fat16.c: 549: root.fileName[cntr] = name[cntr];
 35124                           
 35125                           ; BSR set to: 0
 35126  00683A  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 35127  00683C  0D01               	mullw	1
 35128  00683E  50F3               	movf	prodl,w,c
 35129  006840  243F               	addwf	fat_rename_file@name,w,c
 35130  006842  6ED9               	movwf	fsr2l,c
 35131  006844  50F4               	movf	prodh,w,c
 35132  006846  2040               	addwfc	fat_rename_file@name+1,w,c
 35133  006848  6EDA               	movwf	fsr2h,c
 35134  00684A  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 35135  00684C  0D01               	mullw	1
 35136  00684E  0E61               	movlw	low fat_rename_file@root
 35137  006850  24F3               	addwf	prodl,w,c
 35138  006852  6EE1               	movwf	fsr1l,c
 35139  006854  0E00               	movlw	high fat_rename_file@root
 35140  006856  20F4               	addwfc	prodh,w,c
 35141  006858  6EE2               	movwf	fsr1h,c
 35142  00685A  CFDF FFE7          	movff	indf2,indf1
 35143                           
 35144                           ; BSR set to: 0
 35145  00685E  2B81               	incf	fat_rename_file@cntr& (0+255),f,b
 35146  006860  D7E8               	goto	l12778
 35147  006862                     u9630:
 35148                           
 35149                           ; BSR set to: 0
 35150                           ;fat16.c: 550: };fat16.c: 553: for(cntr=0; cntr<3; ++cntr)
 35151                           
 35152                           ; BSR set to: 0
 35153  006862  0E00               	movlw	0
 35154  006864  6F81               	movwf	fat_rename_file@cntr& (0+255),b
 35155  006866                     l12790:
 35156                           
 35157                           ; BSR set to: 0
 35158  006866  0E02               	movlw	2
 35159  006868  6581               	cpfsgt	fat_rename_file@cntr& (0+255),b
 35160  00686A  D001               	goto	l2019
 35161  00686C  D018               	goto	u9650
 35162  00686E                     l2019:
 35163                           
 35164                           ; BSR set to: 0
 35165                           ;fat16.c: 554: {;fat16.c: 555: root.fileExtension[cntr] = extension[cntr];
 35166                           
 35167                           ; BSR set to: 0
 35168  00686E  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 35169  006870  0D01               	mullw	1
 35170  006872  50F3               	movf	prodl,w,c
 35171  006874  2441               	addwf	fat_rename_file@extension,w,c
 35172  006876  6ED9               	movwf	fsr2l,c
 35173  006878  50F4               	movf	prodh,w,c
 35174  00687A  2042               	addwfc	fat_rename_file@extension+1,w,c
 35175  00687C  6EDA               	movwf	fsr2h,c
 35176  00687E  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 35177  006880  0D01               	mullw	1
 35178  006882  0E08               	movlw	8
 35179  006884  26F3               	addwf	prodl,f,c
 35180  006886  0E00               	movlw	0
 35181  006888  22F4               	addwfc	prodh,f,c
 35182  00688A  0E61               	movlw	low fat_rename_file@root
 35183  00688C  24F3               	addwf	prodl,w,c
 35184  00688E  6EE1               	movwf	fsr1l,c
 35185  006890  0E00               	movlw	high fat_rename_file@root
 35186  006892  20F4               	addwfc	prodh,w,c
 35187  006894  6EE2               	movwf	fsr1h,c
 35188  006896  CFDF FFE7          	movff	indf2,indf1
 35189                           
 35190                           ; BSR set to: 0
 35191  00689A  2B81               	incf	fat_rename_file@cntr& (0+255),f,b
 35192  00689C  D7E4               	goto	l12790
 35193  00689E                     u9650:
 35194                           
 35195                           ; BSR set to: 0
 35196                           ;fat16.c: 556: };fat16.c: 558: _write_root(file_number, &root);
 35197                           
 35198                           ; BSR set to: 0
 35199  00689E  0E61               	movlw	low fat_rename_file@root
 35200  0068A0  6E29               	movwf	__write_root@data,c
 35201  0068A2  0E00               	movlw	high fat_rename_file@root
 35202  0068A4  6E2A               	movwf	__write_root@data+1,c
 35203  0068A6  5160               	movf	fat_rename_file@file_number& (0+255),w,b
 35204  0068A8  ECCB  F03C         	call	__write_root
 35205  0068AC  0012               	return		;funcret
 35206  0068AE                     __end_of_fat_rename_file:
 35207                           	opt stack 0
 35208                           tosu	equ	0xFFF
 35209                           tosh	equ	0xFFE
 35210                           tosl	equ	0xFFD
 35211                           pclath	equ	0xFFA
 35212                           tblptru	equ	0xFF8
 35213                           tblptrh	equ	0xFF7
 35214                           tblptrl	equ	0xFF6
 35215                           tablat	equ	0xFF5
 35216                           prodh	equ	0xFF4
 35217                           prodl	equ	0xFF3
 35218                           intcon	equ	0xFF2
 35219                           intcon2	equ	0xFF1
 35220                           intcon3	equ	0xFF0
 35221                           indf0	equ	0xFEF
 35222                           postinc0	equ	0xFEE
 35223                           fsr0h	equ	0xFEA
 35224                           fsr0l	equ	0xFE9
 35225                           wreg	equ	0xFE8
 35226                           indf1	equ	0xFE7
 35227                           postdec1	equ	0xFE5
 35228                           plusw1	equ	0xFE3
 35229                           fsr1h	equ	0xFE2
 35230                           fsr1l	equ	0xFE1
 35231                           indf2	equ	0xFDF
 35232                           postinc2	equ	0xFDE
 35233                           postdec2	equ	0xFDD
 35234                           plusw2	equ	0xFDB
 35235                           fsr2h	equ	0xFDA
 35236                           fsr2l	equ	0xFD9
 35237                           status	equ	0xFD8
 35238                           
 35239 ;; *************** function __parse_file_modify *****************
 35240 ;; Defined at:
 35241 ;;		line 601 in file "api.c"
 35242 ;; Parameters:    Size  Location     Type
 35243 ;;  data            2   82[COMRAM] PTR unsigned char 
 35244 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35245 ;; Auto vars:     Size  Location     Type
 35246 ;;  start_byte      4   87[COMRAM] unsigned long 
 35247 ;;  number_of_by    2   85[COMRAM] unsigned int 
 35248 ;; Return value:  Size  Location     Type
 35249 ;;                  1    wreg      unsigned char 
 35250 ;; Registers used:
 35251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35252 ;; Tracked objects:
 35253 ;;		On entry : 0/0
 35254 ;;		On exit  : 0/0
 35255 ;;		Unchanged: 0/0
 35256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35258 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35260 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35261 ;;Total ram usage:        9 bytes
 35262 ;; Hardware stack levels used:    1
 35263 ;; Hardware stack levels required when called:    8
 35264 ;; This function calls:
 35265 ;;		_fat_modify_file
 35266 ;; This function is called by:
 35267 ;;		__parse_command_long
 35268 ;; This function uses a non-reentrant model
 35269 ;;
 35270                           
 35271                           	psect	text175
 35272  0047A4                     __ptext175:
 35273                           	opt stack 0
 35274  0047A4                     __parse_file_modify:
 35275                           	opt stack 20
 35276                           
 35277                           ;api.c: 603: uint16_t number_of_bytes;;api.c: 604: uint32_t start_byte;;api.c: 607: if((
      +                          data[0]!=COMMAND_FILE_MODIFY) || (data[7]!=0x0F) || (data[8]!=0x9B))
 35278                           
 35279                           ;incstack = 0
 35280  0047A4  C053  FFD9         	movff	__parse_file_modify@data,fsr2l
 35281  0047A8  C054  FFDA         	movff	__parse_file_modify@data+1,fsr2h
 35282  0047AC  0E55               	movlw	85
 35283  0047AE  18DE               	xorwf	postinc2,w,c
 35284  0047B0  A4D8               	btfss	status,2,c
 35285  0047B2  D014               	goto	u10570
 35286  0047B4  EE20 F007          	lfsr	2,7
 35287  0047B8  5053               	movf	__parse_file_modify@data,w,c
 35288  0047BA  26D9               	addwf	fsr2l,f,c
 35289  0047BC  5054               	movf	__parse_file_modify@data+1,w,c
 35290  0047BE  22DA               	addwfc	fsr2h,f,c
 35291  0047C0  0E0F               	movlw	15
 35292  0047C2  18DE               	xorwf	postinc2,w,c
 35293  0047C4  A4D8               	btfss	status,2,c
 35294  0047C6  D00A               	goto	u10570
 35295  0047C8  EE20 F008          	lfsr	2,8
 35296  0047CC  5053               	movf	__parse_file_modify@data,w,c
 35297  0047CE  26D9               	addwf	fsr2l,f,c
 35298  0047D0  5054               	movf	__parse_file_modify@data+1,w,c
 35299  0047D2  22DA               	addwfc	fsr2h,f,c
 35300  0047D4  0E9B               	movlw	155
 35301  0047D6  18DE               	xorwf	postinc2,w,c
 35302  0047D8  B4D8               	btfsc	status,2,c
 35303  0047DA  D002               	goto	l2752
 35304  0047DC                     u10570:
 35305                           
 35306                           ;api.c: 608: {;api.c: 610: return 65;
 35307  0047DC  0E41               	movlw	65
 35308  0047DE  0012               	return	
 35309  0047E0                     l2752:
 35310                           
 35311                           ;api.c: 611: };api.c: 614: number_of_bytes = data[6];
 35312  0047E0  EE20 F006          	lfsr	2,6
 35313  0047E4  5053               	movf	__parse_file_modify@data,w,c
 35314  0047E6  26D9               	addwf	fsr2l,f,c
 35315  0047E8  5054               	movf	__parse_file_modify@data+1,w,c
 35316  0047EA  22DA               	addwfc	fsr2h,f,c
 35317  0047EC  50DF               	movf	indf2,w,c
 35318  0047EE  6E55               	movwf	??__parse_file_modify& (0+255),c
 35319  0047F0  5055               	movf	??__parse_file_modify,w,c
 35320  0047F2  6E56               	movwf	__parse_file_modify@number_of_bytes,c
 35321  0047F4  6A57               	clrf	__parse_file_modify@number_of_bytes+1,c
 35322                           
 35323                           ;api.c: 617: start_byte = data[2];
 35324  0047F6  EE20 F002          	lfsr	2,2
 35325  0047FA  5053               	movf	__parse_file_modify@data,w,c
 35326  0047FC  26D9               	addwf	fsr2l,f,c
 35327  0047FE  5054               	movf	__parse_file_modify@data+1,w,c
 35328  004800  22DA               	addwfc	fsr2h,f,c
 35329  004802  50DF               	movf	indf2,w,c
 35330  004804  6E55               	movwf	??__parse_file_modify& (0+255),c
 35331  004806  5055               	movf	??__parse_file_modify,w,c
 35332  004808  6E58               	movwf	__parse_file_modify@start_byte,c
 35333  00480A  6A59               	clrf	__parse_file_modify@start_byte+1,c
 35334  00480C  6A5A               	clrf	__parse_file_modify@start_byte+2,c
 35335  00480E  6A5B               	clrf	__parse_file_modify@start_byte+3,c
 35336                           
 35337                           ;api.c: 618: start_byte <<= 8;
 35338  004810  C05A  F05B         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 35339  004814  C059  F05A         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 35340  004818  C058  F059         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 35341  00481C  6A58               	clrf	__parse_file_modify@start_byte,c
 35342                           
 35343                           ;api.c: 619: start_byte |= data[3];
 35344  00481E  EE20 F003          	lfsr	2,3
 35345  004822  5053               	movf	__parse_file_modify@data,w,c
 35346  004824  26D9               	addwf	fsr2l,f,c
 35347  004826  5054               	movf	__parse_file_modify@data+1,w,c
 35348  004828  22DA               	addwfc	fsr2h,f,c
 35349  00482A  50DF               	movf	indf2,w,c
 35350  00482C  6E55               	movwf	??__parse_file_modify& (0+255),c
 35351  00482E  5055               	movf	??__parse_file_modify,w,c
 35352  004830  1258               	iorwf	__parse_file_modify@start_byte,f,c
 35353                           
 35354                           ;api.c: 620: start_byte <<= 8;
 35355  004832  C05A  F05B         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 35356  004836  C059  F05A         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 35357  00483A  C058  F059         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 35358  00483E  6A58               	clrf	__parse_file_modify@start_byte,c
 35359                           
 35360                           ;api.c: 621: start_byte |= data[4];
 35361  004840  EE20 F004          	lfsr	2,4
 35362  004844  5053               	movf	__parse_file_modify@data,w,c
 35363  004846  26D9               	addwf	fsr2l,f,c
 35364  004848  5054               	movf	__parse_file_modify@data+1,w,c
 35365  00484A  22DA               	addwfc	fsr2h,f,c
 35366  00484C  50DF               	movf	indf2,w,c
 35367  00484E  6E55               	movwf	??__parse_file_modify& (0+255),c
 35368  004850  5055               	movf	??__parse_file_modify,w,c
 35369  004852  1258               	iorwf	__parse_file_modify@start_byte,f,c
 35370                           
 35371                           ;api.c: 622: start_byte <<= 8;
 35372  004854  C05A  F05B         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 35373  004858  C059  F05A         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 35374  00485C  C058  F059         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 35375  004860  6A58               	clrf	__parse_file_modify@start_byte,c
 35376                           
 35377                           ;api.c: 623: start_byte |= data[5];
 35378  004862  EE20 F005          	lfsr	2,5
 35379  004866  5053               	movf	__parse_file_modify@data,w,c
 35380  004868  26D9               	addwf	fsr2l,f,c
 35381  00486A  5054               	movf	__parse_file_modify@data+1,w,c
 35382  00486C  22DA               	addwfc	fsr2h,f,c
 35383  00486E  50DF               	movf	indf2,w,c
 35384  004870  6E55               	movwf	??__parse_file_modify& (0+255),c
 35385  004872  5055               	movf	??__parse_file_modify,w,c
 35386  004874  1258               	iorwf	__parse_file_modify@start_byte,f,c
 35387                           
 35388                           ;api.c: 625: fat_modify_file(data[1], start_byte, number_of_bytes, &data[9]);
 35389  004876  C058  F03F         	movff	__parse_file_modify@start_byte,fat_modify_file@start_byte
 35390  00487A  C059  F040         	movff	__parse_file_modify@start_byte+1,fat_modify_file@start_byte+1
 35391  00487E  C05A  F041         	movff	__parse_file_modify@start_byte+2,fat_modify_file@start_byte+2
 35392  004882  C05B  F042         	movff	__parse_file_modify@start_byte+3,fat_modify_file@start_byte+3
 35393  004886  C056  F043         	movff	__parse_file_modify@number_of_bytes,fat_modify_file@length
 35394  00488A  C057  F044         	movff	__parse_file_modify@number_of_bytes+1,fat_modify_file@length+1
 35395  00488E  0E09               	movlw	9
 35396  004890  2453               	addwf	__parse_file_modify@data,w,c
 35397  004892  6E45               	movwf	fat_modify_file@data,c
 35398  004894  0E00               	movlw	0
 35399  004896  2054               	addwfc	__parse_file_modify@data+1,w,c
 35400  004898  6E46               	movwf	fat_modify_file@data+1,c
 35401  00489A  EE20 F001          	lfsr	2,1
 35402  00489E  5053               	movf	__parse_file_modify@data,w,c
 35403  0048A0  26D9               	addwf	fsr2l,f,c
 35404  0048A2  5054               	movf	__parse_file_modify@data+1,w,c
 35405  0048A4  22DA               	addwfc	fsr2h,f,c
 35406  0048A6  50DF               	movf	indf2,w,c
 35407  0048A8  EC98  F00E         	call	_fat_modify_file
 35408                           
 35409                           ;api.c: 626: return number_of_bytes + 9;
 35410  0048AC  5056               	movf	__parse_file_modify@number_of_bytes,w,c
 35411  0048AE  0F09               	addlw	9
 35412  0048B0  0012               	return	
 35413  0048B2                     __end_of__parse_file_modify:
 35414                           	opt stack 0
 35415                           tosu	equ	0xFFF
 35416                           tosh	equ	0xFFE
 35417                           tosl	equ	0xFFD
 35418                           pclath	equ	0xFFA
 35419                           tblptru	equ	0xFF8
 35420                           tblptrh	equ	0xFF7
 35421                           tblptrl	equ	0xFF6
 35422                           tablat	equ	0xFF5
 35423                           prodh	equ	0xFF4
 35424                           prodl	equ	0xFF3
 35425                           intcon	equ	0xFF2
 35426                           intcon2	equ	0xFF1
 35427                           intcon3	equ	0xFF0
 35428                           indf0	equ	0xFEF
 35429                           postinc0	equ	0xFEE
 35430                           fsr0h	equ	0xFEA
 35431                           fsr0l	equ	0xFE9
 35432                           wreg	equ	0xFE8
 35433                           indf1	equ	0xFE7
 35434                           postdec1	equ	0xFE5
 35435                           plusw1	equ	0xFE3
 35436                           fsr1h	equ	0xFE2
 35437                           fsr1l	equ	0xFE1
 35438                           indf2	equ	0xFDF
 35439                           postinc2	equ	0xFDE
 35440                           postdec2	equ	0xFDD
 35441                           plusw2	equ	0xFDB
 35442                           fsr2h	equ	0xFDA
 35443                           fsr2l	equ	0xFD9
 35444                           status	equ	0xFD8
 35445                           
 35446 ;; *************** function _fat_modify_file *****************
 35447 ;; Defined at:
 35448 ;;		line 770 in file "fat16.c"
 35449 ;; Parameters:    Size  Location     Type
 35450 ;;  file_number     1    wreg     unsigned char 
 35451 ;;  start_byte      4   62[COMRAM] unsigned long 
 35452 ;;  length          2   66[COMRAM] unsigned int 
 35453 ;;  data            2   68[COMRAM] PTR unsigned char 
 35454 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35455 ;; Auto vars:     Size  Location     Type
 35456 ;;  file_number     1    2[BANK0 ] unsigned char 
 35457 ;;  root           32    9[BANK0 ] struct .
 35458 ;;  position        4   41[BANK0 ] unsigned long 
 35459 ;;  number_of_by    2    7[BANK0 ] unsigned int 
 35460 ;;  offset          2    5[BANK0 ] unsigned int 
 35461 ;;  cluster         2    3[BANK0 ] unsigned int 
 35462 ;;  sector          2    0[BANK0 ] unsigned int 
 35463 ;; Return value:  Size  Location     Type
 35464 ;;                  1    wreg      void 
 35465 ;; Registers used:
 35466 ;;		wreg, status,2, status,0, cstack
 35467 ;; Tracked objects:
 35468 ;;		On entry : 0/0
 35469 ;;		On exit  : 0/0
 35470 ;;		Unchanged: 0/0
 35471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35472 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35473 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35474 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35475 ;;      Totals:        20      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35476 ;;Total ram usage:       65 bytes
 35477 ;; Hardware stack levels used:    1
 35478 ;; Hardware stack levels required when called:    7
 35479 ;; This function calls:
 35480 ;;		__read_fat
 35481 ;;		__sector_from_cluster
 35482 ;;		_fat_get_file_information
 35483 ;;		_flash_partial_write
 35484 ;; This function is called by:
 35485 ;;		__parse_file_modify
 35486 ;; This function uses a non-reentrant model
 35487 ;;
 35488                           
 35489                           	psect	text176
 35490  001D30                     __ptext176:
 35491                           	opt stack 0
 35492  001D30                     _fat_modify_file:
 35493                           	opt stack 20
 35494                           
 35495                           ;incstack = 0
 35496                           ;fat_modify_file@file_number stored from wreg
 35497  001D30  0100               	movlb	0	; () banked
 35498  001D32  6F62               	movwf	fat_modify_file@file_number& (0+255),b
 35499                           
 35500                           ;fat16.c: 772: rootEntry_t root;;fat16.c: 773: uint16_t cluster;;fat16.c: 774: uint32_t 
      +                          position;;fat16.c: 775: uint16_t offset;;fat16.c: 776: uint16_t sector;;fat16.c: 777: ui
      +                          nt16_t number_of_bytes;;fat16.c: 780: fat_get_file_information(file_number, &root);
 35501  001D34  0E69               	movlw	low fat_modify_file@root
 35502  001D36  6E37               	movwf	fat_get_file_information@data,c
 35503  001D38  0E00               	movlw	high fat_modify_file@root
 35504  001D3A  6E38               	movwf	fat_get_file_information@data+1,c
 35505  001D3C  0100               	movlb	0	; () banked
 35506  001D3E  5162               	movf	fat_modify_file@file_number& (0+255),w,b
 35507  001D40  ECD1  F038         	call	_fat_get_file_information
 35508                           
 35509                           ;fat16.c: 781: cluster = root.firstCluster;
 35510  001D44  C083  F063         	movff	fat_modify_file@root+26,fat_modify_file@cluster
 35511  001D48  C084  F064         	movff	fat_modify_file@root+27,fat_modify_file@cluster+1
 35512                           
 35513                           ;fat16.c: 784: if(start_byte>root.fileSize)
 35514  001D4C  503F               	movf	fat_modify_file@start_byte,w,c
 35515  001D4E  0100               	movlb	0	; () banked
 35516  001D50  5D85               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 35517  001D52  5040               	movf	fat_modify_file@start_byte+1,w,c
 35518  001D54  5986               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 35519  001D56  5041               	movf	fat_modify_file@start_byte+2,w,c
 35520  001D58  5987               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 35521  001D5A  5042               	movf	fat_modify_file@start_byte+3,w,c
 35522  001D5C  5988               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 35523  001D5E  A0D8               	btfss	status,0,c
 35524  001D60  0012               	return	
 35525                           
 35526                           ; BSR set to: 0
 35527                           ;fat16.c: 788: };fat16.c: 790: if((start_byte+length) > root.fileSize)
 35528                           
 35529                           ; BSR set to: 0
 35530                           
 35531                           ; BSR set to: 0
 35532                           ;fat16.c: 785: {;fat16.c: 787: return;
 35533  001D62  5043               	movf	fat_modify_file@length,w,c
 35534  001D64  243F               	addwf	fat_modify_file@start_byte,w,c
 35535  001D66  6E47               	movwf	??_fat_modify_file& (0+255),c
 35536  001D68  5044               	movf	fat_modify_file@length+1,w,c
 35537  001D6A  2040               	addwfc	fat_modify_file@start_byte+1,w,c
 35538  001D6C  6E48               	movwf	(??_fat_modify_file+1)& (0+255),c
 35539  001D6E  0E00               	movlw	0
 35540  001D70  2041               	addwfc	fat_modify_file@start_byte+2,w,c
 35541  001D72  6E49               	movwf	(??_fat_modify_file+2)& (0+255),c
 35542  001D74  0E00               	movlw	0
 35543  001D76  2042               	addwfc	fat_modify_file@start_byte+3,w,c
 35544  001D78  6E4A               	movwf	(??_fat_modify_file+3)& (0+255),c
 35545  001D7A  5047               	movf	??_fat_modify_file,w,c
 35546  001D7C  5D85               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 35547  001D7E  5048               	movf	??_fat_modify_file+1,w,c
 35548  001D80  5986               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 35549  001D82  5049               	movf	??_fat_modify_file+2,w,c
 35550  001D84  5987               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 35551  001D86  504A               	movf	??_fat_modify_file+3,w,c
 35552  001D88  5988               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 35553  001D8A  B0D8               	btfsc	status,0,c
 35554  001D8C  D00E               	goto	l2068
 35555                           
 35556                           ; BSR set to: 0
 35557                           ;fat16.c: 791: {;fat16.c: 793: length = root.fileSize - start_byte;
 35558  001D8E  C03F  F047         	movff	fat_modify_file@start_byte,??_fat_modify_file
 35559  001D92  C040  F048         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 35560  001D96  1E47               	comf	??_fat_modify_file,f,c
 35561  001D98  1E48               	comf	??_fat_modify_file+1,f,c
 35562  001D9A  4A47               	infsnz	??_fat_modify_file,f,c
 35563  001D9C  2A48               	incf	??_fat_modify_file+1,f,c
 35564  001D9E  5185               	movf	(fat_modify_file@root+28)& (0+255),w,b
 35565  001DA0  2447               	addwf	??_fat_modify_file,w,c
 35566  001DA2  6E43               	movwf	fat_modify_file@length,c
 35567  001DA4  5186               	movf	(fat_modify_file@root+29)& (0+255),w,b
 35568  001DA6  2048               	addwfc	??_fat_modify_file+1,w,c
 35569  001DA8  6E44               	movwf	fat_modify_file@length+1,c
 35570  001DAA                     l2068:
 35571                           
 35572                           ; BSR set to: 0
 35573                           ;fat16.c: 794: };fat16.c: 797: position = 0;
 35574                           
 35575                           ; BSR set to: 0
 35576  001DAA  0E00               	movlw	0
 35577  001DAC  6F89               	movwf	fat_modify_file@position& (0+255),b
 35578  001DAE  0E00               	movlw	0
 35579  001DB0  6F8A               	movwf	(fat_modify_file@position+1)& (0+255),b
 35580  001DB2  0E00               	movlw	0
 35581  001DB4  6F8B               	movwf	(fat_modify_file@position+2)& (0+255),b
 35582  001DB6  0E00               	movlw	0
 35583  001DB8  6F8C               	movwf	(fat_modify_file@position+3)& (0+255),b
 35584                           
 35585                           ;fat16.c: 798: while((start_byte-position) >= 512)
 35586  001DBA  D013               	goto	l2069
 35587  001DBC                     l12942:
 35588                           
 35589                           ; BSR set to: 0
 35590                           ;fat16.c: 799: {;fat16.c: 800: cluster = _read_fat(cluster);
 35591  001DBC  C063  F030         	movff	fat_modify_file@cluster,__read_fat@cluster
 35592  001DC0  C064  F031         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 35593  001DC4  EC91  F03F         	call	__read_fat	;wreg free
 35594  001DC8  C030  F063         	movff	?__read_fat,fat_modify_file@cluster
 35595  001DCC  C031  F064         	movff	?__read_fat+1,fat_modify_file@cluster+1
 35596                           
 35597                           ;fat16.c: 801: position += 512;
 35598  001DD0  0E00               	movlw	0
 35599  001DD2  0100               	movlb	0	; () banked
 35600  001DD4  2789               	addwf	fat_modify_file@position& (0+255),f,b
 35601  001DD6  0E02               	movlw	2
 35602  001DD8  238A               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 35603  001DDA  0E00               	movlw	0
 35604  001DDC  238B               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 35605  001DDE  0E00               	movlw	0
 35606  001DE0  238C               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 35607  001DE2                     l2069:
 35608                           
 35609                           ; BSR set to: 0
 35610                           
 35611                           ; BSR set to: 0
 35612  001DE2  C089  F047         	movff	fat_modify_file@position,??_fat_modify_file
 35613  001DE6  C08A  F048         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 35614  001DEA  C08B  F049         	movff	fat_modify_file@position+2,??_fat_modify_file+2
 35615  001DEE  C08C  F04A         	movff	fat_modify_file@position+3,??_fat_modify_file+3
 35616  001DF2  1E47               	comf	??_fat_modify_file,f,c
 35617  001DF4  1E48               	comf	??_fat_modify_file+1,f,c
 35618  001DF6  1E49               	comf	??_fat_modify_file+2,f,c
 35619  001DF8  1E4A               	comf	??_fat_modify_file+3,f,c
 35620  001DFA  2A47               	incf	??_fat_modify_file,f,c
 35621  001DFC  0E00               	movlw	0
 35622  001DFE  2248               	addwfc	??_fat_modify_file+1,f,c
 35623  001E00  2249               	addwfc	??_fat_modify_file+2,f,c
 35624  001E02  224A               	addwfc	??_fat_modify_file+3,f,c
 35625  001E04  503F               	movf	fat_modify_file@start_byte,w,c
 35626  001E06  2447               	addwf	??_fat_modify_file,w,c
 35627  001E08  6E4B               	movwf	(??_fat_modify_file+4)& (0+255),c
 35628  001E0A  5040               	movf	fat_modify_file@start_byte+1,w,c
 35629  001E0C  2048               	addwfc	??_fat_modify_file+1,w,c
 35630  001E0E  6E4C               	movwf	(??_fat_modify_file+5)& (0+255),c
 35631  001E10  5041               	movf	fat_modify_file@start_byte+2,w,c
 35632  001E12  2049               	addwfc	??_fat_modify_file+2,w,c
 35633  001E14  6E4D               	movwf	(??_fat_modify_file+6)& (0+255),c
 35634  001E16  5042               	movf	fat_modify_file@start_byte+3,w,c
 35635  001E18  204A               	addwfc	??_fat_modify_file+3,w,c
 35636  001E1A  6E4E               	movwf	(??_fat_modify_file+7)& (0+255),c
 35637  001E1C  504E               	movf	??_fat_modify_file+7,w,c
 35638  001E1E  104D               	iorwf	??_fat_modify_file+6,w,c
 35639  001E20  E1CD               	bnz	l12942
 35640  001E22  0E02               	movlw	2
 35641  001E24  5C4C               	subwf	??_fat_modify_file+5,w,c
 35642  001E26  B0D8               	btfsc	status,0,c
 35643  001E28  D7C9               	goto	l2070
 35644                           
 35645                           ; BSR set to: 0
 35646                           ;fat16.c: 802: };fat16.c: 805: offset = (uint16_t) (start_byte-position);
 35647                           
 35648                           ; BSR set to: 0
 35649  001E2A  C089  F047         	movff	fat_modify_file@position,??_fat_modify_file
 35650  001E2E  C08A  F048         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 35651  001E32  1E47               	comf	??_fat_modify_file,f,c
 35652  001E34  1E48               	comf	??_fat_modify_file+1,f,c
 35653  001E36  4A47               	infsnz	??_fat_modify_file,f,c
 35654  001E38  2A48               	incf	??_fat_modify_file+1,f,c
 35655  001E3A  503F               	movf	fat_modify_file@start_byte,w,c
 35656  001E3C  2447               	addwf	??_fat_modify_file,w,c
 35657  001E3E  6F65               	movwf	fat_modify_file@offset& (0+255),b
 35658  001E40  5040               	movf	fat_modify_file@start_byte+1,w,c
 35659  001E42  2048               	addwfc	??_fat_modify_file+1,w,c
 35660  001E44  6F66               	movwf	(fat_modify_file@offset+1)& (0+255),b
 35661                           
 35662                           ; BSR set to: 0
 35663                           ;fat16.c: 808: position = 0;
 35664  001E46  0E00               	movlw	0
 35665  001E48  6F89               	movwf	fat_modify_file@position& (0+255),b
 35666  001E4A  0E00               	movlw	0
 35667  001E4C  6F8A               	movwf	(fat_modify_file@position+1)& (0+255),b
 35668  001E4E  0E00               	movlw	0
 35669  001E50  6F8B               	movwf	(fat_modify_file@position+2)& (0+255),b
 35670  001E52  0E00               	movlw	0
 35671  001E54  6F8C               	movwf	(fat_modify_file@position+3)& (0+255),b
 35672                           
 35673                           ;fat16.c: 809: while(position < length)
 35674  001E56  D089               	goto	l2072
 35675  001E58                     
 35676                           ; BSR set to: 0
 35677                           ;fat16.c: 810: {;fat16.c: 812: if(offset==512)
 35678                           
 35679                           ; BSR set to: 0
 35680  001E58  0E02               	movlw	2
 35681  001E5A  1966               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 35682  001E5C  1165               	iorwf	fat_modify_file@offset& (0+255),w,b
 35683  001E5E  A4D8               	btfss	status,2,c
 35684  001E60  D00F               	goto	l2074
 35685                           
 35686                           ; BSR set to: 0
 35687                           ;fat16.c: 813: {;fat16.c: 815: cluster = _read_fat(cluster);
 35688  001E62  C063  F030         	movff	fat_modify_file@cluster,__read_fat@cluster
 35689  001E66  C064  F031         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 35690  001E6A  EC91  F03F         	call	__read_fat	;wreg free
 35691  001E6E  C030  F063         	movff	?__read_fat,fat_modify_file@cluster
 35692  001E72  C031  F064         	movff	?__read_fat+1,fat_modify_file@cluster+1
 35693                           
 35694                           ;fat16.c: 817: offset = 0;
 35695  001E76  0E00               	movlw	0
 35696  001E78  0100               	movlb	0	; () banked
 35697  001E7A  6F66               	movwf	(fat_modify_file@offset+1)& (0+255),b
 35698  001E7C  0E00               	movlw	0
 35699  001E7E  6F65               	movwf	fat_modify_file@offset& (0+255),b
 35700  001E80                     l2074:
 35701                           
 35702                           ; BSR set to: 0
 35703                           ;fat16.c: 818: };fat16.c: 821: sector = _sector_from_cluster(cluster);
 35704                           
 35705                           ; BSR set to: 0
 35706  001E80  C063  F001         	movff	fat_modify_file@cluster,__sector_from_cluster@fat_cluster
 35707  001E84  C064  F002         	movff	fat_modify_file@cluster+1,__sector_from_cluster@fat_cluster+1
 35708  001E88  EC6D  F044         	call	__sector_from_cluster	;wreg free
 35709  001E8C  C001  F060         	movff	?__sector_from_cluster,fat_modify_file@sector
 35710  001E90  C002  F061         	movff	?__sector_from_cluster+1,fat_modify_file@sector+1
 35711                           
 35712                           ;fat16.c: 824: number_of_bytes = 512 - offset;
 35713  001E94  C065  F047         	movff	fat_modify_file@offset,??_fat_modify_file
 35714  001E98  C066  F048         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 35715  001E9C  1E47               	comf	??_fat_modify_file,f,c
 35716  001E9E  1E48               	comf	??_fat_modify_file+1,f,c
 35717  001EA0  4A47               	infsnz	??_fat_modify_file,f,c
 35718  001EA2  2A48               	incf	??_fat_modify_file+1,f,c
 35719  001EA4  0E00               	movlw	0
 35720  001EA6  2447               	addwf	??_fat_modify_file,w,c
 35721  001EA8  0100               	movlb	0	; () banked
 35722  001EAA  6F67               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 35723  001EAC  0E02               	movlw	2
 35724  001EAE  2048               	addwfc	??_fat_modify_file+1,w,c
 35725  001EB0  6F68               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 35726                           
 35727                           ; BSR set to: 0
 35728                           ;fat16.c: 825: if(number_of_bytes > (length-position))
 35729  001EB2  5167               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 35730  001EB4  6E47               	movwf	??_fat_modify_file& (0+255),c
 35731  001EB6  5168               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 35732  001EB8  6E48               	movwf	(??_fat_modify_file+1)& (0+255),c
 35733  001EBA  6A49               	clrf	(??_fat_modify_file+2)& (0+255),c
 35734  001EBC  6A4A               	clrf	(??_fat_modify_file+3)& (0+255),c
 35735  001EBE  C089  F04B         	movff	fat_modify_file@position,??_fat_modify_file+4
 35736  001EC2  C08A  F04C         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 35737  001EC6  C08B  F04D         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 35738  001ECA  C08C  F04E         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 35739  001ECE  1E4B               	comf	??_fat_modify_file+4,f,c
 35740  001ED0  1E4C               	comf	??_fat_modify_file+5,f,c
 35741  001ED2  1E4D               	comf	??_fat_modify_file+6,f,c
 35742  001ED4  1E4E               	comf	??_fat_modify_file+7,f,c
 35743  001ED6  2A4B               	incf	??_fat_modify_file+4,f,c
 35744  001ED8  0E00               	movlw	0
 35745  001EDA  224C               	addwfc	??_fat_modify_file+5,f,c
 35746  001EDC  224D               	addwfc	??_fat_modify_file+6,f,c
 35747  001EDE  224E               	addwfc	??_fat_modify_file+7,f,c
 35748  001EE0  5043               	movf	fat_modify_file@length,w,c
 35749  001EE2  244B               	addwf	??_fat_modify_file+4,w,c
 35750  001EE4  6E4F               	movwf	(??_fat_modify_file+8)& (0+255),c
 35751  001EE6  5044               	movf	fat_modify_file@length+1,w,c
 35752  001EE8  204C               	addwfc	??_fat_modify_file+5,w,c
 35753  001EEA  6E50               	movwf	(??_fat_modify_file+9)& (0+255),c
 35754  001EEC  0E00               	movlw	0
 35755  001EEE  204D               	addwfc	??_fat_modify_file+6,w,c
 35756  001EF0  6E51               	movwf	(??_fat_modify_file+10)& (0+255),c
 35757  001EF2  0E00               	movlw	0
 35758  001EF4  204E               	addwfc	??_fat_modify_file+7,w,c
 35759  001EF6  6E52               	movwf	(??_fat_modify_file+11)& (0+255),c
 35760  001EF8  5047               	movf	??_fat_modify_file,w,c
 35761  001EFA  5C4F               	subwf	??_fat_modify_file+8,w,c
 35762  001EFC  5048               	movf	??_fat_modify_file+1,w,c
 35763  001EFE  5850               	subwfb	??_fat_modify_file+9,w,c
 35764  001F00  5049               	movf	??_fat_modify_file+2,w,c
 35765  001F02  5851               	subwfb	??_fat_modify_file+10,w,c
 35766  001F04  504A               	movf	??_fat_modify_file+3,w,c
 35767  001F06  5852               	subwfb	??_fat_modify_file+11,w,c
 35768  001F08  B0D8               	btfsc	status,0,c
 35769  001F0A  D00E               	goto	l2075
 35770                           
 35771                           ; BSR set to: 0
 35772                           ;fat16.c: 826: {;fat16.c: 827: number_of_bytes = length - position;
 35773  001F0C  C089  F047         	movff	fat_modify_file@position,??_fat_modify_file
 35774  001F10  C08A  F048         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 35775  001F14  1E47               	comf	??_fat_modify_file,f,c
 35776  001F16  1E48               	comf	??_fat_modify_file+1,f,c
 35777  001F18  4A47               	infsnz	??_fat_modify_file,f,c
 35778  001F1A  2A48               	incf	??_fat_modify_file+1,f,c
 35779  001F1C  5043               	movf	fat_modify_file@length,w,c
 35780  001F1E  2447               	addwf	??_fat_modify_file,w,c
 35781  001F20  6F67               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 35782  001F22  5044               	movf	fat_modify_file@length+1,w,c
 35783  001F24  2048               	addwfc	??_fat_modify_file+1,w,c
 35784  001F26  6F68               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 35785  001F28                     l2075:
 35786                           
 35787                           ; BSR set to: 0
 35788                           ;fat16.c: 828: };fat16.c: 831: flash_partial_write(sector, offset, number_of_bytes, &dat
      +                          a[position]);
 35789                           
 35790                           ; BSR set to: 0
 35791  001F28  C060  F020         	movff	fat_modify_file@sector,flash_partial_write@page
 35792  001F2C  C061  F021         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 35793  001F30  C065  F022         	movff	fat_modify_file@offset,flash_partial_write@start
 35794  001F34  C066  F023         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 35795  001F38  C067  F024         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 35796  001F3C  C068  F025         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 35797  001F40  5189               	movf	fat_modify_file@position& (0+255),w,b
 35798  001F42  2445               	addwf	fat_modify_file@data,w,c
 35799  001F44  6E26               	movwf	flash_partial_write@data,c
 35800  001F46  518A               	movf	(fat_modify_file@position+1)& (0+255),w,b
 35801  001F48  2046               	addwfc	fat_modify_file@data+1,w,c
 35802  001F4A  6E27               	movwf	flash_partial_write@data+1,c
 35803  001F4C  EC7C  F039         	call	_flash_partial_write	;wreg free
 35804                           
 35805                           ;fat16.c: 834: position += number_of_bytes;
 35806  001F50  0100               	movlb	0	; () banked
 35807  001F52  5167               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 35808  001F54  2789               	addwf	fat_modify_file@position& (0+255),f,b
 35809  001F56  5168               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 35810  001F58  238A               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 35811  001F5A  0E00               	movlw	0
 35812  001F5C  238B               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 35813  001F5E  0E00               	movlw	0
 35814  001F60  238C               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 35815                           
 35816                           ; BSR set to: 0
 35817                           ;fat16.c: 835: offset += number_of_bytes;
 35818  001F62  5167               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 35819  001F64  2765               	addwf	fat_modify_file@offset& (0+255),f,b
 35820  001F66  5168               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 35821  001F68  2366               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 35822  001F6A                     l2072:
 35823                           
 35824                           ; BSR set to: 0
 35825                           
 35826                           ; BSR set to: 0
 35827  001F6A  5043               	movf	fat_modify_file@length,w,c
 35828  001F6C  6E47               	movwf	??_fat_modify_file& (0+255),c
 35829  001F6E  5044               	movf	fat_modify_file@length+1,w,c
 35830  001F70  6E48               	movwf	(??_fat_modify_file+1)& (0+255),c
 35831  001F72  6A49               	clrf	(??_fat_modify_file+2)& (0+255),c
 35832  001F74  6A4A               	clrf	(??_fat_modify_file+3)& (0+255),c
 35833  001F76  5047               	movf	??_fat_modify_file,w,c
 35834  001F78  5D89               	subwf	fat_modify_file@position& (0+255),w,b
 35835  001F7A  5048               	movf	??_fat_modify_file+1,w,c
 35836  001F7C  598A               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 35837  001F7E  5049               	movf	??_fat_modify_file+2,w,c
 35838  001F80  598B               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 35839  001F82  504A               	movf	??_fat_modify_file+3,w,c
 35840  001F84  598C               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 35841  001F86  B0D8               	btfsc	status,0,c
 35842  001F88  0012               	return	
 35843  001F8A  D766               	goto	l2073
 35844  001F8C                     __end_of_fat_modify_file:
 35845                           	opt stack 0
 35846                           tosu	equ	0xFFF
 35847                           tosh	equ	0xFFE
 35848                           tosl	equ	0xFFD
 35849                           pclath	equ	0xFFA
 35850                           tblptru	equ	0xFF8
 35851                           tblptrh	equ	0xFF7
 35852                           tblptrl	equ	0xFF6
 35853                           tablat	equ	0xFF5
 35854                           prodh	equ	0xFF4
 35855                           prodl	equ	0xFF3
 35856                           intcon	equ	0xFF2
 35857                           intcon2	equ	0xFF1
 35858                           intcon3	equ	0xFF0
 35859                           indf0	equ	0xFEF
 35860                           postinc0	equ	0xFEE
 35861                           fsr0h	equ	0xFEA
 35862                           fsr0l	equ	0xFE9
 35863                           wreg	equ	0xFE8
 35864                           indf1	equ	0xFE7
 35865                           postdec1	equ	0xFE5
 35866                           plusw1	equ	0xFE3
 35867                           fsr1h	equ	0xFE2
 35868                           fsr1l	equ	0xFE1
 35869                           indf2	equ	0xFDF
 35870                           postinc2	equ	0xFDE
 35871                           postdec2	equ	0xFDD
 35872                           plusw2	equ	0xFDB
 35873                           fsr2h	equ	0xFDA
 35874                           fsr2l	equ	0xFD9
 35875                           status	equ	0xFD8
 35876                           
 35877 ;; *************** function __parse_file_delete *****************
 35878 ;; Defined at:
 35879 ;;		line 537 in file "api.c"
 35880 ;; Parameters:    Size  Location     Type
 35881 ;;  data            2   62[COMRAM] PTR unsigned char 
 35882 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35883 ;; Auto vars:     Size  Location     Type
 35884 ;;		None
 35885 ;; Return value:  Size  Location     Type
 35886 ;;                  1    wreg      unsigned char 
 35887 ;; Registers used:
 35888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35889 ;; Tracked objects:
 35890 ;;		On entry : 0/0
 35891 ;;		On exit  : 0/0
 35892 ;;		Unchanged: 0/0
 35893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35897 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35898 ;;Total ram usage:        3 bytes
 35899 ;; Hardware stack levels used:    1
 35900 ;; Hardware stack levels required when called:    7
 35901 ;; This function calls:
 35902 ;;		_fat_delete_file
 35903 ;; This function is called by:
 35904 ;;		__parse_command_long
 35905 ;; This function uses a non-reentrant model
 35906 ;;
 35907                           
 35908                           	psect	text177
 35909  007DA0                     __ptext177:
 35910                           	opt stack 0
 35911  007DA0                     __parse_file_delete:
 35912                           	opt stack 21
 35913                           
 35914                           ;api.c: 540: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 35915                           
 35916                           ; BSR set to: 0
 35917                           ;incstack = 0
 35918  007DA0  C03F  FFD9         	movff	__parse_file_delete@data,fsr2l
 35919  007DA4  C040  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 35920  007DA8  0E51               	movlw	81
 35921  007DAA  18DE               	xorwf	postinc2,w,c
 35922  007DAC  A4D8               	btfss	status,2,c
 35923  007DAE  D014               	goto	u10450
 35924  007DB0  EE20 F002          	lfsr	2,2
 35925  007DB4  503F               	movf	__parse_file_delete@data,w,c
 35926  007DB6  26D9               	addwf	fsr2l,f,c
 35927  007DB8  5040               	movf	__parse_file_delete@data+1,w,c
 35928  007DBA  22DA               	addwfc	fsr2h,f,c
 35929  007DBC  0E66               	movlw	102
 35930  007DBE  18DE               	xorwf	postinc2,w,c
 35931  007DC0  A4D8               	btfss	status,2,c
 35932  007DC2  D00A               	goto	u10450
 35933  007DC4  EE20 F003          	lfsr	2,3
 35934  007DC8  503F               	movf	__parse_file_delete@data,w,c
 35935  007DCA  26D9               	addwf	fsr2l,f,c
 35936  007DCC  5040               	movf	__parse_file_delete@data+1,w,c
 35937  007DCE  22DA               	addwfc	fsr2h,f,c
 35938  007DD0  0EA0               	movlw	160
 35939  007DD2  18DE               	xorwf	postinc2,w,c
 35940  007DD4  B4D8               	btfsc	status,2,c
 35941  007DD6  D002               	goto	l2728
 35942  007DD8                     u10450:
 35943                           
 35944                           ;api.c: 541: {;api.c: 542: return 4;
 35945  007DD8  0E04               	movlw	4
 35946  007DDA  0012               	return	
 35947  007DDC                     l2728:
 35948                           
 35949                           ;api.c: 543: };api.c: 546: fat_delete_file(data[1]);
 35950  007DDC  EE20 F001          	lfsr	2,1
 35951  007DE0  503F               	movf	__parse_file_delete@data,w,c
 35952  007DE2  26D9               	addwf	fsr2l,f,c
 35953  007DE4  5040               	movf	__parse_file_delete@data+1,w,c
 35954  007DE6  22DA               	addwfc	fsr2h,f,c
 35955  007DE8  50DF               	movf	indf2,w,c
 35956  007DEA  EC55  F03A         	call	_fat_delete_file
 35957                           
 35958                           ;api.c: 547: return 4;
 35959  007DEE  0E04               	movlw	4
 35960  007DF0  0012               	return	
 35961  007DF2                     __end_of__parse_file_delete:
 35962                           	opt stack 0
 35963                           tosu	equ	0xFFF
 35964                           tosh	equ	0xFFE
 35965                           tosl	equ	0xFFD
 35966                           pclath	equ	0xFFA
 35967                           tblptru	equ	0xFF8
 35968                           tblptrh	equ	0xFF7
 35969                           tblptrl	equ	0xFF6
 35970                           tablat	equ	0xFF5
 35971                           prodh	equ	0xFF4
 35972                           prodl	equ	0xFF3
 35973                           intcon	equ	0xFF2
 35974                           intcon2	equ	0xFF1
 35975                           intcon3	equ	0xFF0
 35976                           indf0	equ	0xFEF
 35977                           postinc0	equ	0xFEE
 35978                           fsr0h	equ	0xFEA
 35979                           fsr0l	equ	0xFE9
 35980                           wreg	equ	0xFE8
 35981                           indf1	equ	0xFE7
 35982                           postdec1	equ	0xFE5
 35983                           plusw1	equ	0xFE3
 35984                           fsr1h	equ	0xFE2
 35985                           fsr1l	equ	0xFE1
 35986                           indf2	equ	0xFDF
 35987                           postinc2	equ	0xFDE
 35988                           postdec2	equ	0xFDD
 35989                           plusw2	equ	0xFDB
 35990                           fsr2h	equ	0xFDA
 35991                           fsr2l	equ	0xFD9
 35992                           status	equ	0xFD8
 35993                           
 35994 ;; *************** function _fat_delete_file *****************
 35995 ;; Defined at:
 35996 ;;		line 396 in file "fat16.c"
 35997 ;; Parameters:    Size  Location     Type
 35998 ;;  file_number     1    wreg     unsigned char 
 35999 ;; Auto vars:     Size  Location     Type
 36000 ;;  file_number     1   61[COMRAM] unsigned char 
 36001 ;;  first_cluste    2   59[COMRAM] unsigned int 
 36002 ;;  next_cluster    2   57[COMRAM] unsigned int 
 36003 ;; Return value:  Size  Location     Type
 36004 ;;                  1    wreg      void 
 36005 ;; Registers used:
 36006 ;;		wreg, status,2, status,0, cstack
 36007 ;; Tracked objects:
 36008 ;;		On entry : 0/0
 36009 ;;		On exit  : 0/0
 36010 ;;		Unchanged: 0/0
 36011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36013 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36015 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36016 ;;Total ram usage:        5 bytes
 36017 ;; Hardware stack levels used:    1
 36018 ;; Hardware stack levels required when called:    6
 36019 ;; This function calls:
 36020 ;;		__delete_root
 36021 ;;		__get_first_cluster
 36022 ;;		__read_fat
 36023 ;;		__root_is_available
 36024 ;;		__write_fat
 36025 ;; This function is called by:
 36026 ;;		__parse_file_delete
 36027 ;; This function uses a non-reentrant model
 36028 ;;
 36029                           
 36030                           	psect	text178
 36031  0074AA                     __ptext178:
 36032                           	opt stack 0
 36033  0074AA                     _fat_delete_file:
 36034                           	opt stack 21
 36035                           
 36036                           ;incstack = 0
 36037                           ;fat_delete_file@file_number stored from wreg
 36038  0074AA  6E3E               	movwf	fat_delete_file@file_number,c
 36039                           
 36040                           ;fat16.c: 398: uint16_t first_cluster;;fat16.c: 399: uint16_t next_cluster;;fat16.c: 402
      +                          : if(file_number>=64)
 36041  0074AC  0E3F               	movlw	63
 36042  0074AE  643E               	cpfsgt	fat_delete_file@file_number,c
 36043  0074B0  D001               	goto	l1991
 36044  0074B2  0012               	return	
 36045  0074B4                     l1991:
 36046                           
 36047                           ;fat16.c: 406: };fat16.c: 409: if(_root_is_available(file_number))
 36048  0074B4  503E               	movf	fat_delete_file@file_number,w,c
 36049  0074B6  EC96  F038         	call	__root_is_available
 36050  0074BA  0900               	iorlw	0
 36051  0074BC  A4D8               	btfss	status,2,c
 36052  0074BE  0012               	return	
 36053                           
 36054                           ;fat16.c: 413: };fat16.c: 416: first_cluster = _get_first_cluster(file_number);
 36055                           
 36056                           ;fat16.c: 410: {;fat16.c: 412: return;
 36057  0074C0  503E               	movf	fat_delete_file@file_number,w,c
 36058  0074C2  EC8A  F03A         	call	__get_first_cluster
 36059  0074C6  C030  F03C         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 36060  0074CA  C031  F03D         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 36061  0074CE                     l1994:
 36062                           
 36063                           ;fat16.c: 420: {;fat16.c: 423: next_cluster = _read_fat(first_cluster);
 36064  0074CE  C03C  F030         	movff	fat_delete_file@first_cluster,__read_fat@cluster
 36065  0074D2  C03D  F031         	movff	fat_delete_file@first_cluster+1,__read_fat@cluster+1
 36066  0074D6  EC91  F03F         	call	__read_fat	;wreg free
 36067  0074DA  C030  F03A         	movff	?__read_fat,fat_delete_file@next_cluster
 36068  0074DE  C031  F03B         	movff	?__read_fat+1,fat_delete_file@next_cluster+1
 36069                           
 36070                           ;fat16.c: 426: _write_fat(first_cluster, 0x0000);
 36071  0074E2  C03C  F029         	movff	fat_delete_file@first_cluster,__write_fat@cluster
 36072  0074E6  C03D  F02A         	movff	fat_delete_file@first_cluster+1,__write_fat@cluster+1
 36073  0074EA  0E00               	movlw	0
 36074  0074EC  6E2C               	movwf	__write_fat@value+1,c
 36075  0074EE  0E00               	movlw	0
 36076  0074F0  6E2B               	movwf	__write_fat@value,c
 36077  0074F2  EC7C  F040         	call	__write_fat	;wreg free
 36078                           
 36079                           ;fat16.c: 429: if(next_cluster>0xFFF0)
 36080  0074F6  0EF1               	movlw	241
 36081  0074F8  5C3A               	subwf	fat_delete_file@next_cluster,w,c
 36082  0074FA  0EFF               	movlw	255
 36083  0074FC  583B               	subwfb	fat_delete_file@next_cluster+1,w,c
 36084  0074FE  B0D8               	btfsc	status,0,c
 36085  007500  D005               	goto	l1996
 36086                           
 36087                           ;fat16.c: 434: else;fat16.c: 435: {;fat16.c: 436: first_cluster = next_cluster;
 36088                           
 36089                           ;fat16.c: 432: }
 36090                           
 36091                           ;fat16.c: 430: {;fat16.c: 431: break;
 36092  007502  C03A  F03C         	movff	fat_delete_file@next_cluster,fat_delete_file@first_cluster
 36093  007506  C03B  F03D         	movff	fat_delete_file@next_cluster+1,fat_delete_file@first_cluster+1
 36094  00750A  D7E1               	goto	l1994
 36095  00750C                     l1996:
 36096                           
 36097                           ;fat16.c: 437: };fat16.c: 438: };fat16.c: 442: _delete_root(file_number);
 36098  00750C  503E               	movf	fat_delete_file@file_number,w,c
 36099  00750E  EC44  F03C         	call	__delete_root
 36100  007512  0012               	return		;funcret
 36101  007514                     __end_of_fat_delete_file:
 36102                           	opt stack 0
 36103                           tosu	equ	0xFFF
 36104                           tosh	equ	0xFFE
 36105                           tosl	equ	0xFFD
 36106                           pclath	equ	0xFFA
 36107                           tblptru	equ	0xFF8
 36108                           tblptrh	equ	0xFF7
 36109                           tblptrl	equ	0xFF6
 36110                           tablat	equ	0xFF5
 36111                           prodh	equ	0xFF4
 36112                           prodl	equ	0xFF3
 36113                           intcon	equ	0xFF2
 36114                           intcon2	equ	0xFF1
 36115                           intcon3	equ	0xFF0
 36116                           indf0	equ	0xFEF
 36117                           postinc0	equ	0xFEE
 36118                           fsr0h	equ	0xFEA
 36119                           fsr0l	equ	0xFE9
 36120                           wreg	equ	0xFE8
 36121                           indf1	equ	0xFE7
 36122                           postdec1	equ	0xFE5
 36123                           plusw1	equ	0xFE3
 36124                           fsr1h	equ	0xFE2
 36125                           fsr1l	equ	0xFE1
 36126                           indf2	equ	0xFDF
 36127                           postinc2	equ	0xFDE
 36128                           postdec2	equ	0xFDD
 36129                           plusw2	equ	0xFDB
 36130                           fsr2h	equ	0xFDA
 36131                           fsr2l	equ	0xFD9
 36132                           status	equ	0xFD8
 36133                           
 36134 ;; *************** function __get_first_cluster *****************
 36135 ;; Defined at:
 36136 ;;		line 210 in file "fat16.c"
 36137 ;; Parameters:    Size  Location     Type
 36138 ;;  slot            1    wreg     unsigned char 
 36139 ;; Auto vars:     Size  Location     Type
 36140 ;;  slot            1   56[COMRAM] unsigned char 
 36141 ;;  first_cluste    2   54[COMRAM] unsigned int 
 36142 ;;  offset          2   52[COMRAM] unsigned int 
 36143 ;;  sector          2   50[COMRAM] unsigned int 
 36144 ;; Return value:  Size  Location     Type
 36145 ;;                  2   47[COMRAM] unsigned int 
 36146 ;; Registers used:
 36147 ;;		wreg, status,2, status,0, cstack
 36148 ;; Tracked objects:
 36149 ;;		On entry : 0/0
 36150 ;;		On exit  : 0/0
 36151 ;;		Unchanged: 0/0
 36152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36154 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36156 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36157 ;;Total ram usage:       10 bytes
 36158 ;; Hardware stack levels used:    1
 36159 ;; Hardware stack levels required when called:    5
 36160 ;; This function calls:
 36161 ;;		_flash_partial_read
 36162 ;; This function is called by:
 36163 ;;		_fat_delete_file
 36164 ;; This function uses a non-reentrant model
 36165 ;;
 36166                           
 36167                           	psect	text179
 36168  007514                     __ptext179:
 36169                           	opt stack 0
 36170  007514                     __get_first_cluster:
 36171                           	opt stack 21
 36172                           
 36173                           ;incstack = 0
 36174                           ;__get_first_cluster@slot stored from wreg
 36175  007514  6E39               	movwf	__get_first_cluster@slot,c
 36176                           
 36177                           ;fat16.c: 212: uint16_t sector;;fat16.c: 213: uint16_t offset;;fat16.c: 214: uint16_t fi
      +                          rst_cluster;;fat16.c: 215: sector = slot >> 4;
 36178  007516  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 36179  00751A  3A32               	swapf	??__get_first_cluster,f,c
 36180  00751C  0E0F               	movlw	15
 36181  00751E  1632               	andwf	??__get_first_cluster,f,c
 36182  007520  5032               	movf	??__get_first_cluster,w,c
 36183  007522  6E33               	movwf	__get_first_cluster@sector,c
 36184  007524  6A34               	clrf	__get_first_cluster@sector+1,c
 36185                           
 36186                           ;fat16.c: 216: sector += 34;
 36187  007526  0E22               	movlw	34
 36188  007528  2633               	addwf	__get_first_cluster@sector,f,c
 36189  00752A  0E00               	movlw	0
 36190  00752C  2234               	addwfc	__get_first_cluster@sector+1,f,c
 36191                           
 36192                           ;fat16.c: 217: offset = slot & 0b1111;
 36193  00752E  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 36194  007532  0E0F               	movlw	15
 36195  007534  1632               	andwf	??__get_first_cluster,f,c
 36196  007536  5032               	movf	??__get_first_cluster,w,c
 36197  007538  6E35               	movwf	__get_first_cluster@offset,c
 36198  00753A  6A36               	clrf	__get_first_cluster@offset+1,c
 36199                           
 36200                           ;fat16.c: 218: offset <<= 5;
 36201  00753C  0E05               	movlw	5
 36202  00753E                     u8685:
 36203  00753E  90D8               	bcf	status,0,c
 36204  007540  3635               	rlcf	__get_first_cluster@offset,f,c
 36205  007542  3636               	rlcf	__get_first_cluster@offset+1,f,c
 36206  007544  2EE8               	decfsz	wreg,f,c
 36207  007546  D7FB               	goto	u8685
 36208                           
 36209                           ;fat16.c: 219: offset += 26;
 36210  007548  0E1A               	movlw	26
 36211  00754A  2635               	addwf	__get_first_cluster@offset,f,c
 36212  00754C  0E00               	movlw	0
 36213  00754E  2236               	addwfc	__get_first_cluster@offset+1,f,c
 36214                           
 36215                           ;fat16.c: 220: flash_partial_read(sector, offset, 2, &first_cluster);
 36216  007550  C033  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 36217  007554  C034  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 36218  007558  C035  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 36219  00755C  C036  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 36220  007560  0E00               	movlw	0
 36221  007562  6E2D               	movwf	flash_partial_read@length+1,c
 36222  007564  0E02               	movlw	2
 36223  007566  6E2C               	movwf	flash_partial_read@length,c
 36224  007568  0E37               	movlw	low __get_first_cluster@first_cluster
 36225  00756A  6E2E               	movwf	flash_partial_read@data,c
 36226  00756C  0E00               	movlw	high __get_first_cluster@first_cluster
 36227  00756E  6E2F               	movwf	flash_partial_read@data+1,c
 36228  007570  ECFA  F041         	call	_flash_partial_read	;wreg free
 36229                           
 36230                           ;fat16.c: 221: return first_cluster;
 36231  007574  C037  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 36232  007578  C038  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 36233  00757C  0012               	return	
 36234  00757E                     __end_of__get_first_cluster:
 36235                           	opt stack 0
 36236                           tosu	equ	0xFFF
 36237                           tosh	equ	0xFFE
 36238                           tosl	equ	0xFFD
 36239                           pclath	equ	0xFFA
 36240                           tblptru	equ	0xFF8
 36241                           tblptrh	equ	0xFF7
 36242                           tblptrl	equ	0xFF6
 36243                           tablat	equ	0xFF5
 36244                           prodh	equ	0xFF4
 36245                           prodl	equ	0xFF3
 36246                           intcon	equ	0xFF2
 36247                           intcon2	equ	0xFF1
 36248                           intcon3	equ	0xFF0
 36249                           indf0	equ	0xFEF
 36250                           postinc0	equ	0xFEE
 36251                           fsr0h	equ	0xFEA
 36252                           fsr0l	equ	0xFE9
 36253                           wreg	equ	0xFE8
 36254                           indf1	equ	0xFE7
 36255                           postdec1	equ	0xFE5
 36256                           plusw1	equ	0xFE3
 36257                           fsr1h	equ	0xFE2
 36258                           fsr1l	equ	0xFE1
 36259                           indf2	equ	0xFDF
 36260                           postinc2	equ	0xFDE
 36261                           postdec2	equ	0xFDD
 36262                           plusw2	equ	0xFDB
 36263                           fsr2h	equ	0xFDA
 36264                           fsr2l	equ	0xFD9
 36265                           status	equ	0xFD8
 36266                           
 36267 ;; *************** function __delete_root *****************
 36268 ;; Defined at:
 36269 ;;		line 197 in file "fat16.c"
 36270 ;; Parameters:    Size  Location     Type
 36271 ;;  slot            1    wreg     unsigned char 
 36272 ;; Auto vars:     Size  Location     Type
 36273 ;;  slot            1   46[COMRAM] unsigned char 
 36274 ;;  offset          2   43[COMRAM] unsigned int 
 36275 ;;  root_sector     2   41[COMRAM] unsigned int 
 36276 ;;  deleted_valu    1   45[COMRAM] unsigned char 
 36277 ;; Return value:  Size  Location     Type
 36278 ;;                  1    wreg      void 
 36279 ;; Registers used:
 36280 ;;		wreg, status,2, status,0, cstack
 36281 ;; Tracked objects:
 36282 ;;		On entry : 0/0
 36283 ;;		On exit  : 0/0
 36284 ;;		Unchanged: 0/0
 36285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36287 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36289 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36290 ;;Total ram usage:        7 bytes
 36291 ;; Hardware stack levels used:    1
 36292 ;; Hardware stack levels required when called:    5
 36293 ;; This function calls:
 36294 ;;		_flash_partial_write
 36295 ;; This function is called by:
 36296 ;;		_fat_delete_file
 36297 ;; This function uses a non-reentrant model
 36298 ;;
 36299                           
 36300                           	psect	text180
 36301  007888                     __ptext180:
 36302                           	opt stack 0
 36303  007888                     __delete_root:
 36304                           	opt stack 21
 36305                           
 36306                           ;incstack = 0
 36307                           ;__delete_root@slot stored from wreg
 36308  007888  6E2F               	movwf	__delete_root@slot,c
 36309                           
 36310                           ;fat16.c: 199: uint16_t root_sector;;fat16.c: 200: uint16_t offset;;fat16.c: 201: uint8_
      +                          t deleted_value;;fat16.c: 203: root_sector = (slot >> 4) + 34;
 36311  00788A  C02F  F029         	movff	__delete_root@slot,??__delete_root
 36312  00788E  3A29               	swapf	??__delete_root,f,c
 36313  007890  0E0F               	movlw	15
 36314  007892  1629               	andwf	??__delete_root,f,c
 36315  007894  0E22               	movlw	34
 36316  007896  2429               	addwf	??__delete_root,w,c
 36317  007898  6E2A               	movwf	__delete_root@root_sector,c
 36318  00789A  6A2B               	clrf	__delete_root@root_sector+1,c
 36319  00789C  0E00               	movlw	0
 36320  00789E  222B               	addwfc	__delete_root@root_sector+1,f,c
 36321                           
 36322                           ;fat16.c: 204: offset = (slot & 0b1111);
 36323  0078A0  C02F  F029         	movff	__delete_root@slot,??__delete_root
 36324  0078A4  0E0F               	movlw	15
 36325  0078A6  1629               	andwf	??__delete_root,f,c
 36326  0078A8  5029               	movf	??__delete_root,w,c
 36327  0078AA  6E2C               	movwf	__delete_root@offset,c
 36328  0078AC  6A2D               	clrf	__delete_root@offset+1,c
 36329                           
 36330                           ;fat16.c: 205: offset <<= 5;
 36331  0078AE  0E05               	movlw	5
 36332  0078B0                     u8675:
 36333  0078B0  90D8               	bcf	status,0,c
 36334  0078B2  362C               	rlcf	__delete_root@offset,f,c
 36335  0078B4  362D               	rlcf	__delete_root@offset+1,f,c
 36336  0078B6  2EE8               	decfsz	wreg,f,c
 36337  0078B8  D7FB               	goto	u8675
 36338                           
 36339                           ;fat16.c: 206: deleted_value = 0xE5;
 36340  0078BA  0EE5               	movlw	229
 36341  0078BC  6E2E               	movwf	__delete_root@deleted_value,c
 36342                           
 36343                           ;fat16.c: 207: flash_partial_write(root_sector, offset, 1, &deleted_value);
 36344  0078BE  C02A  F020         	movff	__delete_root@root_sector,flash_partial_write@page
 36345  0078C2  C02B  F021         	movff	__delete_root@root_sector+1,flash_partial_write@page+1
 36346  0078C6  C02C  F022         	movff	__delete_root@offset,flash_partial_write@start
 36347  0078CA  C02D  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 36348  0078CE  0E00               	movlw	0
 36349  0078D0  6E25               	movwf	flash_partial_write@length+1,c
 36350  0078D2  0E01               	movlw	1
 36351  0078D4  6E24               	movwf	flash_partial_write@length,c
 36352  0078D6  0E2E               	movlw	low __delete_root@deleted_value
 36353  0078D8  6E26               	movwf	flash_partial_write@data,c
 36354  0078DA  0E00               	movlw	high __delete_root@deleted_value
 36355  0078DC  6E27               	movwf	flash_partial_write@data+1,c
 36356  0078DE  EC7C  F039         	call	_flash_partial_write	;wreg free
 36357  0078E2  0012               	return		;funcret
 36358  0078E4                     __end_of__delete_root:
 36359                           	opt stack 0
 36360                           tosu	equ	0xFFF
 36361                           tosh	equ	0xFFE
 36362                           tosl	equ	0xFFD
 36363                           pclath	equ	0xFFA
 36364                           tblptru	equ	0xFF8
 36365                           tblptrh	equ	0xFF7
 36366                           tblptrl	equ	0xFF6
 36367                           tablat	equ	0xFF5
 36368                           prodh	equ	0xFF4
 36369                           prodl	equ	0xFF3
 36370                           intcon	equ	0xFF2
 36371                           intcon2	equ	0xFF1
 36372                           intcon3	equ	0xFF0
 36373                           indf0	equ	0xFEF
 36374                           postinc0	equ	0xFEE
 36375                           fsr0h	equ	0xFEA
 36376                           fsr0l	equ	0xFE9
 36377                           wreg	equ	0xFE8
 36378                           indf1	equ	0xFE7
 36379                           postdec1	equ	0xFE5
 36380                           plusw1	equ	0xFE3
 36381                           fsr1h	equ	0xFE2
 36382                           fsr1l	equ	0xFE1
 36383                           indf2	equ	0xFDF
 36384                           postinc2	equ	0xFDE
 36385                           postdec2	equ	0xFDD
 36386                           plusw2	equ	0xFDB
 36387                           fsr2h	equ	0xFDA
 36388                           fsr2l	equ	0xFD9
 36389                           status	equ	0xFD8
 36390                           
 36391 ;; *************** function __parse_file_create *****************
 36392 ;; Defined at:
 36393 ;;		line 550 in file "api.c"
 36394 ;; Parameters:    Size  Location     Type
 36395 ;;  data            2   79[COMRAM] PTR unsigned char 
 36396 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36397 ;; Auto vars:     Size  Location     Type
 36398 ;;  file_size       4   82[COMRAM] unsigned long 
 36399 ;; Return value:  Size  Location     Type
 36400 ;;                  1    wreg      unsigned char 
 36401 ;; Registers used:
 36402 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36403 ;; Tracked objects:
 36404 ;;		On entry : 0/0
 36405 ;;		On exit  : 0/0
 36406 ;;		Unchanged: 0/0
 36407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36409 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36411 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36412 ;;Total ram usage:        7 bytes
 36413 ;; Hardware stack levels used:    1
 36414 ;; Hardware stack levels required when called:    8
 36415 ;; This function calls:
 36416 ;;		_fat_create_file
 36417 ;; This function is called by:
 36418 ;;		__parse_command_long
 36419 ;; This function uses a non-reentrant model
 36420 ;;
 36421                           
 36422                           	psect	text181
 36423  004FD8                     __ptext181:
 36424                           	opt stack 0
 36425  004FD8                     __parse_file_create:
 36426                           	opt stack 20
 36427                           
 36428                           ;api.c: 553: uint32_t file_size;;api.c: 554: if((data[0]!=COMMAND_FILE_CREATE) || (data[
      +                          16]!=0xBD) || (data[17]!=0x4F))
 36429                           
 36430                           ;incstack = 0
 36431  004FD8  C050  FFD9         	movff	__parse_file_create@data,fsr2l
 36432  004FDC  C051  FFDA         	movff	__parse_file_create@data+1,fsr2h
 36433  004FE0  0E52               	movlw	82
 36434  004FE2  18DE               	xorwf	postinc2,w,c
 36435  004FE4  A4D8               	btfss	status,2,c
 36436  004FE6  D014               	goto	u10480
 36437  004FE8  EE20 F010          	lfsr	2,16
 36438  004FEC  5050               	movf	__parse_file_create@data,w,c
 36439  004FEE  26D9               	addwf	fsr2l,f,c
 36440  004FF0  5051               	movf	__parse_file_create@data+1,w,c
 36441  004FF2  22DA               	addwfc	fsr2h,f,c
 36442  004FF4  0EBD               	movlw	189
 36443  004FF6  18DE               	xorwf	postinc2,w,c
 36444  004FF8  A4D8               	btfss	status,2,c
 36445  004FFA  D00A               	goto	u10480
 36446  004FFC  EE20 F011          	lfsr	2,17
 36447  005000  5050               	movf	__parse_file_create@data,w,c
 36448  005002  26D9               	addwf	fsr2l,f,c
 36449  005004  5051               	movf	__parse_file_create@data+1,w,c
 36450  005006  22DA               	addwfc	fsr2h,f,c
 36451  005008  0E4F               	movlw	79
 36452  00500A  18DE               	xorwf	postinc2,w,c
 36453  00500C  B4D8               	btfsc	status,2,c
 36454  00500E  D002               	goto	l2734
 36455  005010                     u10480:
 36456                           
 36457                           ;api.c: 555: {;api.c: 556: return 18;
 36458  005010  0E12               	movlw	18
 36459  005012  0012               	return	
 36460  005014                     l2734:
 36461                           
 36462                           ;api.c: 557: };api.c: 560: file_size = data[12];
 36463  005014  EE20 F00C          	lfsr	2,12
 36464  005018  5050               	movf	__parse_file_create@data,w,c
 36465  00501A  26D9               	addwf	fsr2l,f,c
 36466  00501C  5051               	movf	__parse_file_create@data+1,w,c
 36467  00501E  22DA               	addwfc	fsr2h,f,c
 36468  005020  50DF               	movf	indf2,w,c
 36469  005022  6E52               	movwf	??__parse_file_create& (0+255),c
 36470  005024  5052               	movf	??__parse_file_create,w,c
 36471  005026  6E53               	movwf	__parse_file_create@file_size,c
 36472  005028  6A54               	clrf	__parse_file_create@file_size+1,c
 36473  00502A  6A55               	clrf	__parse_file_create@file_size+2,c
 36474  00502C  6A56               	clrf	__parse_file_create@file_size+3,c
 36475                           
 36476                           ;api.c: 561: file_size <<= 8;
 36477  00502E  C055  F056         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36478  005032  C054  F055         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36479  005036  C053  F054         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36480  00503A  6A53               	clrf	__parse_file_create@file_size,c
 36481                           
 36482                           ;api.c: 562: file_size |= data[13];
 36483  00503C  EE20 F00D          	lfsr	2,13
 36484  005040  5050               	movf	__parse_file_create@data,w,c
 36485  005042  26D9               	addwf	fsr2l,f,c
 36486  005044  5051               	movf	__parse_file_create@data+1,w,c
 36487  005046  22DA               	addwfc	fsr2h,f,c
 36488  005048  50DF               	movf	indf2,w,c
 36489  00504A  6E52               	movwf	??__parse_file_create& (0+255),c
 36490  00504C  5052               	movf	??__parse_file_create,w,c
 36491  00504E  1253               	iorwf	__parse_file_create@file_size,f,c
 36492                           
 36493                           ;api.c: 563: file_size <<= 8;
 36494  005050  C055  F056         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36495  005054  C054  F055         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36496  005058  C053  F054         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36497  00505C  6A53               	clrf	__parse_file_create@file_size,c
 36498                           
 36499                           ;api.c: 564: file_size |= data[14];
 36500  00505E  EE20 F00E          	lfsr	2,14
 36501  005062  5050               	movf	__parse_file_create@data,w,c
 36502  005064  26D9               	addwf	fsr2l,f,c
 36503  005066  5051               	movf	__parse_file_create@data+1,w,c
 36504  005068  22DA               	addwfc	fsr2h,f,c
 36505  00506A  50DF               	movf	indf2,w,c
 36506  00506C  6E52               	movwf	??__parse_file_create& (0+255),c
 36507  00506E  5052               	movf	??__parse_file_create,w,c
 36508  005070  1253               	iorwf	__parse_file_create@file_size,f,c
 36509                           
 36510                           ;api.c: 565: file_size <<= 8;
 36511  005072  C055  F056         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36512  005076  C054  F055         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36513  00507A  C053  F054         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36514  00507E  6A53               	clrf	__parse_file_create@file_size,c
 36515                           
 36516                           ;api.c: 566: file_size |= data[15];
 36517  005080  EE20 F00F          	lfsr	2,15
 36518  005084  5050               	movf	__parse_file_create@data,w,c
 36519  005086  26D9               	addwf	fsr2l,f,c
 36520  005088  5051               	movf	__parse_file_create@data+1,w,c
 36521  00508A  22DA               	addwfc	fsr2h,f,c
 36522  00508C  50DF               	movf	indf2,w,c
 36523  00508E  6E52               	movwf	??__parse_file_create& (0+255),c
 36524  005090  5052               	movf	??__parse_file_create,w,c
 36525  005092  1253               	iorwf	__parse_file_create@file_size,f,c
 36526                           
 36527                           ;api.c: 569: fat_create_file(&data[1], &data[9], file_size);
 36528  005094  0E01               	movlw	1
 36529  005096  2450               	addwf	__parse_file_create@data,w,c
 36530  005098  6E44               	movwf	fat_create_file@name,c
 36531  00509A  0E00               	movlw	0
 36532  00509C  2051               	addwfc	__parse_file_create@data+1,w,c
 36533  00509E  6E45               	movwf	fat_create_file@name+1,c
 36534  0050A0  0E09               	movlw	9
 36535  0050A2  2450               	addwf	__parse_file_create@data,w,c
 36536  0050A4  6E46               	movwf	fat_create_file@extension,c
 36537  0050A6  0E00               	movlw	0
 36538  0050A8  2051               	addwfc	__parse_file_create@data+1,w,c
 36539  0050AA  6E47               	movwf	fat_create_file@extension+1,c
 36540  0050AC  C053  F048         	movff	__parse_file_create@file_size,fat_create_file@size
 36541  0050B0  C054  F049         	movff	__parse_file_create@file_size+1,fat_create_file@size+1
 36542  0050B4  C055  F04A         	movff	__parse_file_create@file_size+2,fat_create_file@size+2
 36543  0050B8  C056  F04B         	movff	__parse_file_create@file_size+3,fat_create_file@size+3
 36544  0050BC  ECFB  F01A         	call	_fat_create_file	;wreg free
 36545                           
 36546                           ;api.c: 571: return 18;
 36547  0050C0  0E12               	movlw	18
 36548  0050C2  0012               	return	
 36549  0050C4                     __end_of__parse_file_create:
 36550                           	opt stack 0
 36551                           tosu	equ	0xFFF
 36552                           tosh	equ	0xFFE
 36553                           tosl	equ	0xFFD
 36554                           pclath	equ	0xFFA
 36555                           tblptru	equ	0xFF8
 36556                           tblptrh	equ	0xFF7
 36557                           tblptrl	equ	0xFF6
 36558                           tablat	equ	0xFF5
 36559                           prodh	equ	0xFF4
 36560                           prodl	equ	0xFF3
 36561                           intcon	equ	0xFF2
 36562                           intcon2	equ	0xFF1
 36563                           intcon3	equ	0xFF0
 36564                           indf0	equ	0xFEF
 36565                           postinc0	equ	0xFEE
 36566                           fsr0h	equ	0xFEA
 36567                           fsr0l	equ	0xFE9
 36568                           wreg	equ	0xFE8
 36569                           indf1	equ	0xFE7
 36570                           postdec1	equ	0xFE5
 36571                           plusw1	equ	0xFE3
 36572                           fsr1h	equ	0xFE2
 36573                           fsr1l	equ	0xFE1
 36574                           indf2	equ	0xFDF
 36575                           postinc2	equ	0xFDE
 36576                           postdec2	equ	0xFDD
 36577                           plusw2	equ	0xFDB
 36578                           fsr2h	equ	0xFDA
 36579                           fsr2l	equ	0xFD9
 36580                           status	equ	0xFD8
 36581                           
 36582 ;; *************** function _fat_create_file *****************
 36583 ;; Defined at:
 36584 ;;		line 314 in file "fat16.c"
 36585 ;; Parameters:    Size  Location     Type
 36586 ;;  name            2   67[COMRAM] PTR unsigned char 
 36587 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36588 ;;  extension       2   69[COMRAM] PTR unsigned char 
 36589 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36590 ;;  size            4   71[COMRAM] unsigned long 
 36591 ;; Auto vars:     Size  Location     Type
 36592 ;;  root_entry     32    9[BANK0 ] struct .
 36593 ;;  cluster         2    7[BANK0 ] unsigned int 
 36594 ;;  number_of_cl    2    5[BANK0 ] unsigned int 
 36595 ;;  cluster_coun    2    2[BANK0 ] unsigned int 
 36596 ;;  next_cluster    2    0[BANK0 ] unsigned int 
 36597 ;;  root_slot       1    4[BANK0 ] unsigned char 
 36598 ;; Return value:  Size  Location     Type
 36599 ;;                  1    wreg      unsigned char 
 36600 ;; Registers used:
 36601 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36602 ;; Tracked objects:
 36603 ;;		On entry : 0/0
 36604 ;;		On exit  : 0/0
 36605 ;;		Unchanged: 0/0
 36606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36607 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36608 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36610 ;;      Totals:        12      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36611 ;;Total ram usage:       53 bytes
 36612 ;; Hardware stack levels used:    1
 36613 ;; Hardware stack levels required when called:    7
 36614 ;; This function calls:
 36615 ;;		__get_available_root_entry
 36616 ;;		__get_date
 36617 ;;		__get_empty_cluster
 36618 ;;		__get_time
 36619 ;;		__write_fat
 36620 ;;		__write_root
 36621 ;;		_fat_find_file
 36622 ;;		_fat_get_empty_clusters
 36623 ;;		_memcpy
 36624 ;; This function is called by:
 36625 ;;		__parse_file_create
 36626 ;; This function uses a non-reentrant model
 36627 ;;
 36628                           
 36629                           	psect	text182
 36630  0035F6                     __ptext182:
 36631                           	opt stack 0
 36632  0035F6                     _fat_create_file:
 36633                           	opt stack 20
 36634                           
 36635                           ;fat16.c: 316: uint8_t root_slot;;fat16.c: 317: rootEntry_t root_entry;;fat16.c: 318: ui
      +                          nt16_t cluster;;fat16.c: 319: uint16_t next_cluster;;fat16.c: 320: uint16_t number_of_cl
      +                          usters;;fat16.c: 321: uint16_t cluster_count;;fat16.c: 325: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 36636                           
 36637                           ;incstack = 0
 36638  0035F6  C044  F030         	movff	fat_create_file@name,fat_find_file@name
 36639  0035FA  C045  F031         	movff	fat_create_file@name+1,fat_find_file@name+1
 36640  0035FE  C046  F032         	movff	fat_create_file@extension,fat_find_file@extension
 36641  003602  C047  F033         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 36642  003606  EC73  F02F         	call	_fat_find_file	;wreg free
 36643  00360A  0AFF               	xorlw	255
 36644  00360C  A4D8               	btfss	status,2,c
 36645  00360E  0012               	return	
 36646                           
 36647                           ;fat16.c: 330: };fat16.c: 334: root_slot = _get_available_root_entry();
 36648                           
 36649                           ;fat16.c: 326: {;fat16.c: 329: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 36650  003610  EC4D  F043         	call	__get_available_root_entry	;wreg free
 36651  003614  0100               	movlb	0	; () banked
 36652  003616  6F64               	movwf	fat_create_file@root_slot& (0+255),b
 36653                           
 36654                           ; BSR set to: 0
 36655                           ;fat16.c: 335: if(root_slot == 0xFF)
 36656  003618  2964               	incf	fat_create_file@root_slot& (0+255),w,b
 36657  00361A  B4D8               	btfsc	status,2,c
 36658  00361C  0012               	return	
 36659                           
 36660                           ; BSR set to: 0
 36661                           ;fat16.c: 340: };fat16.c: 343: number_of_clusters = (size>>9) + 1;
 36662                           
 36663                           ; BSR set to: 0
 36664                           
 36665                           ; BSR set to: 0
 36666                           ;fat16.c: 336: {;fat16.c: 339: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 36667  00361E  C048  F04C         	movff	fat_create_file@size,??_fat_create_file
 36668  003622  C049  F04D         	movff	fat_create_file@size+1,??_fat_create_file+1
 36669  003626  C04A  F04E         	movff	fat_create_file@size+2,??_fat_create_file+2
 36670  00362A  C04B  F04F         	movff	fat_create_file@size+3,??_fat_create_file+3
 36671  00362E  0E0A               	movlw	10
 36672  003630  D005               	goto	u9490
 36673  003632                     u9495:
 36674  003632  90D8               	bcf	status,0,c
 36675  003634  324F               	rrcf	??_fat_create_file+3,f,c
 36676  003636  324E               	rrcf	??_fat_create_file+2,f,c
 36677  003638  324D               	rrcf	??_fat_create_file+1,f,c
 36678  00363A  324C               	rrcf	??_fat_create_file,f,c
 36679  00363C                     u9490:
 36680  00363C  2EE8               	decfsz	wreg,f,c
 36681  00363E  D7F9               	goto	u9495
 36682  003640  0E01               	movlw	1
 36683  003642  244C               	addwf	??_fat_create_file,w,c
 36684  003644  6F65               	movwf	fat_create_file@number_of_clusters& (0+255),b
 36685  003646  0E00               	movlw	0
 36686  003648  204D               	addwfc	??_fat_create_file+1,w,c
 36687  00364A  6F66               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 36688                           
 36689                           ; BSR set to: 0
 36690                           ;fat16.c: 344: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 36691  00364C  C065  F030         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 36692  003650  C066  F031         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 36693  003654  ECC6  F035         	call	_fat_get_empty_clusters	;wreg free
 36694  003658  0100               	movlb	0	; () banked
 36695  00365A  5165               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 36696  00365C  1830               	xorwf	?_fat_get_empty_clusters,w,c
 36697  00365E  E105               	bnz	u9500
 36698  003660  5166               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 36699  003662  1831               	xorwf	?_fat_get_empty_clusters+1,w,c
 36700  003664  A4D8               	btfss	status,2,c
 36701  003666  0012               	return	
 36702  003668  D001               	goto	l1983
 36703  00366A                     u9500:
 36704                           
 36705                           ; BSR set to: 0
 36706                           ;fat16.c: 345: {;fat16.c: 348: return 0xFD;;	Return value of _fat_create_file is never u
      +                          sed
 36707  00366A  0012               	return	
 36708  00366C                     l1983:
 36709                           
 36710                           ; BSR set to: 0
 36711                           ;fat16.c: 349: };fat16.c: 352: cluster = _get_empty_cluster(2);
 36712                           
 36713                           ; BSR set to: 0
 36714  00366C  0E00               	movlw	0
 36715  00366E  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 36716  003670  0E02               	movlw	2
 36717  003672  6E30               	movwf	__get_empty_cluster@first_cluster,c
 36718  003674  EC99  F036         	call	__get_empty_cluster	;wreg free
 36719  003678  C030  F067         	movff	?__get_empty_cluster,fat_create_file@cluster
 36720  00367C  C031  F068         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 36721                           
 36722                           ;fat16.c: 355: memcpy(root_entry.fileName, name, 8);
 36723  003680  0E69               	movlw	low fat_create_file@root_entry
 36724  003682  6E01               	movwf	memcpy@d1,c
 36725  003684  0E00               	movlw	high fat_create_file@root_entry
 36726  003686  6E02               	movwf	memcpy@d1+1,c
 36727  003688  C044  F003         	movff	fat_create_file@name,memcpy@s1
 36728  00368C  C045  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 36729  003690  5003               	movf	memcpy@s1,w,c
 36730  003692  1004               	iorwf	memcpy@s1+1,w,c
 36731  003694  A4D8               	btfss	status,2,c
 36732  003696  0E20               	movlw	32
 36733  003698  6E05               	movwf	memcpy@s1+2,c
 36734  00369A  0E00               	movlw	0
 36735  00369C  6E07               	movwf	memcpy@n+1,c
 36736  00369E  0E08               	movlw	8
 36737  0036A0  6E06               	movwf	memcpy@n,c
 36738  0036A2  ECF2  F03A         	call	_memcpy	;wreg free
 36739                           
 36740                           ;fat16.c: 356: memcpy(root_entry.fileExtension, extension, 3);
 36741  0036A6  0E71               	movlw	low (fat_create_file@root_entry+8)
 36742  0036A8  6E01               	movwf	memcpy@d1,c
 36743  0036AA  0E00               	movlw	high (fat_create_file@root_entry+8)
 36744  0036AC  6E02               	movwf	memcpy@d1+1,c
 36745  0036AE  C046  F003         	movff	fat_create_file@extension,memcpy@s1
 36746  0036B2  C047  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 36747  0036B6  5003               	movf	memcpy@s1,w,c
 36748  0036B8  1004               	iorwf	memcpy@s1+1,w,c
 36749  0036BA  A4D8               	btfss	status,2,c
 36750  0036BC  0E20               	movlw	32
 36751  0036BE  6E05               	movwf	memcpy@s1+2,c
 36752  0036C0  0E00               	movlw	0
 36753  0036C2  6E07               	movwf	memcpy@n+1,c
 36754  0036C4  0E03               	movlw	3
 36755  0036C6  6E06               	movwf	memcpy@n,c
 36756  0036C8  ECF2  F03A         	call	_memcpy	;wreg free
 36757                           
 36758                           ;fat16.c: 357: root_entry.attributes = 0x00;
 36759  0036CC  0E00               	movlw	0
 36760  0036CE  0100               	movlb	0	; () banked
 36761  0036D0  6F74               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 36762                           
 36763                           ; BSR set to: 0
 36764                           ;fat16.c: 358: root_entry.reserved1 = 0x00;
 36765  0036D2  0E00               	movlw	0
 36766  0036D4  6F75               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 36767                           
 36768                           ; BSR set to: 0
 36769                           ;fat16.c: 359: root_entry.secondFractions = 0x00;
 36770  0036D6  0E00               	movlw	0
 36771  0036D8  6F76               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 36772                           
 36773                           ; BSR set to: 0
 36774                           ;fat16.c: 360: root_entry.createdTime = _get_time();
 36775  0036DA  ECB6  F044         	call	__get_time	;wreg free
 36776  0036DE  C001  F077         	movff	?__get_time,fat_create_file@root_entry+14
 36777  0036E2  C002  F078         	movff	?__get_time+1,fat_create_file@root_entry+15
 36778                           
 36779                           ;fat16.c: 361: root_entry.createdDate = _get_date();
 36780  0036E6  ECBB  F044         	call	__get_date	;wreg free
 36781  0036EA  C001  F079         	movff	?__get_date,fat_create_file@root_entry+16
 36782  0036EE  C002  F07A         	movff	?__get_date+1,fat_create_file@root_entry+17
 36783                           
 36784                           ;fat16.c: 362: root_entry.lastAccessDate = root_entry.createdDate;
 36785  0036F2  C079  F07B         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 36786  0036F6  C07A  F07C         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 36787                           
 36788                           ;fat16.c: 363: root_entry.reserved2 = 0x00;
 36789  0036FA  0E00               	movlw	0
 36790  0036FC  0100               	movlb	0	; () banked
 36791  0036FE  6F7E               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 36792  003700  0E00               	movlw	0
 36793  003702  6F7D               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 36794                           
 36795                           ; BSR set to: 0
 36796                           ;fat16.c: 364: root_entry.modifiedTime = root_entry.createdTime;
 36797  003704  C077  F07F         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 36798  003708  C078  F080         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 36799                           
 36800                           ; BSR set to: 0
 36801                           ;fat16.c: 365: root_entry.modifiedDate = root_entry.createdDate;
 36802  00370C  C079  F081         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 36803  003710  C07A  F082         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 36804                           
 36805                           ; BSR set to: 0
 36806                           ;fat16.c: 366: root_entry.firstCluster = cluster;
 36807  003714  C067  F083         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 36808  003718  C068  F084         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 36809                           
 36810                           ; BSR set to: 0
 36811                           ;fat16.c: 367: root_entry.fileSize = size;
 36812  00371C  C048  F085         	movff	fat_create_file@size,fat_create_file@root_entry+28
 36813  003720  C049  F086         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 36814  003724  C04A  F087         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 36815  003728  C04B  F088         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 36816                           
 36817                           ;fat16.c: 370: _write_root(root_slot, &root_entry);
 36818  00372C  0E69               	movlw	low fat_create_file@root_entry
 36819  00372E  6E29               	movwf	__write_root@data,c
 36820  003730  0E00               	movlw	high fat_create_file@root_entry
 36821  003732  6E2A               	movwf	__write_root@data+1,c
 36822  003734  5164               	movf	fat_create_file@root_slot& (0+255),w,b
 36823  003736  ECCB  F03C         	call	__write_root
 36824                           
 36825                           ;fat16.c: 375: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 36826  00373A  0E00               	movlw	0
 36827  00373C  0100               	movlb	0	; () banked
 36828  00373E  6F63               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 36829  003740  0E01               	movlw	1
 36830  003742  6F62               	movwf	fat_create_file@cluster_count& (0+255),b
 36831  003744  D02F               	goto	l1984
 36832  003746                     
 36833                           ; BSR set to: 0
 36834                           ;fat16.c: 376: {;fat16.c: 378: if(cluster_count==number_of_clusters)
 36835                           
 36836                           ; BSR set to: 0
 36837  003746  5165               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 36838  003748  1962               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 36839  00374A  E10E               	bnz	l12690
 36840  00374C  5166               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 36841  00374E  1963               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 36842  003750  A4D8               	btfss	status,2,c
 36843  003752  D00A               	goto	l1986
 36844                           
 36845                           ; BSR set to: 0
 36846                           ;fat16.c: 379: {;fat16.c: 381: _write_fat(cluster, 0xFFFF);
 36847  003754  C067  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 36848  003758  C068  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 36849  00375C  0EFF               	movlw	255
 36850  00375E  6E2C               	movwf	__write_fat@value+1,c
 36851  003760  682B               	setf	__write_fat@value,c
 36852  003762  EC7C  F040         	call	__write_fat	;wreg free
 36853                           
 36854                           ;fat16.c: 382: }
 36855  003766  D01B               	goto	l1987
 36856  003768                     l1986:
 36857  003768                     l12690:
 36858                           
 36859                           ;fat16.c: 383: else;fat16.c: 384: {;fat16.c: 386: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 36860  003768  0E01               	movlw	1
 36861  00376A  0100               	movlb	0	; () banked
 36862  00376C  2567               	addwf	fat_create_file@cluster& (0+255),w,b
 36863  00376E  6E30               	movwf	__get_empty_cluster@first_cluster,c
 36864  003770  0E00               	movlw	0
 36865  003772  2168               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 36866  003774  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 36867  003776  EC99  F036         	call	__get_empty_cluster	;wreg free
 36868  00377A  C030  F060         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 36869  00377E  C031  F061         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 36870                           
 36871                           ;fat16.c: 388: _write_fat(cluster, next_cluster);
 36872  003782  C067  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 36873  003786  C068  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 36874  00378A  C060  F02B         	movff	fat_create_file@next_cluster,__write_fat@value
 36875  00378E  C061  F02C         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 36876  003792  EC7C  F040         	call	__write_fat	;wreg free
 36877                           
 36878                           ;fat16.c: 390: cluster = next_cluster;
 36879  003796  C060  F067         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 36880  00379A  C061  F068         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 36881  00379E                     l1987:
 36882  00379E  0100               	movlb	0	; () banked
 36883  0037A0  4B62               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 36884  0037A2  2B63               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 36885  0037A4                     l1984:
 36886                           
 36887                           ; BSR set to: 0
 36888                           
 36889                           ; BSR set to: 0
 36890  0037A4  5162               	movf	fat_create_file@cluster_count& (0+255),w,b
 36891  0037A6  5D65               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 36892  0037A8  5163               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 36893  0037AA  5966               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 36894  0037AC  A0D8               	btfss	status,0,c
 36895  0037AE  0012               	return	
 36896  0037B0  D7CA               	goto	l1985
 36897  0037B2                     __end_of_fat_create_file:
 36898                           	opt stack 0
 36899                           tosu	equ	0xFFF
 36900                           tosh	equ	0xFFE
 36901                           tosl	equ	0xFFD
 36902                           pclath	equ	0xFFA
 36903                           tblptru	equ	0xFF8
 36904                           tblptrh	equ	0xFF7
 36905                           tblptrl	equ	0xFF6
 36906                           tablat	equ	0xFF5
 36907                           prodh	equ	0xFF4
 36908                           prodl	equ	0xFF3
 36909                           intcon	equ	0xFF2
 36910                           intcon2	equ	0xFF1
 36911                           intcon3	equ	0xFF0
 36912                           indf0	equ	0xFEF
 36913                           postinc0	equ	0xFEE
 36914                           fsr0h	equ	0xFEA
 36915                           fsr0l	equ	0xFE9
 36916                           wreg	equ	0xFE8
 36917                           indf1	equ	0xFE7
 36918                           postdec1	equ	0xFE5
 36919                           plusw1	equ	0xFE3
 36920                           fsr1h	equ	0xFE2
 36921                           fsr1l	equ	0xFE1
 36922                           indf2	equ	0xFDF
 36923                           postinc2	equ	0xFDE
 36924                           postdec2	equ	0xFDD
 36925                           plusw2	equ	0xFDB
 36926                           fsr2h	equ	0xFDA
 36927                           fsr2l	equ	0xFD9
 36928                           status	equ	0xFD8
 36929                           
 36930 ;; *************** function _memcpy *****************
 36931 ;; Defined at:
 36932 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 36933 ;; Parameters:    Size  Location     Type
 36934 ;;  d1              2    0[COMRAM] PTR void 
 36935 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 36936 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 36937 ;;  s1              3    2[COMRAM] PTR const void 
 36938 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 36939 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 36940 ;;		 -> SetupPkt(8), 
 36941 ;;  n               2    5[COMRAM] unsigned int 
 36942 ;; Auto vars:     Size  Location     Type
 36943 ;;  s               3    7[COMRAM] PTR const unsigned char 
 36944 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 36945 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 36946 ;;		 -> SetupPkt(8), 
 36947 ;;  d               2   10[COMRAM] PTR unsigned char 
 36948 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 36949 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 36950 ;;  tmp             1   12[COMRAM] unsigned char 
 36951 ;; Return value:  Size  Location     Type
 36952 ;;                  2    0[COMRAM] PTR void 
 36953 ;; Registers used:
 36954 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36955 ;; Tracked objects:
 36956 ;;		On entry : 0/0
 36957 ;;		On exit  : 0/0
 36958 ;;		Unchanged: 0/0
 36959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36960 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36961 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36963 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36964 ;;Total ram usage:       13 bytes
 36965 ;; Hardware stack levels used:    1
 36966 ;; This function calls:
 36967 ;;		Nothing
 36968 ;; This function is called by:
 36969 ;;		_USBCtrlEPService
 36970 ;;		_MSDProcessCommandMediaPresent
 36971 ;;		__flash_set_page_size
 36972 ;;		_fat_create_file
 36973 ;;		_internalFlash_read
 36974 ;;		_api_prepare
 36975 ;; This function uses a non-reentrant model
 36976 ;;
 36977                           
 36978                           	psect	text183
 36979  0075E4                     __ptext183:
 36980                           	opt stack 0
 36981  0075E4                     _memcpy:
 36982                           	opt stack 27
 36983                           
 36984                           ;incstack = 0
 36985  0075E4  C003  F008         	movff	memcpy@s1,memcpy@s
 36986  0075E8  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 36987  0075EC  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 36988  0075F0  C001  F00B         	movff	memcpy@d1,memcpy@d
 36989  0075F4  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 36990  0075F8  D01F               	goto	l3590
 36991  0075FA                     l10970:
 36992  0075FA  C008  FFF6         	movff	memcpy@s,tblptrl
 36993  0075FE  C009  FFF7         	movff	memcpy@s+1,tblptrh
 36994  007602  C00A  FFF8         	movff	memcpy@s+2,tblptru
 36995  007606  BAF8               	btfsc	tblptru,5,c
 36996  007608  D003               	bra	u7807
 36997  00760A  0008               	tblrd		*
 36998  00760C  50F5               	movf	tablat,w,c
 36999  00760E  D005               	bra	u7800
 37000  007610                     u7807:
 37001  007610  CFF6 FFE9          	movff	tblptrl,fsr0l
 37002  007614  CFF7 FFEA          	movff	tblptrh,fsr0h
 37003  007618  50EF               	movf	indf0,w,c
 37004  00761A                     u7800:
 37005  00761A  6E0D               	movwf	memcpy@tmp,c
 37006  00761C  0E01               	movlw	1
 37007  00761E  2608               	addwf	memcpy@s,f,c
 37008  007620  0E00               	movlw	0
 37009  007622  2209               	addwfc	memcpy@s+1,f,c
 37010  007624  0E00               	movlw	0
 37011  007626  220A               	addwfc	memcpy@s+2,f,c
 37012  007628  C00B  FFD9         	movff	memcpy@d,fsr2l
 37013  00762C  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 37014  007630  C00D  FFDF         	movff	memcpy@tmp,indf2
 37015  007634  4A0B               	infsnz	memcpy@d,f,c
 37016  007636  2A0C               	incf	memcpy@d+1,f,c
 37017  007638                     l3590:
 37018  007638  0606               	decf	memcpy@n,f,c
 37019  00763A  A0D8               	btfss	status,0,c
 37020  00763C  0607               	decf	memcpy@n+1,f,c
 37021  00763E  2806               	incf	memcpy@n,w,c
 37022  007640  E1DC               	bnz	l10970
 37023  007642  2807               	incf	memcpy@n+1,w,c
 37024  007644  B4D8               	btfsc	status,2,c
 37025  007646  0012               	return	
 37026  007648  D7D8               	goto	l3591
 37027  00764A                     __end_of_memcpy:
 37028                           	opt stack 0
 37029                           tosu	equ	0xFFF
 37030                           tosh	equ	0xFFE
 37031                           tosl	equ	0xFFD
 37032                           pclath	equ	0xFFA
 37033                           tblptru	equ	0xFF8
 37034                           tblptrh	equ	0xFF7
 37035                           tblptrl	equ	0xFF6
 37036                           tablat	equ	0xFF5
 37037                           prodh	equ	0xFF4
 37038                           prodl	equ	0xFF3
 37039                           intcon	equ	0xFF2
 37040                           intcon2	equ	0xFF1
 37041                           intcon3	equ	0xFF0
 37042                           indf0	equ	0xFEF
 37043                           postinc0	equ	0xFEE
 37044                           fsr0h	equ	0xFEA
 37045                           fsr0l	equ	0xFE9
 37046                           wreg	equ	0xFE8
 37047                           indf1	equ	0xFE7
 37048                           postdec1	equ	0xFE5
 37049                           plusw1	equ	0xFE3
 37050                           fsr1h	equ	0xFE2
 37051                           fsr1l	equ	0xFE1
 37052                           indf2	equ	0xFDF
 37053                           postinc2	equ	0xFDE
 37054                           postdec2	equ	0xFDD
 37055                           plusw2	equ	0xFDB
 37056                           fsr2h	equ	0xFDA
 37057                           fsr2l	equ	0xFD9
 37058                           status	equ	0xFD8
 37059                           
 37060 ;; *************** function _fat_get_empty_clusters *****************
 37061 ;; Defined at:
 37062 ;;		line 135 in file "fat16.c"
 37063 ;; Parameters:    Size  Location     Type
 37064 ;;  maximum         2   47[COMRAM] unsigned int 
 37065 ;; Auto vars:     Size  Location     Type
 37066 ;;  cluster         2   57[COMRAM] unsigned int 
 37067 ;;  empty_cluste    2   55[COMRAM] unsigned int 
 37068 ;;  value           2   53[COMRAM] unsigned int 
 37069 ;;  offset          2   51[COMRAM] unsigned int 
 37070 ;;  fat_sector      2   49[COMRAM] unsigned int 
 37071 ;; Return value:  Size  Location     Type
 37072 ;;                  2   47[COMRAM] unsigned int 
 37073 ;; Registers used:
 37074 ;;		wreg, status,2, status,0, cstack
 37075 ;; Tracked objects:
 37076 ;;		On entry : 0/0
 37077 ;;		On exit  : 0/0
 37078 ;;		Unchanged: 0/0
 37079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37081 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37083 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37084 ;;Total ram usage:       12 bytes
 37085 ;; Hardware stack levels used:    1
 37086 ;; Hardware stack levels required when called:    5
 37087 ;; This function calls:
 37088 ;;		_flash_partial_read
 37089 ;; This function is called by:
 37090 ;;		_fat_create_file
 37091 ;; This function uses a non-reentrant model
 37092 ;;
 37093                           
 37094                           	psect	text184
 37095  006B8C                     __ptext184:
 37096                           	opt stack 0
 37097  006B8C                     _fat_get_empty_clusters:
 37098                           	opt stack 21
 37099                           
 37100                           ;fat16.c: 137: uint16_t empty_clusters = 0;
 37101                           
 37102                           ;incstack = 0
 37103  006B8C  0E00               	movlw	0
 37104  006B8E  6E39               	movwf	fat_get_empty_clusters@empty_clusters+1,c
 37105  006B90  0E00               	movlw	0
 37106  006B92  6E38               	movwf	fat_get_empty_clusters@empty_clusters,c
 37107                           
 37108                           ;fat16.c: 138: uint16_t cluster;;fat16.c: 139: uint16_t fat_sector;;fat16.c: 140: uint16
      +                          _t offset;;fat16.c: 141: uint16_t value;;fat16.c: 144: for(cluster=2; cluster<(8154+2); 
      +                          ++cluster)
 37109  006B94  0E00               	movlw	0
 37110  006B96  6E3B               	movwf	fat_get_empty_clusters@cluster+1,c
 37111  006B98  0E02               	movlw	2
 37112  006B9A  6E3A               	movwf	fat_get_empty_clusters@cluster,c
 37113  006B9C  D033               	goto	l11628
 37114  006B9E                     
 37115                           ;fat16.c: 145: {;fat16.c: 146: fat_sector = cluster>>8;
 37116  006B9E  503B               	movf	fat_get_empty_clusters@cluster+1,w,c
 37117  006BA0  6E32               	movwf	fat_get_empty_clusters@fat_sector,c
 37118  006BA2  6A33               	clrf	fat_get_empty_clusters@fat_sector+1,c
 37119                           
 37120                           ;fat16.c: 147: fat_sector += 2;
 37121  006BA4  0E02               	movlw	2
 37122  006BA6  2632               	addwf	fat_get_empty_clusters@fat_sector,f,c
 37123  006BA8  0E00               	movlw	0
 37124  006BAA  2233               	addwfc	fat_get_empty_clusters@fat_sector+1,f,c
 37125                           
 37126                           ;fat16.c: 148: offset = cluster & 0xFF;
 37127  006BAC  503A               	movf	fat_get_empty_clusters@cluster,w,c
 37128  006BAE  6E34               	movwf	fat_get_empty_clusters@offset,c
 37129  006BB0  6A35               	clrf	fat_get_empty_clusters@offset+1,c
 37130                           
 37131                           ;fat16.c: 149: offset <<= 1;
 37132  006BB2  90D8               	bcf	status,0,c
 37133  006BB4  3634               	rlcf	fat_get_empty_clusters@offset,f,c
 37134  006BB6  3635               	rlcf	fat_get_empty_clusters@offset+1,f,c
 37135                           
 37136                           ;fat16.c: 150: flash_partial_read(fat_sector, offset, 2, &value);
 37137  006BB8  C032  F028         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 37138  006BBC  C033  F029         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 37139  006BC0  C034  F02A         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 37140  006BC4  C035  F02B         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 37141  006BC8  0E00               	movlw	0
 37142  006BCA  6E2D               	movwf	flash_partial_read@length+1,c
 37143  006BCC  0E02               	movlw	2
 37144  006BCE  6E2C               	movwf	flash_partial_read@length,c
 37145  006BD0  0E36               	movlw	low fat_get_empty_clusters@value
 37146  006BD2  6E2E               	movwf	flash_partial_read@data,c
 37147  006BD4  0E00               	movlw	high fat_get_empty_clusters@value
 37148  006BD6  6E2F               	movwf	flash_partial_read@data+1,c
 37149  006BD8  ECFA  F041         	call	_flash_partial_read	;wreg free
 37150                           
 37151                           ;fat16.c: 151: if(value==0x0000)
 37152  006BDC  5036               	movf	fat_get_empty_clusters@value,w,c
 37153  006BDE  1037               	iorwf	fat_get_empty_clusters@value+1,w,c
 37154  006BE0  A4D8               	btfss	status,2,c
 37155  006BE2  D00E               	goto	l1939
 37156                           
 37157                           ;fat16.c: 152: {;fat16.c: 153: ++empty_clusters;
 37158  006BE4  4A38               	infsnz	fat_get_empty_clusters@empty_clusters,f,c
 37159  006BE6  2A39               	incf	fat_get_empty_clusters@empty_clusters+1,f,c
 37160                           
 37161                           ;fat16.c: 154: if(empty_clusters==maximum)
 37162  006BE8  5030               	movf	fat_get_empty_clusters@maximum,w,c
 37163  006BEA  1838               	xorwf	fat_get_empty_clusters@empty_clusters,w,c
 37164  006BEC  E109               	bnz	l11626
 37165  006BEE  5031               	movf	fat_get_empty_clusters@maximum+1,w,c
 37166  006BF0  1839               	xorwf	fat_get_empty_clusters@empty_clusters+1,w,c
 37167  006BF2  A4D8               	btfss	status,2,c
 37168  006BF4  D005               	goto	l1939
 37169                           
 37170                           ;fat16.c: 155: {;fat16.c: 156: return empty_clusters;
 37171  006BF6  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 37172  006BFA  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 37173  006BFE  0012               	return	
 37174  006C00                     l1939:
 37175  006C00                     l11626:
 37176  006C00  4A3A               	infsnz	fat_get_empty_clusters@cluster,f,c
 37177  006C02  2A3B               	incf	fat_get_empty_clusters@cluster+1,f,c
 37178  006C04                     l11628:
 37179  006C04  0EDC               	movlw	220
 37180  006C06  5C3A               	subwf	fat_get_empty_clusters@cluster,w,c
 37181  006C08  0E1F               	movlw	31
 37182  006C0A  583B               	subwfb	fat_get_empty_clusters@cluster+1,w,c
 37183  006C0C  A0D8               	btfss	status,0,c
 37184  006C0E  D7C7               	goto	l1936
 37185                           
 37186                           ;fat16.c: 157: };fat16.c: 158: };fat16.c: 159: };fat16.c: 160: return empty_clusters;
 37187  006C10  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 37188  006C14  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 37189  006C18  0012               	return		;funcret
 37190  006C1A                     __end_of_fat_get_empty_clusters:
 37191                           	opt stack 0
 37192                           tosu	equ	0xFFF
 37193                           tosh	equ	0xFFE
 37194                           tosl	equ	0xFFD
 37195                           pclath	equ	0xFFA
 37196                           tblptru	equ	0xFF8
 37197                           tblptrh	equ	0xFF7
 37198                           tblptrl	equ	0xFF6
 37199                           tablat	equ	0xFF5
 37200                           prodh	equ	0xFF4
 37201                           prodl	equ	0xFF3
 37202                           intcon	equ	0xFF2
 37203                           intcon2	equ	0xFF1
 37204                           intcon3	equ	0xFF0
 37205                           indf0	equ	0xFEF
 37206                           postinc0	equ	0xFEE
 37207                           fsr0h	equ	0xFEA
 37208                           fsr0l	equ	0xFE9
 37209                           wreg	equ	0xFE8
 37210                           indf1	equ	0xFE7
 37211                           postdec1	equ	0xFE5
 37212                           plusw1	equ	0xFE3
 37213                           fsr1h	equ	0xFE2
 37214                           fsr1l	equ	0xFE1
 37215                           indf2	equ	0xFDF
 37216                           postinc2	equ	0xFDE
 37217                           postdec2	equ	0xFDD
 37218                           plusw2	equ	0xFDB
 37219                           fsr2h	equ	0xFDA
 37220                           fsr2l	equ	0xFD9
 37221                           status	equ	0xFD8
 37222                           
 37223 ;; *************** function _fat_find_file *****************
 37224 ;; Defined at:
 37225 ;;		line 255 in file "fat16.c"
 37226 ;; Parameters:    Size  Location     Type
 37227 ;;  name            2   47[COMRAM] PTR unsigned char 
 37228 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), ReceivedDataBuffer(64), RAM(3759), 
 37229 ;;  extension       2   49[COMRAM] PTR unsigned char 
 37230 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), ReceivedDataBuffer(64), RAM(3759), 
 37231 ;; Auto vars:     Size  Location     Type
 37232 ;;  buffer         11   51[COMRAM] unsigned char [11]
 37233 ;;  offset          2   65[COMRAM] unsigned int 
 37234 ;;  sector          2   63[COMRAM] unsigned int 
 37235 ;;  slot            1   62[COMRAM] unsigned char 
 37236 ;; Return value:  Size  Location     Type
 37237 ;;                  1    wreg      unsigned char 
 37238 ;; Registers used:
 37239 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37240 ;; Tracked objects:
 37241 ;;		On entry : 0/0
 37242 ;;		On exit  : 0/0
 37243 ;;		Unchanged: 0/0
 37244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37246 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37248 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37249 ;;Total ram usage:       20 bytes
 37250 ;; Hardware stack levels used:    1
 37251 ;; Hardware stack levels required when called:    5
 37252 ;; This function calls:
 37253 ;;		_flash_partial_read
 37254 ;;		_strncmp
 37255 ;; This function is called by:
 37256 ;;		_fat_create_file
 37257 ;;		__bootloader_find_file
 37258 ;;		__fill_buffer_find_file
 37259 ;; This function uses a non-reentrant model
 37260 ;;
 37261                           
 37262                           	psect	text185
 37263  005EE6                     __ptext185:
 37264                           	opt stack 0
 37265  005EE6                     _fat_find_file:
 37266                           	opt stack 23
 37267                           
 37268                           ;fat16.c: 257: uint8_t slot;;fat16.c: 258: uint16_t sector;;fat16.c: 259: uint16_t offse
      +                          t;;fat16.c: 260: uint8_t buffer[11];;fat16.c: 261: slot = 0;
 37269                           
 37270                           ;incstack = 0
 37271  005EE6  0E00               	movlw	0
 37272  005EE8  6E3F               	movwf	fat_find_file@slot,c
 37273                           
 37274                           ;fat16.c: 262: for(sector = 34; sector <= 37; ++sector)
 37275  005EEA  0E00               	movlw	0
 37276  005EEC  6E41               	movwf	fat_find_file@sector+1,c
 37277  005EEE  0E22               	movlw	34
 37278  005EF0  6E40               	movwf	fat_find_file@sector,c
 37279  005EF2                     l11674:
 37280  005EF2  5041               	movf	fat_find_file@sector+1,w,c
 37281  005EF4  E156               	bnz	l11716
 37282  005EF6  0E26               	movlw	38
 37283  005EF8  5C40               	subwf	fat_find_file@sector,w,c
 37284  005EFA  B0D8               	btfsc	status,0,c
 37285  005EFC  D052               	goto	u8760
 37286                           
 37287                           ;fat16.c: 263: {;fat16.c: 264: for(offset = 0; offset<512; offset += 32)
 37288  005EFE  0E00               	movlw	0
 37289  005F00  6E43               	movwf	fat_find_file@offset+1,c
 37290  005F02  0E00               	movlw	0
 37291  005F04  6E42               	movwf	fat_find_file@offset,c
 37292  005F06                     l11680:
 37293  005F06  0E02               	movlw	2
 37294  005F08  5C43               	subwf	fat_find_file@offset+1,w,c
 37295  005F0A  B0D8               	btfsc	status,0,c
 37296  005F0C  D047               	goto	u8750
 37297                           
 37298                           ;fat16.c: 265: {;fat16.c: 266: flash_partial_read(sector, offset, 11, &buffer);
 37299  005F0E  C040  F028         	movff	fat_find_file@sector,flash_partial_read@page
 37300  005F12  C041  F029         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 37301  005F16  C042  F02A         	movff	fat_find_file@offset,flash_partial_read@start
 37302  005F1A  C043  F02B         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 37303  005F1E  0E00               	movlw	0
 37304  005F20  6E2D               	movwf	flash_partial_read@length+1,c
 37305  005F22  0E0B               	movlw	11
 37306  005F24  6E2C               	movwf	flash_partial_read@length,c
 37307  005F26  0E34               	movlw	low fat_find_file@buffer
 37308  005F28  6E2E               	movwf	flash_partial_read@data,c
 37309  005F2A  0E00               	movlw	high fat_find_file@buffer
 37310  005F2C  6E2F               	movwf	flash_partial_read@data+1,c
 37311  005F2E  ECFA  F041         	call	_flash_partial_read	;wreg free
 37312                           
 37313                           ;fat16.c: 267: if(buffer[0]==0x00)
 37314  005F32  5034               	movf	fat_find_file@buffer,w,c
 37315  005F34  A4D8               	btfss	status,2,c
 37316  005F36  D002               	goto	l1968
 37317                           
 37318                           ;fat16.c: 268: {;fat16.c: 271: return 0xFF;
 37319  005F38  0EFF               	movlw	255
 37320  005F3A  0012               	return	
 37321  005F3C                     l1968:
 37322                           
 37323                           ;fat16.c: 273: else if(buffer[0]==0xE5)
 37324  005F3C  0EE5               	movlw	229
 37325  005F3E  1834               	xorwf	fat_find_file@buffer,w,c
 37326  005F40  B4D8               	btfsc	status,2,c
 37327  005F42  D026               	goto	l1974
 37328                           
 37329                           ;fat16.c: 279: else;fat16.c: 280: {;fat16.c: 282: if(strncmp(name, &buffer[0], 8) == 0)
 37330                           
 37331                           ;fat16.c: 274: {;fat16.c: 278: }
 37332  005F44  C030  F001         	movff	fat_find_file@name,strncmp@s1
 37333  005F48  C031  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 37334  005F4C  0E34               	movlw	low fat_find_file@buffer
 37335  005F4E  6E03               	movwf	strncmp@s2,c
 37336  005F50  0E00               	movlw	high fat_find_file@buffer
 37337  005F52  6E04               	movwf	strncmp@s2+1,c
 37338  005F54  0E00               	movlw	0
 37339  005F56  6E06               	movwf	strncmp@len+1,c
 37340  005F58  0E08               	movlw	8
 37341  005F5A  6E05               	movwf	strncmp@len,c
 37342  005F5C  EC12  F02F         	call	_strncmp	;wreg free
 37343  005F60  5001               	movf	?_strncmp,w,c
 37344  005F62  1002               	iorwf	?_strncmp+1,w,c
 37345  005F64  A4D8               	btfss	status,2,c
 37346  005F66  D014               	goto	l1974
 37347                           
 37348                           ;fat16.c: 283: {;fat16.c: 285: if(strncmp(extension, &buffer[8], 3) == 0)
 37349  005F68  C032  F001         	movff	fat_find_file@extension,strncmp@s1
 37350  005F6C  C033  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 37351  005F70  0E3C               	movlw	low (fat_find_file@buffer+8)
 37352  005F72  6E03               	movwf	strncmp@s2,c
 37353  005F74  0E00               	movlw	high (fat_find_file@buffer+8)
 37354  005F76  6E04               	movwf	strncmp@s2+1,c
 37355  005F78  0E00               	movlw	0
 37356  005F7A  6E06               	movwf	strncmp@len+1,c
 37357  005F7C  0E03               	movlw	3
 37358  005F7E  6E05               	movwf	strncmp@len,c
 37359  005F80  EC12  F02F         	call	_strncmp	;wreg free
 37360  005F84  5001               	movf	?_strncmp,w,c
 37361  005F86  1002               	iorwf	?_strncmp+1,w,c
 37362  005F88  A4D8               	btfss	status,2,c
 37363  005F8A  D002               	goto	l1974
 37364                           
 37365                           ;fat16.c: 286: {;fat16.c: 289: return slot;
 37366  005F8C  503F               	movf	fat_find_file@slot,w,c
 37367  005F8E  0012               	return	
 37368  005F90                     l1974:
 37369                           
 37370                           ;fat16.c: 290: };fat16.c: 291: };fat16.c: 292: };fat16.c: 293: ++slot;
 37371  005F90  2A3F               	incf	fat_find_file@slot,f,c
 37372  005F92  0E20               	movlw	32
 37373  005F94  2642               	addwf	fat_find_file@offset,f,c
 37374  005F96  0E00               	movlw	0
 37375  005F98  2243               	addwfc	fat_find_file@offset+1,f,c
 37376  005F9A  D7B5               	goto	l11680
 37377  005F9C                     u8750:
 37378  005F9C  4A40               	infsnz	fat_find_file@sector,f,c
 37379  005F9E  2A41               	incf	fat_find_file@sector+1,f,c
 37380  005FA0  D7A8               	goto	l11674
 37381  005FA2                     u8760:
 37382  005FA2                     l11716:
 37383                           
 37384                           ;fat16.c: 294: };fat16.c: 295: };fat16.c: 296: return 0xFF;
 37385  005FA2  0EFF               	movlw	255
 37386  005FA4  0012               	return	
 37387  005FA6                     __end_of_fat_find_file:
 37388                           	opt stack 0
 37389                           tosu	equ	0xFFF
 37390                           tosh	equ	0xFFE
 37391                           tosl	equ	0xFFD
 37392                           pclath	equ	0xFFA
 37393                           tblptru	equ	0xFF8
 37394                           tblptrh	equ	0xFF7
 37395                           tblptrl	equ	0xFF6
 37396                           tablat	equ	0xFF5
 37397                           prodh	equ	0xFF4
 37398                           prodl	equ	0xFF3
 37399                           intcon	equ	0xFF2
 37400                           intcon2	equ	0xFF1
 37401                           intcon3	equ	0xFF0
 37402                           indf0	equ	0xFEF
 37403                           postinc0	equ	0xFEE
 37404                           fsr0h	equ	0xFEA
 37405                           fsr0l	equ	0xFE9
 37406                           wreg	equ	0xFE8
 37407                           indf1	equ	0xFE7
 37408                           postdec1	equ	0xFE5
 37409                           plusw1	equ	0xFE3
 37410                           fsr1h	equ	0xFE2
 37411                           fsr1l	equ	0xFE1
 37412                           indf2	equ	0xFDF
 37413                           postinc2	equ	0xFDE
 37414                           postdec2	equ	0xFDD
 37415                           plusw2	equ	0xFDB
 37416                           fsr2h	equ	0xFDA
 37417                           fsr2l	equ	0xFD9
 37418                           status	equ	0xFD8
 37419                           
 37420 ;; *************** function _strncmp *****************
 37421 ;; Defined at:
 37422 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 37423 ;; Parameters:    Size  Location     Type
 37424 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 37425 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), ReceivedDataBuffer(64), 
 37426 ;;		 -> RAM(3759), 
 37427 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 37428 ;;		 -> fat_find_file@buffer(11), 
 37429 ;;  len             2    4[COMRAM] unsigned int 
 37430 ;; Auto vars:     Size  Location     Type
 37431 ;;		None
 37432 ;; Return value:  Size  Location     Type
 37433 ;;                  2    0[COMRAM] int 
 37434 ;; Registers used:
 37435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37436 ;; Tracked objects:
 37437 ;;		On entry : 0/0
 37438 ;;		On exit  : 0/0
 37439 ;;		Unchanged: 0/0
 37440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37441 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37443 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37444 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37445 ;;Total ram usage:        9 bytes
 37446 ;; Hardware stack levels used:    1
 37447 ;; This function calls:
 37448 ;;		Nothing
 37449 ;; This function is called by:
 37450 ;;		_fat_find_file
 37451 ;; This function uses a non-reentrant model
 37452 ;;
 37453                           
 37454                           	psect	text186
 37455  005E24                     __ptext186:
 37456                           	opt stack 0
 37457  005E24                     _strncmp:
 37458                           	opt stack 27
 37459                           
 37460                           ;incstack = 0
 37461  005E24  D053               	goto	l3608
 37462  005E26                     l10872:
 37463  005E26  C001  FFF6         	movff	strncmp@s1,tblptrl
 37464  005E2A  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37465  005E2E  6AF8               	clrf	tblptru,c
 37466  005E30  0E0E               	movlw	(high __ramtop+-1)
 37467  005E32  64F7               	cpfsgt	tblptrh,c
 37468  005E34  D003               	bra	u7667
 37469  005E36  0008               	tblrd		*
 37470  005E38  50F5               	movf	tablat,w,c
 37471  005E3A  D005               	bra	u7660
 37472  005E3C                     u7667:
 37473  005E3C  CFF6 FFE9          	movff	tblptrl,fsr0l
 37474  005E40  CFF7 FFEA          	movff	tblptrh,fsr0h
 37475  005E44  50EF               	movf	indf0,w,c
 37476  005E46                     u7660:
 37477  005E46  0900               	iorlw	0
 37478  005E48  B4D8               	btfsc	status,2,c
 37479  005E4A  D019               	goto	u7680
 37480  005E4C  C003  FFD9         	movff	strncmp@s2,fsr2l
 37481  005E50  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 37482  005E54  50DF               	movf	indf2,w,c
 37483  005E56  6E07               	movwf	??_strncmp& (0+255),c
 37484  005E58  C001  FFF6         	movff	strncmp@s1,tblptrl
 37485  005E5C  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37486  005E60  6AF8               	clrf	tblptru,c
 37487  005E62  0E0E               	movlw	(high __ramtop+-1)
 37488  005E64  64F7               	cpfsgt	tblptrh,c
 37489  005E66  D003               	bra	u7687
 37490  005E68  0008               	tblrd		*
 37491  005E6A  50F5               	movf	tablat,w,c
 37492  005E6C  D005               	bra	u7685
 37493  005E6E                     u7687:
 37494  005E6E  CFF6 FFE9          	movff	tblptrl,fsr0l
 37495  005E72  CFF7 FFEA          	movff	tblptrh,fsr0h
 37496  005E76  50EF               	movf	indf0,w,c
 37497  005E78                     u7685:
 37498  005E78  1807               	xorwf	??_strncmp,w,c
 37499  005E7A  B4D8               	btfsc	status,2,c
 37500  005E7C  D023               	goto	l3610
 37501  005E7E                     u7680:
 37502  005E7E  C003  FFD9         	movff	strncmp@s2,fsr2l
 37503  005E82  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 37504  005E86  50DF               	movf	indf2,w,c
 37505  005E88  6E07               	movwf	??_strncmp& (0+255),c
 37506  005E8A  6A08               	clrf	(??_strncmp+1)& (0+255),c
 37507  005E8C  1E07               	comf	??_strncmp,f,c
 37508  005E8E  1E08               	comf	??_strncmp+1,f,c
 37509  005E90  4A07               	infsnz	??_strncmp,f,c
 37510  005E92  2A08               	incf	??_strncmp+1,f,c
 37511  005E94  C001  FFF6         	movff	strncmp@s1,tblptrl
 37512  005E98  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37513  005E9C  6AF8               	clrf	tblptru,c
 37514  005E9E  0E0E               	movlw	(high __ramtop+-1)
 37515  005EA0  64F7               	cpfsgt	tblptrh,c
 37516  005EA2  D003               	bra	u7697
 37517  005EA4  0008               	tblrd		*
 37518  005EA6  50F5               	movf	tablat,w,c
 37519  005EA8  D005               	bra	u7690
 37520  005EAA                     u7697:
 37521  005EAA  CFF6 FFE9          	movff	tblptrl,fsr0l
 37522  005EAE  CFF7 FFEA          	movff	tblptrh,fsr0h
 37523  005EB2  50EF               	movf	indf0,w,c
 37524  005EB4                     u7690:
 37525  005EB4  6E09               	movwf	(??_strncmp+2)& (0+255),c
 37526  005EB6  5009               	movf	??_strncmp+2,w,c
 37527  005EB8  2407               	addwf	??_strncmp,w,c
 37528  005EBA  6E01               	movwf	?_strncmp,c
 37529  005EBC  0E00               	movlw	0
 37530  005EBE  2008               	addwfc	??_strncmp+1,w,c
 37531  005EC0  6E02               	movwf	?_strncmp+1,c
 37532  005EC2  0012               	return	
 37533  005EC4                     l3610:
 37534  005EC4  4A01               	infsnz	strncmp@s1,f,c
 37535  005EC6  2A02               	incf	strncmp@s1+1,f,c
 37536  005EC8  4A03               	infsnz	strncmp@s2,f,c
 37537  005ECA  2A04               	incf	strncmp@s2+1,f,c
 37538  005ECC                     l3608:
 37539  005ECC  0605               	decf	strncmp@len,f,c
 37540  005ECE  A0D8               	btfss	status,0,c
 37541  005ED0  0606               	decf	strncmp@len+1,f,c
 37542  005ED2  2805               	incf	strncmp@len,w,c
 37543  005ED4  E1A8               	bnz	l10872
 37544  005ED6  2806               	incf	strncmp@len+1,w,c
 37545  005ED8  A4D8               	btfss	status,2,c
 37546  005EDA  D7A5               	goto	l3609
 37547  005EDC  0E00               	movlw	0
 37548  005EDE  6E02               	movwf	?_strncmp+1,c
 37549  005EE0  0E00               	movlw	0
 37550  005EE2  6E01               	movwf	?_strncmp,c
 37551  005EE4  0012               	return	
 37552  005EE6                     __end_of_strncmp:
 37553                           	opt stack 0
 37554                           tosu	equ	0xFFF
 37555                           tosh	equ	0xFFE
 37556                           tosl	equ	0xFFD
 37557                           pclath	equ	0xFFA
 37558                           tblptru	equ	0xFF8
 37559                           tblptrh	equ	0xFF7
 37560                           tblptrl	equ	0xFF6
 37561                           tablat	equ	0xFF5
 37562                           prodh	equ	0xFF4
 37563                           prodl	equ	0xFF3
 37564                           intcon	equ	0xFF2
 37565                           intcon2	equ	0xFF1
 37566                           intcon3	equ	0xFF0
 37567                           indf0	equ	0xFEF
 37568                           postinc0	equ	0xFEE
 37569                           fsr0h	equ	0xFEA
 37570                           fsr0l	equ	0xFE9
 37571                           wreg	equ	0xFE8
 37572                           indf1	equ	0xFE7
 37573                           postdec1	equ	0xFE5
 37574                           plusw1	equ	0xFE3
 37575                           fsr1h	equ	0xFE2
 37576                           fsr1l	equ	0xFE1
 37577                           indf2	equ	0xFDF
 37578                           postinc2	equ	0xFDE
 37579                           postdec2	equ	0xFDD
 37580                           plusw2	equ	0xFDB
 37581                           fsr2h	equ	0xFDA
 37582                           fsr2l	equ	0xFD9
 37583                           status	equ	0xFD8
 37584                           
 37585 ;; *************** function __get_available_root_entry *****************
 37586 ;; Defined at:
 37587 ;;		line 94 in file "fat16.c"
 37588 ;; Parameters:    Size  Location     Type
 37589 ;;		None
 37590 ;; Auto vars:     Size  Location     Type
 37591 ;;  file_number     1   54[COMRAM] unsigned char 
 37592 ;; Return value:  Size  Location     Type
 37593 ;;                  1    wreg      unsigned char 
 37594 ;; Registers used:
 37595 ;;		wreg, status,2, status,0, cstack
 37596 ;; Tracked objects:
 37597 ;;		On entry : 0/0
 37598 ;;		On exit  : 0/0
 37599 ;;		Unchanged: 0/0
 37600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37605 ;;Total ram usage:        1 bytes
 37606 ;; Hardware stack levels used:    1
 37607 ;; Hardware stack levels required when called:    6
 37608 ;; This function calls:
 37609 ;;		__root_is_available
 37610 ;; This function is called by:
 37611 ;;		_fat_create_file
 37612 ;; This function uses a non-reentrant model
 37613 ;;
 37614                           
 37615                           	psect	text187
 37616  00869A                     __ptext187:
 37617                           	opt stack 0
 37618  00869A                     __get_available_root_entry:
 37619                           	opt stack 20
 37620                           
 37621                           ;fat16.c: 96: uint8_t file_number;;fat16.c: 97: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 37622                           
 37623                           ;incstack = 0
 37624  00869A  0E00               	movlw	0
 37625  00869C  6E37               	movwf	__get_available_root_entry@file_number,c
 37626  00869E                     l11552:
 37627  00869E  0E3F               	movlw	63
 37628  0086A0  6437               	cpfsgt	__get_available_root_entry@file_number,c
 37629  0086A2  D001               	goto	l1923
 37630  0086A4  D00A               	goto	u8570
 37631  0086A6                     l1923:
 37632                           
 37633                           ;fat16.c: 98: {;fat16.c: 99: if(_root_is_available(file_number))
 37634  0086A6  5037               	movf	__get_available_root_entry@file_number,w,c
 37635  0086A8  EC96  F038         	call	__root_is_available
 37636  0086AC  0900               	iorlw	0
 37637  0086AE  B4D8               	btfsc	status,2,c
 37638  0086B0  D002               	goto	l1925
 37639                           
 37640                           ;fat16.c: 100: {;fat16.c: 101: return file_number;
 37641  0086B2  5037               	movf	__get_available_root_entry@file_number,w,c
 37642  0086B4  0012               	return	
 37643  0086B6                     l1925:
 37644  0086B6  2A37               	incf	__get_available_root_entry@file_number,f,c
 37645  0086B8  D7F2               	goto	l11552
 37646  0086BA                     u8570:
 37647                           
 37648                           ;fat16.c: 102: };fat16.c: 103: };fat16.c: 104: return 0xFF;
 37649  0086BA  0EFF               	movlw	255
 37650  0086BC  0012               	return	
 37651  0086BE                     __end_of__get_available_root_entry:
 37652                           	opt stack 0
 37653                           tosu	equ	0xFFF
 37654                           tosh	equ	0xFFE
 37655                           tosl	equ	0xFFD
 37656                           pclath	equ	0xFFA
 37657                           tblptru	equ	0xFF8
 37658                           tblptrh	equ	0xFF7
 37659                           tblptrl	equ	0xFF6
 37660                           tablat	equ	0xFF5
 37661                           prodh	equ	0xFF4
 37662                           prodl	equ	0xFF3
 37663                           intcon	equ	0xFF2
 37664                           intcon2	equ	0xFF1
 37665                           intcon3	equ	0xFF0
 37666                           indf0	equ	0xFEF
 37667                           postinc0	equ	0xFEE
 37668                           fsr0h	equ	0xFEA
 37669                           fsr0l	equ	0xFE9
 37670                           wreg	equ	0xFE8
 37671                           indf1	equ	0xFE7
 37672                           postdec1	equ	0xFE5
 37673                           plusw1	equ	0xFE3
 37674                           fsr1h	equ	0xFE2
 37675                           fsr1l	equ	0xFE1
 37676                           indf2	equ	0xFDF
 37677                           postinc2	equ	0xFDE
 37678                           postdec2	equ	0xFDD
 37679                           plusw2	equ	0xFDB
 37680                           fsr2h	equ	0xFDA
 37681                           fsr2l	equ	0xFD9
 37682                           status	equ	0xFD8
 37683                           
 37684 ;; *************** function __parse_file_append *****************
 37685 ;; Defined at:
 37686 ;;		line 587 in file "api.c"
 37687 ;; Parameters:    Size  Location     Type
 37688 ;;  data            2   74[COMRAM] PTR unsigned char 
 37689 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37690 ;; Auto vars:     Size  Location     Type
 37691 ;;		None
 37692 ;; Return value:  Size  Location     Type
 37693 ;;                  1    wreg      unsigned char 
 37694 ;; Registers used:
 37695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37696 ;; Tracked objects:
 37697 ;;		On entry : 0/0
 37698 ;;		On exit  : 0/0
 37699 ;;		Unchanged: 0/0
 37700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37704 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37705 ;;Total ram usage:        3 bytes
 37706 ;; Hardware stack levels used:    1
 37707 ;; Hardware stack levels required when called:    8
 37708 ;; This function calls:
 37709 ;;		_fat_append_to_file
 37710 ;; This function is called by:
 37711 ;;		__parse_command_long
 37712 ;; This function uses a non-reentrant model
 37713 ;;
 37714                           
 37715                           	psect	text188
 37716  006EC2                     __ptext188:
 37717                           	opt stack 0
 37718  006EC2                     __parse_file_append:
 37719                           	opt stack 20
 37720                           
 37721                           ;api.c: 590: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 37722                           
 37723                           ;incstack = 0
 37724  006EC2  C04B  FFD9         	movff	__parse_file_append@data,fsr2l
 37725  006EC6  C04C  FFDA         	movff	__parse_file_append@data+1,fsr2h
 37726  006ECA  0E54               	movlw	84
 37727  006ECC  18DE               	xorwf	postinc2,w,c
 37728  006ECE  A4D8               	btfss	status,2,c
 37729  006ED0  D014               	goto	u10540
 37730  006ED2  EE20 F003          	lfsr	2,3
 37731  006ED6  504B               	movf	__parse_file_append@data,w,c
 37732  006ED8  26D9               	addwf	fsr2l,f,c
 37733  006EDA  504C               	movf	__parse_file_append@data+1,w,c
 37734  006EDC  22DA               	addwfc	fsr2h,f,c
 37735  006EDE  0EFE               	movlw	254
 37736  006EE0  18DE               	xorwf	postinc2,w,c
 37737  006EE2  A4D8               	btfss	status,2,c
 37738  006EE4  D00A               	goto	u10540
 37739  006EE6  EE20 F004          	lfsr	2,4
 37740  006EEA  504B               	movf	__parse_file_append@data,w,c
 37741  006EEC  26D9               	addwf	fsr2l,f,c
 37742  006EEE  504C               	movf	__parse_file_append@data+1,w,c
 37743  006EF0  22DA               	addwfc	fsr2h,f,c
 37744  006EF2  0E4B               	movlw	75
 37745  006EF4  18DE               	xorwf	postinc2,w,c
 37746  006EF6  B4D8               	btfsc	status,2,c
 37747  006EF8  D002               	goto	l2746
 37748  006EFA                     u10540:
 37749                           
 37750                           ;api.c: 591: {;api.c: 593: return 65;
 37751  006EFA  0E41               	movlw	65
 37752  006EFC  0012               	return	
 37753  006EFE                     l2746:
 37754                           
 37755                           ;api.c: 594: };api.c: 597: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 37756  006EFE  EE20 F002          	lfsr	2,2
 37757  006F02  504B               	movf	__parse_file_append@data,w,c
 37758  006F04  26D9               	addwf	fsr2l,f,c
 37759  006F06  504C               	movf	__parse_file_append@data+1,w,c
 37760  006F08  22DA               	addwfc	fsr2h,f,c
 37761  006F0A  50DF               	movf	indf2,w,c
 37762  006F0C  6E4D               	movwf	??__parse_file_append& (0+255),c
 37763  006F0E  504D               	movf	??__parse_file_append,w,c
 37764  006F10  6E3F               	movwf	fat_append_to_file@number_of_bytes,c
 37765  006F12  6A40               	clrf	fat_append_to_file@number_of_bytes+1,c
 37766  006F14  0E05               	movlw	5
 37767  006F16  244B               	addwf	__parse_file_append@data,w,c
 37768  006F18  6E41               	movwf	fat_append_to_file@data,c
 37769  006F1A  0E00               	movlw	0
 37770  006F1C  204C               	addwfc	__parse_file_append@data+1,w,c
 37771  006F1E  6E42               	movwf	fat_append_to_file@data+1,c
 37772  006F20  EE20 F001          	lfsr	2,1
 37773  006F24  504B               	movf	__parse_file_append@data,w,c
 37774  006F26  26D9               	addwf	fsr2l,f,c
 37775  006F28  504C               	movf	__parse_file_append@data+1,w,c
 37776  006F2A  22DA               	addwfc	fsr2h,f,c
 37777  006F2C  50DF               	movf	indf2,w,c
 37778  006F2E  EC28  F013         	call	_fat_append_to_file
 37779                           
 37780                           ;api.c: 598: return data[2] + 5;
 37781  006F32  EE20 F002          	lfsr	2,2
 37782  006F36  504B               	movf	__parse_file_append@data,w,c
 37783  006F38  26D9               	addwf	fsr2l,f,c
 37784  006F3A  504C               	movf	__parse_file_append@data+1,w,c
 37785  006F3C  22DA               	addwfc	fsr2h,f,c
 37786  006F3E  50DF               	movf	indf2,w,c
 37787  006F40  0F05               	addlw	5
 37788  006F42  0012               	return	
 37789  006F44                     __end_of__parse_file_append:
 37790                           	opt stack 0
 37791                           tosu	equ	0xFFF
 37792                           tosh	equ	0xFFE
 37793                           tosl	equ	0xFFD
 37794                           pclath	equ	0xFFA
 37795                           tblptru	equ	0xFF8
 37796                           tblptrh	equ	0xFF7
 37797                           tblptrl	equ	0xFF6
 37798                           tablat	equ	0xFF5
 37799                           prodh	equ	0xFF4
 37800                           prodl	equ	0xFF3
 37801                           intcon	equ	0xFF2
 37802                           intcon2	equ	0xFF1
 37803                           intcon3	equ	0xFF0
 37804                           indf0	equ	0xFEF
 37805                           postinc0	equ	0xFEE
 37806                           fsr0h	equ	0xFEA
 37807                           fsr0l	equ	0xFE9
 37808                           wreg	equ	0xFE8
 37809                           indf1	equ	0xFE7
 37810                           postdec1	equ	0xFE5
 37811                           plusw1	equ	0xFE3
 37812                           fsr1h	equ	0xFE2
 37813                           fsr1l	equ	0xFE1
 37814                           indf2	equ	0xFDF
 37815                           postinc2	equ	0xFDE
 37816                           postdec2	equ	0xFDD
 37817                           plusw2	equ	0xFDB
 37818                           fsr2h	equ	0xFDA
 37819                           fsr2l	equ	0xFD9
 37820                           status	equ	0xFD8
 37821                           
 37822 ;; *************** function _fat_append_to_file *****************
 37823 ;; Defined at:
 37824 ;;		line 450 in file "fat16.c"
 37825 ;; Parameters:    Size  Location     Type
 37826 ;;  file_number     1    wreg     unsigned char 
 37827 ;;  number_of_by    2   62[COMRAM] unsigned int 
 37828 ;;  data            2   64[COMRAM] PTR unsigned char 
 37829 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37830 ;; Auto vars:     Size  Location     Type
 37831 ;;  file_number     1   12[BANK0 ] unsigned char 
 37832 ;;  root           32   19[BANK0 ] struct .
 37833 ;;  position        4   15[BANK0 ] unsigned long 
 37834 ;;  file_size       4    2[BANK0 ] unsigned long 
 37835 ;;  length          2   13[BANK0 ] unsigned int 
 37836 ;;  offset          2   10[BANK0 ] unsigned int 
 37837 ;;  fat_cluster     2    8[BANK0 ] unsigned int 
 37838 ;;  new_cluster     2    6[BANK0 ] unsigned int 
 37839 ;;  sector          2    0[BANK0 ] unsigned int 
 37840 ;; Return value:  Size  Location     Type
 37841 ;;                  1    wreg      unsigned char 
 37842 ;; Registers used:
 37843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37844 ;; Tracked objects:
 37845 ;;		On entry : 0/0
 37846 ;;		On exit  : 0/0
 37847 ;;		Unchanged: 0/0
 37848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37850 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37851 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37852 ;;      Totals:        12      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37853 ;;Total ram usage:       63 bytes
 37854 ;; Hardware stack levels used:    1
 37855 ;; Hardware stack levels required when called:    7
 37856 ;; This function calls:
 37857 ;;		__get_empty_cluster
 37858 ;;		__read_fat
 37859 ;;		__root_is_available
 37860 ;;		__sector_from_cluster
 37861 ;;		__update_modified_time
 37862 ;;		__write_fat
 37863 ;;		__write_root
 37864 ;;		_fat_get_file_information
 37865 ;;		_flash_partial_write
 37866 ;; This function is called by:
 37867 ;;		__parse_file_append
 37868 ;; This function uses a non-reentrant model
 37869 ;;
 37870                           
 37871                           	psect	text189
 37872  002650                     __ptext189:
 37873                           	opt stack 0
 37874  002650                     _fat_append_to_file:
 37875                           	opt stack 20
 37876                           
 37877                           ;incstack = 0
 37878                           ;fat_append_to_file@file_number stored from wreg
 37879  002650  0100               	movlb	0	; () banked
 37880  002652  6F6C               	movwf	fat_append_to_file@file_number& (0+255),b
 37881                           
 37882                           ;fat16.c: 452: rootEntry_t root;;fat16.c: 453: uint32_t file_size;;fat16.c: 454: uint16_
      +                          t fat_cluster;;fat16.c: 455: uint16_t new_cluster;;fat16.c: 456: uint32_t position;;fat1
      +                          6.c: 457: uint16_t offset;;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t length;
      +                          ;fat16.c: 462: if(file_number>=64)
 37883  002654  0E3F               	movlw	63
 37884  002656  0100               	movlb	0	; () banked
 37885  002658  656C               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 37886  00265A  D001               	goto	l2004
 37887  00265C  0012               	return	
 37888  00265E                     l2004:
 37889                           
 37890                           ; BSR set to: 0
 37891                           ;fat16.c: 466: };fat16.c: 469: if(_root_is_available(file_number))
 37892                           
 37893                           ; BSR set to: 0
 37894  00265E  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 37895  002660  EC96  F038         	call	__root_is_available
 37896  002664  0900               	iorlw	0
 37897  002666  A4D8               	btfss	status,2,c
 37898  002668  0012               	return	
 37899                           
 37900                           ;fat16.c: 473: };fat16.c: 476: fat_get_file_information(file_number, &root);
 37901                           
 37902                           ;fat16.c: 470: {;fat16.c: 472: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 37903  00266A  0E73               	movlw	low fat_append_to_file@root
 37904  00266C  6E37               	movwf	fat_get_file_information@data,c
 37905  00266E  0E00               	movlw	high fat_append_to_file@root
 37906  002670  6E38               	movwf	fat_get_file_information@data+1,c
 37907  002672  0100               	movlb	0	; () banked
 37908  002674  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 37909  002676  ECD1  F038         	call	_fat_get_file_information
 37910                           
 37911                           ;fat16.c: 477: file_size = root.fileSize;
 37912  00267A  C08F  F062         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 37913  00267E  C090  F063         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 37914  002682  C091  F064         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 37915  002686  C092  F065         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 37916                           
 37917                           ;fat16.c: 478: fat_cluster = root.firstCluster;
 37918  00268A  C08D  F068         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 37919  00268E  C08E  F069         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 37920                           
 37921                           ;fat16.c: 481: position = 0;
 37922  002692  0E00               	movlw	0
 37923  002694  0100               	movlb	0	; () banked
 37924  002696  6F6F               	movwf	fat_append_to_file@position& (0+255),b
 37925  002698  0E00               	movlw	0
 37926  00269A  6F70               	movwf	(fat_append_to_file@position+1)& (0+255),b
 37927  00269C  0E00               	movlw	0
 37928  00269E  6F71               	movwf	(fat_append_to_file@position+2)& (0+255),b
 37929  0026A0  0E00               	movlw	0
 37930  0026A2  6F72               	movwf	(fat_append_to_file@position+3)& (0+255),b
 37931                           
 37932                           ;fat16.c: 482: while((file_size-position)>512)
 37933  0026A4  D013               	goto	l2007
 37934  0026A6                     l12732:
 37935                           
 37936                           ; BSR set to: 0
 37937                           ;fat16.c: 483: {;fat16.c: 484: fat_cluster = _read_fat(fat_cluster);
 37938  0026A6  C068  F030         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 37939  0026AA  C069  F031         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 37940  0026AE  EC91  F03F         	call	__read_fat	;wreg free
 37941  0026B2  C030  F068         	movff	?__read_fat,fat_append_to_file@fat_cluster
 37942  0026B6  C031  F069         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 37943                           
 37944                           ;fat16.c: 485: position += 512;
 37945  0026BA  0E00               	movlw	0
 37946  0026BC  0100               	movlb	0	; () banked
 37947  0026BE  276F               	addwf	fat_append_to_file@position& (0+255),f,b
 37948  0026C0  0E02               	movlw	2
 37949  0026C2  2370               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 37950  0026C4  0E00               	movlw	0
 37951  0026C6  2371               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 37952  0026C8  0E00               	movlw	0
 37953  0026CA  2372               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 37954  0026CC                     l2007:
 37955                           
 37956                           ; BSR set to: 0
 37957                           
 37958                           ; BSR set to: 0
 37959  0026CC  C06F  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 37960  0026D0  C070  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 37961  0026D4  C071  F045         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 37962  0026D8  C072  F046         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 37963  0026DC  1E43               	comf	??_fat_append_to_file,f,c
 37964  0026DE  1E44               	comf	??_fat_append_to_file+1,f,c
 37965  0026E0  1E45               	comf	??_fat_append_to_file+2,f,c
 37966  0026E2  1E46               	comf	??_fat_append_to_file+3,f,c
 37967  0026E4  2A43               	incf	??_fat_append_to_file,f,c
 37968  0026E6  0E00               	movlw	0
 37969  0026E8  2244               	addwfc	??_fat_append_to_file+1,f,c
 37970  0026EA  2245               	addwfc	??_fat_append_to_file+2,f,c
 37971  0026EC  2246               	addwfc	??_fat_append_to_file+3,f,c
 37972  0026EE  5162               	movf	fat_append_to_file@file_size& (0+255),w,b
 37973  0026F0  2443               	addwf	??_fat_append_to_file,w,c
 37974  0026F2  6E47               	movwf	(??_fat_append_to_file+4)& (0+255),c
 37975  0026F4  5163               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 37976  0026F6  2044               	addwfc	??_fat_append_to_file+1,w,c
 37977  0026F8  6E48               	movwf	(??_fat_append_to_file+5)& (0+255),c
 37978  0026FA  5164               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 37979  0026FC  2045               	addwfc	??_fat_append_to_file+2,w,c
 37980  0026FE  6E49               	movwf	(??_fat_append_to_file+6)& (0+255),c
 37981  002700  5165               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 37982  002702  2046               	addwfc	??_fat_append_to_file+3,w,c
 37983  002704  6E4A               	movwf	(??_fat_append_to_file+7)& (0+255),c
 37984  002706  504A               	movf	??_fat_append_to_file+7,w,c
 37985  002708  1049               	iorwf	??_fat_append_to_file+6,w,c
 37986  00270A  E1CD               	bnz	l12732
 37987  00270C  0447               	decf	??_fat_append_to_file+4,w,c
 37988  00270E  0E02               	movlw	2
 37989  002710  5848               	subwfb	??_fat_append_to_file+5,w,c
 37990  002712  B0D8               	btfsc	status,0,c
 37991  002714  D7C8               	goto	l2008
 37992                           
 37993                           ; BSR set to: 0
 37994                           ;fat16.c: 486: };fat16.c: 489: offset = file_size - position;
 37995                           
 37996                           ; BSR set to: 0
 37997  002716  C06F  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 37998  00271A  C070  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 37999  00271E  1E43               	comf	??_fat_append_to_file,f,c
 38000  002720  1E44               	comf	??_fat_append_to_file+1,f,c
 38001  002722  4A43               	infsnz	??_fat_append_to_file,f,c
 38002  002724  2A44               	incf	??_fat_append_to_file+1,f,c
 38003  002726  5162               	movf	fat_append_to_file@file_size& (0+255),w,b
 38004  002728  2443               	addwf	??_fat_append_to_file,w,c
 38005  00272A  6F6A               	movwf	fat_append_to_file@offset& (0+255),b
 38006  00272C  5163               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 38007  00272E  2044               	addwfc	??_fat_append_to_file+1,w,c
 38008  002730  6F6B               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 38009                           
 38010                           ; BSR set to: 0
 38011                           ;fat16.c: 492: position = 0;
 38012  002732  0E00               	movlw	0
 38013  002734  6F6F               	movwf	fat_append_to_file@position& (0+255),b
 38014  002736  0E00               	movlw	0
 38015  002738  6F70               	movwf	(fat_append_to_file@position+1)& (0+255),b
 38016  00273A  0E00               	movlw	0
 38017  00273C  6F71               	movwf	(fat_append_to_file@position+2)& (0+255),b
 38018  00273E  0E00               	movlw	0
 38019  002740  6F72               	movwf	(fat_append_to_file@position+3)& (0+255),b
 38020                           
 38021                           ;fat16.c: 493: while(position < number_of_bytes)
 38022  002742  D06F               	goto	l2010
 38023  002744                     
 38024                           ; BSR set to: 0
 38025                           ;fat16.c: 494: {;fat16.c: 496: if(offset==512)
 38026                           
 38027                           ; BSR set to: 0
 38028  002744  0E02               	movlw	2
 38029  002746  196B               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 38030  002748  116A               	iorwf	fat_append_to_file@offset& (0+255),w,b
 38031  00274A  A4D8               	btfss	status,2,c
 38032  00274C  D026               	goto	l2012
 38033                           
 38034                           ; BSR set to: 0
 38035                           ;fat16.c: 497: {;fat16.c: 500: new_cluster = _get_empty_cluster(0x0000);
 38036  00274E  0E00               	movlw	0
 38037  002750  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 38038  002752  0E00               	movlw	0
 38039  002754  6E30               	movwf	__get_empty_cluster@first_cluster,c
 38040  002756  EC99  F036         	call	__get_empty_cluster	;wreg free
 38041  00275A  C030  F066         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 38042  00275E  C031  F067         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 38043                           
 38044                           ;fat16.c: 502: _write_fat(fat_cluster, new_cluster);
 38045  002762  C068  F029         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 38046  002766  C069  F02A         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 38047  00276A  C066  F02B         	movff	fat_append_to_file@new_cluster,__write_fat@value
 38048  00276E  C067  F02C         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 38049  002772  EC7C  F040         	call	__write_fat	;wreg free
 38050                           
 38051                           ;fat16.c: 504: _write_fat(new_cluster, 0xFFFF);
 38052  002776  C066  F029         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 38053  00277A  C067  F02A         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 38054  00277E  0EFF               	movlw	255
 38055  002780  6E2C               	movwf	__write_fat@value+1,c
 38056  002782  682B               	setf	__write_fat@value,c
 38057  002784  EC7C  F040         	call	__write_fat	;wreg free
 38058                           
 38059                           ;fat16.c: 506: fat_cluster = new_cluster;
 38060  002788  C066  F068         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 38061  00278C  C067  F069         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 38062                           
 38063                           ;fat16.c: 507: offset = 0;
 38064  002790  0E00               	movlw	0
 38065  002792  0100               	movlb	0	; () banked
 38066  002794  6F6B               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 38067  002796  0E00               	movlw	0
 38068  002798  6F6A               	movwf	fat_append_to_file@offset& (0+255),b
 38069  00279A                     l2012:
 38070                           
 38071                           ; BSR set to: 0
 38072                           ;fat16.c: 508: };fat16.c: 511: sector = _sector_from_cluster(fat_cluster);
 38073                           
 38074                           ; BSR set to: 0
 38075  00279A  C068  F001         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 38076  00279E  C069  F002         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 38077  0027A2  EC6D  F044         	call	__sector_from_cluster	;wreg free
 38078  0027A6  C001  F060         	movff	?__sector_from_cluster,fat_append_to_file@sector
 38079  0027AA  C002  F061         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 38080                           
 38081                           ;fat16.c: 514: length = 512 - offset;
 38082  0027AE  C06A  F043         	movff	fat_append_to_file@offset,??_fat_append_to_file
 38083  0027B2  C06B  F044         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 38084  0027B6  1E43               	comf	??_fat_append_to_file,f,c
 38085  0027B8  1E44               	comf	??_fat_append_to_file+1,f,c
 38086  0027BA  4A43               	infsnz	??_fat_append_to_file,f,c
 38087  0027BC  2A44               	incf	??_fat_append_to_file+1,f,c
 38088  0027BE  0E00               	movlw	0
 38089  0027C0  2443               	addwf	??_fat_append_to_file,w,c
 38090  0027C2  0100               	movlb	0	; () banked
 38091  0027C4  6F6D               	movwf	fat_append_to_file@length& (0+255),b
 38092  0027C6  0E02               	movlw	2
 38093  0027C8  2044               	addwfc	??_fat_append_to_file+1,w,c
 38094  0027CA  6F6E               	movwf	(fat_append_to_file@length+1)& (0+255),b
 38095                           
 38096                           ; BSR set to: 0
 38097                           ;fat16.c: 515: if(length>number_of_bytes)
 38098  0027CC  516D               	movf	fat_append_to_file@length& (0+255),w,b
 38099  0027CE  5C3F               	subwf	fat_append_to_file@number_of_bytes,w,c
 38100  0027D0  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 38101  0027D2  5840               	subwfb	fat_append_to_file@number_of_bytes+1,w,c
 38102  0027D4  B0D8               	btfsc	status,0,c
 38103  0027D6  D004               	goto	l2013
 38104                           
 38105                           ; BSR set to: 0
 38106                           ;fat16.c: 516: {;fat16.c: 517: length = number_of_bytes;
 38107  0027D8  C03F  F06D         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 38108  0027DC  C040  F06E         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 38109  0027E0                     l2013:
 38110                           
 38111                           ; BSR set to: 0
 38112                           ;fat16.c: 518: };fat16.c: 521: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 38113                           
 38114                           ; BSR set to: 0
 38115  0027E0  C060  F020         	movff	fat_append_to_file@sector,flash_partial_write@page
 38116  0027E4  C061  F021         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 38117  0027E8  C06A  F022         	movff	fat_append_to_file@offset,flash_partial_write@start
 38118  0027EC  C06B  F023         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 38119  0027F0  C06D  F024         	movff	fat_append_to_file@length,flash_partial_write@length
 38120  0027F4  C06E  F025         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 38121  0027F8  516F               	movf	fat_append_to_file@position& (0+255),w,b
 38122  0027FA  2441               	addwf	fat_append_to_file@data,w,c
 38123  0027FC  6E26               	movwf	flash_partial_write@data,c
 38124  0027FE  5170               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 38125  002800  2042               	addwfc	fat_append_to_file@data+1,w,c
 38126  002802  6E27               	movwf	flash_partial_write@data+1,c
 38127  002804  EC7C  F039         	call	_flash_partial_write	;wreg free
 38128                           
 38129                           ;fat16.c: 524: position += length;
 38130  002808  0100               	movlb	0	; () banked
 38131  00280A  516D               	movf	fat_append_to_file@length& (0+255),w,b
 38132  00280C  276F               	addwf	fat_append_to_file@position& (0+255),f,b
 38133  00280E  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 38134  002810  2370               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 38135  002812  0E00               	movlw	0
 38136  002814  2371               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 38137  002816  0E00               	movlw	0
 38138  002818  2372               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 38139                           
 38140                           ; BSR set to: 0
 38141                           ;fat16.c: 525: offset += length;
 38142  00281A  516D               	movf	fat_append_to_file@length& (0+255),w,b
 38143  00281C  276A               	addwf	fat_append_to_file@offset& (0+255),f,b
 38144  00281E  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 38145  002820  236B               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 38146  002822                     l2010:
 38147                           
 38148                           ; BSR set to: 0
 38149                           
 38150                           ; BSR set to: 0
 38151  002822  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 38152  002824  6E43               	movwf	??_fat_append_to_file& (0+255),c
 38153  002826  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 38154  002828  6E44               	movwf	(??_fat_append_to_file+1)& (0+255),c
 38155  00282A  6A45               	clrf	(??_fat_append_to_file+2)& (0+255),c
 38156  00282C  6A46               	clrf	(??_fat_append_to_file+3)& (0+255),c
 38157  00282E  5043               	movf	??_fat_append_to_file,w,c
 38158  002830  5D6F               	subwf	fat_append_to_file@position& (0+255),w,b
 38159  002832  5044               	movf	??_fat_append_to_file+1,w,c
 38160  002834  5970               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 38161  002836  5045               	movf	??_fat_append_to_file+2,w,c
 38162  002838  5971               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 38163  00283A  5046               	movf	??_fat_append_to_file+3,w,c
 38164  00283C  5972               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 38165  00283E  A0D8               	btfss	status,0,c
 38166  002840  D781               	goto	l2011
 38167                           
 38168                           ; BSR set to: 0
 38169                           ;fat16.c: 526: };fat16.c: 530: root.fileSize += number_of_bytes;
 38170                           
 38171                           ; BSR set to: 0
 38172  002842  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 38173  002844  278F               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 38174  002846  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 38175  002848  2390               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 38176  00284A  0E00               	movlw	0
 38177  00284C  2391               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 38178  00284E  0E00               	movlw	0
 38179  002850  2392               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 38180                           
 38181                           ; BSR set to: 0
 38182                           ;fat16.c: 531: _update_modified_time(&root);
 38183  002852  0E73               	movlw	low fat_append_to_file@root
 38184  002854  6E05               	movwf	__update_modified_time@root,c
 38185  002856  0E00               	movlw	high fat_append_to_file@root
 38186  002858  6E06               	movwf	__update_modified_time@root+1,c
 38187  00285A  ECE1  F041         	call	__update_modified_time	;wreg free
 38188                           
 38189                           ;fat16.c: 532: _write_root(file_number, &root);
 38190  00285E  0E73               	movlw	low fat_append_to_file@root
 38191  002860  6E29               	movwf	__write_root@data,c
 38192  002862  0E00               	movlw	high fat_append_to_file@root
 38193  002864  6E2A               	movwf	__write_root@data+1,c
 38194  002866  0100               	movlb	0	; () banked
 38195  002868  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 38196  00286A  ECCB  F03C         	call	__write_root
 38197  00286E  0012               	return	
 38198  002870                     __end_of_fat_append_to_file:
 38199                           	opt stack 0
 38200                           tosu	equ	0xFFF
 38201                           tosh	equ	0xFFE
 38202                           tosl	equ	0xFFD
 38203                           pclath	equ	0xFFA
 38204                           tblptru	equ	0xFF8
 38205                           tblptrh	equ	0xFF7
 38206                           tblptrl	equ	0xFF6
 38207                           tablat	equ	0xFF5
 38208                           prodh	equ	0xFF4
 38209                           prodl	equ	0xFF3
 38210                           intcon	equ	0xFF2
 38211                           intcon2	equ	0xFF1
 38212                           intcon3	equ	0xFF0
 38213                           indf0	equ	0xFEF
 38214                           postinc0	equ	0xFEE
 38215                           fsr0h	equ	0xFEA
 38216                           fsr0l	equ	0xFE9
 38217                           wreg	equ	0xFE8
 38218                           indf1	equ	0xFE7
 38219                           postdec1	equ	0xFE5
 38220                           plusw1	equ	0xFE3
 38221                           fsr1h	equ	0xFE2
 38222                           fsr1l	equ	0xFE1
 38223                           indf2	equ	0xFDF
 38224                           postinc2	equ	0xFDE
 38225                           postdec2	equ	0xFDD
 38226                           plusw2	equ	0xFDB
 38227                           fsr2h	equ	0xFDA
 38228                           fsr2l	equ	0xFD9
 38229                           status	equ	0xFD8
 38230                           
 38231 ;; *************** function _fat_get_file_information *****************
 38232 ;; Defined at:
 38233 ;;		line 1196 in file "fat16.c"
 38234 ;; Parameters:    Size  Location     Type
 38235 ;;  file_number     1    wreg     unsigned char 
 38236 ;;  data            2   54[COMRAM] PTR struct .
 38237 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@roo
      +t(32), 
 38238 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 38239 ;;		 -> RAM(3759), 
 38240 ;; Auto vars:     Size  Location     Type
 38241 ;;  file_number     1   61[COMRAM] unsigned char 
 38242 ;;  offset          2   59[COMRAM] unsigned int 
 38243 ;;  root_sector     2   57[COMRAM] unsigned int 
 38244 ;; Return value:  Size  Location     Type
 38245 ;;                  1    wreg      unsigned char 
 38246 ;; Registers used:
 38247 ;;		wreg, status,2, status,0, cstack
 38248 ;; Tracked objects:
 38249 ;;		On entry : 0/0
 38250 ;;		On exit  : 0/0
 38251 ;;		Unchanged: 0/0
 38252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38254 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38255 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38256 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38257 ;;Total ram usage:        8 bytes
 38258 ;; Hardware stack levels used:    1
 38259 ;; Hardware stack levels required when called:    6
 38260 ;; This function calls:
 38261 ;;		__root_is_available
 38262 ;;		_flash_partial_read
 38263 ;; This function is called by:
 38264 ;;		_fat_append_to_file
 38265 ;;		_fat_rename_file
 38266 ;;		_fat_read_from_file
 38267 ;;		_fat_resize_file
 38268 ;;		_fat_modify_file
 38269 ;;		__bootloader_verify_file
 38270 ;;		__bootloader_program
 38271 ;;		__fill_buffer_get_file_details
 38272 ;; This function uses a non-reentrant model
 38273 ;;
 38274                           
 38275                           	psect	text190
 38276  0071A2                     __ptext190:
 38277                           	opt stack 0
 38278  0071A2                     _fat_get_file_information:
 38279                           	opt stack 22
 38280                           
 38281                           ;incstack = 0
 38282                           ;fat_get_file_information@file_number stored from wreg
 38283  0071A2  6E3E               	movwf	fat_get_file_information@file_number,c
 38284                           
 38285                           ;fat16.c: 1198: uint16_t root_sector;;fat16.c: 1199: uint16_t offset;;fat16.c: 1201: if(
      +                          file_number>=64)
 38286  0071A4  0E3F               	movlw	63
 38287  0071A6  643E               	cpfsgt	fat_get_file_information@file_number,c
 38288  0071A8  D002               	goto	l2239
 38289                           
 38290                           ;fat16.c: 1202: {;fat16.c: 1204: return 0x01;
 38291  0071AA  0E01               	movlw	1
 38292  0071AC  0012               	return	
 38293  0071AE                     l2239:
 38294                           
 38295                           ;fat16.c: 1205: };fat16.c: 1206: if(_root_is_available(file_number))
 38296  0071AE  503E               	movf	fat_get_file_information@file_number,w,c
 38297  0071B0  EC96  F038         	call	__root_is_available
 38298  0071B4  0900               	iorlw	0
 38299  0071B6  B4D8               	btfsc	status,2,c
 38300  0071B8  D002               	goto	l2241
 38301                           
 38302                           ;fat16.c: 1207: {;fat16.c: 1209: return 0x02;
 38303  0071BA  0E02               	movlw	2
 38304  0071BC  0012               	return	
 38305  0071BE                     l2241:
 38306                           
 38307                           ;fat16.c: 1210: };fat16.c: 1212: root_sector = (file_number >> 4) + 34;
 38308  0071BE  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 38309  0071C2  3A39               	swapf	??_fat_get_file_information,f,c
 38310  0071C4  0E0F               	movlw	15
 38311  0071C6  1639               	andwf	??_fat_get_file_information,f,c
 38312  0071C8  0E22               	movlw	34
 38313  0071CA  2439               	addwf	??_fat_get_file_information,w,c
 38314  0071CC  6E3A               	movwf	fat_get_file_information@root_sector,c
 38315  0071CE  6A3B               	clrf	fat_get_file_information@root_sector+1,c
 38316  0071D0  0E00               	movlw	0
 38317  0071D2  223B               	addwfc	fat_get_file_information@root_sector+1,f,c
 38318                           
 38319                           ;fat16.c: 1213: offset = (file_number & 0b1111);
 38320  0071D4  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 38321  0071D8  0E0F               	movlw	15
 38322  0071DA  1639               	andwf	??_fat_get_file_information,f,c
 38323  0071DC  5039               	movf	??_fat_get_file_information,w,c
 38324  0071DE  6E3C               	movwf	fat_get_file_information@offset,c
 38325  0071E0  6A3D               	clrf	fat_get_file_information@offset+1,c
 38326                           
 38327                           ;fat16.c: 1214: offset <<= 5;
 38328  0071E2  0E05               	movlw	5
 38329  0071E4                     u8795:
 38330  0071E4  90D8               	bcf	status,0,c
 38331  0071E6  363C               	rlcf	fat_get_file_information@offset,f,c
 38332  0071E8  363D               	rlcf	fat_get_file_information@offset+1,f,c
 38333  0071EA  2EE8               	decfsz	wreg,f,c
 38334  0071EC  D7FB               	goto	u8795
 38335                           
 38336                           ;fat16.c: 1215: flash_partial_read(root_sector, offset, 32, data);
 38337  0071EE  C03A  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 38338  0071F2  C03B  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 38339  0071F6  C03C  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 38340  0071FA  C03D  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 38341  0071FE  0E00               	movlw	0
 38342  007200  6E2D               	movwf	flash_partial_read@length+1,c
 38343  007202  0E20               	movlw	32
 38344  007204  6E2C               	movwf	flash_partial_read@length,c
 38345  007206  C037  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 38346  00720A  C038  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 38347  00720E  ECFA  F041         	call	_flash_partial_read	;wreg free
 38348                           
 38349                           ;fat16.c: 1218: return 0x00;
 38350  007212  0E00               	movlw	0
 38351  007214  0012               	return	
 38352  007216                     __end_of_fat_get_file_information:
 38353                           	opt stack 0
 38354                           tosu	equ	0xFFF
 38355                           tosh	equ	0xFFE
 38356                           tosl	equ	0xFFD
 38357                           pclath	equ	0xFFA
 38358                           tblptru	equ	0xFF8
 38359                           tblptrh	equ	0xFF7
 38360                           tblptrl	equ	0xFF6
 38361                           tablat	equ	0xFF5
 38362                           prodh	equ	0xFF4
 38363                           prodl	equ	0xFF3
 38364                           intcon	equ	0xFF2
 38365                           intcon2	equ	0xFF1
 38366                           intcon3	equ	0xFF0
 38367                           indf0	equ	0xFEF
 38368                           postinc0	equ	0xFEE
 38369                           fsr0h	equ	0xFEA
 38370                           fsr0l	equ	0xFE9
 38371                           wreg	equ	0xFE8
 38372                           indf1	equ	0xFE7
 38373                           postdec1	equ	0xFE5
 38374                           plusw1	equ	0xFE3
 38375                           fsr1h	equ	0xFE2
 38376                           fsr1l	equ	0xFE1
 38377                           indf2	equ	0xFDF
 38378                           postinc2	equ	0xFDE
 38379                           postdec2	equ	0xFDD
 38380                           plusw2	equ	0xFDB
 38381                           fsr2h	equ	0xFDA
 38382                           fsr2l	equ	0xFD9
 38383                           status	equ	0xFD8
 38384                           
 38385 ;; *************** function __root_is_available *****************
 38386 ;; Defined at:
 38387 ;;		line 59 in file "fat16.c"
 38388 ;; Parameters:    Size  Location     Type
 38389 ;;  file_number     1    wreg     unsigned char 
 38390 ;; Auto vars:     Size  Location     Type
 38391 ;;  file_number     1   52[COMRAM] unsigned char 
 38392 ;;  offset          2   50[COMRAM] unsigned int 
 38393 ;;  root_sector     2   48[COMRAM] unsigned int 
 38394 ;;  first_byte      1   53[COMRAM] unsigned char 
 38395 ;; Return value:  Size  Location     Type
 38396 ;;                  1    wreg      unsigned char 
 38397 ;; Registers used:
 38398 ;;		wreg, status,2, status,0, cstack
 38399 ;; Tracked objects:
 38400 ;;		On entry : 0/0
 38401 ;;		On exit  : 0/0
 38402 ;;		Unchanged: 0/0
 38403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38405 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38407 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38408 ;;Total ram usage:        7 bytes
 38409 ;; Hardware stack levels used:    1
 38410 ;; Hardware stack levels required when called:    5
 38411 ;; This function calls:
 38412 ;;		_flash_partial_read
 38413 ;; This function is called by:
 38414 ;;		__get_available_root_entry
 38415 ;;		_fat_delete_file
 38416 ;;		_fat_append_to_file
 38417 ;;		_fat_resize_file
 38418 ;;		_fat_get_file_information
 38419 ;; This function uses a non-reentrant model
 38420 ;;
 38421                           
 38422                           	psect	text191
 38423  00712C                     __ptext191:
 38424                           	opt stack 0
 38425  00712C                     __root_is_available:
 38426                           	opt stack 22
 38427                           
 38428                           ;incstack = 0
 38429                           ;__root_is_available@file_number stored from wreg
 38430  00712C  6E35               	movwf	__root_is_available@file_number,c
 38431                           
 38432                           ;fat16.c: 61: uint16_t root_sector;;fat16.c: 62: uint16_t offset;;fat16.c: 63: uint8_t f
      +                          irst_byte;;fat16.c: 67: if(file_number>=64)
 38433  00712E  0E3F               	movlw	63
 38434  007130  6435               	cpfsgt	__root_is_available@file_number,c
 38435  007132  D002               	goto	l1915
 38436                           
 38437                           ;fat16.c: 68: {;fat16.c: 70: return 0;
 38438  007134  0E00               	movlw	0
 38439  007136  0012               	return	
 38440  007138                     l1915:
 38441                           
 38442                           ;fat16.c: 71: };fat16.c: 74: root_sector = (file_number >> 4) + 34;
 38443  007138  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 38444  00713C  3A30               	swapf	??__root_is_available,f,c
 38445  00713E  0E0F               	movlw	15
 38446  007140  1630               	andwf	??__root_is_available,f,c
 38447  007142  0E22               	movlw	34
 38448  007144  2430               	addwf	??__root_is_available,w,c
 38449  007146  6E31               	movwf	__root_is_available@root_sector,c
 38450  007148  6A32               	clrf	__root_is_available@root_sector+1,c
 38451  00714A  0E00               	movlw	0
 38452  00714C  2232               	addwfc	__root_is_available@root_sector+1,f,c
 38453                           
 38454                           ;fat16.c: 75: offset = (file_number & 0b1111);
 38455  00714E  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 38456  007152  0E0F               	movlw	15
 38457  007154  1630               	andwf	??__root_is_available,f,c
 38458  007156  5030               	movf	??__root_is_available,w,c
 38459  007158  6E33               	movwf	__root_is_available@offset,c
 38460  00715A  6A34               	clrf	__root_is_available@offset+1,c
 38461                           
 38462                           ;fat16.c: 76: offset <<= 5;
 38463  00715C  0E05               	movlw	5
 38464  00715E                     u7635:
 38465  00715E  90D8               	bcf	status,0,c
 38466  007160  3633               	rlcf	__root_is_available@offset,f,c
 38467  007162  3634               	rlcf	__root_is_available@offset+1,f,c
 38468  007164  2EE8               	decfsz	wreg,f,c
 38469  007166  D7FB               	goto	u7635
 38470                           
 38471                           ;fat16.c: 79: flash_partial_read(root_sector, offset, 1, &first_byte);
 38472  007168  C031  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 38473  00716C  C032  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 38474  007170  C033  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 38475  007174  C034  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 38476  007178  0E00               	movlw	0
 38477  00717A  6E2D               	movwf	flash_partial_read@length+1,c
 38478  00717C  0E01               	movlw	1
 38479  00717E  6E2C               	movwf	flash_partial_read@length,c
 38480  007180  0E36               	movlw	low __root_is_available@first_byte
 38481  007182  6E2E               	movwf	flash_partial_read@data,c
 38482  007184  0E00               	movlw	high __root_is_available@first_byte
 38483  007186  6E2F               	movwf	flash_partial_read@data+1,c
 38484  007188  ECFA  F041         	call	_flash_partial_read	;wreg free
 38485                           
 38486                           ;fat16.c: 82: if((first_byte==0x00) || (first_byte==0xE5))
 38487  00718C  5036               	movf	__root_is_available@first_byte,w,c
 38488  00718E  B4D8               	btfsc	status,2,c
 38489  007190  D004               	goto	u7650
 38490  007192  0EE5               	movlw	229
 38491  007194  1836               	xorwf	__root_is_available@first_byte,w,c
 38492  007196  A4D8               	btfss	status,2,c
 38493  007198  D002               	goto	l1917
 38494  00719A                     u7650:
 38495                           
 38496                           ;fat16.c: 83: {;fat16.c: 85: return 1;
 38497  00719A  0E01               	movlw	1
 38498                           
 38499                           ;fat16.c: 86: }
 38500  00719C  0012               	return	
 38501  00719E                     l1917:
 38502                           
 38503                           ;fat16.c: 87: else;fat16.c: 88: {;fat16.c: 90: return 0;
 38504  00719E  0E00               	movlw	0
 38505  0071A0  0012               	return	
 38506  0071A2                     __end_of__root_is_available:
 38507                           	opt stack 0
 38508                           tosu	equ	0xFFF
 38509                           tosh	equ	0xFFE
 38510                           tosl	equ	0xFFD
 38511                           pclath	equ	0xFFA
 38512                           tblptru	equ	0xFF8
 38513                           tblptrh	equ	0xFF7
 38514                           tblptrl	equ	0xFF6
 38515                           tablat	equ	0xFF5
 38516                           prodh	equ	0xFF4
 38517                           prodl	equ	0xFF3
 38518                           intcon	equ	0xFF2
 38519                           intcon2	equ	0xFF1
 38520                           intcon3	equ	0xFF0
 38521                           indf0	equ	0xFEF
 38522                           postinc0	equ	0xFEE
 38523                           fsr0h	equ	0xFEA
 38524                           fsr0l	equ	0xFE9
 38525                           wreg	equ	0xFE8
 38526                           indf1	equ	0xFE7
 38527                           postdec1	equ	0xFE5
 38528                           plusw1	equ	0xFE3
 38529                           fsr1h	equ	0xFE2
 38530                           fsr1l	equ	0xFE1
 38531                           indf2	equ	0xFDF
 38532                           postinc2	equ	0xFDE
 38533                           postdec2	equ	0xFDD
 38534                           plusw2	equ	0xFDB
 38535                           fsr2h	equ	0xFDA
 38536                           fsr2l	equ	0xFD9
 38537                           status	equ	0xFD8
 38538                           
 38539 ;; *************** function __write_root *****************
 38540 ;; Defined at:
 38541 ;;		line 187 in file "fat16.c"
 38542 ;; Parameters:    Size  Location     Type
 38543 ;;  slot            1    wreg     unsigned char 
 38544 ;;  data            2   40[COMRAM] PTR struct .
 38545 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32),
      + 
 38546 ;; Auto vars:     Size  Location     Type
 38547 ;;  slot            1   47[COMRAM] unsigned char 
 38548 ;;  offset          2   45[COMRAM] unsigned int 
 38549 ;;  root_sector     2   43[COMRAM] unsigned int 
 38550 ;; Return value:  Size  Location     Type
 38551 ;;                  1    wreg      void 
 38552 ;; Registers used:
 38553 ;;		wreg, status,2, status,0, cstack
 38554 ;; Tracked objects:
 38555 ;;		On entry : 0/0
 38556 ;;		On exit  : 0/0
 38557 ;;		Unchanged: 0/0
 38558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38560 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38562 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38563 ;;Total ram usage:        8 bytes
 38564 ;; Hardware stack levels used:    1
 38565 ;; Hardware stack levels required when called:    5
 38566 ;; This function calls:
 38567 ;;		_flash_partial_write
 38568 ;; This function is called by:
 38569 ;;		_fat_create_file
 38570 ;;		_fat_append_to_file
 38571 ;;		_fat_rename_file
 38572 ;;		_fat_resize_file
 38573 ;; This function uses a non-reentrant model
 38574 ;;
 38575                           
 38576                           	psect	text192
 38577  007996                     __ptext192:
 38578                           	opt stack 0
 38579  007996                     __write_root:
 38580                           	opt stack 21
 38581                           
 38582                           ;incstack = 0
 38583                           ;__write_root@slot stored from wreg
 38584  007996  6E30               	movwf	__write_root@slot,c
 38585                           
 38586                           ;fat16.c: 189: uint16_t root_sector;;fat16.c: 190: uint16_t offset;;fat16.c: 191: root_s
      +                          ector = (slot >> 4) + 34;
 38587  007998  C030  F02B         	movff	__write_root@slot,??__write_root
 38588  00799C  3A2B               	swapf	??__write_root,f,c
 38589  00799E  0E0F               	movlw	15
 38590  0079A0  162B               	andwf	??__write_root,f,c
 38591  0079A2  0E22               	movlw	34
 38592  0079A4  242B               	addwf	??__write_root,w,c
 38593  0079A6  6E2C               	movwf	__write_root@root_sector,c
 38594  0079A8  6A2D               	clrf	__write_root@root_sector+1,c
 38595  0079AA  0E00               	movlw	0
 38596  0079AC  222D               	addwfc	__write_root@root_sector+1,f,c
 38597                           
 38598                           ;fat16.c: 192: offset = (slot & 0b1111);
 38599  0079AE  C030  F02B         	movff	__write_root@slot,??__write_root
 38600  0079B2  0E0F               	movlw	15
 38601  0079B4  162B               	andwf	??__write_root,f,c
 38602  0079B6  502B               	movf	??__write_root,w,c
 38603  0079B8  6E2E               	movwf	__write_root@offset,c
 38604  0079BA  6A2F               	clrf	__write_root@offset+1,c
 38605                           
 38606                           ;fat16.c: 193: offset <<= 5;
 38607  0079BC  0E05               	movlw	5
 38608  0079BE                     u8665:
 38609  0079BE  90D8               	bcf	status,0,c
 38610  0079C0  362E               	rlcf	__write_root@offset,f,c
 38611  0079C2  362F               	rlcf	__write_root@offset+1,f,c
 38612  0079C4  2EE8               	decfsz	wreg,f,c
 38613  0079C6  D7FB               	goto	u8665
 38614                           
 38615                           ;fat16.c: 194: flash_partial_write(root_sector, offset, 32, data);
 38616  0079C8  C02C  F020         	movff	__write_root@root_sector,flash_partial_write@page
 38617  0079CC  C02D  F021         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 38618  0079D0  C02E  F022         	movff	__write_root@offset,flash_partial_write@start
 38619  0079D4  C02F  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 38620  0079D8  0E00               	movlw	0
 38621  0079DA  6E25               	movwf	flash_partial_write@length+1,c
 38622  0079DC  0E20               	movlw	32
 38623  0079DE  6E24               	movwf	flash_partial_write@length,c
 38624  0079E0  C029  F026         	movff	__write_root@data,flash_partial_write@data
 38625  0079E4  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 38626  0079E8  EC7C  F039         	call	_flash_partial_write	;wreg free
 38627  0079EC  0012               	return		;funcret
 38628  0079EE                     __end_of__write_root:
 38629                           	opt stack 0
 38630                           tosu	equ	0xFFF
 38631                           tosh	equ	0xFFE
 38632                           tosl	equ	0xFFD
 38633                           pclath	equ	0xFFA
 38634                           tblptru	equ	0xFF8
 38635                           tblptrh	equ	0xFF7
 38636                           tblptrl	equ	0xFF6
 38637                           tablat	equ	0xFF5
 38638                           prodh	equ	0xFF4
 38639                           prodl	equ	0xFF3
 38640                           intcon	equ	0xFF2
 38641                           intcon2	equ	0xFF1
 38642                           intcon3	equ	0xFF0
 38643                           indf0	equ	0xFEF
 38644                           postinc0	equ	0xFEE
 38645                           fsr0h	equ	0xFEA
 38646                           fsr0l	equ	0xFE9
 38647                           wreg	equ	0xFE8
 38648                           indf1	equ	0xFE7
 38649                           postdec1	equ	0xFE5
 38650                           plusw1	equ	0xFE3
 38651                           fsr1h	equ	0xFE2
 38652                           fsr1l	equ	0xFE1
 38653                           indf2	equ	0xFDF
 38654                           postinc2	equ	0xFDE
 38655                           postdec2	equ	0xFDD
 38656                           plusw2	equ	0xFDB
 38657                           fsr2h	equ	0xFDA
 38658                           fsr2l	equ	0xFD9
 38659                           status	equ	0xFD8
 38660                           
 38661 ;; *************** function __write_fat *****************
 38662 ;; Defined at:
 38663 ;;		line 163 in file "fat16.c"
 38664 ;; Parameters:    Size  Location     Type
 38665 ;;  cluster         2   40[COMRAM] unsigned int 
 38666 ;;  value           2   42[COMRAM] unsigned int 
 38667 ;; Auto vars:     Size  Location     Type
 38668 ;;  offset          2   46[COMRAM] unsigned int 
 38669 ;;  fat_sector      2   44[COMRAM] unsigned int 
 38670 ;; Return value:  Size  Location     Type
 38671 ;;                  1    wreg      void 
 38672 ;; Registers used:
 38673 ;;		wreg, status,2, status,0, cstack
 38674 ;; Tracked objects:
 38675 ;;		On entry : 0/0
 38676 ;;		On exit  : 0/0
 38677 ;;		Unchanged: 0/0
 38678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38680 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38682 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38683 ;;Total ram usage:        8 bytes
 38684 ;; Hardware stack levels used:    1
 38685 ;; Hardware stack levels required when called:    5
 38686 ;; This function calls:
 38687 ;;		_flash_partial_write
 38688 ;; This function is called by:
 38689 ;;		_fat_create_file
 38690 ;;		_fat_delete_file
 38691 ;;		_fat_append_to_file
 38692 ;;		_fat_resize_file
 38693 ;; This function uses a non-reentrant model
 38694 ;;
 38695                           
 38696                           	psect	text193
 38697  0080F8                     __ptext193:
 38698                           	opt stack 0
 38699  0080F8                     __write_fat:
 38700                           	opt stack 21
 38701                           
 38702                           ;fat16.c: 165: uint16_t fat_sector;;fat16.c: 166: uint16_t offset;;fat16.c: 167: fat_sec
      +                          tor = cluster>>8;
 38703                           
 38704                           ;incstack = 0
 38705  0080F8  502A               	movf	__write_fat@cluster+1,w,c
 38706  0080FA  6E2D               	movwf	__write_fat@fat_sector,c
 38707  0080FC  6A2E               	clrf	__write_fat@fat_sector+1,c
 38708                           
 38709                           ;fat16.c: 168: fat_sector += 2;
 38710  0080FE  0E02               	movlw	2
 38711  008100  262D               	addwf	__write_fat@fat_sector,f,c
 38712  008102  0E00               	movlw	0
 38713  008104  222E               	addwfc	__write_fat@fat_sector+1,f,c
 38714                           
 38715                           ;fat16.c: 169: offset = cluster & 0xFF;
 38716  008106  5029               	movf	__write_fat@cluster,w,c
 38717  008108  6E2F               	movwf	__write_fat@offset,c
 38718  00810A  6A30               	clrf	__write_fat@offset+1,c
 38719                           
 38720                           ;fat16.c: 170: offset <<= 1;
 38721  00810C  90D8               	bcf	status,0,c
 38722  00810E  362F               	rlcf	__write_fat@offset,f,c
 38723  008110  3630               	rlcf	__write_fat@offset+1,f,c
 38724                           
 38725                           ;fat16.c: 171: flash_partial_write(fat_sector, offset, 2, &value);
 38726  008112  C02D  F020         	movff	__write_fat@fat_sector,flash_partial_write@page
 38727  008116  C02E  F021         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 38728  00811A  C02F  F022         	movff	__write_fat@offset,flash_partial_write@start
 38729  00811E  C030  F023         	movff	__write_fat@offset+1,flash_partial_write@start+1
 38730  008122  0E00               	movlw	0
 38731  008124  6E25               	movwf	flash_partial_write@length+1,c
 38732  008126  0E02               	movlw	2
 38733  008128  6E24               	movwf	flash_partial_write@length,c
 38734  00812A  0E2B               	movlw	low __write_fat@value
 38735  00812C  6E26               	movwf	flash_partial_write@data,c
 38736  00812E  0E00               	movlw	high __write_fat@value
 38737  008130  6E27               	movwf	flash_partial_write@data+1,c
 38738  008132  EC7C  F039         	call	_flash_partial_write	;wreg free
 38739  008136  0012               	return		;funcret
 38740  008138                     __end_of__write_fat:
 38741                           	opt stack 0
 38742                           tosu	equ	0xFFF
 38743                           tosh	equ	0xFFE
 38744                           tosl	equ	0xFFD
 38745                           pclath	equ	0xFFA
 38746                           tblptru	equ	0xFF8
 38747                           tblptrh	equ	0xFF7
 38748                           tblptrl	equ	0xFF6
 38749                           tablat	equ	0xFF5
 38750                           prodh	equ	0xFF4
 38751                           prodl	equ	0xFF3
 38752                           intcon	equ	0xFF2
 38753                           intcon2	equ	0xFF1
 38754                           intcon3	equ	0xFF0
 38755                           indf0	equ	0xFEF
 38756                           postinc0	equ	0xFEE
 38757                           fsr0h	equ	0xFEA
 38758                           fsr0l	equ	0xFE9
 38759                           wreg	equ	0xFE8
 38760                           indf1	equ	0xFE7
 38761                           postdec1	equ	0xFE5
 38762                           plusw1	equ	0xFE3
 38763                           fsr1h	equ	0xFE2
 38764                           fsr1l	equ	0xFE1
 38765                           indf2	equ	0xFDF
 38766                           postinc2	equ	0xFDE
 38767                           postdec2	equ	0xFDD
 38768                           plusw2	equ	0xFDB
 38769                           fsr2h	equ	0xFDA
 38770                           fsr2l	equ	0xFD9
 38771                           status	equ	0xFD8
 38772                           
 38773 ;; *************** function _flash_partial_write *****************
 38774 ;; Defined at:
 38775 ;;		line 471 in file "flash.c"
 38776 ;; Parameters:    Size  Location     Type
 38777 ;;  page            2   31[COMRAM] unsigned int 
 38778 ;;  start           2   33[COMRAM] unsigned int 
 38779 ;;  length          2   35[COMRAM] unsigned int 
 38780 ;;  data            2   37[COMRAM] PTR unsigned char 
 38781 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 38782 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 38783 ;;		 -> ReceivedDataBuffer(64), 
 38784 ;; Auto vars:     Size  Location     Type
 38785 ;;  match           1   39[COMRAM] enum E6894
 38786 ;; Return value:  Size  Location     Type
 38787 ;;                  1    wreg      void 
 38788 ;; Registers used:
 38789 ;;		wreg, status,2, status,0, cstack
 38790 ;; Tracked objects:
 38791 ;;		On entry : 0/0
 38792 ;;		On exit  : 0/0
 38793 ;;		Unchanged: 0/0
 38794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38795 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38798 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38799 ;;Total ram usage:        9 bytes
 38800 ;; Hardware stack levels used:    1
 38801 ;; Hardware stack levels required when called:    4
 38802 ;; This function calls:
 38803 ;;		__flash_compare_page_to_buffer
 38804 ;;		__flash_copy_page_to_buffer
 38805 ;;		__flash_is_busy
 38806 ;;		__flash_write_page_from_buffer
 38807 ;;		__flash_write_to_buffer
 38808 ;;		_spi_set_configuration
 38809 ;; This function is called by:
 38810 ;;		__write_fat
 38811 ;;		__write_root
 38812 ;;		__delete_root
 38813 ;;		_fat_append_to_file
 38814 ;;		_fat_modify_file
 38815 ;;		__write_file_size
 38816 ;; This function uses a non-reentrant model
 38817 ;;
 38818                           
 38819                           	psect	text194
 38820  0072F8                     __ptext194:
 38821                           	opt stack 0
 38822  0072F8                     _flash_partial_write:
 38823                           	opt stack 21
 38824                           
 38825                           ;flash.c: 473: flashMatchResult_t match;;flash.c: 476: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 38826                           
 38827                           ;incstack = 0
 38828  0072F8  0E00               	movlw	0
 38829  0072FA  EC59  F024         	call	_spi_set_configuration
 38830  0072FE  EC92  F043         	call	__flash_is_busy	;wreg free
 38831  007302  0900               	iorlw	0
 38832  007304  A4D8               	btfss	status,2,c
 38833  007306  D7FB               	goto	l1845
 38834                           
 38835                           ;flash.c: 482: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 38836  007308  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 38837  00730C  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 38838  007310  0E00               	movlw	0
 38839  007312  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 38840  007314  EC23  F03D         	call	__flash_copy_page_to_buffer	;wreg free
 38841                           
 38842                           ;flash.c: 485: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 38843  007318  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 38844  00731C  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 38845  007320  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 38846  007324  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 38847  007328  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 38848  00732C  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 38849  007330  0E00               	movlw	0
 38850  007332  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 38851  007334  EC21  F03F         	call	__flash_write_to_buffer	;wreg free
 38852                           
 38853                           ;flash.c: 488: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 38854  007338  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 38855  00733C  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 38856  007340  0E00               	movlw	0
 38857  007342  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 38858  007344  EC1E  F038         	call	__flash_compare_page_to_buffer	;wreg free
 38859  007348  6E28               	movwf	flash_partial_write@match,c
 38860                           
 38861                           ;flash.c: 491: if(match==DATA_DOES_NOT_MATCH)
 38862  00734A  0428               	decf	flash_partial_write@match,w,c
 38863  00734C  A4D8               	btfss	status,2,c
 38864  00734E  D008               	goto	l1847
 38865                           
 38866                           ;flash.c: 492: {;flash.c: 493: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 38867  007350  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 38868  007354  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 38869  007358  0E00               	movlw	0
 38870  00735A  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 38871  00735C  ECF7  F03C         	call	__flash_write_page_from_buffer	;wreg free
 38872  007360                     l1847:
 38873                           
 38874                           ;flash.c: 494: };flash.c: 497: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 38875  007360  0E01               	movlw	1
 38876  007362  EC59  F024         	call	_spi_set_configuration
 38877  007366  0012               	return		;funcret
 38878  007368                     __end_of_flash_partial_write:
 38879                           	opt stack 0
 38880                           tosu	equ	0xFFF
 38881                           tosh	equ	0xFFE
 38882                           tosl	equ	0xFFD
 38883                           pclath	equ	0xFFA
 38884                           tblptru	equ	0xFF8
 38885                           tblptrh	equ	0xFF7
 38886                           tblptrl	equ	0xFF6
 38887                           tablat	equ	0xFF5
 38888                           prodh	equ	0xFF4
 38889                           prodl	equ	0xFF3
 38890                           intcon	equ	0xFF2
 38891                           intcon2	equ	0xFF1
 38892                           intcon3	equ	0xFF0
 38893                           indf0	equ	0xFEF
 38894                           postinc0	equ	0xFEE
 38895                           fsr0h	equ	0xFEA
 38896                           fsr0l	equ	0xFE9
 38897                           wreg	equ	0xFE8
 38898                           indf1	equ	0xFE7
 38899                           postdec1	equ	0xFE5
 38900                           plusw1	equ	0xFE3
 38901                           fsr1h	equ	0xFE2
 38902                           fsr1l	equ	0xFE1
 38903                           indf2	equ	0xFDF
 38904                           postinc2	equ	0xFDE
 38905                           postdec2	equ	0xFDD
 38906                           plusw2	equ	0xFDB
 38907                           fsr2h	equ	0xFDA
 38908                           fsr2l	equ	0xFD9
 38909                           status	equ	0xFD8
 38910                           
 38911 ;; *************** function __flash_write_to_buffer *****************
 38912 ;; Defined at:
 38913 ;;		line 232 in file "flash.c"
 38914 ;; Parameters:    Size  Location     Type
 38915 ;;  start           2   19[COMRAM] unsigned int 
 38916 ;;  data            2   21[COMRAM] PTR unsigned char 
 38917 ;;		 -> _spi_external_rx_buffer(64), buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), 
 38918 ;;		 -> fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@del
      +eted_value(1), 
 38919 ;;		 -> _write_fat@value(2), ReceivedDataBuffer(64), msd_buffer(512), 
 38920 ;;  data_length     2   23[COMRAM] unsigned int 
 38921 ;;  buffer          1   25[COMRAM] enum E6890
 38922 ;; Auto vars:     Size  Location     Type
 38923 ;;  command         4   26[COMRAM] unsigned char [4]
 38924 ;; Return value:  Size  Location     Type
 38925 ;;                  1    wreg      void 
 38926 ;; Registers used:
 38927 ;;		wreg, status,2, status,0, cstack
 38928 ;; Tracked objects:
 38929 ;;		On entry : 0/0
 38930 ;;		On exit  : 0/0
 38931 ;;		Unchanged: 0/0
 38932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38933 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38934 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38936 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38937 ;;Total ram usage:       11 bytes
 38938 ;; Hardware stack levels used:    1
 38939 ;; Hardware stack levels required when called:    3
 38940 ;; This function calls:
 38941 ;;		__flash_is_busy
 38942 ;;		_spi_tx_tx
 38943 ;; This function is called by:
 38944 ;;		_flash_page_write
 38945 ;;		_flash_partial_write
 38946 ;; This function uses a non-reentrant model
 38947 ;;
 38948                           
 38949                           	psect	text195
 38950  007E42                     __ptext195:
 38951                           	opt stack 0
 38952  007E42                     __flash_write_to_buffer:
 38953                           	opt stack 23
 38954                           
 38955                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 38956                           
 38957                           ;incstack = 0
 38958  007E42  EC92  F043         	call	__flash_is_busy	;wreg free
 38959  007E46  0900               	iorlw	0
 38960  007E48  A4D8               	btfss	status,2,c
 38961  007E4A  D7FB               	goto	__flash_write_to_buffer
 38962                           
 38963                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 38964  007E4C  501A               	movf	__flash_write_to_buffer@buffer,w,c
 38965  007E4E  A4D8               	btfss	status,2,c
 38966  007E50  D002               	goto	l1786
 38967                           
 38968                           ;flash.c: 241: command[0] = 0x84;
 38969  007E52  0E84               	movlw	132
 38970  007E54  6E1B               	movwf	__flash_write_to_buffer@command,c
 38971  007E56                     l1786:
 38972                           
 38973                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 38974  007E56  041A               	decf	__flash_write_to_buffer@buffer,w,c
 38975  007E58  A4D8               	btfss	status,2,c
 38976  007E5A  D002               	goto	l1787
 38977                           
 38978                           ;flash.c: 243: command[0] = 0x87;
 38979  007E5C  0E87               	movlw	135
 38980  007E5E  6E1B               	movwf	__flash_write_to_buffer@command,c
 38981  007E60                     l1787:
 38982                           
 38983                           ;flash.c: 245: command[1] = 0x00;
 38984  007E60  0E00               	movlw	0
 38985  007E62  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 38986                           
 38987                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 38988  007E64  5015               	movf	__flash_write_to_buffer@start+1,w,c
 38989  007E66  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 38990                           
 38991                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 38992  007E68  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 38993                           
 38994                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 38995  007E6C  0E1B               	movlw	low __flash_write_to_buffer@command
 38996  007E6E  6E01               	movwf	spi_tx_tx@command,c
 38997  007E70  0E00               	movlw	high __flash_write_to_buffer@command
 38998  007E72  6E02               	movwf	spi_tx_tx@command+1,c
 38999  007E74  0E00               	movlw	0
 39000  007E76  6E04               	movwf	spi_tx_tx@command_length+1,c
 39001  007E78  0E04               	movlw	4
 39002  007E7A  6E03               	movwf	spi_tx_tx@command_length,c
 39003  007E7C  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 39004  007E80  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 39005  007E84  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 39006  007E88  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 39007  007E8C  EC53  F036         	call	_spi_tx_tx	;wreg free
 39008  007E90  0012               	return		;funcret
 39009  007E92                     __end_of__flash_write_to_buffer:
 39010                           	opt stack 0
 39011                           tosu	equ	0xFFF
 39012                           tosh	equ	0xFFE
 39013                           tosl	equ	0xFFD
 39014                           pclath	equ	0xFFA
 39015                           tblptru	equ	0xFF8
 39016                           tblptrh	equ	0xFF7
 39017                           tblptrl	equ	0xFF6
 39018                           tablat	equ	0xFF5
 39019                           prodh	equ	0xFF4
 39020                           prodl	equ	0xFF3
 39021                           intcon	equ	0xFF2
 39022                           intcon2	equ	0xFF1
 39023                           intcon3	equ	0xFF0
 39024                           indf0	equ	0xFEF
 39025                           postinc0	equ	0xFEE
 39026                           fsr0h	equ	0xFEA
 39027                           fsr0l	equ	0xFE9
 39028                           wreg	equ	0xFE8
 39029                           indf1	equ	0xFE7
 39030                           postdec1	equ	0xFE5
 39031                           plusw1	equ	0xFE3
 39032                           fsr1h	equ	0xFE2
 39033                           fsr1l	equ	0xFE1
 39034                           indf2	equ	0xFDF
 39035                           postinc2	equ	0xFDE
 39036                           postdec2	equ	0xFDD
 39037                           plusw2	equ	0xFDB
 39038                           fsr2h	equ	0xFDA
 39039                           fsr2l	equ	0xFD9
 39040                           status	equ	0xFD8
 39041                           
 39042 ;; *************** function _spi_tx_tx *****************
 39043 ;; Defined at:
 39044 ;;		line 386 in file "spi.c"
 39045 ;; Parameters:    Size  Location     Type
 39046 ;;  command         2    0[COMRAM] PTR unsigned char 
 39047 ;;		 -> _flash_write_to_buffer@command(4), 
 39048 ;;  command_leng    2    2[COMRAM] unsigned int 
 39049 ;;  data            2    4[COMRAM] PTR unsigned char 
 39050 ;;		 -> _spi_external_rx_buffer(64), buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), 
 39051 ;;		 -> fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@del
      +eted_value(1), 
 39052 ;;		 -> _write_fat@value(2), ReceivedDataBuffer(64), msd_buffer(512), 
 39053 ;;  data_length     2    6[COMRAM] unsigned int 
 39054 ;; Auto vars:     Size  Location     Type
 39055 ;;		None
 39056 ;; Return value:  Size  Location     Type
 39057 ;;                  1    wreg      void 
 39058 ;; Registers used:
 39059 ;;		wreg, status,2, status,0
 39060 ;; Tracked objects:
 39061 ;;		On entry : 0/0
 39062 ;;		On exit  : 0/0
 39063 ;;		Unchanged: 0/0
 39064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39065 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39067 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39068 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39069 ;;Total ram usage:       12 bytes
 39070 ;; Hardware stack levels used:    1
 39071 ;; This function calls:
 39072 ;;		Nothing
 39073 ;; This function is called by:
 39074 ;;		__flash_write_to_buffer
 39075 ;; This function uses a non-reentrant model
 39076 ;;
 39077                           
 39078                           	psect	text196
 39079  006CA6                     __ptext196:
 39080                           	opt stack 0
 39081  006CA6                     _spi_tx_tx:
 39082                           	opt stack 25
 39083                           
 39084                           ;spi.c: 389: DMACON1bits.SSCON1 = 0;
 39085                           
 39086                           ;incstack = 0
 39087  006CA6  9E88               	bcf	3976,7,c	;volatile
 39088                           
 39089                           ;spi.c: 390: DMACON1bits.SSCON0 = 0;
 39090  006CA8  9C88               	bcf	3976,6,c	;volatile
 39091                           
 39092                           ;spi.c: 392: DMACON1bits.TXINC = 1;
 39093  006CAA  8A88               	bsf	3976,5,c	;volatile
 39094                           
 39095                           ;spi.c: 394: DMACON1bits.RXINC = 0;
 39096  006CAC  9888               	bcf	3976,4,c	;volatile
 39097                           
 39098                           ;spi.c: 396: DMACON1bits.DUPLEX1 = 0;
 39099  006CAE  9688               	bcf	3976,3,c	;volatile
 39100                           
 39101                           ;spi.c: 397: DMACON1bits.DUPLEX0 = 1;
 39102  006CB0  8488               	bsf	3976,2,c	;volatile
 39103                           
 39104                           ;spi.c: 399: DMACON1bits.DLYINTEN = 0;
 39105  006CB2  9288               	bcf	3976,1,c	;volatile
 39106                           
 39107                           ;spi.c: 401: DMACON2bits.DLYCYC = 0b0000;
 39108  006CB4  9886               	bcf	3974,4,c	;volatile
 39109  006CB6  9A86               	bcf	3974,5,c	;volatile
 39110  006CB8  9C86               	bcf	3974,6,c	;volatile
 39111  006CBA  9E86               	bcf	3974,7,c	;volatile
 39112                           
 39113                           ;spi.c: 403: DMACON2bits.INTLVL = 0b0000;
 39114  006CBC  9086               	bcf	3974,0,c	;volatile
 39115  006CBE  9286               	bcf	3974,1,c	;volatile
 39116  006CC0  9486               	bcf	3974,2,c	;volatile
 39117  006CC2  9686               	bcf	3974,3,c	;volatile
 39118                           
 39119                           ;spi.c: 406: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39120  006CC4  5002               	movf	spi_tx_tx@command+1,w,c
 39121  006CC6  6E6A               	movwf	3946,c	;volatile
 39122                           
 39123                           ;spi.c: 407: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39124  006CC8  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 39125                           
 39126                           ;spi.c: 410: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39127  006CCC  0EFF               	movlw	255
 39128  006CCE  6E09               	movwf	??_spi_tx_tx& (0+255),c
 39129  006CD0  0EFF               	movlw	255
 39130  006CD2  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 39131  006CD4  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 39132  006CD8  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 39133  006CDC  5009               	movf	??_spi_tx_tx,w,c
 39134  006CDE  260B               	addwf	??_spi_tx_tx+2,f,c
 39135  006CE0  500A               	movf	??_spi_tx_tx+1,w,c
 39136  006CE2  220C               	addwfc	??_spi_tx_tx+3,f,c
 39137  006CE4  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 39138  006CE8  6A0C               	clrf	??_spi_tx_tx+3,c
 39139  006CEA  500B               	movf	??_spi_tx_tx+2,w,c
 39140  006CEC  6E66               	movwf	3942,c	;volatile
 39141                           
 39142                           ;spi.c: 411: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39143  006CEE  0403               	decf	spi_tx_tx@command_length,w,c
 39144  006CF0  6E67               	movwf	3943,c	;volatile
 39145                           
 39146                           ;spi.c: 414: LATDbits.LD7 = 0;
 39147  006CF2  9E8C               	bcf	3980,7,c	;volatile
 39148                           
 39149                           ;spi.c: 417: DMACON1bits.DMAEN = 1;
 39150  006CF4  8088               	bsf	3976,0,c	;volatile
 39151  006CF6  B088               	btfsc	3976,0,c	;volatile
 39152  006CF8  D7FE               	goto	l2897
 39153                           
 39154                           ;spi.c: 421: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39155  006CFA  5006               	movf	spi_tx_tx@data+1,w,c
 39156  006CFC  6E6A               	movwf	3946,c	;volatile
 39157                           
 39158                           ;spi.c: 422: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39159  006CFE  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 39160                           
 39161                           ;spi.c: 425: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 39162  006D02  0EFF               	movlw	255
 39163  006D04  6E09               	movwf	??_spi_tx_tx& (0+255),c
 39164  006D06  0EFF               	movlw	255
 39165  006D08  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 39166  006D0A  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 39167  006D0E  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 39168  006D12  5009               	movf	??_spi_tx_tx,w,c
 39169  006D14  260B               	addwf	??_spi_tx_tx+2,f,c
 39170  006D16  500A               	movf	??_spi_tx_tx+1,w,c
 39171  006D18  220C               	addwfc	??_spi_tx_tx+3,f,c
 39172  006D1A  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 39173  006D1E  6A0C               	clrf	??_spi_tx_tx+3,c
 39174  006D20  500B               	movf	??_spi_tx_tx+2,w,c
 39175  006D22  6E66               	movwf	3942,c	;volatile
 39176                           
 39177                           ;spi.c: 426: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 39178  006D24  0407               	decf	spi_tx_tx@data_length,w,c
 39179  006D26  6E67               	movwf	3943,c	;volatile
 39180                           
 39181                           ;spi.c: 429: DMACON1bits.DMAEN = 1;
 39182  006D28  8088               	bsf	3976,0,c	;volatile
 39183  006D2A  B088               	btfsc	3976,0,c	;volatile
 39184  006D2C  D7FE               	goto	l2900
 39185                           
 39186                           ;spi.c: 433: LATDbits.LD7 = 1;
 39187  006D2E  8E8C               	bsf	3980,7,c	;volatile
 39188  006D30  0012               	return		;funcret
 39189  006D32                     __end_of_spi_tx_tx:
 39190                           	opt stack 0
 39191                           tosu	equ	0xFFF
 39192                           tosh	equ	0xFFE
 39193                           tosl	equ	0xFFD
 39194                           pclath	equ	0xFFA
 39195                           tblptru	equ	0xFF8
 39196                           tblptrh	equ	0xFF7
 39197                           tblptrl	equ	0xFF6
 39198                           tablat	equ	0xFF5
 39199                           prodh	equ	0xFF4
 39200                           prodl	equ	0xFF3
 39201                           intcon	equ	0xFF2
 39202                           intcon2	equ	0xFF1
 39203                           intcon3	equ	0xFF0
 39204                           indf0	equ	0xFEF
 39205                           postinc0	equ	0xFEE
 39206                           fsr0h	equ	0xFEA
 39207                           fsr0l	equ	0xFE9
 39208                           wreg	equ	0xFE8
 39209                           indf1	equ	0xFE7
 39210                           postdec1	equ	0xFE5
 39211                           plusw1	equ	0xFE3
 39212                           fsr1h	equ	0xFE2
 39213                           fsr1l	equ	0xFE1
 39214                           indf2	equ	0xFDF
 39215                           postinc2	equ	0xFDE
 39216                           postdec2	equ	0xFDD
 39217                           plusw2	equ	0xFDB
 39218                           fsr2h	equ	0xFDA
 39219                           fsr2l	equ	0xFD9
 39220                           status	equ	0xFD8
 39221                           
 39222 ;; *************** function __flash_write_page_from_buffer *****************
 39223 ;; Defined at:
 39224 ;;		line 254 in file "flash.c"
 39225 ;; Parameters:    Size  Location     Type
 39226 ;;  page            2   19[COMRAM] unsigned int 
 39227 ;;  buffer          1   21[COMRAM] enum E6890
 39228 ;; Auto vars:     Size  Location     Type
 39229 ;;  command         4   25[COMRAM] unsigned char [4]
 39230 ;; Return value:  Size  Location     Type
 39231 ;;                  1    wreg      void 
 39232 ;; Registers used:
 39233 ;;		wreg, status,2, status,0, cstack
 39234 ;; Tracked objects:
 39235 ;;		On entry : 0/0
 39236 ;;		On exit  : 0/0
 39237 ;;		Unchanged: 0/0
 39238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39239 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39240 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39241 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39242 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39243 ;;Total ram usage:       10 bytes
 39244 ;; Hardware stack levels used:    1
 39245 ;; Hardware stack levels required when called:    3
 39246 ;; This function calls:
 39247 ;;		__flash_is_busy
 39248 ;;		_spi_tx
 39249 ;; This function is called by:
 39250 ;;		_flash_page_write
 39251 ;;		_flash_partial_write
 39252 ;; This function uses a non-reentrant model
 39253 ;;
 39254                           
 39255                           	psect	text197
 39256  0079EE                     __ptext197:
 39257                           	opt stack 0
 39258  0079EE                     __flash_write_page_from_buffer:
 39259                           	opt stack 23
 39260                           
 39261                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 39262                           
 39263                           ;incstack = 0
 39264  0079EE  EC92  F043         	call	__flash_is_busy	;wreg free
 39265  0079F2  0900               	iorlw	0
 39266  0079F4  A4D8               	btfss	status,2,c
 39267  0079F6  D7FB               	goto	__flash_write_page_from_buffer
 39268                           
 39269                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 39270  0079F8  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 39271  0079FA  A4D8               	btfss	status,2,c
 39272  0079FC  D002               	goto	l1794
 39273                           
 39274                           ;flash.c: 263: command[0] = 0x83;
 39275  0079FE  0E83               	movlw	131
 39276  007A00  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 39277  007A02                     l1794:
 39278                           
 39279                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 39280  007A02  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 39281  007A04  A4D8               	btfss	status,2,c
 39282  007A06  D002               	goto	l1795
 39283                           
 39284                           ;flash.c: 265: command[0] = 0x86;
 39285  007A08  0E86               	movlw	134
 39286  007A0A  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 39287  007A0C                     l1795:
 39288                           
 39289                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 39290  007A0C  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 39291  007A10  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 39292  007A14  0E07               	movlw	7
 39293  007A16  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 39294  007A18                     u6845:
 39295  007A18  90D8               	bcf	status,0,c
 39296  007A1A  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 39297  007A1C  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 39298  007A1E  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 39299  007A20  D7FB               	goto	u6845
 39300  007A22  5017               	movf	??__flash_write_page_from_buffer,w,c
 39301  007A24  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 39302                           
 39303                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 39304  007A26  5014               	movf	__flash_write_page_from_buffer@page,w,c
 39305  007A28  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 39306  007A2A  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 39307                           
 39308                           ;flash.c: 269: command[3] = 0x00;
 39309  007A2C  0E00               	movlw	0
 39310  007A2E  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 39311                           
 39312                           ;flash.c: 272: spi_tx(command, 4);
 39313  007A30  0E1A               	movlw	low __flash_write_page_from_buffer@command
 39314  007A32  6E01               	movwf	spi_tx@data,c
 39315  007A34  0E00               	movlw	high __flash_write_page_from_buffer@command
 39316  007A36  6E02               	movwf	spi_tx@data+1,c
 39317  007A38  0E00               	movlw	0
 39318  007A3A  6E04               	movwf	spi_tx@length+1,c
 39319  007A3C  0E04               	movlw	4
 39320  007A3E  6E03               	movwf	spi_tx@length,c
 39321  007A40  EC4F  F03D         	call	_spi_tx	;wreg free
 39322  007A44  0012               	return		;funcret
 39323  007A46                     __end_of__flash_write_page_from_buffer:
 39324                           	opt stack 0
 39325                           tosu	equ	0xFFF
 39326                           tosh	equ	0xFFE
 39327                           tosl	equ	0xFFD
 39328                           pclath	equ	0xFFA
 39329                           tblptru	equ	0xFF8
 39330                           tblptrh	equ	0xFF7
 39331                           tblptrl	equ	0xFF6
 39332                           tablat	equ	0xFF5
 39333                           prodh	equ	0xFF4
 39334                           prodl	equ	0xFF3
 39335                           intcon	equ	0xFF2
 39336                           intcon2	equ	0xFF1
 39337                           intcon3	equ	0xFF0
 39338                           indf0	equ	0xFEF
 39339                           postinc0	equ	0xFEE
 39340                           fsr0h	equ	0xFEA
 39341                           fsr0l	equ	0xFE9
 39342                           wreg	equ	0xFE8
 39343                           indf1	equ	0xFE7
 39344                           postdec1	equ	0xFE5
 39345                           plusw1	equ	0xFE3
 39346                           fsr1h	equ	0xFE2
 39347                           fsr1l	equ	0xFE1
 39348                           indf2	equ	0xFDF
 39349                           postinc2	equ	0xFDE
 39350                           postdec2	equ	0xFDD
 39351                           plusw2	equ	0xFDB
 39352                           fsr2h	equ	0xFDA
 39353                           fsr2l	equ	0xFD9
 39354                           status	equ	0xFD8
 39355                           
 39356 ;; *************** function __flash_copy_page_to_buffer *****************
 39357 ;; Defined at:
 39358 ;;		line 150 in file "flash.c"
 39359 ;; Parameters:    Size  Location     Type
 39360 ;;  page            2   19[COMRAM] unsigned int 
 39361 ;;  buffer          1   21[COMRAM] enum E6890
 39362 ;; Auto vars:     Size  Location     Type
 39363 ;;  command         4   25[COMRAM] unsigned char [4]
 39364 ;; Return value:  Size  Location     Type
 39365 ;;                  1    wreg      void 
 39366 ;; Registers used:
 39367 ;;		wreg, status,2, status,0, cstack
 39368 ;; Tracked objects:
 39369 ;;		On entry : 0/0
 39370 ;;		On exit  : 0/0
 39371 ;;		Unchanged: 0/0
 39372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39373 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39374 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39375 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39376 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39377 ;;Total ram usage:       10 bytes
 39378 ;; Hardware stack levels used:    1
 39379 ;; Hardware stack levels required when called:    3
 39380 ;; This function calls:
 39381 ;;		__flash_is_busy
 39382 ;;		_spi_tx
 39383 ;; This function is called by:
 39384 ;;		_flash_partial_write
 39385 ;; This function uses a non-reentrant model
 39386 ;;
 39387                           
 39388                           	psect	text198
 39389  007A46                     __ptext198:
 39390                           	opt stack 0
 39391  007A46                     __flash_copy_page_to_buffer:
 39392                           	opt stack 21
 39393                           
 39394                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 39395                           
 39396                           ;incstack = 0
 39397  007A46  EC92  F043         	call	__flash_is_busy	;wreg free
 39398  007A4A  0900               	iorlw	0
 39399  007A4C  A4D8               	btfss	status,2,c
 39400  007A4E  D7FB               	goto	__flash_copy_page_to_buffer
 39401                           
 39402                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 39403  007A50  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 39404  007A52  A4D8               	btfss	status,2,c
 39405  007A54  D002               	goto	l1759
 39406                           
 39407                           ;flash.c: 159: command[0] = 0x53;
 39408  007A56  0E53               	movlw	83
 39409  007A58  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 39410  007A5A                     l1759:
 39411                           
 39412                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 39413  007A5A  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 39414  007A5C  A4D8               	btfss	status,2,c
 39415  007A5E  D002               	goto	l1760
 39416                           
 39417                           ;flash.c: 161: command[0] = 0x55;
 39418  007A60  0E55               	movlw	85
 39419  007A62  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 39420  007A64                     l1760:
 39421                           
 39422                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 39423  007A64  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 39424  007A68  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 39425  007A6C  0E07               	movlw	7
 39426  007A6E  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 39427  007A70                     u7105:
 39428  007A70  90D8               	bcf	status,0,c
 39429  007A72  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 39430  007A74  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 39431  007A76  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 39432  007A78  D7FB               	goto	u7105
 39433  007A7A  5017               	movf	??__flash_copy_page_to_buffer,w,c
 39434  007A7C  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 39435                           
 39436                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 39437  007A7E  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 39438  007A80  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 39439  007A82  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 39440                           
 39441                           ;flash.c: 165: command[3] = 0x00;
 39442  007A84  0E00               	movlw	0
 39443  007A86  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 39444                           
 39445                           ;flash.c: 168: spi_tx(command, 4);
 39446  007A88  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 39447  007A8A  6E01               	movwf	spi_tx@data,c
 39448  007A8C  0E00               	movlw	high __flash_copy_page_to_buffer@command
 39449  007A8E  6E02               	movwf	spi_tx@data+1,c
 39450  007A90  0E00               	movlw	0
 39451  007A92  6E04               	movwf	spi_tx@length+1,c
 39452  007A94  0E04               	movlw	4
 39453  007A96  6E03               	movwf	spi_tx@length,c
 39454  007A98  EC4F  F03D         	call	_spi_tx	;wreg free
 39455  007A9C  0012               	return		;funcret
 39456  007A9E                     __end_of__flash_copy_page_to_buffer:
 39457                           	opt stack 0
 39458                           tosu	equ	0xFFF
 39459                           tosh	equ	0xFFE
 39460                           tosl	equ	0xFFD
 39461                           pclath	equ	0xFFA
 39462                           tblptru	equ	0xFF8
 39463                           tblptrh	equ	0xFF7
 39464                           tblptrl	equ	0xFF6
 39465                           tablat	equ	0xFF5
 39466                           prodh	equ	0xFF4
 39467                           prodl	equ	0xFF3
 39468                           intcon	equ	0xFF2
 39469                           intcon2	equ	0xFF1
 39470                           intcon3	equ	0xFF0
 39471                           indf0	equ	0xFEF
 39472                           postinc0	equ	0xFEE
 39473                           fsr0h	equ	0xFEA
 39474                           fsr0l	equ	0xFE9
 39475                           wreg	equ	0xFE8
 39476                           indf1	equ	0xFE7
 39477                           postdec1	equ	0xFE5
 39478                           plusw1	equ	0xFE3
 39479                           fsr1h	equ	0xFE2
 39480                           fsr1l	equ	0xFE1
 39481                           indf2	equ	0xFDF
 39482                           postinc2	equ	0xFDE
 39483                           postdec2	equ	0xFDD
 39484                           plusw2	equ	0xFDB
 39485                           fsr2h	equ	0xFDA
 39486                           fsr2l	equ	0xFD9
 39487                           status	equ	0xFD8
 39488                           
 39489 ;; *************** function __flash_compare_page_to_buffer *****************
 39490 ;; Defined at:
 39491 ;;		line 172 in file "flash.c"
 39492 ;; Parameters:    Size  Location     Type
 39493 ;;  page            2   19[COMRAM] unsigned int 
 39494 ;;  buffer          1   21[COMRAM] enum E6890
 39495 ;; Auto vars:     Size  Location     Type
 39496 ;;  command         4   27[COMRAM] unsigned char [4]
 39497 ;;  status          2   25[COMRAM] unsigned int 
 39498 ;; Return value:  Size  Location     Type
 39499 ;;                  1    wreg      enum E6894
 39500 ;; Registers used:
 39501 ;;		wreg, status,2, status,0, cstack
 39502 ;; Tracked objects:
 39503 ;;		On entry : 0/0
 39504 ;;		On exit  : 0/0
 39505 ;;		Unchanged: 0/0
 39506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39507 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39508 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39509 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39510 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39511 ;;Total ram usage:       12 bytes
 39512 ;; Hardware stack levels used:    1
 39513 ;; Hardware stack levels required when called:    3
 39514 ;; This function calls:
 39515 ;;		__flash_get_status
 39516 ;;		__flash_is_busy
 39517 ;;		_spi_tx
 39518 ;; This function is called by:
 39519 ;;		_flash_page_write
 39520 ;;		_flash_partial_write
 39521 ;; This function uses a non-reentrant model
 39522 ;;
 39523                           
 39524                           	psect	text199
 39525  00703C                     __ptext199:
 39526                           	opt stack 0
 39527  00703C                     __flash_compare_page_to_buffer:
 39528                           	opt stack 23
 39529                           
 39530                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 39531                           
 39532                           ;incstack = 0
 39533  00703C  EC92  F043         	call	__flash_is_busy	;wreg free
 39534  007040  0900               	iorlw	0
 39535  007042  A4D8               	btfss	status,2,c
 39536  007044  D7FB               	goto	__flash_compare_page_to_buffer
 39537                           
 39538                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 39539  007046  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 39540  007048  A4D8               	btfss	status,2,c
 39541  00704A  D002               	goto	l1767
 39542                           
 39543                           ;flash.c: 182: command[0] = 0x60;
 39544  00704C  0E60               	movlw	96
 39545  00704E  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 39546  007050                     l1767:
 39547                           
 39548                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 39549  007050  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 39550  007052  A4D8               	btfss	status,2,c
 39551  007054  D002               	goto	l1768
 39552                           
 39553                           ;flash.c: 184: command[0] = 0x60;
 39554  007056  0E60               	movlw	96
 39555  007058  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 39556  00705A                     l1768:
 39557                           
 39558                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 39559  00705A  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 39560  00705E  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 39561  007062  0E07               	movlw	7
 39562  007064  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 39563  007066                     u6755:
 39564  007066  90D8               	bcf	status,0,c
 39565  007068  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 39566  00706A  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 39567  00706C  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 39568  00706E  D7FB               	goto	u6755
 39569  007070  5017               	movf	??__flash_compare_page_to_buffer,w,c
 39570  007072  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 39571                           
 39572                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 39573  007074  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 39574  007076  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 39575  007078  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 39576                           
 39577                           ;flash.c: 188: command[3] = 0x00;
 39578  00707A  0E00               	movlw	0
 39579  00707C  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 39580                           
 39581                           ;flash.c: 191: spi_tx(command, 4);
 39582  00707E  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 39583  007080  6E01               	movwf	spi_tx@data,c
 39584  007082  0E00               	movlw	high __flash_compare_page_to_buffer@command
 39585  007084  6E02               	movwf	spi_tx@data+1,c
 39586  007086  0E00               	movlw	0
 39587  007088  6E04               	movwf	spi_tx@length+1,c
 39588  00708A  0E04               	movlw	4
 39589  00708C  6E03               	movwf	spi_tx@length,c
 39590  00708E  EC4F  F03D         	call	_spi_tx	;wreg free
 39591  007092  EC92  F043         	call	__flash_is_busy	;wreg free
 39592  007096  0900               	iorlw	0
 39593  007098  A4D8               	btfss	status,2,c
 39594  00709A  D7FB               	goto	l1770
 39595                           
 39596                           ;flash.c: 197: status = _flash_get_status();
 39597  00709C  EC13  F042         	call	__flash_get_status	;wreg free
 39598  0070A0  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 39599  0070A4  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 39600                           
 39601                           ;flash.c: 200: if(status & 0b0000000001000000)
 39602  0070A8  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 39603  0070AA  D002               	goto	l1772
 39604                           
 39605                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 39606  0070AC  0E01               	movlw	1
 39607                           
 39608                           ;flash.c: 204: }
 39609  0070AE  0012               	return	
 39610  0070B0                     l1772:
 39611                           
 39612                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 39613  0070B0  0E00               	movlw	0
 39614  0070B2  0012               	return	
 39615  0070B4                     __end_of__flash_compare_page_to_buffer:
 39616                           	opt stack 0
 39617                           tosu	equ	0xFFF
 39618                           tosh	equ	0xFFE
 39619                           tosl	equ	0xFFD
 39620                           pclath	equ	0xFFA
 39621                           tblptru	equ	0xFF8
 39622                           tblptrh	equ	0xFF7
 39623                           tblptrl	equ	0xFF6
 39624                           tablat	equ	0xFF5
 39625                           prodh	equ	0xFF4
 39626                           prodl	equ	0xFF3
 39627                           intcon	equ	0xFF2
 39628                           intcon2	equ	0xFF1
 39629                           intcon3	equ	0xFF0
 39630                           indf0	equ	0xFEF
 39631                           postinc0	equ	0xFEE
 39632                           fsr0h	equ	0xFEA
 39633                           fsr0l	equ	0xFE9
 39634                           wreg	equ	0xFE8
 39635                           indf1	equ	0xFE7
 39636                           postdec1	equ	0xFE5
 39637                           plusw1	equ	0xFE3
 39638                           fsr1h	equ	0xFE2
 39639                           fsr1l	equ	0xFE1
 39640                           indf2	equ	0xFDF
 39641                           postinc2	equ	0xFDE
 39642                           postdec2	equ	0xFDD
 39643                           plusw2	equ	0xFDB
 39644                           fsr2h	equ	0xFDA
 39645                           fsr2l	equ	0xFD9
 39646                           status	equ	0xFD8
 39647                           
 39648 ;; *************** function __update_modified_time *****************
 39649 ;; Defined at:
 39650 ;;		line 53 in file "fat16.c"
 39651 ;; Parameters:    Size  Location     Type
 39652 ;;  root            2    4[COMRAM] PTR struct .
 39653 ;;		 -> fat_append_to_file@root(32), 
 39654 ;; Auto vars:     Size  Location     Type
 39655 ;;		None
 39656 ;; Return value:  Size  Location     Type
 39657 ;;                  1    wreg      void 
 39658 ;; Registers used:
 39659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39660 ;; Tracked objects:
 39661 ;;		On entry : 0/0
 39662 ;;		On exit  : 0/0
 39663 ;;		Unchanged: 0/0
 39664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39669 ;;Total ram usage:        2 bytes
 39670 ;; Hardware stack levels used:    1
 39671 ;; Hardware stack levels required when called:    1
 39672 ;; This function calls:
 39673 ;;		__get_date
 39674 ;;		__get_time
 39675 ;; This function is called by:
 39676 ;;		_fat_append_to_file
 39677 ;; This function uses a non-reentrant model
 39678 ;;
 39679                           
 39680                           	psect	text200
 39681  0083C2                     __ptext200:
 39682                           	opt stack 0
 39683  0083C2                     __update_modified_time:
 39684                           	opt stack 25
 39685                           
 39686                           ;fat16.c: 55: root->modifiedDate = _get_date();
 39687                           
 39688                           ;incstack = 0
 39689  0083C2  ECBB  F044         	call	__get_date	;wreg free
 39690  0083C6  EE20 F018          	lfsr	2,24
 39691  0083CA  5005               	movf	__update_modified_time@root,w,c
 39692  0083CC  26D9               	addwf	fsr2l,f,c
 39693  0083CE  5006               	movf	__update_modified_time@root+1,w,c
 39694  0083D0  22DA               	addwfc	fsr2h,f,c
 39695  0083D2  C001  FFDE         	movff	?__get_date,postinc2
 39696  0083D6  C002  FFDD         	movff	?__get_date+1,postdec2
 39697                           
 39698                           ;fat16.c: 56: root->modifiedTime = _get_time();
 39699  0083DA  ECB6  F044         	call	__get_time	;wreg free
 39700  0083DE  EE20 F016          	lfsr	2,22
 39701  0083E2  5005               	movf	__update_modified_time@root,w,c
 39702  0083E4  26D9               	addwf	fsr2l,f,c
 39703  0083E6  5006               	movf	__update_modified_time@root+1,w,c
 39704  0083E8  22DA               	addwfc	fsr2h,f,c
 39705  0083EA  C001  FFDE         	movff	?__get_time,postinc2
 39706  0083EE  C002  FFDD         	movff	?__get_time+1,postdec2
 39707  0083F2  0012               	return		;funcret
 39708  0083F4                     __end_of__update_modified_time:
 39709                           	opt stack 0
 39710                           tosu	equ	0xFFF
 39711                           tosh	equ	0xFFE
 39712                           tosl	equ	0xFFD
 39713                           pclath	equ	0xFFA
 39714                           tblptru	equ	0xFF8
 39715                           tblptrh	equ	0xFF7
 39716                           tblptrl	equ	0xFF6
 39717                           tablat	equ	0xFF5
 39718                           prodh	equ	0xFF4
 39719                           prodl	equ	0xFF3
 39720                           intcon	equ	0xFF2
 39721                           intcon2	equ	0xFF1
 39722                           intcon3	equ	0xFF0
 39723                           indf0	equ	0xFEF
 39724                           postinc0	equ	0xFEE
 39725                           fsr0h	equ	0xFEA
 39726                           fsr0l	equ	0xFE9
 39727                           wreg	equ	0xFE8
 39728                           indf1	equ	0xFE7
 39729                           postdec1	equ	0xFE5
 39730                           plusw1	equ	0xFE3
 39731                           fsr1h	equ	0xFE2
 39732                           fsr1l	equ	0xFE1
 39733                           indf2	equ	0xFDF
 39734                           postinc2	equ	0xFDE
 39735                           postdec2	equ	0xFDD
 39736                           plusw2	equ	0xFDB
 39737                           fsr2h	equ	0xFDA
 39738                           fsr2l	equ	0xFD9
 39739                           status	equ	0xFD8
 39740                           
 39741 ;; *************** function __get_time *****************
 39742 ;; Defined at:
 39743 ;;		line 29 in file "fat16.c"
 39744 ;; Parameters:    Size  Location     Type
 39745 ;;		None
 39746 ;; Auto vars:     Size  Location     Type
 39747 ;;  time            2    2[COMRAM] unsigned int 
 39748 ;; Return value:  Size  Location     Type
 39749 ;;                  2    0[COMRAM] unsigned int 
 39750 ;; Registers used:
 39751 ;;		None
 39752 ;; Tracked objects:
 39753 ;;		On entry : 0/0
 39754 ;;		On exit  : 0/0
 39755 ;;		Unchanged: 0/0
 39756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39761 ;;Total ram usage:        4 bytes
 39762 ;; Hardware stack levels used:    1
 39763 ;; This function calls:
 39764 ;;		Nothing
 39765 ;; This function is called by:
 39766 ;;		__update_modified_time
 39767 ;;		_fat_create_file
 39768 ;; This function uses a non-reentrant model
 39769 ;;
 39770                           
 39771                           	psect	text201
 39772  00896C                     __ptext201:
 39773                           	opt stack 0
 39774  00896C                     __get_time:
 39775                           	opt stack 26
 39776                           
 39777                           ;fat16.c: 31: uint16_t time;;fat16.c: 38: return time;
 39778                           
 39779                           ;incstack = 0
 39780  00896C  C003  F001         	movff	__get_time@time,?__get_time
 39781  008970  C004  F002         	movff	__get_time@time+1,?__get_time+1
 39782  008974  0012               	return		;funcret
 39783  008976                     __end_of__get_time:
 39784                           	opt stack 0
 39785                           tosu	equ	0xFFF
 39786                           tosh	equ	0xFFE
 39787                           tosl	equ	0xFFD
 39788                           pclath	equ	0xFFA
 39789                           tblptru	equ	0xFF8
 39790                           tblptrh	equ	0xFF7
 39791                           tblptrl	equ	0xFF6
 39792                           tablat	equ	0xFF5
 39793                           prodh	equ	0xFF4
 39794                           prodl	equ	0xFF3
 39795                           intcon	equ	0xFF2
 39796                           intcon2	equ	0xFF1
 39797                           intcon3	equ	0xFF0
 39798                           indf0	equ	0xFEF
 39799                           postinc0	equ	0xFEE
 39800                           fsr0h	equ	0xFEA
 39801                           fsr0l	equ	0xFE9
 39802                           wreg	equ	0xFE8
 39803                           indf1	equ	0xFE7
 39804                           postdec1	equ	0xFE5
 39805                           plusw1	equ	0xFE3
 39806                           fsr1h	equ	0xFE2
 39807                           fsr1l	equ	0xFE1
 39808                           indf2	equ	0xFDF
 39809                           postinc2	equ	0xFDE
 39810                           postdec2	equ	0xFDD
 39811                           plusw2	equ	0xFDB
 39812                           fsr2h	equ	0xFDA
 39813                           fsr2l	equ	0xFD9
 39814                           status	equ	0xFD8
 39815                           
 39816 ;; *************** function __get_date *****************
 39817 ;; Defined at:
 39818 ;;		line 41 in file "fat16.c"
 39819 ;; Parameters:    Size  Location     Type
 39820 ;;		None
 39821 ;; Auto vars:     Size  Location     Type
 39822 ;;  date            2    2[COMRAM] unsigned int 
 39823 ;; Return value:  Size  Location     Type
 39824 ;;                  2    0[COMRAM] unsigned int 
 39825 ;; Registers used:
 39826 ;;		None
 39827 ;; Tracked objects:
 39828 ;;		On entry : 0/0
 39829 ;;		On exit  : 0/0
 39830 ;;		Unchanged: 0/0
 39831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39836 ;;Total ram usage:        4 bytes
 39837 ;; Hardware stack levels used:    1
 39838 ;; This function calls:
 39839 ;;		Nothing
 39840 ;; This function is called by:
 39841 ;;		__update_modified_time
 39842 ;;		_fat_create_file
 39843 ;; This function uses a non-reentrant model
 39844 ;;
 39845                           
 39846                           	psect	text202
 39847  008976                     __ptext202:
 39848                           	opt stack 0
 39849  008976                     __get_date:
 39850                           	opt stack 26
 39851                           
 39852                           ;fat16.c: 43: uint16_t date;;fat16.c: 50: return date;
 39853                           
 39854                           ;incstack = 0
 39855  008976  C003  F001         	movff	__get_date@date,?__get_date
 39856  00897A  C004  F002         	movff	__get_date@date+1,?__get_date+1
 39857  00897E  0012               	return		;funcret
 39858  008980                     __end_of__get_date:
 39859                           	opt stack 0
 39860                           tosu	equ	0xFFF
 39861                           tosh	equ	0xFFE
 39862                           tosl	equ	0xFFD
 39863                           pclath	equ	0xFFA
 39864                           tblptru	equ	0xFF8
 39865                           tblptrh	equ	0xFF7
 39866                           tblptrl	equ	0xFF6
 39867                           tablat	equ	0xFF5
 39868                           prodh	equ	0xFF4
 39869                           prodl	equ	0xFF3
 39870                           intcon	equ	0xFF2
 39871                           intcon2	equ	0xFF1
 39872                           intcon3	equ	0xFF0
 39873                           indf0	equ	0xFEF
 39874                           postinc0	equ	0xFEE
 39875                           fsr0h	equ	0xFEA
 39876                           fsr0l	equ	0xFE9
 39877                           wreg	equ	0xFE8
 39878                           indf1	equ	0xFE7
 39879                           postdec1	equ	0xFE5
 39880                           plusw1	equ	0xFE3
 39881                           fsr1h	equ	0xFE2
 39882                           fsr1l	equ	0xFE1
 39883                           indf2	equ	0xFDF
 39884                           postinc2	equ	0xFDE
 39885                           postdec2	equ	0xFDD
 39886                           plusw2	equ	0xFDB
 39887                           fsr2h	equ	0xFDA
 39888                           fsr2l	equ	0xFD9
 39889                           status	equ	0xFD8
 39890                           
 39891 ;; *************** function __sector_from_cluster *****************
 39892 ;; Defined at:
 39893 ;;		line 445 in file "fat16.c"
 39894 ;; Parameters:    Size  Location     Type
 39895 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 39896 ;; Auto vars:     Size  Location     Type
 39897 ;;		None
 39898 ;; Return value:  Size  Location     Type
 39899 ;;                  2    0[COMRAM] unsigned int 
 39900 ;; Registers used:
 39901 ;;		wreg, status,2, status,0
 39902 ;; Tracked objects:
 39903 ;;		On entry : 0/0
 39904 ;;		On exit  : 0/0
 39905 ;;		Unchanged: 0/0
 39906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39911 ;;Total ram usage:        2 bytes
 39912 ;; Hardware stack levels used:    1
 39913 ;; This function calls:
 39914 ;;		Nothing
 39915 ;; This function is called by:
 39916 ;;		_fat_append_to_file
 39917 ;;		_fat_read_from_file_fast
 39918 ;;		_fat_modify_file
 39919 ;; This function uses a non-reentrant model
 39920 ;;
 39921                           
 39922                           	psect	text203
 39923  0088DA                     __ptext203:
 39924                           	opt stack 0
 39925  0088DA                     __sector_from_cluster:
 39926                           	opt stack 27
 39927                           
 39928                           ;fat16.c: 447: return fat_cluster + 38 - 2;
 39929                           
 39930                           ;incstack = 0
 39931  0088DA  0E24               	movlw	36
 39932  0088DC  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 39933  0088DE  6E01               	movwf	?__sector_from_cluster,c
 39934  0088E0  0E00               	movlw	0
 39935  0088E2  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 39936  0088E4  6E02               	movwf	?__sector_from_cluster+1,c
 39937  0088E6  0012               	return	
 39938  0088E8                     __end_of__sector_from_cluster:
 39939                           	opt stack 0
 39940                           tosu	equ	0xFFF
 39941                           tosh	equ	0xFFE
 39942                           tosl	equ	0xFFD
 39943                           pclath	equ	0xFFA
 39944                           tblptru	equ	0xFF8
 39945                           tblptrh	equ	0xFF7
 39946                           tblptrl	equ	0xFF6
 39947                           tablat	equ	0xFF5
 39948                           prodh	equ	0xFF4
 39949                           prodl	equ	0xFF3
 39950                           intcon	equ	0xFF2
 39951                           intcon2	equ	0xFF1
 39952                           intcon3	equ	0xFF0
 39953                           indf0	equ	0xFEF
 39954                           postinc0	equ	0xFEE
 39955                           fsr0h	equ	0xFEA
 39956                           fsr0l	equ	0xFE9
 39957                           wreg	equ	0xFE8
 39958                           indf1	equ	0xFE7
 39959                           postdec1	equ	0xFE5
 39960                           plusw1	equ	0xFE3
 39961                           fsr1h	equ	0xFE2
 39962                           fsr1l	equ	0xFE1
 39963                           indf2	equ	0xFDF
 39964                           postinc2	equ	0xFDE
 39965                           postdec2	equ	0xFDD
 39966                           plusw2	equ	0xFDB
 39967                           fsr2h	equ	0xFDA
 39968                           fsr2l	equ	0xFD9
 39969                           status	equ	0xFD8
 39970                           
 39971 ;; *************** function __read_fat *****************
 39972 ;; Defined at:
 39973 ;;		line 174 in file "fat16.c"
 39974 ;; Parameters:    Size  Location     Type
 39975 ;;  cluster         2   47[COMRAM] unsigned int 
 39976 ;; Auto vars:     Size  Location     Type
 39977 ;;  value           2   53[COMRAM] unsigned int 
 39978 ;;  offset          2   51[COMRAM] unsigned int 
 39979 ;;  fat_sector      2   49[COMRAM] unsigned int 
 39980 ;; Return value:  Size  Location     Type
 39981 ;;                  2   47[COMRAM] unsigned int 
 39982 ;; Registers used:
 39983 ;;		wreg, status,2, status,0, cstack
 39984 ;; Tracked objects:
 39985 ;;		On entry : 0/0
 39986 ;;		On exit  : 0/0
 39987 ;;		Unchanged: 0/0
 39988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39990 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39992 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39993 ;;Total ram usage:        8 bytes
 39994 ;; Hardware stack levels used:    1
 39995 ;; Hardware stack levels required when called:    5
 39996 ;; This function calls:
 39997 ;;		_flash_partial_read
 39998 ;; This function is called by:
 39999 ;;		_fat_delete_file
 40000 ;;		_fat_append_to_file
 40001 ;;		_fat_read_from_file_fast
 40002 ;;		_fat_resize_file
 40003 ;;		_fat_modify_file
 40004 ;; This function uses a non-reentrant model
 40005 ;;
 40006                           
 40007                           	psect	text204
 40008  007F22                     __ptext204:
 40009                           	opt stack 0
 40010  007F22                     __read_fat:
 40011                           	opt stack 22
 40012                           
 40013                           ;fat16.c: 176: uint16_t fat_sector;;fat16.c: 177: uint16_t offset;;fat16.c: 178: uint16_
      +                          t value;;fat16.c: 179: fat_sector = cluster>>8;
 40014                           
 40015                           ;incstack = 0
 40016  007F22  5031               	movf	__read_fat@cluster+1,w,c
 40017  007F24  6E32               	movwf	__read_fat@fat_sector,c
 40018  007F26  6A33               	clrf	__read_fat@fat_sector+1,c
 40019                           
 40020                           ;fat16.c: 180: fat_sector += 2;
 40021  007F28  0E02               	movlw	2
 40022  007F2A  2632               	addwf	__read_fat@fat_sector,f,c
 40023  007F2C  0E00               	movlw	0
 40024  007F2E  2233               	addwfc	__read_fat@fat_sector+1,f,c
 40025                           
 40026                           ;fat16.c: 181: offset = cluster & 0xFF;
 40027  007F30  5030               	movf	__read_fat@cluster,w,c
 40028  007F32  6E34               	movwf	__read_fat@offset,c
 40029  007F34  6A35               	clrf	__read_fat@offset+1,c
 40030                           
 40031                           ;fat16.c: 182: offset <<= 1;
 40032  007F36  90D8               	bcf	status,0,c
 40033  007F38  3634               	rlcf	__read_fat@offset,f,c
 40034  007F3A  3635               	rlcf	__read_fat@offset+1,f,c
 40035                           
 40036                           ;fat16.c: 183: flash_partial_read(fat_sector, offset, 2, &value);
 40037  007F3C  C032  F028         	movff	__read_fat@fat_sector,flash_partial_read@page
 40038  007F40  C033  F029         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 40039  007F44  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 40040  007F48  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 40041  007F4C  0E00               	movlw	0
 40042  007F4E  6E2D               	movwf	flash_partial_read@length+1,c
 40043  007F50  0E02               	movlw	2
 40044  007F52  6E2C               	movwf	flash_partial_read@length,c
 40045  007F54  0E36               	movlw	low __read_fat@value
 40046  007F56  6E2E               	movwf	flash_partial_read@data,c
 40047  007F58  0E00               	movlw	high __read_fat@value
 40048  007F5A  6E2F               	movwf	flash_partial_read@data+1,c
 40049  007F5C  ECFA  F041         	call	_flash_partial_read	;wreg free
 40050                           
 40051                           ;fat16.c: 184: return value;
 40052  007F60  C036  F030         	movff	__read_fat@value,?__read_fat
 40053  007F64  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 40054  007F68  0012               	return	
 40055  007F6A                     __end_of__read_fat:
 40056                           	opt stack 0
 40057                           tosu	equ	0xFFF
 40058                           tosh	equ	0xFFE
 40059                           tosl	equ	0xFFD
 40060                           pclath	equ	0xFFA
 40061                           tblptru	equ	0xFF8
 40062                           tblptrh	equ	0xFF7
 40063                           tblptrl	equ	0xFF6
 40064                           tablat	equ	0xFF5
 40065                           prodh	equ	0xFF4
 40066                           prodl	equ	0xFF3
 40067                           intcon	equ	0xFF2
 40068                           intcon2	equ	0xFF1
 40069                           intcon3	equ	0xFF0
 40070                           indf0	equ	0xFEF
 40071                           postinc0	equ	0xFEE
 40072                           fsr0h	equ	0xFEA
 40073                           fsr0l	equ	0xFE9
 40074                           wreg	equ	0xFE8
 40075                           indf1	equ	0xFE7
 40076                           postdec1	equ	0xFE5
 40077                           plusw1	equ	0xFE3
 40078                           fsr1h	equ	0xFE2
 40079                           fsr1l	equ	0xFE1
 40080                           indf2	equ	0xFDF
 40081                           postinc2	equ	0xFDE
 40082                           postdec2	equ	0xFDD
 40083                           plusw2	equ	0xFDB
 40084                           fsr2h	equ	0xFDA
 40085                           fsr2l	equ	0xFD9
 40086                           status	equ	0xFD8
 40087                           
 40088 ;; *************** function __get_empty_cluster *****************
 40089 ;; Defined at:
 40090 ;;		line 107 in file "fat16.c"
 40091 ;; Parameters:    Size  Location     Type
 40092 ;;  first_cluste    2   47[COMRAM] unsigned int 
 40093 ;; Auto vars:     Size  Location     Type
 40094 ;;  cluster         2   55[COMRAM] unsigned int 
 40095 ;;  value           2   53[COMRAM] unsigned int 
 40096 ;;  offset          2   51[COMRAM] unsigned int 
 40097 ;;  fat_sector      2   49[COMRAM] unsigned int 
 40098 ;; Return value:  Size  Location     Type
 40099 ;;                  2   47[COMRAM] unsigned int 
 40100 ;; Registers used:
 40101 ;;		wreg, status,2, status,0, cstack
 40102 ;; Tracked objects:
 40103 ;;		On entry : 0/0
 40104 ;;		On exit  : 0/0
 40105 ;;		Unchanged: 0/0
 40106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40108 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40110 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40111 ;;Total ram usage:       10 bytes
 40112 ;; Hardware stack levels used:    1
 40113 ;; Hardware stack levels required when called:    5
 40114 ;; This function calls:
 40115 ;;		_flash_partial_read
 40116 ;; This function is called by:
 40117 ;;		_fat_create_file
 40118 ;;		_fat_append_to_file
 40119 ;;		_fat_resize_file
 40120 ;; This function uses a non-reentrant model
 40121 ;;
 40122                           
 40123                           	psect	text205
 40124  006D32                     __ptext205:
 40125                           	opt stack 0
 40126  006D32                     __get_empty_cluster:
 40127                           	opt stack 21
 40128                           
 40129                           ;fat16.c: 109: uint16_t cluster;;fat16.c: 110: uint16_t fat_sector;;fat16.c: 111: uint16
      +                          _t offset;;fat16.c: 112: uint16_t value;;fat16.c: 115: if(first_cluster<2)
 40130                           
 40131                           ;incstack = 0
 40132  006D32  5031               	movf	__get_empty_cluster@first_cluster+1,w,c
 40133  006D34  E108               	bnz	l11574
 40134  006D36  0E02               	movlw	2
 40135  006D38  5C30               	subwf	__get_empty_cluster@first_cluster,w,c
 40136  006D3A  B0D8               	btfsc	status,0,c
 40137  006D3C  D004               	goto	l1929
 40138                           
 40139                           ;fat16.c: 116: {;fat16.c: 117: first_cluster = 2;
 40140  006D3E  0E00               	movlw	0
 40141  006D40  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 40142  006D42  0E02               	movlw	2
 40143  006D44  6E30               	movwf	__get_empty_cluster@first_cluster,c
 40144  006D46                     l1929:
 40145  006D46                     l11574:
 40146                           
 40147                           ;fat16.c: 118: };fat16.c: 120: for(cluster=first_cluster; cluster<(8154+2); ++cluster)
 40148  006D46  C030  F038         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 40149  006D4A  C031  F039         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 40150  006D4E                     l11576:
 40151  006D4E  0EDC               	movlw	220
 40152  006D50  5C38               	subwf	__get_empty_cluster@cluster,w,c
 40153  006D52  0E1F               	movlw	31
 40154  006D54  5839               	subwfb	__get_empty_cluster@cluster+1,w,c
 40155  006D56  B0D8               	btfsc	status,0,c
 40156  006D58  D02B               	goto	u8610
 40157                           
 40158                           ;fat16.c: 121: {;fat16.c: 122: fat_sector = cluster>>8;
 40159  006D5A  5039               	movf	__get_empty_cluster@cluster+1,w,c
 40160  006D5C  6E32               	movwf	__get_empty_cluster@fat_sector,c
 40161  006D5E  6A33               	clrf	__get_empty_cluster@fat_sector+1,c
 40162                           
 40163                           ;fat16.c: 123: fat_sector += 2;
 40164  006D60  0E02               	movlw	2
 40165  006D62  2632               	addwf	__get_empty_cluster@fat_sector,f,c
 40166  006D64  0E00               	movlw	0
 40167  006D66  2233               	addwfc	__get_empty_cluster@fat_sector+1,f,c
 40168                           
 40169                           ;fat16.c: 124: offset = cluster & 0xFF;
 40170  006D68  5038               	movf	__get_empty_cluster@cluster,w,c
 40171  006D6A  6E34               	movwf	__get_empty_cluster@offset,c
 40172  006D6C  6A35               	clrf	__get_empty_cluster@offset+1,c
 40173                           
 40174                           ;fat16.c: 125: offset <<= 1;
 40175  006D6E  90D8               	bcf	status,0,c
 40176  006D70  3634               	rlcf	__get_empty_cluster@offset,f,c
 40177  006D72  3635               	rlcf	__get_empty_cluster@offset+1,f,c
 40178                           
 40179                           ;fat16.c: 126: flash_partial_read(fat_sector, offset, 2, (uint8_t*) &value);
 40180  006D74  C032  F028         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 40181  006D78  C033  F029         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 40182  006D7C  C034  F02A         	movff	__get_empty_cluster@offset,flash_partial_read@start
 40183  006D80  C035  F02B         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 40184  006D84  0E00               	movlw	0
 40185  006D86  6E2D               	movwf	flash_partial_read@length+1,c
 40186  006D88  0E02               	movlw	2
 40187  006D8A  6E2C               	movwf	flash_partial_read@length,c
 40188  006D8C  0E36               	movlw	low __get_empty_cluster@value
 40189  006D8E  6E2E               	movwf	flash_partial_read@data,c
 40190  006D90  0E00               	movlw	high __get_empty_cluster@value
 40191  006D92  6E2F               	movwf	flash_partial_read@data+1,c
 40192  006D94  ECFA  F041         	call	_flash_partial_read	;wreg free
 40193                           
 40194                           ;fat16.c: 127: if(value==0x0000)
 40195  006D98  5036               	movf	__get_empty_cluster@value,w,c
 40196  006D9A  1037               	iorwf	__get_empty_cluster@value+1,w,c
 40197  006D9C  A4D8               	btfss	status,2,c
 40198  006D9E  D005               	goto	l1932
 40199                           
 40200                           ;fat16.c: 128: {;fat16.c: 129: return cluster;
 40201  006DA0  C038  F030         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 40202  006DA4  C039  F031         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 40203  006DA8  0012               	return	
 40204  006DAA                     l1932:
 40205  006DAA  4A38               	infsnz	__get_empty_cluster@cluster,f,c
 40206  006DAC  2A39               	incf	__get_empty_cluster@cluster+1,f,c
 40207  006DAE  D7CF               	goto	l11576
 40208  006DB0                     u8610:
 40209                           
 40210                           ;fat16.c: 130: };fat16.c: 131: };fat16.c: 132: return 0x0000;
 40211  006DB0  0E00               	movlw	0
 40212  006DB2  6E31               	movwf	?__get_empty_cluster+1,c
 40213  006DB4  0E00               	movlw	0
 40214  006DB6  6E30               	movwf	?__get_empty_cluster,c
 40215  006DB8  0012               	return	
 40216  006DBA                     __end_of__get_empty_cluster:
 40217                           	opt stack 0
 40218                           tosu	equ	0xFFF
 40219                           tosh	equ	0xFFE
 40220                           tosl	equ	0xFFD
 40221                           pclath	equ	0xFFA
 40222                           tblptru	equ	0xFF8
 40223                           tblptrh	equ	0xFF7
 40224                           tblptrl	equ	0xFF6
 40225                           tablat	equ	0xFF5
 40226                           prodh	equ	0xFF4
 40227                           prodl	equ	0xFF3
 40228                           intcon	equ	0xFF2
 40229                           intcon2	equ	0xFF1
 40230                           intcon3	equ	0xFF0
 40231                           indf0	equ	0xFEF
 40232                           postinc0	equ	0xFEE
 40233                           fsr0h	equ	0xFEA
 40234                           fsr0l	equ	0xFE9
 40235                           wreg	equ	0xFE8
 40236                           indf1	equ	0xFE7
 40237                           postdec1	equ	0xFE5
 40238                           plusw1	equ	0xFE3
 40239                           fsr1h	equ	0xFE2
 40240                           fsr1l	equ	0xFE1
 40241                           indf2	equ	0xFDF
 40242                           postinc2	equ	0xFDE
 40243                           postdec2	equ	0xFDD
 40244                           plusw2	equ	0xFDB
 40245                           fsr2h	equ	0xFDA
 40246                           fsr2l	equ	0xFD9
 40247                           status	equ	0xFD8
 40248                           
 40249 ;; *************** function _flash_partial_read *****************
 40250 ;; Defined at:
 40251 ;;		line 457 in file "flash.c"
 40252 ;; Parameters:    Size  Location     Type
 40253 ;;  page            2   39[COMRAM] unsigned int 
 40254 ;;  start           2   41[COMRAM] unsigned int 
 40255 ;;  length          2   43[COMRAM] unsigned int 
 40256 ;;  data            2   45[COMRAM] PTR unsigned char 
 40257 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 40258 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 40259 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 40260 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 40261 ;;		 -> _root_is_available@first_byte(1), RAM(3759), 
 40262 ;; Auto vars:     Size  Location     Type
 40263 ;;		None
 40264 ;; Return value:  Size  Location     Type
 40265 ;;                  1    wreg      void 
 40266 ;; Registers used:
 40267 ;;		wreg, status,2, status,0, cstack
 40268 ;; Tracked objects:
 40269 ;;		On entry : 0/0
 40270 ;;		On exit  : 0/0
 40271 ;;		Unchanged: 0/0
 40272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40273 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40276 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40277 ;;Total ram usage:        8 bytes
 40278 ;; Hardware stack levels used:    1
 40279 ;; Hardware stack levels required when called:    4
 40280 ;; This function calls:
 40281 ;;		__flash_partial_read
 40282 ;;		_spi_set_configuration
 40283 ;; This function is called by:
 40284 ;;		__root_is_available
 40285 ;;		__get_empty_cluster
 40286 ;;		_fat_get_empty_clusters
 40287 ;;		__read_fat
 40288 ;;		__get_first_cluster
 40289 ;;		_fat_find_file
 40290 ;;		_fat_get_file_size
 40291 ;;		_fat_read_from_file_fast
 40292 ;;		_fat_get_file_information
 40293 ;;		__get_file_size
 40294 ;; This function uses a non-reentrant model
 40295 ;;
 40296                           
 40297                           	psect	text206
 40298  0083F4                     __ptext206:
 40299                           	opt stack 0
 40300  0083F4                     _flash_partial_read:
 40301                           	opt stack 23
 40302                           
 40303                           ;flash.c: 460: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 40304                           
 40305                           ;incstack = 0
 40306  0083F4  0E00               	movlw	0
 40307  0083F6  EC59  F024         	call	_spi_set_configuration
 40308                           
 40309                           ;flash.c: 463: _flash_partial_read(page, start, length, data);
 40310  0083FA  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 40311  0083FE  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 40312  008402  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 40313  008406  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 40314  00840A  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 40315  00840E  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 40316  008412  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 40317  008416  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 40318  00841A  EC5A  F038         	call	__flash_partial_read	;wreg free
 40319                           
 40320                           ;flash.c: 466: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 40321  00841E  0E01               	movlw	1
 40322  008420  EC59  F024         	call	_spi_set_configuration
 40323  008424  0012               	return		;funcret
 40324  008426                     __end_of_flash_partial_read:
 40325                           	opt stack 0
 40326                           tosu	equ	0xFFF
 40327                           tosh	equ	0xFFE
 40328                           tosl	equ	0xFFD
 40329                           pclath	equ	0xFFA
 40330                           tblptru	equ	0xFF8
 40331                           tblptrh	equ	0xFF7
 40332                           tblptrl	equ	0xFF6
 40333                           tablat	equ	0xFF5
 40334                           prodh	equ	0xFF4
 40335                           prodl	equ	0xFF3
 40336                           intcon	equ	0xFF2
 40337                           intcon2	equ	0xFF1
 40338                           intcon3	equ	0xFF0
 40339                           indf0	equ	0xFEF
 40340                           postinc0	equ	0xFEE
 40341                           fsr0h	equ	0xFEA
 40342                           fsr0l	equ	0xFE9
 40343                           wreg	equ	0xFE8
 40344                           indf1	equ	0xFE7
 40345                           postdec1	equ	0xFE5
 40346                           plusw1	equ	0xFE3
 40347                           fsr1h	equ	0xFE2
 40348                           fsr1l	equ	0xFE1
 40349                           indf2	equ	0xFDF
 40350                           postinc2	equ	0xFDE
 40351                           postdec2	equ	0xFDD
 40352                           plusw2	equ	0xFDB
 40353                           fsr2h	equ	0xFDA
 40354                           fsr2l	equ	0xFD9
 40355                           status	equ	0xFD8
 40356                           
 40357 ;; *************** function _spi_set_configuration *****************
 40358 ;; Defined at:
 40359 ;;		line 139 in file "spi.c"
 40360 ;; Parameters:    Size  Location     Type
 40361 ;;  configuratio    1    wreg     enum E6749
 40362 ;; Auto vars:     Size  Location     Type
 40363 ;;  configuratio    1    0[COMRAM] enum E6749
 40364 ;;  cntr            1    0        unsigned char 
 40365 ;; Return value:  Size  Location     Type
 40366 ;;                  1    wreg      void 
 40367 ;; Registers used:
 40368 ;;		wreg, status,2, status,0
 40369 ;; Tracked objects:
 40370 ;;		On entry : 0/0
 40371 ;;		On exit  : 0/0
 40372 ;;		Unchanged: 0/0
 40373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40378 ;;Total ram usage:        1 bytes
 40379 ;; Hardware stack levels used:    1
 40380 ;; This function calls:
 40381 ;;		Nothing
 40382 ;; This function is called by:
 40383 ;;		_flash_init
 40384 ;;		_flash_is_busy
 40385 ;;		_flash_page_read
 40386 ;;		_flash_page_write
 40387 ;;		_flash_partial_read
 40388 ;;		_flash_partial_write
 40389 ;;		_flash_set_power_state
 40390 ;; This function uses a non-reentrant model
 40391 ;;
 40392                           
 40393                           	psect	text207
 40394  0048B2                     __ptext207:
 40395                           	opt stack 0
 40396  0048B2                     _spi_set_configuration:
 40397                           	opt stack 28
 40398                           
 40399                           ;incstack = 0
 40400                           ;spi_set_configuration@configuration stored from wreg
 40401  0048B2  6E01               	movwf	spi_set_configuration@configuration,c
 40402                           
 40403                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 40404  0048B4  D07B               	goto	l2877
 40405  0048B6                     l2878:
 40406                           
 40407                           ;spi.c: 152: LATDbits.LD2 = 1;
 40408  0048B6  848C               	bsf	3980,2,c	;volatile
 40409                           
 40410                           ;spi.c: 153: TRISDbits.TRISD2 = 0;
 40411  0048B8  9495               	bcf	3989,2,c	;volatile
 40412                           
 40413                           ;spi.c: 154: TRISDbits.TRISD2 = 1;
 40414  0048BA  8495               	bsf	3989,2,c	;volatile
 40415  0048BC  A483               	btfss	3971,2,c	;volatile
 40416  0048BE  D7FE               	goto	l2880
 40417                           
 40418                           ;spi.c: 159: DMACON1bits.DMAEN = 0;
 40419  0048C0  9088               	bcf	3976,0,c	;volatile
 40420                           
 40421                           ;spi.c: 160: SSP2CON1bits.SSPEN = 0;
 40422  0048C2  9A72               	bcf	3954,5,c	;volatile
 40423                           
 40424                           ;spi.c: 163: TRISDbits.TRISD6 = 1;
 40425  0048C4  8C95               	bsf	3989,6,c	;volatile
 40426                           
 40427                           ;spi.c: 164: TRISDbits.TRISD4 = 0;
 40428  0048C6  9895               	bcf	3989,4,c	;volatile
 40429                           
 40430                           ;spi.c: 165: LATDbits.LD4 = 0;
 40431  0048C8  988C               	bcf	3980,4,c	;volatile
 40432                           
 40433                           ;spi.c: 166: TRISDbits.TRISD5 = 0;
 40434  0048CA  9A95               	bcf	3989,5,c	;volatile
 40435                           
 40436                           ;spi.c: 167: LATDbits.LD5 = 0;
 40437  0048CC  9A8C               	bcf	3980,5,c	;volatile
 40438                           
 40439                           ;spi.c: 168: TRISDbits.TRISD7 = 0;
 40440  0048CE  9E95               	bcf	3989,7,c	;volatile
 40441                           
 40442                           ;spi.c: 169: LATDbits.LD7 = 1;
 40443  0048D0  8E8C               	bsf	3980,7,c	;volatile
 40444                           
 40445                           ;spi.c: 172: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 40446  0048D2  0E55               	movlw	85
 40447  0048D4  6EA7               	movwf	4007,c	;volsfr
 40448  0048D6  0EAA               	movlw	170
 40449  0048D8  6EA7               	movwf	4007,c	;volsfr
 40450  0048DA  010E               	movlb	14	; () banked
 40451  0048DC  91BF               	bcf	191,0,b	;volatile
 40452                           
 40453                           ;spi.c: 174: RPOR23 = 0b00000;
 40454  0048DE  0E00               	movlw	0
 40455  0048E0  6FD7               	movwf	215,b	;volatile
 40456                           
 40457                           ;spi.c: 175: RPINR21 = 0b11111;
 40458  0048E2  0E1F               	movlw	31
 40459  0048E4  6FFC               	movwf	252,b	;volatile
 40460                           
 40461                           ;spi.c: 176: RPINR23 = 0b11111;
 40462  0048E6  0E1F               	movlw	31
 40463  0048E8  6FFE               	movwf	254,b	;volatile
 40464                           
 40465                           ;spi.c: 178: RPINR21 = 23;
 40466  0048EA  0E17               	movlw	23
 40467  0048EC  6FFC               	movwf	252,b	;volatile
 40468                           
 40469                           ;spi.c: 179: RPOR21 = 10;
 40470  0048EE  0E0A               	movlw	10
 40471  0048F0  6FD5               	movwf	213,b	;volatile
 40472                           
 40473                           ;spi.c: 181: RPOR22 = 11;
 40474  0048F2  0E0B               	movlw	11
 40475  0048F4  6FD6               	movwf	214,b	;volatile
 40476                           
 40477                           ;spi.c: 182: RPINR22 = 22;
 40478  0048F6  0E16               	movlw	22
 40479  0048F8  6FFD               	movwf	253,b	;volatile
 40480                           
 40481                           ;spi.c: 183: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 40482  0048FA  0E55               	movlw	85
 40483  0048FC  6EA7               	movwf	4007,c	;volsfr
 40484  0048FE  0EAA               	movlw	170
 40485  004900  6EA7               	movwf	4007,c	;volsfr
 40486                           
 40487                           ; BSR set to: 14
 40488  004902  81BF               	bsf	191,0,b	;volatile
 40489                           
 40490                           ; BSR set to: 14
 40491                           ;spi.c: 186: SSP2STATbits.SMP = 1;
 40492  004904  8E73               	bsf	3955,7,c	;volatile
 40493                           
 40494                           ; BSR set to: 14
 40495                           ;spi.c: 187: SSP2STATbits.CKE = 1;
 40496  004906  8C73               	bsf	3955,6,c	;volatile
 40497                           
 40498                           ; BSR set to: 14
 40499                           ;spi.c: 188: SSP2CON1bits.WCOL = 0;
 40500  004908  9E72               	bcf	3954,7,c	;volatile
 40501                           
 40502                           ; BSR set to: 14
 40503                           ;spi.c: 189: SSP2CON1bits.SSPOV = 0;
 40504  00490A  9C72               	bcf	3954,6,c	;volatile
 40505                           
 40506                           ; BSR set to: 14
 40507                           ;spi.c: 190: SSP2CON1bits.CKP = 0;
 40508  00490C  9872               	bcf	3954,4,c	;volatile
 40509                           
 40510                           ; BSR set to: 14
 40511                           ;spi.c: 191: SSP2CON1bits.SSPM =0b0000;
 40512  00490E  9072               	bcf	3954,0,c	;volatile
 40513  004910  9272               	bcf	3954,1,c	;volatile
 40514  004912  9472               	bcf	3954,2,c	;volatile
 40515  004914  9672               	bcf	3954,3,c	;volatile
 40516                           
 40517                           ; BSR set to: 14
 40518                           ;spi.c: 192: SSP2CON1bits.SSPEN = 1;
 40519  004916  8A72               	bsf	3954,5,c	;volatile
 40520                           
 40521                           ;spi.c: 195: active_configuration = SPI_CONFIGURATION_INTERNAL;
 40522  004918  0E00               	movlw	0
 40523  00491A  0101               	movlb	1	; () banked
 40524  00491C  6F86               	movwf	_active_configuration& (0+255),b
 40525                           
 40526                           ;spi.c: 196: break;
 40527  00491E  0012               	return	
 40528  004920                     l2883:
 40529                           
 40530                           ;spi.c: 200: DMACON1bits.DMAEN = 0;
 40531  004920  9088               	bcf	3976,0,c	;volatile
 40532                           
 40533                           ;spi.c: 201: SSP2CON1bits.SSPEN = 0;
 40534  004922  9A72               	bcf	3954,5,c	;volatile
 40535                           
 40536                           ;spi.c: 204: ODCON3bits.SPI2OD = 0;
 40537  004924  010F               	movlb	15	; () banked
 40538  004926  9340               	bcf	64,1,b	;volatile
 40539                           
 40540                           ; BSR set to: 15
 40541                           ;spi.c: 207: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 40542  004928  0E55               	movlw	85
 40543  00492A  6EA7               	movwf	4007,c	;volsfr
 40544  00492C  0EAA               	movlw	170
 40545  00492E  6EA7               	movwf	4007,c	;volsfr
 40546                           
 40547                           ; BSR set to: 15
 40548  004930  010E               	movlb	14	; () banked
 40549  004932  91BF               	bcf	191,0,b	;volatile
 40550                           
 40551                           ;spi.c: 208: RPOR23 = 10;
 40552  004934  0E0A               	movlw	10
 40553  004936  6FD7               	movwf	215,b	;volatile
 40554                           
 40555                           ;spi.c: 209: RPINR21 = 21;
 40556  004938  0E15               	movlw	21
 40557  00493A  6FFC               	movwf	252,b	;volatile
 40558                           
 40559                           ;spi.c: 210: RPINR22 = 22;
 40560  00493C  0E16               	movlw	22
 40561  00493E  6FFD               	movwf	253,b	;volatile
 40562                           
 40563                           ;spi.c: 211: RPINR23 = 19;
 40564  004940  0E13               	movlw	19
 40565  004942  6FFE               	movwf	254,b	;volatile
 40566                           
 40567                           ;spi.c: 212: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 40568  004944  0E55               	movlw	85
 40569  004946  6EA7               	movwf	4007,c	;volsfr
 40570  004948  0EAA               	movlw	170
 40571  00494A  6EA7               	movwf	4007,c	;volsfr
 40572                           
 40573                           ; BSR set to: 14
 40574  00494C  81BF               	bsf	191,0,b	;volatile
 40575                           
 40576                           ; BSR set to: 14
 40577                           ;spi.c: 214: SSP2CON1bits.SSPEN = 0;
 40578  00494E  9A72               	bcf	3954,5,c	;volatile
 40579                           
 40580                           ; BSR set to: 14
 40581                           ;spi.c: 222: TRISDbits.TRISD5 = 1;
 40582  004950  8A95               	bsf	3989,5,c	;volatile
 40583                           
 40584                           ; BSR set to: 14
 40585                           ;spi.c: 223: TRISDbits.TRISD4 = 1;
 40586  004952  8895               	bsf	3989,4,c	;volatile
 40587                           
 40588                           ; BSR set to: 14
 40589                           ;spi.c: 226: TRISDbits.TRISD6 = 0;
 40590  004954  9C95               	bcf	3989,6,c	;volatile
 40591                           
 40592                           ; BSR set to: 14
 40593                           ;spi.c: 227: LATDbits.LD6 = 1;
 40594  004956  8C8C               	bsf	3980,6,c	;volatile
 40595                           
 40596                           ; BSR set to: 14
 40597                           ;spi.c: 230: TRISDbits.TRISD2 = 1;
 40598  004958  8495               	bsf	3989,2,c	;volatile
 40599                           
 40600                           ; BSR set to: 14
 40601                           ;spi.c: 236: SSP2STATbits.SMP = 0;
 40602  00495A  9E73               	bcf	3955,7,c	;volatile
 40603                           
 40604                           ; BSR set to: 14
 40605                           ;spi.c: 237: SSP2STATbits.CKE = 1;
 40606  00495C  8C73               	bsf	3955,6,c	;volatile
 40607                           
 40608                           ; BSR set to: 14
 40609                           ;spi.c: 238: SSP2CON1bits.WCOL = 0;
 40610  00495E  9E72               	bcf	3954,7,c	;volatile
 40611                           
 40612                           ; BSR set to: 14
 40613                           ;spi.c: 239: SSP2CON1bits.SSPOV = 0;
 40614  004960  9C72               	bcf	3954,6,c	;volatile
 40615                           
 40616                           ; BSR set to: 14
 40617                           ;spi.c: 240: SSP2CON1bits.CKP = 0;
 40618  004962  9872               	bcf	3954,4,c	;volatile
 40619                           
 40620                           ; BSR set to: 14
 40621                           ;spi.c: 241: SSP2CON1bits.SSPM =0b0100;
 40622  004964  5072               	movf	3954,w,c	;volatile
 40623  004966  0BF0               	andlw	-16
 40624  004968  0904               	iorlw	4
 40625  00496A  6E72               	movwf	3954,c	;volatile
 40626                           
 40627                           ; BSR set to: 14
 40628                           ;spi.c: 242: PIR3bits.SSP2IF = 0;
 40629  00496C  9EA4               	bcf	4004,7,c	;volatile
 40630                           
 40631                           ; BSR set to: 14
 40632                           ;spi.c: 243: SSP2CON1bits.SSPEN = 1;
 40633  00496E  8A72               	bsf	3954,5,c	;volatile
 40634                           
 40635                           ; BSR set to: 14
 40636                           ;spi.c: 246: DMACON1bits.TXINC = 1;
 40637  004970  8A88               	bsf	3976,5,c	;volatile
 40638                           
 40639                           ; BSR set to: 14
 40640                           ;spi.c: 247: DMACON1bits.RXINC = 1;
 40641  004972  8888               	bsf	3976,4,c	;volatile
 40642                           
 40643                           ; BSR set to: 14
 40644                           ;spi.c: 248: DMACON1bits.DUPLEX1 = 1;
 40645  004974  8688               	bsf	3976,3,c	;volatile
 40646                           
 40647                           ; BSR set to: 14
 40648                           ;spi.c: 249: DMACON1bits.DUPLEX0 = 0;
 40649  004976  9488               	bcf	3976,2,c	;volatile
 40650                           
 40651                           ; BSR set to: 14
 40652                           ;spi.c: 250: DMACON1bits.DLYINTEN = 0;
 40653  004978  9288               	bcf	3976,1,c	;volatile
 40654                           
 40655                           ; BSR set to: 14
 40656                           ;spi.c: 252: DMACON2bits.DLYCYC = 0b0000;
 40657  00497A  9886               	bcf	3974,4,c	;volatile
 40658  00497C  9A86               	bcf	3974,5,c	;volatile
 40659  00497E  9C86               	bcf	3974,6,c	;volatile
 40660  004980  9E86               	bcf	3974,7,c	;volatile
 40661                           
 40662                           ; BSR set to: 14
 40663                           ;spi.c: 253: DMACON2bits.INTLVL = 0b0000;
 40664  004982  9086               	bcf	3974,0,c	;volatile
 40665  004984  9286               	bcf	3974,1,c	;volatile
 40666  004986  9486               	bcf	3974,2,c	;volatile
 40667  004988  9686               	bcf	3974,3,c	;volatile
 40668                           
 40669                           ; BSR set to: 14
 40670                           ;spi.c: 256: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 40671  00498A  0E00               	movlw	0
 40672  00498C  6E66               	movwf	3942,c	;volatile
 40673                           
 40674                           ; BSR set to: 14
 40675                           ;spi.c: 257: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 40676  00498E  0E3F               	movlw	63
 40677  004990  6E67               	movwf	3943,c	;volatile
 40678                           
 40679                           ; BSR set to: 14
 40680                           ;spi.c: 260: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 40681  004992  0E02               	movlw	high __spi_external_tx_buffer
 40682  004994  6E6A               	movwf	3946,c	;volatile
 40683                           
 40684                           ; BSR set to: 14
 40685                           ;spi.c: 261: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 40686  004996  0E50               	movlw	low (low __spi_external_tx_buffer)
 40687  004998  6E6B               	movwf	3947,c	;volatile
 40688                           
 40689                           ; BSR set to: 14
 40690                           ;spi.c: 264: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 40691  00499A  0E03               	movlw	high __spi_external_rx_buffer
 40692  00499C  6E68               	movwf	3944,c	;volatile
 40693                           
 40694                           ; BSR set to: 14
 40695                           ;spi.c: 265: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 40696  00499E  0E00               	movlw	low (low __spi_external_rx_buffer)
 40697  0049A0  6E69               	movwf	3945,c	;volatile
 40698                           
 40699                           ; BSR set to: 14
 40700                           ;spi.c: 267: DMACON1bits.DMAEN = 1;
 40701  0049A2  8088               	bsf	3976,0,c	;volatile
 40702                           
 40703                           ; BSR set to: 14
 40704                           ;spi.c: 335: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 40705  0049A4  0E01               	movlw	1
 40706  0049A6  0101               	movlb	1	; () banked
 40707  0049A8  6F86               	movwf	_active_configuration& (0+255),b
 40708                           
 40709                           ; BSR set to: 1
 40710                           ;spi.c: 337: }
 40711                           
 40712                           ;spi.c: 336: break;
 40713  0049AA  0012               	return	
 40714  0049AC                     l2877:
 40715                           
 40716                           ; BSR set to: 1
 40717  0049AC  5001               	movf	spi_set_configuration@configuration,w,c
 40718                           
 40719                           ; Switch size 1, requested type "space"
 40720                           ; Number of cases is 2, Range of values is 0 to 1
 40721                           ; switch strategies available:
 40722                           ; Name         Instructions Cycles
 40723                           ; simple_byte            7     4 (average)
 40724                           ;	Chosen strategy is simple_byte
 40725  0049AE  0A00               	xorlw	0	; case 0
 40726  0049B0  B4D8               	btfsc	status,2,c
 40727  0049B2  D781               	goto	l2878
 40728  0049B4  0A01               	xorlw	1	; case 1
 40729  0049B6  A4D8               	btfss	status,2,c
 40730  0049B8  0012               	return	
 40731  0049BA  D7B2               	goto	l2883
 40732  0049BC                     __end_of_spi_set_configuration:
 40733                           	opt stack 0
 40734                           tosu	equ	0xFFF
 40735                           tosh	equ	0xFFE
 40736                           tosl	equ	0xFFD
 40737                           pclath	equ	0xFFA
 40738                           tblptru	equ	0xFF8
 40739                           tblptrh	equ	0xFF7
 40740                           tblptrl	equ	0xFF6
 40741                           tablat	equ	0xFF5
 40742                           prodh	equ	0xFF4
 40743                           prodl	equ	0xFF3
 40744                           intcon	equ	0xFF2
 40745                           intcon2	equ	0xFF1
 40746                           intcon3	equ	0xFF0
 40747                           indf0	equ	0xFEF
 40748                           postinc0	equ	0xFEE
 40749                           fsr0h	equ	0xFEA
 40750                           fsr0l	equ	0xFE9
 40751                           wreg	equ	0xFE8
 40752                           indf1	equ	0xFE7
 40753                           postdec1	equ	0xFE5
 40754                           plusw1	equ	0xFE3
 40755                           fsr1h	equ	0xFE2
 40756                           fsr1l	equ	0xFE1
 40757                           indf2	equ	0xFDF
 40758                           postinc2	equ	0xFDE
 40759                           postdec2	equ	0xFDD
 40760                           plusw2	equ	0xFDB
 40761                           fsr2h	equ	0xFDA
 40762                           fsr2l	equ	0xFD9
 40763                           status	equ	0xFD8
 40764                           
 40765 ;; *************** function __flash_partial_read *****************
 40766 ;; Defined at:
 40767 ;;		line 305 in file "flash.c"
 40768 ;; Parameters:    Size  Location     Type
 40769 ;;  page            2   19[COMRAM] unsigned int 
 40770 ;;  start           2   21[COMRAM] unsigned int 
 40771 ;;  length          2   23[COMRAM] unsigned int 
 40772 ;;  data            2   25[COMRAM] PTR unsigned char 
 40773 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 40774 ;;		 -> buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 40775 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 40776 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 40777 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512), RAM(3759), 
 40778 ;; Auto vars:     Size  Location     Type
 40779 ;;  command         4   31[COMRAM] unsigned char [4]
 40780 ;;  address         4   35[COMRAM] unsigned long 
 40781 ;; Return value:  Size  Location     Type
 40782 ;;                  1    wreg      void 
 40783 ;; Registers used:
 40784 ;;		wreg, status,2, status,0, cstack
 40785 ;; Tracked objects:
 40786 ;;		On entry : 0/0
 40787 ;;		On exit  : 0/0
 40788 ;;		Unchanged: 0/0
 40789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40790 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40791 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40792 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40793 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40794 ;;Total ram usage:       20 bytes
 40795 ;; Hardware stack levels used:    1
 40796 ;; Hardware stack levels required when called:    3
 40797 ;; This function calls:
 40798 ;;		__flash_is_busy
 40799 ;;		_spi_tx_rx
 40800 ;; This function is called by:
 40801 ;;		_flash_page_read
 40802 ;;		_flash_partial_read
 40803 ;; This function uses a non-reentrant model
 40804 ;;
 40805                           
 40806                           	psect	text208
 40807  0070B4                     __ptext208:
 40808                           	opt stack 0
 40809  0070B4                     __flash_partial_read:
 40810                           	opt stack 23
 40811                           
 40812                           ;flash.c: 307: uint32_t address;;flash.c: 308: uint8_t command[4];;flash.c: 311: while(_
      +                          flash_is_busy());
 40813                           
 40814                           ;incstack = 0
 40815  0070B4  EC92  F043         	call	__flash_is_busy	;wreg free
 40816  0070B8  0900               	iorlw	0
 40817  0070BA  A4D8               	btfss	status,2,c
 40818  0070BC  D7FB               	goto	__flash_partial_read
 40819                           
 40820                           ;flash.c: 314: address = page;
 40821  0070BE  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 40822  0070C2  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 40823  0070C6  6A26               	clrf	__flash_partial_read@address+2,c
 40824  0070C8  6A27               	clrf	__flash_partial_read@address+3,c
 40825                           
 40826                           ;flash.c: 315: address <<= 9;
 40827  0070CA  0E09               	movlw	9
 40828  0070CC                     u6865:
 40829  0070CC  90D8               	bcf	status,0,c
 40830  0070CE  3624               	rlcf	__flash_partial_read@address,f,c
 40831  0070D0  3625               	rlcf	__flash_partial_read@address+1,f,c
 40832  0070D2  3626               	rlcf	__flash_partial_read@address+2,f,c
 40833  0070D4  3627               	rlcf	__flash_partial_read@address+3,f,c
 40834  0070D6  2EE8               	decfsz	wreg,f,c
 40835  0070D8  D7F9               	goto	u6865
 40836                           
 40837                           ;flash.c: 316: address |= start;
 40838  0070DA  5016               	movf	__flash_partial_read@start,w,c
 40839  0070DC  6E1C               	movwf	??__flash_partial_read& (0+255),c
 40840  0070DE  5017               	movf	__flash_partial_read@start+1,w,c
 40841  0070E0  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 40842  0070E2  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 40843  0070E4  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 40844  0070E6  501C               	movf	??__flash_partial_read,w,c
 40845  0070E8  1224               	iorwf	__flash_partial_read@address,f,c
 40846  0070EA  501D               	movf	??__flash_partial_read+1,w,c
 40847  0070EC  1225               	iorwf	__flash_partial_read@address+1,f,c
 40848  0070EE  501E               	movf	??__flash_partial_read+2,w,c
 40849  0070F0  1226               	iorwf	__flash_partial_read@address+2,f,c
 40850  0070F2  501F               	movf	??__flash_partial_read+3,w,c
 40851  0070F4  1227               	iorwf	__flash_partial_read@address+3,f,c
 40852                           
 40853                           ;flash.c: 319: command[0] = 0x03;
 40854  0070F6  0E03               	movlw	3
 40855  0070F8  6E20               	movwf	__flash_partial_read@command,c
 40856                           
 40857                           ;flash.c: 320: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 40858  0070FA  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 40859                           
 40860                           ;flash.c: 321: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 40861  0070FE  5025               	movf	__flash_partial_read@address+1,w,c
 40862  007100  6E22               	movwf	__flash_partial_read@command+2,c
 40863                           
 40864                           ;flash.c: 322: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 40865  007102  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 40866                           
 40867                           ;flash.c: 325: spi_tx_rx(command, 4, data, length);
 40868  007106  0E20               	movlw	low __flash_partial_read@command
 40869  007108  6E01               	movwf	spi_tx_rx@command,c
 40870  00710A  0E00               	movlw	high __flash_partial_read@command
 40871  00710C  6E02               	movwf	spi_tx_rx@command+1,c
 40872  00710E  0E00               	movlw	0
 40873  007110  6E04               	movwf	spi_tx_rx@command_length+1,c
 40874  007112  0E04               	movlw	4
 40875  007114  6E03               	movwf	spi_tx_rx@command_length,c
 40876  007116  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 40877  00711A  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 40878  00711E  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 40879  007122  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 40880  007126  ECEB  F034         	call	_spi_tx_rx	;wreg free
 40881  00712A  0012               	return		;funcret
 40882  00712C                     __end_of__flash_partial_read:
 40883                           	opt stack 0
 40884                           tosu	equ	0xFFF
 40885                           tosh	equ	0xFFE
 40886                           tosl	equ	0xFFD
 40887                           pclath	equ	0xFFA
 40888                           tblptru	equ	0xFF8
 40889                           tblptrh	equ	0xFF7
 40890                           tblptrl	equ	0xFF6
 40891                           tablat	equ	0xFF5
 40892                           prodh	equ	0xFF4
 40893                           prodl	equ	0xFF3
 40894                           intcon	equ	0xFF2
 40895                           intcon2	equ	0xFF1
 40896                           intcon3	equ	0xFF0
 40897                           indf0	equ	0xFEF
 40898                           postinc0	equ	0xFEE
 40899                           fsr0h	equ	0xFEA
 40900                           fsr0l	equ	0xFE9
 40901                           wreg	equ	0xFE8
 40902                           indf1	equ	0xFE7
 40903                           postdec1	equ	0xFE5
 40904                           plusw1	equ	0xFE3
 40905                           fsr1h	equ	0xFE2
 40906                           fsr1l	equ	0xFE1
 40907                           indf2	equ	0xFDF
 40908                           postinc2	equ	0xFDE
 40909                           postdec2	equ	0xFDD
 40910                           plusw2	equ	0xFDB
 40911                           fsr2h	equ	0xFDA
 40912                           fsr2l	equ	0xFD9
 40913                           status	equ	0xFD8
 40914                           
 40915 ;; *************** function __flash_is_busy *****************
 40916 ;; Defined at:
 40917 ;;		line 277 in file "flash.c"
 40918 ;; Parameters:    Size  Location     Type
 40919 ;;		None
 40920 ;; Auto vars:     Size  Location     Type
 40921 ;;  status          2   17[COMRAM] unsigned int 
 40922 ;; Return value:  Size  Location     Type
 40923 ;;                  1    wreg      unsigned char 
 40924 ;; Registers used:
 40925 ;;		wreg, status,2, status,0, cstack
 40926 ;; Tracked objects:
 40927 ;;		On entry : 0/0
 40928 ;;		On exit  : 0/0
 40929 ;;		Unchanged: 0/0
 40930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40935 ;;Total ram usage:        2 bytes
 40936 ;; Hardware stack levels used:    1
 40937 ;; Hardware stack levels required when called:    2
 40938 ;; This function calls:
 40939 ;;		__flash_get_status
 40940 ;;		__flash_wakeup
 40941 ;; This function is called by:
 40942 ;;		__flash_set_page_size
 40943 ;;		__flash_copy_page_to_buffer
 40944 ;;		__flash_compare_page_to_buffer
 40945 ;;		__flash_write_to_buffer
 40946 ;;		__flash_write_page_from_buffer
 40947 ;;		__flash_partial_read
 40948 ;;		_flash_is_busy
 40949 ;;		_flash_partial_write
 40950 ;;		__flash_erase_page
 40951 ;;		_flash_set_power_state
 40952 ;; This function uses a non-reentrant model
 40953 ;;
 40954                           
 40955                           	psect	text209
 40956  008724                     __ptext209:
 40957                           	opt stack 0
 40958  008724                     __flash_is_busy:
 40959                           	opt stack 25
 40960                           
 40961                           ;flash.c: 279: uint16_t status;;flash.c: 282: if(power_state!=FLASH_POWER_STATE_NORMAL)
 40962                           
 40963                           ;incstack = 0
 40964  008724  0100               	movlb	0	; () banked
 40965  008726  51DF               	movf	_power_state& (0+255),w,b
 40966  008728  A4D8               	btfss	status,2,c
 40967                           
 40968                           ; BSR set to: 0
 40969                           ;flash.c: 283: {;flash.c: 284: _flash_wakeup();
 40970  00872A  EC52  F03E         	call	__flash_wakeup	;wreg free
 40971                           
 40972                           ;flash.c: 285: };flash.c: 288: status = _flash_get_status();
 40973  00872E  EC13  F042         	call	__flash_get_status	;wreg free
 40974  008732  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 40975  008736  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 40976                           
 40977                           ;flash.c: 291: if(status & 0b0000000010000000)
 40978  00873A  AE12               	btfss	__flash_is_busy@status,7,c
 40979  00873C  D002               	goto	l1800
 40980                           
 40981                           ;flash.c: 292: {;flash.c: 294: return 0;
 40982  00873E  0E00               	movlw	0
 40983                           
 40984                           ;flash.c: 295: }
 40985  008740  0012               	return	
 40986  008742                     l1800:
 40987                           
 40988                           ;flash.c: 296: else;flash.c: 297: {;flash.c: 299: return 1;
 40989  008742  0E01               	movlw	1
 40990  008744  0012               	return	
 40991  008746                     __end_of__flash_is_busy:
 40992                           	opt stack 0
 40993                           tosu	equ	0xFFF
 40994                           tosh	equ	0xFFE
 40995                           tosl	equ	0xFFD
 40996                           pclath	equ	0xFFA
 40997                           tblptru	equ	0xFF8
 40998                           tblptrh	equ	0xFF7
 40999                           tblptrl	equ	0xFF6
 41000                           tablat	equ	0xFF5
 41001                           prodh	equ	0xFF4
 41002                           prodl	equ	0xFF3
 41003                           intcon	equ	0xFF2
 41004                           intcon2	equ	0xFF1
 41005                           intcon3	equ	0xFF0
 41006                           indf0	equ	0xFEF
 41007                           postinc0	equ	0xFEE
 41008                           fsr0h	equ	0xFEA
 41009                           fsr0l	equ	0xFE9
 41010                           wreg	equ	0xFE8
 41011                           indf1	equ	0xFE7
 41012                           postdec1	equ	0xFE5
 41013                           plusw1	equ	0xFE3
 41014                           fsr1h	equ	0xFE2
 41015                           fsr1l	equ	0xFE1
 41016                           indf2	equ	0xFDF
 41017                           postinc2	equ	0xFDE
 41018                           postdec2	equ	0xFDD
 41019                           plusw2	equ	0xFDB
 41020                           fsr2h	equ	0xFDA
 41021                           fsr2l	equ	0xFD9
 41022                           status	equ	0xFD8
 41023                           
 41024 ;; *************** function __flash_wakeup *****************
 41025 ;; Defined at:
 41026 ;;		line 124 in file "flash.c"
 41027 ;; Parameters:    Size  Location     Type
 41028 ;;		None
 41029 ;; Auto vars:     Size  Location     Type
 41030 ;;  command         1    8[COMRAM] unsigned char 
 41031 ;; Return value:  Size  Location     Type
 41032 ;;                  1    wreg      void 
 41033 ;; Registers used:
 41034 ;;		wreg, status,2, status,0, cstack
 41035 ;; Tracked objects:
 41036 ;;		On entry : 0/0
 41037 ;;		On exit  : 0/0
 41038 ;;		Unchanged: 0/0
 41039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41043 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41044 ;;Total ram usage:        1 bytes
 41045 ;; Hardware stack levels used:    1
 41046 ;; Hardware stack levels required when called:    1
 41047 ;; This function calls:
 41048 ;;		_spi_tx
 41049 ;; This function is called by:
 41050 ;;		__flash_is_busy
 41051 ;;		_flash_set_power_state
 41052 ;; This function uses a non-reentrant model
 41053 ;;
 41054                           
 41055                           	psect	text210
 41056  007CA4                     __ptext210:
 41057                           	opt stack 0
 41058  007CA4                     __flash_wakeup:
 41059                           	opt stack 25
 41060                           
 41061                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 41062                           
 41063                           ;incstack = 0
 41064  007CA4  D021               	goto	l1749
 41065  007CA6                     
 41066                           ;flash.c: 131: command = 0xAB;
 41067  007CA6  0EAB               	movlw	171
 41068  007CA8  6E09               	movwf	__flash_wakeup@command,c
 41069                           
 41070                           ;flash.c: 132: spi_tx(&command, 1);
 41071  007CAA  0E09               	movlw	low __flash_wakeup@command
 41072  007CAC  6E01               	movwf	spi_tx@data,c
 41073  007CAE  0E00               	movlw	high __flash_wakeup@command
 41074  007CB0  6E02               	movwf	spi_tx@data+1,c
 41075  007CB2  0E00               	movlw	0
 41076  007CB4  6E04               	movwf	spi_tx@length+1,c
 41077  007CB6  0E01               	movlw	1
 41078  007CB8  6E03               	movwf	spi_tx@length,c
 41079  007CBA  EC4F  F03D         	call	_spi_tx	;wreg free
 41080                           
 41081                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 41082  007CBE  0E17               	movlw	23
 41083  007CC0                     u12807:
 41084  007CC0  2EE8               	decfsz	wreg,f,c
 41085  007CC2  D7FE               	bra	u12807
 41086  007CC4  F000               	nop	
 41087                           
 41088                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 41089  007CC6  0E00               	movlw	0
 41090  007CC8  0100               	movlb	0	; () banked
 41091  007CCA  6FDF               	movwf	_power_state& (0+255),b
 41092                           
 41093                           ;flash.c: 135: break;
 41094  007CCC  0012               	return	
 41095  007CCE                     l1752:
 41096                           
 41097                           ; BSR set to: 0
 41098                           ;flash.c: 140: LATDbits.LD7 = 0;
 41099  007CCE  9E8C               	bcf	3980,7,c	;volatile
 41100                           
 41101                           ; BSR set to: 0
 41102                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 41103  007CD0  0E0D               	movlw	13
 41104  007CD2                     u12817:
 41105  007CD2  2EE8               	decfsz	wreg,f,c
 41106  007CD4  D7FE               	bra	u12817
 41107  007CD6  F000               	nop	
 41108                           
 41109                           ;flash.c: 142: LATDbits.LD7 = 1;
 41110  007CD8  8E8C               	bsf	3980,7,c	;volatile
 41111                           
 41112                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 41113  007CDA  0E50               	movlw	80
 41114  007CDC                     u12827:
 41115  007CDC  2EE8               	decfsz	wreg,f,c
 41116  007CDE  D7FE               	bra	u12827
 41117                           
 41118                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 41119  007CE0  0E00               	movlw	0
 41120  007CE2  0100               	movlb	0	; () banked
 41121  007CE4  6FDF               	movwf	_power_state& (0+255),b
 41122                           
 41123                           ; BSR set to: 0
 41124                           ;flash.c: 146: }
 41125                           
 41126                           ;flash.c: 145: break;
 41127  007CE6  0012               	return	
 41128  007CE8                     l1749:
 41129                           
 41130                           ; BSR set to: 0
 41131  007CE8  0100               	movlb	0	; () banked
 41132  007CEA  51DF               	movf	_power_state& (0+255),w,b
 41133                           
 41134                           ; Switch size 1, requested type "space"
 41135                           ; Number of cases is 2, Range of values is 1 to 2
 41136                           ; switch strategies available:
 41137                           ; Name         Instructions Cycles
 41138                           ; simple_byte            7     4 (average)
 41139                           ;	Chosen strategy is simple_byte
 41140  007CEC  0A01               	xorlw	1	; case 1
 41141  007CEE  B4D8               	btfsc	status,2,c
 41142  007CF0  D7DA               	goto	l1750
 41143  007CF2  0A03               	xorlw	3	; case 2
 41144  007CF4  A4D8               	btfss	status,2,c
 41145  007CF6  0012               	return	
 41146  007CF8  D7EA               	goto	l1752
 41147  007CFA                     __end_of__flash_wakeup:
 41148                           	opt stack 0
 41149                           tosu	equ	0xFFF
 41150                           tosh	equ	0xFFE
 41151                           tosl	equ	0xFFD
 41152                           pclath	equ	0xFFA
 41153                           tblptru	equ	0xFF8
 41154                           tblptrh	equ	0xFF7
 41155                           tblptrl	equ	0xFF6
 41156                           tablat	equ	0xFF5
 41157                           prodh	equ	0xFF4
 41158                           prodl	equ	0xFF3
 41159                           intcon	equ	0xFF2
 41160                           intcon2	equ	0xFF1
 41161                           intcon3	equ	0xFF0
 41162                           indf0	equ	0xFEF
 41163                           postinc0	equ	0xFEE
 41164                           fsr0h	equ	0xFEA
 41165                           fsr0l	equ	0xFE9
 41166                           wreg	equ	0xFE8
 41167                           indf1	equ	0xFE7
 41168                           postdec1	equ	0xFE5
 41169                           plusw1	equ	0xFE3
 41170                           fsr1h	equ	0xFE2
 41171                           fsr1l	equ	0xFE1
 41172                           indf2	equ	0xFDF
 41173                           postinc2	equ	0xFDE
 41174                           postdec2	equ	0xFDD
 41175                           plusw2	equ	0xFDB
 41176                           fsr2h	equ	0xFDA
 41177                           fsr2l	equ	0xFD9
 41178                           status	equ	0xFD8
 41179                           
 41180 ;; *************** function _spi_tx *****************
 41181 ;; Defined at:
 41182 ;;		line 348 in file "spi.c"
 41183 ;; Parameters:    Size  Location     Type
 41184 ;;  data            2    0[COMRAM] PTR unsigned char 
 41185 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 41186 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 41187 ;;  length          2    2[COMRAM] unsigned int 
 41188 ;; Auto vars:     Size  Location     Type
 41189 ;;		None
 41190 ;; Return value:  Size  Location     Type
 41191 ;;                  1    wreg      void 
 41192 ;; Registers used:
 41193 ;;		wreg, status,2, status,0
 41194 ;; Tracked objects:
 41195 ;;		On entry : 0/0
 41196 ;;		On exit  : 0/0
 41197 ;;		Unchanged: 0/0
 41198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41201 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41203 ;;Total ram usage:        8 bytes
 41204 ;; Hardware stack levels used:    1
 41205 ;; This function calls:
 41206 ;;		Nothing
 41207 ;; This function is called by:
 41208 ;;		__flash_set_page_size
 41209 ;;		__flash_wakeup
 41210 ;;		__flash_copy_page_to_buffer
 41211 ;;		__flash_compare_page_to_buffer
 41212 ;;		__flash_write_page_from_buffer
 41213 ;;		__flash_erase_page
 41214 ;;		_flash_set_power_state
 41215 ;; This function uses a non-reentrant model
 41216 ;;
 41217                           
 41218                           	psect	text211
 41219  007A9E                     __ptext211:
 41220                           	opt stack 0
 41221  007A9E                     _spi_tx:
 41222                           	opt stack 27
 41223                           
 41224                           ;spi.c: 351: DMACON1bits.SSCON1 = 0;
 41225                           
 41226                           ; BSR set to: 0
 41227                           ;incstack = 0
 41228  007A9E  9E88               	bcf	3976,7,c	;volatile
 41229                           
 41230                           ;spi.c: 352: DMACON1bits.SSCON0 = 0;
 41231  007AA0  9C88               	bcf	3976,6,c	;volatile
 41232                           
 41233                           ;spi.c: 354: DMACON1bits.TXINC = 1;
 41234  007AA2  8A88               	bsf	3976,5,c	;volatile
 41235                           
 41236                           ;spi.c: 356: DMACON1bits.RXINC = 0;
 41237  007AA4  9888               	bcf	3976,4,c	;volatile
 41238                           
 41239                           ;spi.c: 358: DMACON1bits.DUPLEX1 = 0;
 41240  007AA6  9688               	bcf	3976,3,c	;volatile
 41241                           
 41242                           ;spi.c: 359: DMACON1bits.DUPLEX0 = 1;
 41243  007AA8  8488               	bsf	3976,2,c	;volatile
 41244                           
 41245                           ;spi.c: 361: DMACON1bits.DLYINTEN = 0;
 41246  007AAA  9288               	bcf	3976,1,c	;volatile
 41247                           
 41248                           ;spi.c: 363: DMACON2bits.DLYCYC = 0b0000;
 41249  007AAC  9886               	bcf	3974,4,c	;volatile
 41250  007AAE  9A86               	bcf	3974,5,c	;volatile
 41251  007AB0  9C86               	bcf	3974,6,c	;volatile
 41252  007AB2  9E86               	bcf	3974,7,c	;volatile
 41253                           
 41254                           ;spi.c: 365: DMACON2bits.INTLVL = 0b0000;
 41255  007AB4  9086               	bcf	3974,0,c	;volatile
 41256  007AB6  9286               	bcf	3974,1,c	;volatile
 41257  007AB8  9486               	bcf	3974,2,c	;volatile
 41258  007ABA  9686               	bcf	3974,3,c	;volatile
 41259                           
 41260                           ;spi.c: 368: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 41261  007ABC  5002               	movf	spi_tx@data+1,w,c
 41262  007ABE  6E6A               	movwf	3946,c	;volatile
 41263                           
 41264                           ;spi.c: 369: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 41265  007AC0  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 41266                           
 41267                           ;spi.c: 372: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 41268  007AC4  0EFF               	movlw	255
 41269  007AC6  6E05               	movwf	??_spi_tx& (0+255),c
 41270  007AC8  0EFF               	movlw	255
 41271  007ACA  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 41272  007ACC  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 41273  007AD0  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 41274  007AD4  5005               	movf	??_spi_tx,w,c
 41275  007AD6  2607               	addwf	??_spi_tx+2,f,c
 41276  007AD8  5006               	movf	??_spi_tx+1,w,c
 41277  007ADA  2208               	addwfc	??_spi_tx+3,f,c
 41278  007ADC  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 41279  007AE0  6A08               	clrf	??_spi_tx+3,c
 41280  007AE2  5007               	movf	??_spi_tx+2,w,c
 41281  007AE4  6E66               	movwf	3942,c	;volatile
 41282                           
 41283                           ;spi.c: 373: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 41284  007AE6  0403               	decf	spi_tx@length,w,c
 41285  007AE8  6E67               	movwf	3943,c	;volatile
 41286                           
 41287                           ;spi.c: 376: LATDbits.LD7 = 0;
 41288  007AEA  9E8C               	bcf	3980,7,c	;volatile
 41289                           
 41290                           ;spi.c: 377: DMACON1bits.DMAEN = 1;
 41291  007AEC  8088               	bsf	3976,0,c	;volatile
 41292  007AEE  B088               	btfsc	3976,0,c	;volatile
 41293  007AF0  D7FE               	goto	l2891
 41294                           
 41295                           ;spi.c: 379: LATDbits.LD7 = 1;
 41296  007AF2  8E8C               	bsf	3980,7,c	;volatile
 41297  007AF4  0012               	return		;funcret
 41298  007AF6                     __end_of_spi_tx:
 41299                           	opt stack 0
 41300                           tosu	equ	0xFFF
 41301                           tosh	equ	0xFFE
 41302                           tosl	equ	0xFFD
 41303                           pclath	equ	0xFFA
 41304                           tblptru	equ	0xFF8
 41305                           tblptrh	equ	0xFF7
 41306                           tblptrl	equ	0xFF6
 41307                           tablat	equ	0xFF5
 41308                           prodh	equ	0xFF4
 41309                           prodl	equ	0xFF3
 41310                           intcon	equ	0xFF2
 41311                           intcon2	equ	0xFF1
 41312                           intcon3	equ	0xFF0
 41313                           indf0	equ	0xFEF
 41314                           postinc0	equ	0xFEE
 41315                           fsr0h	equ	0xFEA
 41316                           fsr0l	equ	0xFE9
 41317                           wreg	equ	0xFE8
 41318                           indf1	equ	0xFE7
 41319                           postdec1	equ	0xFE5
 41320                           plusw1	equ	0xFE3
 41321                           fsr1h	equ	0xFE2
 41322                           fsr1l	equ	0xFE1
 41323                           indf2	equ	0xFDF
 41324                           postinc2	equ	0xFDE
 41325                           postdec2	equ	0xFDD
 41326                           plusw2	equ	0xFDB
 41327                           fsr2h	equ	0xFDA
 41328                           fsr2l	equ	0xFD9
 41329                           status	equ	0xFD8
 41330                           
 41331 ;; *************** function __flash_get_status *****************
 41332 ;; Defined at:
 41333 ;;		line 113 in file "flash.c"
 41334 ;; Parameters:    Size  Location     Type
 41335 ;;		None
 41336 ;; Auto vars:     Size  Location     Type
 41337 ;;  status          2   15[COMRAM] unsigned int 
 41338 ;;  command         1   14[COMRAM] unsigned char 
 41339 ;; Return value:  Size  Location     Type
 41340 ;;                  2   12[COMRAM] unsigned int 
 41341 ;; Registers used:
 41342 ;;		wreg, status,2, status,0, cstack
 41343 ;; Tracked objects:
 41344 ;;		On entry : 0/0
 41345 ;;		On exit  : 0/0
 41346 ;;		Unchanged: 0/0
 41347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41349 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41351 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41352 ;;Total ram usage:        5 bytes
 41353 ;; Hardware stack levels used:    1
 41354 ;; Hardware stack levels required when called:    1
 41355 ;; This function calls:
 41356 ;;		_spi_tx_rx
 41357 ;; This function is called by:
 41358 ;;		__flash_compare_page_to_buffer
 41359 ;;		__flash_is_busy
 41360 ;; This function uses a non-reentrant model
 41361 ;;
 41362                           
 41363                           	psect	text212
 41364  008426                     __ptext212:
 41365                           	opt stack 0
 41366  008426                     __flash_get_status:
 41367                           	opt stack 25
 41368                           
 41369                           ;flash.c: 117: uint8_t command = 0xD7;
 41370                           
 41371                           ;incstack = 0
 41372  008426  0ED7               	movlw	215
 41373  008428  6E0F               	movwf	__flash_get_status@command,c
 41374                           
 41375                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 41376  00842A  0E0F               	movlw	low __flash_get_status@command
 41377  00842C  6E01               	movwf	spi_tx_rx@command,c
 41378  00842E  0E00               	movlw	high __flash_get_status@command
 41379  008430  6E02               	movwf	spi_tx_rx@command+1,c
 41380  008432  0E00               	movlw	0
 41381  008434  6E04               	movwf	spi_tx_rx@command_length+1,c
 41382  008436  0E01               	movlw	1
 41383  008438  6E03               	movwf	spi_tx_rx@command_length,c
 41384  00843A  0E10               	movlw	low __flash_get_status@status
 41385  00843C  6E05               	movwf	spi_tx_rx@data,c
 41386  00843E  0E00               	movlw	high __flash_get_status@status
 41387  008440  6E06               	movwf	spi_tx_rx@data+1,c
 41388  008442  0E00               	movlw	0
 41389  008444  6E08               	movwf	spi_tx_rx@data_length+1,c
 41390  008446  0E02               	movlw	2
 41391  008448  6E07               	movwf	spi_tx_rx@data_length,c
 41392  00844A  ECEB  F034         	call	_spi_tx_rx	;wreg free
 41393                           
 41394                           ;flash.c: 120: return status;
 41395  00844E  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 41396  008452  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 41397  008456  0012               	return	
 41398  008458                     __end_of__flash_get_status:
 41399                           	opt stack 0
 41400                           tosu	equ	0xFFF
 41401                           tosh	equ	0xFFE
 41402                           tosl	equ	0xFFD
 41403                           pclath	equ	0xFFA
 41404                           tblptru	equ	0xFF8
 41405                           tblptrh	equ	0xFF7
 41406                           tblptrl	equ	0xFF6
 41407                           tablat	equ	0xFF5
 41408                           prodh	equ	0xFF4
 41409                           prodl	equ	0xFF3
 41410                           intcon	equ	0xFF2
 41411                           intcon2	equ	0xFF1
 41412                           intcon3	equ	0xFF0
 41413                           indf0	equ	0xFEF
 41414                           postinc0	equ	0xFEE
 41415                           fsr0h	equ	0xFEA
 41416                           fsr0l	equ	0xFE9
 41417                           wreg	equ	0xFE8
 41418                           indf1	equ	0xFE7
 41419                           postdec1	equ	0xFE5
 41420                           plusw1	equ	0xFE3
 41421                           fsr1h	equ	0xFE2
 41422                           fsr1l	equ	0xFE1
 41423                           indf2	equ	0xFDF
 41424                           postinc2	equ	0xFDE
 41425                           postdec2	equ	0xFDD
 41426                           plusw2	equ	0xFDB
 41427                           fsr2h	equ	0xFDA
 41428                           fsr2l	equ	0xFD9
 41429                           status	equ	0xFD8
 41430                           
 41431 ;; *************** function _spi_tx_rx *****************
 41432 ;; Defined at:
 41433 ;;		line 439 in file "spi.c"
 41434 ;; Parameters:    Size  Location     Type
 41435 ;;  command         2    0[COMRAM] PTR unsigned char 
 41436 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 41437 ;;  command_leng    2    2[COMRAM] unsigned int 
 41438 ;;  data            2    4[COMRAM] PTR unsigned char 
 41439 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 41440 ;;		 -> buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 41441 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 41442 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 41443 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_status@status(2), msd_buffer(512), 
 41444 ;;		 -> RAM(3759), 
 41445 ;;  data_length     2    6[COMRAM] unsigned int 
 41446 ;; Auto vars:     Size  Location     Type
 41447 ;;		None
 41448 ;; Return value:  Size  Location     Type
 41449 ;;                  1    wreg      void 
 41450 ;; Registers used:
 41451 ;;		wreg, status,2, status,0
 41452 ;; Tracked objects:
 41453 ;;		On entry : 0/0
 41454 ;;		On exit  : 0/0
 41455 ;;		Unchanged: 0/0
 41456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41457 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41459 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41460 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41461 ;;Total ram usage:       12 bytes
 41462 ;; Hardware stack levels used:    1
 41463 ;; This function calls:
 41464 ;;		Nothing
 41465 ;; This function is called by:
 41466 ;;		__flash_get_status
 41467 ;;		__flash_partial_read
 41468 ;; This function uses a non-reentrant model
 41469 ;;
 41470                           
 41471                           	psect	text213
 41472  0069D6                     __ptext213:
 41473                           	opt stack 0
 41474  0069D6                     _spi_tx_rx:
 41475                           	opt stack 25
 41476                           
 41477                           ;spi.c: 442: DMACON1bits.SSCON1 = 0;
 41478                           
 41479                           ;incstack = 0
 41480  0069D6  9E88               	bcf	3976,7,c	;volatile
 41481                           
 41482                           ;spi.c: 443: DMACON1bits.SSCON0 = 0;
 41483  0069D8  9C88               	bcf	3976,6,c	;volatile
 41484                           
 41485                           ;spi.c: 445: DMACON1bits.TXINC = 1;
 41486  0069DA  8A88               	bsf	3976,5,c	;volatile
 41487                           
 41488                           ;spi.c: 447: DMACON1bits.RXINC = 0;
 41489  0069DC  9888               	bcf	3976,4,c	;volatile
 41490                           
 41491                           ;spi.c: 449: DMACON1bits.DUPLEX1 = 0;
 41492  0069DE  9688               	bcf	3976,3,c	;volatile
 41493                           
 41494                           ;spi.c: 450: DMACON1bits.DUPLEX0 = 1;
 41495  0069E0  8488               	bsf	3976,2,c	;volatile
 41496                           
 41497                           ;spi.c: 452: DMACON1bits.DLYINTEN = 0;
 41498  0069E2  9288               	bcf	3976,1,c	;volatile
 41499                           
 41500                           ;spi.c: 454: DMACON2bits.DLYCYC = 0b0000;
 41501  0069E4  9886               	bcf	3974,4,c	;volatile
 41502  0069E6  9A86               	bcf	3974,5,c	;volatile
 41503  0069E8  9C86               	bcf	3974,6,c	;volatile
 41504  0069EA  9E86               	bcf	3974,7,c	;volatile
 41505                           
 41506                           ;spi.c: 456: DMACON2bits.INTLVL = 0b0000;
 41507  0069EC  9086               	bcf	3974,0,c	;volatile
 41508  0069EE  9286               	bcf	3974,1,c	;volatile
 41509  0069F0  9486               	bcf	3974,2,c	;volatile
 41510  0069F2  9686               	bcf	3974,3,c	;volatile
 41511                           
 41512                           ;spi.c: 459: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 41513  0069F4  5002               	movf	spi_tx_rx@command+1,w,c
 41514  0069F6  6E6A               	movwf	3946,c	;volatile
 41515                           
 41516                           ;spi.c: 460: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 41517  0069F8  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 41518                           
 41519                           ;spi.c: 463: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 41520  0069FC  0EFF               	movlw	255
 41521  0069FE  6E09               	movwf	??_spi_tx_rx& (0+255),c
 41522  006A00  0EFF               	movlw	255
 41523  006A02  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 41524  006A04  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 41525  006A08  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 41526  006A0C  5009               	movf	??_spi_tx_rx,w,c
 41527  006A0E  260B               	addwf	??_spi_tx_rx+2,f,c
 41528  006A10  500A               	movf	??_spi_tx_rx+1,w,c
 41529  006A12  220C               	addwfc	??_spi_tx_rx+3,f,c
 41530  006A14  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 41531  006A18  6A0C               	clrf	??_spi_tx_rx+3,c
 41532  006A1A  500B               	movf	??_spi_tx_rx+2,w,c
 41533  006A1C  6E66               	movwf	3942,c	;volatile
 41534                           
 41535                           ;spi.c: 464: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 41536  006A1E  0403               	decf	spi_tx_rx@command_length,w,c
 41537  006A20  6E67               	movwf	3943,c	;volatile
 41538                           
 41539                           ;spi.c: 467: LATDbits.LD7 = 0;
 41540  006A22  9E8C               	bcf	3980,7,c	;volatile
 41541                           
 41542                           ;spi.c: 470: DMACON1bits.DMAEN = 1;
 41543  006A24  8088               	bsf	3976,0,c	;volatile
 41544  006A26  B088               	btfsc	3976,0,c	;volatile
 41545  006A28  D7FE               	goto	l2906
 41546                           
 41547                           ;spi.c: 474: DMACON1bits.TXINC = 0;
 41548  006A2A  9A88               	bcf	3976,5,c	;volatile
 41549                           
 41550                           ;spi.c: 476: DMACON1bits.RXINC = 1;
 41551  006A2C  8888               	bsf	3976,4,c	;volatile
 41552                           
 41553                           ;spi.c: 478: DMACON1bits.DUPLEX1 = 0;
 41554  006A2E  9688               	bcf	3976,3,c	;volatile
 41555                           
 41556                           ;spi.c: 479: DMACON1bits.DUPLEX0 = 0;
 41557  006A30  9488               	bcf	3976,2,c	;volatile
 41558                           
 41559                           ;spi.c: 482: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 41560  006A32  5006               	movf	spi_tx_rx@data+1,w,c
 41561  006A34  6E68               	movwf	3944,c	;volatile
 41562                           
 41563                           ;spi.c: 483: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 41564  006A36  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 41565                           
 41566                           ;spi.c: 486: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 41567  006A3A  0EFF               	movlw	255
 41568  006A3C  6E09               	movwf	??_spi_tx_rx& (0+255),c
 41569  006A3E  0EFF               	movlw	255
 41570  006A40  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 41571  006A42  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 41572  006A46  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 41573  006A4A  5009               	movf	??_spi_tx_rx,w,c
 41574  006A4C  260B               	addwf	??_spi_tx_rx+2,f,c
 41575  006A4E  500A               	movf	??_spi_tx_rx+1,w,c
 41576  006A50  220C               	addwfc	??_spi_tx_rx+3,f,c
 41577  006A52  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 41578  006A56  6A0C               	clrf	??_spi_tx_rx+3,c
 41579  006A58  500B               	movf	??_spi_tx_rx+2,w,c
 41580  006A5A  6E66               	movwf	3942,c	;volatile
 41581                           
 41582                           ;spi.c: 487: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 41583  006A5C  0407               	decf	spi_tx_rx@data_length,w,c
 41584  006A5E  6E67               	movwf	3943,c	;volatile
 41585                           
 41586                           ;spi.c: 490: DMACON1bits.DMAEN = 1;
 41587  006A60  8088               	bsf	3976,0,c	;volatile
 41588  006A62  B088               	btfsc	3976,0,c	;volatile
 41589  006A64  D7FE               	goto	l2909
 41590                           
 41591                           ;spi.c: 494: LATDbits.LD7 = 1;
 41592  006A66  8E8C               	bsf	3980,7,c	;volatile
 41593  006A68  0012               	return		;funcret
 41594  006A6A                     __end_of_spi_tx_rx:
 41595                           	opt stack 0
 41596                           tosu	equ	0xFFF
 41597                           tosh	equ	0xFFE
 41598                           tosl	equ	0xFFD
 41599                           pclath	equ	0xFFA
 41600                           tblptru	equ	0xFF8
 41601                           tblptrh	equ	0xFF7
 41602                           tblptrl	equ	0xFF6
 41603                           tablat	equ	0xFF5
 41604                           prodh	equ	0xFF4
 41605                           prodl	equ	0xFF3
 41606                           intcon	equ	0xFF2
 41607                           intcon2	equ	0xFF1
 41608                           intcon3	equ	0xFF0
 41609                           indf0	equ	0xFEF
 41610                           postinc0	equ	0xFEE
 41611                           fsr0h	equ	0xFEA
 41612                           fsr0l	equ	0xFE9
 41613                           wreg	equ	0xFE8
 41614                           indf1	equ	0xFE7
 41615                           postdec1	equ	0xFE5
 41616                           plusw1	equ	0xFE3
 41617                           fsr1h	equ	0xFE2
 41618                           fsr1l	equ	0xFE1
 41619                           indf2	equ	0xFDF
 41620                           postinc2	equ	0xFDE
 41621                           postdec2	equ	0xFDD
 41622                           plusw2	equ	0xFDB
 41623                           fsr2h	equ	0xFDA
 41624                           fsr2l	equ	0xFD9
 41625                           status	equ	0xFD8
 41626                           
 41627 ;; *************** function _USBTransferOnePacket *****************
 41628 ;; Defined at:
 41629 ;;		line 995 in file "usb_device.c"
 41630 ;; Parameters:    Size  Location     Type
 41631 ;;  ep              1    wreg     unsigned char 
 41632 ;;  dir             1    0[COMRAM] unsigned char 
 41633 ;;  data            2    1[COMRAM] PTR unsigned char 
 41634 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 41635 ;;		 -> msd_cbw(31), NULL(0), 
 41636 ;;  len             1    3[COMRAM] unsigned char 
 41637 ;; Auto vars:     Size  Location     Type
 41638 ;;  ep              1    8[COMRAM] unsigned char 
 41639 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 41640 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 41641 ;; Return value:  Size  Location     Type
 41642 ;;                  2    0[COMRAM] PTR void 
 41643 ;; Registers used:
 41644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41645 ;; Tracked objects:
 41646 ;;		On entry : 0/0
 41647 ;;		On exit  : 0/0
 41648 ;;		Unchanged: 0/0
 41649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41651 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41653 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41654 ;;Total ram usage:       11 bytes
 41655 ;; Hardware stack levels used:    1
 41656 ;; This function calls:
 41657 ;;		Nothing
 41658 ;; This function is called by:
 41659 ;;		_USBMSDInit
 41660 ;;		_USBCheckMSDRequest
 41661 ;;		_MSDTasks
 41662 ;;		_MSDProcessCommandMediaPresent
 41663 ;;		_MSDReadHandler
 41664 ;;		_MSDWriteHandler
 41665 ;;		_MSDTransferTerminated
 41666 ;;		_APP_DeviceCustomHIDInitialize
 41667 ;;		_APP_DeviceCustomHIDTasks
 41668 ;; This function uses a non-reentrant model
 41669 ;;
 41670                           
 41671                           	psect	text214
 41672  004DD6                     __ptext214:
 41673                           	opt stack 0
 41674  004DD6                     _USBTransferOnePacket:
 41675                           	opt stack 27
 41676                           
 41677                           ;incstack = 0
 41678                           ;USBTransferOnePacket@ep stored from wreg
 41679  004DD6  6E09               	movwf	USBTransferOnePacket@ep,c
 41680                           
 41681                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 41682  004DD8  5001               	movf	USBTransferOnePacket@dir,w,c
 41683  004DDA  B4D8               	btfsc	status,2,c
 41684  004DDC  D007               	goto	l183
 41685                           
 41686                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 41687  004DDE  5009               	movf	USBTransferOnePacket@ep,w,c
 41688  004DE0  0D02               	mullw	2
 41689  004DE2  0EC5               	movlw	low _pBDTEntryIn
 41690  004DE4  24F3               	addwf	prodl,w,c
 41691  004DE6  6ED9               	movwf	fsr2l,c
 41692  004DE8  0E00               	movlw	high _pBDTEntryIn
 41693  004DEA  D006               	goto	L41
 41694  004DEC                     l183:
 41695                           
 41696                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 41697  004DEC  5009               	movf	USBTransferOnePacket@ep,w,c
 41698  004DEE  0D02               	mullw	2
 41699  004DF0  0E40               	movlw	low _pBDTEntryOut
 41700  004DF2  24F3               	addwf	prodl,w,c
 41701  004DF4  6ED9               	movwf	fsr2l,c
 41702  004DF6  0E01               	movlw	high _pBDTEntryOut
 41703  004DF8                     L41:
 41704  004DF8  20F4               	addwfc	prodh,w,c
 41705  004DFA  6EDA               	movwf	fsr2h,c
 41706  004DFC  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 41707  004E00  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 41708                           
 41709                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 41710  004E04  500A               	movf	USBTransferOnePacket@handle,w,c
 41711  004E06  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 41712  004E08  A4D8               	btfss	status,2,c
 41713  004E0A  D005               	goto	l185
 41714                           
 41715                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 41716  004E0C  0E00               	movlw	0
 41717  004E0E  6E01               	movwf	?_USBTransferOnePacket,c
 41718  004E10  0E00               	movlw	0
 41719  004E12  6E02               	movwf	?_USBTransferOnePacket+1,c
 41720  004E14  0012               	return	
 41721  004E16                     l185:
 41722                           
 41723                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 41724  004E16  EE20 F002          	lfsr	2,2
 41725  004E1A  500A               	movf	USBTransferOnePacket@handle,w,c
 41726  004E1C  26D9               	addwf	fsr2l,f,c
 41727  004E1E  500B               	movf	USBTransferOnePacket@handle+1,w,c
 41728  004E20  22DA               	addwfc	fsr2h,f,c
 41729  004E22  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 41730  004E26  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 41731                           
 41732                           ;usb_device.c: 1030: handle->CNT = len;
 41733  004E2A  EE20 F001          	lfsr	2,1
 41734  004E2E  500A               	movf	USBTransferOnePacket@handle,w,c
 41735  004E30  26D9               	addwf	fsr2l,f,c
 41736  004E32  500B               	movf	USBTransferOnePacket@handle+1,w,c
 41737  004E34  22DA               	addwfc	fsr2h,f,c
 41738  004E36  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 41739                           
 41740                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 41741  004E3A  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 41742  004E3E  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 41743  004E42  0E40               	movlw	64
 41744  004E44  16DF               	andwf	indf2,f,c
 41745                           
 41746                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 41747  004E46  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 41748  004E4A  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 41749  004E4E  0E00               	movlw	0
 41750  004E50  86DB               	bsf	plusw2,3,c
 41751                           
 41752                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 41753  004E52  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 41754  004E56  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 41755  004E5A  0E00               	movlw	0
 41756  004E5C  8EDB               	bsf	plusw2,7,c
 41757                           
 41758                           ;usb_device.c: 1036: if(dir != 0)
 41759  004E5E  5001               	movf	USBTransferOnePacket@dir,w,c
 41760  004E60  B4D8               	btfsc	status,2,c
 41761  004E62  D018               	goto	l187
 41762                           
 41763                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 41764  004E64  5009               	movf	USBTransferOnePacket@ep,w,c
 41765  004E66  0D02               	mullw	2
 41766  004E68  0EC5               	movlw	low _pBDTEntryIn
 41767  004E6A  24F3               	addwf	prodl,w,c
 41768  004E6C  6ED9               	movwf	fsr2l,c
 41769  004E6E  0E00               	movlw	high _pBDTEntryIn
 41770  004E70  20F4               	addwfc	prodh,w,c
 41771  004E72  6EDA               	movwf	fsr2h,c
 41772  004E74  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 41773  004E78  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 41774  004E7C  0E04               	movlw	4
 41775  004E7E  1805               	xorwf	??_USBTransferOnePacket,w,c
 41776  004E80  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 41777  004E82  5006               	movf	??_USBTransferOnePacket+1,w,c
 41778  004E84  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 41779  004E86  5009               	movf	USBTransferOnePacket@ep,w,c
 41780  004E88  0D02               	mullw	2
 41781  004E8A  0EC5               	movlw	low _pBDTEntryIn
 41782  004E8C  24F3               	addwf	prodl,w,c
 41783  004E8E  6ED9               	movwf	fsr2l,c
 41784  004E90  0E00               	movlw	high _pBDTEntryIn
 41785  004E92  D017               	goto	L42
 41786  004E94                     l187:
 41787                           
 41788                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 41789  004E94  5009               	movf	USBTransferOnePacket@ep,w,c
 41790  004E96  0D02               	mullw	2
 41791  004E98  0E40               	movlw	low _pBDTEntryOut
 41792  004E9A  24F3               	addwf	prodl,w,c
 41793  004E9C  6ED9               	movwf	fsr2l,c
 41794  004E9E  0E01               	movlw	high _pBDTEntryOut
 41795  004EA0  20F4               	addwfc	prodh,w,c
 41796  004EA2  6EDA               	movwf	fsr2h,c
 41797  004EA4  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 41798  004EA8  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 41799  004EAC  0E04               	movlw	4
 41800  004EAE  1805               	xorwf	??_USBTransferOnePacket,w,c
 41801  004EB0  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 41802  004EB2  5006               	movf	??_USBTransferOnePacket+1,w,c
 41803  004EB4  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 41804  004EB6  5009               	movf	USBTransferOnePacket@ep,w,c
 41805  004EB8  0D02               	mullw	2
 41806  004EBA  0E40               	movlw	low _pBDTEntryOut
 41807  004EBC  24F3               	addwf	prodl,w,c
 41808  004EBE  6ED9               	movwf	fsr2l,c
 41809  004EC0  0E01               	movlw	high _pBDTEntryOut
 41810  004EC2                     L42:
 41811  004EC2  20F4               	addwfc	prodh,w,c
 41812  004EC4  6EDA               	movwf	fsr2h,c
 41813  004EC6  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 41814  004ECA  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 41815                           
 41816                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 41817  004ECE  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 41818  004ED2  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 41819  004ED6  0012               	return	
 41820  004ED8                     __end_of_USBTransferOnePacket:
 41821                           	opt stack 0
 41822                           tosu	equ	0xFFF
 41823                           tosh	equ	0xFFE
 41824                           tosl	equ	0xFFD
 41825                           pclath	equ	0xFFA
 41826                           tblptru	equ	0xFF8
 41827                           tblptrh	equ	0xFF7
 41828                           tblptrl	equ	0xFF6
 41829                           tablat	equ	0xFF5
 41830                           prodh	equ	0xFF4
 41831                           prodl	equ	0xFF3
 41832                           intcon	equ	0xFF2
 41833                           intcon2	equ	0xFF1
 41834                           intcon3	equ	0xFF0
 41835                           indf0	equ	0xFEF
 41836                           postinc0	equ	0xFEE
 41837                           fsr0h	equ	0xFEA
 41838                           fsr0l	equ	0xFE9
 41839                           wreg	equ	0xFE8
 41840                           indf1	equ	0xFE7
 41841                           postdec1	equ	0xFE5
 41842                           plusw1	equ	0xFE3
 41843                           fsr1h	equ	0xFE2
 41844                           fsr1l	equ	0xFE1
 41845                           indf2	equ	0xFDF
 41846                           postinc2	equ	0xFDE
 41847                           postdec2	equ	0xFDD
 41848                           plusw2	equ	0xFDB
 41849                           fsr2h	equ	0xFDA
 41850                           fsr2l	equ	0xFD9
 41851                           status	equ	0xFD8
 41852                           tosu	equ	0xFFF
 41853                           tosh	equ	0xFFE
 41854                           tosl	equ	0xFFD
 41855                           pclath	equ	0xFFA
 41856                           tblptru	equ	0xFF8
 41857                           tblptrh	equ	0xFF7
 41858                           tblptrl	equ	0xFF6
 41859                           tablat	equ	0xFF5
 41860                           prodh	equ	0xFF4
 41861                           prodl	equ	0xFF3
 41862                           intcon	equ	0xFF2
 41863                           intcon2	equ	0xFF1
 41864                           intcon3	equ	0xFF0
 41865                           indf0	equ	0xFEF
 41866                           postinc0	equ	0xFEE
 41867                           fsr0h	equ	0xFEA
 41868                           fsr0l	equ	0xFE9
 41869                           wreg	equ	0xFE8
 41870                           indf1	equ	0xFE7
 41871                           postdec1	equ	0xFE5
 41872                           plusw1	equ	0xFE3
 41873                           fsr1h	equ	0xFE2
 41874                           fsr1l	equ	0xFE1
 41875                           indf2	equ	0xFDF
 41876                           postinc2	equ	0xFDE
 41877                           postdec2	equ	0xFDD
 41878                           plusw2	equ	0xFDB
 41879                           fsr2h	equ	0xFDA
 41880                           fsr2l	equ	0xFD9
 41881                           status	equ	0xFD8
 41882                           
 41883                           	psect	text215
 41884  000000                     __ptext215:
 41885                           	opt stack 0
 41886                           tosu	equ	0xFFF
 41887                           tosh	equ	0xFFE
 41888                           tosl	equ	0xFFD
 41889                           pclath	equ	0xFFA
 41890                           tblptru	equ	0xFF8
 41891                           tblptrh	equ	0xFF7
 41892                           tblptrl	equ	0xFF6
 41893                           tablat	equ	0xFF5
 41894                           prodh	equ	0xFF4
 41895                           prodl	equ	0xFF3
 41896                           intcon	equ	0xFF2
 41897                           intcon2	equ	0xFF1
 41898                           intcon3	equ	0xFF0
 41899                           indf0	equ	0xFEF
 41900                           postinc0	equ	0xFEE
 41901                           fsr0h	equ	0xFEA
 41902                           fsr0l	equ	0xFE9
 41903                           wreg	equ	0xFE8
 41904                           indf1	equ	0xFE7
 41905                           postdec1	equ	0xFE5
 41906                           plusw1	equ	0xFE3
 41907                           fsr1h	equ	0xFE2
 41908                           fsr1l	equ	0xFE1
 41909                           indf2	equ	0xFDF
 41910                           postinc2	equ	0xFDE
 41911                           postdec2	equ	0xFDD
 41912                           plusw2	equ	0xFDB
 41913                           fsr2h	equ	0xFDA
 41914                           fsr2l	equ	0xFD9
 41915                           status	equ	0xFD8
 41916                           
 41917                           	psect	rparam
 41918  0000                     tosu	equ	0xFFF
 41919                           tosh	equ	0xFFE
 41920                           tosl	equ	0xFFD
 41921                           pclath	equ	0xFFA
 41922                           tblptru	equ	0xFF8
 41923                           tblptrh	equ	0xFF7
 41924                           tblptrl	equ	0xFF6
 41925                           tablat	equ	0xFF5
 41926                           prodh	equ	0xFF4
 41927                           prodl	equ	0xFF3
 41928                           intcon	equ	0xFF2
 41929                           intcon2	equ	0xFF1
 41930                           intcon3	equ	0xFF0
 41931                           indf0	equ	0xFEF
 41932                           postinc0	equ	0xFEE
 41933                           fsr0h	equ	0xFEA
 41934                           fsr0l	equ	0xFE9
 41935                           wreg	equ	0xFE8
 41936                           indf1	equ	0xFE7
 41937                           postdec1	equ	0xFE5
 41938                           plusw1	equ	0xFE3
 41939                           fsr1h	equ	0xFE2
 41940                           fsr1l	equ	0xFE1
 41941                           indf2	equ	0xFDF
 41942                           postinc2	equ	0xFDE
 41943                           postdec2	equ	0xFDD
 41944                           plusw2	equ	0xFDB
 41945                           fsr2h	equ	0xFDA
 41946                           fsr2l	equ	0xFD9
 41947                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    823
    Data        38
    BSS         2159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     89     160
    BANK1           256      0     254
    BANK2           256      0     208
    BANK3           256      0     128
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), 
		 -> RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), 
		 -> _write_fat@value(COMRAM[2]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_resize@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK1[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(BANK0[32]), 
		 -> fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> RAM(DATA[3759]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK1[50]), RAM(DATA[3759]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), 
		 -> ReceivedDataBuffer(BANK2[64]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), RAM(DATA[3759]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), 
		 -> _write_fat@value(COMRAM[2]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_api_parse
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_find_file
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->__flash_partial_read
    _APP_DeviceCustomHIDTasks->_api_parse
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__read_fat
    _fat_get_file_size->_flash_partial_read
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _api_parse->__parse_command_long
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u32
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_modify
    __parse_format_drive->_fat_format
    _fat_format->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    __parse_file_resize->_fat_resize_file
    _fat_resize_file->_fat_get_file_information
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_modify->_fat_modify_file
    _fat_modify_file->_fat_get_file_information
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__get_first_cluster
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_get_file_information
    _fat_get_file_information->__root_is_available
    __root_is_available->_flash_partial_read
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    __parse_file_resize->_fat_resize_file
    __parse_file_rename->_fat_rename_file
    __parse_file_modify->_fat_modify_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 1829233
                                             79 BANK0     10    10      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   93854
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   86544
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      44
                           _i2c_init
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   28085
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6304
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6060
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   21781
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    5367
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  111633
                                             93 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   48603
                                              0 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   45594
                                              0 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   17370
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5816
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   99240
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   99240
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   94076
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   47789
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   46031
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   22671
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15083
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   12464
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5068
                                             43 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    4787
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  632765
                                             75 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   80800
                                             93 COMRAM     1     1      0
                                             71 BANK0      4     0      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   45808
                                             51 BANK0     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  51    41     10   37009
                                              0 BANK0     51    41     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             38    24     14   19727
                                             55 COMRAM    38    24     14
                          __read_fat
               __sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    7995
                                             47 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    2777
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (3) _flash_is_busy                                        1     1      0    2380
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        5     1      4   17139
                                             62 COMRAM     5     1      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    9819
                                             67 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  548652
                                             94 COMRAM     1     1      0
                                             51 BANK0      5     2      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   86566
                                             43 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   83335
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   80147
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0   15330
                                             36 COMRAM     1     1      0
                  __display_itoa_u32
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0   15351
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   21962
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    6     0      6   14943
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3163
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  461418
                                             91 COMRAM     3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
                 __parse_file_resize
                __parse_format_drive
 ---------------------------------------------------------------------------------
 (3) __parse_format_drive                                  3     1      2   16569
                                             38 COMRAM     3     1      2
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16414
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14738
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_resize                                   7     5      2   89421
                                             70 COMRAM     7     5      2
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (4) _fat_resize_file                                     55    51      4   89127
                                             62 COMRAM     8     4      4
                                              0 BANK0     47    47      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   39872
                                             66 COMRAM     3     1      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     38    34      4   39651
                                             62 COMRAM     4     0      4
                                              0 BANK0     34    34      0
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   9     7      2   49032
                                             82 COMRAM     9     7      2
                    _fat_modify_file
 ---------------------------------------------------------------------------------
 (4) _fat_modify_file                                     65    57      8   48649
                                             62 COMRAM    20    12      8
                                              0 BANK0     45    45      0
                          __read_fat
               __sector_from_cluster
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   70685
                                             62 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      5     5      0   70508
                                             57 COMRAM     5     5      0
                       __delete_root
                 __get_first_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                  10     8      2    7994
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         7     7      0   21996
                                             40 COMRAM     7     7      0
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   7     5      2   83979
                                             79 COMRAM     7     5      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     53    45      8   83663
                                             67 COMRAM    12     4      8
                                              0 BANK0     41    41      0
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (5) _fat_get_empty_clusters                              12    10      2    8218
                                             47 COMRAM    12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    9375
                                             47 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    8126
                                             54 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  111565
                                             74 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  63    59      4  111322
                                             62 COMRAM    12     8      4
                                              0 BANK0     51    51      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2   16762
                                             54 COMRAM     8     6      2
                 __root_is_available
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   7     7      0    8036
                                             47 COMRAM     7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __write_root                                          8     6      2   22351
                                             40 COMRAM     8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __write_fat                                           8     4      4   23598
                                             40 COMRAM     8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   21882
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (7) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __update_modified_time                                2     0      2     177
                                              4 COMRAM     2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (5) __get_time                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     289
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8705
                                             47 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_empty_cluster                                  10     8      2    8551
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7857
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4187
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             __update_modified_time
               __get_date
               __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _fat_get_empty_clusters
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __get_first_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
         __parse_file_modify
           _fat_modify_file
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_rename
           _fat_rename_file
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_resize
           _fat_resize_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_page_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_file_append
         _fat_append_to_file
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           __update_modified_time
             __get_date
             __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_find_file
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _fat_get_empty_clusters
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __get_first_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
       __parse_file_modify
         _fat_modify_file
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_file_rename
         _fat_rename_file
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_resize
         _fat_resize_file
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_format_drive
         _fat_format
           __get_data
           __get_fat
           __get_fbr
           __get_mbr
           __get_root
           _flash_page_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_file
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file_fast
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D0       9       81.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     34D      31        0.0%
DATA                 0      0     94D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Sep 09 01:38:42 2018

                          __end_of_fat_read_from_file 69D6  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
                            fat_create_file@extension 0046  
              __end_of_i2c_display_send_init_sequence 84E2  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 84B6  
                                 __system_timer0_init 8746  
                                                  _os 00B9  
                                       _USBDeviceInit 407C  
                                  _USBCheckHIDRequest 5288  
                __bootloader_verify_file@return_value 0089  
                                    ??__flash_is_busy 0012  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0031  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                             fat_modify_file@position 0089  
                                     _fat_resize_file 21E4  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 5C22  
                                                 l210 66AA  
                                                 l220 4F00  
                                                 l141 40EA  
                                                 l214 6910  
                                                 l310 61A2  
                                                 l150 3974  
                                                 l143 4126  
                                                 l303 824E  
                                                 l151 396A  
                                                 l320 777E  
                                                 l208 6690  
                                                 l224 4F82  
                                                 l304 824C  
                                                 l152 3968  
                                                 l241 5896  
                                                 l233 57EA  
                                                 l161 39F0  
                                                 l242 585E  
                                                 l330 5BCC  
                                                 l322 77C8  
                                                 l235 57F4  
                                                 l331 5B92  
                                                 l251 4642  
                                                 l411 52D6  
                                                 l219 4F58  
                                                 l139 40C2  
                                                 l171 3A80  
                                                 l163 3A06  
                                                 l155 3990  
                                                 l252 4628  
                                                 l412 52A4  
                                                 l260 51F0  
                                                 l164 3A12  
                                                 l156 39A0  
                                                 l237 5856  
                                                 l333 5BB2  
                                                 l309 61A8  
                                                 l173 3AA4  
                                                 l165 3A3A  
                                                 l157 39A8  
                                                 l238 581E  
                                                 l422 52F8  
                                                 l414 52E8  
                         __end_of_USBStdGetDscHandler 444E  
                                                 l262 5264  
                                                 l350 5104  
                                                 l166 3A46  
                                                 l158 39BE  
                                                 l183 4DEC  
                                                 l191 4A1C  
                                                 l423 5310  
                                                 l415 52C2  
                                                 l271 433A  
                                                 l343 5162  
                                                 l175 3AC0  
                                                 l159 39CA  
                                                 l328 5B4A  
                                                 l248 45CC  
                                                 l424 531C  
                                                 l360 186C  
                                                 l272 43C8  
                                                 l352 510A  
                                                 l344 50D4  
                                                 l168 3A58  
                                                 l185 4E16  
                                                 l329 5B50  
                                                 l249 45AA  
                                                 l521 4CC0  
                                                 l425 5334  
                                                 l361 1872  
                                                 l281 6238  
                                                 l353 5128  
                                                 l610 7680  
                                                 l178 8184  
                                                 l418 5340  
                                                 l530 5D76  
                                                 l274 43D0  
                                                 l282 61C6  
                                                 l354 5144  
                                                 l346 50DE  
                                                 l187 4E94  
                                                 l603 7688  
                                                 l179 8192  
                                                 l371 1992  
                                                 l363 18DE  
                                                 l275 4426  
                                                 l347 50E4  
                                                 l620 04BE  
                                                 l604 764C  
                                                 l372 19AE  
                                                 l268 4436  
                                                 l348 50EA  
                                                 l621 04C8  
                                                 l381 1AA6  
                                                 l365 1926  
                                                 l277 442E  
                                                 l269 4326  
                                                 l285 624E  
                                                 l349 50FE  
                                                 l710 537A  
                                                 l702 17D6  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 7668  
                                                 l518 4CC8  
                                                 l534 5DDC  
                                                 l374 1A14  
                                                 l286 61D8  
                                                 l703 17EE  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 4C3C  
                                                 l375 1A20  
                                                 l367 1948  
                                                 l287 61DE  
                                                 l295 7FAA  
                                                 l712 5390  
                                                 l704 1808  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 7674  
                                                 l800 6DEE  
                                                 l376 1A9A  
                                                 l288 61FC  
                                                 l296 7FA8  
                                                 l721 541C  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 767A  
                                                 l561 20DA  
                                                 l529 5E12  
                                                 l369 19C8  
                                                 l722 5406  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 21C6  
                                                 l562 20C4  
                                                 l546 5DE4  
                                                 l810 6DE0  
                                                 l715 53C0  
                                                 l651 07CC  
                                                 l571 20F6  
                                                 l563 2098  
                                                 l555 1F98  
                                                 l379 1A54  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 20A0  
                                                 l804 6DBC  
                                                 l900 3F22  
                                                 l661 67D0  
                                                 l741 4CFC  
                                                 l733 542E  
                                                 l645 0784  
                                                 l573 2108  
                                                 l805 6DC4  
                                                 l901 3E9C  
                                                 l750 4D30  
                                                 l718 53CC  
                                                 l670 32A8  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 20B8  
                                                 l806 6DCC  
                                                 l902 3EA4  
                                                 l751 4D3C  
                                                 l719 53E6  
                                                 l671 32B2  
                                                 l575 212A  
                                                 l559 1FB8  
                                                 l903 3EAC  
                                                 l752 4D4E  
                                                 l680 33E0  
                                                 l672 32C6  
                                                 l648 07CE  
                                                 l592 4702  
                                                 l576 2132  
                                                 l808 6DD6  
                                                 l904 3EB4  
                                                 l753 4D5A  
                                                 l737 543E  
                                                 l665 33F6  
                                                 l649 07A8  
                                                 l577 2156  
                                                 l905 3EBC  
                                                 l754 4D6C  
                                                 l674 3310  
                                                 l666 3248  
                                                 l690 1638  
                                                 l586 21A8  
                                                 l914 77F4  
                                                 l906 3EC4  
                                                 l659 67BA  
                                                 l747 4DAE  
                                                 l755 4DA2  
                                                 l675 3338  
                                                 l691 1644  
                                                 l907 3ECE  
                                                 l748 4D28  
                                                 l668 341A  
                                                 l676 3368  
                                                 l684 181E  
                                                 l692 1664  
                                                 l596 479A  
                                                 l764 7B14  
                                                 _BDT 000D00  
                                                 l677 337A  
                                                 l669 329C  
                                                 l693 16AE  
                                                 l685 1592  
                                                 l597 4794  
                                                 l589 21B0  
                                                 l933 7D1A  
                                                 l917 781A  
                                                 l678 3380  
                                                 l694 1688  
                                                 l926 7D38  
                                                 l918 7828  
                                                 l679 3394  
                                                 l687 1842  
                                                 l695 16F4  
                                                 l599 479E  
                                                 l767 7B4A  
                                                 l935 7D26  
                                                 l927 7CFE  
                                                 l696 16EC  
                                                 l688 1632  
                                                 l929 7D08  
                       __size_of__sector_from_cluster 000E  
                                                 l698 1708  
                                                 l699 1770  
                                                 l972 62DC  
                                                 l893 3DF0  
                                                 l966 626E  
                                                 l894 3DFE  
                                                 l896 3E86  
                                                 l898 3EDE  
                                                 l899 3E94  
                                                 _LBA 015A  
                                                 _LUN 01D9  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                             __get_first_cluster@slot 0039  
                                _i2c_digipot_reset_on 86BE  
                                   main@tx_start_addr 00B1  
                            __size_of__display_failed 02F6  
                                         _start_line1 8DF4  
                                         _start_line2 8E62  
                                         _start_line3 8EA7  
                                         _start_line4 8E22  
                                  api_prepare@command 005E  
                                          _USBSuspend 8458  
                                  _internalFlash_read 825A  
                              __end_of_display_update 7440  
                                USBStdSetCfgHandler@i 0018  
                                ?__parse_format_drive 0027  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 3948  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 00F6  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 48B2  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 0032  
                                       _hex_file_size 00CB  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                        __parse_file_resize@file_size 004A  
                                 api_prepare@inBuffer 00A7  
                            fat_create_file@root_slot 0064  
                         __flash_write_to_buffer@data 0016  
                                                l1008 884E  
                                                l2010 2822  
                                                l1210 6C3A  
                                                l2011 2744  
                                                l1203 7F14  
                                                l2012 279A  
                                                l2004 265E  
                                                l1204 7EF8  
                                                l1300 564C  
                                                l2013 27E0  
                                                l1117 87EA  
                                                l2110 1AFC  
                                                l2030 24A6  
                                                l1302 565C  
                                                l2007 26CC  
                                                l2103 1BF0  
                                                l2111 1B0C  
                                                l2031 2464  
                                                l2008 26A6  
                                                l2040 21F2  
                                                l2120 1B6C  
                                                l2112 1B1C  
                                                l2104 1ACE  
                                                l1232 7B94  
                                                l2024 6998  
                                                l1304 566C  
                                                l1320 4AC6  
                                                l2017 683A  
                                                l2201 85DC  
                                                l2121 1B70  
                                                l2113 1B2C  
                                                l1233 7B78  
                                                l2033 2638  
                                                l1209 6C56  
                                                l2130 1B94  
                                                l2122 1B74  
                                                l2114 1B3C  
                                                l2106 1AD2  
                                                l1154 898A  
                                                l1090 866C  
                                                l2034 252C  
                                                l1306 5684  
                                                l1330 4B70  
                                                l2019 686E  
                                                l2043 223A  
                                                l2131 1B98  
                                                l2123 1B78  
                                                l2115 1B4C  
                                                l2107 1AD6  
                                                l1091 865A  
                                                l2035 2552  
                                                l1163 891E  
                                                l2211 644E  
                                                l1083 82AE  
                                                l1331 4B90  
                                                l1323 4ADA  
                                                l2044 2266  
                                                l2140 1BBC  
                                                l2132 1B9C  
                                                l2124 1B7C  
                                                l2116 1B5C  
                                                l2108 1ADA  
                                                l2036 25F8  
                                                l1084 82B8  
                                                l1308 5694  
                                                l1324 4AEE  
                                                l2061 23D2  
                                                l2045 2378  
                                                l2053 2364  
                                                l2141 1BC0  
                                                l2133 1BA0  
                                                l2125 1B80  
                                                l2117 1B60  
                                                l2109 1AEC  
                                                l1181 8916  
                                                l1325 4B04  
                                                l2070 1DBC  
                                                l2046 236A  
                                                l2150 1BE0  
                                                l2134 1BA4  
                                                l2126 1B84  
                                                l2118 1B64  
                                                l1510 0CE0  
                                                l2047 22E2  
                                                l2151 1BE4  
                                                l2143 1BC4  
                                                l2135 1BA8  
                                                l2127 1B88  
                                                l2119 1B68  
                                                l1175 892A  
                                                l2207 63FE  
                                                l1319 4BA0  
                                                l1327 4B2C  
                                                l2072 1F6A  
                                                l2048 231A  
                                                l2160 7C54  
                                                l2152 1BE8  
                                                l2144 1BC8  
                                                l2136 1BAC  
                                                l2128 1B8C  
                                                l2080 5A46  
                                                l1512 0D8C  
                                                l2400 0992  
                                                l1328 4B54  
                                                l2241 71BE  
                                                l2073 1E58  
                                                l2057 23F4  
                                                l2161 7C58  
                                                l2153 1BEC  
                                                l2145 1BCC  
                                                l2137 1BB0  
                                                l2129 1B90  
                                                l1169 8982  
                                                l1601 31D0  
                                                l2401 09EC  
                                                l2074 1E80  
                                                l2058 238E  
                                                l2162 7C5C  
                                                l2146 1BD0  
                                                l2138 1BB4  
                                                l2090 5A6A  
                                                l2082 5A4A  
                                                l2170 37E2  
                                                l1514 0E38  
                                                l1602 3198  
                                                l1610 4482  
                                                l2410 0AE8  
                                                l2075 1F28  
                                                l2163 7C60  
                                                l2147 1BD4  
                                                l2139 1BB8  
                                                l2091 5A6E  
                                                l2083 5A4E  
                                                l1195 854C  
                                                l1611 4454  
                                                l2411 0BAC  
                                                l2068 1DAA  
                                                l2164 7C64  
                                                l2148 1BD8  
                                                l2092 5A72  
                                                l2084 5A52  
                                                l2180 3870  
                                                l2172 37F0  
                                                l1196 853E  
                                                l1516 0EE4  
                                                l1508 0C36  
                                                l1604 3224  
                                                l2244 84F2  
                                                l2404 0BF6  
                                                l2412 0AF2  
                                                l1292 56BA  
                                                l2069 1DE2  
                                                l2157 7C6C  
                                                l2165 7C68  
                                                l2149 1BDC  
                                                l2093 5A76  
                                                l2085 5A56  
                                                l2181 3874  
                                                l1197 8560  
                                                l1605 31F6  
                                                l1701 7BD6  
                                                l1613 44D6  
                                                l2261 00B4  
                                                l2413 0B6A  
                                                l2405 09FE  
                                                l1293 5612  
                                                l2158 7C50  
                                                l2094 5A7A  
                                                l2086 5A5A  
                                                l2190 3898  
                                                l2182 3878  
                                                l2174 3828  
                                                l1198 8542  
                                                l1622 3AFC  
                                                l1702 7BA8  
                                                l1614 44A8  
                                                l1542 59B0  
                                                l1550 599E  
                                                l2246 84FC  
                                                l2262 0202  
                                                l2414 0BA6  
                                                l2239 71AE  
                                                l2079 5A92  
                                                l2095 5A7E  
                                                l2087 5A5E  
                                                l2191 389C  
                                                l2183 387C  
                                                l1199 8546  
                                                l1471 5CE0  
                                                l1631 3C22  
                                                l1623 3ACE  
                                                l1551 59A4  
                                                l1543 597A  
                                                l2503 859E  
                                                l2271 0426  
                                                l2263 0188  
                                                l2351 78F4  
                                                l1800 8742  
                                                l2096 5A82  
                                                l2088 5A62  
                                                l2176 38B8  
                                                l2192 38A0  
                                                l2184 3880  
                                                l1632 3BF4  
                                                l1464 7E9E  
                                                l1640 1322  
                                                l1616 452A  
                                                l1552 59AA  
                                                l2512 828E  
                                                l2248 850A  
                                                l2416 0BC2  
                                                l2408 0A3A  
                                                l1296 5624  
                                                l2097 5A86  
                                                l2089 5A66  
                                                l2193 38A4  
                                                l2185 3884  
                                                l2177 3864  
                                                l1625 3B50  
                                                l1641 12F4  
                                                l1617 44FC  
                                                l1553 5A0E  
                                                l1545 5980  
                                                l2273 0458  
                                                l2265 033E  
                                                l2353 7900  
                                                l2098 5A8A  
                                                l2194 38A8  
                                                l2186 3888  
                                                l2178 3868  
                                                l1474 5D06  
                                                l1626 3B22  
                                                l1466 7EAA  
                                                l1650 13C6  
                                                l1562 2CBE  
                                                l1554 59FA  
                                                l1546 5986  
                                                l2362 57BE  
                                                l2266 0310  
                                                l1298 5634  
                                                l2099 5A8E  
                                                l2195 38AC  
                                                l2187 388C  
                                                l2179 386C  
                                                l3323 759C  
                                                l1643 14F4  
                                                l1651 1398  
                                                l1571 2E58  
                                                l1563 2C90  
                                                l1555 5A00  
                                                l1547 598C  
                                                l2363 56FA  
                                                l2275 048A  
                                                l2259 003E  
                                                l2347 7912  
                                                l2196 38B0  
                                                l2188 3890  
                                                l3404 808C  
                                                l1476 5D2A  
                                                l1628 3BCE  
                                                l3324 7590  
                                                l1580 3FB2  
                                                l1572 2E2A  
                                                l1556 5A06  
                                                l1548 5992  
                                                l2364 5750  
                                                l2268 039C  
                                                l2380 0FBA  
                                                l2356 7906  
                                                l2348 78E8  
                          USBConfigureEndpoint@handle 0007  
                                                l2197 38B4  
                                                l2189 3894  
                                                l3405 8084  
                                                l1629 3B96  
                                                l1645 1376  
                                                l1637 12CE  
                                                l1581 3F84  
                                                l1565 2D12  
                                                l1557 5A38  
                                                l1549 5998  
                                                l2701 607A  
                                                l2269 03C0  
                                                l2381 0FDE  
                                                l1741 6FFA  
                                                l1750 7CA6  
                                                l2198 3944  
                                                l2710 6608  
                                                l1478 5D4E  
                                                l1662 14B6  
                                                l1654 1416  
                                                l1646 1348  
                                                l1638 12A0  
                                                l1566 2CE4  
                                                l2702 6096  
                                                l2630 41F4  
                                                l2374 6394  
                                                l2366 57A6  
                                                l2390 1264  
                                                l1742 7026  
                                                l2711 65A4  
                                                l3327 75C4  
                                                l1663 1488  
                                                l1655 13E8  
                                                l1671 3454  
                                                l1583 4006  
                                                l2703 60B2  
                                                l2631 420A  
                                                l2367 57A8  
                                                l2383 1066  
                                                l1752 7CCE  
                                                l1760 7A64  
                                                l2712 663C  
                                                l3408 80A4  
                                                l3328 75D2  
                                                l1648 1516  
                                                l1592 309C  
                                                l1680 35B0  
                                                l1672 3426  
                                                l1584 3FD8  
                                                l1568 2E04  
                                                l2704 60CE  
                                                l2640 4296  
                                                l2632 4220  
                                                l2368 57B2  
                                                l2392 1286  
                                                l2384 10CE  
                                                l2713 65B2  
                                                l3409 80AE  
                                                l1665 154A  
                                                l1593 306E  
                                                l1681 3582  
                                                l1577 3F5E  
                                                l1569 2DD6  
                                                l2705 60D4  
                                                l2641 42A4  
                                                l2385 1148  
                                                l1770 7092  
                                                l3610 5EC4  
                                                l2722 556A  
                                                l2714 65C0  
                                                l1690 3C9E  
                                                l1666 151C  
                                                l1658 1466  
                                                l1674 34A8  
                                                l1586 405A  
                                                l1578 3F30  
                                                l2706 60DA  
                                                l2650 58C4  
                                                l2634 42EC  
                                                l2642 42CC  
                                                l1915 7138  
                                                l1923 86A6  
                                                l2715 65CE  
                                                l1659 1438  
                                                l1595 30F0  
                                                l1675 347A  
                                                l1587 402C  
                                                l2635 4256  
                                                l2627 4240  
                                                l2387 11A8  
                                                l1932 6DAA  
                                                l1772 70B0  
                                                l2900 6D2A  
                                                l2740 747C  
                                                l2716 65DC  
                                                l1692 3D20  
                                                l1596 30C2  
                                                l2652 592E  
                                                l2628 41DE  
                                                l2388 11DA  
                                                l1749 7CE8  
                                                l1845 72FE  
                                                l1917 719E  
                                                l1925 86B6  
                                                l1837 7C46  
                                                l2717 65EA  
                                                l1693 3CF2  
                                                l1677 34FC  
                                                l2653 58E0  
                                                l2637 4264  
                                                l2397 08A0  
                                                l2389 1208  
                                                l2734 5014  
                                                l2718 65F8  
                                                l1686 3C78  
                                                l1598 3144  
                                                l1678 34CE  
                                                l2654 5966  
                                                l2646 58AE  
                                                l2670 6008  
                                                l2638 4276  
                                                l1767 7050  
                                                l1759 7A5A  
                                                l1847 7360  
                                                l1695 3D98  
                                                l1687 3C4A  
                                                l1599 3116  
                                                l2655 58F8  
                                                l2639 4288  
                                                l2399 092A  
                                                l1768 705A  
                                                l3608 5ECC  
                                                l1936 6B9E  
                                                l2728 7DDC  
                                                l2752 47E0  
                                                l1696 3D6A  
                                                l2656 5914  
                                                l2664 5FB8  
                                                l1880 8346  
                                                l2496 6F80  
                                                l1929 6D46  
                                                l3609 5E26  
                                                l1689 3CCC  
                                                l2906 6A26  
                                                l1794 7A02  
                                                l1786 7E56  
                                                l2746 6EFE  
                                                l3394 7D6C  
                                                l2666 5FF2  
                                                l2498 6F8C  
                                                l1795 7A0C  
                                                l1787 7E60  
                                                l1939 6C00  
                                                l3395 7D64  
                                                l2676 3030  
                                                l2668 6030  
                                                l1876 8378  
                                                l2909 6A62  
                                                l2677 305E  
                                                l2669 5FFC  
                                                l1974 5F90  
                                                l3590 7638  
                                                l2758 7FEA  
                                                l3398 7D8C  
                                                l3582 6460  
                                                l2942 6E6E  
                                                l2678 3036  
                                                l2694 2A28  
                                                l2870 8160  
                                                l3591 75FA  
                                                l1983 366C  
                                                l1991 74B4  
                                                l3399 7D96  
                                                l2943 6E62  
                                                l2871 813C  
                                                l2880 48BC  
                                                l1968 5F3C  
                                                l1984 37A4  
                                                l3584 649A  
                                                l2872 816E  
                                                l1985 3746  
                                                l3585 64D8  
                                                l2689 6562  
                                                l2873 814E  
                                                l1986 3768  
                                                l1994 74CE  
                                                l3578 8058  
                                                l2946 6EA2  
                                                l2698 60E0  
                                                l2891 7AEE  
                                                l2883 4920  
                                                l1987 379E  
                                                l2947 6EB0  
                                                l2699 605E  
                                                l1996 750C  
                                                l3596 8528  
                                                l2877 49AC  
                                                l3597 8518  
                                                l2878 48B6  
                                                l2897 6CF6  
                                                STR_1 8FF2  
                                                STR_2 8FF2  
                                                STR_3 8FF2  
                                                STR_4 8FF2  
                                                STR_5 8FF2  
                                                STR_6 8FF2  
                                                STR_7 8FF2  
                               __end_of_checked_line1 8DC4  
                                                STR_8 8FF2  
                               __end_of_checked_line2 8CAE  
                                                STR_9 8FDD  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D43  
                                      _bootloader_run 78E4  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 0187  
                                                u7030 5CCC  
                                                u7040 5CF2  
                                                u7105 7A70  
                                                u7050 5D16  
                                                u7130 6E72  
                                                u7060 5D3A  
                                                u7160 75A0  
                                                u6450 7D70  
                                                u7410 5402  
                                                u8018 16BA  
                                                u9010 441A  
                                                u8019 16CE  
                                                u6620 7948  
                                                u8060 17AA  
                                                u6630 7954  
                                                u8070 17AC  
                               ??_USBCtrlTrfTxService 0001  
                                                u6640 7960  
                                                u6480 8090  
                                                u8160 7ED6  
                                                u7600 8374  
                                                u7440 5418  
                                                u7280 5DBE  
                                                u9017 4410  
                                                u6650 796C  
                                                u7610 8342  
                                                u6660 7978  
                                                u6628 794A  
                                                u7460 542A  
                                                u6670 7982  
                                                u6638 7956  
                                                u7550 0CF4  
                                                u9230 1A3A  
                                                _UCFG 000F39  
                                                u7800 761A  
                                                u6648 7962  
                                                u7560 0DA0  
                                                u7480 543A  
                                                u8088 17B2  
                                                u9400 074C  
                                                u8089 17C4  
                                                u8610 6DB0  
                                                u7650 719A  
                                                u6658 796E  
                                                u7570 0E4C  
                                                u9410 075E  
                                                u9330 062C  
                                                u6755 7066  
                                                u7635 715E  
                                                u7660 5E46  
                                                u9500 366A  
                                                u6676 7984  
                                                u6668 797A  
                                                u9308 055C  
                                                u6908 4C5C  
                                                _UEP0 000F26  
                                                u6845 7A18  
                                                u9309 0570  
                                                u6909 4C6E  
                                                _UEP1 000F27  
                                    ?_fat_create_file 0044  
                                                u7807 7610  
                                                u7680 5E7E  
                                                u9440 07D6  
                                                u7760 5846  
                                                u6944 4CB2  
                                                u6928 4C80  
                                                u6865 70CC  
                                                u7825 326E  
                                                u6945 4CAC  
                                                u6929 4C94  
                                                u8570 86BA  
                                                u7690 5EB4  
                                                u6970 4CE8  
                                                u7667 5E3C  
                                                _UEIE 000F37  
                                                u9348 064C  
                                                u7780 5886  
                                                u7685 5E78  
                                                u9349 0660  
                                                u8750 5F9C  
                                                u9630 6862  
                                                u7687 5E6E  
                                                u8831 37FA  
                                                u7935 15B8  
                                                u7767 583C  
                                                u8760 5FA2  
                                                u8665 79BE  
                                                u7697 5EAA  
                                                u9490 363C  
                                                u9650 689E  
                                                u9810 2330  
                                                u9298 052C  
                                                u8675 78B0  
                                                u9299 0540  
                                                u7787 587C  
                                                u8940 521C  
                                                u8685 753E  
                                                u7878 32EA  
                                                u7958 15EC  
                                                u9495 3632  
                                                u7879 32FE  
                                                u7959 1600  
                                                u9760 228E  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u9665 243E  
                                                u9770 22C0  
                                                u8795 71E4  
                                                u9860 2400  
                                                u9940 2ABC  
                                                u8980 4392  
                                                u9765 2284  
                                                u8990 43C2  
                                                u9775 22B6  
                                                u9960 2B00  
                                                u8987 4388  
                                                u9980 2B44  
                                                u8997 43B8  
                               _i2c_digipot_reset_off 86E0  
                             ??_fat_get_format_status 002C  
                               __size_of__delete_root 005C  
                                      _ResetSenseData 76AC  
              __end_of__fill_buffer_get_configuration 677C  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 66DE  
              USBStdFeatureReqHandler@current_ep_data 001B  
                              ?__update_modified_time 0005  
                                                _pDst 0184  
                                                _main 3DBA  
                                                _itoa 8034  
                          __end_of_fat_append_to_file 2870  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 5A44  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 6458  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 004C  
                             __bootloader_verify_file 0F7C  
                           _ExternalFlash_MediaDetect 89C0  
                                                prodh 000FF4  
                                                prodl 000FF3  
                      fat_modify_file@number_of_bytes 0067  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 88CC  
                               _display_get_character 8566  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DB4  
                                __end_of_failed_line2 8D20  
                                __end_of_failed_line4 8E73  
                             __end_of_fat_modify_file 1F8C  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 51A6  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 085A  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0046  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 0056  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 017C  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 3C44  
                                      _hex_file_entry 01BB  
                              _bootloader_get_entries 894E  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 8426  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                            _system_ui_inactive_count 0178  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 757E  
                                               l10510 52BC  
                                               l11048 33F0  
                                               l12204 85DC  
                                               l13004 2B1C  
                                               l10700 7D26  
                                               l13030 2B86  
                                               l13040 2BAC  
                                               l11192 7E96  
                                               l12082 37E2  
                                               l13042 2BB4  
                                               l13018 2B60  
                                               l10730 0C36  
                                               l10628 53CC  
                              ?_i2c_digipot_backlight 0001  
                                               l11198 7EA2  
                                               l11552 869E  
                                               l12096 3828  
                                               l12088 37F0  
                                               l13080 2C4C  
                                               l13056 2BF8  
                                               l12504 05FC  
                                               l12272 51E8  
                                               l11626 6C00  
                                               l11716 5FA2  
                                               l11628 6C04  
                                               l12188 38B8  
                                               l13068 2C1E  
                             ?__fill_buffer_find_file 0044  
                                               l11574 6D46  
                                               l13078 2C44  
                                               l11576 6D4E  
                                               l10872 5E26  
                                               l11680 5F06  
                                               l10696 7D08  
                                               l11674 5EF2  
                                               l10970 75FA  
                                               l14082 6000  
                                               l10938 57F4  
                                               l10890 8518  
                                               l12732 26A6  
                                               l12812 2464  
                                               l13710 6FC4  
                                               l12690 3768  
                                               l14258 40BA  
                                               l12916 23D2  
                                               l12942 1DBC  
                                               l12790 6866  
                                               l12918 23E6  
                                               l14286 411E  
                                               l12778 6832  
                                               l14546 5910  
                                               l13930 6F78  
                                               l13738 63D0  
                                               l14396 1FB0  
                                               l13756 6420  
                                               l12894 235C  
                                               l12990 2AD8  
                                               l13862 5750  
                                               l14734 0FD6  
                                               l12888 231A  
                                               l12976 2A94  
                                               l13936 6F84  
                                        spi_tx@length 0003  
                                               l13980 655A  
                                               l15732 6E06  
                                               l15734 6E3A  
                                               l15746 1C08  
                                               l14866 0B6A  
                                               l15748 1D20  
                                               l14992 3A50  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 68AE  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE9  
                                               STR_11 8FFB  
                                               STR_12 8FD0  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                               u10000 2B7E  
                                     __end_of___lldiv 6EC2  
                                               u10100 2C74  
                                               u10020 2BAC  
                                               ?_utoa 0008  
                                               u10040 2BDC  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10060 2C16  
                                               u10080 2C44  
                                               u11130 2A18  
                                               u10420 5566  
                                               u11220 40DE  
                                               u11045 8786  
                                               u10510 7478  
                                               u10335 7238  
                                               u11055 82D2  
                                               u10600 7FE6  
                                               u11065 6F52  
                                               u10450 7DD8  
                                               u11170 602E  
                                               u11250 4182  
                                               u11090 6FA6  
                                               u10275 80C4  
                                               u10355 7296  
                                               u10540 6EFA  
                                               u12300 629C  
                                               u10710 46D0  
                                               u10375 8496  
                                               u10480 5010  
                                     __end_of___llmod 75E4  
                                               u10570 47DC  
                                               u11370 1FAC  
                              __end_of_USBDeviceTasks 3AC8  
                                               u10724 46E6  
                                               u10725 46E0  
                                               u10734 4718  
                                               u11390 1FE0  
                                               u12190 3AC4  
                                               u12430 4B8A  
                                               u10735 4712  
                                               u12280 6288  
                                               u11560 218A  
                                               u10840 6404  
                                               u11625 7DFE  
                                               u11641 84C0  
                                               u12380 4B16  
                                               u10774 476A  
                                               u10758 473A  
                                               u10870 6454  
                                               u10775 4764  
                                               u10759 474C  
                                               u10698 469E  
                                               u10970 5720  
                                               u10890 00A2  
                                               u11770 1028  
                                               u10699 46B2  
                                               u10990 577C  
                                               u11870 08EC  
                                               u12807 7CC0  
                                               u12817 7CD2  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u12827 7CDC  
                                               u12797 8660  
                                     __end_of___lwdiv 7DA0  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 80B8  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                               ??__parse_format_drive 0029  
                                _file_minimum_address 014E  
                                    ??__display_start 0025  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 0097  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                        __delete_root 7888  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 006E  
                                    __end_of_MSDTasks 21E4  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 5D62  
                     __end_of_internalFlash_getBuffer 8912  
                     __end_of_USBCtrlEPAllowDataStage 66DE  
                                               _sd000 8FCC  
                                               _sd001 8EE8  
                                               _sd002 8F1C  
                                               _sd003 8F8B  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 793E  
                 i2c_display_send_init_sequence@F6808 01ED  
                       __end_of_MSDTransferTerminated 7B4C  
                                        _gblCBWLength 0188  
                          __end_of__parse_file_delete 7DF2  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 6F44  
                          __end_of__parse_file_create 50C4  
                              __end_of_ResetSenseData 770E  
                            __get_empty_cluster@value 0036  
                          __end_of__parse_file_modify 48B2  
                          __end_of__parse_file_rename 74AA  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 005C  
                           fat_get_format_status@cntr 002E  
                          __end_of__parse_file_resize 5610  
                             ?__fill_buffer_read_file 0093  
                                               pclath 000FFA  
                                     __end_of_ui_init 8844  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00E7  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 82F8  
                          __end_of__display_rebooting 7BF8  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 5EE6  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 0093  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 8606  
             __fill_buffer_get_file_details@outBuffer 0041  
                                      _MSDReadHandler 3246  
                                   __delete_root@slot 002F  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 0065  
                                flash_page_write@data 0022  
                     __size_of_fat_get_empty_clusters 008E  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 6AFC  
                       fat_read_from_file@file_number 006E  
                           __end_of__flash_get_status 8458  
                        fat_get_file_information@data 0037  
                         fat_read_from_file_fast@data 0040  
                  spi_set_configuration@configuration 0001  
                                 _system_minimal_init 889C  
               __end_of_ExternalFlash_MediaInitialize 87D2  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 87B8  
                      __size_of_system_encoder_enable 0010  
                             __end_of_fat_resize_file 2420  
                                         _FileAddress 016E  
                                        __end_of_main 3F2A  
                                        __end_of_itoa 8076  
                       __end_of_system_encoder_enable 888C  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 7BA2  
                                        __end_of_utoa 64FC  
                       fat_read_from_file_fast@length 003C  
                                __end_of__normal_mode 782C  
                                    _timer_pseudo_isr 8290  
                       fat_read_from_file_fast@offset 0056  
                            __parse_command_short@cmd 002C  
                  fat_read_from_file_fast@read_length 0058  
                                    __end_of_i2c_init 88F4  
                       fat_read_from_file_fast@sector 0052  
                            __end_of__i2c_acknowledge 8930  
                      __end_of__fill_buffer_find_file 659E  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 00CF  
                          __end_of__get_empty_cluster 6DBA  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 881A  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 0176  
                                api_prepare@outBuffer 00A9  
                                              ??_main 00AF  
                                    __end_of__i2c_get 8926  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00E0  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 0068  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00B3  
                            _fat_get_file_information 71A2  
                                  __write_root@offset 002E  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 89C0  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 89BC  
                                         ?_USBSuspend 0001  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 014A  
                               ??__bootloader_program 0060  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                              ?_spi_set_configuration 0001  
                                _i2c_eeprom_writeByte 80B8  
                         ?_spi_get_external_tx_buffer 0001  
                                ?_system_minimal_init 0001  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 8652  
                              __flash_write_to_buffer 7E42  
                     i2c_digipot_reset_off@data_array 000B  
                      __end_of__fill_buffer_read_file 2A8C  
                                _start_from_byte_next 00DD  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0037  
                                          __i2c_start 8988  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 7EDA  
                           fat_read_from_file@cluster 0071  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0060  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 7CA4  
                                    __end_of__get_fbr 1D30  
                                    __end_of__get_mbr 5B12  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 005C  
                                   ??__display_verify 001F  
                                  __size_of_i2c_reset 000E  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 3420  
                                 _flash_pages_written 0170  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                         fat_append_to_file@file_size 0062  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 630E  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 88BC  
                   __bootloader_program@page_to_write 0099  
                                   _shortPacketStatus 00F5  
                   fat_append_to_file@number_of_bytes 003F  
                          __get_empty_cluster@cluster 0038  
                                      __CFG_XINST$OFF 000000  
                                    ?_fat_modify_file 003F  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 6FC2  
                        __end_of__flash_set_page_size 703C  
                                     _hexCharsToUint8 8766  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 7216  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3113 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 00E3  
                                           ??___lwmod 0005  
                                              _buffer 0380  
                                   _USBEnableEndpoint 8174  
                       __bootloader_program@address32 0092  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 75E4  
                                  ?_fat_get_file_size 0030  
                                              _memset 850E  
                                              clear_0 6B36  
                                              clear_1 6B4A  
                                              clear_2 6B5C  
                                              clear_3 6B68  
                                              clear_4 6B74  
                                              clear_5 6B80  
                           _ExternalFlash_SectorWrite 832C  
                                   api_parse@inBuffer 0093  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6E  
                                              _reboot 87D2  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 4AC4  
                                              _spi_tx 7A9E  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 83F4  
                                              _tx_buf 01F6  
                                    ?_fat_rename_file 003F  
                          __parse_command_long@length 005E  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                             __write_root@root_sector 002C  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 853A  
                        __end_of_jump_to_main_program 899E  
                               __end_of_fat_find_file 5FA6  
                         fat_get_empty_clusters@value 0036  
                                 ??_fat_get_file_size 0034  
                              _fat_get_empty_clusters 6B8C  
                       __size_of__parse_command_short 00B4  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0230  
                                        __mediumconst 8C98  
                                 __end_of__i2c_open_1 8804  
                      i2c_digipot_reset_on@data_array 000B  
                               ??_system_minimal_init 0002  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 776E  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 770E  
                                              tblptru 000FF8  
                                    __end_of_spi_init 8174  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00B5  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0032  
                                       spi_tx_rx@data 0005  
                          __end_of__root_is_available 71A2  
                             __spi_external_rx_buffer 0300  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0058  
                                       main@tx_buffer 00B7  
                               __end_of_ui_get_status 89B6  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00F4  
                          ??_APP_DeviceCustomHIDTasks 00AB  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0250  
                                   _SYSTEM_Initialize 7CFA  
                               fat_modify_file@length 0043  
                               fat_modify_file@offset 0065  
                                 ??_i2c_set_frequency 0001  
                                          __accesstop 0060  
                             __end_of__initialization 6B86  
                               fat_modify_file@sector 0060  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 891C  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 009B  
                         __end_of__parse_command_long 6640  
                   __end_of_failed_line3_noNextRecord 8E22  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 7288  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                               __write_fat@fat_sector 002D  
                               flash_page_write@match 0024  
                                ??_flash_partial_read 0030  
                                    _flash_page_write 7BF8  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 81B0  
                            _bootloader_get_file_size 886A  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FD0  
                                       __end_of_sd001 8F1C  
                                       __end_of_sd002 8F4A  
                                       __end_of_sd003 8FA5  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 89C4  
                                        __pidataBANK1 862C  
                           ??_bootloader_get_rec_data 0001  
                                    ?_fat_resize_file 003F  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 8962  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 8958  
                           __get_available_root_entry 869A  
                                 fat_rename_file@cntr 0081  
                                 fat_rename_file@name 003F  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 0061  
                                  __size_of__read_fat 0048  
                                     _active_protocol 00FB  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 129A  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 5BDA  
                                 _userInterfaceStatus 00E0  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 4CD0  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 8566  
                       __size_of__display_programming 01D6  
                                   __end_of_i2c_reset 88DA  
                             __end_of_system_delay_ms 8676  
                                  __size_of_api_parse 00D4  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0174  
                      __end_of_failed_line3_startCode 8CE9  
                               _communicationSettings 0139  
                    fat_get_empty_clusters@fat_sector 0032  
                                  _fat_read_from_file 6942  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 003E  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8DA4  
                                        _failed_line2 8D0E  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00E9  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 7D4E  
                             ??__update_modified_time 0007  
                                   __end_of__i2c_read 6CA6  
                                   __end_of__i2c_send 8998  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 61BA  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 8988  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 0060  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 00B9  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                       fat_append_to_file@fat_cluster 0068  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 49BC  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0156  
                                           ?_i2c_init 0001  
                    __fill_buffer_read_file@outBuffer 0095  
                        __end_of__sector_from_cluster 88E8  
                                    _mediaInformation 01D2  
                             __end_of_hexCharsToUint8 8782  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 003C  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 6458  
                     ??__fill_buffer_get_file_details 0043  
                                       __flash_wakeup 7CA4  
                            __fill_buffer_get_display 5FA6  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 00C5  
                               __size_of__normal_mode 005E  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                          __update_modified_time@root 0005  
                    __end_of_USBCtrlEPServiceComplete 4FD8  
               __end_of_APP_DeviceCustomHIDInitialize 832C  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 82F8  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 56F0  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 2A8C  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 006A  
                        __size_of__flash_partial_read 0078  
                            __size_of_fat_delete_file 006A  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 2650  
                                             ?_memset 0001  
                                          _device_dsc 8FA5  
                 fat_get_file_information@file_number 003E  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 87EC  
                                    _USBCtrlEPService 610E  
                                             ?_ui_run 0001  
                         fat_resize_file@next_cluster 008B  
                                          _ep_data_in 016B  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0146  
                                  __display_clear@row 0003  
                       fat_append_to_file@file_number 006C  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 3C44  
                    __sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 4692  
                                  _USBCheckStdRequest 50C4  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA8  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 003F  
                              fat_append_to_file@data 0041  
                                          _flash_init 879E  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 589E  
                                   __end_of__get_data 85E0  
                                   __end_of__get_date 8980  
                                 _USBStdSetCfgHandler 51A6  
                              fat_append_to_file@root 0073  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 8976  
                                   __end_of__get_root 3948  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 8D74  
                                          _done_line2 8E9F  
                                          _done_line3 8D64  
                                          _done_line4 8D54  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 8830  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0172  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 6FC2  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 82C4  
                                  __get_first_cluster 7514  
                                        __normal_mode 77CE  
                          __end_of_APP_DeviceMSDTasks 8858  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 7F6A  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 888C  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 0088  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 70B4  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 703C  
                                          __write_fat 80F8  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB7  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                    _system_full_init 782C  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 0054  
                                   ??_flash_page_read 002C  
                      __end_of_bootloader_get_entries 8958  
                              fat_find_file@extension 0032  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 5972  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 4692  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 0043  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 7DA0  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 0072  
                                   __end_of__spi_init 8222  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 6EC2  
                                             __Lparam 0000  
                                  __parse_file_create 4FD8  
                                _jump_to_main_program 8998  
                            __size_of_fat_create_file 01BC  
                                   __end_of_hid_rpt01 8F8B  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 4DD6  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                  __parse_file_modify 47A4  
                                  __parse_file_rename 7440  
                          ??_fat_get_file_information 0039  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 7288  
                                  __parse_file_resize 552E  
                                          _last_error 00DE  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0340  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 6E40  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 757E  
                                             ___lwdiv 7D4E  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 8076  
                                   _fast_read_cluster 00F9  
                                  __display_rebooting 7BA2  
                         __end_of__parse_format_drive 7FF2  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 003F  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 004B  
                                 ?__parse_file_create 0050  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 81EA  
                                             __pcinit 6AFC  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 8EE8  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 3DBA  
                                             __ptext1 4AC4  
                                     __display_failed 129A  
                                             __ptext2 887C  
                                             __ptext3 84B6  
                                             __ptext4 86BE  
                                             __ptext5 86E0  
                                             __ptext6 85E0  
                                             __ptext7 5610  
                                             __ptext8 8290  
                                 ?__parse_file_modify 0053  
                                             __ptext9 888C  
                                             _inPipes 00BF  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0043  
                                     __size_of_ui_run 0106  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00EA  
                                 ?__parse_file_resize 0047  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005E  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 8766  
                                ??__get_first_cluster 0032  
                             _fat_read_from_file_fast 2420  
                                        ??_USBSuspend 0018  
                                     __display_search 3F2A  
                                  __end_of_USBMSDInit 4CD0  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 88BC  
                                             _msd_cbw 000D40  
                                     __display_verify 444E  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 8912  
                                             _ui_init 8830  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 881A  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                  __get_empty_cluster 6D32  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 003D  
                                             _strncmp 5E24  
                                 _flash_partial_write 72F8  
                                end_of_initialization 6B86  
                                ??__parse_file_delete 0041  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 7AF6  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 3068  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 2E7A  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 004D  
                                ??__parse_file_create 0052  
                                  __end_of_USB_SD_Ptr 8E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                    __write_fat@value 002B  
                                 _pBDTEntryEP0OutNext 00D9  
                                ??__parse_file_modify 0055  
                           __end_of_MSDProcessCommand 47A4  
                                             itoa@buf 0011  
                                ??__parse_file_rename 0045  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 003C  
                                ??__parse_file_resize 0049  
                                     _USB1msTickCount 015E  
                                    ?_hexCharsToUint8 0003  
                              fat_resize_file@cluster 008D  
                                 ?__get_empty_cluster 0030  
                            __flash_partial_read@data 001A  
                        fat_get_empty_clusters@offset 0034  
                              _internalFlash_readPage 7FF2  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                            fat_append_to_file@length 006D  
                         i2c_eeprom_writeByte@address 000B  
                            fat_append_to_file@offset 006A  
           __fill_buffer_get_file_details@file_number 0043  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                            fat_append_to_file@sector 0060  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 8488  
                             _USBCtrlEPAllowDataStage 6640  
                                   __end_of_spi_tx_rx 6A6A  
                                   __end_of_spi_tx_tx 6D32  
               __end_of__fill_buffer_get_file_details 73D6  
              __size_of__fill_buffer_get_file_details 006E  
                       __fill_buffer_get_file_details 7368  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 893A  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 8930  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 002C  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4ED8  
                                             utoa@val 000A  
                                           _MSD_State 00E8  
                         __end_of__bootloader_program 0C0E  
                               _system_encoder_enable 887C  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 005E  
                          _USBStatusStageEnabledFlag1 00ED  
                          _USBStatusStageEnabledFlag2 00EC  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                             ?_fat_get_empty_clusters 0030  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                                ??__get_empty_cluster 0032  
                      __end_of__flash_write_to_buffer 7E92  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 88DA  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       fat_append_to_file@new_cluster 0066  
                       __parse_file_modify@start_byte 0058  
                                   ??_fat_delete_file 003A  
                              fat_create_file@cluster 0067  
                                 flash_page_read@data 002A  
                              fat_modify_file@cluster 0063  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0028  
                                    __CFG_CPUDIV$OSC1 000000  
                       fat_get_empty_clusters@cluster 003A  
                     __fill_buffer_find_file@inBuffer 0044  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0290  
                                  _BothEP0OutUOWNsSet 00F0  
                       fat_get_empty_clusters@maximum 0030  
                            __end_of_flash_page_write 7C4E  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 0380  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 7B4C  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00FD  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DB4  
                                       _checked_line2 8C99  
                                       _checked_line3 8E73  
                                       _checked_line4 8D32  
                                         ?__write_fat 0029  
                                 __delete_root@offset 002C  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E31  
                             __size_of__display_start 01F0  
                        __end_of_USBTransferOnePacket 4ED8  
                        fat_resize_file@old_file_size 0060  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 610E  
               __end_of_internalFlash_pageFromAddress 879E  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 8782  
                                __end_of_reboot_line1 8E4C  
                                __end_of_search_line1 8DF4  
                                __end_of_search_line2 8D54  
                                __end_of_search_line3 8CD6  
                                __end_of_search_line4 8E62  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 712C  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 1590  
                       __get_empty_cluster@fat_sector 0032  
                                    ?_MSDErrorHandler 0001  
               fat_resize_file@new_number_of_clusters 0069  
                        fat_resize_file@new_file_size 003F  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 6A6A  
                               ??_flash_partial_write 0028  
                       ??_bootloader_get_rec_checksum 0001  
                                    __write_root@slot 0030  
                      __bootloader_program@entry_page 006A  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00D2  
                             __end_of__display_search 407C  
                               __end_of_USBDeviceInit 41CA  
               __end_of_USBIncrement1msInternalTimers 8724  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 8702  
                                     ??__display_done 001F  
                      __end_of_fat_get_empty_clusters 6C1A  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 457A  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                           ??_fat_read_from_file_fast 0046  
                            __end_of_USBStallEndpoint 4AC4  
                                 _i2c_eeprom_readByte 7DF2  
                                   ??_fat_create_file 004C  
                 __bootloader_program@start_from_byte 0096  
                  __fill_buffer_read_file@data_length 009F  
                         __end_of_system_minimal_init 88AC  
                            __size_of_fat_modify_file 025C  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CAE  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 764A  
                                     _MSDRetryAttempt 00E4  
                                      __end_of_memset 853A  
                                      __end_of_reboot 87EC  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 00F2  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 4BCA  
                                      __end_of_spi_tx 7AF6  
               __get_available_root_entry@file_number 0037  
                                 fat_modify_file@data 0045  
                                 __end_of__ui_encoder 56F0  
                           __flash_set_page_size@size 0018  
                                 start_initialization 6AFC  
                                 fat_modify_file@root 0069  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                           _i2c_reset 88CC  
                                 __end_of_api_prepare 4314  
                   __end_of__get_available_root_entry 86BE  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0096  
                                     _USBMSDOutHandle 00D7  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 6942  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1ACC  
                                 __flash_partial_read 70B4  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0044  
                                       _MSDHostNoData 00E2  
                                      _hexCharToUint8 84E2  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                      __size_of__update_modified_time 0032  
                   __end_of_USBCtrlEPAllowStatusStage 5C9E  
                            _fast_read_cluster_number 00F7  
                                ?_i2c_eeprom_readByte 0012  
                       __end_of__update_modified_time 83F4  
                        __end_of__display_programming 35F6  
                fat_get_empty_clusters@empty_clusters 0038  
                            __end_of_USBCtrlEPService 61BA  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 81B0  
                                           __i2c_read 6C1A  
                                           __i2c_send 8990  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 8980  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 0048  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 89BC  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8E13  
                       __root_is_available@first_byte 0036  
                              _pBDTEntryEP0OutCurrent 00DB  
                              __size_of_fat_find_file 00C0  
                    __end_of_fat_get_file_information 7216  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8D94  
                                   _programming_line2 8CFC  
                                   _programming_line3 8E83  
                                   _programming_line4 8D84  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                                      __get_date@date 0003  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 4314  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00AA  
                          fat_get_file_size@file_size 0037  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01D9  
                           ?_APP_DeviceCustomHIDTasks 0001  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 00A2  
                       __end_of_i2c_digipot_backlight 8606  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 002C  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 002C  
                                  __end_of__i2c_start 8990  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 003F  
                                  __end_of__i2c_write 7F22  
                            __end_of_system_full_init 7888  
                           __root_is_available@offset 0033  
                                 __size_of__write_fat 0040  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00FE  
                            ??__fill_buffer_read_file 0097  
                      __end_of_USBStdGetStatusHandler 6264  
                          ??_system_minimal_init_undo 0001  
                            __size_of_fat_resize_file 023C  
                         api_parse@receivedDataLength 0095  
                   __end_of__bootloader_check_address 57CA  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 84B6  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 8488  
                          fat_append_to_file@position 006F  
                         fat_create_file@next_cluster 0060  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                                     _flash_page_read 8390  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 0060  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                          ?_i2c_reset 0001  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCC  
                       __end_of_MSDCheckForErrorCases 544C  
             __bootloader_program@address_within_page 006C  
                              __end_of_hexCharToUint8 850E  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 0152  
                  __end_of_flash_command_pagesize_512 8FC8  
                          _flash_command_pagesize_512 8FC4  
                  __end_of_flash_command_pagesize_528 8FC4  
                          _flash_command_pagesize_528 8FC0  
                                      __flash_is_busy 8724  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 72F8  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E91  
                                           __get_data 85B8  
                                           __get_date 8976  
                    __bootloader_program@return_value 008E  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 003A  
                                   ?_timer_pseudo_isr 0001  
                     __end_of_fat_read_from_file_fast 2650  
                                           __get_time 896C  
                                           __get_root 37B2  
                                 __end_of__write_root 79EE  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 825A  
                            __delete_root@root_sector 002A  
                          __end_of_i2c_display_cursor 869A  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 7F6A  
                                        _pBDTEntryOut 0140  
                                          ?__i2c_stop 0001  
                          fat_modify_file@file_number 0062  
                          fat_rename_file@file_number 0060  
                                           __read_fat 7F22  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DA4  
                           __end_of_programming_line2 8D0E  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8D94  
                    __end_of_ExternalFlash_SectorRead 8390  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 896C  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 8962  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 63B4  
                   fat_read_from_file_fast@start_byte 0038  
                                   fat_find_file@name 0030  
                      MSDProcessCommandMediaPresent@i 0047  
                                 fat_find_file@buffer 0034  
                                   fat_find_file@slot 003F  
                                           _api_parse 589E  
                           fat_create_file@root_entry 0069  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 544C  
                                  _APP_DeviceMSDTasks 8844  
                                       __pmediumconst 8C98  
                                 fat_find_file@offset 0042  
                               ??__flash_partial_read 001C  
                                           __ptext100 87B8  
                                           __ptext101 89C0  
                                           __ptext110 7368  
                                           __ptext102 6264  
                                           __ptext111 5FA6  
                                           __ptext103 41CA  
                                           __ptext200 83C2  
                                           __ptext120 64FC  
                                           __ptext112 8566  
                                           __ptext104 2870  
                                           __ptext201 896C  
                                           __ptext121 589E  
                                           __ptext113 66DE  
                                           __ptext105 6942  
                                           __ptext210 7CA4  
                                           __ptext202 8976  
                                           __ptext130 5972  
                                           __ptext122 605A  
                                           __ptext114 2E7A  
                                           __ptext106 2420  
                                           __ptext211 7A9E  
                                           __ptext203 88DA  
                                           __ptext131 444E  
                                           __ptext123 8652  
                                           __ptext115 899E  
                                           __ptext107 7216  
                                           __ptext212 8426  
                                           __ptext204 7F22  
                                           __ptext140 89B6  
                                           __ptext132 2C8A  
                                           __ptext124 87D2  
                                           __ptext116 893A  
                                           __ptext108 544C  
                                           __ptext213 69D6  
                                           __ptext205 6D32  
                                           __ptext141 894E  
                                           __ptext133 3F2A  
                                           __ptext125 89B0  
                                           __ptext117 881A  
                                           __ptext109 8804  
                                           __ptext214 4DD6  
                                           __ptext206 83F4  
                                           __ptext150 5C9E  
                                           __ptext142 0C0E  
                                           __ptext134 7BA2  
                                           __ptext126 73D6  
                                           __ptext118 89A4  
                                           __ptext215 0000  
                                           __ptext207 48B2  
                                           __ptext151 8034  
                                           __ptext143 757E  
                                           __ptext135 3420  
                                           __ptext127 7B4C  
                                           __ptext119 89AA  
                                           __ptext208 70B4  
                                           __ptext160 8988  
                                           __ptext152 6458  
                                           __ptext144 6E40  
                                           __ptext136 3068  
                                           __ptext128 8676  
                                           __ptext209 8724  
                                           __ptext161 8990  
                                           __ptext153 8076  
                                           __ptext145 3C44  
                                           __ptext137 886A  
                                           __ptext129 8606  
                                           __ptext170 85B8  
                                           __ptext162 659E  
                                           __ptext154 7D4E  
                                           __ptext146 8958  
                                           __ptext138 129A  
                                           __ptext171 552E  
                                           __ptext163 7FAE  
                                           __ptext155 80B8  
                                           __ptext147 7E92  
                                           __ptext139 8944  
                                           __ptext180 7888  
                                           __ptext172 21E4  
                                           __ptext164 2A8C  
                                           __ptext156 853A  
                                           __ptext148 3AC8  
                                           __ptext181 4FD8  
                                           __ptext173 7440  
                                           __ptext165 7BF8  
                                           __ptext157 7EDA  
                                           __ptext149 8962  
                                           __ptext190 71A2  
                                           __ptext182 35F6  
                                           __ptext174 6818  
                                           __ptext166 37B2  
                                           __ptext158 793E  
                                           __ptext191 712C  
                                           __ptext183 75E4  
                                           __ptext175 47A4  
                                           __ptext167 5A44  
                                           __ptext159 8980  
                                           __ptext192 7996  
                                           __ptext184 6B8C  
                                           __ptext176 1D30  
                                           __ptext168 1ACC  
                                           __ptext193 80F8  
                                           __ptext185 5EE6  
                                           __ptext177 7DA0  
                                           __ptext169 7C4E  
                                           __ptext194 72F8  
                                           __ptext186 5E24  
                                           __ptext178 74AA  
                                           __ptext195 7E42  
                                           __ptext187 869A  
                                           __ptext179 7514  
                                           __ptext196 6CA6  
                                           __ptext188 6EC2  
                                           __ptext197 79EE  
                                           __ptext189 2650  
                                           __ptext198 7A46  
                                           __ptext199 703C  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0040  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                           __spi_init 81EA  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 0094  
                                    ?__display_search 0001  
                                           _hid_rpt01 8F6E  
                                         __ui_encoder 5610  
                           __get_first_cluster@offset 0035  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 00FC  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0033  
                                      __get_time@time 0003  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 41CA  
                             __parse_file_delete@data 003F  
                           fat_modify_file@start_byte 003F  
                                     __i2c_write@data 0006  
                                _file_maximum_address 014A  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 0044  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0048  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 4DD6  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 010A  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 49BC  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 605A  
                        ??_spi_get_external_rx_buffer 0003  
                 __fill_buffer_get_display@secondHalf 0007  
                              fat_read_from_file@data 0068  
                              __end_of__flash_is_busy 8746  
                                       _fat_find_file 5EE6  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 0073  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 0C0E  
                                   __display_itoa_u16 5C9E  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 77CE  
                                   ??_fat_modify_file 0047  
                               ??_USBStdGetDscHandler 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8DE4  
                                 __end_of_found_line2 8CFC  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D32  
                                         _ep_data_out 0168  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 8944  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 8702  
                       _bootloader_get_rec_dataLength 893A  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 00E5  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 7E92  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 3068  
                    __end_of_bootloader_get_file_size 887C  
                                         _file_buffer 0189  
                                     _config_internal 0165  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 89B0  
                                     _config_external 0162  
                                      __display_start 2C8A  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 8590  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 536A  
                      __root_is_available@file_number 0035  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 0043  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0220  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 003F  
                   __bootloader_verify_file@address32 008D  
                          __end_of_internalFlash_read 8290  
                                          ?_api_parse 0093  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 004B  
                                            _MSDTasks 1F8C  
                          _USBDeferINDataStagePackets 00EB  
                                        ??_fat_format 0025  
                                     _fat_delete_file 74AA  
                                _active_configuration 0186  
                           ?__ic2_display_set_address 0001  
                                            _SSP1CON1 000FC6  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0050  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 68AE  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 83C2  
                                           _spi_tx_rx 69D6  
                                           _spi_tx_tx 6CA6  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 00D5  
                 __size_of_spi_get_external_tx_buffer 000A  
                                __display_programming 3420  
                               ?_USBTransferOnePacket 0001  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 006A  
                           __end_of__display_itoa_u16 5D62  
                           __end_of__display_itoa_u32 0F7C  
                     __size_of__fill_buffer_read_file 021C  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8DD4  
                                __end_of_verify_line2 8E59  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0030  
                            fat_rename_file@extension 0041  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00F3  
                   __end_of_ExternalFlash_MediaDetect 89C4  
                        __size_of__parse_format_drive 0044  
                                        _reboot_line1 8E3F  
                                        _search_line1 8DE4  
                                        _search_line2 8D43  
                                        _search_line3 8CC2  
                                        _search_line4 8E59  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 005A  
                                     ?__flash_is_busy 0001  
                                         ??_i2c_reset 0001  
                    __end_of__fill_buffer_get_display 605A  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 7996  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 7EDA  
                   __size_of_fat_get_file_information 0074  
                                _bootloader_get_error 89B6  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0037  
                              __end_of__display_found 3246  
                             __end_of_USBStallHandler 7FAE  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 8034  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 2E7A  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 6B10  
                        __size_of__system_timer0_init 0020  
                                   ??_fat_resize_file 0043  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                        fat_create_file@cluster_count 0062  
                         __end_of_USBStdSetCfgHandler 5288  
                                  ??_flash_page_write 0024  
                         __size_of__parse_file_delete 0052  
                                        ??__write_fat 002D  
                                  __end_of_fat_format 2C8A  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 00EC  
                                 __display_found@cntr 0028  
                                            _i2c_init 88E8  
                  __parse_file_modify@number_of_bytes 0056  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 010E  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00E6  
                         __size_of__parse_file_rename 006A  
                                         ??__i2c_stop 0001  
                         __size_of__parse_file_resize 00E2  
                                  __write_fat@cluster 0029  
                                  __end_of_device_dsc 8FB7  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 891C  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 35F6  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0064  
                                            __Hrparam 0000  
                        __parse_file_create@file_size 0053  
                         __end_of_bootloader_filename 8FC0  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 87B8  
                                      _TransferLength 00D3  
                                _bootloader_extension 8FC8  
                           __get_empty_cluster@offset 0034  
                          __end_of_USBCheckMSDRequest 5E24  
               fat_read_from_file_fast@cluster_number 0044  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 835E  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 8D84  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8D74  
                                  __end_of_done_line4 8D64  
                                      __i2c_wait_idle 793E  
                                     _MSDWriteHandler 1590  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 00E1  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 889C  
                                         _found_line1 8DD4  
                                         _found_line2 8CE9  
                                         _found_line3 8E98  
                                         _found_line4 8D20  
                                            __get_fat 7C4E  
                                            __get_fbr 1ACC  
                         __size_of__get_empty_cluster 0088  
                                            __get_mbr 5A44  
                                  __end_of__write_fat 8138  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 886A  
                          _ExternalFlash_CapacityRead 8858  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 64FC  
                        __size_of__bootloader_program 03B4  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 88AC  
                    __get_first_cluster@first_cluster 0037  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                                    __display_checked 3AC8  
               __end_of_bootloader_get_rec_recordType 89A4  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 899E  
                                            __ptext10 88CC  
                                            __ptext11 889C  
                                            __ptext20 88AC  
                                            __ptext12 88E8  
                                            __ptext21 63B4  
                                            __ptext13 87EC  
                                            __ptext30 0020  
                                            __ptext22 8746  
                                            __ptext14 782C  
                                            __ptext31 8766  
                                            __ptext23 81B0  
                                            __ptext15 8830  
                                            __ptext40 8590  
                                            __ptext32 7288  
                                            __ptext24 88F4  
                                            __ptext16 879E  
                                            __ptext41 770E  
                                            __ptext33 84E2  
                                            __ptext25 88FE  
                                            __ptext17 8138  
                                            __ptext50 8926  
                                            __ptext42 8488  
                                            __ptext34 6F44  
                                            __ptext26 8998  
                                            __ptext18 81EA  
                                            __ptext51 3948  
                                            __ptext43 56F0  
                                            __ptext35 7FF2  
                                            __ptext27 78E4  
                                            __ptext19 6FC2  
                                            __ptext60 6640  
                                            __ptext52 8222  
                                            __ptext44 630E  
                                            __ptext36 825A  
                                            __ptext28 0F7C  
                                            __ptext61 50C4  
                                            __ptext53 8458  
                                            __ptext45 77CE  
                                            __ptext37 8782  
                                            __ptext29 085A  
                                            __ptext70 7CFA  
                                            __ptext62 51A6  
                                            __ptext54 7F6A  
                                            __ptext46 7DF2  
                                            __ptext38 8908  
                                            __ptext71 7AF6  
                                            __ptext63 850E  
                                            __ptext55 8702  
                                            __ptext47 6C1A  
                                            __ptext39 82C4  
                                            __ptext80 5B12  
                                            __ptext72 88BC  
                                            __ptext64 61BA  
                                            __ptext56 407C  
                                            __ptext48 8912  
                                            __ptext81 57CA  
                                            __ptext73 4BCA  
                                            __ptext65 4314  
                                            __ptext57 610E  
                                            __ptext49 891C  
                                            __ptext90 3246  
                                            __ptext82 8844  
                                            __ptext74 82F8  
                                            __ptext66 1848  
                                            __ptext58 6A6A  
                                            __ptext91 536A  
                                            __ptext83 1F8C  
                                            __ptext75 8174  
                                            __ptext67 6DBA  
                                            __ptext59 4ED8  
                                            __ptext92 4CD0  
                                            __ptext84 4692  
                                            __ptext76 68AE  
                                            __ptext68 5D62  
                                            __ptext93 49BC  
                                            __ptext85 764A  
                                            __ptext77 776E  
                                            __ptext69 5288  
                                            __ptext94 76AC  
                                            __ptext86 049C  
                                            __ptext78 457A  
                                            __ptext95 835E  
                                            __ptext87 1590  
                                            __ptext79 5BDA  
                                            __ptext96 8390  
                                            __ptext88 89BC  
                                            __ptext97 677C  
                                            __ptext89 832C  
                                            __ptext98 8930  
                                            __ptext99 8858  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 76AC  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 764A  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 005A  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 659E  
                   __end_of_failed_line3_addressRange 8CC2  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 005F  
                      __size_of__bootloader_find_file 00A6  
                  __end_of__flash_copy_page_to_buffer 7A9E  
                          __flash_copy_page_to_buffer 7A46  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 630E  
                       __end_of__bootloader_find_file 63B4  
                        __end_of_i2c_digipot_reset_on 86E0  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 7CFA  
                      __end_of_USBCtrlTrfSetupHandler 6AFC  
                                       __size_of_main 0170  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F4A  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 7514  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 2870  
                         __end_of_flash_partial_write 7368  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003B  
                             fat_get_file_size@sector 0035  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 78E4  
                    __size_of__bootloader_verify_file 031E  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 89AA  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 89A4  
                                 _USBCtrlTrfInHandler 5B12  
                  _MSDProcessCommandMediaPresent$2390 003C  
                    __get_empty_cluster@first_cluster 0030  
                      fat_read_from_file_fast@cluster 0042  
                                         ??_api_parse 0096  
                              __end_of__i2c_wait_idle 7996  
               fat_resize_file@old_number_of_clusters 0064  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 8138  
                                _USBCtrlTrfOutHandler 776E  
                           _USBCtrlEPAllowStatusStage 5BDA  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 8908  
                                ?__parse_command_long 005C  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                    ?_flash_page_read 0028  
                                 __display_start@cntr 0025  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 3DBA  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0034  
                              ??__parse_command_short 002C  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00EE  
                  __end_of_spi_get_external_rx_buffer 8908  
                          _spi_get_external_rx_buffer 88FE  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 552E  
                             __parse_file_modify@data 0053  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 85B8  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 8590  
                             _internalFlash_erasePage 82C4  
                            __parse_format_drive@data 0027  
                                   __write_fat@offset 002F  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 88FE  
                          _spi_get_external_tx_buffer 88F4  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0010  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                    fat_read_from_file@cluster_number 006F  
                __end_of_MSDComputeDeviceInAndResidue 6818  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 677C  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8E04  
                                 __end_of_start_line2 8E6B  
                                 __end_of_start_line3 8EA8  
                                 __end_of_start_line4 8E31  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 8804  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 8926  
                              bootloader_run@timeslot 005E  
                             __end_of_fat_create_file 37B2  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0076  
                             __parse_file_rename@data 0043  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6E40  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 6DBA  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 835E  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 7A46  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 79EE  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               __update_modified_time 83C2  
                        fat_read_from_file@start_byte 0060  
                                     _display_content 0200  
                          __end_of_flash_partial_read 8426  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 1848  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 89B0  
                         _bootloader_get_rec_checksum 89AA  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                                 fat_resize_file@cntr 0067  
                                 fat_resize_file@root 006B  
                        __bootloader_verify_file@root 0068  
                   __size_of__fill_buffer_get_display 00B4  
                            ?_fat_read_from_file_fast 0038  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 5972  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E04  
                                 _USBCtrlTrfRxService 457A  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 8222  
                               ??__parse_command_long 005E  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 8676  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1848  
                                     _fat_modify_file 1D30  
                        __fill_buffer_read_file@start 00A3  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 57CA  
                         fat_delete_file@next_cluster 003A  
                                        ?_api_prepare 00A7  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 017E  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 85E0  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E3F  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 894E  
                          _bootloader_get_rec_address 8944  
                               _USBAlternateInterface 01D7  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 7E42  
                          __delete_root@deleted_value 002E  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0182  
                             __parse_file_resize@data 0047  
                           _failed_line3_noNextRecord 8E13  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 6818  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00F1  
                                      _display_update 73D6  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8CD6  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 536A  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 862C  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0180  
                             _internalFlash_writePage 6F44  
                                ?_USBCtrlTrfTxService 0001  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 4BCA  
                        _USBStatusStageTimeoutCounter 00EF  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 0010  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 712C  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 80F8  
                                        _verify_line1 8DC4  
                                        _verify_line2 8E4C  
                                        _verify_line3 8E8A  
                            ??_fat_get_empty_clusters 0032  
                                 __parse_format_drive 7FAE  
                          fat_resize_file@file_number 0066  
                                          _USB_CD_Ptr 8EA5  
                                         _power_state 00DF  
                                         _USBInHandle 017A  
                            _APP_DeviceCustomHIDTasks 6264  
