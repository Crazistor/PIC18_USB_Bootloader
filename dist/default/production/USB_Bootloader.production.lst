

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Sep 03 23:34:38 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=2
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=2
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=2
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=2
   205                           	psect	text183,global,reloc=2,class=CODE,delta=1
   206                           	psect	text184,global,reloc=2,class=CODE,delta=1
   207                           	psect	text185,global,reloc=2,class=CODE,delta=1
   208                           	psect	text186,global,reloc=2,class=CODE,delta=1
   209                           	psect	text187,global,reloc=2,class=CODE,delta=1
   210                           	psect	text188,global,reloc=2,class=CODE,delta=1
   211                           	psect	text189,global,reloc=2,class=CODE,delta=1
   212                           	psect	text190,global,reloc=2,class=CODE,delta=1
   213                           	psect	text191,global,reloc=2,class=CODE,delta=1
   214                           	psect	text192,global,reloc=2,class=CODE,delta=1
   215                           	psect	text193,global,reloc=2,class=CODE,delta=1
   216                           	psect	text194,global,reloc=2,class=CODE,delta=1
   217                           	psect	text195,global,reloc=2,class=CODE,delta=1
   218                           	psect	text196,global,reloc=2,class=CODE,delta=1
   219                           	psect	text197,global,reloc=2,class=CODE,delta=1
   220                           	psect	text198,global,reloc=2,class=CODE,delta=1
   221                           	psect	text199,global,reloc=2,class=CODE,delta=1
   222                           	psect	text200,global,reloc=2,class=CODE,delta=1
   223                           	psect	text201,global,reloc=2,class=CODE,delta=1
   224                           	psect	text202,global,reloc=2,class=CODE,delta=1
   225                           	psect	text203,global,reloc=2,class=CODE,delta=1
   226                           	psect	text204,global,reloc=2,class=CODE,delta=1
   227                           	psect	text205,global,reloc=2,class=CODE,delta=1
   228                           	psect	text206,global,reloc=2,class=CODE,delta=1
   229                           	psect	text207,global,reloc=2,class=CODE,delta=1
   230                           	psect	text208,global,reloc=2,class=CODE,delta=1
   231                           	psect	text209,global,reloc=2,class=CODE,delta=1
   232                           	psect	text210,global,reloc=2,class=CODE,delta=1
   233                           	psect	text211,global,reloc=2,class=CODE,delta=1
   234                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   237                           	dabs	1,0x600,512,_msd_buffer
   238                           	dabs	1,0xD00,48,_BDT
   239                           	dabs	1,0xD40,31,_msd_cbw
   240                           	dabs	1,0xD80,13,_msd_csw
   241                           	dabs	1,0xD38,8,_CtrlTrfData
   242                           	dabs	1,0xD30,8,_SetupPkt
   243  0000                     
   244                           ; Version 2.00
   245                           ; Generated 27/05/2018 GMT
   246                           ; 
   247                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   248                           ; All rights reserved.
   249                           ; 
   250                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   251                           ; 
   252                           ; Redistribution and use in source and binary forms, with or without modification, are
   253                           ; permitted provided that the following conditions are met:
   254                           ; 
   255                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   256                           ;        conditions and the following disclaimer.
   257                           ; 
   258                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   259                           ;        of conditions and the following disclaimer in the documentation and/or other
   260                           ;        materials provided with the distribution.
   261                           ; 
   262                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   263                           ;        software without specific prior written permission.
   264                           ; 
   265                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   266                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   267                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   268                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   269                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   270                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   271                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   272                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   273                           ; 
   274                           ; 
   275                           ; Code-generator required, PIC18F47J53 Definitions
   276                           ; 
   277                           ; SFR Addresses
   278  0000                     
   279                           	psect	intcode
   280  000008  EF04 F048          	goto	36872	;# 
   281                           
   282                           	psect	intcodelo
   283  000018  EF0C F048          	goto	36888	; ;# 
   284  0000                     
   285                           	psect	idataBANK0
   286  00820E                     __pidataBANK0:
   287                           	opt stack 0
   288                           
   289                           ;initializer for _file_number
   290  00820E  FF                 	db	255
   291                           
   292                           	psect	idataBANK1
   293  007E70                     __pidataBANK1:
   294                           	opt stack 0
   295                           
   296                           ;initializer for _LUN
   297  007E70  FC                 	db	low _ExternalFlash_MediaInitialize
   298  007E71  7F                 	db	high _ExternalFlash_MediaInitialize
   299  007E72  9A                 	db	low _ExternalFlash_CapacityRead
   300  007E73  80                 	db	high _ExternalFlash_CapacityRead
   301  007E74  72                 	db	low _ExternalFlash_SectorSizeRead
   302  007E75  81                 	db	high _ExternalFlash_SectorSizeRead
   303  007E76  02                 	db	low _ExternalFlash_MediaDetect
   304  007E77  82                 	db	high _ExternalFlash_MediaDetect
   305  007E78  A2                 	db	low _ExternalFlash_SectorRead
   306  007E79  7B                 	db	high _ExternalFlash_SectorRead
   307  007E7A  FE                 	db	low _ExternalFlash_WriteProtectStateGet
   308  007E7B  81                 	db	high _ExternalFlash_WriteProtectStateGet
   309  007E7C  70                 	db	low _ExternalFlash_SectorWrite
   310  007E7D  7B                 	db	high _ExternalFlash_SectorWrite
   311  007E7E  00                 	db	0
   312  007E7F  00                 	db	0
   313  007E80  00                 	db	0
   314  007E81  00                 	db	0
   315  007E82  00                 	db	0
   316  007E83  00                 	db	0
   317                           
   318                           ;initializer for i2c_display_send_init_sequence@F6808
   319  007E84  3A                 	db	58
   320  007E85  1E                 	db	30
   321  007E86  39                 	db	57
   322  007E87  0C                 	db	12
   323  007E88  74                 	db	116
   324  007E89  5C                 	db	92
   325  007E8A  6D                 	db	109
   326  007E8B  0C                 	db	12
   327  007E8C  01                 	db	1
   328                           
   329                           ;initializer for _tx_buf
   330  007E8D  01                 	db	1
   331  007E8E  02                 	db	2
   332  007E8F  03                 	db	3
   333  007E90  04                 	db	4
   334  007E91  05                 	db	5
   335  007E92  06                 	db	6
   336  007E93  07                 	db	7
   337  007E94  08                 	db	8
   338                           
   339                           	psect	mediumconst
   340  008C98                     __pmediumconst:
   341                           	opt stack 0
   342  008C98  00                 	db	0
   343  008C99                     _checked_line2:
   344                           	opt stack 0
   345  008C99  46                 	db	70
   346  008C9A  69                 	db	105
   347  008C9B  6C                 	db	108
   348  008C9C  65                 	db	101
   349  008C9D  20                 	db	32
   350  008C9E  63                 	db	99
   351  008C9F  68                 	db	104
   352  008CA0  65                 	db	101
   353  008CA1  63                 	db	99
   354  008CA2  6B                 	db	107
   355  008CA3  20                 	db	32
   356  008CA4  63                 	db	99
   357  008CA5  6F                 	db	111
   358  008CA6  6D                 	db	109
   359  008CA7  70                 	db	112
   360  008CA8  6C                 	db	108
   361  008CA9  65                 	db	101
   362  008CAA  74                 	db	116
   363  008CAB  65                 	db	101
   364  008CAC  64                 	db	100
   365  008CAD  00                 	db	0
   366  008CAE                     __end_of_checked_line2:
   367                           	opt stack 0
   368  008CAE                     _failed_line3_addressRange:
   369                           	opt stack 0
   370  008CAE  41                 	db	65
   371  008CAF  64                 	db	100
   372  008CB0  64                 	db	100
   373  008CB1  72                 	db	114
   374  008CB2  2E                 	db	46
   375  008CB3  20                 	db	32
   376  008CB4  6F                 	db	111
   377  008CB5  75                 	db	117
   378  008CB6  74                 	db	116
   379  008CB7  73                 	db	115
   380  008CB8  69                 	db	105
   381  008CB9  64                 	db	100
   382  008CBA  65                 	db	101
   383  008CBB  20                 	db	32
   384  008CBC  72                 	db	114
   385  008CBD  61                 	db	97
   386  008CBE  6E                 	db	110
   387  008CBF  67                 	db	103
   388  008CC0  65                 	db	101
   389  008CC1  00                 	db	0
   390  008CC2                     __end_of_failed_line3_addressRange:
   391                           	opt stack 0
   392  008CC2                     _search_line3:
   393                           	opt stack 0
   394  008CC2  46                 	db	70
   395  008CC3  49                 	db	73
   396  008CC4  52                 	db	82
   397  008CC5  4D                 	db	77
   398  008CC6  57                 	db	87
   399  008CC7  41                 	db	65
   400  008CC8  52                 	db	82
   401  008CC9  45                 	db	69
   402  008CCA  2E                 	db	46
   403  008CCB  48                 	db	72
   404  008CCC  45                 	db	69
   405  008CCD  58                 	db	88
   406  008CCE  20                 	db	32
   407  008CCF  6F                 	db	111
   408  008CD0  6E                 	db	110
   409  008CD1  20                 	db	32
   410  008CD2  55                 	db	85
   411  008CD3  53                 	db	83
   412  008CD4  42                 	db	66
   413  008CD5  00                 	db	0
   414  008CD6                     __end_of_search_line3:
   415                           	opt stack 0
   416  008CD6                     _failed_line3_startCode:
   417                           	opt stack 0
   418  008CD6  4D                 	db	77
   419  008CD7  69                 	db	105
   420  008CD8  73                 	db	115
   421  008CD9  73                 	db	115
   422  008CDA  69                 	db	105
   423  008CDB  6E                 	db	110
   424  008CDC  67                 	db	103
   425  008CDD  20                 	db	32
   426  008CDE  73                 	db	115
   427  008CDF  74                 	db	116
   428  008CE0  61                 	db	97
   429  008CE1  72                 	db	114
   430  008CE2  74                 	db	116
   431  008CE3  20                 	db	32
   432  008CE4  63                 	db	99
   433  008CE5  6F                 	db	111
   434  008CE6  64                 	db	100
   435  008CE7  65                 	db	101
   436  008CE8  00                 	db	0
   437  008CE9                     __end_of_failed_line3_startCode:
   438                           	opt stack 0
   439  008CE9                     _found_line2:
   440                           	opt stack 0
   441  008CE9  46                 	db	70
   442  008CEA  49                 	db	73
   443  008CEB  52                 	db	82
   444  008CEC  4D                 	db	77
   445  008CED  57                 	db	87
   446  008CEE  41                 	db	65
   447  008CEF  52                 	db	82
   448  008CF0  45                 	db	69
   449  008CF1  2E                 	db	46
   450  008CF2  48                 	db	72
   451  008CF3  45                 	db	69
   452  008CF4  58                 	db	88
   453  008CF5  20                 	db	32
   454  008CF6  66                 	db	102
   455  008CF7  6F                 	db	111
   456  008CF8  75                 	db	117
   457  008CF9  6E                 	db	110
   458  008CFA  64                 	db	100
   459  008CFB  00                 	db	0
   460  008CFC                     __end_of_found_line2:
   461                           	opt stack 0
   462  008CFC                     _programming_line2:
   463                           	opt stack 0
   464  008CFC  50                 	db	80
   465  008CFD  72                 	db	114
   466  008CFE  6F                 	db	111
   467  008CFF  67                 	db	103
   468  008D00  72                 	db	114
   469  008D01  61                 	db	97
   470  008D02  6D                 	db	109
   471  008D03  6D                 	db	109
   472  008D04  69                 	db	105
   473  008D05  6E                 	db	110
   474  008D06  67                 	db	103
   475  008D07  20                 	db	32
   476  008D08  66                 	db	102
   477  008D09  6C                 	db	108
   478  008D0A  61                 	db	97
   479  008D0B  73                 	db	115
   480  008D0C  68                 	db	104
   481  008D0D  00                 	db	0
   482  008D0E                     __end_of_programming_line2:
   483                           	opt stack 0
   484  008D0E                     _failed_line2:
   485                           	opt stack 0
   486  008D0E  46                 	db	70
   487  008D0F  69                 	db	105
   488  008D10  6C                 	db	108
   489  008D11  65                 	db	101
   490  008D12  20                 	db	32
   491  008D13  63                 	db	99
   492  008D14  68                 	db	104
   493  008D15  65                 	db	101
   494  008D16  63                 	db	99
   495  008D17  6B                 	db	107
   496  008D18  20                 	db	32
   497  008D19  66                 	db	102
   498  008D1A  61                 	db	97
   499  008D1B  69                 	db	105
   500  008D1C  6C                 	db	108
   501  008D1D  65                 	db	101
   502  008D1E  64                 	db	100
   503  008D1F  00                 	db	0
   504  008D20                     __end_of_failed_line2:
   505                           	opt stack 0
   506  008D20                     _found_line4:
   507                           	opt stack 0
   508  008D20  50                 	db	80
   509  008D21  72                 	db	114
   510  008D22  65                 	db	101
   511  008D23  73                 	db	115
   512  008D24  73                 	db	115
   513  008D25  20                 	db	32
   514  008D26  74                 	db	116
   515  008D27  6F                 	db	111
   516  008D28  20                 	db	32
   517  008D29  75                 	db	117
   518  008D2A  73                 	db	115
   519  008D2B  65                 	db	101
   520  008D2C  20                 	db	32
   521  008D2D  66                 	db	102
   522  008D2E  69                 	db	105
   523  008D2F  6C                 	db	108
   524  008D30  65                 	db	101
   525  008D31  00                 	db	0
   526  008D32                     __end_of_found_line4:
   527                           	opt stack 0
   528  008D32                     _checked_line4:
   529                           	opt stack 0
   530  008D32  50                 	db	80
   531  008D33  72                 	db	114
   532  008D34  65                 	db	101
   533  008D35  73                 	db	115
   534  008D36  73                 	db	115
   535  008D37  20                 	db	32
   536  008D38  74                 	db	116
   537  008D39  6F                 	db	111
   538  008D3A  20                 	db	32
   539  008D3B  70                 	db	112
   540  008D3C  72                 	db	114
   541  008D3D  6F                 	db	111
   542  008D3E  67                 	db	103
   543  008D3F  72                 	db	114
   544  008D40  61                 	db	97
   545  008D41  6D                 	db	109
   546  008D42  00                 	db	0
   547  008D43                     __end_of_checked_line4:
   548                           	opt stack 0
   549  008D43                     _search_line2:
   550                           	opt stack 0
   551  008D43  4C                 	db	76
   552  008D44  6F                 	db	111
   553  008D45  6F                 	db	111
   554  008D46  6B                 	db	107
   555  008D47  69                 	db	105
   556  008D48  6E                 	db	110
   557  008D49  67                 	db	103
   558  008D4A  20                 	db	32
   559  008D4B  66                 	db	102
   560  008D4C  6F                 	db	111
   561  008D4D  72                 	db	114
   562  008D4E  20                 	db	32
   563  008D4F  66                 	db	102
   564  008D50  69                 	db	105
   565  008D51  6C                 	db	108
   566  008D52  65                 	db	101
   567  008D53  00                 	db	0
   568  008D54                     __end_of_search_line2:
   569                           	opt stack 0
   570  008D54                     _done_line4:
   571                           	opt stack 0
   572  008D54  50                 	db	80
   573  008D55  72                 	db	114
   574  008D56  65                 	db	101
   575  008D57  73                 	db	115
   576  008D58  73                 	db	115
   577  008D59  20                 	db	32
   578  008D5A  74                 	db	116
   579  008D5B  6F                 	db	111
   580  008D5C  20                 	db	32
   581  008D5D  72                 	db	114
   582  008D5E  65                 	db	101
   583  008D5F  62                 	db	98
   584  008D60  6F                 	db	111
   585  008D61  6F                 	db	111
   586  008D62  74                 	db	116
   587  008D63  00                 	db	0
   588  008D64                     __end_of_done_line4:
   589                           	opt stack 0
   590  008D64                     _done_line3:
   591                           	opt stack 0
   592  008D64  50                 	db	80
   593  008D65  61                 	db	97
   594  008D66  67                 	db	103
   595  008D67  65                 	db	101
   596  008D68  73                 	db	115
   597  008D69  20                 	db	32
   598  008D6A  77                 	db	119
   599  008D6B  72                 	db	114
   600  008D6C  69                 	db	105
   601  008D6D  74                 	db	116
   602  008D6E  74                 	db	116
   603  008D6F  65                 	db	101
   604  008D70  6E                 	db	110
   605  008D71  3A                 	db	58
   606  008D72  20                 	db	32
   607  008D73  00                 	db	0
   608  008D74                     __end_of_done_line3:
   609                           	opt stack 0
   610  008D74                     _done_line1:
   611                           	opt stack 0
   612  008D74  42                 	db	66
   613  008D75  6F                 	db	111
   614  008D76  6F                 	db	111
   615  008D77  74                 	db	116
   616  008D78  6C                 	db	108
   617  008D79  6F                 	db	111
   618  008D7A  61                 	db	97
   619  008D7B  64                 	db	100
   620  008D7C  65                 	db	101
   621  008D7D  72                 	db	114
   622  008D7E  20                 	db	32
   623  008D7F  4D                 	db	77
   624  008D80  6F                 	db	111
   625  008D81  64                 	db	100
   626  008D82  65                 	db	101
   627  008D83  00                 	db	0
   628  008D84                     __end_of_done_line1:
   629                           	opt stack 0
   630  008D84                     _programming_line4:
   631                           	opt stack 0
   632  008D84  50                 	db	80
   633  008D85  61                 	db	97
   634  008D86  67                 	db	103
   635  008D87  65                 	db	101
   636  008D88  73                 	db	115
   637  008D89  20                 	db	32
   638  008D8A  77                 	db	119
   639  008D8B  72                 	db	114
   640  008D8C  69                 	db	105
   641  008D8D  74                 	db	116
   642  008D8E  74                 	db	116
   643  008D8F  65                 	db	101
   644  008D90  6E                 	db	110
   645  008D91  3A                 	db	58
   646  008D92  20                 	db	32
   647  008D93  00                 	db	0
   648  008D94                     __end_of_programming_line4:
   649                           	opt stack 0
   650  008D94                     _programming_line1:
   651                           	opt stack 0
   652  008D94  42                 	db	66
   653  008D95  6F                 	db	111
   654  008D96  6F                 	db	111
   655  008D97  74                 	db	116
   656  008D98  6C                 	db	108
   657  008D99  6F                 	db	111
   658  008D9A  61                 	db	97
   659  008D9B  64                 	db	100
   660  008D9C  65                 	db	101
   661  008D9D  72                 	db	114
   662  008D9E  20                 	db	32
   663  008D9F  4D                 	db	77
   664  008DA0  6F                 	db	111
   665  008DA1  64                 	db	100
   666  008DA2  65                 	db	101
   667  008DA3  00                 	db	0
   668  008DA4                     __end_of_programming_line1:
   669                           	opt stack 0
   670  008DA4                     _failed_line1:
   671                           	opt stack 0
   672  008DA4  42                 	db	66
   673  008DA5  6F                 	db	111
   674  008DA6  6F                 	db	111
   675  008DA7  74                 	db	116
   676  008DA8  6C                 	db	108
   677  008DA9  6F                 	db	111
   678  008DAA  61                 	db	97
   679  008DAB  64                 	db	100
   680  008DAC  65                 	db	101
   681  008DAD  72                 	db	114
   682  008DAE  20                 	db	32
   683  008DAF  4D                 	db	77
   684  008DB0  6F                 	db	111
   685  008DB1  64                 	db	100
   686  008DB2  65                 	db	101
   687  008DB3  00                 	db	0
   688  008DB4                     __end_of_failed_line1:
   689                           	opt stack 0
   690  008DB4                     _checked_line1:
   691                           	opt stack 0
   692  008DB4  42                 	db	66
   693  008DB5  6F                 	db	111
   694  008DB6  6F                 	db	111
   695  008DB7  74                 	db	116
   696  008DB8  6C                 	db	108
   697  008DB9  6F                 	db	111
   698  008DBA  61                 	db	97
   699  008DBB  64                 	db	100
   700  008DBC  65                 	db	101
   701  008DBD  72                 	db	114
   702  008DBE  20                 	db	32
   703  008DBF  4D                 	db	77
   704  008DC0  6F                 	db	111
   705  008DC1  64                 	db	100
   706  008DC2  65                 	db	101
   707  008DC3  00                 	db	0
   708  008DC4                     __end_of_checked_line1:
   709                           	opt stack 0
   710  008DC4                     _verify_line1:
   711                           	opt stack 0
   712  008DC4  42                 	db	66
   713  008DC5  6F                 	db	111
   714  008DC6  6F                 	db	111
   715  008DC7  74                 	db	116
   716  008DC8  6C                 	db	108
   717  008DC9  6F                 	db	111
   718  008DCA  61                 	db	97
   719  008DCB  64                 	db	100
   720  008DCC  65                 	db	101
   721  008DCD  72                 	db	114
   722  008DCE  20                 	db	32
   723  008DCF  4D                 	db	77
   724  008DD0  6F                 	db	111
   725  008DD1  64                 	db	100
   726  008DD2  65                 	db	101
   727  008DD3  00                 	db	0
   728  008DD4                     __end_of_verify_line1:
   729                           	opt stack 0
   730  008DD4                     _found_line1:
   731                           	opt stack 0
   732  008DD4  42                 	db	66
   733  008DD5  6F                 	db	111
   734  008DD6  6F                 	db	111
   735  008DD7  74                 	db	116
   736  008DD8  6C                 	db	108
   737  008DD9  6F                 	db	111
   738  008DDA  61                 	db	97
   739  008DDB  64                 	db	100
   740  008DDC  65                 	db	101
   741  008DDD  72                 	db	114
   742  008DDE  20                 	db	32
   743  008DDF  4D                 	db	77
   744  008DE0  6F                 	db	111
   745  008DE1  64                 	db	100
   746  008DE2  65                 	db	101
   747  008DE3  00                 	db	0
   748  008DE4                     __end_of_found_line1:
   749                           	opt stack 0
   750  008DE4                     _search_line1:
   751                           	opt stack 0
   752  008DE4  42                 	db	66
   753  008DE5  6F                 	db	111
   754  008DE6  6F                 	db	111
   755  008DE7  74                 	db	116
   756  008DE8  6C                 	db	108
   757  008DE9  6F                 	db	111
   758  008DEA  61                 	db	97
   759  008DEB  64                 	db	100
   760  008DEC  65                 	db	101
   761  008DED  72                 	db	114
   762  008DEE  20                 	db	32
   763  008DEF  4D                 	db	77
   764  008DF0  6F                 	db	111
   765  008DF1  64                 	db	100
   766  008DF2  65                 	db	101
   767  008DF3  00                 	db	0
   768  008DF4                     __end_of_search_line1:
   769                           	opt stack 0
   770  008DF4                     _start_line1:
   771                           	opt stack 0
   772  008DF4  42                 	db	66
   773  008DF5  6F                 	db	111
   774  008DF6  6F                 	db	111
   775  008DF7  74                 	db	116
   776  008DF8  6C                 	db	108
   777  008DF9  6F                 	db	111
   778  008DFA  61                 	db	97
   779  008DFB  64                 	db	100
   780  008DFC  65                 	db	101
   781  008DFD  72                 	db	114
   782  008DFE  20                 	db	32
   783  008DFF  4D                 	db	77
   784  008E00  6F                 	db	111
   785  008E01  64                 	db	100
   786  008E02  65                 	db	101
   787  008E03  00                 	db	0
   788  008E04                     __end_of_start_line1:
   789                           	opt stack 0
   790  008E04                     _failed_line3_checksum:
   791                           	opt stack 0
   792  008E04  43                 	db	67
   793  008E05  68                 	db	104
   794  008E06  65                 	db	101
   795  008E07  63                 	db	99
   796  008E08  6B                 	db	107
   797  008E09  73                 	db	115
   798  008E0A  75                 	db	117
   799  008E0B  6D                 	db	109
   800  008E0C  20                 	db	32
   801  008E0D  65                 	db	101
   802  008E0E  72                 	db	114
   803  008E0F  72                 	db	114
   804  008E10  6F                 	db	111
   805  008E11  72                 	db	114
   806  008E12  00                 	db	0
   807  008E13                     __end_of_failed_line3_checksum:
   808                           	opt stack 0
   809  008E13                     _failed_line3_noNextRecord:
   810                           	opt stack 0
   811  008E13  4E                 	db	78
   812  008E14  6F                 	db	111
   813  008E15  20                 	db	32
   814  008E16  6E                 	db	110
   815  008E17  65                 	db	101
   816  008E18  78                 	db	120
   817  008E19  74                 	db	116
   818  008E1A  20                 	db	32
   819  008E1B  72                 	db	114
   820  008E1C  65                 	db	101
   821  008E1D  63                 	db	99
   822  008E1E  6F                 	db	111
   823  008E1F  72                 	db	114
   824  008E20  64                 	db	100
   825  008E21  00                 	db	0
   826  008E22                     __end_of_failed_line3_noNextRecord:
   827                           	opt stack 0
   828  008E22                     _start_line4:
   829                           	opt stack 0
   830  008E22  73                 	db	115
   831  008E23  6F                 	db	111
   832  008E24  6C                 	db	108
   833  008E25  64                 	db	100
   834  008E26  65                 	db	101
   835  008E27  72                 	db	114
   836  008E28  6E                 	db	110
   837  008E29  65                 	db	101
   838  008E2A  72                 	db	114
   839  008E2B  64                 	db	100
   840  008E2C  2E                 	db	46
   841  008E2D  63                 	db	99
   842  008E2E  6F                 	db	111
   843  008E2F  6D                 	db	109
   844  008E30  00                 	db	0
   845  008E31                     __end_of_start_line4:
   846                           	opt stack 0
   847  008E31                     _failed_line3_dataTooLong:
   848                           	opt stack 0
   849  008E31  44                 	db	68
   850  008E32  61                 	db	97
   851  008E33  74                 	db	116
   852  008E34  61                 	db	97
   853  008E35  20                 	db	32
   854  008E36  74                 	db	116
   855  008E37  6F                 	db	111
   856  008E38  6F                 	db	111
   857  008E39  20                 	db	32
   858  008E3A  6C                 	db	108
   859  008E3B  6F                 	db	111
   860  008E3C  6E                 	db	110
   861  008E3D  67                 	db	103
   862  008E3E  00                 	db	0
   863  008E3F                     __end_of_failed_line3_dataTooLong:
   864                           	opt stack 0
   865  008E3F                     _reboot_line1:
   866                           	opt stack 0
   867  008E3F  52                 	db	82
   868  008E40  65                 	db	101
   869  008E41  62                 	db	98
   870  008E42  6F                 	db	111
   871  008E43  6F                 	db	111
   872  008E44  74                 	db	116
   873  008E45  69                 	db	105
   874  008E46  6E                 	db	110
   875  008E47  67                 	db	103
   876  008E48  2E                 	db	46
   877  008E49  2E                 	db	46
   878  008E4A  2E                 	db	46
   879  008E4B  00                 	db	0
   880  008E4C                     __end_of_reboot_line1:
   881                           	opt stack 0
   882  008E4C                     _verify_line2:
   883                           	opt stack 0
   884  008E4C  56                 	db	86
   885  008E4D  65                 	db	101
   886  008E4E  72                 	db	114
   887  008E4F  69                 	db	105
   888  008E50  66                 	db	102
   889  008E51  79                 	db	121
   890  008E52  69                 	db	105
   891  008E53  6E                 	db	110
   892  008E54  67                 	db	103
   893  008E55  2E                 	db	46
   894  008E56  2E                 	db	46
   895  008E57  2E                 	db	46
   896  008E58  00                 	db	0
   897  008E59                     __end_of_verify_line2:
   898                           	opt stack 0
   899  008E59                     _search_line4:
   900                           	opt stack 0
   901  008E59  64                 	db	100
   902  008E5A  72                 	db	114
   903  008E5B  69                 	db	105
   904  008E5C  76                 	db	118
   905  008E5D  65                 	db	101
   906  008E5E  2E                 	db	46
   907  008E5F  2E                 	db	46
   908  008E60  2E                 	db	46
   909  008E61  00                 	db	0
   910  008E62                     __end_of_search_line4:
   911                           	opt stack 0
   912  008E62                     _start_line2:
   913                           	opt stack 0
   914  008E62  56                 	db	86
   915  008E63  65                 	db	101
   916  008E64  72                 	db	114
   917  008E65  73                 	db	115
   918  008E66  69                 	db	105
   919  008E67  6F                 	db	111
   920  008E68  6E                 	db	110
   921  008E69  20                 	db	32
   922  008E6A  00                 	db	0
   923  008E6B                     __end_of_start_line2:
   924                           	opt stack 0
   925  008E6B                     _failed_line4:
   926                           	opt stack 0
   927  008E6B  52                 	db	82
   928  008E6C  65                 	db	101
   929  008E6D  63                 	db	99
   930  008E6E  6F                 	db	111
   931  008E6F  72                 	db	114
   932  008E70  64                 	db	100
   933  008E71  20                 	db	32
   934  008E72  00                 	db	0
   935  008E73                     __end_of_failed_line4:
   936                           	opt stack 0
   937  008E73                     _checked_line3:
   938                           	opt stack 0
   939  008E73  72                 	db	114
   940  008E74  65                 	db	101
   941  008E75  63                 	db	99
   942  008E76  6F                 	db	111
   943  008E77  72                 	db	114
   944  008E78  64                 	db	100
   945  008E79  73                 	db	115
   946  008E7A  00                 	db	0
   947  008E7B                     __end_of_checked_line3:
   948                           	opt stack 0
   949  008E7B                     _USB_SD_Ptr:
   950                           	opt stack 0
   951  008E7B  CC                 	db	low _sd000
   952  008E7C  8F                 	db	high _sd000
   953  008E7D  E8                 	db	low _sd001
   954  008E7E  8E                 	db	high _sd001
   955  008E7F  1C                 	db	low _sd002
   956  008E80  8F                 	db	high _sd002
   957  008E81  8B                 	db	low _sd003
   958  008E82  8F                 	db	high _sd003
   959  008E83                     __end_of_USB_SD_Ptr:
   960                           	opt stack 0
   961  008E83                     _programming_line3:
   962                           	opt stack 0
   963  008E83  45                 	db	69
   964  008E84  6E                 	db	110
   965  008E85  74                 	db	116
   966  008E86  72                 	db	114
   967  008E87  79                 	db	121
   968  008E88  20                 	db	32
   969  008E89  00                 	db	0
   970  008E8A                     __end_of_programming_line3:
   971                           	opt stack 0
   972  008E8A                     _verify_line3:
   973                           	opt stack 0
   974  008E8A  52                 	db	82
   975  008E8B  65                 	db	101
   976  008E8C  63                 	db	99
   977  008E8D  6F                 	db	111
   978  008E8E  72                 	db	114
   979  008E8F  64                 	db	100
   980  008E90  00                 	db	0
   981  008E91                     __end_of_verify_line3:
   982                           	opt stack 0
   983  008E91                     _found_line3b:
   984                           	opt stack 0
   985  008E91  20                 	db	32
   986  008E92  62                 	db	98
   987  008E93  79                 	db	121
   988  008E94  74                 	db	116
   989  008E95  65                 	db	101
   990  008E96  73                 	db	115
   991  008E97  00                 	db	0
   992  008E98                     __end_of_found_line3b:
   993                           	opt stack 0
   994  008E98                     _found_line3:
   995                           	opt stack 0
   996  008E98  53                 	db	83
   997  008E99  69                 	db	105
   998  008E9A  7A                 	db	122
   999  008E9B  65                 	db	101
  1000  008E9C  3A                 	db	58
  1001  008E9D  20                 	db	32
  1002  008E9E  00                 	db	0
  1003  008E9F                     __end_of_found_line3:
  1004                           	opt stack 0
  1005  008E9F                     _done_line2:
  1006                           	opt stack 0
  1007  008E9F  44                 	db	68
  1008  008EA0  6F                 	db	111
  1009  008EA1  6E                 	db	110
  1010  008EA2  65                 	db	101
  1011  008EA3  21                 	db	33
  1012  008EA4  00                 	db	0
  1013  008EA5                     __end_of_done_line2:
  1014                           	opt stack 0
  1015  008EA5                     _USB_CD_Ptr:
  1016                           	opt stack 0
  1017  008EA5  A8                 	db	low _configDescriptor1
  1018  008EA6  8E                 	db	high _configDescriptor1
  1019  008EA7                     __end_of_USB_CD_Ptr:
  1020                           	opt stack 0
  1021  008EA7                     _start_line3:
  1022                           	opt stack 0
  1023  008EA7  00                 	db	0
  1024  008EA8                     __end_of_start_line3:
  1025                           	opt stack 0
  1026  008EA8                     _configDescriptor1:
  1027                           	opt stack 0
  1028  008EA8  09                 	db	9
  1029  008EA9  02                 	db	2
  1030  008EAA  40                 	db	64
  1031  008EAB  00                 	db	0
  1032  008EAC  02                 	db	2
  1033  008EAD  01                 	db	1
  1034  008EAE  00                 	db	0
  1035  008EAF  C0                 	db	192
  1036  008EB0  32                 	db	50
  1037  008EB1  09                 	db	9
  1038  008EB2  04                 	db	4
  1039  008EB3  00                 	db	0
  1040  008EB4  00                 	db	0
  1041  008EB5  02                 	db	2
  1042  008EB6  03                 	db	3
  1043  008EB7  00                 	db	0
  1044  008EB8  00                 	db	0
  1045  008EB9  00                 	db	0
  1046  008EBA  09                 	db	9
  1047  008EBB  21                 	db	33
  1048  008EBC  11                 	db	17
  1049  008EBD  01                 	db	1
  1050  008EBE  00                 	db	0
  1051  008EBF  01                 	db	1
  1052  008EC0  22                 	db	34
  1053  008EC1  1D                 	db	29
  1054  008EC2  00                 	db	0
  1055  008EC3  07                 	db	7
  1056  008EC4  05                 	db	5
  1057  008EC5  81                 	db	129
  1058  008EC6  03                 	db	3
  1059  008EC7  40                 	db	64
  1060  008EC8  00                 	db	0
  1061  008EC9  01                 	db	1
  1062  008ECA  07                 	db	7
  1063  008ECB  05                 	db	5
  1064  008ECC  01                 	db	1
  1065  008ECD  03                 	db	3
  1066  008ECE  40                 	db	64
  1067  008ECF  00                 	db	0
  1068  008ED0  01                 	db	1
  1069  008ED1  09                 	db	9
  1070  008ED2  04                 	db	4
  1071  008ED3  01                 	db	1
  1072  008ED4  00                 	db	0
  1073  008ED5  02                 	db	2
  1074  008ED6  08                 	db	8
  1075  008ED7  06                 	db	6
  1076  008ED8  50                 	db	80
  1077  008ED9  00                 	db	0
  1078  008EDA  07                 	db	7
  1079  008EDB  05                 	db	5
  1080  008EDC  82                 	db	130
  1081  008EDD  02                 	db	2
  1082  008EDE  40                 	db	64
  1083  008EDF  00                 	db	0
  1084  008EE0  01                 	db	1
  1085  008EE1  07                 	db	7
  1086  008EE2  05                 	db	5
  1087  008EE3  02                 	db	2
  1088  008EE4  02                 	db	2
  1089  008EE5  40                 	db	64
  1090  008EE6  00                 	db	0
  1091  008EE7  01                 	db	1
  1092  008EE8                     __end_of_configDescriptor1:
  1093                           	opt stack 0
  1094  008EE8                     _sd001:
  1095                           	opt stack 0
  1096  008EE8  34                 	db	52
  1097  008EE9  03                 	db	3
  1098  008EEA  0053               	dw	83
  1099  008EEC  006F               	dw	111
  1100  008EEE  006C               	dw	108
  1101  008EF0  0064               	dw	100
  1102  008EF2  0065               	dw	101
  1103  008EF4  0072               	dw	114
  1104  008EF6  006E               	dw	110
  1105  008EF8  0065               	dw	101
  1106  008EFA  0072               	dw	114
  1107  008EFC  0064               	dw	100
  1108  008EFE  002E               	dw	46
  1109  008F00  0063               	dw	99
  1110  008F02  006F               	dw	111
  1111  008F04  006D               	dw	109
  1112  008F06  0020               	dw	32
  1113  008F08  0020               	dw	32
  1114  008F0A  0020               	dw	32
  1115  008F0C  0020               	dw	32
  1116  008F0E  0020               	dw	32
  1117  008F10  0020               	dw	32
  1118  008F12  0020               	dw	32
  1119  008F14  0020               	dw	32
  1120  008F16  0020               	dw	32
  1121  008F18  0020               	dw	32
  1122  008F1A  0020               	dw	32
  1123  008F1C                     __end_of_sd001:
  1124                           	opt stack 0
  1125  008F1C                     _sd002:
  1126                           	opt stack 0
  1127  008F1C  2E                 	db	46
  1128  008F1D  03                 	db	3
  1129  008F1E  004D               	dw	77
  1130  008F20  0050               	dw	80
  1131  008F22  0050               	dw	80
  1132  008F24  0054               	dw	84
  1133  008F26  0053               	dw	83
  1134  008F28  006F               	dw	111
  1135  008F2A  006C               	dw	108
  1136  008F2C  0061               	dw	97
  1137  008F2E  0072               	dw	114
  1138  008F30  0020               	dw	32
  1139  008F32  0043               	dw	67
  1140  008F34  0068               	dw	104
  1141  008F36  0061               	dw	97
  1142  008F38  0072               	dw	114
  1143  008F3A  0067               	dw	103
  1144  008F3C  0065               	dw	101
  1145  008F3E  0072               	dw	114
  1146  008F40  0020               	dw	32
  1147  008F42  0052               	dw	82
  1148  008F44  0065               	dw	101
  1149  008F46  0076               	dw	118
  1150  008F48  0043               	dw	67
  1151  008F4A                     __end_of_sd002:
  1152                           	opt stack 0
  1153  008F4A                     _inq_resp:
  1154                           	opt stack 0
  1155  008F4A  00                 	db	0
  1156  008F4B  80                 	db	128
  1157  008F4C  04                 	db	4
  1158  008F4D  02                 	db	2
  1159  008F4E  20                 	db	32
  1160  008F4F  00                 	db	0
  1161  008F50  00                 	db	0
  1162  008F51  00                 	db	0
  1163  008F52  4D                 	db	77
  1164  008F53  69                 	db	105
  1165  008F54  63                 	db	99
  1166  008F55  72                 	db	114
  1167  008F56  6F                 	db	111
  1168  008F57  63                 	db	99
  1169  008F58  68                 	db	104
  1170  008F59  70                 	db	112
  1171  008F5A  4D                 	db	77
  1172  008F5B  61                 	db	97
  1173  008F5C  73                 	db	115
  1174  008F5D  73                 	db	115
  1175  008F5E  20                 	db	32
  1176  008F5F  53                 	db	83
  1177  008F60  74                 	db	116
  1178  008F61  6F                 	db	111
  1179  008F62  72                 	db	114
  1180  008F63  61                 	db	97
  1181  008F64  67                 	db	103
  1182  008F65  65                 	db	101
  1183  008F66  20                 	db	32
  1184  008F67  20                 	db	32
  1185  008F68  20                 	db	32
  1186  008F69  20                 	db	32
  1187  008F6A  30                 	db	48
  1188  008F6B  30                 	db	48
  1189  008F6C  30                 	db	48
  1190  008F6D  31                 	db	49
  1191  008F6E                     __end_of_inq_resp:
  1192                           	opt stack 0
  1193  008F6E                     _hid_rpt01:
  1194                           	opt stack 0
  1195  008F6E  06                 	db	6
  1196  008F6F  00                 	db	0
  1197  008F70  FF                 	db	255
  1198  008F71  09                 	db	9
  1199  008F72  01                 	db	1
  1200  008F73  A1                 	db	161
  1201  008F74  01                 	db	1
  1202  008F75  19                 	db	25
  1203  008F76  01                 	db	1
  1204  008F77  29                 	db	41
  1205  008F78  40                 	db	64
  1206  008F79  15                 	db	21
  1207  008F7A  00                 	db	0
  1208  008F7B  26                 	db	38
  1209  008F7C  FF                 	db	255
  1210  008F7D  00                 	db	0
  1211  008F7E  75                 	db	117
  1212  008F7F  08                 	db	8
  1213  008F80  95                 	db	149
  1214  008F81  40                 	db	64
  1215  008F82  81                 	db	129
  1216  008F83  00                 	db	0
  1217  008F84  19                 	db	25
  1218  008F85  01                 	db	1
  1219  008F86  29                 	db	41
  1220  008F87  40                 	db	64
  1221  008F88  91                 	db	145
  1222  008F89  00                 	db	0
  1223  008F8A  C0                 	db	192
  1224  008F8B                     __end_of_hid_rpt01:
  1225                           	opt stack 0
  1226  008F8B                     _sd003:
  1227                           	opt stack 0
  1228  008F8B  1A                 	db	26
  1229  008F8C  03                 	db	3
  1230  008F8D  0031               	dw	49
  1231  008F8F  0032               	dw	50
  1232  008F91  0033               	dw	51
  1233  008F93  0034               	dw	52
  1234  008F95  0035               	dw	53
  1235  008F97  0036               	dw	54
  1236  008F99  0037               	dw	55
  1237  008F9B  0038               	dw	56
  1238  008F9D  0039               	dw	57
  1239  008F9F  0030               	dw	48
  1240  008FA1  0039               	dw	57
  1241  008FA3  0039               	dw	57
  1242  008FA5                     __end_of_sd003:
  1243                           	opt stack 0
  1244  008FA5                     _device_dsc:
  1245                           	opt stack 0
  1246  008FA5  12                 	db	18
  1247  008FA6  01                 	db	1
  1248  008FA7  0200               	dw	512
  1249  008FA9  00                 	db	0
  1250  008FAA  00                 	db	0
  1251  008FAB  00                 	db	0
  1252  008FAC  08                 	db	8
  1253  008FAD  04D8               	dw	1240
  1254  008FAF  F08E               	dw	61582
  1255  008FB1  0100               	dw	256
  1256  008FB3  01                 	db	1
  1257  008FB4  02                 	db	2
  1258  008FB5  00                 	db	0
  1259  008FB6  01                 	db	1
  1260  008FB7                     __end_of_device_dsc:
  1261                           	opt stack 0
  1262  008FB7                     _bootloader_filename:
  1263                           	opt stack 0
  1264  008FB7  46                 	db	70
  1265  008FB8  49                 	db	73
  1266  008FB9  52                 	db	82
  1267  008FBA  4D                 	db	77
  1268  008FBB  57                 	db	87
  1269  008FBC  41                 	db	65
  1270  008FBD  52                 	db	82
  1271  008FBE  45                 	db	69
  1272  008FBF  00                 	db	0
  1273  008FC0                     __end_of_bootloader_filename:
  1274                           	opt stack 0
  1275  008FC0                     _flash_command_pagesize_528:
  1276                           	opt stack 0
  1277  008FC0  3D                 	db	61
  1278  008FC1  2A                 	db	42
  1279  008FC2  80                 	db	128
  1280  008FC3  A7                 	db	167
  1281  008FC4                     __end_of_flash_command_pagesize_528:
  1282                           	opt stack 0
  1283  008FC4                     _flash_command_pagesize_512:
  1284                           	opt stack 0
  1285  008FC4  3D                 	db	61
  1286  008FC5  2A                 	db	42
  1287  008FC6  80                 	db	128
  1288  008FC7  A6                 	db	166
  1289  008FC8                     __end_of_flash_command_pagesize_512:
  1290                           	opt stack 0
  1291  008FC8                     _bootloader_extension:
  1292                           	opt stack 0
  1293  008FC8  48                 	db	72
  1294  008FC9  45                 	db	69
  1295  008FCA  58                 	db	88
  1296  008FCB  00                 	db	0
  1297  008FCC                     __end_of_bootloader_extension:
  1298                           	opt stack 0
  1299  008FCC                     _sd000:
  1300                           	opt stack 0
  1301  008FCC  04                 	db	4
  1302  008FCD  03                 	db	3
  1303  008FCE  0409               	dw	1033
  1304  008FD0                     __end_of_sd000:
  1305                           	opt stack 0
  1306  0000                     _RPINR23	set	3838
  1307  0000                     _RPOR23	set	3799
  1308  0000                     _RPINR22	set	3837
  1309  0000                     _RPOR22	set	3798
  1310  0000                     _RPOR21	set	3797
  1311  0000                     _RPINR21	set	3836
  1312  0000                     _RPINR2	set	3810
  1313  0000                     _RPINR3	set	3811
  1314  0000                     _RPINR1	set	3809
  1315  0000                     _PPSCONbits	set	3775
  1316  0000                     _ODCON3bits	set	3904
  1317  0000                     _ANCON0bits	set	3912
  1318  0000                     _UEP0bits	set	3878
  1319  0000                     _UIEbits	set	3894
  1320  0000                     _UADDR	set	3896
  1321  0000                     _UIE	set	3894
  1322  0000                     _UEIE	set	3895
  1323  0000                     _UCFG	set	3897
  1324  0000                     _UEP1	set	3879
  1325  0000                     _UEP0	set	3878
  1326  0000                     _TBLPTR	set	4086
  1327  0000                     _DMACON2bits	set	3974
  1328  0000                     _SSP2CON1bits	set	3954
  1329  0000                     _SSP2STATbits	set	3955
  1330  0000                     _INTCON	set	4082
  1331  0000                     _EECON1	set	4006
  1332  0000                     _TABLAT	set	4085
  1333  0000                     _EECON1bits	set	4006
  1334  0000                     _SSP1CON1	set	4038
  1335  0000                     _SSP1BUF	set	4041
  1336  0000                     _SSP1CON2bits	set	4037
  1337  0000                     _SSP1CON1bits	set	4038
  1338  0000                     _SSP1ADD	set	4040
  1339  0000                     _SSP1STATbits	set	4039
  1340  0000                     _LATAbits	set	3977
  1341  0000                     _LATEbits	set	3981
  1342  0000                     _TRISEbits	set	3990
  1343  0000                     _LATBbits	set	3978
  1344  0000                     _TRISBbits	set	3987
  1345  0000                     _LATDbits	set	3980
  1346  0000                     _TRISDbits	set	3989
  1347  0000                     _TRISAbits	set	3986
  1348  0000                     _LATCbits	set	3979
  1349  0000                     _TRISCbits	set	3988
  1350  0000                     _T0CONbits	set	4053
  1351  0000                     _INTCON2bits	set	4081
  1352  0000                     _EECON2	set	4007
  1353  0000                     _PORTBbits	set	3969
  1354  0000                     _INTCON3bits	set	4080
  1355  0000                     _TMR0L	set	4054
  1356  0000                     _TMR0H	set	4055
  1357  0000                     _INTCONbits	set	4082
  1358  0000                     _OSCCON	set	4051
  1359  0000                     _OSCTUNEbits	set	3995
  1360  0000                     _PORTAbits	set	3968
  1361  0000                     _PIR3bits	set	4004
  1362  0000                     _DMABCL	set	3943
  1363  0000                     _DMABCH	set	3942
  1364  0000                     _RXADDRL	set	3945
  1365  0000                     _RXADDRH	set	3944
  1366  0000                     _DMACON1bits	set	3976
  1367  0000                     _TXADDRL	set	3947
  1368  0000                     _TXADDRH	set	3946
  1369  0000                     _PORTDbits	set	3971
  1370  0000                     _USTAT	set	3940
  1371  0000                     _PIR2bits	set	4001
  1372  0000                     _UCON	set	3941
  1373  0000                     _UIRbits	set	3938
  1374  0000                     _UCONbits	set	3941
  1375  0000                     _UIR	set	3938
  1376  0000                     _UEIR	set	3939
  1377  0000                     _PIE2bits	set	4000
  1378  008FD0                     STR_12:
  1379  008FD0  68                 	db	104	;'h'
  1380  008FD1  65                 	db	101	;'e'
  1381  008FD2  6C                 	db	108	;'l'
  1382  008FD3  6C                 	db	108	;'l'
  1383  008FD4  6F                 	db	111	;'o'
  1384  008FD5  20                 	db	32
  1385  008FD6  77                 	db	119	;'w'
  1386  008FD7  6F                 	db	111	;'o'
  1387  008FD8  72                 	db	114	;'r'
  1388  008FD9  6C                 	db	108	;'l'
  1389  008FDA  64                 	db	100	;'d'
  1390  008FDB  21                 	db	33
  1391  008FDC  00                 	db	0
  1392  008FDD                     STR_9:
  1393  008FDD  53                 	db	83	;'S'
  1394  008FDE  6F                 	db	111	;'o'
  1395  008FDF  6C                 	db	108	;'l'
  1396  008FE0  61                 	db	97	;'a'
  1397  008FE1  72                 	db	114	;'r'
  1398  008FE2  43                 	db	67	;'C'
  1399  008FE3  68                 	db	104	;'h'
  1400  008FE4  61                 	db	97	;'a'
  1401  008FE5  72                 	db	114	;'r'
  1402  008FE6  67                 	db	103	;'g'
  1403  008FE7  72                 	db	114	;'r'
  1404  008FE8  00                 	db	0
  1405  008FE9                     STR_10:
  1406  008FE9  46                 	db	70	;'F'
  1407  008FEA  49                 	db	73	;'I'
  1408  008FEB  4C                 	db	76	;'L'
  1409  008FEC  45                 	db	69	;'E'
  1410  008FED  20                 	db	32
  1411  008FEE  20                 	db	32
  1412  008FEF  20                 	db	32
  1413  008FF0  20                 	db	32
  1414  008FF1  00                 	db	0
  1415  008FF2                     STR_1:
  1416  008FF2  4D                 	db	77	;'M'
  1417  008FF3  53                 	db	83	;'S'
  1418  008FF4  44                 	db	68	;'D'
  1419  008FF5  4F                 	db	79	;'O'
  1420  008FF6  53                 	db	83	;'S'
  1421  008FF7  35                 	db	53	;'5'
  1422  008FF8  2E                 	db	46
  1423  008FF9  30                 	db	48	;'0'
  1424  008FFA  00                 	db	0
  1425  008FFB                     STR_11:
  1426  008FFB  54                 	db	84	;'T'
  1427  008FFC  58                 	db	88	;'X'
  1428  008FFD  54                 	db	84	;'T'
  1429  008FFE  00                 	db	0
  1430  0000                     
  1431                           ; #config settings
  1432  008FFF  00                 	db	0	; dummy byte at the end
  1433  0000                     
  1434                           	psect	cinit
  1435  006210                     __pcinit:
  1436                           	opt stack 0
  1437  006210                     start_initialization:
  1438                           	opt stack 0
  1439  006210                     __initialization:
  1440                           	opt stack 0
  1441                           
  1442                           ; Initialize objects allocated to BANK1 (37 bytes)
  1443                           ; load TBLPTR registers with __pidataBANK1
  1444  006210  0E70               	movlw	low __pidataBANK1
  1445  006212  6EF6               	movwf	tblptrl,c
  1446  006214  0E7E               	movlw	high __pidataBANK1
  1447  006216  6EF7               	movwf	tblptrh,c
  1448  006218  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1449  00621A  6EF8               	movwf	tblptru,c
  1450  00621C  EE01  F0D8         	lfsr	0,__pdataBANK1
  1451  006220  EE10 F025          	lfsr	1,37
  1452  006224                     copy_data0:
  1453  006224  0009               	tblrd		*+
  1454  006226  CFF5 FFEE          	movff	tablat,postinc0
  1455  00622A  50E5               	movf	postdec1,w,c
  1456  00622C  50E1               	movf	fsr1l,w,c
  1457  00622E  E1FA               	bnz	copy_data0
  1458                           
  1459                           ; Initialize objects allocated to BANK0 (1 bytes)
  1460                           ; load TBLPTR registers with __pidataBANK0
  1461  006230  0E0E               	movlw	low __pidataBANK0
  1462  006232  6EF6               	movwf	tblptrl,c
  1463  006234  0E82               	movlw	high __pidataBANK0
  1464  006236  6EF7               	movwf	tblptrh,c
  1465  006238  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1466  00623A  6EF8               	movwf	tblptru,c
  1467  00623C  0009               	tblrd		*+	;fetch initializer
  1468  00623E  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1469                           
  1470                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1471  006242  EE03  F080         	lfsr	0,__pbssBIGRAMll
  1472  006246  EE12 F000          	lfsr	1,512
  1473  00624A                     clear_0:
  1474  00624A  6AEE               	clrf	postinc0,c
  1475  00624C  50E5               	movf	postdec1,w,c
  1476  00624E  50E1               	movf	fsr1l,w,c
  1477  006250  E1FC               	bnz	clear_0
  1478  006252  50E2               	movf	fsr1h,w,c
  1479  006254  E1FA               	bnz	clear_0
  1480                           
  1481                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1482  006256  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1483  00625A  EE14 F000          	lfsr	1,1024
  1484  00625E                     clear_1:
  1485  00625E  6AEE               	clrf	postinc0,c
  1486  006260  50E5               	movf	postdec1,w,c
  1487  006262  50E1               	movf	fsr1l,w,c
  1488  006264  E1FC               	bnz	clear_1
  1489  006266  50E2               	movf	fsr1h,w,c
  1490  006268  E1FA               	bnz	clear_1
  1491                           
  1492                           ; Clear objects allocated to BANK3 (128 bytes)
  1493  00626A  EE03  F000         	lfsr	0,__pbssBANK3
  1494  00626E  0E80               	movlw	128
  1495  006270                     clear_2:
  1496  006270  6AEE               	clrf	postinc0,c
  1497  006272  06E8               	decf	wreg,f,c
  1498  006274  E1FD               	bnz	clear_2
  1499                           
  1500                           ; Clear objects allocated to BANK2 (208 bytes)
  1501  006276  EE02  F000         	lfsr	0,__pbssBANK2
  1502  00627A  0ED0               	movlw	208
  1503  00627C                     clear_3:
  1504  00627C  6AEE               	clrf	postinc0,c
  1505  00627E  06E8               	decf	wreg,f,c
  1506  006280  E1FD               	bnz	clear_3
  1507                           
  1508                           ; Clear objects allocated to BANK1 (216 bytes)
  1509  006282  EE01  F000         	lfsr	0,__pbssBANK1
  1510  006286  0ED8               	movlw	216
  1511  006288                     clear_4:
  1512  006288  6AEE               	clrf	postinc0,c
  1513  00628A  06E8               	decf	wreg,f,c
  1514  00628C  E1FD               	bnz	clear_4
  1515                           
  1516                           ; Clear objects allocated to BANK0 (70 bytes)
  1517  00628E  EE00  F0B9         	lfsr	0,__pbssBANK0
  1518  006292  0E46               	movlw	70
  1519  006294                     clear_5:
  1520  006294  6AEE               	clrf	postinc0,c
  1521  006296  06E8               	decf	wreg,f,c
  1522  006298  E1FD               	bnz	clear_5
  1523                           
  1524                           ; Clear objects allocated to COMRAM (1 bytes)
  1525  00629A  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1526  00629C                     end_of_initialization:
  1527                           	opt stack 0
  1528  00629C                     __end_of__initialization:
  1529                           	opt stack 0
  1530  00629C  0100               	movlb	0
  1531  00629E  EF8C  F01C         	goto	_main	;jump to C main() function
  1532                           tblptru	equ	0xFF8
  1533                           tblptrh	equ	0xFF7
  1534                           tblptrl	equ	0xFF6
  1535                           tablat	equ	0xFF5
  1536                           postinc0	equ	0xFEE
  1537                           wreg	equ	0xFE8
  1538                           postdec1	equ	0xFE5
  1539                           fsr1h	equ	0xFE2
  1540                           fsr1l	equ	0xFE1
  1541                           
  1542                           	psect	bssCOMRAM
  1543  00005F                     __pbssCOMRAM:
  1544                           	opt stack 0
  1545  00005F                     _USBDeviceState:
  1546                           	opt stack 0
  1547  00005F                     	ds	1
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           postinc0	equ	0xFEE
  1553                           wreg	equ	0xFE8
  1554                           postdec1	equ	0xFE5
  1555                           fsr1h	equ	0xFE2
  1556                           fsr1l	equ	0xFE1
  1557                           
  1558                           	psect	bssBANK0
  1559  0000B9                     __pbssBANK0:
  1560                           	opt stack 0
  1561  0000B9                     _os:
  1562                           	opt stack 0
  1563  0000B9                     	ds	6
  1564  0000BF                     _inPipes:
  1565                           	opt stack 0
  1566  0000BF                     	ds	6
  1567  0000C5                     _pBDTEntryIn:
  1568                           	opt stack 0
  1569  0000C5                     	ds	6
  1570  0000CB                     _hex_file_size:
  1571                           	opt stack 0
  1572  0000CB                     	ds	4
  1573  0000CF                     _hex_file_offset:
  1574                           	opt stack 0
  1575  0000CF                     	ds	4
  1576  0000D3                     _TransferLength:
  1577                           	opt stack 0
  1578  0000D3                     	ds	2
  1579  0000D5                     _USBMSDInHandle:
  1580                           	opt stack 0
  1581  0000D5                     	ds	2
  1582  0000D7                     _USBMSDOutHandle:
  1583                           	opt stack 0
  1584  0000D7                     	ds	2
  1585  0000D9                     _pBDTEntryEP0OutNext:
  1586                           	opt stack 0
  1587  0000D9                     	ds	2
  1588  0000DB                     _pBDTEntryEP0OutCurrent:
  1589                           	opt stack 0
  1590  0000DB                     	ds	2
  1591  0000DD                     _start_from_byte_next:
  1592                           	opt stack 0
  1593  0000DD                     	ds	1
  1594  0000DE                     _last_error:
  1595                           	opt stack 0
  1596  0000DE                     	ds	1
  1597  0000DF                     _power_state:
  1598                           	opt stack 0
  1599  0000DF                     	ds	1
  1600  0000E0                     _userInterfaceStatus:
  1601                           	opt stack 0
  1602  0000E0                     	ds	1
  1603  0000E1                     _MSDCBWValid:
  1604                           	opt stack 0
  1605  0000E1                     	ds	1
  1606  0000E2                     _MSDHostNoData:
  1607                           	opt stack 0
  1608  0000E2                     	ds	1
  1609  0000E3                     _SoftDetach:
  1610                           	opt stack 0
  1611  0000E3                     	ds	1
  1612  0000E4                     _gblCBWLength:
  1613                           	opt stack 0
  1614  0000E4                     	ds	1
  1615  0000E5                     _MSDRetryAttempt:
  1616                           	opt stack 0
  1617  0000E5                     	ds	1
  1618  0000E6                     _MSDWriteState:
  1619                           	opt stack 0
  1620  0000E6                     	ds	1
  1621  0000E7                     _MSDReadState:
  1622                           	opt stack 0
  1623  0000E7                     	ds	1
  1624  0000E8                     _MSDCommandState:
  1625                           	opt stack 0
  1626  0000E8                     	ds	1
  1627  0000E9                     _MSD_State:
  1628                           	opt stack 0
  1629  0000E9                     	ds	1
  1630  0000EA                     _USBTicksSinceSuspendEnd:
  1631                           	opt stack 0
  1632  0000EA                     	ds	1
  1633  0000EB                     _USBDeferOUTDataStagePackets:
  1634                           	opt stack 0
  1635  0000EB                     	ds	1
  1636  0000EC                     _USBDeferINDataStagePackets:
  1637                           	opt stack 0
  1638  0000EC                     	ds	1
  1639  0000ED                     _USBStatusStageEnabledFlag2:
  1640                           	opt stack 0
  1641  0000ED                     	ds	1
  1642  0000EE                     _USBStatusStageEnabledFlag1:
  1643                           	opt stack 0
  1644  0000EE                     	ds	1
  1645  0000EF                     _USBDeferStatusStagePacket:
  1646                           	opt stack 0
  1647  0000EF                     	ds	1
  1648  0000F0                     _USBStatusStageTimeoutCounter:
  1649                           	opt stack 0
  1650  0000F0                     	ds	1
  1651  0000F1                     _BothEP0OutUOWNsSet:
  1652                           	opt stack 0
  1653  0000F1                     	ds	1
  1654  0000F2                     _endpoint_number:
  1655                           	opt stack 0
  1656  0000F2                     	ds	1
  1657  0000F3                     _USBBusIsSuspended:
  1658                           	opt stack 0
  1659  0000F3                     	ds	1
  1660  0000F4                     _RemoteWakeup:
  1661                           	opt stack 0
  1662  0000F4                     	ds	1
  1663  0000F5                     _controlTransferState:
  1664                           	opt stack 0
  1665  0000F5                     	ds	1
  1666  0000F6                     _shortPacketStatus:
  1667                           	opt stack 0
  1668  0000F6                     	ds	1
  1669  0000F7                     _fast_read_cluster_number:
  1670                           	opt stack 0
  1671  0000F7                     	ds	2
  1672  0000F9                     _fast_read_cluster:
  1673                           	opt stack 0
  1674  0000F9                     	ds	2
  1675  0000FB                     _active_protocol:
  1676                           	opt stack 0
  1677  0000FB                     	ds	1
  1678  0000FC                     _idle_rate:
  1679                           	opt stack 0
  1680  0000FC                     	ds	1
  1681  0000FD                     _USTATcopy:
  1682                           	opt stack 0
  1683  0000FD                     	ds	1
  1684  0000FE                     _USBActiveConfiguration:
  1685                           	opt stack 0
  1686  0000FE                     	ds	1
  1687                           tblptru	equ	0xFF8
  1688                           tblptrh	equ	0xFF7
  1689                           tblptrl	equ	0xFF6
  1690                           tablat	equ	0xFF5
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           postdec1	equ	0xFE5
  1694                           fsr1h	equ	0xFE2
  1695                           fsr1l	equ	0xFE1
  1696                           
  1697                           	psect	dataBANK0
  1698  0000FF                     __pdataBANK0:
  1699                           	opt stack 0
  1700  0000FF                     _file_number:
  1701                           	opt stack 0
  1702  0000FF                     	ds	1
  1703                           tblptru	equ	0xFF8
  1704                           tblptrh	equ	0xFF7
  1705                           tblptrl	equ	0xFF6
  1706                           tablat	equ	0xFF5
  1707                           postinc0	equ	0xFEE
  1708                           wreg	equ	0xFE8
  1709                           postdec1	equ	0xFE5
  1710                           fsr1h	equ	0xFE2
  1711                           fsr1l	equ	0xFE1
  1712                           
  1713                           	psect	bssBANK1
  1714  000100                     __pbssBANK1:
  1715                           	opt stack 0
  1716  000100                     _gblCBW:
  1717                           	opt stack 0
  1718  000100                     	ds	31
  1719  00011F                     _gblSenseData:
  1720                           	opt stack 0
  1721  00011F                     	ds	18
  1722  000131                     _outPipes:
  1723                           	opt stack 0
  1724  000131                     	ds	8
  1725  000139                     _communicationSettings:
  1726                           	opt stack 0
  1727  000139                     	ds	7
  1728  000140                     _pBDTEntryOut:
  1729                           	opt stack 0
  1730  000140                     	ds	6
  1731  000146                     _extended_linear_address:
  1732                           	opt stack 0
  1733  000146                     	ds	4
  1734  00014A                     _file_maximum_address:
  1735                           	opt stack 0
  1736  00014A                     	ds	4
  1737  00014E                     _file_minimum_address:
  1738                           	opt stack 0
  1739  00014E                     	ds	4
  1740  000152                     _gblBLKLen:
  1741                           	opt stack 0
  1742  000152                     	ds	4
  1743  000156                     _gblNumBLKS:
  1744                           	opt stack 0
  1745  000156                     	ds	4
  1746  00015A                     _LBA:
  1747                           	opt stack 0
  1748  00015A                     	ds	4
  1749  00015E                     _USB1msTickCount:
  1750                           	opt stack 0
  1751  00015E                     	ds	4
  1752  000162                     _config_external:
  1753                           	opt stack 0
  1754  000162                     	ds	3
  1755  000165                     _config_internal:
  1756                           	opt stack 0
  1757  000165                     	ds	3
  1758  000168                     _ep_data_out:
  1759                           	opt stack 0
  1760  000168                     	ds	3
  1761  00016B                     _ep_data_in:
  1762                           	opt stack 0
  1763  00016B                     	ds	3
  1764  00016E                     _FileAddress:
  1765                           	opt stack 0
  1766  00016E                     	ds	2
  1767  000170                     _flash_pages_written:
  1768                           	opt stack 0
  1769  000170                     	ds	2
  1770  000172                     _total_hex_file_entries:
  1771                           	opt stack 0
  1772  000172                     	ds	2
  1773  000174                     _hex_file_entries:
  1774                           	opt stack 0
  1775  000174                     	ds	2
  1776  000176                     _startup_timer:
  1777                           	opt stack 0
  1778  000176                     	ds	2
  1779  000178                     _system_ui_inactive_count:
  1780                           	opt stack 0
  1781  000178                     	ds	2
  1782  00017A                     _USBInHandle:
  1783                           	opt stack 0
  1784  00017A                     	ds	2
  1785  00017C                     _USBOutHandle:
  1786                           	opt stack 0
  1787  00017C                     	ds	2
  1788  00017E                     _gblMediaPresent:
  1789                           	opt stack 0
  1790  00017E                     	ds	2
  1791  000180                     _MSBBufferIndex:
  1792                           	opt stack 0
  1793  000180                     	ds	2
  1794  000182                     _ptrNextData:
  1795                           	opt stack 0
  1796  000182                     	ds	2
  1797  000184                     _pDst:
  1798                           	opt stack 0
  1799  000184                     	ds	2
  1800  000186                     _active_configuration:
  1801                           	opt stack 0
  1802  000186                     	ds	1
  1803  000187                     _i2c_frequency:
  1804                           	opt stack 0
  1805  000187                     	ds	1
  1806  000188                     _file_buffer:
  1807                           	opt stack 0
  1808  000188                     	ds	50
  1809  0001BA                     _hex_file_entry:
  1810                           	opt stack 0
  1811  0001BA                     	ds	23
  1812  0001D1                     _mediaInformation:
  1813                           	opt stack 0
  1814  0001D1                     	ds	5
  1815  0001D6                     _USBAlternateInterface:
  1816                           	opt stack 0
  1817  0001D6                     	ds	2
  1818                           tblptru	equ	0xFF8
  1819                           tblptrh	equ	0xFF7
  1820                           tblptrl	equ	0xFF6
  1821                           tablat	equ	0xFF5
  1822                           postinc0	equ	0xFEE
  1823                           wreg	equ	0xFE8
  1824                           postdec1	equ	0xFE5
  1825                           fsr1h	equ	0xFE2
  1826                           fsr1l	equ	0xFE1
  1827                           
  1828                           	psect	dataBANK1
  1829  0001D8                     __pdataBANK1:
  1830                           	opt stack 0
  1831  0001D8                     _LUN:
  1832                           	opt stack 0
  1833  0001D8                     	ds	20
  1834  0001EC                     i2c_display_send_init_sequence@F6808:
  1835                           	opt stack 0
  1836  0001EC                     	ds	9
  1837  0001F5                     	ds	8
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           postdec1	equ	0xFE5
  1845                           fsr1h	equ	0xFE2
  1846                           fsr1l	equ	0xFE1
  1847                           
  1848                           	psect	bssBANK2
  1849  000200                     __pbssBANK2:
  1850                           	opt stack 0
  1851  000200                     _display_content:
  1852                           	opt stack 0
  1853  000200                     	ds	80
  1854  000250                     __spi_external_tx_buffer:
  1855                           	opt stack 0
  1856  000250                     	ds	64
  1857  000290                     _ReceivedDataBuffer:
  1858                           	opt stack 0
  1859  000290                     	ds	64
  1860                           tblptru	equ	0xFF8
  1861                           tblptrh	equ	0xFF7
  1862                           tblptrl	equ	0xFF6
  1863                           tablat	equ	0xFF5
  1864                           postinc0	equ	0xFEE
  1865                           wreg	equ	0xFE8
  1866                           postdec1	equ	0xFE5
  1867                           fsr1h	equ	0xFE2
  1868                           fsr1l	equ	0xFE1
  1869                           
  1870                           	psect	bssBANK3
  1871  000300                     __pbssBANK3:
  1872                           	opt stack 0
  1873  000300                     __spi_external_rx_buffer:
  1874                           	opt stack 0
  1875  000300                     	ds	64
  1876  000340                     _ToSendDataBuffer:
  1877                           	opt stack 0
  1878  000340                     	ds	64
  1879                           tblptru	equ	0xFF8
  1880                           tblptrh	equ	0xFF7
  1881                           tblptrl	equ	0xFF6
  1882                           tablat	equ	0xFF5
  1883                           postinc0	equ	0xFEE
  1884                           wreg	equ	0xFE8
  1885                           postdec1	equ	0xFE5
  1886                           fsr1h	equ	0xFE2
  1887                           fsr1l	equ	0xFE1
  1888                           
  1889                           	psect	bssBIGRAMlh
  1890  000800                     __pbssBIGRAMlh:
  1891                           	opt stack 0
  1892  000800                     _pageBuffer:
  1893                           	opt stack 0
  1894  000800                     	ds	1024
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           postinc0	equ	0xFEE
  1900                           wreg	equ	0xFE8
  1901                           postdec1	equ	0xFE5
  1902                           fsr1h	equ	0xFE2
  1903                           fsr1l	equ	0xFE1
  1904                           
  1905                           	psect	bssBIGRAMll
  1906  000380                     __pbssBIGRAMll:
  1907                           	opt stack 0
  1908  000380                     _buffer:
  1909                           	opt stack 0
  1910  000380                     	ds	512
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           postdec1	equ	0xFE5
  1918                           fsr1h	equ	0xFE2
  1919                           fsr1l	equ	0xFE1
  1920                           
  1921                           	psect	cstackBANK0
  1922  000060                     __pcstackBANK0:
  1923                           	opt stack 0
  1924  000060                     ??__bootloader_verify_file:
  1925  000060                     ??__bootloader_program:
  1926  000060                     fat_rename_file@file_number:
  1927                           	opt stack 0
  1928  000060                     fat_create_file@next_cluster:
  1929                           	opt stack 0
  1930  000060                     fat_append_to_file@sector:
  1931                           	opt stack 0
  1932  000060                     fat_read_from_file@start_byte:
  1933                           	opt stack 0
  1934                           
  1935                           ; 4 bytes @ 0x0
  1936  000060                     	ds	1
  1937  000061                     fat_rename_file@root:
  1938                           	opt stack 0
  1939                           
  1940                           ; 32 bytes @ 0x1
  1941  000061                     	ds	1
  1942  000062                     fat_create_file@cluster_count:
  1943                           	opt stack 0
  1944  000062                     fat_append_to_file@file_size:
  1945                           	opt stack 0
  1946                           
  1947                           ; 4 bytes @ 0x2
  1948  000062                     	ds	2
  1949  000064                     fat_create_file@root_slot:
  1950                           	opt stack 0
  1951  000064                     fat_read_from_file@length:
  1952                           	opt stack 0
  1953                           
  1954                           ; 4 bytes @ 0x4
  1955  000064                     	ds	1
  1956  000065                     fat_create_file@number_of_clusters:
  1957                           	opt stack 0
  1958                           
  1959                           ; 2 bytes @ 0x5
  1960  000065                     	ds	1
  1961  000066                     fat_append_to_file@new_cluster:
  1962                           	opt stack 0
  1963                           
  1964                           ; 2 bytes @ 0x6
  1965  000066                     	ds	1
  1966  000067                     fat_create_file@cluster:
  1967                           	opt stack 0
  1968                           
  1969                           ; 2 bytes @ 0x7
  1970  000067                     	ds	1
  1971  000068                     fat_append_to_file@fat_cluster:
  1972                           	opt stack 0
  1973  000068                     fat_read_from_file@data:
  1974                           	opt stack 0
  1975  000068                     __bootloader_program@buffer:
  1976                           	opt stack 0
  1977  000068                     __bootloader_verify_file@root:
  1978                           	opt stack 0
  1979                           
  1980                           ; 32 bytes @ 0x8
  1981  000068                     	ds	1
  1982  000069                     fat_create_file@root_entry:
  1983                           	opt stack 0
  1984                           
  1985                           ; 32 bytes @ 0x9
  1986  000069                     	ds	1
  1987  00006A                     ??_fat_read_from_file:
  1988  00006A                     fat_append_to_file@offset:
  1989                           	opt stack 0
  1990  00006A                     __bootloader_program@entry_page:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0xA
  1994  00006A                     	ds	2
  1995  00006C                     fat_append_to_file@file_number:
  1996                           	opt stack 0
  1997  00006C                     __bootloader_program@address_within_page:
  1998                           	opt stack 0
  1999                           
  2000                           ; 2 bytes @ 0xC
  2001  00006C                     	ds	1
  2002  00006D                     fat_append_to_file@length:
  2003                           	opt stack 0
  2004                           
  2005                           ; 2 bytes @ 0xD
  2006  00006D                     	ds	1
  2007  00006E                     fat_read_from_file@file_number:
  2008                           	opt stack 0
  2009  00006E                     __bootloader_program@root:
  2010                           	opt stack 0
  2011                           
  2012                           ; 32 bytes @ 0xE
  2013  00006E                     	ds	1
  2014  00006F                     fat_read_from_file@cluster_number:
  2015                           	opt stack 0
  2016  00006F                     fat_append_to_file@position:
  2017                           	opt stack 0
  2018                           
  2019                           ; 4 bytes @ 0xF
  2020  00006F                     	ds	2
  2021  000071                     fat_read_from_file@cluster:
  2022                           	opt stack 0
  2023                           
  2024                           ; 2 bytes @ 0x11
  2025  000071                     	ds	2
  2026  000073                     fat_append_to_file@root:
  2027                           	opt stack 0
  2028  000073                     fat_read_from_file@root:
  2029                           	opt stack 0
  2030                           
  2031                           ; 32 bytes @ 0x13
  2032  000073                     	ds	14
  2033  000081                     fat_rename_file@cntr:
  2034                           	opt stack 0
  2035                           
  2036                           ; 1 bytes @ 0x21
  2037  000081                     	ds	7
  2038  000088                     __bootloader_verify_file@rec_counter:
  2039                           	opt stack 0
  2040                           
  2041                           ; 1 bytes @ 0x28
  2042  000088                     	ds	1
  2043  000089                     __bootloader_verify_file@return_value:
  2044                           	opt stack 0
  2045                           
  2046                           ; 4 bytes @ 0x29
  2047  000089                     	ds	4
  2048  00008D                     __bootloader_verify_file@address32:
  2049                           	opt stack 0
  2050                           
  2051                           ; 4 bytes @ 0x2D
  2052  00008D                     	ds	1
  2053  00008E                     __bootloader_program@return_value:
  2054                           	opt stack 0
  2055                           
  2056                           ; 4 bytes @ 0x2E
  2057  00008E                     	ds	4
  2058  000092                     __bootloader_program@address32:
  2059                           	opt stack 0
  2060                           
  2061                           ; 4 bytes @ 0x32
  2062  000092                     	ds	1
  2063  000093                     api_parse@inBuffer:
  2064                           	opt stack 0
  2065  000093                     __fill_buffer_read_file@inBuffer:
  2066                           	opt stack 0
  2067                           
  2068                           ; 2 bytes @ 0x33
  2069  000093                     	ds	2
  2070  000095                     api_parse@receivedDataLength:
  2071                           	opt stack 0
  2072  000095                     __fill_buffer_read_file@outBuffer:
  2073                           	opt stack 0
  2074                           
  2075                           ; 2 bytes @ 0x35
  2076  000095                     	ds	1
  2077  000096                     __bootloader_program@start_from_byte:
  2078                           	opt stack 0
  2079                           
  2080                           ; 1 bytes @ 0x36
  2081  000096                     	ds	1
  2082  000097                     ??__fill_buffer_read_file:
  2083  000097                     __bootloader_program@cntr:
  2084                           	opt stack 0
  2085                           
  2086                           ; 2 bytes @ 0x37
  2087  000097                     	ds	2
  2088  000099                     __bootloader_program@page_to_write:
  2089                           	opt stack 0
  2090                           
  2091                           ; 2 bytes @ 0x39
  2092  000099                     	ds	2
  2093  00009B                     __fill_buffer_read_file@file_size:
  2094                           	opt stack 0
  2095                           
  2096                           ; 4 bytes @ 0x3B
  2097  00009B                     	ds	4
  2098  00009F                     __fill_buffer_read_file@data_length:
  2099                           	opt stack 0
  2100                           
  2101                           ; 4 bytes @ 0x3F
  2102  00009F                     	ds	4
  2103  0000A3                     __fill_buffer_read_file@start:
  2104                           	opt stack 0
  2105                           
  2106                           ; 4 bytes @ 0x43
  2107  0000A3                     	ds	4
  2108  0000A7                     api_prepare@inBuffer:
  2109                           	opt stack 0
  2110                           
  2111                           ; 2 bytes @ 0x47
  2112  0000A7                     	ds	2
  2113  0000A9                     api_prepare@outBuffer:
  2114                           	opt stack 0
  2115                           
  2116                           ; 2 bytes @ 0x49
  2117  0000A9                     	ds	2
  2118  0000AB                     ??_APP_DeviceCustomHIDTasks:
  2119                           
  2120                           ; 1 bytes @ 0x4B
  2121  0000AB                     	ds	4
  2122  0000AF                     ??_main:
  2123                           
  2124                           ; 1 bytes @ 0x4F
  2125  0000AF                     	ds	2
  2126  0000B1                     main@tx_start_addr:
  2127                           	opt stack 0
  2128                           
  2129                           ; 2 bytes @ 0x51
  2130  0000B1                     	ds	2
  2131  0000B3                     main@bytes_transmitted:
  2132                           	opt stack 0
  2133                           
  2134                           ; 2 bytes @ 0x53
  2135  0000B3                     	ds	2
  2136  0000B5                     main@rx_buffer:
  2137                           	opt stack 0
  2138                           
  2139                           ; 2 bytes @ 0x55
  2140  0000B5                     	ds	2
  2141  0000B7                     main@tx_buffer:
  2142                           	opt stack 0
  2143                           
  2144                           ; 2 bytes @ 0x57
  2145  0000B7                     	ds	2
  2146                           tblptru	equ	0xFF8
  2147                           tblptrh	equ	0xFF7
  2148                           tblptrl	equ	0xFF6
  2149                           tablat	equ	0xFF5
  2150                           postinc0	equ	0xFEE
  2151                           wreg	equ	0xFE8
  2152                           postdec1	equ	0xFE5
  2153                           fsr1h	equ	0xFE2
  2154                           fsr1l	equ	0xFE1
  2155                           
  2156                           	psect	cstackCOMRAM
  2157  000001                     __pcstackCOMRAM:
  2158                           	opt stack 0
  2159  000001                     ??_USBStdGetDscHandler:
  2160  000001                     ??_USBStdGetStatusHandler:
  2161  000001                     ??_system_delay_ms:
  2162  000001                     ??__i2c_wait_idle:
  2163  000001                     ??__display_clear:
  2164  000001                     ?_USBTransferOnePacket:
  2165                           	opt stack 0
  2166  000001                     ?_spi_get_external_rx_buffer:
  2167                           	opt stack 0
  2168  000001                     ?_spi_get_external_tx_buffer:
  2169                           	opt stack 0
  2170  000001                     ?_ExternalFlash_MediaInitialize:
  2171                           	opt stack 0
  2172  000001                     ?_ExternalFlash_SectorSizeRead:
  2173                           	opt stack 0
  2174  000001                     ?_bootloader_get_entries:
  2175                           	opt stack 0
  2176  000001                     ?_bootloader_get_total_entries:
  2177                           	opt stack 0
  2178  000001                     ?_bootloader_get_rec_address:
  2179                           	opt stack 0
  2180  000001                     ?_bootloader_get_flashPagesWritten:
  2181                           	opt stack 0
  2182  000001                     ?_strncmp:
  2183                           	opt stack 0
  2184  000001                     ?_internalFlash_pageFromAddress:
  2185                           	opt stack 0
  2186  000001                     ?_internalFlash_getBuffer:
  2187                           	opt stack 0
  2188  000001                     ?__get_time:
  2189                           	opt stack 0
  2190  000001                     ?__get_date:
  2191                           	opt stack 0
  2192  000001                     ?__sector_from_cluster:
  2193                           	opt stack 0
  2194  000001                     ?_bootloader_get_rec_dataLength:
  2195                           	opt stack 0
  2196  000001                     ?___lwdiv:
  2197                           	opt stack 0
  2198  000001                     ?___lwmod:
  2199                           	opt stack 0
  2200  000001                     ?_ExternalFlash_CapacityRead:
  2201                           	opt stack 0
  2202  000001                     ?_bootloader_get_file_size:
  2203                           	opt stack 0
  2204  000001                     ?_internalFlash_addressFromPage:
  2205                           	opt stack 0
  2206  000001                     ?___lldiv:
  2207                           	opt stack 0
  2208  000001                     ?___llmod:
  2209                           	opt stack 0
  2210  000001                     USBTransferOnePacket@dir:
  2211                           	opt stack 0
  2212  000001                     USBStallEndpoint@dir:
  2213                           	opt stack 0
  2214  000001                     USBConfigureEndpoint@direction:
  2215                           	opt stack 0
  2216  000001                     USBCtrlTrfTxService@byteToSend:
  2217                           	opt stack 0
  2218  000001                     USBCtrlTrfRxService@i:
  2219                           	opt stack 0
  2220  000001                     __i2c_send@dat:
  2221                           	opt stack 0
  2222  000001                     i2c_set_frequency@frequency:
  2223                           	opt stack 0
  2224  000001                     display_get_character@position:
  2225                           	opt stack 0
  2226  000001                     __display_search@cntr:
  2227                           	opt stack 0
  2228  000001                     __display_rebooting@cntr:
  2229                           	opt stack 0
  2230  000001                     hexCharToUint8@c:
  2231                           	opt stack 0
  2232  000001                     bootloader_get_rec_data@index:
  2233                           	opt stack 0
  2234  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2235                           	opt stack 0
  2236  000001                     spi_set_configuration@configuration:
  2237                           	opt stack 0
  2238  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2239                           	opt stack 0
  2240  000001                     SYSTEM_Initialize@pll_startup_counter:
  2241                           	opt stack 0
  2242  000001                     ExternalFlash_MediaInitialize@config:
  2243                           	opt stack 0
  2244  000001                     ExternalFlash_SectorSizeRead@config:
  2245                           	opt stack 0
  2246  000001                     ExternalFlash_CapacityRead@config:
  2247                           	opt stack 0
  2248  000001                     ExternalFlash_MediaDetect@config:
  2249                           	opt stack 0
  2250  000001                     ExternalFlash_WriteProtectStateGet@config:
  2251                           	opt stack 0
  2252  000001                     __sector_from_cluster@fat_cluster:
  2253                           	opt stack 0
  2254  000001                     __get_mbr@idx:
  2255                           	opt stack 0
  2256  000001                     __get_fbr@idx:
  2257                           	opt stack 0
  2258  000001                     __get_fat@idx:
  2259                           	opt stack 0
  2260  000001                     __get_root@idx:
  2261                           	opt stack 0
  2262  000001                     __get_data@idx:
  2263                           	opt stack 0
  2264  000001                     internalFlash_addressFromPage@page:
  2265                           	opt stack 0
  2266  000001                     __fill_buffer_get_configuration@outBuffer:
  2267                           	opt stack 0
  2268  000001                     __parse_file_truncate@data:
  2269                           	opt stack 0
  2270  000001                     __parse_file_modify@data:
  2271                           	opt stack 0
  2272  000001                     spi_tx@data:
  2273                           	opt stack 0
  2274  000001                     spi_tx_tx@command:
  2275                           	opt stack 0
  2276  000001                     spi_tx_rx@command:
  2277                           	opt stack 0
  2278  000001                     ___lwdiv@dividend:
  2279                           	opt stack 0
  2280  000001                     ___lwmod@dividend:
  2281                           	opt stack 0
  2282  000001                     memcpy@d1:
  2283                           	opt stack 0
  2284  000001                     memset@p1:
  2285                           	opt stack 0
  2286  000001                     strncmp@s1:
  2287                           	opt stack 0
  2288  000001                     __spi_init@details:
  2289                           	opt stack 0
  2290  000001                     __bootloader_check_address@address:
  2291                           	opt stack 0
  2292  000001                     internalFlash_pageFromAddress@address:
  2293                           	opt stack 0
  2294  000001                     ___lldiv@dividend:
  2295                           	opt stack 0
  2296  000001                     ___llmod@dividend:
  2297                           	opt stack 0
  2298                           
  2299                           ; 4 bytes @ 0x0
  2300  000001                     	ds	1
  2301  000002                     ??_USBConfigureEndpoint:
  2302  000002                     ??_USBStallEndpoint:
  2303  000002                     ??_display_get_character:
  2304  000002                     USBCtrlTrfRxService@byteToRead:
  2305                           	opt stack 0
  2306  000002                     USBCtrlTrfInHandler@lastDTS:
  2307                           	opt stack 0
  2308  000002                     system_delay_ms@ms:
  2309                           	opt stack 0
  2310  000002                     hexCharToUint8@ascii:
  2311                           	opt stack 0
  2312  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2313                           	opt stack 0
  2314  000002                     USBTransferOnePacket@data:
  2315                           	opt stack 0
  2316  000002                     USBStdGetStatusHandler@p:
  2317                           	opt stack 0
  2318                           
  2319                           ; 2 bytes @ 0x1
  2320  000002                     	ds	1
  2321  000003                     ??_MSDComputeDeviceInAndResidue:
  2322  000003                     ??__get_mbr:
  2323  000003                     ??__get_fbr:
  2324  000003                     ??__get_fat:
  2325  000003                     ??__get_root:
  2326  000003                     ?_hexCharsToUint16:
  2327                           	opt stack 0
  2328  000003                     system_delay_ms@cntr:
  2329                           	opt stack 0
  2330  000003                     __display_clear@row:
  2331                           	opt stack 0
  2332  000003                     hexCharsToUint8@c2:
  2333                           	opt stack 0
  2334  000003                     hexCharsToUint16@c2:
  2335                           	opt stack 0
  2336  000003                     SYSTEM_Initialize@pll_startup_counter_3036:
  2337                           	opt stack 0
  2338  000003                     __get_time@time:
  2339                           	opt stack 0
  2340  000003                     __get_date@date:
  2341                           	opt stack 0
  2342  000003                     internalFlash_erasePage@page:
  2343                           	opt stack 0
  2344  000003                     internalFlash_writePage@page:
  2345                           	opt stack 0
  2346  000003                     spi_tx@length:
  2347                           	opt stack 0
  2348  000003                     spi_tx_tx@command_length:
  2349                           	opt stack 0
  2350  000003                     spi_tx_rx@command_length:
  2351                           	opt stack 0
  2352  000003                     ___lwdiv@divisor:
  2353                           	opt stack 0
  2354  000003                     ___lwmod@divisor:
  2355                           	opt stack 0
  2356  000003                     memset@c:
  2357                           	opt stack 0
  2358  000003                     strncmp@s2:
  2359                           	opt stack 0
  2360  000003                     memcpy@s1:
  2361                           	opt stack 0
  2362                           
  2363                           ; 3 bytes @ 0x2
  2364  000003                     	ds	1
  2365  000004                     ??_hexCharsToUint8:
  2366  000004                     USBTransferOnePacket@len:
  2367                           	opt stack 0
  2368  000004                     display_get_character@line:
  2369                           	opt stack 0
  2370  000004                     __display_clear@col:
  2371                           	opt stack 0
  2372  000004                     hexCharsToUint16@c3:
  2373                           	opt stack 0
  2374  000004                     spi_init@configuration:
  2375                           	opt stack 0
  2376                           
  2377                           ; 1 bytes @ 0x3
  2378  000004                     	ds	1
  2379  000005                     ??_USBTransferOnePacket:
  2380  000005                     ??_spi_tx:
  2381  000005                     ??_internalFlash_pageFromAddress:
  2382  000005                     SYSTEM_Initialize@state:
  2383                           	opt stack 0
  2384  000005                     hexCharsToUint8@c1:
  2385                           	opt stack 0
  2386  000005                     hexCharsToUint16@c4:
  2387                           	opt stack 0
  2388  000005                     __bootloader_check_address@dataLength:
  2389                           	opt stack 0
  2390  000005                     ___lwmod@counter:
  2391                           	opt stack 0
  2392  000005                     __update_modified_time@root:
  2393                           	opt stack 0
  2394  000005                     __fill_buffer_get_display@outBuffer:
  2395                           	opt stack 0
  2396  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2397                           	opt stack 0
  2398  000005                     spi_tx_tx@data:
  2399                           	opt stack 0
  2400  000005                     spi_tx_rx@data:
  2401                           	opt stack 0
  2402  000005                     ___lwdiv@quotient:
  2403                           	opt stack 0
  2404  000005                     memset@n:
  2405                           	opt stack 0
  2406  000005                     strncmp@len:
  2407                           	opt stack 0
  2408  000005                     internalFlash_erasePage@address:
  2409                           	opt stack 0
  2410  000005                     internalFlash_writePage@address:
  2411                           	opt stack 0
  2412  000005                     internalFlash_addressFromPage@address:
  2413                           	opt stack 0
  2414  000005                     ___lldiv@divisor:
  2415                           	opt stack 0
  2416  000005                     ___llmod@divisor:
  2417                           	opt stack 0
  2418                           
  2419                           ; 4 bytes @ 0x4
  2420  000005                     	ds	1
  2421  000006                     ??_hexCharsToUint16:
  2422  000006                     ??__bootloader_check_address:
  2423  000006                     USBStallEndpoint@ep:
  2424                           	opt stack 0
  2425  000006                     USBConfigureEndpoint@EPNum:
  2426                           	opt stack 0
  2427  000006                     hexCharsToUint8@retVal:
  2428                           	opt stack 0
  2429  000006                     __i2c_write@data:
  2430                           	opt stack 0
  2431  000006                     __i2c_read@data:
  2432                           	opt stack 0
  2433  000006                     i2c_display_write_fixed@data:
  2434                           	opt stack 0
  2435  000006                     memcpy@n:
  2436                           	opt stack 0
  2437                           
  2438                           ; 2 bytes @ 0x5
  2439  000006                     	ds	1
  2440  000007                     ??_strncmp:
  2441  000007                     ??__fill_buffer_get_bootloader_details:
  2442  000007                     __fill_buffer_get_display@secondHalf:
  2443                           	opt stack 0
  2444  000007                     ___lwdiv@counter:
  2445                           	opt stack 0
  2446  000007                     USBStallEndpoint@p:
  2447                           	opt stack 0
  2448  000007                     USBConfigureEndpoint@handle:
  2449                           	opt stack 0
  2450  000007                     spi_tx_tx@data_length:
  2451                           	opt stack 0
  2452  000007                     spi_tx_rx@data_length:
  2453                           	opt stack 0
  2454  000007                     memset@p:
  2455                           	opt stack 0
  2456                           
  2457                           ; 2 bytes @ 0x6
  2458  000007                     	ds	1
  2459  000008                     ??__fill_buffer_get_display:
  2460  000008                     __i2c_write@length:
  2461                           	opt stack 0
  2462  000008                     __i2c_read@length:
  2463                           	opt stack 0
  2464  000008                     i2c_display_write_fixed@length:
  2465                           	opt stack 0
  2466  000008                     utoa@buf:
  2467                           	opt stack 0
  2468  000008                     memcpy@s:
  2469                           	opt stack 0
  2470                           
  2471                           ; 3 bytes @ 0x7
  2472  000008                     	ds	1
  2473  000009                     ??_spi_tx_rx:
  2474  000009                     ??_spi_tx_tx:
  2475  000009                     ??__i2c_read:
  2476  000009                     ?_internalFlash_addressWithinPage:
  2477                           	opt stack 0
  2478  000009                     USBDeviceInit@i:
  2479                           	opt stack 0
  2480  000009                     USBEnableEndpoint@options:
  2481                           	opt stack 0
  2482  000009                     USBTransferOnePacket@ep:
  2483                           	opt stack 0
  2484  000009                     MSDErrorHandler@ErrorCase:
  2485                           	opt stack 0
  2486  000009                     __i2c_write@slave_address:
  2487                           	opt stack 0
  2488  000009                     i2c_display_write_fixed@pos:
  2489                           	opt stack 0
  2490  000009                     __flash_wakeup@command:
  2491                           	opt stack 0
  2492  000009                     hexCharsToUint16@c1:
  2493                           	opt stack 0
  2494  000009                     ___llmod@counter:
  2495                           	opt stack 0
  2496  000009                     internalFlash_writePage@cntr:
  2497                           	opt stack 0
  2498  000009                     internalFlash_addressWithinPage@address:
  2499                           	opt stack 0
  2500  000009                     ___lldiv@quotient:
  2501                           	opt stack 0
  2502                           
  2503                           ; 4 bytes @ 0x8
  2504  000009                     	ds	1
  2505  00000A                     MSDErrorHandler@OldMSD_State:
  2506                           	opt stack 0
  2507  00000A                     __i2c_write@cntr:
  2508                           	opt stack 0
  2509  00000A                     __bootloader_check_address@worst_case:
  2510                           	opt stack 0
  2511  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2512                           	opt stack 0
  2513  00000A                     USBEnableEndpoint@p:
  2514                           	opt stack 0
  2515  00000A                     USBTransferOnePacket@handle:
  2516                           	opt stack 0
  2517  00000A                     hexCharsToUint16@retVal:
  2518                           	opt stack 0
  2519  00000A                     utoa@val:
  2520                           	opt stack 0
  2521                           
  2522                           ; 2 bytes @ 0x9
  2523  00000A                     	ds	1
  2524  00000B                     __ic2_display_set_address@address:
  2525                           	opt stack 0
  2526  00000B                     i2c_digipot_backlight@level:
  2527                           	opt stack 0
  2528  00000B                     __bootloader_check_address@byte_status:
  2529                           	opt stack 0
  2530  00000B                     internalFlash_writePage@block_cntr:
  2531                           	opt stack 0
  2532  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2533                           	opt stack 0
  2534  00000B                     i2c_digipot_reset_on@data_array:
  2535                           	opt stack 0
  2536  00000B                     i2c_digipot_reset_off@data_array:
  2537                           	opt stack 0
  2538  00000B                     i2c_eeprom_writeByte@address:
  2539                           	opt stack 0
  2540  00000B                     memcpy@d:
  2541                           	opt stack 0
  2542  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2543                           	opt stack 0
  2544  00000B                     i2c_display_send_init_sequence@init_sequence:
  2545                           	opt stack 0
  2546                           
  2547                           ; 9 bytes @ 0xA
  2548  00000B                     	ds	1
  2549  00000C                     ??_USBMSDInit:
  2550  00000C                     ?_parseHexFileEntry:
  2551                           	opt stack 0
  2552  00000C                     USBEnableEndpoint@ep:
  2553                           	opt stack 0
  2554  00000C                     __bootloader_check_address@cntr:
  2555                           	opt stack 0
  2556  00000C                     internalFlash_writePage@byte_cntr:
  2557                           	opt stack 0
  2558  00000C                     _USBCheckMSDRequest$2319:
  2559                           	opt stack 0
  2560  00000C                     MSDTransferTerminated@handle:
  2561                           	opt stack 0
  2562  00000C                     __ic2_display_set_address@data_array:
  2563                           	opt stack 0
  2564  00000C                     i2c_digipot_backlight@data_array:
  2565                           	opt stack 0
  2566  00000C                     parseHexFileEntry@data:
  2567                           	opt stack 0
  2568  00000C                     utoa@base:
  2569                           	opt stack 0
  2570  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2571                           	opt stack 0
  2572                           
  2573                           ; 4 bytes @ 0xB
  2574  00000C                     	ds	1
  2575  00000D                     ?__flash_get_status:
  2576                           	opt stack 0
  2577  00000D                     i2c_eeprom_writeByte@data:
  2578                           	opt stack 0
  2579  00000D                     __fill_buffer_get_display@cntr:
  2580                           	opt stack 0
  2581  00000D                     ___lldiv@counter:
  2582                           	opt stack 0
  2583  00000D                     memcpy@tmp:
  2584                           	opt stack 0
  2585  00000D                     internalFlash_addressWithinPage@page:
  2586                           	opt stack 0
  2587                           
  2588                           ; 2 bytes @ 0xC
  2589  00000D                     	ds	1
  2590  00000E                     ??_i2c_eeprom_writeByte:
  2591  00000E                     i2c_display_cursor@position:
  2592                           	opt stack 0
  2593  00000E                     __fill_buffer_get_display@line:
  2594                           	opt stack 0
  2595  00000E                     _USBCheckMSDRequest$2320:
  2596                           	opt stack 0
  2597  00000E                     _MSDTransferTerminated$2407:
  2598                           	opt stack 0
  2599  00000E                     utoa@v:
  2600                           	opt stack 0
  2601  00000E                     parseHexFileEntry@offset:
  2602                           	opt stack 0
  2603  00000E                     internalFlash_read@address:
  2604                           	opt stack 0
  2605                           
  2606                           ; 4 bytes @ 0xD
  2607  00000E                     	ds	1
  2608  00000F                     ??_internalFlash_addressWithinPage:
  2609  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2610                           	opt stack 0
  2611  00000F                     i2c_display_cursor@line:
  2612                           	opt stack 0
  2613  00000F                     __flash_get_status@command:
  2614                           	opt stack 0
  2615  00000F                     __fill_buffer_get_display@start_line:
  2616                           	opt stack 0
  2617                           
  2618                           ; 1 bytes @ 0xE
  2619  00000F                     	ds	1
  2620  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2621                           	opt stack 0
  2622  000010                     __i2c_read@slave_address:
  2623                           	opt stack 0
  2624  000010                     i2c_display_cursor@address:
  2625                           	opt stack 0
  2626  000010                     __fill_buffer_get_display@position:
  2627                           	opt stack 0
  2628  000010                     utoa@c:
  2629                           	opt stack 0
  2630  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2631                           	opt stack 0
  2632  000010                     __flash_get_status@status:
  2633                           	opt stack 0
  2634  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2635                           	opt stack 0
  2636                           
  2637                           ; 2 bytes @ 0xF
  2638  000010                     	ds	1
  2639  000011                     MSDCheckForErrorCases@DeviceNoData:
  2640                           	opt stack 0
  2641  000011                     __i2c_read@cntr:
  2642                           	opt stack 0
  2643  000011                     i2c_eeprom_writeByte@dat:
  2644                           	opt stack 0
  2645  000011                     itoa@buf:
  2646                           	opt stack 0
  2647                           
  2648                           ; 2 bytes @ 0x10
  2649  000011                     	ds	1
  2650  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2651                           	opt stack 0
  2652  000012                     i2c_eeprom_readByte@address:
  2653                           	opt stack 0
  2654  000012                     __flash_is_busy@status:
  2655                           	opt stack 0
  2656  000012                     parseHexFileEntry@hexEntry:
  2657                           	opt stack 0
  2658  000012                     internalFlash_read@data_length:
  2659                           	opt stack 0
  2660                           
  2661                           ; 2 bytes @ 0x11
  2662  000012                     	ds	1
  2663  000013                     i2c_eeprom_writeByte@slave_address:
  2664                           	opt stack 0
  2665  000013                     itoa@val:
  2666                           	opt stack 0
  2667  000013                     internalFlash_addressWithinPage@page_start_address:
  2668                           	opt stack 0
  2669                           
  2670                           ; 4 bytes @ 0x12
  2671  000013                     	ds	1
  2672  000014                     ??_i2c_eeprom_readByte:
  2673  000014                     ??_parseHexFileEntry:
  2674  000014                     flash_is_busy@result:
  2675                           	opt stack 0
  2676  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2677                           	opt stack 0
  2678  000014                     __flash_copy_page_to_buffer@page:
  2679                           	opt stack 0
  2680  000014                     __flash_compare_page_to_buffer@page:
  2681                           	opt stack 0
  2682  000014                     __flash_write_to_buffer@start:
  2683                           	opt stack 0
  2684  000014                     __flash_write_page_from_buffer@page:
  2685                           	opt stack 0
  2686  000014                     __flash_partial_read@page:
  2687                           	opt stack 0
  2688  000014                     internalFlash_read@buffer:
  2689                           	opt stack 0
  2690  000014                     __flash_set_page_size@command:
  2691                           	opt stack 0
  2692                           
  2693                           ; 4 bytes @ 0x13
  2694  000014                     	ds	1
  2695  000015                     __fill_buffer_get_status@outBuffer:
  2696                           	opt stack 0
  2697  000015                     itoa@base:
  2698                           	opt stack 0
  2699                           
  2700                           ; 2 bytes @ 0x14
  2701  000015                     	ds	1
  2702  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2703  000016                     __flash_copy_page_to_buffer@buffer:
  2704                           	opt stack 0
  2705  000016                     __flash_compare_page_to_buffer@buffer:
  2706                           	opt stack 0
  2707  000016                     __flash_write_page_from_buffer@buffer:
  2708                           	opt stack 0
  2709  000016                     __flash_write_to_buffer@data:
  2710                           	opt stack 0
  2711  000016                     __flash_partial_read@start:
  2712                           	opt stack 0
  2713  000016                     internalFlash_readPage@page:
  2714                           	opt stack 0
  2715                           
  2716                           ; 2 bytes @ 0x15
  2717  000016                     	ds	1
  2718  000017                     ??__flash_copy_page_to_buffer:
  2719  000017                     ??__flash_compare_page_to_buffer:
  2720  000017                     ??__flash_write_page_from_buffer:
  2721  000017                     i2c_eeprom_readByte@slave_address:
  2722                           	opt stack 0
  2723  000017                     itoa@cp:
  2724                           	opt stack 0
  2725                           
  2726                           ; 2 bytes @ 0x16
  2727  000017                     	ds	1
  2728  000018                     ??_USBStdFeatureReqHandler:
  2729  000018                     USBStdSetCfgHandler@i:
  2730                           	opt stack 0
  2731  000018                     i2c_eeprom_readByte@addr:
  2732                           	opt stack 0
  2733  000018                     __flash_set_page_size@size:
  2734                           	opt stack 0
  2735  000018                     __flash_write_to_buffer@data_length:
  2736                           	opt stack 0
  2737  000018                     __flash_partial_read@length:
  2738                           	opt stack 0
  2739  000018                     internalFlash_readPage@address:
  2740                           	opt stack 0
  2741                           
  2742                           ; 4 bytes @ 0x17
  2743  000018                     	ds	1
  2744  000019                     USBStdFeatureReqHandler@pUEP:
  2745                           	opt stack 0
  2746  000019                     __display_itoa_u16@value:
  2747                           	opt stack 0
  2748                           
  2749                           ; 4 bytes @ 0x18
  2750  000019                     	ds	1
  2751  00001A                     __flash_write_to_buffer@buffer:
  2752                           	opt stack 0
  2753  00001A                     __flash_compare_page_to_buffer@status:
  2754                           	opt stack 0
  2755  00001A                     __flash_partial_read@data:
  2756                           	opt stack 0
  2757  00001A                     __flash_copy_page_to_buffer@command:
  2758                           	opt stack 0
  2759  00001A                     __flash_write_page_from_buffer@command:
  2760                           	opt stack 0
  2761                           
  2762                           ; 4 bytes @ 0x19
  2763  00001A                     	ds	1
  2764  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2765                           	opt stack 0
  2766  00001B                     __flash_write_to_buffer@command:
  2767                           	opt stack 0
  2768                           
  2769                           ; 4 bytes @ 0x1A
  2770  00001B                     	ds	1
  2771  00001C                     ??__flash_partial_read:
  2772  00001C                     parseHexFileEntry@i:
  2773                           	opt stack 0
  2774  00001C                     USBStdFeatureReqHandler@p:
  2775                           	opt stack 0
  2776  00001C                     __flash_compare_page_to_buffer@command:
  2777                           	opt stack 0
  2778                           
  2779                           ; 4 bytes @ 0x1B
  2780  00001C                     	ds	1
  2781  00001D                     __display_itoa_u16@text:
  2782                           	opt stack 0
  2783                           
  2784                           ; 2 bytes @ 0x1C
  2785  00001D                     	ds	1
  2786  00001E                     ??_USBCtrlEPService:
  2787  00001E                     
  2788                           ; 1 bytes @ 0x1D
  2789  00001E                     	ds	1
  2790  00001F                     ??__display_verify:
  2791  00001F                     ??__display_checked:
  2792  00001F                     __display_programming@cntr:
  2793                           	opt stack 0
  2794  00001F                     __display_done@cntr:
  2795                           	opt stack 0
  2796  00001F                     __display_itoa_u32@value:
  2797                           	opt stack 0
  2798                           
  2799                           ; 4 bytes @ 0x1E
  2800  00001F                     	ds	1
  2801  000020                     USBDeviceTasks@i:
  2802                           	opt stack 0
  2803  000020                     flash_page_write@page:
  2804                           	opt stack 0
  2805  000020                     flash_partial_write@page:
  2806                           	opt stack 0
  2807  000020                     __flash_partial_read@command:
  2808                           	opt stack 0
  2809                           
  2810                           ; 4 bytes @ 0x1F
  2811  000020                     	ds	1
  2812  000021                     __display_verify@cntr:
  2813                           	opt stack 0
  2814  000021                     __display_checked@start:
  2815                           	opt stack 0
  2816                           
  2817                           ; 1 bytes @ 0x20
  2818  000021                     	ds	1
  2819  000022                     __display_checked@cntr:
  2820                           	opt stack 0
  2821  000022                     flash_page_write@data:
  2822                           	opt stack 0
  2823  000022                     flash_partial_write@start:
  2824                           	opt stack 0
  2825                           
  2826                           ; 2 bytes @ 0x21
  2827  000022                     	ds	1
  2828  000023                     __display_itoa_u32@text:
  2829                           	opt stack 0
  2830                           
  2831                           ; 2 bytes @ 0x22
  2832  000023                     	ds	1
  2833  000024                     flash_page_write@match:
  2834                           	opt stack 0
  2835  000024                     flash_partial_write@length:
  2836                           	opt stack 0
  2837  000024                     __flash_partial_read@address:
  2838                           	opt stack 0
  2839                           
  2840                           ; 4 bytes @ 0x23
  2841  000024                     	ds	1
  2842  000025                     ??__display_found:
  2843  000025                     __display_start@cntr:
  2844                           	opt stack 0
  2845  000025                     __display_failed@cntr:
  2846                           	opt stack 0
  2847  000025                     ExternalFlash_SectorWrite@config:
  2848                           	opt stack 0
  2849  000025                     fat_format@cntr:
  2850                           	opt stack 0
  2851                           
  2852                           ; 2 bytes @ 0x24
  2853  000025                     	ds	1
  2854  000026                     flash_partial_write@data:
  2855                           	opt stack 0
  2856                           
  2857                           ; 2 bytes @ 0x25
  2858  000026                     	ds	1
  2859  000027                     __display_found@start:
  2860                           	opt stack 0
  2861  000027                     ExternalFlash_SectorWrite@sector_addr:
  2862                           	opt stack 0
  2863                           
  2864                           ; 4 bytes @ 0x26
  2865  000027                     	ds	1
  2866  000028                     __display_found@cntr:
  2867                           	opt stack 0
  2868  000028                     flash_partial_write@match:
  2869                           	opt stack 0
  2870  000028                     flash_page_read@page:
  2871                           	opt stack 0
  2872  000028                     flash_partial_read@page:
  2873                           	opt stack 0
  2874                           
  2875                           ; 2 bytes @ 0x27
  2876  000028                     	ds	1
  2877  000029                     ??_display_prepare:
  2878  000029                     ??__delete_root:
  2879  000029                     __write_fat@cluster:
  2880                           	opt stack 0
  2881  000029                     __write_root@data:
  2882                           	opt stack 0
  2883                           
  2884                           ; 2 bytes @ 0x28
  2885  000029                     	ds	1
  2886  00002A                     flash_page_read@data:
  2887                           	opt stack 0
  2888  00002A                     flash_partial_read@start:
  2889                           	opt stack 0
  2890  00002A                     __delete_root@root_sector:
  2891                           	opt stack 0
  2892                           
  2893                           ; 2 bytes @ 0x29
  2894  00002A                     	ds	1
  2895  00002B                     ??__write_root:
  2896  00002B                     display_prepare@mode:
  2897                           	opt stack 0
  2898  00002B                     ExternalFlash_SectorWrite@buffer:
  2899                           	opt stack 0
  2900  00002B                     __write_fat@value:
  2901                           	opt stack 0
  2902                           
  2903                           ; 2 bytes @ 0x2A
  2904  00002B                     	ds	1
  2905  00002C                     ??_fat_get_format_status:
  2906  00002C                     __parse_command_short@cmd:
  2907                           	opt stack 0
  2908  00002C                     flash_partial_read@length:
  2909                           	opt stack 0
  2910  00002C                     ExternalFlash_SectorRead@config:
  2911                           	opt stack 0
  2912  00002C                     __write_root@root_sector:
  2913                           	opt stack 0
  2914  00002C                     __delete_root@offset:
  2915                           	opt stack 0
  2916                           
  2917                           ; 2 bytes @ 0x2B
  2918  00002C                     	ds	1
  2919  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2920                           	opt stack 0
  2921  00002D                     __write_fat@fat_sector:
  2922                           	opt stack 0
  2923                           
  2924                           ; 2 bytes @ 0x2C
  2925  00002D                     	ds	1
  2926  00002E                     __delete_root@deleted_value:
  2927                           	opt stack 0
  2928  00002E                     flash_partial_read@data:
  2929                           	opt stack 0
  2930  00002E                     ExternalFlash_SectorWrite@page:
  2931                           	opt stack 0
  2932  00002E                     __write_root@offset:
  2933                           	opt stack 0
  2934  00002E                     fat_get_format_status@cntr:
  2935                           	opt stack 0
  2936  00002E                     ExternalFlash_SectorRead@sector_addr:
  2937                           	opt stack 0
  2938                           
  2939                           ; 4 bytes @ 0x2D
  2940  00002E                     	ds	1
  2941  00002F                     __delete_root@slot:
  2942                           	opt stack 0
  2943  00002F                     __write_fat@offset:
  2944                           	opt stack 0
  2945                           
  2946                           ; 2 bytes @ 0x2E
  2947  00002F                     	ds	1
  2948  000030                     ??_MSDWriteHandler:
  2949  000030                     ??__root_is_available:
  2950  000030                     ?__get_empty_cluster:
  2951                           	opt stack 0
  2952  000030                     ?_fat_get_empty_clusters:
  2953                           	opt stack 0
  2954  000030                     ?__read_fat:
  2955                           	opt stack 0
  2956  000030                     ?__get_first_cluster:
  2957                           	opt stack 0
  2958  000030                     ?_fat_get_file_size:
  2959                           	opt stack 0
  2960  000030                     __write_root@slot:
  2961                           	opt stack 0
  2962  000030                     __get_empty_cluster@first_cluster:
  2963                           	opt stack 0
  2964  000030                     fat_get_empty_clusters@maximum:
  2965                           	opt stack 0
  2966  000030                     __read_fat@cluster:
  2967                           	opt stack 0
  2968  000030                     fat_find_file@name:
  2969                           	opt stack 0
  2970                           
  2971                           ; 2 bytes @ 0x2F
  2972  000030                     	ds	1
  2973  000031                     __root_is_available@root_sector:
  2974                           	opt stack 0
  2975                           
  2976                           ; 2 bytes @ 0x30
  2977  000031                     	ds	1
  2978  000032                     ??__get_first_cluster:
  2979  000032                     ExternalFlash_SectorRead@buffer:
  2980                           	opt stack 0
  2981  000032                     __get_empty_cluster@fat_sector:
  2982                           	opt stack 0
  2983  000032                     fat_get_empty_clusters@fat_sector:
  2984                           	opt stack 0
  2985  000032                     __read_fat@fat_sector:
  2986                           	opt stack 0
  2987  000032                     fat_find_file@extension:
  2988                           	opt stack 0
  2989                           
  2990                           ; 2 bytes @ 0x31
  2991  000032                     	ds	1
  2992  000033                     __root_is_available@offset:
  2993                           	opt stack 0
  2994  000033                     __get_first_cluster@sector:
  2995                           	opt stack 0
  2996                           
  2997                           ; 2 bytes @ 0x32
  2998  000033                     	ds	1
  2999  000034                     ??_fat_get_file_size:
  3000  000034                     ExternalFlash_SectorRead@page:
  3001                           	opt stack 0
  3002  000034                     __get_empty_cluster@offset:
  3003                           	opt stack 0
  3004  000034                     fat_get_empty_clusters@offset:
  3005                           	opt stack 0
  3006  000034                     __read_fat@offset:
  3007                           	opt stack 0
  3008  000034                     fat_find_file@buffer:
  3009                           	opt stack 0
  3010                           
  3011                           ; 11 bytes @ 0x33
  3012  000034                     	ds	1
  3013  000035                     __root_is_available@file_number:
  3014                           	opt stack 0
  3015  000035                     __get_first_cluster@offset:
  3016                           	opt stack 0
  3017  000035                     fat_get_file_size@sector:
  3018                           	opt stack 0
  3019                           
  3020                           ; 2 bytes @ 0x34
  3021  000035                     	ds	1
  3022  000036                     ??_MSDReadHandler:
  3023  000036                     __root_is_available@first_byte:
  3024                           	opt stack 0
  3025  000036                     __get_empty_cluster@value:
  3026                           	opt stack 0
  3027  000036                     fat_get_empty_clusters@value:
  3028                           	opt stack 0
  3029  000036                     __read_fat@value:
  3030                           	opt stack 0
  3031                           
  3032                           ; 2 bytes @ 0x35
  3033  000036                     	ds	1
  3034  000037                     __get_available_root_entry@file_number:
  3035                           	opt stack 0
  3036  000037                     __get_first_cluster@first_cluster:
  3037                           	opt stack 0
  3038  000037                     fat_get_file_information@data:
  3039                           	opt stack 0
  3040  000037                     fat_get_file_size@file_size:
  3041                           	opt stack 0
  3042                           
  3043                           ; 4 bytes @ 0x36
  3044  000037                     	ds	1
  3045  000038                     __get_empty_cluster@cluster:
  3046                           	opt stack 0
  3047  000038                     fat_get_empty_clusters@empty_clusters:
  3048                           	opt stack 0
  3049  000038                     fat_read_from_file_fast@start_byte:
  3050                           	opt stack 0
  3051                           
  3052                           ; 4 bytes @ 0x37
  3053  000038                     	ds	1
  3054  000039                     ??_fat_get_file_information:
  3055  000039                     __get_first_cluster@slot:
  3056                           	opt stack 0
  3057                           
  3058                           ; 1 bytes @ 0x38
  3059  000039                     	ds	1
  3060  00003A                     ??_MSDProcessCommandMediaPresent:
  3061  00003A                     fat_get_empty_clusters@cluster:
  3062                           	opt stack 0
  3063  00003A                     fat_delete_file@next_cluster:
  3064                           	opt stack 0
  3065  00003A                     fat_get_file_information@root_sector:
  3066                           	opt stack 0
  3067                           
  3068                           ; 2 bytes @ 0x39
  3069  00003A                     	ds	1
  3070  00003B                     fat_get_file_size@offset:
  3071                           	opt stack 0
  3072                           
  3073                           ; 2 bytes @ 0x3A
  3074  00003B                     	ds	1
  3075  00003C                     _MSDProcessCommandMediaPresent$2390:
  3076                           	opt stack 0
  3077  00003C                     fat_delete_file@first_cluster:
  3078                           	opt stack 0
  3079  00003C                     fat_get_file_information@offset:
  3080                           	opt stack 0
  3081  00003C                     fat_read_from_file_fast@length:
  3082                           	opt stack 0
  3083                           
  3084                           ; 4 bytes @ 0x3B
  3085  00003C                     	ds	1
  3086  00003D                     fat_get_file_size@file_number:
  3087                           	opt stack 0
  3088                           
  3089                           ; 1 bytes @ 0x3C
  3090  00003D                     	ds	1
  3091  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3092                           	opt stack 0
  3093  00003E                     fat_delete_file@file_number:
  3094                           	opt stack 0
  3095  00003E                     fat_get_file_information@file_number:
  3096                           	opt stack 0
  3097                           
  3098                           ; 1 bytes @ 0x3D
  3099  00003E                     	ds	1
  3100  00003F                     fat_find_file@slot:
  3101                           	opt stack 0
  3102  00003F                     fat_append_to_file@number_of_bytes:
  3103                           	opt stack 0
  3104  00003F                     fat_rename_file@name:
  3105                           	opt stack 0
  3106  00003F                     __fill_buffer_get_file_details@inBuffer:
  3107                           	opt stack 0
  3108  00003F                     __parse_file_delete@data:
  3109                           	opt stack 0
  3110  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3111                           	opt stack 0
  3112                           
  3113                           ; 4 bytes @ 0x3E
  3114  00003F                     	ds	1
  3115  000040                     fat_find_file@sector:
  3116                           	opt stack 0
  3117  000040                     fat_read_from_file_fast@data:
  3118                           	opt stack 0
  3119                           
  3120                           ; 2 bytes @ 0x3F
  3121  000040                     	ds	1
  3122  000041                     fat_append_to_file@data:
  3123                           	opt stack 0
  3124  000041                     fat_rename_file@extension:
  3125                           	opt stack 0
  3126  000041                     __fill_buffer_get_file_details@outBuffer:
  3127                           	opt stack 0
  3128                           
  3129                           ; 2 bytes @ 0x40
  3130  000041                     	ds	1
  3131  000042                     fat_find_file@offset:
  3132                           	opt stack 0
  3133  000042                     fat_read_from_file_fast@cluster:
  3134                           	opt stack 0
  3135                           
  3136                           ; 2 bytes @ 0x41
  3137  000042                     	ds	1
  3138  000043                     ??_fat_append_to_file:
  3139  000043                     __fill_buffer_get_file_details@file_number:
  3140                           	opt stack 0
  3141  000043                     __parse_file_rename@data:
  3142                           	opt stack 0
  3143  000043                     MSDProcessCommandMediaPresent@capacity:
  3144                           	opt stack 0
  3145                           
  3146                           ; 4 bytes @ 0x42
  3147  000043                     	ds	1
  3148  000044                     fat_create_file@name:
  3149                           	opt stack 0
  3150  000044                     fat_read_from_file_fast@cluster_number:
  3151                           	opt stack 0
  3152  000044                     __fill_buffer_find_file@inBuffer:
  3153                           	opt stack 0
  3154                           
  3155                           ; 2 bytes @ 0x43
  3156  000044                     	ds	1
  3157  000045                     
  3158                           ; 1 bytes @ 0x44
  3159  000045                     	ds	1
  3160  000046                     ??_fat_read_from_file_fast:
  3161  000046                     fat_create_file@extension:
  3162                           	opt stack 0
  3163  000046                     __fill_buffer_find_file@outBuffer:
  3164                           	opt stack 0
  3165                           
  3166                           ; 2 bytes @ 0x45
  3167  000046                     	ds	1
  3168  000047                     MSDProcessCommandMediaPresent@i:
  3169                           	opt stack 0
  3170                           
  3171                           ; 1 bytes @ 0x46
  3172  000047                     	ds	1
  3173  000048                     ??_MSDProcessCommand:
  3174  000048                     ??__fill_buffer_find_file:
  3175  000048                     fat_create_file@size:
  3176                           	opt stack 0
  3177                           
  3178                           ; 4 bytes @ 0x47
  3179  000048                     	ds	3
  3180  00004B                     __parse_file_append@data:
  3181                           	opt stack 0
  3182                           
  3183                           ; 2 bytes @ 0x4A
  3184  00004B                     	ds	1
  3185  00004C                     ??_fat_create_file:
  3186  00004C                     __fill_buffer_find_file@cntr:
  3187                           	opt stack 0
  3188                           
  3189                           ; 1 bytes @ 0x4B
  3190  00004C                     	ds	1
  3191  00004D                     ??__parse_file_append:
  3192  00004D                     ??_MSDTasks:
  3193                           
  3194                           ; 1 bytes @ 0x4C
  3195  00004D                     	ds	1
  3196  00004E                     _MSDTasks$2372:
  3197                           	opt stack 0
  3198                           
  3199                           ; 2 bytes @ 0x4D
  3200  00004E                     	ds	2
  3201  000050                     _MSDTasks$2373:
  3202                           	opt stack 0
  3203  000050                     __parse_file_create@data:
  3204                           	opt stack 0
  3205                           
  3206                           ; 2 bytes @ 0x4F
  3207  000050                     	ds	2
  3208  000052                     MSDTasks@i:
  3209                           	opt stack 0
  3210  000052                     fat_read_from_file_fast@sector:
  3211                           	opt stack 0
  3212                           
  3213                           ; 2 bytes @ 0x51
  3214  000052                     	ds	1
  3215  000053                     __parse_command_long@data:
  3216                           	opt stack 0
  3217                           
  3218                           ; 2 bytes @ 0x52
  3219  000053                     	ds	1
  3220  000054                     fat_read_from_file_fast@working_cluster:
  3221                           	opt stack 0
  3222                           
  3223                           ; 2 bytes @ 0x53
  3224  000054                     	ds	1
  3225  000055                     __parse_command_long@length:
  3226                           	opt stack 0
  3227                           
  3228                           ; 1 bytes @ 0x54
  3229  000055                     	ds	1
  3230  000056                     ??_api_parse:
  3231  000056                     fat_read_from_file_fast@offset:
  3232                           	opt stack 0
  3233                           
  3234                           ; 2 bytes @ 0x55
  3235  000056                     	ds	2
  3236  000058                     api_parse@idx:
  3237                           	opt stack 0
  3238  000058                     fat_read_from_file_fast@read_length:
  3239                           	opt stack 0
  3240                           
  3241                           ; 2 bytes @ 0x57
  3242  000058                     	ds	2
  3243  00005A                     fat_read_from_file_fast@position:
  3244                           	opt stack 0
  3245                           
  3246                           ; 4 bytes @ 0x59
  3247  00005A                     	ds	4
  3248  00005E                     bootloader_run@timeslot:
  3249                           	opt stack 0
  3250  00005E                     api_prepare@command:
  3251                           	opt stack 0
  3252                           
  3253                           ; 1 bytes @ 0x5D
  3254  00005E                     	ds	1
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           postdec1	equ	0xFE5
  3262                           fsr1h	equ	0xFE2
  3263                           fsr1l	equ	0xFE1
  3264                           
  3265 ;;
  3266 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3267 ;;
  3268 ;; *************** function _main *****************
  3269 ;; Defined at:
  3270 ;;		line 54 in file "main.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  tx_buffer       2   87[BANK0 ] PTR unsigned char 
  3275 ;;		 -> _spi_external_tx_buffer(64), 
  3276 ;;  rx_buffer       2   85[BANK0 ] PTR unsigned char 
  3277 ;;		 -> _spi_external_rx_buffer(64), 
  3278 ;;  bytes_transm    2   83[BANK0 ] unsigned int 
  3279 ;;  tx_start_add    2   81[BANK0 ] unsigned int 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;Total ram usage:       10 bytes
  3294 ;; Hardware stack levels required when called:   12
  3295 ;; This function calls:
  3296 ;;		_APP_DeviceCustomHIDTasks
  3297 ;;		_APP_DeviceMSDTasks
  3298 ;;		_SYSTEM_Initialize
  3299 ;;		_USBDeviceInit
  3300 ;;		_USBDeviceTasks
  3301 ;;		__normal_mode
  3302 ;;		_api_parse
  3303 ;;		_api_prepare
  3304 ;;		_bootloader_run
  3305 ;;		_display_prepare
  3306 ;;		_display_update
  3307 ;;		_jump_to_main_program
  3308 ;;		_spi_get_external_rx_buffer
  3309 ;;		_spi_get_external_tx_buffer
  3310 ;;		_system_full_init
  3311 ;;		_system_minimal_init
  3312 ;;		_system_minimal_init_undo
  3313 ;;		_timer_pseudo_isr
  3314 ;;		_ui_get_status
  3315 ;;		_ui_run
  3316 ;; This function is called by:
  3317 ;;		Startup code after reset
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text0
  3322  003918                     __ptext0:
  3323                           	opt stack 0
  3324  003918                     _main:
  3325                           	opt stack 19
  3326                           
  3327                           ;main.c: 56: uint16_t bytes_transmitted;;main.c: 57: uint16_t tx_start_addr;;main.c: 59:
      +                           uint8_t *rx_buffer;;main.c: 60: uint8_t *tx_buffer;;main.c: 62: rx_buffer = spi_get_ext
      +                          ernal_rx_buffer();
  3328                           
  3329                           ;incstack = 0
  3330  003918  ECA0  F040         	call	_spi_get_external_rx_buffer	;wreg free
  3331  00391C  C001  F0B5         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3332  003920  C002  F0B6         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3333                           
  3334                           ;main.c: 63: tx_buffer = spi_get_external_tx_buffer();
  3335  003924  EC9B  F040         	call	_spi_get_external_tx_buffer	;wreg free
  3336  003928  C001  F0B7         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3337  00392C  C002  F0B8         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3338                           
  3339                           ;main.c: 64: tx_start_addr = (uint16_t) tx_buffer;
  3340  003930  C0B7  F0B1         	movff	main@tx_buffer,main@tx_start_addr
  3341  003934  C0B8  F0B2         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3342                           
  3343                           ;main.c: 68: system_minimal_init();
  3344  003938  EC6F  F040         	call	_system_minimal_init	;wreg free
  3345                           
  3346                           ;main.c: 71: if(_normal_mode())
  3347  00393C  ECB7  F038         	call	__normal_mode	;wreg free
  3348  003940  0900               	iorlw	0
  3349  003942  B4D8               	btfsc	status,2,c
  3350  003944  D004               	goto	l889
  3351                           
  3352                           ;main.c: 72: {;main.c: 74: system_minimal_init_undo();
  3353  003946  EC67  F040         	call	_system_minimal_init_undo	;wreg free
  3354                           
  3355                           ;main.c: 75: jump_to_main_program();
  3356  00394A  ECED  F040         	call	_jump_to_main_program	;wreg free
  3357  00394E                     l889:
  3358                           
  3359                           ;main.c: 76: };main.c: 80: system_full_init();
  3360  00394E  EC2E  F038         	call	_system_full_init	;wreg free
  3361                           
  3362                           ;main.c: 84: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3363  003952  0E00               	movlw	0
  3364  003954  ECC1  F03A         	call	_SYSTEM_Initialize
  3365                           
  3366                           ;main.c: 85: USBDeviceInit();
  3367  003958  ECED  F01D         	call	_USBDeviceInit	;wreg free
  3368  00395C                     l890:
  3369  00395C  0004               	clrwdt		;# 
  3370                           
  3371                           ;main.c: 98: USBDeviceTasks();
  3372  00395E  EC16  F01B         	call	_USBDeviceTasks	;wreg free
  3373                           
  3374                           ;main.c: 99: APP_DeviceMSDTasks();
  3375  003962  EC44  F040         	call	_APP_DeviceMSDTasks	;wreg free
  3376                           
  3377                           ;main.c: 100: APP_DeviceCustomHIDTasks();
  3378  003966  EC57  F02D         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3379                           
  3380                           ;main.c: 104: timer_pseudo_isr();
  3381  00396A  EC6A  F03D         	call	_timer_pseudo_isr	;wreg free
  3382                           
  3383                           ;main.c: 107: if(PORTDbits.RD2)
  3384  00396E  A483               	btfss	3971,2,c	;volatile
  3385  003970  D039               	goto	l892
  3386                           
  3387                           ;main.c: 108: {;main.c: 111: bytes_transmitted = TXADDRH;
  3388  003972  CF6A F0B3          	movff	3946,main@bytes_transmitted	;volatile
  3389  003976  0100               	movlb	0	; () banked
  3390  003978  6BB4               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;main.c: 112: bytes_transmitted <<= 8;
  3394  00397A  51B3               	movf	main@bytes_transmitted& (0+255),w,b
  3395  00397C  6FB4               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3396  00397E  6BB3               	clrf	main@bytes_transmitted& (0+255),b
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;main.c: 113: bytes_transmitted |= TXADDRL;
  3400  003980  506B               	movf	3947,w,c	;volatile
  3401  003982  13B3               	iorwf	main@bytes_transmitted& (0+255),f,b
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;main.c: 114: --bytes_transmitted;
  3405  003984  07B3               	decf	main@bytes_transmitted& (0+255),f,b
  3406  003986  A0D8               	btfss	status,0,c
  3407  003988  07B4               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;main.c: 115: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3411  00398A  EC9B  F040         	call	_spi_get_external_tx_buffer	;wreg free
  3412  00398E  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3413  003990  0100               	movlb	0	; () banked
  3414  003992  5FB3               	subwf	main@bytes_transmitted& (0+255),f,b
  3415  003994  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3416  003996  5BB4               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;main.c: 118: if(bytes_transmitted>0)
  3420  003998  51B3               	movf	main@bytes_transmitted& (0+255),w,b
  3421  00399A  11B4               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3422  00399C  B4D8               	btfsc	status,2,c
  3423  00399E  D022               	goto	l892
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;main.c: 119: {;main.c: 121: DMACON1bits.DMAEN = 0;
  3427  0039A0  9088               	bcf	3976,0,c	;volatile
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;main.c: 124: api_prepare(rx_buffer, tx_buffer);
  3431  0039A2  C0B5  F0A7         	movff	main@rx_buffer,api_prepare@inBuffer
  3432  0039A6  C0B6  F0A8         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3433  0039AA  C0B7  F0A9         	movff	main@tx_buffer,api_prepare@outBuffer
  3434  0039AE  C0B8  F0AA         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3435  0039B2  ECC7  F01F         	call	_api_prepare	;wreg free
  3436                           
  3437                           ;main.c: 125: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3438  0039B6  C0B5  F093         	movff	main@rx_buffer,api_parse@inBuffer
  3439  0039BA  C0B6  F094         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3440  0039BE  C0B3  F095         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3441  0039C2  EC75  F028         	call	_api_parse	;wreg free
  3442                           
  3443                           ;main.c: 128: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3444  0039C6  0100               	movlb	0	; () banked
  3445  0039C8  51B8               	movf	(main@tx_buffer+1)& (0+255),w,b
  3446  0039CA  6E6A               	movwf	3946,c	;volatile
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;main.c: 129: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3450  0039CC  C0B7  FF6B         	movff	main@tx_buffer,3947	;volatile
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;main.c: 132: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3454  0039D0  51B6               	movf	(main@rx_buffer+1)& (0+255),w,b
  3455  0039D2  6E68               	movwf	3944,c	;volatile
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;main.c: 133: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3459  0039D4  C0B5  FF69         	movff	main@rx_buffer,3945	;volatile
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;main.c: 136: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3463  0039D8  0E00               	movlw	0
  3464  0039DA  6E66               	movwf	3942,c	;volatile
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;main.c: 137: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3468  0039DC  0E3F               	movlw	63
  3469  0039DE  6E67               	movwf	3943,c	;volatile
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;main.c: 140: PIR3bits.SSP2IF = 0;
  3473  0039E0  9EA4               	bcf	4004,7,c	;volatile
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;main.c: 142: DMACON1bits.DMAEN = 1;
  3477  0039E2  8088               	bsf	3976,0,c	;volatile
  3478  0039E4                     l892:
  3479                           
  3480                           ;main.c: 143: };main.c: 144: };main.c: 148: if(!os.done)
  3481                           
  3482                           ; BSR set to: 0
  3483                           
  3484                           ; BSR set to: 0
  3485  0039E4  0100               	movlb	0	; () banked
  3486  0039E6  51BC               	movf	(_os+3)& (0+255),w,b	;volatile
  3487  0039E8  A4D8               	btfss	status,2,c
  3488  0039EA  D7B8               	goto	l890
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;main.c: 149: {;main.c: 151: ui_run();
  3492  0039EC  ECF0  F021         	call	_ui_run	;wreg free
  3493                           
  3494                           ;main.c: 156: switch(os.timeSlot&0b00000111)
  3495  0039F0  D025               	goto	l894
  3496  0039F2                     
  3497                           ;main.c: 159: bootloader_run(0);
  3498  0039F2  0E00               	movlw	0
  3499  0039F4  EC8A  F038         	call	_bootloader_run
  3500                           
  3501                           ;main.c: 160: break;
  3502  0039F8  D043               	goto	l896
  3503  0039FA                     
  3504                           ;main.c: 163: bootloader_run(1);
  3505  0039FA  0E01               	movlw	1
  3506  0039FC  EC8A  F038         	call	_bootloader_run
  3507                           
  3508                           ;main.c: 164: break;
  3509  003A00  D03F               	goto	l896
  3510  003A02                     
  3511                           ;main.c: 167: bootloader_run(2);
  3512  003A02  0E02               	movlw	2
  3513  003A04  EC8A  F038         	call	_bootloader_run
  3514                           
  3515                           ;main.c: 168: break;
  3516  003A08  D03B               	goto	l896
  3517  003A0A                     
  3518                           ;main.c: 171: bootloader_run(3);
  3519  003A0A  0E03               	movlw	3
  3520  003A0C  EC8A  F038         	call	_bootloader_run
  3521                           
  3522                           ;main.c: 172: break;
  3523  003A10  D037               	goto	l896
  3524  003A12                     
  3525                           ;main.c: 175: bootloader_run(4);
  3526  003A12  0E04               	movlw	4
  3527  003A14  EC8A  F038         	call	_bootloader_run
  3528                           
  3529                           ;main.c: 176: break;
  3530  003A18  D033               	goto	l896
  3531  003A1A                     
  3532                           ;main.c: 179: bootloader_run(5);
  3533  003A1A  0E05               	movlw	5
  3534  003A1C  EC8A  F038         	call	_bootloader_run
  3535                           
  3536                           ;main.c: 180: break;
  3537  003A20  D02F               	goto	l896
  3538  003A22                     
  3539                           ;main.c: 183: display_prepare(os.display_mode);
  3540  003A22  0100               	movlb	0	; () banked
  3541  003A24  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  3542  003A26  ECDE  F028         	call	_display_prepare
  3543                           
  3544                           ;main.c: 184: break;
  3545  003A2A  D02A               	goto	l896
  3546  003A2C                     
  3547                           ;main.c: 187: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3548  003A2C  ECF9  F040         	call	_ui_get_status	;wreg free
  3549  003A30  0A05               	xorlw	5
  3550  003A32  A4D8               	btfss	status,2,c
  3551  003A34  D025               	goto	l896
  3552                           
  3553                           ;main.c: 188: {;main.c: 189: display_update();
  3554  003A36  EC32  F036         	call	_display_update	;wreg free
  3555                           
  3556                           ;main.c: 192: }
  3557                           
  3558                           ;main.c: 190: };main.c: 191: break;
  3559  003A3A  D022               	goto	l896
  3560  003A3C                     l894:
  3561  003A3C  0100               	movlb	0	; () banked
  3562  003A3E  51BB               	movf	(_os+2)& (0+255),w,b	;volatile
  3563  003A40  0B07               	andlw	7
  3564  003A42  6FAF               	movwf	??_main& (0+255),b
  3565  003A44  6BB0               	clrf	(??_main+1)& (0+255),b
  3566                           
  3567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3568                           ; Switch size 1, requested type "space"
  3569                           ; Number of cases is 1, Range of values is 0 to 0
  3570                           ; switch strategies available:
  3571                           ; Name         Instructions Cycles
  3572                           ; simple_byte            4     3 (average)
  3573                           ;	Chosen strategy is simple_byte
  3574  003A46  51B0               	movf	(??_main+1)& (0+255),w,b
  3575  003A48  0A00               	xorlw	0	; case 0
  3576  003A4A  A4D8               	btfss	status,2,c
  3577  003A4C  D019               	goto	l896
  3578                           
  3579                           ; BSR set to: 0
  3580                           ; Switch size 1, requested type "space"
  3581                           ; Number of cases is 8, Range of values is 0 to 7
  3582                           ; switch strategies available:
  3583                           ; Name         Instructions Cycles
  3584                           ; simple_byte           25    13 (average)
  3585                           ;	Chosen strategy is simple_byte
  3586  003A4E  51AF               	movf	??_main& (0+255),w,b
  3587  003A50  0A00               	xorlw	0	; case 0
  3588  003A52  B4D8               	btfsc	status,2,c
  3589  003A54  D7CE               	goto	l895
  3590  003A56  0A01               	xorlw	1	; case 1
  3591  003A58  B4D8               	btfsc	status,2,c
  3592  003A5A  D7CF               	goto	l897
  3593  003A5C  0A03               	xorlw	3	; case 2
  3594  003A5E  B4D8               	btfsc	status,2,c
  3595  003A60  D7D0               	goto	l898
  3596  003A62  0A01               	xorlw	1	; case 3
  3597  003A64  B4D8               	btfsc	status,2,c
  3598  003A66  D7D1               	goto	l899
  3599  003A68  0A07               	xorlw	7	; case 4
  3600  003A6A  B4D8               	btfsc	status,2,c
  3601  003A6C  D7D2               	goto	l900
  3602  003A6E  0A01               	xorlw	1	; case 5
  3603  003A70  B4D8               	btfsc	status,2,c
  3604  003A72  D7D3               	goto	l901
  3605  003A74  0A03               	xorlw	3	; case 6
  3606  003A76  B4D8               	btfsc	status,2,c
  3607  003A78  D7D4               	goto	l902
  3608  003A7A  0A01               	xorlw	1	; case 7
  3609  003A7C  B4D8               	btfsc	status,2,c
  3610  003A7E  D7D6               	goto	l903
  3611  003A80                     l896:
  3612                           
  3613                           ;main.c: 193: os.done = 1;
  3614                           
  3615                           ; BSR set to: 0
  3616  003A80  0E01               	movlw	1
  3617  003A82  0100               	movlb	0	; () banked
  3618  003A84  6FBC               	movwf	(_os+3)& (0+255),b	;volatile
  3619                           
  3620                           ; BSR set to: 0
  3621                           
  3622                           ; BSR set to: 0
  3623  003A86  D76A               	goto	l890
  3624  003A88                     __end_of_main:
  3625                           	opt stack 0
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           postinc0	equ	0xFEE
  3631                           wreg	equ	0xFE8
  3632                           postdec1	equ	0xFE5
  3633                           fsr1h	equ	0xFE2
  3634                           fsr1l	equ	0xFE1
  3635                           status	equ	0xFD8
  3636                           
  3637 ;; *************** function _ui_run *****************
  3638 ;; Defined at:
  3639 ;;		line 110 in file "ui.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;Total ram usage:        0 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    9
  3660 ;; This function calls:
  3661 ;;		__ui_encoder
  3662 ;;		_i2c_digipot_backlight
  3663 ;;		_i2c_digipot_reset_off
  3664 ;;		_i2c_digipot_reset_on
  3665 ;;		_i2c_display_send_init_sequence
  3666 ;;		_system_encoder_enable
  3667 ;;		_ui_init
  3668 ;; This function is called by:
  3669 ;;		_main
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text1
  3674  0043E0                     __ptext1:
  3675                           	opt stack 0
  3676  0043E0                     _ui_run:
  3677                           	opt stack 21
  3678                           
  3679                           ;ui.c: 112: switch(userInterfaceStatus)
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;incstack = 0
  3683  0043E0  D06D               	goto	l1316
  3684  0043E2                     
  3685                           ;ui.c: 116: if (os.buttonCount!=0)
  3686  0043E2  0100               	movlb	0	; () banked
  3687  0043E4  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  3688  0043E6  B4D8               	btfsc	status,2,c
  3689  0043E8  0012               	return	
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;ui.c: 117: {;ui.c: 118: ui_init();
  3693  0043EA  EC3A  F040         	call	_ui_init	;wreg free
  3694                           
  3695                           ;ui.c: 119: os.buttonCount = 0;
  3696  0043EE  0E00               	movlw	0
  3697  0043F0  0100               	movlb	0	; () banked
  3698  0043F2  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;ui.c: 120: };ui.c: 121: break;
  3702  0043F4  0012               	return	
  3703  0043F6                     l1320:
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;ui.c: 125: LATDbits.LD0 = 0;
  3707  0043F6  908C               	bcf	3980,0,c	;volatile
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;ui.c: 127: system_ui_inactive_count = 0;
  3711  0043F8  0E00               	movlw	0
  3712  0043FA  0101               	movlb	1	; () banked
  3713  0043FC  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3714  0043FE  0E00               	movlw	0
  3715  004400  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3716                           
  3717                           ;ui.c: 128: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3718  004402  0E02               	movlw	2
  3719  004404  0100               	movlb	0	; () banked
  3720  004406  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3721                           
  3722                           ;ui.c: 129: break;
  3723  004408  0012               	return	
  3724  00440A                     
  3725                           ; BSR set to: 0
  3726                           ;ui.c: 133: i2c_digipot_reset_on();
  3727                           
  3728                           ; BSR set to: 0
  3729  00440A  EC81  F03F         	call	_i2c_digipot_reset_on	;wreg free
  3730                           
  3731                           ;ui.c: 135: system_ui_inactive_count = 0;
  3732  00440E  0E00               	movlw	0
  3733  004410  0101               	movlb	1	; () banked
  3734  004412  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3735  004414  0E00               	movlw	0
  3736  004416  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3740  004418  0E03               	movlw	3
  3741  00441A  0100               	movlb	0	; () banked
  3742  00441C  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3743                           
  3744                           ;ui.c: 137: break;
  3745  00441E  0012               	return	
  3746  004420                     
  3747                           ; BSR set to: 0
  3748                           ;ui.c: 140: ++system_ui_inactive_count;
  3749                           
  3750                           ; BSR set to: 0
  3751  004420  0101               	movlb	1	; () banked
  3752  004422  4B78               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3753  004424  2B79               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3754                           
  3755                           ; BSR set to: 1
  3756                           ;ui.c: 142: if (system_ui_inactive_count>3)
  3757  004426  5179               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3758  004428  E104               	bnz	u11740
  3759  00442A  0E04               	movlw	4
  3760  00442C  5D78               	subwf	_system_ui_inactive_count& (0+255),w,b
  3761  00442E  A0D8               	btfss	status,0,c
  3762  004430  0012               	return	
  3763  004432                     u11740:
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;ui.c: 143: {;ui.c: 144: i2c_digipot_reset_off();
  3767  004432  EC92  F03F         	call	_i2c_digipot_reset_off	;wreg free
  3768                           
  3769                           ;ui.c: 145: system_ui_inactive_count = 0;
  3770  004436  0E00               	movlw	0
  3771  004438  0101               	movlb	1	; () banked
  3772  00443A  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3773  00443C  0E00               	movlw	0
  3774  00443E  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3778  004440  0E04               	movlw	4
  3779  004442  0100               	movlb	0	; () banked
  3780  004444  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;ui.c: 147: };ui.c: 148: break;
  3784  004446  0012               	return	
  3785  004448                     
  3786                           ; BSR set to: 0
  3787                           ;ui.c: 152: i2c_display_send_init_sequence();
  3788                           
  3789                           ; BSR set to: 0
  3790  004448  EC7D  F03E         	call	_i2c_display_send_init_sequence	;wreg free
  3791                           
  3792                           ;ui.c: 154: i2c_digipot_backlight(150);
  3793  00444C  0E96               	movlw	150
  3794  00444E  EC12  F03F         	call	_i2c_digipot_backlight
  3795                           
  3796                           ;ui.c: 156: system_encoder_enable();
  3797  004452  EC5F  F040         	call	_system_encoder_enable	;wreg free
  3798                           
  3799                           ;ui.c: 158: system_ui_inactive_count = 0;
  3800  004456  0E00               	movlw	0
  3801  004458  0101               	movlb	1	; () banked
  3802  00445A  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3803  00445C  0E00               	movlw	0
  3804  00445E  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3805                           
  3806                           ; BSR set to: 1
  3807                           ;ui.c: 159: startup_timer = 0;
  3808  004460  0E00               	movlw	0
  3809  004462  6F77               	movwf	(_startup_timer+1)& (0+255),b
  3810  004464  0E00               	movlw	0
  3811  004466  6F76               	movwf	_startup_timer& (0+255),b
  3812                           
  3813                           ; BSR set to: 1
  3814                           ;ui.c: 160: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3815  004468  0E05               	movlw	5
  3816  00446A  0100               	movlb	0	; () banked
  3817  00446C  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3818                           
  3819                           ;ui.c: 161: break;
  3820  00446E  0012               	return	
  3821  004470                     
  3822                           ; BSR set to: 0
  3823                           ;ui.c: 164: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  3824                           
  3825                           ; BSR set to: 0
  3826  004470  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  3827  004472  A4D8               	btfss	status,2,c
  3828  004474  D00B               	goto	l1327
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;ui.c: 165: {;ui.c: 166: ++startup_timer;
  3832  004476  0101               	movlb	1	; () banked
  3833  004478  4B76               	infsnz	_startup_timer& (0+255),f,b
  3834  00447A  2B77               	incf	(_startup_timer+1)& (0+255),f,b
  3835                           
  3836                           ; BSR set to: 1
  3837                           ;ui.c: 167: if(startup_timer==250)
  3838  00447C  0EFA               	movlw	250
  3839  00447E  1976               	xorwf	_startup_timer& (0+255),w,b
  3840  004480  1177               	iorwf	(_startup_timer+1)& (0+255),w,b
  3841  004482  A4D8               	btfss	status,2,c
  3842  004484  D003               	goto	l1327
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;ui.c: 168: {;ui.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3846  004486  0E10               	movlw	16
  3847  004488  0100               	movlb	0	; () banked
  3848  00448A  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  3849  00448C                     l1327:
  3850                           
  3851                           ;ui.c: 170: };ui.c: 171: };ui.c: 172: if (os.encoderCount==0 && os.buttonCount==0)
  3852                           
  3853                           ; BSR set to: 0
  3854  00448C  0100               	movlb	0	; () banked
  3855  00448E  51B9               	movf	_os& (0+255),w,b	;volatile
  3856  004490  A4D8               	btfss	status,2,c
  3857  004492  D00C               	goto	l1328
  3858                           
  3859                           ; BSR set to: 0
  3860  004494  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  3861  004496  A4D8               	btfss	status,2,c
  3862  004498  D009               	goto	l1328
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;ui.c: 173: {;ui.c: 174: if(system_ui_inactive_count<0xFFFF)
  3866  00449A  0101               	movlb	1	; () banked
  3867  00449C  2978               	incf	_system_ui_inactive_count& (0+255),w,b
  3868  00449E  E103               	bnz	u11790
  3869  0044A0  2979               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3870  0044A2  B4D8               	btfsc	status,2,c
  3871  0044A4  0012               	return	
  3872  0044A6                     u11790:
  3873                           
  3874                           ; BSR set to: 1
  3875                           ;ui.c: 175: ++system_ui_inactive_count;
  3876  0044A6  4B78               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3877  0044A8  2B79               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3878                           
  3879                           ; BSR set to: 1
  3880                           ;ui.c: 176: }
  3881  0044AA  0012               	return	
  3882  0044AC                     l1328:
  3883                           
  3884                           ;ui.c: 177: else;ui.c: 178: {;ui.c: 179: system_ui_inactive_count = 0;
  3885                           
  3886                           ; BSR set to: 1
  3887  0044AC  0E00               	movlw	0
  3888  0044AE  0101               	movlb	1	; () banked
  3889  0044B0  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3890  0044B2  0E00               	movlw	0
  3891  0044B4  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3892                           
  3893                           ; BSR set to: 1
  3894                           ;ui.c: 180: _ui_encoder();
  3895  0044B6  ECBE  F026         	call	__ui_encoder	;wreg free
  3896                           
  3897                           ;ui.c: 183: }
  3898                           
  3899                           ;ui.c: 181: };ui.c: 182: break;
  3900  0044BA  0012               	return	
  3901  0044BC                     l1316:
  3902  0044BC  0100               	movlb	0	; () banked
  3903  0044BE  51E0               	movf	_userInterfaceStatus& (0+255),w,b
  3904                           
  3905                           ; Switch size 1, requested type "space"
  3906                           ; Number of cases is 6, Range of values is 0 to 5
  3907                           ; switch strategies available:
  3908                           ; Name         Instructions Cycles
  3909                           ; simple_byte           19    10 (average)
  3910                           ;	Chosen strategy is simple_byte
  3911  0044C0  0A00               	xorlw	0	; case 0
  3912  0044C2  B4D8               	btfsc	status,2,c
  3913  0044C4  D78E               	goto	l1317
  3914  0044C6  0A01               	xorlw	1	; case 1
  3915  0044C8  B4D8               	btfsc	status,2,c
  3916  0044CA  D795               	goto	l1320
  3917  0044CC  0A03               	xorlw	3	; case 2
  3918  0044CE  B4D8               	btfsc	status,2,c
  3919  0044D0  D79C               	goto	l1321
  3920  0044D2  0A01               	xorlw	1	; case 3
  3921  0044D4  B4D8               	btfsc	status,2,c
  3922  0044D6  D7A4               	goto	l1322
  3923  0044D8  0A07               	xorlw	7	; case 4
  3924  0044DA  B4D8               	btfsc	status,2,c
  3925  0044DC  D7B5               	goto	l1324
  3926  0044DE  0A01               	xorlw	1	; case 5
  3927  0044E0  A4D8               	btfss	status,2,c
  3928  0044E2  0012               	return	
  3929  0044E4  D7C5               	goto	l1325
  3930  0044E6                     __end_of_ui_run:
  3931                           	opt stack 0
  3932                           tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           postinc0	equ	0xFEE
  3937                           wreg	equ	0xFE8
  3938                           postdec1	equ	0xFE5
  3939                           fsr1h	equ	0xFE2
  3940                           fsr1l	equ	0xFE1
  3941                           status	equ	0xFD8
  3942                           
  3943 ;; *************** function _system_encoder_enable *****************
  3944 ;; Defined at:
  3945 ;;		line 96 in file "os.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_ui_run
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text2
  3973  0080BE                     __ptext2:
  3974                           	opt stack 0
  3975  0080BE                     _system_encoder_enable:
  3976                           	opt stack 29
  3977                           
  3978                           ;os.c: 99: INTCON3bits.INT2IF = 0;
  3979                           
  3980                           ;incstack = 0
  3981  0080BE  92F0               	bcf	intcon3,1,c	;volatile
  3982                           
  3983                           ;os.c: 100: INTCON3bits.INT3IF = 0;
  3984  0080C0  94F0               	bcf	intcon3,2,c	;volatile
  3985                           
  3986                           ;os.c: 103: os.encoderCount = 0;
  3987  0080C2  0E00               	movlw	0
  3988  0080C4  0100               	movlb	0	; () banked
  3989  0080C6  6FB9               	movwf	_os& (0+255),b	;volatile
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;os.c: 106: INTCON3bits.INT2IE = 1;
  3993  0080C8  88F0               	bsf	intcon3,4,c	;volatile
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;os.c: 107: INTCON3bits.INT3IE = 1;
  3997  0080CA  8AF0               	bsf	intcon3,5,c	;volatile
  3998                           
  3999                           ; BSR set to: 0
  4000  0080CC  0012               	return		;funcret
  4001  0080CE                     __end_of_system_encoder_enable:
  4002                           	opt stack 0
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           intcon3	equ	0xFF0
  4008                           postinc0	equ	0xFEE
  4009                           wreg	equ	0xFE8
  4010                           postdec1	equ	0xFE5
  4011                           fsr1h	equ	0xFE2
  4012                           fsr1l	equ	0xFE1
  4013                           status	equ	0xFD8
  4014                           
  4015 ;; *************** function _i2c_display_send_init_sequence *****************
  4016 ;; Defined at:
  4017 ;;		line 207 in file "i2c.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;		None
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4032 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;Total ram usage:        9 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    2
  4038 ;; This function calls:
  4039 ;;		__i2c_write
  4040 ;;		_i2c_set_frequency
  4041 ;; This function is called by:
  4042 ;;		_ui_run
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text3
  4047  007CFA                     __ptext3:
  4048                           	opt stack 0
  4049  007CFA                     _i2c_display_send_init_sequence:
  4050                           	opt stack 27
  4051                           
  4052                           ;i2c.c: 209: uint8_t init_sequence[9] = {;i2c.c: 210: 0x3A,;i2c.c: 212: 0b00011110,;i2c.
      +                          c: 213: 0x39,;i2c.c: 215: 0b00001100,;i2c.c: 216: 0x74,;i2c.c: 217: 0b1011100,;i2c.c: 21
      +                          8: 0x6d,;i2c.c: 219: 0x0c,;i2c.c: 220: 0x01;i2c.c: 221: };
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;incstack = 0
  4056  007CFA  EE21  F0EC         	lfsr	2,i2c_display_send_init_sequence@F6808
  4057  007CFE  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4058  007D02  0E08               	movlw	8
  4059  007D04                     u11001:
  4060  007D04  CFDB FFE3          	movff	plusw2,plusw1
  4061  007D08  06E8               	decf	wreg,f,c
  4062  007D0A  E2FC               	bc	u11001
  4063                           
  4064                           ;i2c.c: 224: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4065  007D0C  0E00               	movlw	0
  4066  007D0E  ECBF  F03E         	call	_i2c_set_frequency
  4067                           
  4068                           ;i2c.c: 227: _i2c_write(0b01111000, &init_sequence[0], 9);
  4069  007D12  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4070  007D14  6E06               	movwf	__i2c_write@data,c
  4071  007D16  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4072  007D18  6E07               	movwf	__i2c_write@data+1,c
  4073  007D1A  0E09               	movlw	9
  4074  007D1C  6E08               	movwf	__i2c_write@length,c
  4075  007D1E  0E78               	movlw	120
  4076  007D20  ECB1  F03B         	call	__i2c_write
  4077  007D24  0012               	return		;funcret
  4078  007D26                     __end_of_i2c_display_send_init_sequence:
  4079                           	opt stack 0
  4080                           tblptru	equ	0xFF8
  4081                           tblptrh	equ	0xFF7
  4082                           tblptrl	equ	0xFF6
  4083                           tablat	equ	0xFF5
  4084                           intcon3	equ	0xFF0
  4085                           postinc0	equ	0xFEE
  4086                           wreg	equ	0xFE8
  4087                           postdec1	equ	0xFE5
  4088                           plusw1	equ	0xFE3
  4089                           fsr1h	equ	0xFE2
  4090                           fsr1l	equ	0xFE1
  4091                           plusw2	equ	0xFDB
  4092                           status	equ	0xFD8
  4093                           
  4094 ;; *************** function _i2c_digipot_reset_on *****************
  4095 ;; Defined at:
  4096 ;;		line 310 in file "i2c.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4114 ;;Total ram usage:        2 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    2
  4117 ;; This function calls:
  4118 ;;		__i2c_write
  4119 ;;		_i2c_set_frequency
  4120 ;; This function is called by:
  4121 ;;		_ui_run
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text4
  4126  007F02                     __ptext4:
  4127                           	opt stack 0
  4128  007F02                     _i2c_digipot_reset_on:
  4129                           	opt stack 27
  4130                           
  4131                           ;i2c.c: 312: uint8_t data_array[2];;i2c.c: 313: data_array[0] = 0x10 | 0x00;
  4132                           
  4133                           ;incstack = 0
  4134  007F02  0E10               	movlw	16
  4135  007F04  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4136                           
  4137                           ;i2c.c: 315: data_array[1] = 0x00;
  4138  007F06  0E00               	movlw	0
  4139  007F08  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4140                           
  4141                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4142  007F0A  0E02               	movlw	2
  4143  007F0C  ECBF  F03E         	call	_i2c_set_frequency
  4144                           
  4145                           ;i2c.c: 320: _i2c_write(0b01011100, &data_array[0], 2);
  4146  007F10  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4147  007F12  6E06               	movwf	__i2c_write@data,c
  4148  007F14  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4149  007F16  6E07               	movwf	__i2c_write@data+1,c
  4150  007F18  0E02               	movlw	2
  4151  007F1A  6E08               	movwf	__i2c_write@length,c
  4152  007F1C  0E5C               	movlw	92
  4153  007F1E  ECB1  F03B         	call	__i2c_write
  4154  007F22  0012               	return		;funcret
  4155  007F24                     __end_of_i2c_digipot_reset_on:
  4156                           	opt stack 0
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           intcon3	equ	0xFF0
  4162                           postinc0	equ	0xFEE
  4163                           wreg	equ	0xFE8
  4164                           postdec1	equ	0xFE5
  4165                           plusw1	equ	0xFE3
  4166                           fsr1h	equ	0xFE2
  4167                           fsr1l	equ	0xFE1
  4168                           plusw2	equ	0xFDB
  4169                           status	equ	0xFD8
  4170                           
  4171 ;; *************** function _i2c_digipot_reset_off *****************
  4172 ;; Defined at:
  4173 ;;		line 323 in file "i2c.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;Total ram usage:        2 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    2
  4194 ;; This function calls:
  4195 ;;		__i2c_write
  4196 ;;		_i2c_set_frequency
  4197 ;; This function is called by:
  4198 ;;		_ui_run
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text5
  4203  007F24                     __ptext5:
  4204                           	opt stack 0
  4205  007F24                     _i2c_digipot_reset_off:
  4206                           	opt stack 27
  4207                           
  4208                           ;i2c.c: 325: uint8_t data_array[2];;i2c.c: 326: data_array[0] = 0x10 | 0x00;
  4209                           
  4210                           ;incstack = 0
  4211  007F24  0E10               	movlw	16
  4212  007F26  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4213                           
  4214                           ;i2c.c: 327: data_array[1] = 0x80;
  4215  007F28  0E80               	movlw	128
  4216  007F2A  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4217                           
  4218                           ;i2c.c: 330: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4219  007F2C  0E02               	movlw	2
  4220  007F2E  ECBF  F03E         	call	_i2c_set_frequency
  4221                           
  4222                           ;i2c.c: 332: _i2c_write(0b01011100, &data_array[0], 2);
  4223  007F32  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4224  007F34  6E06               	movwf	__i2c_write@data,c
  4225  007F36  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4226  007F38  6E07               	movwf	__i2c_write@data+1,c
  4227  007F3A  0E02               	movlw	2
  4228  007F3C  6E08               	movwf	__i2c_write@length,c
  4229  007F3E  0E5C               	movlw	92
  4230  007F40  ECB1  F03B         	call	__i2c_write
  4231  007F44  0012               	return		;funcret
  4232  007F46                     __end_of_i2c_digipot_reset_off:
  4233                           	opt stack 0
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           intcon3	equ	0xFF0
  4239                           postinc0	equ	0xFEE
  4240                           wreg	equ	0xFE8
  4241                           postdec1	equ	0xFE5
  4242                           plusw1	equ	0xFE3
  4243                           fsr1h	equ	0xFE2
  4244                           fsr1l	equ	0xFE1
  4245                           plusw2	equ	0xFDB
  4246                           status	equ	0xFD8
  4247                           
  4248 ;; *************** function _i2c_digipot_backlight *****************
  4249 ;; Defined at:
  4250 ;;		line 335 in file "i2c.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  level           1    wreg     unsigned char 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  level           1   10[COMRAM] unsigned char 
  4255 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;Total ram usage:        3 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    2
  4272 ;; This function calls:
  4273 ;;		__i2c_write
  4274 ;;		_i2c_set_frequency
  4275 ;; This function is called by:
  4276 ;;		_ui_run
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text6
  4281  007E24                     __ptext6:
  4282                           	opt stack 0
  4283  007E24                     _i2c_digipot_backlight:
  4284                           	opt stack 27
  4285                           
  4286                           ;incstack = 0
  4287                           ;i2c_digipot_backlight@level stored from wreg
  4288  007E24  6E0B               	movwf	i2c_digipot_backlight@level,c
  4289                           
  4290                           ;i2c.c: 337: uint8_t data_array[2];;i2c.c: 338: data_array[0] = 0x00 | 0x00;
  4291  007E26  0E00               	movlw	0
  4292  007E28  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4293                           
  4294                           ;i2c.c: 339: data_array[1] = level>>1;
  4295  007E2A  90D8               	bcf	status,0,c
  4296  007E2C  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4297  007E2E  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4298                           
  4299                           ;i2c.c: 342: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4300  007E30  0E02               	movlw	2
  4301  007E32  ECBF  F03E         	call	_i2c_set_frequency
  4302                           
  4303                           ;i2c.c: 344: _i2c_write(0b01011100, &data_array[0], 2);
  4304  007E36  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4305  007E38  6E06               	movwf	__i2c_write@data,c
  4306  007E3A  0E00               	movlw	high i2c_digipot_backlight@data_array
  4307  007E3C  6E07               	movwf	__i2c_write@data+1,c
  4308  007E3E  0E02               	movlw	2
  4309  007E40  6E08               	movwf	__i2c_write@length,c
  4310  007E42  0E5C               	movlw	92
  4311  007E44  ECB1  F03B         	call	__i2c_write
  4312  007E48  0012               	return		;funcret
  4313  007E4A                     __end_of_i2c_digipot_backlight:
  4314                           	opt stack 0
  4315                           tblptru	equ	0xFF8
  4316                           tblptrh	equ	0xFF7
  4317                           tblptrl	equ	0xFF6
  4318                           tablat	equ	0xFF5
  4319                           intcon3	equ	0xFF0
  4320                           postinc0	equ	0xFEE
  4321                           wreg	equ	0xFE8
  4322                           postdec1	equ	0xFE5
  4323                           plusw1	equ	0xFE3
  4324                           fsr1h	equ	0xFE2
  4325                           fsr1l	equ	0xFE1
  4326                           plusw2	equ	0xFDB
  4327                           status	equ	0xFD8
  4328                           
  4329 ;; *************** function __ui_encoder *****************
  4330 ;; Defined at:
  4331 ;;		line 22 in file "ui.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4349 ;;Total ram usage:        0 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    8
  4352 ;; This function calls:
  4353 ;;		_i2c_eeprom_writeByte
  4354 ;;		_reboot
  4355 ;;		_system_delay_ms
  4356 ;; This function is called by:
  4357 ;;		_ui_run
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text7
  4362  004D7C                     __ptext7:
  4363                           	opt stack 0
  4364  004D7C                     __ui_encoder:
  4365                           	opt stack 21
  4366                           
  4367                           ;ui.c: 24: switch(os.display_mode)
  4368                           
  4369                           ;incstack = 0
  4370  004D7C  D054               	goto	l1289
  4371  004D7E                     
  4372                           ;ui.c: 27: if(os.buttonCount>0)
  4373  004D7E  0100               	movlb	0	; () banked
  4374  004D80  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4375  004D82  0A80               	xorlw	128
  4376  004D84  0F7F               	addlw	-129
  4377  004D86  A0D8               	btfss	status,0,c
  4378  004D88  0012               	return	
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;ui.c: 28: {;ui.c: 29: os.buttonCount = 0;
  4382  004D8A  0E00               	movlw	0
  4383  004D8C  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;ui.c: 30: };ui.c: 31: break;
  4387  004D8E  0012               	return	
  4388  004D90                     
  4389                           ; BSR set to: 0
  4390                           ;ui.c: 34: if(os.buttonCount>0)
  4391                           
  4392                           ; BSR set to: 0
  4393  004D90  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4394  004D92  0A80               	xorlw	128
  4395  004D94  0F7F               	addlw	-129
  4396  004D96  A0D8               	btfss	status,0,c
  4397  004D98  0012               	return	
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;ui.c: 35: {;ui.c: 36: os.buttonCount = 0;
  4401  004D9A  0E00               	movlw	0
  4402  004D9C  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;ui.c: 37: };ui.c: 38: break;
  4406  004D9E  0012               	return	
  4407  004DA0                     
  4408                           ; BSR set to: 0
  4409                           ;ui.c: 41: if(os.buttonCount>0)
  4410                           
  4411                           ; BSR set to: 0
  4412  004DA0  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4413  004DA2  0A80               	xorlw	128
  4414  004DA4  0F7F               	addlw	-129
  4415  004DA6  A0D8               	btfss	status,0,c
  4416  004DA8  0012               	return	
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;ui.c: 42: {;ui.c: 43: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4420  004DAA  0E30               	movlw	48
  4421  004DAC  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  4422                           
  4423                           ;ui.c: 44: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4424  004DAE  0E30               	movlw	48
  4425  004DB0  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  4426                           
  4427                           ;ui.c: 45: os.buttonCount = 0;
  4428  004DB2  0E00               	movlw	0
  4429  004DB4  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;ui.c: 46: };ui.c: 47: break;
  4433  004DB6  0012               	return	
  4434  004DB8                     
  4435                           ; BSR set to: 0
  4436                           ;ui.c: 50: if(os.buttonCount>0)
  4437                           
  4438                           ; BSR set to: 0
  4439  004DB8  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4440  004DBA  0A80               	xorlw	128
  4441  004DBC  0F7F               	addlw	-129
  4442  004DBE  A0D8               	btfss	status,0,c
  4443  004DC0  0012               	return	
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;ui.c: 51: {;ui.c: 52: os.buttonCount = 0;
  4447  004DC2  0E00               	movlw	0
  4448  004DC4  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;ui.c: 53: };ui.c: 54: break;
  4452  004DC6  0012               	return	
  4453  004DC8                     
  4454                           ; BSR set to: 0
  4455                           ;ui.c: 57: if(os.buttonCount>0)
  4456                           
  4457                           ; BSR set to: 0
  4458  004DC8  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4459  004DCA  0A80               	xorlw	128
  4460  004DCC  0F7F               	addlw	-129
  4461  004DCE  A0D8               	btfss	status,0,c
  4462  004DD0  0012               	return	
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;ui.c: 58: {;ui.c: 59: os.buttonCount = 0;
  4466  004DD2  0E00               	movlw	0
  4467  004DD4  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;ui.c: 60: };ui.c: 61: break;
  4471  004DD6  0012               	return	
  4472  004DD8                     
  4473                           ; BSR set to: 0
  4474                           ;ui.c: 64: if(os.buttonCount>0)
  4475                           
  4476                           ; BSR set to: 0
  4477  004DD8  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4478  004DDA  0A80               	xorlw	128
  4479  004DDC  0F7F               	addlw	-129
  4480  004DDE  A0D8               	btfss	status,0,c
  4481  004DE0  0012               	return	
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;ui.c: 65: {;ui.c: 66: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4485  004DE2  0E60               	movlw	96
  4486  004DE4  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  4487                           
  4488                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4489  004DE6  0E60               	movlw	96
  4490  004DE8  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  4491                           
  4492                           ;ui.c: 68: os.buttonCount = 0;
  4493  004DEA  0E00               	movlw	0
  4494  004DEC  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;ui.c: 69: };ui.c: 70: break;
  4498  004DEE  0012               	return	
  4499  004DF0                     
  4500                           ; BSR set to: 0
  4501                           ;ui.c: 73: if(os.buttonCount>0)
  4502                           
  4503                           ; BSR set to: 0
  4504  004DF0  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4505  004DF2  0A80               	xorlw	128
  4506  004DF4  0F7F               	addlw	-129
  4507  004DF6  A0D8               	btfss	status,0,c
  4508  004DF8  0012               	return	
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;ui.c: 74: {;ui.c: 75: os.buttonCount = 0;
  4512  004DFA  0E00               	movlw	0
  4513  004DFC  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;ui.c: 76: };ui.c: 77: break;
  4517  004DFE  0012               	return	
  4518  004E00                     
  4519                           ; BSR set to: 0
  4520                           ;ui.c: 80: if(os.buttonCount>0)
  4521                           
  4522                           ; BSR set to: 0
  4523  004E00  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4524  004E02  0A80               	xorlw	128
  4525  004E04  0F7F               	addlw	-129
  4526  004E06  A0D8               	btfss	status,0,c
  4527  004E08  0012               	return	
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;ui.c: 81: {;ui.c: 82: i2c_eeprom_writeByte(0x100, 0x78);
  4531  004E0A  0E01               	movlw	1
  4532  004E0C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4533  004E0E  0E00               	movlw	0
  4534  004E10  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4535  004E12  0E78               	movlw	120
  4536  004E14  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4537  004E16  EC7E  F03C         	call	_i2c_eeprom_writeByte	;wreg free
  4538                           
  4539                           ;ui.c: 83: system_delay_ms(10);
  4540  004E1A  0E0A               	movlw	10
  4541  004E1C  EC4B  F03F         	call	_system_delay_ms
  4542                           
  4543                           ;ui.c: 84: reboot();
  4544  004E20  EC0B  F040         	call	_reboot	;wreg free
  4545                           
  4546                           ;ui.c: 87: }
  4547                           
  4548                           ;ui.c: 85: };ui.c: 86: break;
  4549  004E24  0012               	return	
  4550  004E26                     l1289:
  4551  004E26  0100               	movlb	0	; () banked
  4552  004E28  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  4553                           
  4554                           ; Switch size 1, requested type "space"
  4555                           ; Number of cases is 8, Range of values is 0 to 112
  4556                           ; switch strategies available:
  4557                           ; Name         Instructions Cycles
  4558                           ; simple_byte           25    13 (average)
  4559                           ;	Chosen strategy is simple_byte
  4560  004E2A  0A00               	xorlw	0	; case 0
  4561  004E2C  B4D8               	btfsc	status,2,c
  4562  004E2E  D7A7               	goto	l1290
  4563  004E30  0A10               	xorlw	16	; case 16
  4564  004E32  B4D8               	btfsc	status,2,c
  4565  004E34  D7AD               	goto	l1293
  4566  004E36  0A30               	xorlw	48	; case 32
  4567  004E38  B4D8               	btfsc	status,2,c
  4568  004E3A  D7B2               	goto	l1295
  4569  004E3C  0A10               	xorlw	16	; case 48
  4570  004E3E  B4D8               	btfsc	status,2,c
  4571  004E40  D7BB               	goto	l1297
  4572  004E42  0A70               	xorlw	112	; case 64
  4573  004E44  B4D8               	btfsc	status,2,c
  4574  004E46  D7C8               	goto	l1301
  4575  004E48  0A10               	xorlw	16	; case 80
  4576  004E4A  B4D8               	btfsc	status,2,c
  4577  004E4C  D7BD               	goto	l1299
  4578  004E4E  0A30               	xorlw	48	; case 96
  4579  004E50  B4D8               	btfsc	status,2,c
  4580  004E52  D7CE               	goto	l1303
  4581  004E54  0A10               	xorlw	16	; case 112
  4582  004E56  A4D8               	btfss	status,2,c
  4583  004E58  0012               	return	
  4584  004E5A  D7D2               	goto	l1305
  4585  004E5C                     __end_of__ui_encoder:
  4586                           	opt stack 0
  4587                           tblptru	equ	0xFF8
  4588                           tblptrh	equ	0xFF7
  4589                           tblptrl	equ	0xFF6
  4590                           tablat	equ	0xFF5
  4591                           intcon3	equ	0xFF0
  4592                           postinc0	equ	0xFEE
  4593                           wreg	equ	0xFE8
  4594                           postdec1	equ	0xFE5
  4595                           plusw1	equ	0xFE3
  4596                           fsr1h	equ	0xFE2
  4597                           fsr1l	equ	0xFE1
  4598                           plusw2	equ	0xFDB
  4599                           status	equ	0xFD8
  4600                           
  4601 ;; *************** function _timer_pseudo_isr *****************
  4602 ;; Defined at:
  4603 ;;		line 19 in file "os.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;		None
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4621 ;;Total ram usage:        0 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		_main
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text8
  4631  007AD4                     __ptext8:
  4632                           	opt stack 0
  4633  007AD4                     _timer_pseudo_isr:
  4634                           	opt stack 30
  4635                           
  4636                           ;os.c: 22: if(INTCONbits.T0IF==0)
  4637                           
  4638                           ;incstack = 0
  4639  007AD4  A4F2               	btfss	intcon,2,c	;volatile
  4640  007AD6  0012               	return	
  4641                           
  4642                           ;os.c: 25: };os.c: 29: TMR0H = 0xD1;
  4643                           
  4644                           ;os.c: 23: {;os.c: 24: return;
  4645  007AD8  0ED1               	movlw	209
  4646  007ADA  6ED7               	movwf	4055,c	;volatile
  4647                           
  4648                           ;os.c: 30: TMR0L = 0x20;
  4649  007ADC  0E20               	movlw	32
  4650  007ADE  6ED6               	movwf	4054,c	;volatile
  4651                           
  4652                           ;os.c: 31: ++os.timeSlot;
  4653  007AE0  0100               	movlb	0	; () banked
  4654  007AE2  2BBB               	incf	(_os+2)& (0+255),f,b	;volatile
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;os.c: 33: os.done = 0;
  4658  007AE4  0E00               	movlw	0
  4659  007AE6  6FBC               	movwf	(_os+3)& (0+255),b	;volatile
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;os.c: 34: INTCONbits.T0IF = 0;
  4663  007AE8  94F2               	bcf	intcon,2,c	;volatile
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;os.c: 37: if(INTCON3bits.INT1IF)
  4667  007AEA  A0F0               	btfss	intcon3,0,c	;volatile
  4668  007AEC  D002               	goto	l1080
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;os.c: 38: {;os.c: 39: ++os.buttonCount;
  4672  007AEE  2BBA               	incf	(_os+1)& (0+255),f,b	;volatile
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;os.c: 40: INTCON3bits.INT1IF = 0;
  4676  007AF0  90F0               	bcf	intcon3,0,c	;volatile
  4677  007AF2                     l1080:
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;os.c: 41: };os.c: 44: if(INTCON3bits.INT2IF)
  4681                           
  4682                           ; BSR set to: 0
  4683  007AF2  A2F0               	btfss	intcon3,1,c	;volatile
  4684  007AF4  D003               	goto	l1081
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;os.c: 45: {;os.c: 46: if(!PORTBbits.RB6)
  4688  007AF6  AC81               	btfss	3969,6,c	;volatile
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;os.c: 47: {;os.c: 48: --os.encoderCount;
  4692  007AF8  07B9               	decf	_os& (0+255),f,b	;volatile
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;os.c: 49: };os.c: 50: INTCON3bits.INT2IF = 0;
  4696                           
  4697                           ; BSR set to: 0
  4698  007AFA  92F0               	bcf	intcon3,1,c	;volatile
  4699  007AFC                     l1081:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;os.c: 51: };os.c: 52: if(INTCON3bits.INT3IF)
  4703                           
  4704                           ; BSR set to: 0
  4705  007AFC  A4F0               	btfss	intcon3,2,c	;volatile
  4706  007AFE  0012               	return	
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;os.c: 53: {;os.c: 54: if(!PORTBbits.RB7)
  4710  007B00  AE81               	btfss	3969,7,c	;volatile
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;os.c: 55: {;os.c: 56: ++os.encoderCount;
  4714  007B02  2BB9               	incf	_os& (0+255),f,b	;volatile
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;os.c: 57: };os.c: 58: INTCON3bits.INT3IF = 0;
  4718                           
  4719                           ; BSR set to: 0
  4720  007B04  94F0               	bcf	intcon3,2,c	;volatile
  4721  007B06  0012               	return	
  4722  007B08                     __end_of_timer_pseudo_isr:
  4723                           	opt stack 0
  4724                           tblptru	equ	0xFF8
  4725                           tblptrh	equ	0xFF7
  4726                           tblptrl	equ	0xFF6
  4727                           tablat	equ	0xFF5
  4728                           intcon	equ	0xFF2
  4729                           intcon3	equ	0xFF0
  4730                           postinc0	equ	0xFEE
  4731                           wreg	equ	0xFE8
  4732                           postdec1	equ	0xFE5
  4733                           plusw1	equ	0xFE3
  4734                           fsr1h	equ	0xFE2
  4735                           fsr1l	equ	0xFE1
  4736                           plusw2	equ	0xFDB
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function _system_minimal_init_undo *****************
  4740 ;; Defined at:
  4741 ;;		line 154 in file "os.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    1
  4762 ;; This function calls:
  4763 ;;		_i2c_reset
  4764 ;; This function is called by:
  4765 ;;		_main
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text9
  4770  0080CE                     __ptext9:
  4771                           	opt stack 0
  4772  0080CE                     _system_minimal_init_undo:
  4773                           	opt stack 29
  4774                           
  4775                           ;os.c: 157: i2c_reset();
  4776                           
  4777                           ;incstack = 0
  4778  0080CE  EC87  F040         	call	_i2c_reset	;wreg free
  4779                           
  4780                           ;os.c: 160: TRISAbits.TRISA0 = 1;
  4781  0080D2  8092               	bsf	3986,0,c	;volatile
  4782                           
  4783                           ;os.c: 161: ANCON0bits.PCFG0 = 0;
  4784  0080D4  010F               	movlb	15	; () banked
  4785  0080D6  9148               	bcf	72,0,b	;volatile
  4786                           
  4787                           ; BSR set to: 15
  4788                           ;os.c: 164: LATCbits.LC2 = 0;
  4789  0080D8  948B               	bcf	3979,2,c	;volatile
  4790                           
  4791                           ; BSR set to: 15
  4792                           ;os.c: 165: TRISCbits.TRISC2 = 1;
  4793  0080DA  8494               	bsf	3988,2,c	;volatile
  4794                           
  4795                           ; BSR set to: 15
  4796  0080DC  0012               	return		;funcret
  4797  0080DE                     __end_of_system_minimal_init_undo:
  4798                           	opt stack 0
  4799                           tblptru	equ	0xFF8
  4800                           tblptrh	equ	0xFF7
  4801                           tblptrl	equ	0xFF6
  4802                           tablat	equ	0xFF5
  4803                           intcon	equ	0xFF2
  4804                           intcon3	equ	0xFF0
  4805                           postinc0	equ	0xFEE
  4806                           wreg	equ	0xFE8
  4807                           postdec1	equ	0xFE5
  4808                           plusw1	equ	0xFE3
  4809                           fsr1h	equ	0xFE2
  4810                           fsr1l	equ	0xFE1
  4811                           plusw2	equ	0xFDB
  4812                           status	equ	0xFD8
  4813                           
  4814 ;; *************** function _i2c_reset *****************
  4815 ;; Defined at:
  4816 ;;		line 110 in file "i2c.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;Total ram usage:        0 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_system_minimal_init_undo
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text10
  4844  00810E                     __ptext10:
  4845                           	opt stack 0
  4846  00810E                     _i2c_reset:
  4847                           	opt stack 29
  4848                           
  4849                           ;i2c.c: 112: SSP1STATbits.SMP = 0;
  4850                           
  4851                           ; BSR set to: 15
  4852                           ;incstack = 0
  4853  00810E  9EC7               	bcf	4039,7,c	;volatile
  4854                           
  4855                           ;i2c.c: 113: SSP1STATbits.CKE = 0;
  4856  008110  9CC7               	bcf	4039,6,c	;volatile
  4857                           
  4858                           ;i2c.c: 114: SSP1CON1 = 0x00;
  4859  008112  0E00               	movlw	0
  4860  008114  6EC6               	movwf	4038,c	;volatile
  4861                           
  4862                           ;i2c.c: 115: SSP1ADD = 0x00;
  4863  008116  0E00               	movlw	0
  4864  008118  6EC8               	movwf	4040,c	;volatile
  4865  00811A  0012               	return		;funcret
  4866  00811C                     __end_of_i2c_reset:
  4867                           	opt stack 0
  4868                           tblptru	equ	0xFF8
  4869                           tblptrh	equ	0xFF7
  4870                           tblptrl	equ	0xFF6
  4871                           tablat	equ	0xFF5
  4872                           intcon	equ	0xFF2
  4873                           intcon3	equ	0xFF0
  4874                           postinc0	equ	0xFEE
  4875                           wreg	equ	0xFE8
  4876                           postdec1	equ	0xFE5
  4877                           plusw1	equ	0xFE3
  4878                           fsr1h	equ	0xFE2
  4879                           fsr1l	equ	0xFE1
  4880                           plusw2	equ	0xFDB
  4881                           status	equ	0xFD8
  4882                           
  4883 ;; *************** function _system_minimal_init *****************
  4884 ;; Defined at:
  4885 ;;		line 139 in file "os.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4903 ;;Total ram usage:        0 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    2
  4906 ;; This function calls:
  4907 ;;		_i2c_init
  4908 ;; This function is called by:
  4909 ;;		_main
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text11
  4914  0080DE                     __ptext11:
  4915                           	opt stack 0
  4916  0080DE                     _system_minimal_init:
  4917                           	opt stack 28
  4918                           
  4919                           ;os.c: 142: TRISCbits.TRISC2 = 0;
  4920                           
  4921                           ;incstack = 0
  4922  0080DE  9494               	bcf	3988,2,c	;volatile
  4923                           
  4924                           ;os.c: 143: LATCbits.LC2 = 1;
  4925  0080E0  848B               	bsf	3979,2,c	;volatile
  4926                           
  4927                           ;os.c: 146: TRISAbits.TRISA0 = 1;
  4928  0080E2  8092               	bsf	3986,0,c	;volatile
  4929                           
  4930                           ;os.c: 147: ANCON0bits.PCFG0 = 1;
  4931  0080E4  010F               	movlb	15	; () banked
  4932  0080E6  8148               	bsf	72,0,b	;volatile
  4933                           
  4934                           ; BSR set to: 15
  4935                           ;os.c: 150: i2c_init();
  4936  0080E8  EC95  F040         	call	_i2c_init	;wreg free
  4937  0080EC  0012               	return		;funcret
  4938  0080EE                     __end_of_system_minimal_init:
  4939                           	opt stack 0
  4940                           tblptru	equ	0xFF8
  4941                           tblptrh	equ	0xFF7
  4942                           tblptrl	equ	0xFF6
  4943                           tablat	equ	0xFF5
  4944                           intcon	equ	0xFF2
  4945                           intcon3	equ	0xFF0
  4946                           postinc0	equ	0xFEE
  4947                           wreg	equ	0xFE8
  4948                           postdec1	equ	0xFE5
  4949                           plusw1	equ	0xFE3
  4950                           fsr1h	equ	0xFE2
  4951                           fsr1l	equ	0xFE1
  4952                           plusw2	equ	0xFDB
  4953                           status	equ	0xFD8
  4954                           
  4955 ;; *************** function _i2c_init *****************
  4956 ;; Defined at:
  4957 ;;		line 102 in file "i2c.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;		None
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;		None
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      void 
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4975 ;;Total ram usage:        0 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    1
  4978 ;; This function calls:
  4979 ;;		__i2c_open_1
  4980 ;;		_i2c_set_frequency
  4981 ;; This function is called by:
  4982 ;;		_system_minimal_init
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text12
  4987  00812A                     __ptext12:
  4988                           	opt stack 0
  4989  00812A                     _i2c_init:
  4990                           	opt stack 28
  4991                           
  4992                           ;i2c.c: 105: _i2c_open_1();
  4993                           
  4994                           ;incstack = 0
  4995  00812A  EC18  F040         	call	__i2c_open_1	;wreg free
  4996                           
  4997                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4998  00812E  0E00               	movlw	0
  4999  008130  ECBF  F03E         	call	_i2c_set_frequency
  5000  008134  0012               	return		;funcret
  5001  008136                     __end_of_i2c_init:
  5002                           	opt stack 0
  5003                           tblptru	equ	0xFF8
  5004                           tblptrh	equ	0xFF7
  5005                           tblptrl	equ	0xFF6
  5006                           tablat	equ	0xFF5
  5007                           intcon	equ	0xFF2
  5008                           intcon3	equ	0xFF0
  5009                           postinc0	equ	0xFEE
  5010                           wreg	equ	0xFE8
  5011                           postdec1	equ	0xFE5
  5012                           plusw1	equ	0xFE3
  5013                           fsr1h	equ	0xFE2
  5014                           fsr1l	equ	0xFE1
  5015                           plusw2	equ	0xFDB
  5016                           status	equ	0xFD8
  5017                           
  5018 ;; *************** function __i2c_open_1 *****************
  5019 ;; Defined at:
  5020 ;;		line 36 in file "i2c.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_i2c_init
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text13
  5048  008030                     __ptext13:
  5049                           	opt stack 0
  5050  008030                     __i2c_open_1:
  5051                           	opt stack 28
  5052                           
  5053                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  5054                           
  5055                           ;incstack = 0
  5056  008030  9EC7               	bcf	4039,7,c	;volatile
  5057                           
  5058                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  5059  008032  9CC7               	bcf	4039,6,c	;volatile
  5060                           
  5061                           ;i2c.c: 40: SSP1ADD = 29;
  5062  008034  0E1D               	movlw	29
  5063  008036  6EC8               	movwf	4040,c	;volatile
  5064                           
  5065                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  5066  008038  9EC6               	bcf	4038,7,c	;volatile
  5067                           
  5068                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  5069  00803A  9CC6               	bcf	4038,6,c	;volatile
  5070                           
  5071                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  5072  00803C  50C6               	movf	4038,w,c	;volatile
  5073  00803E  0BF0               	andlw	-16
  5074  008040  0908               	iorlw	8
  5075  008042  6EC6               	movwf	4038,c	;volatile
  5076                           
  5077                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  5078  008044  8AC6               	bsf	4038,5,c	;volatile
  5079  008046  0012               	return		;funcret
  5080  008048                     __end_of__i2c_open_1:
  5081                           	opt stack 0
  5082                           tblptru	equ	0xFF8
  5083                           tblptrh	equ	0xFF7
  5084                           tblptrl	equ	0xFF6
  5085                           tablat	equ	0xFF5
  5086                           intcon	equ	0xFF2
  5087                           intcon3	equ	0xFF0
  5088                           postinc0	equ	0xFEE
  5089                           wreg	equ	0xFE8
  5090                           postdec1	equ	0xFE5
  5091                           plusw1	equ	0xFE3
  5092                           fsr1h	equ	0xFE2
  5093                           fsr1l	equ	0xFE1
  5094                           plusw2	equ	0xFDB
  5095                           status	equ	0xFD8
  5096                           
  5097 ;; *************** function _system_full_init *****************
  5098 ;; Defined at:
  5099 ;;		line 169 in file "os.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1    wreg      void 
  5106 ;; Registers used:
  5107 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5117 ;;Total ram usage:        0 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:    7
  5120 ;; This function calls:
  5121 ;;		__system_encoder_init
  5122 ;;		__system_timer0_init
  5123 ;;		_fat_init
  5124 ;;		_flash_init
  5125 ;;		_ui_init
  5126 ;; This function is called by:
  5127 ;;		_main
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text14
  5132  00705C                     __ptext14:
  5133                           	opt stack 0
  5134  00705C                     _system_full_init:
  5135                           	opt stack 23
  5136                           
  5137                           ;os.c: 176: TRISDbits.TRISD0 = 0;
  5138                           
  5139                           ;incstack = 0
  5140  00705C  9095               	bcf	3989,0,c	;volatile
  5141                           
  5142                           ;os.c: 177: LATDbits.LD0 = 0;
  5143  00705E  908C               	bcf	3980,0,c	;volatile
  5144                           
  5145                           ;os.c: 180: TRISDbits.TRISD3 = 0;
  5146  007060  9695               	bcf	3989,3,c	;volatile
  5147                           
  5148                           ;os.c: 181: LATDbits.LD3 = 0;
  5149  007062  968C               	bcf	3980,3,c	;volatile
  5150                           
  5151                           ;os.c: 184: TRISDbits.TRISD1 = 0;
  5152  007064  9295               	bcf	3989,1,c	;volatile
  5153                           
  5154                           ;os.c: 185: LATDbits.LD1 = 0;
  5155  007066  928C               	bcf	3980,1,c	;volatile
  5156                           
  5157                           ;os.c: 188: TRISBbits.TRISB1 = 0;
  5158  007068  9293               	bcf	3987,1,c	;volatile
  5159                           
  5160                           ;os.c: 189: LATBbits.LB1 = 0;
  5161  00706A  928A               	bcf	3978,1,c	;volatile
  5162                           
  5163                           ;os.c: 192: TRISBbits.TRISB2 = 0;
  5164  00706C  9493               	bcf	3987,2,c	;volatile
  5165                           
  5166                           ;os.c: 193: LATBbits.LB2 = 0;
  5167  00706E  948A               	bcf	3978,2,c	;volatile
  5168                           
  5169                           ;os.c: 194: TRISBbits.TRISB3 = 0;
  5170  007070  9693               	bcf	3987,3,c	;volatile
  5171                           
  5172                           ;os.c: 195: LATBbits.LB3 = 0;
  5173  007072  968A               	bcf	3978,3,c	;volatile
  5174                           
  5175                           ;os.c: 198: TRISDbits.TRISD6 = 1;
  5176  007074  8C95               	bsf	3989,6,c	;volatile
  5177                           
  5178                           ;os.c: 199: TRISDbits.TRISD4 = 0;
  5179  007076  9895               	bcf	3989,4,c	;volatile
  5180                           
  5181                           ;os.c: 200: TRISDbits.TRISD5 = 0;
  5182  007078  9A95               	bcf	3989,5,c	;volatile
  5183                           
  5184                           ;os.c: 201: TRISDbits.TRISD7 = 0;
  5185  00707A  9E95               	bcf	3989,7,c	;volatile
  5186                           
  5187                           ;os.c: 202: LATDbits.LD7 = 1;
  5188  00707C  8E8C               	bsf	3980,7,c	;volatile
  5189                           
  5190                           ;os.c: 203: TRISDbits.TRISD2 = 1;
  5191  00707E  8495               	bsf	3989,2,c	;volatile
  5192                           
  5193                           ;os.c: 206: TRISCbits.TRISC7 = 0;
  5194  007080  9E94               	bcf	3988,7,c	;volatile
  5195                           
  5196                           ;os.c: 207: LATCbits.LC7 = 0;
  5197  007082  9E8B               	bcf	3979,7,c	;volatile
  5198                           
  5199                           ;os.c: 210: TRISEbits.TRISE2 = 0;
  5200  007084  9496               	bcf	3990,2,c	;volatile
  5201                           
  5202                           ;os.c: 211: LATEbits.LE2 = 1;
  5203  007086  848D               	bsf	3981,2,c	;volatile
  5204                           
  5205                           ;os.c: 212: TRISEbits.TRISE1 = 0;
  5206  007088  9296               	bcf	3990,1,c	;volatile
  5207                           
  5208                           ;os.c: 213: LATEbits.LE1 = 1;
  5209  00708A  828D               	bsf	3981,1,c	;volatile
  5210                           
  5211                           ;os.c: 214: TRISEbits.TRISE0 = 0;
  5212  00708C  9096               	bcf	3990,0,c	;volatile
  5213                           
  5214                           ;os.c: 215: LATEbits.LE0 = 1;
  5215  00708E  808D               	bsf	3981,0,c	;volatile
  5216                           
  5217                           ;os.c: 216: TRISAbits.TRISA5 = 0;
  5218  007090  9A92               	bcf	3986,5,c	;volatile
  5219                           
  5220                           ;os.c: 217: LATAbits.LA5 = 1;
  5221  007092  8A89               	bsf	3977,5,c	;volatile
  5222                           
  5223                           ;os.c: 220: TRISBbits.TRISB7 = 1;
  5224  007094  8E93               	bsf	3987,7,c	;volatile
  5225                           
  5226                           ;os.c: 221: TRISBbits.TRISB6 = 1;
  5227  007096  8C93               	bsf	3987,6,c	;volatile
  5228                           
  5229                           ;os.c: 224: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5230  007098  0E10               	movlw	16
  5231  00709A  0100               	movlb	0	; () banked
  5232  00709C  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  5233                           
  5234                           ;os.c: 225: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5235  00709E  0E00               	movlw	0
  5236  0070A0  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;os.c: 228: flash_init();
  5240  0070A2  ECF1  F03F         	call	_flash_init	;wreg free
  5241                           
  5242                           ;os.c: 231: fat_init();
  5243  0070A6  EC77  F040         	call	_fat_init	;wreg free
  5244                           
  5245                           ;os.c: 234: _system_encoder_init();
  5246  0070AA  ECFA  F03C         	call	__system_encoder_init	;wreg free
  5247                           
  5248                           ;os.c: 237: ui_init();
  5249  0070AE  EC3A  F040         	call	_ui_init	;wreg free
  5250                           
  5251                           ;os.c: 240: _system_timer0_init();
  5252  0070B2  ECC5  F03F         	call	__system_timer0_init	;wreg free
  5253  0070B6  0012               	return		;funcret
  5254  0070B8                     __end_of_system_full_init:
  5255                           	opt stack 0
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           intcon	equ	0xFF2
  5261                           intcon3	equ	0xFF0
  5262                           postinc0	equ	0xFEE
  5263                           wreg	equ	0xFE8
  5264                           postdec1	equ	0xFE5
  5265                           plusw1	equ	0xFE3
  5266                           fsr1h	equ	0xFE2
  5267                           fsr1l	equ	0xFE1
  5268                           plusw2	equ	0xFDB
  5269                           status	equ	0xFD8
  5270                           
  5271 ;; *************** function _ui_init *****************
  5272 ;; Defined at:
  5273 ;;		line 101 in file "ui.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_system_full_init
  5297 ;;		_ui_run
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text15
  5302  008074                     __ptext15:
  5303                           	opt stack 0
  5304  008074                     _ui_init:
  5305                           	opt stack 29
  5306                           
  5307                           ;ui.c: 103: system_ui_inactive_count = 0;
  5308                           
  5309                           ;incstack = 0
  5310  008074  0E00               	movlw	0
  5311  008076  0101               	movlb	1	; () banked
  5312  008078  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5313  00807A  0E00               	movlw	0
  5314  00807C  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  5315                           
  5316                           ; BSR set to: 1
  5317                           ;ui.c: 105: LATCbits.LC2 = 1;
  5318  00807E  848B               	bsf	3979,2,c	;volatile
  5319                           
  5320                           ;ui.c: 106: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5321  008080  0E01               	movlw	1
  5322  008082  0100               	movlb	0	; () banked
  5323  008084  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  5324                           
  5325                           ; BSR set to: 0
  5326  008086  0012               	return		;funcret
  5327  008088                     __end_of_ui_init:
  5328                           	opt stack 0
  5329                           tblptru	equ	0xFF8
  5330                           tblptrh	equ	0xFF7
  5331                           tblptrl	equ	0xFF6
  5332                           tablat	equ	0xFF5
  5333                           intcon	equ	0xFF2
  5334                           intcon3	equ	0xFF0
  5335                           postinc0	equ	0xFEE
  5336                           wreg	equ	0xFE8
  5337                           postdec1	equ	0xFE5
  5338                           plusw1	equ	0xFE3
  5339                           fsr1h	equ	0xFE2
  5340                           fsr1l	equ	0xFE1
  5341                           plusw2	equ	0xFDB
  5342                           status	equ	0xFD8
  5343                           
  5344 ;; *************** function _flash_init *****************
  5345 ;; Defined at:
  5346 ;;		line 337 in file "flash.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    4
  5367 ;; This function calls:
  5368 ;;		__flash_set_page_size
  5369 ;;		_spi_init
  5370 ;;		_spi_set_configuration
  5371 ;; This function is called by:
  5372 ;;		_system_full_init
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text16
  5377  007FE2                     __ptext16:
  5378                           	opt stack 0
  5379  007FE2                     _flash_init:
  5380                           	opt stack 25
  5381                           
  5382                           ;flash.c: 340: spi_init(SPI_CONFIGURATION_INTERNAL);
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;incstack = 0
  5386  007FE2  0E00               	movlw	0
  5387  007FE4  ECBE  F03C         	call	_spi_init
  5388                           
  5389                           ;flash.c: 341: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5390  007FE8  0E00               	movlw	0
  5391  007FEA  EC7A  F024         	call	_spi_set_configuration
  5392                           
  5393                           ;flash.c: 344: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5394  007FEE  0E00               	movlw	0
  5395  007FF0  ECB8  F033         	call	__flash_set_page_size
  5396                           
  5397                           ;flash.c: 347: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5398  007FF4  0E01               	movlw	1
  5399  007FF6  EC7A  F024         	call	_spi_set_configuration
  5400  007FFA  0012               	return		;funcret
  5401  007FFC                     __end_of_flash_init:
  5402                           	opt stack 0
  5403                           tblptru	equ	0xFF8
  5404                           tblptrh	equ	0xFF7
  5405                           tblptrl	equ	0xFF6
  5406                           tablat	equ	0xFF5
  5407                           intcon	equ	0xFF2
  5408                           intcon3	equ	0xFF0
  5409                           postinc0	equ	0xFEE
  5410                           wreg	equ	0xFE8
  5411                           postdec1	equ	0xFE5
  5412                           plusw1	equ	0xFE3
  5413                           fsr1h	equ	0xFE2
  5414                           fsr1l	equ	0xFE1
  5415                           plusw2	equ	0xFDB
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function _spi_init *****************
  5419 ;; Defined at:
  5420 ;;		line 122 in file "spi.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  configuratio    1    wreg     enum E6749
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  configuratio    1    3[COMRAM] enum E6749
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;Total ram usage:        1 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    1
  5441 ;; This function calls:
  5442 ;;		__spi_init
  5443 ;; This function is called by:
  5444 ;;		_flash_init
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text17
  5449  00797C                     __ptext17:
  5450                           	opt stack 0
  5451  00797C                     _spi_init:
  5452                           	opt stack 27
  5453                           
  5454                           ;incstack = 0
  5455                           ;spi_init@configuration stored from wreg
  5456  00797C  6E04               	movwf	spi_init@configuration,c
  5457                           
  5458                           ;spi.c: 124: switch(configuration)
  5459  00797E  D012               	goto	l2802
  5460  007980                     
  5461                           ;spi.c: 127: _spi_init(config_internal);
  5462  007980  C165  F001         	movff	_config_internal,__spi_init@details
  5463  007984  C166  F002         	movff	_config_internal+1,__spi_init@details+1
  5464  007988  C167  F003         	movff	_config_internal+2,__spi_init@details+2
  5465  00798C  EC17  F03D         	call	__spi_init	;wreg free
  5466                           
  5467                           ;spi.c: 128: break;
  5468  007990  D010               	goto	l2804
  5469  007992                     
  5470                           ;spi.c: 131: _spi_init(config_external);
  5471  007992  C162  F001         	movff	_config_external,__spi_init@details
  5472  007996  C163  F002         	movff	_config_external+1,__spi_init@details+1
  5473  00799A  C164  F003         	movff	_config_external+2,__spi_init@details+2
  5474  00799E  EC17  F03D         	call	__spi_init	;wreg free
  5475                           
  5476                           ;spi.c: 133: }
  5477                           
  5478                           ;spi.c: 132: break;
  5479  0079A2  D007               	goto	l2804
  5480  0079A4                     l2802:
  5481  0079A4  5004               	movf	spi_init@configuration,w,c
  5482                           
  5483                           ; Switch size 1, requested type "space"
  5484                           ; Number of cases is 2, Range of values is 0 to 1
  5485                           ; switch strategies available:
  5486                           ; Name         Instructions Cycles
  5487                           ; simple_byte            7     4 (average)
  5488                           ;	Chosen strategy is simple_byte
  5489  0079A6  0A00               	xorlw	0	; case 0
  5490  0079A8  B4D8               	btfsc	status,2,c
  5491  0079AA  D7EA               	goto	l2803
  5492  0079AC  0A01               	xorlw	1	; case 1
  5493  0079AE  B4D8               	btfsc	status,2,c
  5494  0079B0  D7F0               	goto	l2805
  5495  0079B2                     l2804:
  5496                           
  5497                           ;spi.c: 135: active_configuration = configuration;
  5498  0079B2  C004  F186         	movff	spi_init@configuration,_active_configuration
  5499  0079B6  0012               	return		;funcret
  5500  0079B8                     __end_of_spi_init:
  5501                           	opt stack 0
  5502                           tblptru	equ	0xFF8
  5503                           tblptrh	equ	0xFF7
  5504                           tblptrl	equ	0xFF6
  5505                           tablat	equ	0xFF5
  5506                           intcon	equ	0xFF2
  5507                           intcon3	equ	0xFF0
  5508                           postinc0	equ	0xFEE
  5509                           wreg	equ	0xFE8
  5510                           postdec1	equ	0xFE5
  5511                           plusw1	equ	0xFE3
  5512                           fsr1h	equ	0xFE2
  5513                           fsr1l	equ	0xFE1
  5514                           plusw2	equ	0xFDB
  5515                           status	equ	0xFD8
  5516                           
  5517 ;; *************** function __spi_init *****************
  5518 ;; Defined at:
  5519 ;;		line 25 in file "spi.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  details         3    0[COMRAM] struct .
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5533 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5536 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;Total ram usage:        3 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; This function calls:
  5540 ;;		Nothing
  5541 ;; This function is called by:
  5542 ;;		_spi_init
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text18
  5547  007A2E                     __ptext18:
  5548                           	opt stack 0
  5549  007A2E                     __spi_init:
  5550                           	opt stack 27
  5551                           
  5552                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5553                           
  5554                           ;incstack = 0
  5555  007A2E  0E55               	movlw	85
  5556  007A30  6EA7               	movwf	4007,c	;volsfr
  5557  007A32  0EAA               	movlw	170
  5558  007A34  6EA7               	movwf	4007,c	;volsfr
  5559  007A36  010E               	movlb	14	; () banked
  5560  007A38  91BF               	bcf	191,0,b	;volatile
  5561                           
  5562                           ;spi.c: 32: RPINR21 = 23;
  5563  007A3A  0E17               	movlw	23
  5564  007A3C  6FFC               	movwf	252,b	;volatile
  5565                           
  5566                           ;spi.c: 33: RPOR21 = 10;
  5567  007A3E  0E0A               	movlw	10
  5568  007A40  6FD5               	movwf	213,b	;volatile
  5569                           
  5570                           ;spi.c: 35: RPOR22 = 11;
  5571  007A42  0E0B               	movlw	11
  5572  007A44  6FD6               	movwf	214,b	;volatile
  5573                           
  5574                           ;spi.c: 36: RPINR22 = 22;
  5575  007A46  0E16               	movlw	22
  5576  007A48  6FFD               	movwf	253,b	;volatile
  5577                           
  5578                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5579  007A4A  0E55               	movlw	85
  5580  007A4C  6EA7               	movwf	4007,c	;volsfr
  5581  007A4E  0EAA               	movlw	170
  5582  007A50  6EA7               	movwf	4007,c	;volsfr
  5583                           
  5584                           ; BSR set to: 14
  5585  007A52  81BF               	bsf	191,0,b	;volatile
  5586                           
  5587                           ; BSR set to: 14
  5588                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5589  007A54  8E73               	bsf	3955,7,c	;volatile
  5590                           
  5591                           ; BSR set to: 14
  5592                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5593  007A56  8C73               	bsf	3955,6,c	;volatile
  5594                           
  5595                           ; BSR set to: 14
  5596                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5597  007A58  9872               	bcf	3954,4,c	;volatile
  5598                           
  5599                           ; BSR set to: 14
  5600                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5601  007A5A  9072               	bcf	3954,0,c	;volatile
  5602  007A5C  9272               	bcf	3954,1,c	;volatile
  5603  007A5E  9472               	bcf	3954,2,c	;volatile
  5604  007A60  9672               	bcf	3954,3,c	;volatile
  5605                           
  5606                           ; BSR set to: 14
  5607                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5608  007A62  8A72               	bsf	3954,5,c	;volatile
  5609                           
  5610                           ; BSR set to: 14
  5611  007A64  0012               	return		;funcret
  5612  007A66                     __end_of__spi_init:
  5613                           	opt stack 0
  5614                           tblptru	equ	0xFF8
  5615                           tblptrh	equ	0xFF7
  5616                           tblptrl	equ	0xFF6
  5617                           tablat	equ	0xFF5
  5618                           intcon	equ	0xFF2
  5619                           intcon3	equ	0xFF0
  5620                           postinc0	equ	0xFEE
  5621                           wreg	equ	0xFE8
  5622                           postdec1	equ	0xFE5
  5623                           plusw1	equ	0xFE3
  5624                           fsr1h	equ	0xFE2
  5625                           fsr1l	equ	0xFE1
  5626                           plusw2	equ	0xFDB
  5627                           status	equ	0xFD8
  5628                           
  5629 ;; *************** function __flash_set_page_size *****************
  5630 ;; Defined at:
  5631 ;;		line 95 in file "flash.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  size            1    wreg     enum E6886
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  size            1   23[COMRAM] enum E6886
  5636 ;;  command         4   19[COMRAM] unsigned char [4]
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5647 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5649 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5650 ;;Total ram usage:        5 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    3
  5653 ;; This function calls:
  5654 ;;		__flash_is_busy
  5655 ;;		_memcpy
  5656 ;;		_spi_tx
  5657 ;; This function is called by:
  5658 ;;		_flash_init
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text19
  5663  006770                     __ptext19:
  5664                           	opt stack 0
  5665  006770                     __flash_set_page_size:
  5666                           	opt stack 25
  5667                           
  5668                           ; BSR set to: 14
  5669                           ;incstack = 0
  5670                           ;__flash_set_page_size@size stored from wreg
  5671  006770  6E18               	movwf	__flash_set_page_size@size,c
  5672  006772                     
  5673                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5674  006772  ECB4  F03F         	call	__flash_is_busy	;wreg free
  5675  006776  0900               	iorlw	0
  5676  006778  A4D8               	btfss	status,2,c
  5677  00677A  D7FB               	goto	l13125
  5678                           
  5679                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5680  00677C  5018               	movf	__flash_set_page_size@size,w,c
  5681  00677E  A4D8               	btfss	status,2,c
  5682  006780  D013               	goto	l1738
  5683                           
  5684                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5685  006782  0E14               	movlw	low __flash_set_page_size@command
  5686  006784  6E01               	movwf	memcpy@d1,c
  5687  006786  0E00               	movlw	high __flash_set_page_size@command
  5688  006788  6E02               	movwf	memcpy@d1+1,c
  5689  00678A  0EC4               	movlw	low _flash_command_pagesize_512
  5690  00678C  6E03               	movwf	memcpy@s1,c
  5691  00678E  0E8F               	movlw	high _flash_command_pagesize_512
  5692  006790  6E04               	movwf	memcpy@s1+1,c
  5693  006792  5003               	movf	memcpy@s1,w,c
  5694  006794  1004               	iorwf	memcpy@s1+1,w,c
  5695  006796  A4D8               	btfss	status,2,c
  5696  006798  0E00               	movlw	low (__mediumconst shr (0+16))
  5697  00679A  6E05               	movwf	memcpy@s1+2,c
  5698  00679C  0E00               	movlw	0
  5699  00679E  6E07               	movwf	memcpy@n+1,c
  5700  0067A0  0E04               	movlw	4
  5701  0067A2  6E06               	movwf	memcpy@n,c
  5702  0067A4  EC39  F037         	call	_memcpy	;wreg free
  5703  0067A8                     l1738:
  5704                           
  5705                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5706  0067A8  0418               	decf	__flash_set_page_size@size,w,c
  5707  0067AA  A4D8               	btfss	status,2,c
  5708  0067AC  D013               	goto	l1739
  5709                           
  5710                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5711  0067AE  0E14               	movlw	low __flash_set_page_size@command
  5712  0067B0  6E01               	movwf	memcpy@d1,c
  5713  0067B2  0E00               	movlw	high __flash_set_page_size@command
  5714  0067B4  6E02               	movwf	memcpy@d1+1,c
  5715  0067B6  0EC0               	movlw	low _flash_command_pagesize_528
  5716  0067B8  6E03               	movwf	memcpy@s1,c
  5717  0067BA  0E8F               	movlw	high _flash_command_pagesize_528
  5718  0067BC  6E04               	movwf	memcpy@s1+1,c
  5719  0067BE  5003               	movf	memcpy@s1,w,c
  5720  0067C0  1004               	iorwf	memcpy@s1+1,w,c
  5721  0067C2  A4D8               	btfss	status,2,c
  5722  0067C4  0E00               	movlw	low (__mediumconst shr (0+16))
  5723  0067C6  6E05               	movwf	memcpy@s1+2,c
  5724  0067C8  0E00               	movlw	0
  5725  0067CA  6E07               	movwf	memcpy@n+1,c
  5726  0067CC  0E04               	movlw	4
  5727  0067CE  6E06               	movwf	memcpy@n,c
  5728  0067D0  EC39  F037         	call	_memcpy	;wreg free
  5729  0067D4                     l1739:
  5730                           
  5731                           ;flash.c: 109: spi_tx(command, 4);
  5732  0067D4  0E14               	movlw	low __flash_set_page_size@command
  5733  0067D6  6E01               	movwf	spi_tx@data,c
  5734  0067D8  0E00               	movlw	high __flash_set_page_size@command
  5735  0067DA  6E02               	movwf	spi_tx@data+1,c
  5736  0067DC  0E00               	movlw	0
  5737  0067DE  6E04               	movwf	spi_tx@length+1,c
  5738  0067E0  0E04               	movlw	4
  5739  0067E2  6E03               	movwf	spi_tx@length,c
  5740  0067E4  EC93  F039         	call	_spi_tx	;wreg free
  5741  0067E8  0012               	return		;funcret
  5742  0067EA                     __end_of__flash_set_page_size:
  5743                           	opt stack 0
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           intcon	equ	0xFF2
  5749                           intcon3	equ	0xFF0
  5750                           postinc0	equ	0xFEE
  5751                           wreg	equ	0xFE8
  5752                           postdec1	equ	0xFE5
  5753                           plusw1	equ	0xFE3
  5754                           fsr1h	equ	0xFE2
  5755                           fsr1l	equ	0xFE1
  5756                           plusw2	equ	0xFDB
  5757                           status	equ	0xFD8
  5758                           
  5759 ;; *************** function _fat_init *****************
  5760 ;; Defined at:
  5761 ;;		line 993 in file "fat16.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;		None
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;		None
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      void 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5779 ;;Total ram usage:        0 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    6
  5782 ;; This function calls:
  5783 ;;		_fat_format
  5784 ;;		_fat_get_format_status
  5785 ;; This function is called by:
  5786 ;;		_system_full_init
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text20
  5791  0080EE                     __ptext20:
  5792                           	opt stack 0
  5793  0080EE                     _fat_init:
  5794                           	opt stack 23
  5795                           
  5796                           ;fat16.c: 996: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5797                           
  5798                           ;incstack = 0
  5799  0080EE  ECFE  F02D         	call	_fat_get_format_status	;wreg free
  5800  0080F2  0900               	iorlw	0
  5801  0080F4  A4D8               	btfss	status,2,c
  5802  0080F6  0012               	return	
  5803                           
  5804                           ;fat16.c: 997: {;fat16.c: 998: fat_format();
  5805  0080F8  ECFA  F012         	call	_fat_format	;wreg free
  5806  0080FC  0012               	return	
  5807  0080FE                     __end_of_fat_init:
  5808                           	opt stack 0
  5809                           tblptru	equ	0xFF8
  5810                           tblptrh	equ	0xFF7
  5811                           tblptrl	equ	0xFF6
  5812                           tablat	equ	0xFF5
  5813                           intcon	equ	0xFF2
  5814                           intcon3	equ	0xFF0
  5815                           postinc0	equ	0xFEE
  5816                           wreg	equ	0xFE8
  5817                           postdec1	equ	0xFE5
  5818                           plusw1	equ	0xFE3
  5819                           fsr1h	equ	0xFE2
  5820                           fsr1l	equ	0xFE1
  5821                           plusw2	equ	0xFDB
  5822                           status	equ	0xFD8
  5823                           
  5824 ;; *************** function _fat_get_format_status *****************
  5825 ;; Defined at:
  5826 ;;		line 905 in file "fat16.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  cntr            2   45[COMRAM] unsigned int 
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  1    wreg      enum E6872
  5833 ;; Registers used:
  5834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5843 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5844 ;;Total ram usage:        4 bytes
  5845 ;; Hardware stack levels used:    1
  5846 ;; Hardware stack levels required when called:    5
  5847 ;; This function calls:
  5848 ;;		__get_fbr
  5849 ;;		__get_mbr
  5850 ;;		_flash_page_read
  5851 ;; This function is called by:
  5852 ;;		_fat_init
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text21
  5857  005BFC                     __ptext21:
  5858                           	opt stack 0
  5859  005BFC                     _fat_get_format_status:
  5860                           	opt stack 23
  5861                           
  5862                           ;fat16.c: 907: uint16_t cntr;;fat16.c: 910: flash_page_read(0, buffer);
  5863                           
  5864                           ;incstack = 0
  5865  005BFC  0E00               	movlw	0
  5866  005BFE  6E29               	movwf	flash_page_read@page+1,c
  5867  005C00  0E00               	movlw	0
  5868  005C02  6E28               	movwf	flash_page_read@page,c
  5869  005C04  0E80               	movlw	low _buffer
  5870  005C06  6E2A               	movwf	flash_page_read@data,c
  5871  005C08  0E03               	movlw	high _buffer
  5872  005C0A  6E2B               	movwf	flash_page_read@data+1,c
  5873  005C0C  ECEA  F03D         	call	_flash_page_read	;wreg free
  5874                           
  5875                           ;fat16.c: 911: for(cntr=0; cntr<512; ++cntr)
  5876  005C10  0E00               	movlw	0
  5877  005C12  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5878  005C14  0E00               	movlw	0
  5879  005C16  6E2E               	movwf	fat_get_format_status@cntr,c
  5880  005C18                     l13153:
  5881  005C18  0E02               	movlw	2
  5882  005C1A  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5883  005C1C  B0D8               	btfsc	status,0,c
  5884  005C1E  D016               	goto	u10020
  5885                           
  5886                           ;fat16.c: 912: {;fat16.c: 913: if(buffer[cntr] != _get_mbr(cntr))
  5887  005C20  0E80               	movlw	low _buffer
  5888  005C22  242E               	addwf	fat_get_format_status@cntr,w,c
  5889  005C24  6ED9               	movwf	fsr2l,c
  5890  005C26  0E03               	movlw	high _buffer
  5891  005C28  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5892  005C2A  6EDA               	movwf	fsr2h,c
  5893  005C2C  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5894  005C30  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5895  005C34  EC47  F029         	call	__get_mbr	;wreg free
  5896  005C38  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5897  005C3A  50DE               	movf	postinc2,w,c
  5898  005C3C  182D               	xorwf	??_fat_get_format_status+1,w,c
  5899  005C3E  B4D8               	btfsc	status,2,c
  5900  005C40  D002               	goto	l2164
  5901                           
  5902                           ;fat16.c: 914: {;fat16.c: 915: return DRIVE_NOT_FORMATED;
  5903  005C42  0E00               	movlw	0
  5904  005C44  0012               	return	
  5905  005C46                     l2164:
  5906  005C46  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5907  005C48  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5908  005C4A  D7E6               	goto	l13153
  5909  005C4C                     u10020:
  5910                           
  5911                           ;fat16.c: 916: };fat16.c: 917: };fat16.c: 920: flash_page_read(1, buffer);
  5912  005C4C  0E00               	movlw	0
  5913  005C4E  6E29               	movwf	flash_page_read@page+1,c
  5914  005C50  0E01               	movlw	1
  5915  005C52  6E28               	movwf	flash_page_read@page,c
  5916  005C54  0E80               	movlw	low _buffer
  5917  005C56  6E2A               	movwf	flash_page_read@data,c
  5918  005C58  0E03               	movlw	high _buffer
  5919  005C5A  6E2B               	movwf	flash_page_read@data+1,c
  5920  005C5C  ECEA  F03D         	call	_flash_page_read	;wreg free
  5921                           
  5922                           ;fat16.c: 921: for(cntr=0; cntr<512; ++cntr)
  5923  005C60  0E00               	movlw	0
  5924  005C62  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5925  005C64  0E00               	movlw	0
  5926  005C66  6E2E               	movwf	fat_get_format_status@cntr,c
  5927  005C68                     l13171:
  5928  005C68  0E02               	movlw	2
  5929  005C6A  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5930  005C6C  B0D8               	btfsc	status,0,c
  5931  005C6E  D016               	goto	u10050
  5932                           
  5933                           ;fat16.c: 922: {;fat16.c: 923: if(buffer[cntr] != _get_fbr(cntr))
  5934  005C70  0E80               	movlw	low _buffer
  5935  005C72  242E               	addwf	fat_get_format_status@cntr,w,c
  5936  005C74  6ED9               	movwf	fsr2l,c
  5937  005C76  0E03               	movlw	high _buffer
  5938  005C78  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5939  005C7A  6EDA               	movwf	fsr2h,c
  5940  005C7C  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  5941  005C80  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  5942  005C84  EC66  F00D         	call	__get_fbr	;wreg free
  5943  005C88  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5944  005C8A  50DE               	movf	postinc2,w,c
  5945  005C8C  182D               	xorwf	??_fat_get_format_status+1,w,c
  5946  005C8E  B4D8               	btfsc	status,2,c
  5947  005C90  D002               	goto	l2168
  5948                           
  5949                           ;fat16.c: 924: {;fat16.c: 925: return DRIVE_NOT_FORMATED;
  5950  005C92  0E00               	movlw	0
  5951  005C94  0012               	return	
  5952  005C96                     l2168:
  5953  005C96  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5954  005C98  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5955  005C9A  D7E6               	goto	l13171
  5956  005C9C                     u10050:
  5957                           
  5958                           ;fat16.c: 926: };fat16.c: 927: };fat16.c: 930: return DRIVE_FORMATED;
  5959  005C9C  0E01               	movlw	1
  5960  005C9E  0012               	return	
  5961  005CA0                     __end_of_fat_get_format_status:
  5962                           	opt stack 0
  5963                           tblptru	equ	0xFF8
  5964                           tblptrh	equ	0xFF7
  5965                           tblptrl	equ	0xFF6
  5966                           tablat	equ	0xFF5
  5967                           intcon	equ	0xFF2
  5968                           intcon3	equ	0xFF0
  5969                           postinc0	equ	0xFEE
  5970                           wreg	equ	0xFE8
  5971                           postdec1	equ	0xFE5
  5972                           plusw1	equ	0xFE3
  5973                           fsr1h	equ	0xFE2
  5974                           fsr1l	equ	0xFE1
  5975                           postinc2	equ	0xFDE
  5976                           plusw2	equ	0xFDB
  5977                           fsr2h	equ	0xFDA
  5978                           fsr2l	equ	0xFD9
  5979                           status	equ	0xFD8
  5980                           
  5981 ;; *************** function _fat_format *****************
  5982 ;; Defined at:
  5983 ;;		line 933 in file "fat16.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;		None
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  cntr            2   36[COMRAM] unsigned int 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      void 
  5990 ;; Registers used:
  5991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6001 ;;Total ram usage:        2 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    5
  6004 ;; This function calls:
  6005 ;;		__get_data
  6006 ;;		__get_fat
  6007 ;;		__get_fbr
  6008 ;;		__get_mbr
  6009 ;;		__get_root
  6010 ;;		_flash_page_write
  6011 ;; This function is called by:
  6012 ;;		_fat_init
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text22
  6017  0025F4                     __ptext22:
  6018                           	opt stack 0
  6019  0025F4                     _fat_format:
  6020                           	opt stack 23
  6021                           
  6022                           ;fat16.c: 935: uint16_t cntr;;fat16.c: 938: for(cntr=0; cntr<512; ++cntr)
  6023                           
  6024                           ;incstack = 0
  6025  0025F4  0E00               	movlw	0
  6026  0025F6  6E26               	movwf	fat_format@cntr+1,c
  6027  0025F8  0E00               	movlw	0
  6028  0025FA  6E25               	movwf	fat_format@cntr,c
  6029  0025FC                     l13191:
  6030  0025FC  0E02               	movlw	2
  6031  0025FE  5C26               	subwf	fat_format@cntr+1,w,c
  6032  002600  B0D8               	btfsc	status,0,c
  6033  002602  D010               	goto	u10070
  6034                           
  6035                           ;fat16.c: 939: {;fat16.c: 940: buffer[cntr] = _get_mbr(cntr);
  6036  002604  0E80               	movlw	low _buffer
  6037  002606  2425               	addwf	fat_format@cntr,w,c
  6038  002608  6ED9               	movwf	fsr2l,c
  6039  00260A  0E03               	movlw	high _buffer
  6040  00260C  2026               	addwfc	fat_format@cntr+1,w,c
  6041  00260E  6EDA               	movwf	fsr2h,c
  6042  002610  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
  6043  002614  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
  6044  002618  EC47  F029         	call	__get_mbr	;wreg free
  6045  00261C  6EDF               	movwf	indf2,c
  6046  00261E  4A25               	infsnz	fat_format@cntr,f,c
  6047  002620  2A26               	incf	fat_format@cntr+1,f,c
  6048  002622  D7EC               	goto	l13191
  6049  002624                     u10070:
  6050                           
  6051                           ;fat16.c: 941: };fat16.c: 942: flash_page_write(0, buffer);
  6052  002624  0E00               	movlw	0
  6053  002626  6E21               	movwf	flash_page_write@page+1,c
  6054  002628  0E00               	movlw	0
  6055  00262A  6E20               	movwf	flash_page_write@page,c
  6056  00262C  0E80               	movlw	low _buffer
  6057  00262E  6E22               	movwf	flash_page_write@data,c
  6058  002630  0E03               	movlw	high _buffer
  6059  002632  6E23               	movwf	flash_page_write@data+1,c
  6060  002634  EC15  F03A         	call	_flash_page_write	;wreg free
  6061                           
  6062                           ;fat16.c: 945: for(cntr=0; cntr<512; ++cntr)
  6063  002638  0E00               	movlw	0
  6064  00263A  6E26               	movwf	fat_format@cntr+1,c
  6065  00263C  0E00               	movlw	0
  6066  00263E  6E25               	movwf	fat_format@cntr,c
  6067  002640                     l13205:
  6068  002640  0E02               	movlw	2
  6069  002642  5C26               	subwf	fat_format@cntr+1,w,c
  6070  002644  B0D8               	btfsc	status,0,c
  6071  002646  D010               	goto	u10090
  6072                           
  6073                           ;fat16.c: 946: {;fat16.c: 947: buffer[cntr] = _get_fbr(cntr);
  6074  002648  0E80               	movlw	low _buffer
  6075  00264A  2425               	addwf	fat_format@cntr,w,c
  6076  00264C  6ED9               	movwf	fsr2l,c
  6077  00264E  0E03               	movlw	high _buffer
  6078  002650  2026               	addwfc	fat_format@cntr+1,w,c
  6079  002652  6EDA               	movwf	fsr2h,c
  6080  002654  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
  6081  002658  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
  6082  00265C  EC66  F00D         	call	__get_fbr	;wreg free
  6083  002660  6EDF               	movwf	indf2,c
  6084  002662  4A25               	infsnz	fat_format@cntr,f,c
  6085  002664  2A26               	incf	fat_format@cntr+1,f,c
  6086  002666  D7EC               	goto	l13205
  6087  002668                     u10090:
  6088                           
  6089                           ;fat16.c: 948: };fat16.c: 949: flash_page_write(1, buffer);
  6090  002668  0E00               	movlw	0
  6091  00266A  6E21               	movwf	flash_page_write@page+1,c
  6092  00266C  0E01               	movlw	1
  6093  00266E  6E20               	movwf	flash_page_write@page,c
  6094  002670  0E80               	movlw	low _buffer
  6095  002672  6E22               	movwf	flash_page_write@data,c
  6096  002674  0E03               	movlw	high _buffer
  6097  002676  6E23               	movwf	flash_page_write@data+1,c
  6098  002678  EC15  F03A         	call	_flash_page_write	;wreg free
  6099                           
  6100                           ;fat16.c: 952: for(cntr=0; cntr<512; ++cntr)
  6101  00267C  0E00               	movlw	0
  6102  00267E  6E26               	movwf	fat_format@cntr+1,c
  6103  002680  0E00               	movlw	0
  6104  002682  6E25               	movwf	fat_format@cntr,c
  6105  002684                     l13219:
  6106  002684  0E02               	movlw	2
  6107  002686  5C26               	subwf	fat_format@cntr+1,w,c
  6108  002688  B0D8               	btfsc	status,0,c
  6109  00268A  D010               	goto	u10110
  6110                           
  6111                           ;fat16.c: 953: {;fat16.c: 954: buffer[cntr] = _get_fat(cntr);
  6112  00268C  0E80               	movlw	low _buffer
  6113  00268E  2425               	addwf	fat_format@cntr,w,c
  6114  002690  6ED9               	movwf	fsr2l,c
  6115  002692  0E03               	movlw	high _buffer
  6116  002694  2026               	addwfc	fat_format@cntr+1,w,c
  6117  002696  6EDA               	movwf	fsr2h,c
  6118  002698  C025  F001         	movff	fat_format@cntr,__get_fat@idx
  6119  00269C  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
  6120  0026A0  ECBF  F039         	call	__get_fat	;wreg free
  6121  0026A4  6EDF               	movwf	indf2,c
  6122  0026A6  4A25               	infsnz	fat_format@cntr,f,c
  6123  0026A8  2A26               	incf	fat_format@cntr+1,f,c
  6124  0026AA  D7EC               	goto	l13219
  6125  0026AC                     u10110:
  6126                           
  6127                           ;fat16.c: 955: };fat16.c: 956: flash_page_write(2, buffer);
  6128  0026AC  0E00               	movlw	0
  6129  0026AE  6E21               	movwf	flash_page_write@page+1,c
  6130  0026B0  0E02               	movlw	2
  6131  0026B2  6E20               	movwf	flash_page_write@page,c
  6132  0026B4  0E80               	movlw	low _buffer
  6133  0026B6  6E22               	movwf	flash_page_write@data,c
  6134  0026B8  0E03               	movlw	high _buffer
  6135  0026BA  6E23               	movwf	flash_page_write@data+1,c
  6136  0026BC  EC15  F03A         	call	_flash_page_write	;wreg free
  6137                           
  6138                           ;fat16.c: 959: for(cntr=0; cntr<512; ++cntr)
  6139  0026C0  0E00               	movlw	0
  6140  0026C2  6E26               	movwf	fat_format@cntr+1,c
  6141  0026C4  0E00               	movlw	0
  6142  0026C6  6E25               	movwf	fat_format@cntr,c
  6143  0026C8                     l13233:
  6144  0026C8  0E02               	movlw	2
  6145  0026CA  5C26               	subwf	fat_format@cntr+1,w,c
  6146  0026CC  B0D8               	btfsc	status,0,c
  6147  0026CE  D00B               	goto	u10130
  6148                           
  6149                           ;fat16.c: 960: {;fat16.c: 961: buffer[cntr] = 0x00;
  6150  0026D0  0E80               	movlw	low _buffer
  6151  0026D2  2425               	addwf	fat_format@cntr,w,c
  6152  0026D4  6ED9               	movwf	fsr2l,c
  6153  0026D6  0E03               	movlw	high _buffer
  6154  0026D8  2026               	addwfc	fat_format@cntr+1,w,c
  6155  0026DA  6EDA               	movwf	fsr2h,c
  6156  0026DC  0E00               	movlw	0
  6157  0026DE  6EDF               	movwf	indf2,c
  6158  0026E0  4A25               	infsnz	fat_format@cntr,f,c
  6159  0026E2  2A26               	incf	fat_format@cntr+1,f,c
  6160  0026E4  D7F1               	goto	l13233
  6161  0026E6                     u10130:
  6162                           
  6163                           ;fat16.c: 962: };fat16.c: 963: for(cntr=2+1; cntr<=33; ++cntr)
  6164  0026E6  0E00               	movlw	0
  6165  0026E8  6E26               	movwf	fat_format@cntr+1,c
  6166  0026EA  0E03               	movlw	3
  6167  0026EC  6E25               	movwf	fat_format@cntr,c
  6168  0026EE                     l13245:
  6169  0026EE  5026               	movf	fat_format@cntr+1,w,c
  6170  0026F0  E111               	bnz	l13255
  6171  0026F2  0E22               	movlw	34
  6172  0026F4  5C25               	subwf	fat_format@cntr,w,c
  6173  0026F6  B0D8               	btfsc	status,0,c
  6174  0026F8  D00D               	goto	u10150
  6175                           
  6176                           ;fat16.c: 964: {;fat16.c: 965: flash_page_write(cntr, buffer);
  6177  0026FA  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  6178  0026FE  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  6179  002702  0E80               	movlw	low _buffer
  6180  002704  6E22               	movwf	flash_page_write@data,c
  6181  002706  0E03               	movlw	high _buffer
  6182  002708  6E23               	movwf	flash_page_write@data+1,c
  6183  00270A  EC15  F03A         	call	_flash_page_write	;wreg free
  6184  00270E  4A25               	infsnz	fat_format@cntr,f,c
  6185  002710  2A26               	incf	fat_format@cntr+1,f,c
  6186  002712  D7ED               	goto	l13245
  6187  002714                     u10150:
  6188  002714                     l13255:
  6189                           
  6190                           ;fat16.c: 966: };fat16.c: 969: for(cntr=0; cntr<512; ++cntr)
  6191  002714  0E00               	movlw	0
  6192  002716  6E26               	movwf	fat_format@cntr+1,c
  6193  002718  0E00               	movlw	0
  6194  00271A  6E25               	movwf	fat_format@cntr,c
  6195  00271C                     l13257:
  6196  00271C  0E02               	movlw	2
  6197  00271E  5C26               	subwf	fat_format@cntr+1,w,c
  6198  002720  B0D8               	btfsc	status,0,c
  6199  002722  D010               	goto	u10170
  6200                           
  6201                           ;fat16.c: 970: {;fat16.c: 971: buffer[cntr] = _get_root(cntr);
  6202  002724  0E80               	movlw	low _buffer
  6203  002726  2425               	addwf	fat_format@cntr,w,c
  6204  002728  6ED9               	movwf	fsr2l,c
  6205  00272A  0E03               	movlw	high _buffer
  6206  00272C  2026               	addwfc	fat_format@cntr+1,w,c
  6207  00272E  6EDA               	movwf	fsr2h,c
  6208  002730  C025  F001         	movff	fat_format@cntr,__get_root@idx
  6209  002734  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
  6210  002738  EC8D  F019         	call	__get_root	;wreg free
  6211  00273C  6EDF               	movwf	indf2,c
  6212  00273E  4A25               	infsnz	fat_format@cntr,f,c
  6213  002740  2A26               	incf	fat_format@cntr+1,f,c
  6214  002742  D7EC               	goto	l13257
  6215  002744                     u10170:
  6216                           
  6217                           ;fat16.c: 972: };fat16.c: 973: flash_page_write(34, buffer);
  6218  002744  0E00               	movlw	0
  6219  002746  6E21               	movwf	flash_page_write@page+1,c
  6220  002748  0E22               	movlw	34
  6221  00274A  6E20               	movwf	flash_page_write@page,c
  6222  00274C  0E80               	movlw	low _buffer
  6223  00274E  6E22               	movwf	flash_page_write@data,c
  6224  002750  0E03               	movlw	high _buffer
  6225  002752  6E23               	movwf	flash_page_write@data+1,c
  6226  002754  EC15  F03A         	call	_flash_page_write	;wreg free
  6227                           
  6228                           ;fat16.c: 976: for(cntr=0; cntr<512; ++cntr)
  6229  002758  0E00               	movlw	0
  6230  00275A  6E26               	movwf	fat_format@cntr+1,c
  6231  00275C  0E00               	movlw	0
  6232  00275E  6E25               	movwf	fat_format@cntr,c
  6233  002760                     l13271:
  6234  002760  0E02               	movlw	2
  6235  002762  5C26               	subwf	fat_format@cntr+1,w,c
  6236  002764  B0D8               	btfsc	status,0,c
  6237  002766  D00B               	goto	u10190
  6238                           
  6239                           ;fat16.c: 977: {;fat16.c: 978: buffer[cntr] = 0x00;
  6240  002768  0E80               	movlw	low _buffer
  6241  00276A  2425               	addwf	fat_format@cntr,w,c
  6242  00276C  6ED9               	movwf	fsr2l,c
  6243  00276E  0E03               	movlw	high _buffer
  6244  002770  2026               	addwfc	fat_format@cntr+1,w,c
  6245  002772  6EDA               	movwf	fsr2h,c
  6246  002774  0E00               	movlw	0
  6247  002776  6EDF               	movwf	indf2,c
  6248  002778  4A25               	infsnz	fat_format@cntr,f,c
  6249  00277A  2A26               	incf	fat_format@cntr+1,f,c
  6250  00277C  D7F1               	goto	l13271
  6251  00277E                     u10190:
  6252                           
  6253                           ;fat16.c: 979: };fat16.c: 980: for(cntr=34+1; cntr<=37; ++cntr)
  6254  00277E  0E00               	movlw	0
  6255  002780  6E26               	movwf	fat_format@cntr+1,c
  6256  002782  0E23               	movlw	35
  6257  002784  6E25               	movwf	fat_format@cntr,c
  6258  002786                     l13283:
  6259  002786  5026               	movf	fat_format@cntr+1,w,c
  6260  002788  E111               	bnz	l13293
  6261  00278A  0E26               	movlw	38
  6262  00278C  5C25               	subwf	fat_format@cntr,w,c
  6263  00278E  B0D8               	btfsc	status,0,c
  6264  002790  D00D               	goto	u10210
  6265                           
  6266                           ;fat16.c: 981: {;fat16.c: 982: flash_page_write(cntr, buffer);
  6267  002792  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  6268  002796  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  6269  00279A  0E80               	movlw	low _buffer
  6270  00279C  6E22               	movwf	flash_page_write@data,c
  6271  00279E  0E03               	movlw	high _buffer
  6272  0027A0  6E23               	movwf	flash_page_write@data+1,c
  6273  0027A2  EC15  F03A         	call	_flash_page_write	;wreg free
  6274  0027A6  4A25               	infsnz	fat_format@cntr,f,c
  6275  0027A8  2A26               	incf	fat_format@cntr+1,f,c
  6276  0027AA  D7ED               	goto	l13283
  6277  0027AC                     u10210:
  6278  0027AC                     l13293:
  6279                           
  6280                           ;fat16.c: 983: };fat16.c: 986: for(cntr=0; cntr<512; ++cntr)
  6281  0027AC  0E00               	movlw	0
  6282  0027AE  6E26               	movwf	fat_format@cntr+1,c
  6283  0027B0  0E00               	movlw	0
  6284  0027B2  6E25               	movwf	fat_format@cntr,c
  6285  0027B4                     l13295:
  6286  0027B4  0E02               	movlw	2
  6287  0027B6  5C26               	subwf	fat_format@cntr+1,w,c
  6288  0027B8  B0D8               	btfsc	status,0,c
  6289  0027BA  D010               	goto	u10230
  6290                           
  6291                           ;fat16.c: 987: {;fat16.c: 988: buffer[cntr] = _get_data(cntr);
  6292  0027BC  0E80               	movlw	low _buffer
  6293  0027BE  2425               	addwf	fat_format@cntr,w,c
  6294  0027C0  6ED9               	movwf	fsr2l,c
  6295  0027C2  0E03               	movlw	high _buffer
  6296  0027C4  2026               	addwfc	fat_format@cntr+1,w,c
  6297  0027C6  6EDA               	movwf	fsr2h,c
  6298  0027C8  C025  F001         	movff	fat_format@cntr,__get_data@idx
  6299  0027CC  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
  6300  0027D0  ECEA  F03E         	call	__get_data	;wreg free
  6301  0027D4  6EDF               	movwf	indf2,c
  6302  0027D6  4A25               	infsnz	fat_format@cntr,f,c
  6303  0027D8  2A26               	incf	fat_format@cntr+1,f,c
  6304  0027DA  D7EC               	goto	l13295
  6305  0027DC                     u10230:
  6306                           
  6307                           ;fat16.c: 989: };fat16.c: 990: flash_page_write(38, buffer);
  6308  0027DC  0E00               	movlw	0
  6309  0027DE  6E21               	movwf	flash_page_write@page+1,c
  6310  0027E0  0E26               	movlw	38
  6311  0027E2  6E20               	movwf	flash_page_write@page,c
  6312  0027E4  0E80               	movlw	low _buffer
  6313  0027E6  6E22               	movwf	flash_page_write@data,c
  6314  0027E8  0E03               	movlw	high _buffer
  6315  0027EA  6E23               	movwf	flash_page_write@data+1,c
  6316  0027EC  EC15  F03A         	call	_flash_page_write	;wreg free
  6317  0027F0  0012               	return		;funcret
  6318  0027F2                     __end_of_fat_format:
  6319                           	opt stack 0
  6320                           tblptru	equ	0xFF8
  6321                           tblptrh	equ	0xFF7
  6322                           tblptrl	equ	0xFF6
  6323                           tablat	equ	0xFF5
  6324                           intcon	equ	0xFF2
  6325                           intcon3	equ	0xFF0
  6326                           postinc0	equ	0xFEE
  6327                           wreg	equ	0xFE8
  6328                           postdec1	equ	0xFE5
  6329                           plusw1	equ	0xFE3
  6330                           fsr1h	equ	0xFE2
  6331                           fsr1l	equ	0xFE1
  6332                           indf2	equ	0xFDF
  6333                           postinc2	equ	0xFDE
  6334                           plusw2	equ	0xFDB
  6335                           fsr2h	equ	0xFDA
  6336                           fsr2l	equ	0xFD9
  6337                           status	equ	0xFD8
  6338                           
  6339 ;; *************** function __get_root *****************
  6340 ;; Defined at:
  6341 ;;		line 819 in file "fat16.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  idx             2    0[COMRAM] unsigned int 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      unsigned char 
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;Total ram usage:        6 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_fat_format
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text23
  6369  00331A                     __ptext23:
  6370                           	opt stack 0
  6371  00331A                     __get_root:
  6372                           	opt stack 27
  6373                           
  6374                           ;fat16.c: 821: if (idx < 0x20)
  6375                           
  6376                           ;incstack = 0
  6377  00331A  5002               	movf	__get_root@idx+1,w,c
  6378  00331C  E11D               	bnz	l12709
  6379  00331E  0E20               	movlw	32
  6380  003320  5C01               	subwf	__get_root@idx,w,c
  6381  003322  B0D8               	btfsc	status,0,c
  6382  003324  D019               	goto	l2129
  6383                           
  6384                           ;fat16.c: 822: {;fat16.c: 823: if (idx < 11)
  6385  003326  5002               	movf	__get_root@idx+1,w,c
  6386  003328  E110               	bnz	l12703
  6387  00332A  0E0B               	movlw	11
  6388  00332C  5C01               	subwf	__get_root@idx,w,c
  6389  00332E  B0D8               	btfsc	status,0,c
  6390  003330  D00C               	goto	l2127
  6391                           
  6392                           ;fat16.c: 824: {;fat16.c: 825: return "SolarChargr"[idx];
  6393  003332  0EDD               	movlw	low STR_9
  6394  003334  2401               	addwf	__get_root@idx,w,c
  6395  003336  6EF6               	movwf	tblptrl,c
  6396  003338  0E8F               	movlw	high STR_9
  6397  00333A  2002               	addwfc	__get_root@idx+1,w,c
  6398  00333C  6EF7               	movwf	tblptrh,c
  6399  00333E                     	if	1	;There are 3 active tblptr bytes
  6400  00333E  6AF8               	clrf	tblptru,c
  6401  003340  0E00               	movlw	low (__mediumconst shr (0+16))
  6402  003342  22F8               	addwfc	tblptru,f,c
  6403  003344                     	endif
  6404  003344  0008               	tblrd		*
  6405  003346  50F5               	movf	tablat,w,c
  6406  003348  0012               	return	
  6407  00334A                     l2127:
  6408  00334A                     l12703:
  6409                           
  6410                           ;fat16.c: 826: };fat16.c: 827: if(idx==11)
  6411  00334A  0E0B               	movlw	11
  6412  00334C  1801               	xorwf	__get_root@idx,w,c
  6413  00334E  1002               	iorwf	__get_root@idx+1,w,c
  6414  003350  A4D8               	btfss	status,2,c
  6415  003352  D002               	goto	l2129
  6416                           
  6417                           ;fat16.c: 828: {;fat16.c: 829: return 0x08;
  6418  003354  0E08               	movlw	8
  6419  003356  0012               	return	
  6420  003358                     l2129:
  6421  003358                     l12709:
  6422                           
  6423                           ;fat16.c: 830: };fat16.c: 831: };fat16.c: 832: if (idx < 0x40)
  6424  003358  5002               	movf	__get_root@idx+1,w,c
  6425  00335A  E103               	bnz	u9581
  6426  00335C  0E40               	movlw	64
  6427  00335E  5C01               	subwf	__get_root@idx,w,c
  6428  003360  B0D8               	btfsc	status,0,c
  6429  003362                     u9581:
  6430  003362  D0A4               	goto	l2155
  6431                           
  6432                           ;fat16.c: 833: {;fat16.c: 834: idx -= 0x20;
  6433  003364  0E20               	movlw	32
  6434  003366  5E01               	subwf	__get_root@idx,f,c
  6435  003368  0E00               	movlw	0
  6436  00336A  5A02               	subwfb	__get_root@idx+1,f,c
  6437                           
  6438                           ;fat16.c: 835: if (idx < 0+8)
  6439  00336C  5002               	movf	__get_root@idx+1,w,c
  6440  00336E  E110               	bnz	l12717
  6441  003370  0E08               	movlw	8
  6442  003372  5C01               	subwf	__get_root@idx,w,c
  6443  003374  B0D8               	btfsc	status,0,c
  6444  003376  D00C               	goto	l2131
  6445                           
  6446                           ;fat16.c: 836: {;fat16.c: 837: return "FILE    "[idx];
  6447  003378  0EE9               	movlw	low STR_10
  6448  00337A  2401               	addwf	__get_root@idx,w,c
  6449  00337C  6EF6               	movwf	tblptrl,c
  6450  00337E  0E8F               	movlw	high STR_10
  6451  003380  2002               	addwfc	__get_root@idx+1,w,c
  6452  003382  6EF7               	movwf	tblptrh,c
  6453  003384                     	if	1	;There are 3 active tblptr bytes
  6454  003384  6AF8               	clrf	tblptru,c
  6455  003386  0E00               	movlw	low (__mediumconst shr (0+16))
  6456  003388  22F8               	addwfc	tblptru,f,c
  6457  00338A                     	endif
  6458  00338A  0008               	tblrd		*
  6459  00338C  50F5               	movf	tablat,w,c
  6460  00338E  0012               	return	
  6461  003390                     l2131:
  6462  003390                     l12717:
  6463                           
  6464                           ;fat16.c: 838: };fat16.c: 839: if (idx < 11)
  6465  003390  5002               	movf	__get_root@idx+1,w,c
  6466  003392  E146               	bnz	l12809
  6467  003394  0E0B               	movlw	11
  6468  003396  5C01               	subwf	__get_root@idx,w,c
  6469  003398  B0D8               	btfsc	status,0,c
  6470  00339A  D042               	goto	l2133
  6471                           
  6472                           ;fat16.c: 840: {;fat16.c: 841: return "TXT"[idx-8];
  6473  00339C  0EF8               	movlw	248
  6474  00339E  6E03               	movwf	??__get_root& (0+255),c
  6475  0033A0  0EFF               	movlw	255
  6476  0033A2  6E04               	movwf	(??__get_root+1)& (0+255),c
  6477  0033A4  C001  F005         	movff	__get_root@idx,??__get_root+2
  6478  0033A8  C002  F006         	movff	__get_root@idx+1,??__get_root+3
  6479  0033AC  5003               	movf	??__get_root,w,c
  6480  0033AE  2605               	addwf	??__get_root+2,f,c
  6481  0033B0  5004               	movf	??__get_root+1,w,c
  6482  0033B2  2206               	addwfc	??__get_root+3,f,c
  6483  0033B4  0EFB               	movlw	low STR_11
  6484  0033B6  2405               	addwf	??__get_root+2,w,c
  6485  0033B8  6EF6               	movwf	tblptrl,c
  6486  0033BA  0E8F               	movlw	high STR_11
  6487  0033BC  2006               	addwfc	??__get_root+3,w,c
  6488  0033BE  6EF7               	movwf	tblptrh,c
  6489  0033C0                     	if	1	;There are 3 active tblptr bytes
  6490  0033C0  6AF8               	clrf	tblptru,c
  6491  0033C2  0E00               	movlw	low (__mediumconst shr (0+16))
  6492  0033C4  22F8               	addwfc	tblptru,f,c
  6493  0033C6                     	endif
  6494  0033C6  0008               	tblrd		*
  6495  0033C8  50F5               	movf	tablat,w,c
  6496  0033CA  0012               	return	
  6497  0033CC                     
  6498                           ;fat16.c: 846: return 0x20;
  6499  0033CC  0E20               	movlw	32
  6500  0033CE  0012               	return	
  6501  0033D0                     
  6502                           ;fat16.c: 848: return 0x06;
  6503  0033D0  0E06               	movlw	6
  6504  0033D2  0012               	return	
  6505  0033D4                     
  6506                           ;fat16.c: 850: return 0x28;
  6507  0033D4  0E28               	movlw	40
  6508  0033D6  0012               	return	
  6509  0033D8                     
  6510                           ;fat16.c: 852: return 0x78;
  6511  0033D8  0E78               	movlw	120
  6512  0033DA  0012               	return	
  6513  0033DC                     
  6514                           ;fat16.c: 854: return 0xDE;
  6515  0033DC  0EDE               	movlw	222
  6516  0033DE  0012               	return	
  6517  0033E0                     
  6518                           ;fat16.c: 856: return 0x38;
  6519  0033E0  0E38               	movlw	56
  6520  0033E2  0012               	return	
  6521  0033E4                     
  6522                           ;fat16.c: 858: return 0x5F;
  6523  0033E4  0E5F               	movlw	95
  6524  0033E6  0012               	return	
  6525  0033E8                     
  6526                           ;fat16.c: 860: return 0x4B;
  6527  0033E8  0E4B               	movlw	75
  6528  0033EA  0012               	return	
  6529  0033EC                     
  6530                           ;fat16.c: 862: return 0x00;
  6531  0033EC  0E00               	movlw	0
  6532  0033EE  0012               	return	
  6533  0033F0                     
  6534                           ;fat16.c: 864: return 0x00;
  6535  0033F0  0E00               	movlw	0
  6536  0033F2  0012               	return	
  6537  0033F4                     
  6538                           ;fat16.c: 866: return 0x04;
  6539  0033F4  0E04               	movlw	4
  6540  0033F6  0012               	return	
  6541  0033F8                     
  6542                           ;fat16.c: 868: return 0x77;
  6543  0033F8  0E77               	movlw	119
  6544  0033FA  0012               	return	
  6545  0033FC                     
  6546                           ;fat16.c: 870: return 0xDE;
  6547  0033FC  0EDE               	movlw	222
  6548  0033FE  0012               	return	
  6549  003400                     
  6550                           ;fat16.c: 872: return 0x38;
  6551  003400  0E38               	movlw	56
  6552  003402  0012               	return	
  6553  003404                     
  6554                           ;fat16.c: 874: return ((unsigned char)((((uint16_t)2))&0xFF));
  6555  003404  0E02               	movlw	2
  6556  003406  0012               	return	
  6557  003408                     
  6558                           ;fat16.c: 876: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  6559  003408  0E00               	movlw	0
  6560  00340A  0012               	return	
  6561  00340C                     
  6562                           ;fat16.c: 878: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0xF
      +                          F));
  6563  00340C  0E0C               	movlw	12
  6564  00340E  0012               	return	
  6565  003410                     
  6566                           ;fat16.c: 881: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>8
      +                          )&0xFF));
  6567  003410  0E00               	movlw	0
  6568  003412  0012               	return	
  6569  003414                     
  6570                           ;fat16.c: 884: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF)
      +                          ))&0xFF));
  6571  003414  0E00               	movlw	0
  6572  003416  0012               	return	
  6573  003418                     
  6574                           ;fat16.c: 887: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  6575  003418  0E00               	movlw	0
  6576  00341A  0012               	return	
  6577  00341C                     
  6578                           ;fat16.c: 890: return 0x00;
  6579  00341C  0E00               	movlw	0
  6580  00341E  0012               	return	
  6581  003420                     l2133:
  6582  003420                     l12809:
  6583  003420  C001  F003         	movff	__get_root@idx,??__get_root
  6584  003424  C002  F004         	movff	__get_root@idx+1,??__get_root+1
  6585                           
  6586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6587                           ; Switch size 1, requested type "space"
  6588                           ; Number of cases is 1, Range of values is 0 to 0
  6589                           ; switch strategies available:
  6590                           ; Name         Instructions Cycles
  6591                           ; simple_byte            4     3 (average)
  6592                           ;	Chosen strategy is simple_byte
  6593  003428  5004               	movf	??__get_root+1,w,c
  6594  00342A  0A00               	xorlw	0	; case 0
  6595  00342C  A4D8               	btfss	status,2,c
  6596  00342E  D7F6               	goto	l2154
  6597                           
  6598                           ; Switch size 1, requested type "space"
  6599                           ; Number of cases is 20, Range of values is 11 to 31
  6600                           ; switch strategies available:
  6601                           ; Name         Instructions Cycles
  6602                           ; simple_byte           61    31 (average)
  6603                           ;	Chosen strategy is simple_byte
  6604  003430  5003               	movf	??__get_root,w,c
  6605  003432  0A0B               	xorlw	11	; case 11
  6606  003434  B4D8               	btfsc	status,2,c
  6607  003436  D7CA               	goto	l2134
  6608  003438  0A06               	xorlw	6	; case 13
  6609  00343A  B4D8               	btfsc	status,2,c
  6610  00343C  D7C9               	goto	l2135
  6611  00343E  0A03               	xorlw	3	; case 14
  6612  003440  B4D8               	btfsc	status,2,c
  6613  003442  D7C8               	goto	l2136
  6614  003444  0A01               	xorlw	1	; case 15
  6615  003446  B4D8               	btfsc	status,2,c
  6616  003448  D7C7               	goto	l2137
  6617  00344A  0A1F               	xorlw	31	; case 16
  6618  00344C  B4D8               	btfsc	status,2,c
  6619  00344E  D7C6               	goto	l2138
  6620  003450  0A01               	xorlw	1	; case 17
  6621  003452  B4D8               	btfsc	status,2,c
  6622  003454  D7C5               	goto	l2139
  6623  003456  0A03               	xorlw	3	; case 18
  6624  003458  B4D8               	btfsc	status,2,c
  6625  00345A  D7C4               	goto	l2140
  6626  00345C  0A01               	xorlw	1	; case 19
  6627  00345E  B4D8               	btfsc	status,2,c
  6628  003460  D7C3               	goto	l2141
  6629  003462  0A07               	xorlw	7	; case 20
  6630  003464  B4D8               	btfsc	status,2,c
  6631  003466  D7C2               	goto	l2142
  6632  003468  0A01               	xorlw	1	; case 21
  6633  00346A  B4D8               	btfsc	status,2,c
  6634  00346C  D7C1               	goto	l2143
  6635  00346E  0A03               	xorlw	3	; case 22
  6636  003470  B4D8               	btfsc	status,2,c
  6637  003472  D7C0               	goto	l2144
  6638  003474  0A01               	xorlw	1	; case 23
  6639  003476  B4D8               	btfsc	status,2,c
  6640  003478  D7BF               	goto	l2145
  6641  00347A  0A0F               	xorlw	15	; case 24
  6642  00347C  B4D8               	btfsc	status,2,c
  6643  00347E  D7BE               	goto	l2146
  6644  003480  0A01               	xorlw	1	; case 25
  6645  003482  B4D8               	btfsc	status,2,c
  6646  003484  D7BD               	goto	l2147
  6647  003486  0A03               	xorlw	3	; case 26
  6648  003488  B4D8               	btfsc	status,2,c
  6649  00348A  D7BC               	goto	l2148
  6650  00348C  0A01               	xorlw	1	; case 27
  6651  00348E  B4D8               	btfsc	status,2,c
  6652  003490  D7BB               	goto	l2149
  6653  003492  0A07               	xorlw	7	; case 28
  6654  003494  B4D8               	btfsc	status,2,c
  6655  003496  D7BA               	goto	l2150
  6656  003498  0A01               	xorlw	1	; case 29
  6657  00349A  B4D8               	btfsc	status,2,c
  6658  00349C  D7B9               	goto	l2151
  6659  00349E  0A03               	xorlw	3	; case 30
  6660  0034A0  B4D8               	btfsc	status,2,c
  6661  0034A2  D7B8               	goto	l2152
  6662  0034A4  0A01               	xorlw	1	; case 31
  6663  0034A6  B4D8               	btfsc	status,2,c
  6664  0034A8  D7B7               	goto	l2153
  6665  0034AA  D7B8               	goto	l2154
  6666  0034AC                     l2155:
  6667                           
  6668                           ;fat16.c: 892: };fat16.c: 893: return 0X00;
  6669  0034AC  0E00               	movlw	0
  6670  0034AE  0012               	return	
  6671  0034B0                     __end_of__get_root:
  6672                           	opt stack 0
  6673                           tblptru	equ	0xFF8
  6674                           tblptrh	equ	0xFF7
  6675                           tblptrl	equ	0xFF6
  6676                           tablat	equ	0xFF5
  6677                           intcon	equ	0xFF2
  6678                           intcon3	equ	0xFF0
  6679                           postinc0	equ	0xFEE
  6680                           wreg	equ	0xFE8
  6681                           postdec1	equ	0xFE5
  6682                           plusw1	equ	0xFE3
  6683                           fsr1h	equ	0xFE2
  6684                           fsr1l	equ	0xFE1
  6685                           indf2	equ	0xFDF
  6686                           postinc2	equ	0xFDE
  6687                           plusw2	equ	0xFDB
  6688                           fsr2h	equ	0xFDA
  6689                           fsr2l	equ	0xFD9
  6690                           status	equ	0xFD8
  6691                           
  6692 ;; *************** function __get_mbr *****************
  6693 ;; Defined at:
  6694 ;;		line 646 in file "fat16.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  idx             2    0[COMRAM] unsigned int 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;		None
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  1    wreg      unsigned char 
  6701 ;; Registers used:
  6702 ;;		wreg, status,2, status,0
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6710 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6712 ;;Total ram usage:        4 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_fat_get_format_status
  6718 ;;		_fat_format
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721                           
  6722                           	psect	text24
  6723  00528E                     __ptext24:
  6724                           	opt stack 0
  6725  00528E                     __get_mbr:
  6726                           	opt stack 27
  6727                           
  6728                           ;fat16.c: 648: switch (idx)
  6729                           
  6730                           ;incstack = 0
  6731  00528E  D026               	goto	l2036
  6732  005290                     
  6733                           ;fat16.c: 651: return 0x80;
  6734  005290  0E80               	movlw	128
  6735  005292  0012               	return	
  6736  005294                     
  6737                           ;fat16.c: 653: return 0;
  6738  005294  0E00               	movlw	0
  6739  005296  0012               	return	
  6740  005298                     
  6741                           ;fat16.c: 655: return 2;
  6742  005298  0E02               	movlw	2
  6743  00529A  0012               	return	
  6744  00529C                     
  6745                           ;fat16.c: 657: return 0;
  6746  00529C  0E00               	movlw	0
  6747  00529E  0012               	return	
  6748  0052A0                     
  6749                           ;fat16.c: 659: return 0x04;
  6750  0052A0  0E04               	movlw	4
  6751  0052A2  0012               	return	
  6752  0052A4                     
  6753                           ;fat16.c: 661: return 2;
  6754  0052A4  0E02               	movlw	2
  6755  0052A6  0012               	return	
  6756  0052A8                     
  6757                           ;fat16.c: 663: return 3;
  6758  0052A8  0E03               	movlw	3
  6759  0052AA  0012               	return	
  6760  0052AC                     
  6761                           ;fat16.c: 665: return 8;
  6762  0052AC  0E08               	movlw	8
  6763  0052AE  0012               	return	
  6764  0052B0                     
  6765                           ;fat16.c: 667: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
  6766  0052B0  0E01               	movlw	1
  6767  0052B2  0012               	return	
  6768  0052B4                     
  6769                           ;fat16.c: 669: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
  6770  0052B4  0E00               	movlw	0
  6771  0052B6  0012               	return	
  6772  0052B8                     
  6773                           ;fat16.c: 671: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
  6774  0052B8  0E00               	movlw	0
  6775  0052BA  0012               	return	
  6776  0052BC                     
  6777                           ;fat16.c: 673: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6778  0052BC  0E00               	movlw	0
  6779  0052BE  0012               	return	
  6780  0052C0                     
  6781                           ;fat16.c: 675: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&0
      +                          xFF));
  6782  0052C0  0EFF               	movlw	255
  6783  0052C2  0012               	return	
  6784  0052C4                     
  6785                           ;fat16.c: 677: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))>
      +                          >8)&0xFF));
  6786  0052C4  0E1F               	movlw	31
  6787  0052C6  0012               	return	
  6788  0052C8                     
  6789                           ;fat16.c: 679: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFFF
      +                          F)))&0xFF));
  6790  0052C8  0E00               	movlw	0
  6791  0052CA  0012               	return	
  6792  0052CC                     
  6793                           ;fat16.c: 681: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
  6794  0052CC  0E00               	movlw	0
  6795  0052CE  0012               	return	
  6796  0052D0                     
  6797                           ;fat16.c: 683: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  6798  0052D0  0E55               	movlw	85
  6799  0052D2  0012               	return	
  6800  0052D4                     
  6801                           ;fat16.c: 685: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  6802  0052D4  0EAA               	movlw	170
  6803  0052D6  0012               	return	
  6804  0052D8                     
  6805                           ;fat16.c: 687: return 0X00;
  6806  0052D8  0E00               	movlw	0
  6807                           
  6808                           ;fat16.c: 688: }
  6809  0052DA  0012               	return	
  6810  0052DC                     l2036:
  6811  0052DC  C001  F003         	movff	__get_mbr@idx,??__get_mbr
  6812  0052E0  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
  6813                           
  6814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6815                           ; Switch size 1, requested type "space"
  6816                           ; Number of cases is 1, Range of values is 1 to 1
  6817                           ; switch strategies available:
  6818                           ; Name         Instructions Cycles
  6819                           ; simple_byte            4     3 (average)
  6820                           ;	Chosen strategy is simple_byte
  6821  0052E4  5004               	movf	??__get_mbr+1,w,c
  6822  0052E6  0A01               	xorlw	1	; case 1
  6823  0052E8  A4D8               	btfss	status,2,c
  6824  0052EA  D7F6               	goto	l2056
  6825                           
  6826                           ; Switch size 1, requested type "space"
  6827                           ; Number of cases is 18, Range of values is 190 to 255
  6828                           ; switch strategies available:
  6829                           ; Name         Instructions Cycles
  6830                           ; simple_byte           55    28 (average)
  6831                           ;	Chosen strategy is simple_byte
  6832  0052EC  5003               	movf	??__get_mbr,w,c
  6833  0052EE  0ABE               	xorlw	190	; case 190
  6834  0052F0  B4D8               	btfsc	status,2,c
  6835  0052F2  D7CE               	goto	l2037
  6836  0052F4  0A01               	xorlw	1	; case 191
  6837  0052F6  B4D8               	btfsc	status,2,c
  6838  0052F8  D7CD               	goto	l2039
  6839  0052FA  0A7F               	xorlw	127	; case 192
  6840  0052FC  B4D8               	btfsc	status,2,c
  6841  0052FE  D7CC               	goto	l2040
  6842  005300  0A01               	xorlw	1	; case 193
  6843  005302  B4D8               	btfsc	status,2,c
  6844  005304  D7CB               	goto	l2041
  6845  005306  0A03               	xorlw	3	; case 194
  6846  005308  B4D8               	btfsc	status,2,c
  6847  00530A  D7CA               	goto	l2042
  6848  00530C  0A01               	xorlw	1	; case 195
  6849  00530E  B4D8               	btfsc	status,2,c
  6850  005310  D7C9               	goto	l2043
  6851  005312  0A07               	xorlw	7	; case 196
  6852  005314  B4D8               	btfsc	status,2,c
  6853  005316  D7C8               	goto	l2044
  6854  005318  0A01               	xorlw	1	; case 197
  6855  00531A  B4D8               	btfsc	status,2,c
  6856  00531C  D7C7               	goto	l2045
  6857  00531E  0A03               	xorlw	3	; case 198
  6858  005320  B4D8               	btfsc	status,2,c
  6859  005322  D7C6               	goto	l2046
  6860  005324  0A01               	xorlw	1	; case 199
  6861  005326  B4D8               	btfsc	status,2,c
  6862  005328  D7C5               	goto	l2047
  6863  00532A  0A0F               	xorlw	15	; case 200
  6864  00532C  B4D8               	btfsc	status,2,c
  6865  00532E  D7C4               	goto	l2048
  6866  005330  0A01               	xorlw	1	; case 201
  6867  005332  B4D8               	btfsc	status,2,c
  6868  005334  D7C3               	goto	l2049
  6869  005336  0A03               	xorlw	3	; case 202
  6870  005338  B4D8               	btfsc	status,2,c
  6871  00533A  D7C2               	goto	l2050
  6872  00533C  0A01               	xorlw	1	; case 203
  6873  00533E  B4D8               	btfsc	status,2,c
  6874  005340  D7C1               	goto	l2051
  6875  005342  0A07               	xorlw	7	; case 204
  6876  005344  B4D8               	btfsc	status,2,c
  6877  005346  D7C0               	goto	l2052
  6878  005348  0A01               	xorlw	1	; case 205
  6879  00534A  B4D8               	btfsc	status,2,c
  6880  00534C  D7BF               	goto	l2053
  6881  00534E  0A33               	xorlw	51	; case 254
  6882  005350  B4D8               	btfsc	status,2,c
  6883  005352  D7BE               	goto	l2054
  6884  005354  0A01               	xorlw	1	; case 255
  6885  005356  B4D8               	btfsc	status,2,c
  6886  005358  D7BD               	goto	l2055
  6887  00535A  D7BE               	goto	l2056
  6888  00535C                     __end_of__get_mbr:
  6889                           	opt stack 0
  6890                           tblptru	equ	0xFF8
  6891                           tblptrh	equ	0xFF7
  6892                           tblptrl	equ	0xFF6
  6893                           tablat	equ	0xFF5
  6894                           intcon	equ	0xFF2
  6895                           intcon3	equ	0xFF0
  6896                           postinc0	equ	0xFEE
  6897                           wreg	equ	0xFE8
  6898                           postdec1	equ	0xFE5
  6899                           plusw1	equ	0xFE3
  6900                           fsr1h	equ	0xFE2
  6901                           fsr1l	equ	0xFE1
  6902                           indf2	equ	0xFDF
  6903                           postinc2	equ	0xFDE
  6904                           plusw2	equ	0xFDB
  6905                           fsr2h	equ	0xFDA
  6906                           fsr2l	equ	0xFD9
  6907                           status	equ	0xFD8
  6908                           
  6909 ;; *************** function __get_fbr *****************
  6910 ;; Defined at:
  6911 ;;		line 691 in file "fat16.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  idx             2    0[COMRAM] unsigned int 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;		None
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      unsigned char 
  6918 ;; Registers used:
  6919 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;Total ram usage:        4 bytes
  6930 ;; Hardware stack levels used:    1
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_fat_get_format_status
  6935 ;;		_fat_format
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	text25
  6940  001ACC                     __ptext25:
  6941                           	opt stack 0
  6942  001ACC                     __get_fbr:
  6943                           	opt stack 27
  6944                           
  6945                           ;fat16.c: 693: switch (idx)
  6946                           
  6947                           ;incstack = 0
  6948  001ACC  D091               	goto	l2060
  6949  001ACE                     
  6950                           ;fat16.c: 696: return 0xEB;
  6951  001ACE  0EEB               	movlw	235
  6952  001AD0  0012               	return	
  6953  001AD2                     
  6954                           ;fat16.c: 698: return 0x3C;
  6955  001AD2  0E3C               	movlw	60
  6956  001AD4  0012               	return	
  6957  001AD6                     
  6958                           ;fat16.c: 700: return 0x90;
  6959  001AD6  0E90               	movlw	144
  6960  001AD8  0012               	return	
  6961  001ADA                     
  6962                           ;fat16.c: 702: return "MSDOS5.0"[0];
  6963  001ADA  0EF2               	movlw	low STR_1
  6964  001ADC  6EF6               	movwf	tblptrl,c
  6965  001ADE                     	if	1	;There is more than 1 active tblptr byte
  6966  001ADE  0E8F               	movlw	high STR_1
  6967  001AE0  6EF7               	movwf	tblptrh,c
  6968  001AE2                     	endif
  6969  001AE2                     	if	1	;There are 3 active tblptr bytes
  6970  001AE2  0E00               	movlw	low (STR_1 shr (0+16))
  6971  001AE4  6EF8               	movwf	tblptru,c
  6972  001AE6                     	endif
  6973  001AE6  0008               	tblrd		*
  6974  001AE8  50F5               	movf	tablat,w,c
  6975  001AEA  0012               	return	
  6976  001AEC                     
  6977                           ;fat16.c: 704: return "MSDOS5.0"[1];
  6978  001AEC  0EF3               	movlw	low (STR_1+1)
  6979  001AEE  6EF6               	movwf	tblptrl,c
  6980  001AF0  0E8F               	movlw	high (STR_1+1)
  6981  001AF2  6EF7               	movwf	tblptrh,c
  6982  001AF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6983  001AF4  6AF8               	clrf	tblptru,c
  6984  001AF6                     	endif
  6985  001AF6                     	if	0	;tblptru may be non-zero
  6986  001AF6                     	endif
  6987  001AF6  0008               	tblrd		*
  6988  001AF8  50F5               	movf	tablat,w,c
  6989  001AFA  0012               	return	
  6990  001AFC                     
  6991                           ;fat16.c: 706: return "MSDOS5.0"[2];
  6992  001AFC  0EF4               	movlw	low (STR_1+2)
  6993  001AFE  6EF6               	movwf	tblptrl,c
  6994  001B00  0E8F               	movlw	high (STR_1+2)
  6995  001B02  6EF7               	movwf	tblptrh,c
  6996  001B04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6997  001B04  6AF8               	clrf	tblptru,c
  6998  001B06                     	endif
  6999  001B06                     	if	0	;tblptru may be non-zero
  7000  001B06                     	endif
  7001  001B06  0008               	tblrd		*
  7002  001B08  50F5               	movf	tablat,w,c
  7003  001B0A  0012               	return	
  7004  001B0C                     
  7005                           ;fat16.c: 708: return "MSDOS5.0"[3];
  7006  001B0C  0EF5               	movlw	low (STR_1+3)
  7007  001B0E  6EF6               	movwf	tblptrl,c
  7008  001B10  0E8F               	movlw	high (STR_1+3)
  7009  001B12  6EF7               	movwf	tblptrh,c
  7010  001B14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7011  001B14  6AF8               	clrf	tblptru,c
  7012  001B16                     	endif
  7013  001B16                     	if	0	;tblptru may be non-zero
  7014  001B16                     	endif
  7015  001B16  0008               	tblrd		*
  7016  001B18  50F5               	movf	tablat,w,c
  7017  001B1A  0012               	return	
  7018  001B1C                     
  7019                           ;fat16.c: 710: return "MSDOS5.0"[4];
  7020  001B1C  0EF6               	movlw	low (STR_1+4)
  7021  001B1E  6EF6               	movwf	tblptrl,c
  7022  001B20  0E8F               	movlw	high (STR_1+4)
  7023  001B22  6EF7               	movwf	tblptrh,c
  7024  001B24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7025  001B24  6AF8               	clrf	tblptru,c
  7026  001B26                     	endif
  7027  001B26                     	if	0	;tblptru may be non-zero
  7028  001B26                     	endif
  7029  001B26  0008               	tblrd		*
  7030  001B28  50F5               	movf	tablat,w,c
  7031  001B2A  0012               	return	
  7032  001B2C                     
  7033                           ;fat16.c: 712: return "MSDOS5.0"[5];
  7034  001B2C  0EF7               	movlw	low (STR_1+5)
  7035  001B2E  6EF6               	movwf	tblptrl,c
  7036  001B30  0E8F               	movlw	high (STR_1+5)
  7037  001B32  6EF7               	movwf	tblptrh,c
  7038  001B34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7039  001B34  6AF8               	clrf	tblptru,c
  7040  001B36                     	endif
  7041  001B36                     	if	0	;tblptru may be non-zero
  7042  001B36                     	endif
  7043  001B36  0008               	tblrd		*
  7044  001B38  50F5               	movf	tablat,w,c
  7045  001B3A  0012               	return	
  7046  001B3C                     
  7047                           ;fat16.c: 714: return "MSDOS5.0"[6];
  7048  001B3C  0EF8               	movlw	low (STR_1+6)
  7049  001B3E  6EF6               	movwf	tblptrl,c
  7050  001B40  0E8F               	movlw	high (STR_1+6)
  7051  001B42  6EF7               	movwf	tblptrh,c
  7052  001B44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7053  001B44  6AF8               	clrf	tblptru,c
  7054  001B46                     	endif
  7055  001B46                     	if	0	;tblptru may be non-zero
  7056  001B46                     	endif
  7057  001B46  0008               	tblrd		*
  7058  001B48  50F5               	movf	tablat,w,c
  7059  001B4A  0012               	return	
  7060  001B4C                     
  7061                           ;fat16.c: 716: return "MSDOS5.0"[7];
  7062  001B4C  0EF9               	movlw	low (STR_1+7)
  7063  001B4E  6EF6               	movwf	tblptrl,c
  7064  001B50  0E8F               	movlw	high (STR_1+7)
  7065  001B52  6EF7               	movwf	tblptrh,c
  7066  001B54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7067  001B54  6AF8               	clrf	tblptru,c
  7068  001B56                     	endif
  7069  001B56                     	if	0	;tblptru may be non-zero
  7070  001B56                     	endif
  7071  001B56  0008               	tblrd		*
  7072  001B58  50F5               	movf	tablat,w,c
  7073  001B5A  0012               	return	
  7074  001B5C                     
  7075                           ;fat16.c: 718: return ((unsigned char)((((uint16_t)512))&0xFF));
  7076  001B5C  0E00               	movlw	0
  7077  001B5E  0012               	return	
  7078  001B60                     
  7079                           ;fat16.c: 720: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  7080  001B60  0E02               	movlw	2
  7081  001B62  0012               	return	
  7082  001B64                     
  7083                           ;fat16.c: 722: return 1;
  7084  001B64  0E01               	movlw	1
  7085  001B66  0012               	return	
  7086  001B68                     
  7087                           ;fat16.c: 724: return ((unsigned char)((((uint16_t)1))&0xFF));
  7088  001B68  0E01               	movlw	1
  7089  001B6A  0012               	return	
  7090  001B6C                     
  7091                           ;fat16.c: 726: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  7092  001B6C  0E00               	movlw	0
  7093  001B6E  0012               	return	
  7094  001B70                     
  7095                           ;fat16.c: 728: return 1;
  7096  001B70  0E01               	movlw	1
  7097  001B72  0012               	return	
  7098  001B74                     
  7099                           ;fat16.c: 730: return ((unsigned char)((((uint16_t)64))&0xFF));
  7100  001B74  0E40               	movlw	64
  7101  001B76  0012               	return	
  7102  001B78                     
  7103                           ;fat16.c: 732: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  7104  001B78  0E00               	movlw	0
  7105  001B7A  0012               	return	
  7106  001B7C                     
  7107                           ;fat16.c: 734: return ((unsigned char)((((uint16_t)8191))&0xFF));
  7108  001B7C  0EFF               	movlw	255
  7109  001B7E  0012               	return	
  7110  001B80                     
  7111                           ;fat16.c: 736: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  7112  001B80  0E1F               	movlw	31
  7113  001B82  0012               	return	
  7114  001B84                     
  7115                           ;fat16.c: 738: return 0XF8;
  7116  001B84  0EF8               	movlw	248
  7117  001B86  0012               	return	
  7118  001B88                     
  7119                           ;fat16.c: 740: return ((unsigned char)((((uint16_t)32))&0xFF));
  7120  001B88  0E20               	movlw	32
  7121  001B8A  0012               	return	
  7122  001B8C                     
  7123                           ;fat16.c: 742: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  7124  001B8C  0E00               	movlw	0
  7125  001B8E  0012               	return	
  7126  001B90                     
  7127                           ;fat16.c: 744: return ((unsigned char)((((uint16_t)63))&0xFF));
  7128  001B90  0E3F               	movlw	63
  7129  001B92  0012               	return	
  7130  001B94                     
  7131                           ;fat16.c: 746: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  7132  001B94  0E00               	movlw	0
  7133  001B96  0012               	return	
  7134  001B98                     
  7135                           ;fat16.c: 748: return ((unsigned char)((((uint16_t)16))&0xFF));
  7136  001B98  0E10               	movlw	16
  7137  001B9A  0012               	return	
  7138  001B9C                     
  7139                           ;fat16.c: 750: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  7140  001B9C  0E00               	movlw	0
  7141  001B9E  0012               	return	
  7142  001BA0                     
  7143                           ;fat16.c: 752: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
  7144  001BA0  0E00               	movlw	0
  7145  001BA2  0012               	return	
  7146  001BA4                     
  7147                           ;fat16.c: 754: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
  7148  001BA4  0E00               	movlw	0
  7149  001BA6  0012               	return	
  7150  001BA8                     
  7151                           ;fat16.c: 756: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
  7152  001BA8  0E00               	movlw	0
  7153  001BAA  0012               	return	
  7154  001BAC                     
  7155                           ;fat16.c: 758: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  7156  001BAC  0E00               	movlw	0
  7157  001BAE  0012               	return	
  7158  001BB0                     
  7159                           ;fat16.c: 760: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  7160  001BB0  0E01               	movlw	1
  7161  001BB2  0012               	return	
  7162  001BB4                     
  7163                           ;fat16.c: 762: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  7164  001BB4  0E00               	movlw	0
  7165  001BB6  0012               	return	
  7166  001BB8                     
  7167                           ;fat16.c: 764: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0xF
      +                          F));
  7168  001BB8  0E22               	movlw	34
  7169  001BBA  0012               	return	
  7170  001BBC                     
  7171                           ;fat16.c: 766: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>8
      +                          )&0xFF));
  7172  001BBC  0E00               	movlw	0
  7173  001BBE  0012               	return	
  7174  001BC0                     
  7175                           ;fat16.c: 770: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  7176                           
  7177                           ;fat16.c: 769: case 0x2F:
  7178  001BC0  0E00               	movlw	0
  7179  001BC2  0012               	return	
  7180  001BC4                     
  7181                           ;fat16.c: 772: return 'F';
  7182  001BC4  0E46               	movlw	70
  7183  001BC6  0012               	return	
  7184  001BC8                     
  7185                           ;fat16.c: 774: return 'A';
  7186  001BC8  0E41               	movlw	65
  7187  001BCA  0012               	return	
  7188  001BCC                     
  7189                           ;fat16.c: 776: return 'T';
  7190  001BCC  0E54               	movlw	84
  7191  001BCE  0012               	return	
  7192  001BD0                     
  7193                           ;fat16.c: 778: return '1';
  7194  001BD0  0E31               	movlw	49
  7195  001BD2  0012               	return	
  7196  001BD4                     
  7197                           ;fat16.c: 780: return '6';
  7198  001BD4  0E36               	movlw	54
  7199  001BD6  0012               	return	
  7200  001BD8                     
  7201                           ;fat16.c: 782: return ' ';
  7202  001BD8  0E20               	movlw	32
  7203  001BDA  0012               	return	
  7204  001BDC                     
  7205                           ;fat16.c: 784: return ' ';
  7206  001BDC  0E20               	movlw	32
  7207  001BDE  0012               	return	
  7208  001BE0                     
  7209                           ;fat16.c: 786: return ' ';
  7210  001BE0  0E20               	movlw	32
  7211  001BE2  0012               	return	
  7212  001BE4                     
  7213                           ;fat16.c: 788: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  7214  001BE4  0E55               	movlw	85
  7215  001BE6  0012               	return	
  7216  001BE8                     
  7217                           ;fat16.c: 790: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  7218  001BE8  0EAA               	movlw	170
  7219  001BEA  0012               	return	
  7220  001BEC                     
  7221                           ;fat16.c: 792: return 0X00;
  7222  001BEC  0E00               	movlw	0
  7223                           
  7224                           ;fat16.c: 793: }
  7225  001BEE  0012               	return	
  7226  001BF0                     l2060:
  7227  001BF0  C001  F003         	movff	__get_fbr@idx,??__get_fbr
  7228  001BF4  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
  7229                           
  7230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7231                           ; Switch size 1, requested type "space"
  7232                           ; Number of cases is 2, Range of values is 0 to 1
  7233                           ; switch strategies available:
  7234                           ; Name         Instructions Cycles
  7235                           ; simple_byte            7     4 (average)
  7236                           ;	Chosen strategy is simple_byte
  7237  001BF8  5004               	movf	??__get_fbr+1,w,c
  7238  001BFA  0A00               	xorlw	0	; case 0
  7239  001BFC  B4D8               	btfsc	status,2,c
  7240  001BFE  D004               	goto	l15265
  7241  001C00  0A01               	xorlw	1	; case 1
  7242  001C02  B4D8               	btfsc	status,2,c
  7243  001C04  D08D               	goto	l15267
  7244  001C06  D7F2               	goto	l2110
  7245  001C08                     l15265:
  7246                           
  7247                           ; Switch size 1, requested type "space"
  7248                           ; Number of cases is 46, Range of values is 0 to 61
  7249                           ; switch strategies available:
  7250                           ; Name         Instructions Cycles
  7251                           ; simple_byte          139    70 (average)
  7252                           ;	Chosen strategy is simple_byte
  7253  001C08  5003               	movf	??__get_fbr,w,c
  7254  001C0A  0A00               	xorlw	0	; case 0
  7255  001C0C  B4D8               	btfsc	status,2,c
  7256  001C0E  D75F               	goto	l2061
  7257  001C10  0A01               	xorlw	1	; case 1
  7258  001C12  B4D8               	btfsc	status,2,c
  7259  001C14  D75E               	goto	l2063
  7260  001C16  0A03               	xorlw	3	; case 2
  7261  001C18  B4D8               	btfsc	status,2,c
  7262  001C1A  D75D               	goto	l2064
  7263  001C1C  0A01               	xorlw	1	; case 3
  7264  001C1E  B4D8               	btfsc	status,2,c
  7265  001C20  D75C               	goto	l2065
  7266  001C22  0A07               	xorlw	7	; case 4
  7267  001C24  B4D8               	btfsc	status,2,c
  7268  001C26  D762               	goto	l2066
  7269  001C28  0A01               	xorlw	1	; case 5
  7270  001C2A  B4D8               	btfsc	status,2,c
  7271  001C2C  D767               	goto	l2067
  7272  001C2E  0A03               	xorlw	3	; case 6
  7273  001C30  B4D8               	btfsc	status,2,c
  7274  001C32  D76C               	goto	l2068
  7275  001C34  0A01               	xorlw	1	; case 7
  7276  001C36  B4D8               	btfsc	status,2,c
  7277  001C38  D771               	goto	l2069
  7278  001C3A  0A0F               	xorlw	15	; case 8
  7279  001C3C  B4D8               	btfsc	status,2,c
  7280  001C3E  D776               	goto	l2070
  7281  001C40  0A01               	xorlw	1	; case 9
  7282  001C42  B4D8               	btfsc	status,2,c
  7283  001C44  D77B               	goto	l2071
  7284  001C46  0A03               	xorlw	3	; case 10
  7285  001C48  B4D8               	btfsc	status,2,c
  7286  001C4A  D780               	goto	l2072
  7287  001C4C  0A01               	xorlw	1	; case 11
  7288  001C4E  B4D8               	btfsc	status,2,c
  7289  001C50  D785               	goto	l2073
  7290  001C52  0A07               	xorlw	7	; case 12
  7291  001C54  B4D8               	btfsc	status,2,c
  7292  001C56  D784               	goto	l2074
  7293  001C58  0A01               	xorlw	1	; case 13
  7294  001C5A  B4D8               	btfsc	status,2,c
  7295  001C5C  D783               	goto	l2075
  7296  001C5E  0A03               	xorlw	3	; case 14
  7297  001C60  B4D8               	btfsc	status,2,c
  7298  001C62  D782               	goto	l2076
  7299  001C64  0A01               	xorlw	1	; case 15
  7300  001C66  B4D8               	btfsc	status,2,c
  7301  001C68  D781               	goto	l2077
  7302  001C6A  0A1F               	xorlw	31	; case 16
  7303  001C6C  B4D8               	btfsc	status,2,c
  7304  001C6E  D780               	goto	l2078
  7305  001C70  0A01               	xorlw	1	; case 17
  7306  001C72  B4D8               	btfsc	status,2,c
  7307  001C74  D77F               	goto	l2079
  7308  001C76  0A03               	xorlw	3	; case 18
  7309  001C78  B4D8               	btfsc	status,2,c
  7310  001C7A  D77E               	goto	l2080
  7311  001C7C  0A01               	xorlw	1	; case 19
  7312  001C7E  B4D8               	btfsc	status,2,c
  7313  001C80  D77D               	goto	l2081
  7314  001C82  0A07               	xorlw	7	; case 20
  7315  001C84  B4D8               	btfsc	status,2,c
  7316  001C86  D77C               	goto	l2082
  7317  001C88  0A01               	xorlw	1	; case 21
  7318  001C8A  B4D8               	btfsc	status,2,c
  7319  001C8C  D77B               	goto	l2083
  7320  001C8E  0A03               	xorlw	3	; case 22
  7321  001C90  B4D8               	btfsc	status,2,c
  7322  001C92  D77A               	goto	l2084
  7323  001C94  0A01               	xorlw	1	; case 23
  7324  001C96  B4D8               	btfsc	status,2,c
  7325  001C98  D779               	goto	l2085
  7326  001C9A  0A0F               	xorlw	15	; case 24
  7327  001C9C  B4D8               	btfsc	status,2,c
  7328  001C9E  D778               	goto	l2086
  7329  001CA0  0A01               	xorlw	1	; case 25
  7330  001CA2  B4D8               	btfsc	status,2,c
  7331  001CA4  D777               	goto	l2087
  7332  001CA6  0A03               	xorlw	3	; case 26
  7333  001CA8  B4D8               	btfsc	status,2,c
  7334  001CAA  D776               	goto	l2088
  7335  001CAC  0A01               	xorlw	1	; case 27
  7336  001CAE  B4D8               	btfsc	status,2,c
  7337  001CB0  D775               	goto	l2089
  7338  001CB2  0A07               	xorlw	7	; case 28
  7339  001CB4  B4D8               	btfsc	status,2,c
  7340  001CB6  D774               	goto	l2090
  7341  001CB8  0A01               	xorlw	1	; case 29
  7342  001CBA  B4D8               	btfsc	status,2,c
  7343  001CBC  D773               	goto	l2091
  7344  001CBE  0A03               	xorlw	3	; case 30
  7345  001CC0  B4D8               	btfsc	status,2,c
  7346  001CC2  D772               	goto	l2092
  7347  001CC4  0A01               	xorlw	1	; case 31
  7348  001CC6  B4D8               	btfsc	status,2,c
  7349  001CC8  D771               	goto	l2093
  7350  001CCA  0A37               	xorlw	55	; case 40
  7351  001CCC  B4D8               	btfsc	status,2,c
  7352  001CCE  D770               	goto	l2094
  7353  001CD0  0A01               	xorlw	1	; case 41
  7354  001CD2  B4D8               	btfsc	status,2,c
  7355  001CD4  D76F               	goto	l2095
  7356  001CD6  0A05               	xorlw	5	; case 44
  7357  001CD8  B4D8               	btfsc	status,2,c
  7358  001CDA  D76E               	goto	l2096
  7359  001CDC  0A01               	xorlw	1	; case 45
  7360  001CDE  B4D8               	btfsc	status,2,c
  7361  001CE0  D76D               	goto	l2097
  7362  001CE2  0A03               	xorlw	3	; case 46
  7363  001CE4  B4D8               	btfsc	status,2,c
  7364  001CE6  D76C               	goto	l2098
  7365  001CE8  0A01               	xorlw	1	; case 47
  7366  001CEA  B4D8               	btfsc	status,2,c
  7367  001CEC  D769               	goto	l2098
  7368  001CEE  0A19               	xorlw	25	; case 54
  7369  001CF0  B4D8               	btfsc	status,2,c
  7370  001CF2  D768               	goto	l2100
  7371  001CF4  0A01               	xorlw	1	; case 55
  7372  001CF6  B4D8               	btfsc	status,2,c
  7373  001CF8  D767               	goto	l2101
  7374  001CFA  0A0F               	xorlw	15	; case 56
  7375  001CFC  B4D8               	btfsc	status,2,c
  7376  001CFE  D766               	goto	l2102
  7377  001D00  0A01               	xorlw	1	; case 57
  7378  001D02  B4D8               	btfsc	status,2,c
  7379  001D04  D765               	goto	l2103
  7380  001D06  0A03               	xorlw	3	; case 58
  7381  001D08  B4D8               	btfsc	status,2,c
  7382  001D0A  D764               	goto	l2104
  7383  001D0C  0A01               	xorlw	1	; case 59
  7384  001D0E  B4D8               	btfsc	status,2,c
  7385  001D10  D763               	goto	l2105
  7386  001D12  0A07               	xorlw	7	; case 60
  7387  001D14  B4D8               	btfsc	status,2,c
  7388  001D16  D762               	goto	l2106
  7389  001D18  0A01               	xorlw	1	; case 61
  7390  001D1A  B4D8               	btfsc	status,2,c
  7391  001D1C  D761               	goto	l2107
  7392  001D1E  D766               	goto	l2110
  7393  001D20                     l15267:
  7394                           
  7395                           ; Switch size 1, requested type "space"
  7396                           ; Number of cases is 2, Range of values is 254 to 255
  7397                           ; switch strategies available:
  7398                           ; Name         Instructions Cycles
  7399                           ; simple_byte            7     4 (average)
  7400                           ;	Chosen strategy is simple_byte
  7401  001D20  5003               	movf	??__get_fbr,w,c
  7402  001D22  0AFE               	xorlw	254	; case 254
  7403  001D24  B4D8               	btfsc	status,2,c
  7404  001D26  D75E               	goto	l2108
  7405  001D28  0A01               	xorlw	1	; case 255
  7406  001D2A  B4D8               	btfsc	status,2,c
  7407  001D2C  D75D               	goto	l2109
  7408  001D2E  D75E               	goto	l2110
  7409  001D30                     __end_of__get_fbr:
  7410                           	opt stack 0
  7411                           tblptru	equ	0xFF8
  7412                           tblptrh	equ	0xFF7
  7413                           tblptrl	equ	0xFF6
  7414                           tablat	equ	0xFF5
  7415                           intcon	equ	0xFF2
  7416                           intcon3	equ	0xFF0
  7417                           postinc0	equ	0xFEE
  7418                           wreg	equ	0xFE8
  7419                           postdec1	equ	0xFE5
  7420                           plusw1	equ	0xFE3
  7421                           fsr1h	equ	0xFE2
  7422                           fsr1l	equ	0xFE1
  7423                           indf2	equ	0xFDF
  7424                           postinc2	equ	0xFDE
  7425                           plusw2	equ	0xFDB
  7426                           fsr2h	equ	0xFDA
  7427                           fsr2l	equ	0xFD9
  7428                           status	equ	0xFD8
  7429                           
  7430 ;; *************** function __get_fat *****************
  7431 ;; Defined at:
  7432 ;;		line 796 in file "fat16.c"
  7433 ;; Parameters:    Size  Location     Type
  7434 ;;  idx             2    0[COMRAM] unsigned int 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;		None
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1    wreg      unsigned char 
  7439 ;; Registers used:
  7440 ;;		wreg, status,2, status,0
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7449 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7450 ;;Total ram usage:        4 bytes
  7451 ;; Hardware stack levels used:    1
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_fat_format
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text26
  7460  00737E                     __ptext26:
  7461                           	opt stack 0
  7462  00737E                     __get_fat:
  7463                           	opt stack 27
  7464                           
  7465                           ;fat16.c: 798: switch (idx)
  7466                           
  7467                           ;incstack = 0
  7468  00737E  D00E               	goto	l2114
  7469  007380                     
  7470                           ;fat16.c: 802: return 0xF8;
  7471  007380  0EF8               	movlw	248
  7472  007382  0012               	return	
  7473  007384                     
  7474                           ;fat16.c: 804: return 0xFF;
  7475  007384  0EFF               	movlw	255
  7476  007386  0012               	return	
  7477  007388                     
  7478                           ;fat16.c: 806: return 0xFF;
  7479  007388  0EFF               	movlw	255
  7480  00738A  0012               	return	
  7481  00738C                     
  7482                           ;fat16.c: 808: return 0xFF;
  7483  00738C  0EFF               	movlw	255
  7484  00738E  0012               	return	
  7485  007390                     
  7486                           ;fat16.c: 811: return 0xFF;
  7487  007390  0EFF               	movlw	255
  7488  007392  0012               	return	
  7489  007394                     
  7490                           ;fat16.c: 813: return 0xFF;
  7491  007394  0EFF               	movlw	255
  7492  007396  0012               	return	
  7493  007398                     
  7494                           ;fat16.c: 815: return 0X00;
  7495  007398  0E00               	movlw	0
  7496                           
  7497                           ;fat16.c: 816: }
  7498  00739A  0012               	return	
  7499  00739C                     l2114:
  7500  00739C  C001  F003         	movff	__get_fat@idx,??__get_fat
  7501  0073A0  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
  7502                           
  7503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7504                           ; Switch size 1, requested type "space"
  7505                           ; Number of cases is 1, Range of values is 0 to 0
  7506                           ; switch strategies available:
  7507                           ; Name         Instructions Cycles
  7508                           ; simple_byte            4     3 (average)
  7509                           ;	Chosen strategy is simple_byte
  7510  0073A4  5004               	movf	??__get_fat+1,w,c
  7511  0073A6  0A00               	xorlw	0	; case 0
  7512  0073A8  A4D8               	btfss	status,2,c
  7513  0073AA  D7F6               	goto	l2122
  7514                           
  7515                           ; Switch size 1, requested type "space"
  7516                           ; Number of cases is 6, Range of values is 0 to 5
  7517                           ; switch strategies available:
  7518                           ; Name         Instructions Cycles
  7519                           ; simple_byte           19    10 (average)
  7520                           ;	Chosen strategy is simple_byte
  7521  0073AC  5003               	movf	??__get_fat,w,c
  7522  0073AE  0A00               	xorlw	0	; case 0
  7523  0073B0  B4D8               	btfsc	status,2,c
  7524  0073B2  D7E6               	goto	l2115
  7525  0073B4  0A01               	xorlw	1	; case 1
  7526  0073B6  B4D8               	btfsc	status,2,c
  7527  0073B8  D7E5               	goto	l2117
  7528  0073BA  0A03               	xorlw	3	; case 2
  7529  0073BC  B4D8               	btfsc	status,2,c
  7530  0073BE  D7E4               	goto	l2118
  7531  0073C0  0A01               	xorlw	1	; case 3
  7532  0073C2  B4D8               	btfsc	status,2,c
  7533  0073C4  D7E3               	goto	l2119
  7534  0073C6  0A07               	xorlw	7	; case 4
  7535  0073C8  B4D8               	btfsc	status,2,c
  7536  0073CA  D7E2               	goto	l2120
  7537  0073CC  0A01               	xorlw	1	; case 5
  7538  0073CE  B4D8               	btfsc	status,2,c
  7539  0073D0  D7E1               	goto	l2121
  7540  0073D2  D7E2               	goto	l2122
  7541  0073D4                     __end_of__get_fat:
  7542                           	opt stack 0
  7543                           tblptru	equ	0xFF8
  7544                           tblptrh	equ	0xFF7
  7545                           tblptrl	equ	0xFF6
  7546                           tablat	equ	0xFF5
  7547                           intcon	equ	0xFF2
  7548                           intcon3	equ	0xFF0
  7549                           postinc0	equ	0xFEE
  7550                           wreg	equ	0xFE8
  7551                           postdec1	equ	0xFE5
  7552                           plusw1	equ	0xFE3
  7553                           fsr1h	equ	0xFE2
  7554                           fsr1l	equ	0xFE1
  7555                           indf2	equ	0xFDF
  7556                           postinc2	equ	0xFDE
  7557                           plusw2	equ	0xFDB
  7558                           fsr2h	equ	0xFDA
  7559                           fsr2l	equ	0xFD9
  7560                           status	equ	0xFD8
  7561                           
  7562 ;; *************** function __get_data *****************
  7563 ;; Defined at:
  7564 ;;		line 896 in file "fat16.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  idx             2    0[COMRAM] unsigned int 
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;		None
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  1    wreg      unsigned char 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7582 ;;Total ram usage:        2 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; This function calls:
  7585 ;;		Nothing
  7586 ;; This function is called by:
  7587 ;;		_fat_format
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text27
  7592  007DD4                     __ptext27:
  7593                           	opt stack 0
  7594  007DD4                     __get_data:
  7595                           	opt stack 27
  7596                           
  7597                           ;fat16.c: 898: if (idx < 12)
  7598                           
  7599                           ;incstack = 0
  7600  007DD4  5002               	movf	__get_data@idx+1,w,c
  7601  007DD6  E110               	bnz	l12825
  7602  007DD8  0E0C               	movlw	12
  7603  007DDA  5C01               	subwf	__get_data@idx,w,c
  7604  007DDC  B0D8               	btfsc	status,0,c
  7605  007DDE  D00C               	goto	l2158
  7606                           
  7607                           ;fat16.c: 899: {;fat16.c: 900: return "hello world!"[idx];
  7608  007DE0  0ED0               	movlw	low STR_12
  7609  007DE2  2401               	addwf	__get_data@idx,w,c
  7610  007DE4  6EF6               	movwf	tblptrl,c
  7611  007DE6  0E8F               	movlw	high STR_12
  7612  007DE8  2002               	addwfc	__get_data@idx+1,w,c
  7613  007DEA  6EF7               	movwf	tblptrh,c
  7614  007DEC                     	if	1	;There are 3 active tblptr bytes
  7615  007DEC  6AF8               	clrf	tblptru,c
  7616  007DEE  0E00               	movlw	low (__mediumconst shr (0+16))
  7617  007DF0  22F8               	addwfc	tblptru,f,c
  7618  007DF2                     	endif
  7619  007DF2  0008               	tblrd		*
  7620  007DF4  50F5               	movf	tablat,w,c
  7621  007DF6  0012               	return	
  7622  007DF8                     l2158:
  7623  007DF8                     l12825:
  7624                           
  7625                           ;fat16.c: 901: };fat16.c: 902: return 0X00;
  7626  007DF8  0E00               	movlw	0
  7627  007DFA  0012               	return	
  7628  007DFC                     __end_of__get_data:
  7629                           	opt stack 0
  7630                           tblptru	equ	0xFF8
  7631                           tblptrh	equ	0xFF7
  7632                           tblptrl	equ	0xFF6
  7633                           tablat	equ	0xFF5
  7634                           intcon	equ	0xFF2
  7635                           intcon3	equ	0xFF0
  7636                           postinc0	equ	0xFEE
  7637                           wreg	equ	0xFE8
  7638                           postdec1	equ	0xFE5
  7639                           plusw1	equ	0xFE3
  7640                           fsr1h	equ	0xFE2
  7641                           fsr1l	equ	0xFE1
  7642                           indf2	equ	0xFDF
  7643                           postinc2	equ	0xFDE
  7644                           plusw2	equ	0xFDB
  7645                           fsr2h	equ	0xFDA
  7646                           fsr2l	equ	0xFD9
  7647                           status	equ	0xFD8
  7648                           
  7649 ;; *************** function __system_timer0_init *****************
  7650 ;; Defined at:
  7651 ;;		line 112 in file "os.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7669 ;;Total ram usage:        0 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_system_full_init
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text28
  7679  007F8A                     __ptext28:
  7680                           	opt stack 0
  7681  007F8A                     __system_timer0_init:
  7682                           	opt stack 29
  7683                           
  7684                           ;os.c: 115: T0CONbits.T0CS = 0;
  7685                           
  7686                           ;incstack = 0
  7687  007F8A  9AD5               	bcf	4053,5,c	;volatile
  7688                           
  7689                           ;os.c: 117: T0CONbits.T08BIT = 0;
  7690  007F8C  9CD5               	bcf	4053,6,c	;volatile
  7691                           
  7692                           ;os.c: 119: T0CONbits.T0PS2 = 0;
  7693  007F8E  94D5               	bcf	4053,2,c	;volatile
  7694                           
  7695                           ;os.c: 120: T0CONbits.T0PS1 = 1;
  7696  007F90  82D5               	bsf	4053,1,c	;volatile
  7697                           
  7698                           ;os.c: 121: T0CONbits.T0PS0 = 0;
  7699  007F92  90D5               	bcf	4053,0,c	;volatile
  7700                           
  7701                           ;os.c: 123: T0CONbits.PSA = 0;
  7702  007F94  96D5               	bcf	4053,3,c	;volatile
  7703                           
  7704                           ;os.c: 125: TMR0H = 0xD1;
  7705  007F96  0ED1               	movlw	209
  7706  007F98  6ED7               	movwf	4055,c	;volatile
  7707                           
  7708                           ;os.c: 126: TMR0L = 0x20;
  7709  007F9A  0E20               	movlw	32
  7710  007F9C  6ED6               	movwf	4054,c	;volatile
  7711                           
  7712                           ;os.c: 128: T0CONbits.TMR0ON = 1;
  7713  007F9E  8ED5               	bsf	4053,7,c	;volatile
  7714                           
  7715                           ;os.c: 132: INTCONbits.TMR0IF = 0;
  7716  007FA0  94F2               	bcf	intcon,2,c	;volatile
  7717                           
  7718                           ;os.c: 135: os.timeSlot = 0;
  7719  007FA2  0E00               	movlw	0
  7720  007FA4  0100               	movlb	0	; () banked
  7721  007FA6  6FBB               	movwf	(_os+2)& (0+255),b	;volatile
  7722                           
  7723                           ; BSR set to: 0
  7724  007FA8  0012               	return		;funcret
  7725  007FAA                     __end_of__system_timer0_init:
  7726                           	opt stack 0
  7727                           tblptru	equ	0xFF8
  7728                           tblptrh	equ	0xFF7
  7729                           tblptrl	equ	0xFF6
  7730                           tablat	equ	0xFF5
  7731                           intcon	equ	0xFF2
  7732                           intcon3	equ	0xFF0
  7733                           postinc0	equ	0xFEE
  7734                           wreg	equ	0xFE8
  7735                           postdec1	equ	0xFE5
  7736                           plusw1	equ	0xFE3
  7737                           fsr1h	equ	0xFE2
  7738                           fsr1l	equ	0xFE1
  7739                           indf2	equ	0xFDF
  7740                           postinc2	equ	0xFDE
  7741                           plusw2	equ	0xFDB
  7742                           fsr2h	equ	0xFDA
  7743                           fsr2l	equ	0xFD9
  7744                           status	equ	0xFD8
  7745                           
  7746 ;; *************** function __system_encoder_init *****************
  7747 ;; Defined at:
  7748 ;;		line 73 in file "os.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;		None
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;		None
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      void 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7766 ;;Total ram usage:        0 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_system_full_init
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text29
  7776  0079F4                     __ptext29:
  7777                           	opt stack 0
  7778  0079F4                     __system_encoder_init:
  7779                           	opt stack 29
  7780                           
  7781                           ;os.c: 75: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;incstack = 0
  7785  0079F4  0E55               	movlw	85
  7786  0079F6  6EA7               	movwf	4007,c	;volsfr
  7787  0079F8  0EAA               	movlw	170
  7788  0079FA  6EA7               	movwf	4007,c	;volsfr
  7789  0079FC  010E               	movlb	14	; () banked
  7790  0079FE  91BF               	bcf	191,0,b	;volatile
  7791                           
  7792                           ;os.c: 76: RPINR1 = 0;
  7793  007A00  0E00               	movlw	0
  7794  007A02  6FE1               	movwf	225,b	;volatile
  7795                           
  7796                           ;os.c: 77: RPINR3 = 9;
  7797  007A04  0E09               	movlw	9
  7798  007A06  6FE3               	movwf	227,b	;volatile
  7799                           
  7800                           ;os.c: 78: RPINR2 = 10;
  7801  007A08  0E0A               	movlw	10
  7802  007A0A  6FE2               	movwf	226,b	;volatile
  7803                           
  7804                           ;os.c: 79: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  7805  007A0C  0E55               	movlw	85
  7806  007A0E  6EA7               	movwf	4007,c	;volsfr
  7807  007A10  0EAA               	movlw	170
  7808  007A12  6EA7               	movwf	4007,c	;volsfr
  7809                           
  7810                           ; BSR set to: 14
  7811  007A14  91BF               	bcf	191,0,b	;volatile
  7812                           
  7813                           ; BSR set to: 14
  7814                           ;os.c: 82: INTCON2bits.INTEDG1 = 0;
  7815  007A16  9AF1               	bcf	intcon2,5,c	;volatile
  7816                           
  7817                           ; BSR set to: 14
  7818                           ;os.c: 83: INTCON3bits.INT1IF = 0;
  7819  007A18  90F0               	bcf	intcon3,0,c	;volatile
  7820                           
  7821                           ; BSR set to: 14
  7822                           ;os.c: 85: INTCON2bits.INTEDG2 = 1;
  7823  007A1A  88F1               	bsf	intcon2,4,c	;volatile
  7824                           
  7825                           ; BSR set to: 14
  7826                           ;os.c: 86: INTCON3bits.INT2IF = 0;
  7827  007A1C  92F0               	bcf	intcon3,1,c	;volatile
  7828                           
  7829                           ; BSR set to: 14
  7830                           ;os.c: 88: INTCON2bits.INTEDG3 = 1;
  7831  007A1E  86F1               	bsf	intcon2,3,c	;volatile
  7832                           
  7833                           ; BSR set to: 14
  7834                           ;os.c: 89: INTCON3bits.INT3IF = 0;
  7835  007A20  94F0               	bcf	intcon3,2,c	;volatile
  7836                           
  7837                           ;os.c: 91: os.encoderCount = 0;
  7838  007A22  0E00               	movlw	0
  7839  007A24  0100               	movlb	0	; () banked
  7840  007A26  6FB9               	movwf	_os& (0+255),b	;volatile
  7841                           
  7842                           ;os.c: 92: os.buttonCount = 0;
  7843  007A28  0E00               	movlw	0
  7844  007A2A  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  7845                           
  7846                           ; BSR set to: 0
  7847  007A2C  0012               	return		;funcret
  7848  007A2E                     __end_of__system_encoder_init:
  7849                           	opt stack 0
  7850                           tblptru	equ	0xFF8
  7851                           tblptrh	equ	0xFF7
  7852                           tblptrl	equ	0xFF6
  7853                           tablat	equ	0xFF5
  7854                           intcon	equ	0xFF2
  7855                           intcon2	equ	0xFF1
  7856                           intcon3	equ	0xFF0
  7857                           postinc0	equ	0xFEE
  7858                           wreg	equ	0xFE8
  7859                           postdec1	equ	0xFE5
  7860                           plusw1	equ	0xFE3
  7861                           fsr1h	equ	0xFE2
  7862                           fsr1l	equ	0xFE1
  7863                           indf2	equ	0xFDF
  7864                           postinc2	equ	0xFDE
  7865                           plusw2	equ	0xFDB
  7866                           fsr2h	equ	0xFDA
  7867                           fsr2l	equ	0xFD9
  7868                           status	equ	0xFD8
  7869                           
  7870 ;; *************** function _spi_get_external_tx_buffer *****************
  7871 ;; Defined at:
  7872 ;;		line 75 in file "spi.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;		None
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;		None
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  2    0[COMRAM] PTR unsigned char 
  7879 ;; Registers used:
  7880 ;;		wreg, status,2, status,0
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;Total ram usage:        2 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; This function calls:
  7893 ;;		Nothing
  7894 ;; This function is called by:
  7895 ;;		_main
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           	psect	text30
  7900  008136                     __ptext30:
  7901                           	opt stack 0
  7902  008136                     _spi_get_external_tx_buffer:
  7903                           	opt stack 30
  7904                           
  7905                           ;spi.c: 77: return _spi_external_tx_buffer;
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;incstack = 0
  7909  008136  0E50               	movlw	low __spi_external_tx_buffer
  7910  008138  6E01               	movwf	?_spi_get_external_tx_buffer,c
  7911  00813A  0E02               	movlw	high __spi_external_tx_buffer
  7912  00813C  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  7913  00813E  0012               	return	
  7914  008140                     __end_of_spi_get_external_tx_buffer:
  7915                           	opt stack 0
  7916                           tblptru	equ	0xFF8
  7917                           tblptrh	equ	0xFF7
  7918                           tblptrl	equ	0xFF6
  7919                           tablat	equ	0xFF5
  7920                           intcon	equ	0xFF2
  7921                           intcon2	equ	0xFF1
  7922                           intcon3	equ	0xFF0
  7923                           postinc0	equ	0xFEE
  7924                           wreg	equ	0xFE8
  7925                           postdec1	equ	0xFE5
  7926                           plusw1	equ	0xFE3
  7927                           fsr1h	equ	0xFE2
  7928                           fsr1l	equ	0xFE1
  7929                           indf2	equ	0xFDF
  7930                           postinc2	equ	0xFDE
  7931                           plusw2	equ	0xFDB
  7932                           fsr2h	equ	0xFDA
  7933                           fsr2l	equ	0xFD9
  7934                           status	equ	0xFD8
  7935                           
  7936 ;; *************** function _spi_get_external_rx_buffer *****************
  7937 ;; Defined at:
  7938 ;;		line 80 in file "spi.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;		None
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;		None
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  2    0[COMRAM] PTR unsigned char 
  7945 ;; Registers used:
  7946 ;;		wreg, status,2, status,0
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7955 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7956 ;;Total ram usage:        2 bytes
  7957 ;; Hardware stack levels used:    1
  7958 ;; This function calls:
  7959 ;;		Nothing
  7960 ;; This function is called by:
  7961 ;;		_main
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text31
  7966  008140                     __ptext31:
  7967                           	opt stack 0
  7968  008140                     _spi_get_external_rx_buffer:
  7969                           	opt stack 30
  7970                           
  7971                           ;spi.c: 82: return _spi_external_rx_buffer;
  7972                           
  7973                           ;incstack = 0
  7974  008140  0E00               	movlw	low __spi_external_rx_buffer
  7975  008142  6E01               	movwf	?_spi_get_external_rx_buffer,c
  7976  008144  0E03               	movlw	high __spi_external_rx_buffer
  7977  008146  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  7978  008148  0012               	return	
  7979  00814A                     __end_of_spi_get_external_rx_buffer:
  7980                           	opt stack 0
  7981                           tblptru	equ	0xFF8
  7982                           tblptrh	equ	0xFF7
  7983                           tblptrl	equ	0xFF6
  7984                           tablat	equ	0xFF5
  7985                           intcon	equ	0xFF2
  7986                           intcon2	equ	0xFF1
  7987                           intcon3	equ	0xFF0
  7988                           postinc0	equ	0xFEE
  7989                           wreg	equ	0xFE8
  7990                           postdec1	equ	0xFE5
  7991                           plusw1	equ	0xFE3
  7992                           fsr1h	equ	0xFE2
  7993                           fsr1l	equ	0xFE1
  7994                           indf2	equ	0xFDF
  7995                           postinc2	equ	0xFDE
  7996                           plusw2	equ	0xFDB
  7997                           fsr2h	equ	0xFDA
  7998                           fsr2l	equ	0xFD9
  7999                           status	equ	0xFD8
  8000                           
  8001 ;; *************** function _jump_to_main_program *****************
  8002 ;; Defined at:
  8003 ;;		line 248 in file "os.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;		None
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;		None
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  1    wreg      void 
  8010 ;; Registers used:
  8011 ;;		None
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8021 ;;Total ram usage:        0 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; This function calls:
  8024 ;;		Nothing
  8025 ;; This function is called by:
  8026 ;;		_main
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text32
  8031  0081DA                     __ptext32:
  8032                           	opt stack 0
  8033  0081DA                     _jump_to_main_program:
  8034                           	opt stack 30
  8035                           
  8036                           ;incstack = 0
  8037  0081DA  EF00 F048          	goto	36864	; ;# 
  8038  0081DE  0012               	return		;funcret
  8039  0081E0                     __end_of_jump_to_main_program:
  8040                           	opt stack 0
  8041                           tblptru	equ	0xFF8
  8042                           tblptrh	equ	0xFF7
  8043                           tblptrl	equ	0xFF6
  8044                           tablat	equ	0xFF5
  8045                           intcon	equ	0xFF2
  8046                           intcon2	equ	0xFF1
  8047                           intcon3	equ	0xFF0
  8048                           postinc0	equ	0xFEE
  8049                           wreg	equ	0xFE8
  8050                           postdec1	equ	0xFE5
  8051                           plusw1	equ	0xFE3
  8052                           fsr1h	equ	0xFE2
  8053                           fsr1l	equ	0xFE1
  8054                           indf2	equ	0xFDF
  8055                           postinc2	equ	0xFDE
  8056                           plusw2	equ	0xFDB
  8057                           fsr2h	equ	0xFDA
  8058                           fsr2l	equ	0xFD9
  8059                           status	equ	0xFD8
  8060                           
  8061 ;; *************** function _bootloader_run *****************
  8062 ;; Defined at:
  8063 ;;		line 63 in file "bootloader.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  timeslot        1    wreg     unsigned char 
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;  timeslot        1   93[COMRAM] unsigned char 
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8080 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8081 ;;Total ram usage:        1 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:    8
  8084 ;; This function calls:
  8085 ;;		__bootloader_find_file
  8086 ;;		__bootloader_program
  8087 ;;		__bootloader_verify_file
  8088 ;; This function is called by:
  8089 ;;		_main
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text33
  8094  007114                     __ptext33:
  8095                           	opt stack 0
  8096  007114                     _bootloader_run:
  8097                           	opt stack 22
  8098                           
  8099                           ;incstack = 0
  8100                           ;bootloader_run@timeslot stored from wreg
  8101  007114  6E5E               	movwf	bootloader_run@timeslot,c
  8102                           
  8103                           ;bootloader.c: 65: switch(os.bootloader_mode)
  8104  007116  D015               	goto	l2304
  8105  007118                     
  8106                           ;bootloader.c: 68: if(timeslot==0)
  8107  007118  505E               	movf	bootloader_run@timeslot,w,c
  8108  00711A  A4D8               	btfss	status,2,c
  8109  00711C  0012               	return	
  8110                           
  8111                           ;bootloader.c: 69: {;bootloader.c: 70: _bootloader_find_file();
  8112  00711E  ECAB  F02D         	call	__bootloader_find_file	;wreg free
  8113                           
  8114                           ;bootloader.c: 71: };bootloader.c: 72: break;
  8115  007122  0012               	return	
  8116  007124                     
  8117                           ;bootloader.c: 75: if(timeslot==0)
  8118  007124  505E               	movf	bootloader_run@timeslot,w,c
  8119  007126  A4D8               	btfss	status,2,c
  8120  007128  0012               	return	
  8121                           
  8122                           ;bootloader.c: 76: {;bootloader.c: 77: _bootloader_find_file();
  8123  00712A  ECAB  F02D         	call	__bootloader_find_file	;wreg free
  8124                           
  8125                           ;bootloader.c: 78: };bootloader.c: 79: break;
  8126  00712E  0012               	return	
  8127  007130                     
  8128                           ;bootloader.c: 82: _bootloader_verify_file();
  8129  007130  ECBE  F007         	call	__bootloader_verify_file	;wreg free
  8130                           
  8131                           ;bootloader.c: 89: break;
  8132                           
  8133                           ;bootloader.c: 88: case BOOTLOADER_MODE_CHECK_FAILED:
  8134                           
  8135                           ;bootloader.c: 86: break;
  8136                           
  8137                           ;bootloader.c: 85: case BOOTLOADER_MODE_CHECK_COMPLETE:
  8138                           
  8139                           ;bootloader.c: 83: break;
  8140  007134  0012               	return	
  8141  007136                     
  8142                           ;bootloader.c: 92: if(timeslot==0)
  8143  007136  505E               	movf	bootloader_run@timeslot,w,c
  8144  007138  A4D8               	btfss	status,2,c
  8145  00713A  0012               	return	
  8146                           
  8147                           ;bootloader.c: 93: {;bootloader.c: 94: _bootloader_program();
  8148  00713C  EC2D  F004         	call	__bootloader_program	;wreg free
  8149                           
  8150                           ;bootloader.c: 100: }
  8151                           
  8152                           ;bootloader.c: 99: break;
  8153                           
  8154                           ;bootloader.c: 98: case BOOTLOADER_MODE_DONE:
  8155                           
  8156                           ;bootloader.c: 95: };bootloader.c: 96: break;
  8157  007140  0012               	return	
  8158  007142                     l2304:
  8159  007142  0100               	movlb	0	; () banked
  8160  007144  51BD               	movf	(_os+4)& (0+255),w,b	;volatile
  8161                           
  8162                           ; Switch size 1, requested type "space"
  8163                           ; Number of cases is 7, Range of values is 16 to 112
  8164                           ; switch strategies available:
  8165                           ; Name         Instructions Cycles
  8166                           ; simple_byte           22    12 (average)
  8167                           ;	Chosen strategy is simple_byte
  8168  007146  0A10               	xorlw	16	; case 16
  8169  007148  B4D8               	btfsc	status,2,c
  8170  00714A  D7E6               	goto	l2305
  8171  00714C  0A30               	xorlw	48	; case 32
  8172  00714E  B4D8               	btfsc	status,2,c
  8173  007150  D7E9               	goto	l2308
  8174  007152  0A10               	xorlw	16	; case 48
  8175  007154  B4D8               	btfsc	status,2,c
  8176  007156  D7EC               	goto	l2310
  8177  007158  0A70               	xorlw	112	; case 64
  8178  00715A  B4D8               	btfsc	status,2,c
  8179  00715C  0012               	return	
  8180  00715E  0A10               	xorlw	16	; case 80
  8181  007160  B4D8               	btfsc	status,2,c
  8182  007162  0012               	return	
  8183  007164  0A30               	xorlw	48	; case 96
  8184  007166  B4D8               	btfsc	status,2,c
  8185  007168  D7E6               	goto	l2313
  8186  00716A  0A10               	xorlw	16	; case 112
  8187  00716C  0012               	return	
  8188  00716E                     __end_of_bootloader_run:
  8189                           	opt stack 0
  8190                           tblptru	equ	0xFF8
  8191                           tblptrh	equ	0xFF7
  8192                           tblptrl	equ	0xFF6
  8193                           tablat	equ	0xFF5
  8194                           intcon	equ	0xFF2
  8195                           intcon2	equ	0xFF1
  8196                           intcon3	equ	0xFF0
  8197                           postinc0	equ	0xFEE
  8198                           wreg	equ	0xFE8
  8199                           postdec1	equ	0xFE5
  8200                           plusw1	equ	0xFE3
  8201                           fsr1h	equ	0xFE2
  8202                           fsr1l	equ	0xFE1
  8203                           indf2	equ	0xFDF
  8204                           postinc2	equ	0xFDE
  8205                           plusw2	equ	0xFDB
  8206                           fsr2h	equ	0xFDA
  8207                           fsr2l	equ	0xFD9
  8208                           status	equ	0xFD8
  8209                           
  8210 ;; *************** function __bootloader_verify_file *****************
  8211 ;; Defined at:
  8212 ;;		line 179 in file "bootloader.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;		None
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  root           32    8[BANK0 ] struct .
  8217 ;;  address32       4   45[BANK0 ] unsigned long 
  8218 ;;  return_value    4   41[BANK0 ] unsigned long 
  8219 ;;  rec_counter     1   40[BANK0 ] unsigned char 
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  1    wreg      void 
  8222 ;; Registers used:
  8223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8230 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8231 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8232 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8233 ;;Total ram usage:       49 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; Hardware stack levels required when called:    7
  8236 ;; This function calls:
  8237 ;;		__bootloader_check_address
  8238 ;;		_fat_get_file_information
  8239 ;;		_fat_get_file_size
  8240 ;;		_fat_read_from_file_fast
  8241 ;;		_parseHexFileEntry
  8242 ;; This function is called by:
  8243 ;;		_bootloader_run
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text34
  8248  000F7C                     __ptext34:
  8249                           	opt stack 0
  8250  000F7C                     __bootloader_verify_file:
  8251                           	opt stack 22
  8252                           
  8253                           ;bootloader.c: 181: uint8_t rec_counter;;bootloader.c: 182: uint32_t return_value = 0;
  8254                           
  8255                           ;incstack = 0
  8256  000F7C  0E00               	movlw	0
  8257  000F7E  0100               	movlb	0	; () banked
  8258  000F80  6F89               	movwf	__bootloader_verify_file@return_value& (0+255),b
  8259  000F82  0E00               	movlw	0
  8260  000F84  6F8A               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  8261  000F86  0E00               	movlw	0
  8262  000F88  6F8B               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  8263  000F8A  0E00               	movlw	0
  8264  000F8C  6F8C               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;bootloader.c: 183: uint32_t address32;;bootloader.c: 184: rootEntry_t root;;bootloader.
      +                          c: 186: if(hex_file_offset==0)
  8268  000F8E  51CF               	movf	_hex_file_offset& (0+255),w,b
  8269  000F90  11D0               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  8270  000F92  11D1               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  8271  000F94  11D2               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  8272  000F96  A4D8               	btfss	status,2,c
  8273  000F98  D010               	goto	l2337
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;bootloader.c: 187: {;bootloader.c: 189: fat_get_file_information(file_number, &root);
  8277  000F9A  0E68               	movlw	low __bootloader_verify_file@root
  8278  000F9C  6E37               	movwf	fat_get_file_information@data,c
  8279  000F9E  0E00               	movlw	high __bootloader_verify_file@root
  8280  000FA0  6E38               	movwf	fat_get_file_information@data+1,c
  8281  000FA2  51FF               	movf	_file_number& (0+255),w,b
  8282  000FA4  ECA8  F034         	call	_fat_get_file_information
  8283                           
  8284                           ;bootloader.c: 190: fast_read_cluster = root.firstCluster;
  8285  000FA8  C082  F0F9         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  8286  000FAC  C083  F0FA         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  8287                           
  8288                           ;bootloader.c: 191: fast_read_cluster_number = 0;
  8289  000FB0  0E00               	movlw	0
  8290  000FB2  0100               	movlb	0	; () banked
  8291  000FB4  6FF8               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  8292  000FB6  0E00               	movlw	0
  8293  000FB8  6FF7               	movwf	_fast_read_cluster_number& (0+255),b
  8294  000FBA                     l2337:
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;bootloader.c: 192: };bootloader.c: 195: hex_file_size = fat_get_file_size(file_number);
  8298                           
  8299                           ; BSR set to: 0
  8300  000FBA  51FF               	movf	_file_number& (0+255),w,b
  8301  000FBC  EC1C  F035         	call	_fat_get_file_size
  8302  000FC0  C030  F0CB         	movff	?_fat_get_file_size,_hex_file_size
  8303  000FC4  C031  F0CC         	movff	?_fat_get_file_size+1,_hex_file_size+1
  8304  000FC8  C032  F0CD         	movff	?_fat_get_file_size+2,_hex_file_size+2
  8305  000FCC  C033  F0CE         	movff	?_fat_get_file_size+3,_hex_file_size+3
  8306                           
  8307                           ;bootloader.c: 198: for(rec_counter=0; rec_counter<16; ++rec_counter)
  8308  000FD0  0E00               	movlw	0
  8309  000FD2  0100               	movlb	0	; () banked
  8310  000FD4  6F88               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  8311  000FD6                     l14261:
  8312                           
  8313                           ; BSR set to: 0
  8314  000FD6  0E0F               	movlw	15
  8315  000FD8  6588               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  8316  000FDA  D001               	goto	l2338
  8317  000FDC  0012               	return	
  8318  000FDE                     l2338:
  8319                           
  8320                           ; BSR set to: 0
  8321                           ;bootloader.c: 199: {;bootloader.c: 201: if((hex_file_size-hex_file_offset)>=50)
  8322                           
  8323                           ; BSR set to: 0
  8324  000FDE  C0CF  F060         	movff	_hex_file_offset,??__bootloader_verify_file
  8325  000FE2  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  8326  000FE6  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  8327  000FEA  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  8328  000FEE  1F60               	comf	??__bootloader_verify_file& (0+255),f,b
  8329  000FF0  1F61               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  8330  000FF2  1F62               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  8331  000FF4  1F63               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  8332  000FF6  2B60               	incf	??__bootloader_verify_file& (0+255),f,b
  8333  000FF8  0E00               	movlw	0
  8334  000FFA  2361               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  8335  000FFC  2362               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  8336  000FFE  2363               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  8337  001000  51CB               	movf	_hex_file_size& (0+255),w,b
  8338  001002  2560               	addwf	??__bootloader_verify_file& (0+255),w,b
  8339  001004  6F64               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  8340  001006  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  8341  001008  2161               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  8342  00100A  6F65               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  8343  00100C  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  8344  00100E  2162               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  8345  001010  6F66               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  8346  001012  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  8347  001014  2163               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  8348  001016  6F67               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  8349  001018  5167               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  8350  00101A  1166               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  8351  00101C  1165               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  8352  00101E  E104               	bnz	u11130
  8353  001020  0E32               	movlw	50
  8354  001022  5D64               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  8355  001024  A0D8               	btfss	status,0,c
  8356  001026  D01F               	goto	l2340
  8357  001028                     u11130:
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;bootloader.c: 202: {;bootloader.c: 204: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  8361  001028  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  8362  00102C  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  8363  001030  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  8364  001034  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  8365  001038  0E32               	movlw	50
  8366  00103A  6E3C               	movwf	fat_read_from_file_fast@length,c
  8367  00103C  0E00               	movlw	0
  8368  00103E  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  8369  001040  0E00               	movlw	0
  8370  001042  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  8371  001044  0E00               	movlw	0
  8372  001046  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  8373  001048  0E88               	movlw	low _file_buffer
  8374  00104A  6E40               	movwf	fat_read_from_file_fast@data,c
  8375  00104C  0E01               	movlw	high _file_buffer
  8376  00104E  6E41               	movwf	fat_read_from_file_fast@data+1,c
  8377  001050  0EF9               	movlw	low _fast_read_cluster
  8378  001052  6E42               	movwf	fat_read_from_file_fast@cluster,c
  8379  001054  0E00               	movlw	high _fast_read_cluster
  8380  001056  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  8381  001058  0EF7               	movlw	low _fast_read_cluster_number
  8382  00105A  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  8383  00105C  0E00               	movlw	high _fast_read_cluster_number
  8384  00105E  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  8385  001060  ECC4  F00F         	call	_fat_read_from_file_fast	;wreg free
  8386                           
  8387                           ;bootloader.c: 205: }
  8388  001064  D034               	goto	l2341
  8389  001066                     l2340:
  8390                           
  8391                           ;bootloader.c: 206: else;bootloader.c: 207: {;bootloader.c: 209: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  8392  001066  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  8393  00106A  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  8394  00106E  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  8395  001072  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  8396  001076  C0CF  F060         	movff	_hex_file_offset,??__bootloader_verify_file
  8397  00107A  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  8398  00107E  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  8399  001082  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  8400  001086  0100               	movlb	0	; () banked
  8401  001088  1F60               	comf	??__bootloader_verify_file& (0+255),f,b
  8402  00108A  1F61               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  8403  00108C  1F62               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  8404  00108E  1F63               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  8405  001090  2B60               	incf	??__bootloader_verify_file& (0+255),f,b
  8406  001092  0E00               	movlw	0
  8407  001094  2361               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  8408  001096  2362               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  8409  001098  2363               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  8410  00109A  51CB               	movf	_hex_file_size& (0+255),w,b
  8411  00109C  2560               	addwf	??__bootloader_verify_file& (0+255),w,b
  8412  00109E  6E3C               	movwf	fat_read_from_file_fast@length,c
  8413  0010A0  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  8414  0010A2  2161               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  8415  0010A4  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  8416  0010A6  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  8417  0010A8  2162               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  8418  0010AA  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  8419  0010AC  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  8420  0010AE  2163               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  8421  0010B0  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  8422  0010B2  0E88               	movlw	low _file_buffer
  8423  0010B4  6E40               	movwf	fat_read_from_file_fast@data,c
  8424  0010B6  0E01               	movlw	high _file_buffer
  8425  0010B8  6E41               	movwf	fat_read_from_file_fast@data+1,c
  8426  0010BA  0EF9               	movlw	low _fast_read_cluster
  8427  0010BC  6E42               	movwf	fat_read_from_file_fast@cluster,c
  8428  0010BE  0E00               	movlw	high _fast_read_cluster
  8429  0010C0  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  8430  0010C2  0EF7               	movlw	low _fast_read_cluster_number
  8431  0010C4  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  8432  0010C6  0E00               	movlw	high _fast_read_cluster_number
  8433  0010C8  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  8434  0010CA  ECC4  F00F         	call	_fat_read_from_file_fast	;wreg free
  8435  0010CE                     l2341:
  8436                           
  8437                           ;bootloader.c: 210: };bootloader.c: 213: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  8438  0010CE  0E88               	movlw	low _file_buffer
  8439  0010D0  6E0C               	movwf	parseHexFileEntry@data,c
  8440  0010D2  0E01               	movlw	high _file_buffer
  8441  0010D4  6E0D               	movwf	parseHexFileEntry@data+1,c
  8442  0010D6  0E00               	movlw	0
  8443  0010D8  6E0E               	movwf	parseHexFileEntry@offset,c
  8444  0010DA  0E00               	movlw	0
  8445  0010DC  6E0F               	movwf	parseHexFileEntry@offset+1,c
  8446  0010DE  0E00               	movlw	0
  8447  0010E0  6E10               	movwf	parseHexFileEntry@offset+2,c
  8448  0010E2  0E00               	movlw	0
  8449  0010E4  6E11               	movwf	parseHexFileEntry@offset+3,c
  8450  0010E6  0EBA               	movlw	low _hex_file_entry
  8451  0010E8  6E12               	movwf	parseHexFileEntry@hexEntry,c
  8452  0010EA  0E01               	movlw	high _hex_file_entry
  8453  0010EC  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  8454  0010EE  EC10  F000         	call	_parseHexFileEntry	;wreg free
  8455  0010F2  C00C  F089         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  8456  0010F6  C00D  F08A         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  8457  0010FA  C00E  F08B         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  8458  0010FE  C00F  F08C         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  8459                           
  8460                           ;bootloader.c: 216: ++hex_file_entries;
  8461  001102  0101               	movlb	1	; () banked
  8462  001104  4B74               	infsnz	_hex_file_entries& (0+255),f,b
  8463  001106  2B75               	incf	(_hex_file_entries+1)& (0+255),f,b
  8464                           
  8465                           ; BSR set to: 1
  8466                           ;bootloader.c: 219: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  8467  001108  0E04               	movlw	4
  8468  00110A  19BE               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  8469  00110C  A4D8               	btfss	status,2,c
  8470  00110E  D01C               	goto	l2342
  8471                           
  8472                           ; BSR set to: 1
  8473                           ;bootloader.c: 220: {;bootloader.c: 221: extended_linear_address = hex_file_entry.data[0
      +                          ];
  8474  001110  51BF               	movf	(_hex_file_entry+5)& (0+255),w,b
  8475  001112  6F46               	movwf	_extended_linear_address& (0+255),b
  8476  001114  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  8477  001116  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  8478  001118  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  8479                           
  8480                           ; BSR set to: 1
  8481                           ;bootloader.c: 222: extended_linear_address <<= 8;
  8482  00111A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  8483  00111E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  8484  001122  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  8485  001126  6B46               	clrf	_extended_linear_address& (0+255),b
  8486                           
  8487                           ; BSR set to: 1
  8488                           ;bootloader.c: 223: extended_linear_address |= hex_file_entry.data[1];
  8489  001128  51C0               	movf	(_hex_file_entry+6)& (0+255),w,b
  8490  00112A  1346               	iorwf	_extended_linear_address& (0+255),f,b
  8491                           
  8492                           ; BSR set to: 1
  8493                           ;bootloader.c: 224: extended_linear_address <<= 8;
  8494  00112C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  8495  001130  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  8496  001134  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  8497  001138  6B46               	clrf	_extended_linear_address& (0+255),b
  8498                           
  8499                           ; BSR set to: 1
  8500                           ;bootloader.c: 225: extended_linear_address <<= 8;
  8501  00113A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  8502  00113E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  8503  001142  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  8504  001146  6B46               	clrf	_extended_linear_address& (0+255),b
  8505  001148                     l2342:
  8506                           
  8507                           ; BSR set to: 1
  8508                           ;bootloader.c: 226: };bootloader.c: 229: if(hex_file_entry.recordType==RecordTypeData)
  8509                           
  8510                           ; BSR set to: 1
  8511  001148  51BE               	movf	(_hex_file_entry+4)& (0+255),w,b
  8512  00114A  A4D8               	btfss	status,2,c
  8513  00114C  D05D               	goto	l2346
  8514                           
  8515                           ; BSR set to: 1
  8516                           ;bootloader.c: 230: {;bootloader.c: 232: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  8517  00114E  51BC               	movf	(_hex_file_entry+2)& (0+255),w,b
  8518  001150  2546               	addwf	_extended_linear_address& (0+255),w,b
  8519  001152  0100               	movlb	0	; () banked
  8520  001154  6F8D               	movwf	__bootloader_verify_file@address32& (0+255),b
  8521  001156  0101               	movlb	1	; () banked
  8522  001158  51BD               	movf	(_hex_file_entry+3)& (0+255),w,b
  8523  00115A  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  8524  00115C  0100               	movlb	0	; () banked
  8525  00115E  6F8E               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  8526  001160  0E00               	movlw	0
  8527  001162  0101               	movlb	1	; () banked
  8528  001164  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  8529  001166  0100               	movlb	0	; () banked
  8530  001168  6F8F               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  8531  00116A  0E00               	movlw	0
  8532  00116C  0101               	movlb	1	; () banked
  8533  00116E  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  8534  001170  0100               	movlb	0	; () banked
  8535  001172  6F90               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  8536                           
  8537                           ;bootloader.c: 235: if(address32<file_minimum_address)
  8538  001174  0101               	movlb	1	; () banked
  8539  001176  514E               	movf	_file_minimum_address& (0+255),w,b
  8540  001178  0100               	movlb	0	; () banked
  8541  00117A  5D8D               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  8542  00117C  0101               	movlb	1	; () banked
  8543  00117E  514F               	movf	(_file_minimum_address+1)& (0+255),w,b
  8544  001180  0100               	movlb	0	; () banked
  8545  001182  598E               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  8546  001184  0101               	movlb	1	; () banked
  8547  001186  5150               	movf	(_file_minimum_address+2)& (0+255),w,b
  8548  001188  0100               	movlb	0	; () banked
  8549  00118A  598F               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  8550  00118C  0101               	movlb	1	; () banked
  8551  00118E  5151               	movf	(_file_minimum_address+3)& (0+255),w,b
  8552  001190  0100               	movlb	0	; () banked
  8553  001192  5990               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  8554  001194  B0D8               	btfsc	status,0,c
  8555  001196  D008               	goto	l2344
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;bootloader.c: 236: {;bootloader.c: 237: file_minimum_address = address32;
  8559  001198  C08D  F14E         	movff	__bootloader_verify_file@address32,_file_minimum_address
  8560  00119C  C08E  F14F         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  8561  0011A0  C08F  F150         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  8562  0011A4  C090  F151         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  8563  0011A8                     l2344:
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;bootloader.c: 238: };bootloader.c: 239: if(address32>file_maximum_address)
  8567                           
  8568                           ; BSR set to: 0
  8569  0011A8  518D               	movf	__bootloader_verify_file@address32& (0+255),w,b
  8570  0011AA  0101               	movlb	1	; () banked
  8571  0011AC  5D4A               	subwf	_file_maximum_address& (0+255),w,b
  8572  0011AE  0100               	movlb	0	; () banked
  8573  0011B0  518E               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  8574  0011B2  0101               	movlb	1	; () banked
  8575  0011B4  594B               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  8576  0011B6  0100               	movlb	0	; () banked
  8577  0011B8  518F               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  8578  0011BA  0101               	movlb	1	; () banked
  8579  0011BC  594C               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  8580  0011BE  0100               	movlb	0	; () banked
  8581  0011C0  5190               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  8582  0011C2  0101               	movlb	1	; () banked
  8583  0011C4  594D               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  8584  0011C6  B0D8               	btfsc	status,0,c
  8585  0011C8  D008               	goto	l2345
  8586                           
  8587                           ; BSR set to: 1
  8588                           ;bootloader.c: 240: {;bootloader.c: 241: file_maximum_address = address32;
  8589  0011CA  C08D  F14A         	movff	__bootloader_verify_file@address32,_file_maximum_address
  8590  0011CE  C08E  F14B         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  8591  0011D2  C08F  F14C         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  8592  0011D6  C090  F14D         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  8593  0011DA                     l2345:
  8594                           
  8595                           ; BSR set to: 1
  8596                           ;bootloader.c: 242: };bootloader.c: 245: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  8597                           
  8598                           ; BSR set to: 1
  8599  0011DA  C08D  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  8600  0011DE  C08E  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  8601  0011E2  C08F  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  8602  0011E6  C090  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  8603  0011EA  C1BA  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  8604  0011EE  EC9E  F027         	call	__bootloader_check_address	;wreg free
  8605  0011F2  0AFF               	xorlw	255
  8606  0011F4  A4D8               	btfss	status,2,c
  8607  0011F6  D008               	goto	l2346
  8608                           
  8609                           ;bootloader.c: 246: {;bootloader.c: 248: last_error = ShortRecordErrorAddressRange;
  8610  0011F8  0E0B               	movlw	11
  8611  0011FA  0100               	movlb	0	; () banked
  8612  0011FC  6FDE               	movwf	_last_error& (0+255),b
  8613                           
  8614                           ;bootloader.c: 250: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  8615  0011FE  0E50               	movlw	80
  8616  001200  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  8617                           
  8618                           ;bootloader.c: 251: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  8619  001202  0E50               	movlw	80
  8620  001204  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  8621                           
  8622                           ;bootloader.c: 252: break;
  8623  001206  0012               	return	
  8624  001208                     l2346:
  8625                           
  8626                           ;bootloader.c: 253: };bootloader.c: 254: };bootloader.c: 256: if(return_value==0)
  8627                           
  8628                           ; BSR set to: 0
  8629                           
  8630                           ; BSR set to: 0
  8631  001208  0100               	movlb	0	; () banked
  8632  00120A  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  8633  00120C  118A               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  8634  00120E  118B               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  8635  001210  118C               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  8636  001212  A4D8               	btfss	status,2,c
  8637  001214  D027               	goto	l2347
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;bootloader.c: 257: {;bootloader.c: 260: total_hex_file_entries = hex_file_entries;
  8641  001216  C174  F172         	movff	_hex_file_entries,_total_hex_file_entries
  8642  00121A  C175  F173         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;bootloader.c: 261: hex_file_entries = 0;
  8646  00121E  0E00               	movlw	0
  8647  001220  0101               	movlb	1	; () banked
  8648  001222  6F75               	movwf	(_hex_file_entries+1)& (0+255),b
  8649  001224  0E00               	movlw	0
  8650  001226  6F74               	movwf	_hex_file_entries& (0+255),b
  8651                           
  8652                           ;bootloader.c: 262: hex_file_offset = 0;
  8653  001228  0E00               	movlw	0
  8654  00122A  0100               	movlb	0	; () banked
  8655  00122C  6FCF               	movwf	_hex_file_offset& (0+255),b
  8656  00122E  0E00               	movlw	0
  8657  001230  6FD0               	movwf	(_hex_file_offset+1)& (0+255),b
  8658  001232  0E00               	movlw	0
  8659  001234  6FD1               	movwf	(_hex_file_offset+2)& (0+255),b
  8660  001236  0E00               	movlw	0
  8661  001238  6FD2               	movwf	(_hex_file_offset+3)& (0+255),b
  8662                           
  8663                           ;bootloader.c: 263: extended_linear_address = 0;
  8664  00123A  0E00               	movlw	0
  8665  00123C  0101               	movlb	1	; () banked
  8666  00123E  6F46               	movwf	_extended_linear_address& (0+255),b
  8667  001240  0E00               	movlw	0
  8668  001242  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
  8669  001244  0E00               	movlw	0
  8670  001246  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
  8671  001248  0E00               	movlw	0
  8672  00124A  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
  8673                           
  8674                           ;bootloader.c: 264: flash_pages_written = 0;
  8675  00124C  0E00               	movlw	0
  8676  00124E  6F71               	movwf	(_flash_pages_written+1)& (0+255),b
  8677  001250  0E00               	movlw	0
  8678  001252  6F70               	movwf	_flash_pages_written& (0+255),b
  8679                           
  8680                           ;bootloader.c: 265: start_from_byte_next = 0;
  8681  001254  0E00               	movlw	0
  8682  001256  0100               	movlb	0	; () banked
  8683  001258  6FDD               	movwf	_start_from_byte_next& (0+255),b
  8684                           
  8685                           ;bootloader.c: 267: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  8686  00125A  0E40               	movlw	64
  8687  00125C  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  8688                           
  8689                           ;bootloader.c: 268: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  8690  00125E  0E40               	movlw	64
  8691  001260  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  8692                           
  8693                           ;bootloader.c: 269: break;
  8694  001262  0012               	return	
  8695  001264                     l2347:
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;bootloader.c: 271: else if(return_value>0xFFFFFFF0)
  8699                           
  8700                           ; BSR set to: 0
  8701  001264  0EF1               	movlw	241
  8702  001266  5D89               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  8703  001268  0EFF               	movlw	255
  8704  00126A  598A               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  8705  00126C  0EFF               	movlw	255
  8706  00126E  598B               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  8707  001270  0EFF               	movlw	255
  8708  001272  598C               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  8709  001274  A0D8               	btfss	status,0,c
  8710  001276  D007               	goto	l2349
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;bootloader.c: 272: {;bootloader.c: 274: last_error = return_value & 0xF;
  8714  001278  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  8715  00127A  0B0F               	andlw	15
  8716  00127C  6FDE               	movwf	_last_error& (0+255),b
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;bootloader.c: 276: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  8720  00127E  0E50               	movlw	80
  8721  001280  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;bootloader.c: 277: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  8725  001282  0E50               	movlw	80
  8726  001284  D7ED               	goto	L1
  8727  001286                     l2349:
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;bootloader.c: 280: else;bootloader.c: 281: {;bootloader.c: 283: hex_file_offset += retu
      +                          rn_value;
  8731                           
  8732                           ; BSR set to: 0
  8733  001286  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  8734  001288  27CF               	addwf	_hex_file_offset& (0+255),f,b
  8735  00128A  518A               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  8736  00128C  23D0               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  8737  00128E  518B               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  8738  001290  23D1               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  8739  001292  518C               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  8740  001294  23D2               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  8741                           
  8742                           ; BSR set to: 0
  8743                           
  8744                           ; BSR set to: 0
  8745                           
  8746                           ; BSR set to: 0
  8747  001296  2B88               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  8748  001298  D69E               	goto	l14261
  8749  00129A                     __end_of__bootloader_verify_file:
  8750                           	opt stack 0
  8751                           tblptru	equ	0xFF8
  8752                           tblptrh	equ	0xFF7
  8753                           tblptrl	equ	0xFF6
  8754                           tablat	equ	0xFF5
  8755                           intcon	equ	0xFF2
  8756                           intcon2	equ	0xFF1
  8757                           intcon3	equ	0xFF0
  8758                           postinc0	equ	0xFEE
  8759                           wreg	equ	0xFE8
  8760                           postdec1	equ	0xFE5
  8761                           plusw1	equ	0xFE3
  8762                           fsr1h	equ	0xFE2
  8763                           fsr1l	equ	0xFE1
  8764                           indf2	equ	0xFDF
  8765                           postinc2	equ	0xFDE
  8766                           plusw2	equ	0xFDB
  8767                           fsr2h	equ	0xFDA
  8768                           fsr2l	equ	0xFD9
  8769                           status	equ	0xFD8
  8770                           
  8771 ;; *************** function __bootloader_program *****************
  8772 ;; Defined at:
  8773 ;;		line 288 in file "bootloader.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;		None
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  root           32   14[BANK0 ] struct .
  8778 ;;  address32       4   50[BANK0 ] unsigned long 
  8779 ;;  return_value    4   46[BANK0 ] unsigned long 
  8780 ;;  page_to_writ    2   57[BANK0 ] unsigned int 
  8781 ;;  cntr            2   55[BANK0 ] unsigned int 
  8782 ;;  address_with    2   12[BANK0 ] unsigned int 
  8783 ;;  entry_page      2   10[BANK0 ] unsigned int 
  8784 ;;  buffer          2    8[BANK0 ] PTR unsigned char 
  8785 ;;		 -> pageBuffer(1024), 
  8786 ;;  start_from_b    1   54[BANK0 ] unsigned char 
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      void 
  8789 ;; Registers used:
  8790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8797 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8798 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;Total ram usage:       59 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; Hardware stack levels required when called:    7
  8803 ;; This function calls:
  8804 ;;		__bootloader_check_address
  8805 ;;		_fat_get_file_information
  8806 ;;		_fat_read_from_file_fast
  8807 ;;		_internalFlash_addressWithinPage
  8808 ;;		_internalFlash_erasePage
  8809 ;;		_internalFlash_getBuffer
  8810 ;;		_internalFlash_pageFromAddress
  8811 ;;		_internalFlash_readPage
  8812 ;;		_internalFlash_writePage
  8813 ;;		_parseHexFileEntry
  8814 ;; This function is called by:
  8815 ;;		_bootloader_run
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text35
  8820  00085A                     __ptext35:
  8821                           	opt stack 0
  8822  00085A                     __bootloader_program:
  8823                           	opt stack 22
  8824                           
  8825                           ;bootloader.c: 290: uint16_t cntr;;bootloader.c: 291: uint8_t* buffer;;bootloader.c: 292
      +                          : uint16_t entry_page;;bootloader.c: 293: uint16_t page_to_write = 0;
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;incstack = 0
  8829  00085A  0E00               	movlw	0
  8830  00085C  0100               	movlb	0	; () banked
  8831  00085E  6F9A               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  8832  000860  0E00               	movlw	0
  8833  000862  6F99               	movwf	__bootloader_program@page_to_write& (0+255),b
  8834                           
  8835                           ;bootloader.c: 294: uint8_t start_from_byte;;bootloader.c: 295: uint32_t address32;;boot
      +                          loader.c: 296: uint32_t return_value = 0;
  8836  000864  0E00               	movlw	0
  8837  000866  6F8E               	movwf	__bootloader_program@return_value& (0+255),b
  8838  000868  0E00               	movlw	0
  8839  00086A  6F8F               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  8840  00086C  0E00               	movlw	0
  8841  00086E  6F90               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  8842  000870  0E00               	movlw	0
  8843  000872  6F91               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;bootloader.c: 297: uint16_t address_within_page;;bootloader.c: 298: rootEntry_t root;;b
      +                          ootloader.c: 300: if(hex_file_offset==0)
  8847  000874  51CF               	movf	_hex_file_offset& (0+255),w,b
  8848  000876  11D0               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  8849  000878  11D1               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  8850  00087A  11D2               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  8851  00087C  A4D8               	btfss	status,2,c
  8852  00087E  D010               	goto	l2354
  8853                           
  8854                           ; BSR set to: 0
  8855                           ;bootloader.c: 301: {;bootloader.c: 303: fat_get_file_information(file_number, &root);
  8856  000880  0E6E               	movlw	low __bootloader_program@root
  8857  000882  6E37               	movwf	fat_get_file_information@data,c
  8858  000884  0E00               	movlw	high __bootloader_program@root
  8859  000886  6E38               	movwf	fat_get_file_information@data+1,c
  8860  000888  51FF               	movf	_file_number& (0+255),w,b
  8861  00088A  ECA8  F034         	call	_fat_get_file_information
  8862                           
  8863                           ;bootloader.c: 304: fast_read_cluster = root.firstCluster;
  8864  00088E  C088  F0F9         	movff	__bootloader_program@root+26,_fast_read_cluster
  8865  000892  C089  F0FA         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  8866                           
  8867                           ;bootloader.c: 305: fast_read_cluster_number = 0;
  8868  000896  0E00               	movlw	0
  8869  000898  0100               	movlb	0	; () banked
  8870  00089A  6FF8               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  8871  00089C  0E00               	movlw	0
  8872  00089E  6FF7               	movwf	_fast_read_cluster_number& (0+255),b
  8873  0008A0                     l2354:
  8874                           
  8875                           ;bootloader.c: 310: {;bootloader.c: 315: if((hex_file_size-hex_file_offset)>=50)
  8876                           
  8877                           ; BSR set to: 0
  8878                           
  8879                           ;bootloader.c: 306: };bootloader.c: 309: while(1)
  8880                           
  8881                           ; BSR set to: 0
  8882  0008A0  C0CF  F060         	movff	_hex_file_offset,??__bootloader_program
  8883  0008A4  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_program+1
  8884  0008A8  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_program+2
  8885  0008AC  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_program+3
  8886  0008B0  0100               	movlb	0	; () banked
  8887  0008B2  1F60               	comf	??__bootloader_program& (0+255),f,b
  8888  0008B4  1F61               	comf	(??__bootloader_program+1)& (0+255),f,b
  8889  0008B6  1F62               	comf	(??__bootloader_program+2)& (0+255),f,b
  8890  0008B8  1F63               	comf	(??__bootloader_program+3)& (0+255),f,b
  8891  0008BA  2B60               	incf	??__bootloader_program& (0+255),f,b
  8892  0008BC  0E00               	movlw	0
  8893  0008BE  2361               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  8894  0008C0  2362               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  8895  0008C2  2363               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  8896  0008C4  51CB               	movf	_hex_file_size& (0+255),w,b
  8897  0008C6  2560               	addwf	??__bootloader_program& (0+255),w,b
  8898  0008C8  6F64               	movwf	(??__bootloader_program+4)& (0+255),b
  8899  0008CA  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  8900  0008CC  2161               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  8901  0008CE  6F65               	movwf	(??__bootloader_program+5)& (0+255),b
  8902  0008D0  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  8903  0008D2  2162               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  8904  0008D4  6F66               	movwf	(??__bootloader_program+6)& (0+255),b
  8905  0008D6  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  8906  0008D8  2163               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  8907  0008DA  6F67               	movwf	(??__bootloader_program+7)& (0+255),b
  8908  0008DC  5167               	movf	(??__bootloader_program+7)& (0+255),w,b
  8909  0008DE  1166               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  8910  0008E0  1165               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  8911  0008E2  E104               	bnz	u11230
  8912  0008E4  0E32               	movlw	50
  8913  0008E6  5D64               	subwf	(??__bootloader_program+4)& (0+255),w,b
  8914  0008E8  A0D8               	btfss	status,0,c
  8915  0008EA  D01F               	goto	l2356
  8916  0008EC                     u11230:
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;bootloader.c: 316: {;bootloader.c: 318: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  8920  0008EC  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  8921  0008F0  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  8922  0008F4  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  8923  0008F8  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  8924  0008FC  0E32               	movlw	50
  8925  0008FE  6E3C               	movwf	fat_read_from_file_fast@length,c
  8926  000900  0E00               	movlw	0
  8927  000902  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  8928  000904  0E00               	movlw	0
  8929  000906  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  8930  000908  0E00               	movlw	0
  8931  00090A  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  8932  00090C  0E88               	movlw	low _file_buffer
  8933  00090E  6E40               	movwf	fat_read_from_file_fast@data,c
  8934  000910  0E01               	movlw	high _file_buffer
  8935  000912  6E41               	movwf	fat_read_from_file_fast@data+1,c
  8936  000914  0EF9               	movlw	low _fast_read_cluster
  8937  000916  6E42               	movwf	fat_read_from_file_fast@cluster,c
  8938  000918  0E00               	movlw	high _fast_read_cluster
  8939  00091A  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  8940  00091C  0EF7               	movlw	low _fast_read_cluster_number
  8941  00091E  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  8942  000920  0E00               	movlw	high _fast_read_cluster_number
  8943  000922  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  8944  000924  ECC4  F00F         	call	_fat_read_from_file_fast	;wreg free
  8945                           
  8946                           ;bootloader.c: 319: }
  8947  000928  D034               	goto	l2357
  8948  00092A                     l2356:
  8949                           
  8950                           ;bootloader.c: 320: else;bootloader.c: 321: {;bootloader.c: 323: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  8951  00092A  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  8952  00092E  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  8953  000932  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  8954  000936  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  8955  00093A  C0CF  F060         	movff	_hex_file_offset,??__bootloader_program
  8956  00093E  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_program+1
  8957  000942  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_program+2
  8958  000946  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_program+3
  8959  00094A  0100               	movlb	0	; () banked
  8960  00094C  1F60               	comf	??__bootloader_program& (0+255),f,b
  8961  00094E  1F61               	comf	(??__bootloader_program+1)& (0+255),f,b
  8962  000950  1F62               	comf	(??__bootloader_program+2)& (0+255),f,b
  8963  000952  1F63               	comf	(??__bootloader_program+3)& (0+255),f,b
  8964  000954  2B60               	incf	??__bootloader_program& (0+255),f,b
  8965  000956  0E00               	movlw	0
  8966  000958  2361               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  8967  00095A  2362               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  8968  00095C  2363               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  8969  00095E  51CB               	movf	_hex_file_size& (0+255),w,b
  8970  000960  2560               	addwf	??__bootloader_program& (0+255),w,b
  8971  000962  6E3C               	movwf	fat_read_from_file_fast@length,c
  8972  000964  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  8973  000966  2161               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  8974  000968  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  8975  00096A  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  8976  00096C  2162               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  8977  00096E  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  8978  000970  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  8979  000972  2163               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  8980  000974  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  8981  000976  0E88               	movlw	low _file_buffer
  8982  000978  6E40               	movwf	fat_read_from_file_fast@data,c
  8983  00097A  0E01               	movlw	high _file_buffer
  8984  00097C  6E41               	movwf	fat_read_from_file_fast@data+1,c
  8985  00097E  0EF9               	movlw	low _fast_read_cluster
  8986  000980  6E42               	movwf	fat_read_from_file_fast@cluster,c
  8987  000982  0E00               	movlw	high _fast_read_cluster
  8988  000984  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  8989  000986  0EF7               	movlw	low _fast_read_cluster_number
  8990  000988  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  8991  00098A  0E00               	movlw	high _fast_read_cluster_number
  8992  00098C  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  8993  00098E  ECC4  F00F         	call	_fat_read_from_file_fast	;wreg free
  8994  000992                     l2357:
  8995                           
  8996                           ;bootloader.c: 324: };bootloader.c: 327: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  8997  000992  0E88               	movlw	low _file_buffer
  8998  000994  6E0C               	movwf	parseHexFileEntry@data,c
  8999  000996  0E01               	movlw	high _file_buffer
  9000  000998  6E0D               	movwf	parseHexFileEntry@data+1,c
  9001  00099A  0E00               	movlw	0
  9002  00099C  6E0E               	movwf	parseHexFileEntry@offset,c
  9003  00099E  0E00               	movlw	0
  9004  0009A0  6E0F               	movwf	parseHexFileEntry@offset+1,c
  9005  0009A2  0E00               	movlw	0
  9006  0009A4  6E10               	movwf	parseHexFileEntry@offset+2,c
  9007  0009A6  0E00               	movlw	0
  9008  0009A8  6E11               	movwf	parseHexFileEntry@offset+3,c
  9009  0009AA  0EBA               	movlw	low _hex_file_entry
  9010  0009AC  6E12               	movwf	parseHexFileEntry@hexEntry,c
  9011  0009AE  0E01               	movlw	high _hex_file_entry
  9012  0009B0  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  9013  0009B2  EC10  F000         	call	_parseHexFileEntry	;wreg free
  9014  0009B6  C00C  F08E         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  9015  0009BA  C00D  F08F         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  9016  0009BE  C00E  F090         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  9017  0009C2  C00F  F091         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  9018                           
  9019                           ;bootloader.c: 330: ++hex_file_entries;
  9020  0009C6  0101               	movlb	1	; () banked
  9021  0009C8  4B74               	infsnz	_hex_file_entries& (0+255),f,b
  9022  0009CA  2B75               	incf	(_hex_file_entries+1)& (0+255),f,b
  9023                           
  9024                           ; BSR set to: 1
  9025                           ;bootloader.c: 333: if(return_value>RecordErrorNoError)
  9026  0009CC  0EF1               	movlw	241
  9027  0009CE  0100               	movlb	0	; () banked
  9028  0009D0  5D8E               	subwf	__bootloader_program@return_value& (0+255),w,b
  9029  0009D2  0EFF               	movlw	255
  9030  0009D4  598F               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  9031  0009D6  0EFF               	movlw	255
  9032  0009D8  5990               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  9033  0009DA  0EFF               	movlw	255
  9034  0009DC  5991               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  9035  0009DE  A0D8               	btfss	status,0,c
  9036  0009E0  D005               	goto	l2358
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;bootloader.c: 334: {;bootloader.c: 336: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  9040  0009E2  0E50               	movlw	80
  9041  0009E4  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  9042                           
  9043                           ;bootloader.c: 337: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  9044  0009E6  0E50               	movlw	80
  9045  0009E8  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;bootloader.c: 338: return;
  9049  0009EA  0012               	return	
  9050  0009EC                     l2358:
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;bootloader.c: 340: else;bootloader.c: 341: {;bootloader.c: 343: hex_file_offset += retu
      +                          rn_value;
  9054                           
  9055                           ; BSR set to: 0
  9056  0009EC  518E               	movf	__bootloader_program@return_value& (0+255),w,b
  9057  0009EE  27CF               	addwf	_hex_file_offset& (0+255),f,b
  9058  0009F0  518F               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  9059  0009F2  23D0               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  9060  0009F4  5190               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  9061  0009F6  23D1               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  9062  0009F8  5191               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  9063  0009FA  23D2               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;bootloader.c: 344: };bootloader.c: 346: switch(hex_file_entry.recordType)
  9067  0009FC  D0FC               	goto	l2361
  9068  0009FE                     
  9069                           ;bootloader.c: 352: extended_linear_address = hex_file_entry.data[0];
  9070                           
  9071                           ; BSR set to: 0
  9072  0009FE  0101               	movlb	1	; () banked
  9073  000A00  51BF               	movf	(_hex_file_entry+5)& (0+255),w,b
  9074  000A02  6F46               	movwf	_extended_linear_address& (0+255),b
  9075  000A04  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  9076  000A06  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  9077  000A08  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  9078                           
  9079                           ; BSR set to: 1
  9080                           ;bootloader.c: 353: extended_linear_address <<= 8;
  9081  000A0A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  9082  000A0E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  9083  000A12  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  9084  000A16  6B46               	clrf	_extended_linear_address& (0+255),b
  9085                           
  9086                           ; BSR set to: 1
  9087                           ;bootloader.c: 354: extended_linear_address |= hex_file_entry.data[1];
  9088  000A18  51C0               	movf	(_hex_file_entry+6)& (0+255),w,b
  9089  000A1A  1346               	iorwf	_extended_linear_address& (0+255),f,b
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;bootloader.c: 355: extended_linear_address <<= 8;
  9093  000A1C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  9094  000A20  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  9095  000A24  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  9096  000A28  6B46               	clrf	_extended_linear_address& (0+255),b
  9097                           
  9098                           ; BSR set to: 1
  9099                           ;bootloader.c: 356: extended_linear_address <<= 8;
  9100  000A2A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  9101  000A2E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  9102  000A32  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  9103  000A36  6B46               	clrf	_extended_linear_address& (0+255),b
  9104                           
  9105                           ; BSR set to: 1
  9106                           ;bootloader.c: 358: break;
  9107                           
  9108                           ;bootloader.c: 357: continue;
  9109  000A38  D733               	goto	l2354
  9110  000A3A                     l2365:
  9111                           
  9112                           ; BSR set to: 1
  9113                           ;bootloader.c: 363: start_from_byte = start_from_byte_next;
  9114  000A3A  C0DD  F096         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  9115                           
  9116                           ; BSR set to: 1
  9117                           ;bootloader.c: 365: start_from_byte_next = 0;
  9118  000A3E  0E00               	movlw	0
  9119  000A40  0100               	movlb	0	; () banked
  9120  000A42  6FDD               	movwf	_start_from_byte_next& (0+255),b
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;bootloader.c: 368: address32 = extended_linear_address + hex_file_entry.address;
  9124  000A44  0101               	movlb	1	; () banked
  9125  000A46  51BC               	movf	(_hex_file_entry+2)& (0+255),w,b
  9126  000A48  2546               	addwf	_extended_linear_address& (0+255),w,b
  9127  000A4A  0100               	movlb	0	; () banked
  9128  000A4C  6F92               	movwf	__bootloader_program@address32& (0+255),b
  9129  000A4E  0101               	movlb	1	; () banked
  9130  000A50  51BD               	movf	(_hex_file_entry+3)& (0+255),w,b
  9131  000A52  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  9132  000A54  0100               	movlb	0	; () banked
  9133  000A56  6F93               	movwf	(__bootloader_program@address32+1)& (0+255),b
  9134  000A58  0E00               	movlw	0
  9135  000A5A  0101               	movlb	1	; () banked
  9136  000A5C  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  9137  000A5E  0100               	movlb	0	; () banked
  9138  000A60  6F94               	movwf	(__bootloader_program@address32+2)& (0+255),b
  9139  000A62  0E00               	movlw	0
  9140  000A64  0101               	movlb	1	; () banked
  9141  000A66  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  9142  000A68  0100               	movlb	0	; () banked
  9143  000A6A  6F95               	movwf	(__bootloader_program@address32+3)& (0+255),b
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;bootloader.c: 369: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  9147  000A6C  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  9148  000A6E  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  9149  000A70  6E01               	movwf	internalFlash_pageFromAddress@address,c
  9150  000A72  0E00               	movlw	0
  9151  000A74  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9152  000A76  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  9153  000A78  0E00               	movlw	0
  9154  000A7A  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9155  000A7C  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  9156  000A7E  0E00               	movlw	0
  9157  000A80  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9158  000A82  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  9159  000A84  ECE3  F03F         	call	_internalFlash_pageFromAddress	;wreg free
  9160  000A88  C001  F06A         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  9161  000A8C  C002  F06B         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  9162                           
  9163                           ;bootloader.c: 372: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  9164  000A90  0100               	movlb	0	; () banked
  9165  000A92  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  9166  000A94  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  9167  000A96  6E01               	movwf	__bootloader_check_address@address,c
  9168  000A98  0E00               	movlw	0
  9169  000A9A  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9170  000A9C  6E02               	movwf	__bootloader_check_address@address+1,c
  9171  000A9E  0E00               	movlw	0
  9172  000AA0  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9173  000AA2  6E03               	movwf	__bootloader_check_address@address+2,c
  9174  000AA4  0E00               	movlw	0
  9175  000AA6  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9176  000AA8  6E04               	movwf	__bootloader_check_address@address+3,c
  9177  000AAA  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  9178  000AAC  0800               	sublw	0
  9179  000AAE  0101               	movlb	1	; () banked
  9180  000AB0  25BA               	addwf	_hex_file_entry& (0+255),w,b
  9181  000AB2  6E05               	movwf	__bootloader_check_address@dataLength,c
  9182  000AB4  EC9E  F027         	call	__bootloader_check_address	;wreg free
  9183  000AB8  0900               	iorlw	0
  9184  000ABA  A4D8               	btfss	status,2,c
  9185  000ABC  D6F1               	goto	l2354
  9186                           
  9187                           ;bootloader.c: 375: };bootloader.c: 377: if(page_to_write==0)
  9188                           
  9189                           ;bootloader.c: 373: {;bootloader.c: 374: break;
  9190  000ABE  0100               	movlb	0	; () banked
  9191  000AC0  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  9192  000AC2  119A               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  9193  000AC4  A4D8               	btfss	status,2,c
  9194  000AC6  D010               	goto	l2367
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;bootloader.c: 378: {;bootloader.c: 382: page_to_write = entry_page;
  9198  000AC8  C06A  F099         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  9199  000ACC  C06B  F09A         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;bootloader.c: 383: internalFlash_readPage(page_to_write);
  9203  000AD0  C099  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  9204  000AD4  C09A  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  9205  000AD8  EC1B  F03C         	call	_internalFlash_readPage	;wreg free
  9206                           
  9207                           ;bootloader.c: 384: buffer = internalFlash_getBuffer();
  9208  000ADC  ECA5  F040         	call	_internalFlash_getBuffer	;wreg free
  9209  000AE0  C001  F068         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  9210  000AE4  C002  F069         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  9211  000AE8                     l2367:
  9212                           
  9213                           ;bootloader.c: 385: };bootloader.c: 387: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  9214  000AE8  C096  F097         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  9215  000AEC  0100               	movlb	0	; () banked
  9216  000AEE  6B98               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  9217  000AF0  D05D               	goto	l2368
  9218  000AF2                     
  9219                           ; BSR set to: 0
  9220                           ;bootloader.c: 388: {;bootloader.c: 391: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  9221                           
  9222                           ; BSR set to: 0
  9223  000AF2  5197               	movf	__bootloader_program@cntr& (0+255),w,b
  9224  000AF4  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  9225  000AF6  6E01               	movwf	internalFlash_pageFromAddress@address,c
  9226  000AF8  5198               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  9227  000AFA  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9228  000AFC  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  9229  000AFE  0E00               	movlw	0
  9230  000B00  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9231  000B02  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  9232  000B04  0E00               	movlw	0
  9233  000B06  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9234  000B08  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  9235  000B0A  ECE3  F03F         	call	_internalFlash_pageFromAddress	;wreg free
  9236  000B0E  0100               	movlb	0	; () banked
  9237  000B10  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  9238  000B12  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  9239  000B14  E12A               	bnz	l14393
  9240  000B16  519A               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  9241  000B18  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  9242  000B1A  A4D8               	btfss	status,2,c
  9243  000B1C  D026               	goto	l2370
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;bootloader.c: 392: {;bootloader.c: 393: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  9247  000B1E  5197               	movf	__bootloader_program@cntr& (0+255),w,b
  9248  000B20  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  9249  000B22  6E09               	movwf	internalFlash_addressWithinPage@address,c
  9250  000B24  5198               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  9251  000B26  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9252  000B28  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  9253  000B2A  0E00               	movlw	0
  9254  000B2C  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9255  000B2E  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  9256  000B30  0E00               	movlw	0
  9257  000B32  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9258  000B34  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  9259  000B36  C099  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  9260  000B3A  C09A  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  9261  000B3E  ECCE  F037         	call	_internalFlash_addressWithinPage	;wreg free
  9262  000B42  C009  F06C         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  9263  000B46  C00A  F06D         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  9264                           
  9265                           ;bootloader.c: 394: buffer[address_within_page] = hex_file_entry.data[cntr];
  9266  000B4A  0EBF               	movlw	low (_hex_file_entry+5)
  9267  000B4C  0100               	movlb	0	; () banked
  9268  000B4E  2597               	addwf	__bootloader_program@cntr& (0+255),w,b
  9269  000B50  6ED9               	movwf	fsr2l,c
  9270  000B52  0E01               	movlw	high (_hex_file_entry+5)
  9271  000B54  2198               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  9272  000B56  6EDA               	movwf	fsr2h,c
  9273  000B58  516C               	movf	__bootloader_program@address_within_page& (0+255),w,b
  9274  000B5A  2568               	addwf	__bootloader_program@buffer& (0+255),w,b
  9275  000B5C  6EE1               	movwf	fsr1l,c
  9276  000B5E  516D               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  9277  000B60  2169               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  9278  000B62  6EE2               	movwf	fsr1h,c
  9279  000B64  CFDF FFE7          	movff	indf2,indf1
  9280                           
  9281                           ;bootloader.c: 395: }
  9282  000B68  D01E               	goto	l2371
  9283  000B6A                     l2370:
  9284  000B6A                     l14393:
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;bootloader.c: 396: else;bootloader.c: 397: {;bootloader.c: 399: hex_file_offset -= retu
      +                          rn_value;
  9288  000B6A  518E               	movf	__bootloader_program@return_value& (0+255),w,b
  9289  000B6C  5FCF               	subwf	_hex_file_offset& (0+255),f,b
  9290  000B6E  518F               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  9291  000B70  5BD0               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  9292  000B72  5190               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  9293  000B74  5BD1               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  9294  000B76  5191               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  9295  000B78  5BD2               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;bootloader.c: 400: --hex_file_entries;
  9299  000B7A  0101               	movlb	1	; () banked
  9300  000B7C  0774               	decf	_hex_file_entries& (0+255),f,b
  9301  000B7E  A0D8               	btfss	status,0,c
  9302  000B80  0775               	decf	(_hex_file_entries+1)& (0+255),f,b
  9303                           
  9304                           ; BSR set to: 1
  9305                           ;bootloader.c: 402: start_from_byte_next = cntr;
  9306  000B82  C097  F0DD         	movff	__bootloader_program@cntr,_start_from_byte_next
  9307                           
  9308                           ; BSR set to: 1
  9309                           ;bootloader.c: 404: internalFlash_erasePage(page_to_write);
  9310  000B86  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  9311  000B8A  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  9312  000B8E  EC84  F03D         	call	_internalFlash_erasePage	;wreg free
  9313                           
  9314                           ;bootloader.c: 405: internalFlash_writePage(page_to_write);
  9315  000B92  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  9316  000B96  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  9317  000B9A  EC79  F033         	call	_internalFlash_writePage	;wreg free
  9318                           
  9319                           ;bootloader.c: 406: ++flash_pages_written;
  9320  000B9E  0101               	movlb	1	; () banked
  9321  000BA0  4B70               	infsnz	_flash_pages_written& (0+255),f,b
  9322  000BA2  2B71               	incf	(_flash_pages_written+1)& (0+255),f,b
  9323                           
  9324                           ; BSR set to: 1
  9325                           ;bootloader.c: 408: return;
  9326  000BA4  0012               	return	
  9327  000BA6                     l2371:
  9328                           
  9329                           ; BSR set to: 1
  9330  000BA6  0100               	movlb	0	; () banked
  9331  000BA8  4B97               	infsnz	__bootloader_program@cntr& (0+255),f,b
  9332  000BAA  2B98               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  9333  000BAC                     l2368:
  9334                           
  9335                           ; BSR set to: 0
  9336                           
  9337                           ; BSR set to: 0
  9338  000BAC  0101               	movlb	1	; () banked
  9339  000BAE  51BA               	movf	_hex_file_entry& (0+255),w,b
  9340  000BB0  0100               	movlb	0	; () banked
  9341  000BB2  5D97               	subwf	__bootloader_program@cntr& (0+255),w,b
  9342  000BB4  0101               	movlb	1	; () banked
  9343  000BB6  51BB               	movf	(_hex_file_entry+1)& (0+255),w,b
  9344  000BB8  0100               	movlb	0	; () banked
  9345  000BBA  5998               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  9346  000BBC  B0D8               	btfsc	status,0,c
  9347  000BBE  D670               	goto	l2354
  9348  000BC0  D798               	goto	l2369
  9349  000BC2                     
  9350                           ;bootloader.c: 416: if(page_to_write!=0)
  9351                           
  9352                           ; BSR set to: 0
  9353  000BC2  0100               	movlb	0	; () banked
  9354  000BC4  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  9355  000BC6  119A               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  9356  000BC8  B4D8               	btfsc	status,2,c
  9357  000BCA  0012               	return	
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;bootloader.c: 417: {;bootloader.c: 419: internalFlash_erasePage(page_to_write);
  9361  000BCC  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  9362  000BD0  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  9363  000BD4  EC84  F03D         	call	_internalFlash_erasePage	;wreg free
  9364                           
  9365                           ;bootloader.c: 420: internalFlash_writePage(page_to_write);
  9366  000BD8  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  9367  000BDC  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  9368  000BE0  EC79  F033         	call	_internalFlash_writePage	;wreg free
  9369                           
  9370                           ;bootloader.c: 421: ++flash_pages_written;
  9371  000BE4  0101               	movlb	1	; () banked
  9372  000BE6  4B70               	infsnz	_flash_pages_written& (0+255),f,b
  9373  000BE8  2B71               	incf	(_flash_pages_written+1)& (0+255),f,b
  9374                           
  9375                           ; BSR set to: 1
  9376                           ;bootloader.c: 423: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  9377  000BEA  0E70               	movlw	112
  9378  000BEC  0100               	movlb	0	; () banked
  9379  000BEE  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;bootloader.c: 424: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  9383  000BF0  0E70               	movlw	112
  9384  000BF2  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;bootloader.c: 425: };bootloader.c: 427: return;
  9388                           
  9389                           ; BSR set to: 0
  9390  000BF4  0012               	return	
  9391  000BF6                     l2361:
  9392                           
  9393                           ; BSR set to: 0
  9394                           
  9395                           ; BSR set to: 0
  9396  000BF6  0101               	movlb	1	; () banked
  9397  000BF8  51BE               	movf	(_hex_file_entry+4)& (0+255),w,b
  9398                           
  9399                           ; Switch size 1, requested type "space"
  9400                           ; Number of cases is 3, Range of values is 0 to 4
  9401                           ; switch strategies available:
  9402                           ; Name         Instructions Cycles
  9403                           ; simple_byte           10     6 (average)
  9404                           ;	Chosen strategy is simple_byte
  9405  000BFA  0A00               	xorlw	0	; case 0
  9406  000BFC  B4D8               	btfsc	status,2,c
  9407  000BFE  D71D               	goto	l2365
  9408  000C00  0A01               	xorlw	1	; case 1
  9409  000C02  B4D8               	btfsc	status,2,c
  9410  000C04  D7DE               	goto	l2373
  9411  000C06  0A05               	xorlw	5	; case 4
  9412  000C08  B4D8               	btfsc	status,2,c
  9413  000C0A  D6F9               	goto	l2362
  9414                           
  9415                           ; BSR set to: 1
  9416                           
  9417                           ; BSR set to: 1
  9418  000C0C  D649               	goto	l2354
  9419  000C0E                     __end_of__bootloader_program:
  9420                           	opt stack 0
  9421                           tblptru	equ	0xFF8
  9422                           tblptrh	equ	0xFF7
  9423                           tblptrl	equ	0xFF6
  9424                           tablat	equ	0xFF5
  9425                           intcon	equ	0xFF2
  9426                           intcon2	equ	0xFF1
  9427                           intcon3	equ	0xFF0
  9428                           postinc0	equ	0xFEE
  9429                           wreg	equ	0xFE8
  9430                           indf1	equ	0xFE7
  9431                           postdec1	equ	0xFE5
  9432                           plusw1	equ	0xFE3
  9433                           fsr1h	equ	0xFE2
  9434                           fsr1l	equ	0xFE1
  9435                           indf2	equ	0xFDF
  9436                           postinc2	equ	0xFDE
  9437                           plusw2	equ	0xFDB
  9438                           fsr2h	equ	0xFDA
  9439                           fsr2l	equ	0xFD9
  9440                           status	equ	0xFD8
  9441                           
  9442 ;; *************** function _parseHexFileEntry *****************
  9443 ;; Defined at:
  9444 ;;		line 59 in file "hex.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  data            2   11[COMRAM] PTR unsigned char 
  9447 ;;		 -> file_buffer(50), 
  9448 ;;  offset          4   13[COMRAM] unsigned long 
  9449 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  9450 ;;		 -> hex_file_entry(23), 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  i               1   27[COMRAM] unsigned char 
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  4   11[COMRAM] unsigned long 
  9455 ;; Registers used:
  9456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9462 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9464 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9465 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9466 ;;Total ram usage:       17 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:    2
  9469 ;; This function calls:
  9470 ;;		_hexCharsToUint16
  9471 ;;		_hexCharsToUint8
  9472 ;; This function is called by:
  9473 ;;		__bootloader_verify_file
  9474 ;;		__bootloader_program
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text36
  9479  000020                     __ptext36:
  9480                           	opt stack 0
  9481  000020                     _parseHexFileEntry:
  9482                           	opt stack 26
  9483                           
  9484                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  9485                           
  9486                           ;incstack = 0
  9487  000020  500E               	movf	parseHexFileEntry@offset,w,c
  9488  000022  240C               	addwf	parseHexFileEntry@data,w,c
  9489  000024  6ED9               	movwf	fsr2l,c
  9490  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  9491  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9492  00002A  6EDA               	movwf	fsr2h,c
  9493  00002C  0E3A               	movlw	58
  9494  00002E  18DE               	xorwf	postinc2,w,c
  9495  000030  B4D8               	btfsc	status,2,c
  9496  000032  D005               	goto	l2216
  9497                           
  9498                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  9499  000034  680C               	setf	?_parseHexFileEntry,c
  9500  000036  680D               	setf	?_parseHexFileEntry+1,c
  9501  000038  680E               	setf	?_parseHexFileEntry+2,c
  9502  00003A  680F               	setf	?_parseHexFileEntry+3,c
  9503  00003C  0012               	return	
  9504  00003E                     l2216:
  9505                           
  9506                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  9507  00003E  0E02               	movlw	2
  9508  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  9509  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9510  000044  0E00               	movlw	0
  9511  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9512  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  9513  00004A  5014               	movf	??_parseHexFileEntry,w,c
  9514  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  9515  00004E  6ED9               	movwf	fsr2l,c
  9516  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  9517  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9518  000054  6EDA               	movwf	fsr2h,c
  9519  000056  50DF               	movf	indf2,w,c
  9520  000058  6E03               	movwf	hexCharsToUint8@c2,c
  9521  00005A  0E01               	movlw	1
  9522  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  9523  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9524  000060  0E00               	movlw	0
  9525  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9526  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9527  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  9528  000068  240C               	addwf	parseHexFileEntry@data,w,c
  9529  00006A  6ED9               	movwf	fsr2l,c
  9530  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  9531  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9532  000070  6EDA               	movwf	fsr2h,c
  9533  000072  50DF               	movf	indf2,w,c
  9534  000074  ECD5  F03F         	call	_hexCharsToUint8
  9535  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  9536  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  9537  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9538  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9539  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  9540  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  9541                           
  9542                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  9543  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9544  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9545  000094  0E01               	movlw	1
  9546  000096  50DB               	movf	plusw2,w,c
  9547  000098  E104               	bnz	u10250
  9548  00009A  0E11               	movlw	17
  9549  00009C  5CDE               	subwf	postinc2,w,c
  9550  00009E  A0D8               	btfss	status,0,c
  9551  0000A0  D009               	goto	l2218
  9552  0000A2                     u10250:
  9553                           
  9554                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  9555  0000A2  0EFC               	movlw	252
  9556  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  9557  0000A6  0EFF               	movlw	255
  9558  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  9559  0000AA  0EFF               	movlw	255
  9560  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  9561  0000AE  0EFF               	movlw	255
  9562  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  9563  0000B2  0012               	return	
  9564  0000B4                     l2218:
  9565                           
  9566                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  9567  0000B4  0E04               	movlw	4
  9568  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  9569  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9570  0000BA  0E00               	movlw	0
  9571  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9572  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  9573  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  9574  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  9575  0000C4  6ED9               	movwf	fsr2l,c
  9576  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  9577  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9578  0000CA  6EDA               	movwf	fsr2h,c
  9579  0000CC  50DF               	movf	indf2,w,c
  9580  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  9581  0000D0  0E05               	movlw	5
  9582  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  9583  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9584  0000D6  0E00               	movlw	0
  9585  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9586  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9587  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  9588  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  9589  0000E0  6ED9               	movwf	fsr2l,c
  9590  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  9591  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9592  0000E6  6EDA               	movwf	fsr2h,c
  9593  0000E8  50DF               	movf	indf2,w,c
  9594  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  9595  0000EC  0E06               	movlw	6
  9596  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  9597  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  9598  0000F2  0E00               	movlw	0
  9599  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9600  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  9601  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  9602  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  9603  0000FC  6ED9               	movwf	fsr2l,c
  9604  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  9605  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9606  000102  6EDA               	movwf	fsr2h,c
  9607  000104  50DF               	movf	indf2,w,c
  9608  000106  6E05               	movwf	hexCharsToUint16@c4,c
  9609  000108  0E03               	movlw	3
  9610  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  9611  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  9612  00010E  0E00               	movlw	0
  9613  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9614  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  9615  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  9616  000116  240C               	addwf	parseHexFileEntry@data,w,c
  9617  000118  6ED9               	movwf	fsr2l,c
  9618  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  9619  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9620  00011E  6EDA               	movwf	fsr2h,c
  9621  000120  50DF               	movf	indf2,w,c
  9622  000122  EC55  F035         	call	_hexCharsToUint16
  9623  000126  EE20 F002          	lfsr	2,2
  9624  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9625  00012C  26D9               	addwf	fsr2l,f,c
  9626  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9627  000130  22DA               	addwfc	fsr2h,f,c
  9628  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  9629  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  9630                           
  9631                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  9632  00013A  EE20 F004          	lfsr	2,4
  9633  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9634  000140  26D9               	addwf	fsr2l,f,c
  9635  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9636  000144  22DA               	addwfc	fsr2h,f,c
  9637  000146  0E08               	movlw	8
  9638  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  9639  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9640  00014C  0E00               	movlw	0
  9641  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9642  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  9643  000152  5014               	movf	??_parseHexFileEntry,w,c
  9644  000154  240C               	addwf	parseHexFileEntry@data,w,c
  9645  000156  6EE1               	movwf	fsr1l,c
  9646  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  9647  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9648  00015C  6EE2               	movwf	fsr1h,c
  9649  00015E  50E7               	movf	indf1,w,c
  9650  000160  6E03               	movwf	hexCharsToUint8@c2,c
  9651  000162  0E07               	movlw	7
  9652  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  9653  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9654  000168  0E00               	movlw	0
  9655  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9656  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9657  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  9658  000170  240C               	addwf	parseHexFileEntry@data,w,c
  9659  000172  6EE1               	movwf	fsr1l,c
  9660  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  9661  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9662  000178  6EE2               	movwf	fsr1h,c
  9663  00017A  50E7               	movf	indf1,w,c
  9664  00017C  ECD5  F03F         	call	_hexCharsToUint8
  9665  000180  6EDF               	movwf	indf2,c
  9666                           
  9667                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  9668  000182  0E00               	movlw	0
  9669  000184  6E1C               	movwf	parseHexFileEntry@i,c
  9670  000186  D03D               	goto	l2219
  9671  000188                     
  9672                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  9673  000188  501C               	movf	parseHexFileEntry@i,w,c
  9674  00018A  0D01               	mullw	1
  9675  00018C  0E05               	movlw	5
  9676  00018E  26F3               	addwf	prodl,f,c
  9677  000190  0E00               	movlw	0
  9678  000192  22F4               	addwfc	prodh,f,c
  9679  000194  50F3               	movf	prodl,w,c
  9680  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  9681  000198  6ED9               	movwf	fsr2l,c
  9682  00019A  50F4               	movf	prodh,w,c
  9683  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  9684  00019E  6EDA               	movwf	fsr2h,c
  9685  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  9686  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  9687  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  9688  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  9689  0001AA  0E00               	movlw	0
  9690  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9691  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  9692  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  9693  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  9694  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9695  0001B6  0E0A               	movlw	10
  9696  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  9697  0001BA  0E00               	movlw	0
  9698  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9699  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  9700  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  9701  0001C2  6EE1               	movwf	fsr1l,c
  9702  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  9703  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9704  0001C8  6EE2               	movwf	fsr1h,c
  9705  0001CA  50E7               	movf	indf1,w,c
  9706  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  9707  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  9708  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  9709  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9710  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  9711  0001D8  0E00               	movlw	0
  9712  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9713  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  9714  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  9715  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  9716  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9717  0001E4  0E09               	movlw	9
  9718  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  9719  0001E8  0E00               	movlw	0
  9720  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9721  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  9722  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  9723  0001F0  6EE1               	movwf	fsr1l,c
  9724  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  9725  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9726  0001F6  6EE2               	movwf	fsr1h,c
  9727  0001F8  50E7               	movf	indf1,w,c
  9728  0001FA  ECD5  F03F         	call	_hexCharsToUint8
  9729  0001FE  6EDF               	movwf	indf2,c
  9730  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  9731  000202                     l2219:
  9732  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9733  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9734  00020A  501C               	movf	parseHexFileEntry@i,w,c
  9735  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9736  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9737  000210  50DE               	movf	postinc2,w,c
  9738  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  9739  000214  50DE               	movf	postinc2,w,c
  9740  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  9741  000218  A0D8               	btfss	status,0,c
  9742  00021A  D7B6               	goto	l2220
  9743                           
  9744                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  9745  00021C  EE20 F015          	lfsr	2,21
  9746  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9747  000222  26D9               	addwf	fsr2l,f,c
  9748  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9749  000226  22DA               	addwfc	fsr2h,f,c
  9750  000228  501C               	movf	parseHexFileEntry@i,w,c
  9751  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  9752  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  9753  000230  2614               	addwf	??_parseHexFileEntry,f,c
  9754  000232  0E00               	movlw	0
  9755  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9756  000236  500E               	movf	parseHexFileEntry@offset,w,c
  9757  000238  2614               	addwf	??_parseHexFileEntry,f,c
  9758  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  9759  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9760  00023E  0E0A               	movlw	10
  9761  000240  2614               	addwf	??_parseHexFileEntry,f,c
  9762  000242  0E00               	movlw	0
  9763  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9764  000246  5014               	movf	??_parseHexFileEntry,w,c
  9765  000248  240C               	addwf	parseHexFileEntry@data,w,c
  9766  00024A  6EE1               	movwf	fsr1l,c
  9767  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  9768  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9769  000250  6EE2               	movwf	fsr1h,c
  9770  000252  50E7               	movf	indf1,w,c
  9771  000254  6E03               	movwf	hexCharsToUint8@c2,c
  9772  000256  501C               	movf	parseHexFileEntry@i,w,c
  9773  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  9774  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9775  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  9776  000260  0E00               	movlw	0
  9777  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9778  000264  500E               	movf	parseHexFileEntry@offset,w,c
  9779  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  9780  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  9781  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9782  00026C  0E09               	movlw	9
  9783  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  9784  000270  0E00               	movlw	0
  9785  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9786  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  9787  000276  240C               	addwf	parseHexFileEntry@data,w,c
  9788  000278  6EE1               	movwf	fsr1l,c
  9789  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  9790  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9791  00027E  6EE2               	movwf	fsr1h,c
  9792  000280  50E7               	movf	indf1,w,c
  9793  000282  ECD5  F03F         	call	_hexCharsToUint8
  9794  000286  6EDF               	movwf	indf2,c
  9795                           
  9796                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  9797  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9798  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9799  000290  EE10 F016          	lfsr	1,22
  9800  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9801  000296  26E1               	addwf	fsr1l,f,c
  9802  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9803  00029A  22E2               	addwfc	fsr1h,f,c
  9804  00029C  CFDF FFE7          	movff	indf2,indf1
  9805                           
  9806                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  9807  0002A0  EE20 F002          	lfsr	2,2
  9808  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9809  0002A6  26D9               	addwf	fsr2l,f,c
  9810  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9811  0002AA  22DA               	addwfc	fsr2h,f,c
  9812  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  9813  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  9814  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  9815  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  9816  0002BA  EE20 F016          	lfsr	2,22
  9817  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9818  0002C0  26D9               	addwf	fsr2l,f,c
  9819  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9820  0002C4  22DA               	addwfc	fsr2h,f,c
  9821  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  9822  0002C8  26DF               	addwf	indf2,f,c
  9823                           
  9824                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  9825  0002CA  EE20 F002          	lfsr	2,2
  9826  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9827  0002D0  26D9               	addwf	fsr2l,f,c
  9828  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9829  0002D4  22DA               	addwfc	fsr2h,f,c
  9830  0002D6  50DF               	movf	indf2,w,c
  9831  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9832  0002DA  EE20 F016          	lfsr	2,22
  9833  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9834  0002E0  26D9               	addwf	fsr2l,f,c
  9835  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9836  0002E4  22DA               	addwfc	fsr2h,f,c
  9837  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  9838  0002E8  26DF               	addwf	indf2,f,c
  9839                           
  9840                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  9841  0002EA  EE20 F004          	lfsr	2,4
  9842  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9843  0002F0  26D9               	addwf	fsr2l,f,c
  9844  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9845  0002F4  22DA               	addwfc	fsr2h,f,c
  9846  0002F6  50DF               	movf	indf2,w,c
  9847  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9848  0002FA  EE20 F016          	lfsr	2,22
  9849  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9850  000300  26D9               	addwf	fsr2l,f,c
  9851  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9852  000304  22DA               	addwfc	fsr2h,f,c
  9853  000306  5014               	movf	??_parseHexFileEntry,w,c
  9854  000308  26DF               	addwf	indf2,f,c
  9855                           
  9856                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  9857  00030A  0E00               	movlw	0
  9858  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  9859  00030E  D017               	goto	l2222
  9860  000310                     
  9861                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  9862  000310  501C               	movf	parseHexFileEntry@i,w,c
  9863  000312  0D01               	mullw	1
  9864  000314  0E05               	movlw	5
  9865  000316  26F3               	addwf	prodl,f,c
  9866  000318  0E00               	movlw	0
  9867  00031A  22F4               	addwfc	prodh,f,c
  9868  00031C  50F3               	movf	prodl,w,c
  9869  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  9870  000320  6ED9               	movwf	fsr2l,c
  9871  000322  50F4               	movf	prodh,w,c
  9872  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  9873  000326  6EDA               	movwf	fsr2h,c
  9874  000328  50DF               	movf	indf2,w,c
  9875  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9876  00032C  EE20 F016          	lfsr	2,22
  9877  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9878  000332  26D9               	addwf	fsr2l,f,c
  9879  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9880  000336  22DA               	addwfc	fsr2h,f,c
  9881  000338  5014               	movf	??_parseHexFileEntry,w,c
  9882  00033A  26DF               	addwf	indf2,f,c
  9883  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  9884  00033E                     l2222:
  9885  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9886  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9887  000346  501C               	movf	parseHexFileEntry@i,w,c
  9888  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9889  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9890  00034C  50DE               	movf	postinc2,w,c
  9891  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  9892  000350  50DE               	movf	postinc2,w,c
  9893  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  9894  000354  A0D8               	btfss	status,0,c
  9895  000356  D7DC               	goto	l2223
  9896                           
  9897                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  9898  000358  EE20 F015          	lfsr	2,21
  9899  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9900  00035E  26D9               	addwf	fsr2l,f,c
  9901  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9902  000362  22DA               	addwfc	fsr2h,f,c
  9903  000364  50DF               	movf	indf2,w,c
  9904  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9905  000368  EE20 F016          	lfsr	2,22
  9906  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9907  00036E  26D9               	addwf	fsr2l,f,c
  9908  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9909  000372  22DA               	addwfc	fsr2h,f,c
  9910  000374  5014               	movf	??_parseHexFileEntry,w,c
  9911  000376  26DF               	addwf	indf2,f,c
  9912                           
  9913                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  9914  000378  EE20 F016          	lfsr	2,22
  9915  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9916  00037E  26D9               	addwf	fsr2l,f,c
  9917  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9918  000382  22DA               	addwfc	fsr2h,f,c
  9919  000384  50DF               	movf	indf2,w,c
  9920  000386  B4D8               	btfsc	status,2,c
  9921  000388  D009               	goto	l2225
  9922                           
  9923                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  9924  00038A  0EFE               	movlw	254
  9925  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  9926  00038E  0EFF               	movlw	255
  9927  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  9928  000392  0EFF               	movlw	255
  9929  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  9930  000396  0EFF               	movlw	255
  9931  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  9932  00039A  0012               	return	
  9933  00039C                     l2225:
  9934                           
  9935                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  9936  00039C  EE20 F004          	lfsr	2,4
  9937  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9938  0003A2  26D9               	addwf	fsr2l,f,c
  9939  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9940  0003A6  22DA               	addwfc	fsr2h,f,c
  9941  0003A8  04DE               	decf	postinc2,w,c
  9942  0003AA  A4D8               	btfss	status,2,c
  9943  0003AC  D009               	goto	l2226
  9944                           
  9945                           ;hex.c: 110: {;hex.c: 112: return 0;
  9946  0003AE  0E00               	movlw	0
  9947  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  9948  0003B2  0E00               	movlw	0
  9949  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  9950  0003B6  0E00               	movlw	0
  9951  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  9952  0003BA  0E00               	movlw	0
  9953  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  9954                           
  9955                           ;hex.c: 113: }
  9956  0003BE  0012               	return	
  9957  0003C0                     l2226:
  9958                           
  9959                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  9960  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  9961  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  9962  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  9963  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  9964  0003CA  0E00               	movlw	0
  9965  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9966  0003CE  0E0B               	movlw	11
  9967  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  9968  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9969  0003D4  0E00               	movlw	0
  9970  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  9971  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9972  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  9973  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  9974  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  9975  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  9976  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  9977  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  9978  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  9979  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  9980  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  9981  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  9982  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  9983  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  9984  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  9985                           
  9986                           ;hex.c: 117: if (data[++offset] == ':')
  9987  0003F4  0E01               	movlw	1
  9988  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  9989  0003F8  0E00               	movlw	0
  9990  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  9991  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  9992  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  9993  000400  500E               	movf	parseHexFileEntry@offset,w,c
  9994  000402  240C               	addwf	parseHexFileEntry@data,w,c
  9995  000404  6ED9               	movwf	fsr2l,c
  9996  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  9997  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9998  00040A  6EDA               	movwf	fsr2h,c
  9999  00040C  0E3A               	movlw	58
 10000  00040E  18DE               	xorwf	postinc2,w,c
 10001  000410  A4D8               	btfss	status,2,c
 10002  000412  D009               	goto	l2228
 10003                           
 10004                           ;hex.c: 118: {;hex.c: 119: return offset;
 10005  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 10006  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 10007  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 10008  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 10009                           
 10010                           ;hex.c: 120: }
 10011  000424  0012               	return	
 10012  000426                     l2228:
 10013                           
 10014                           ;hex.c: 121: else if (data[++offset] == ':')
 10015  000426  0E01               	movlw	1
 10016  000428  260E               	addwf	parseHexFileEntry@offset,f,c
 10017  00042A  0E00               	movlw	0
 10018  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 10019  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 10020  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 10021  000432  500E               	movf	parseHexFileEntry@offset,w,c
 10022  000434  240C               	addwf	parseHexFileEntry@data,w,c
 10023  000436  6ED9               	movwf	fsr2l,c
 10024  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
 10025  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 10026  00043C  6EDA               	movwf	fsr2h,c
 10027  00043E  0E3A               	movlw	58
 10028  000440  18DE               	xorwf	postinc2,w,c
 10029  000442  A4D8               	btfss	status,2,c
 10030  000444  D009               	goto	l2230
 10031                           
 10032                           ;hex.c: 122: {;hex.c: 123: return offset;
 10033  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 10034  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 10035  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 10036  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 10037                           
 10038                           ;hex.c: 124: }
 10039  000456  0012               	return	
 10040  000458                     l2230:
 10041                           
 10042                           ;hex.c: 125: else if (data[++offset] == ':')
 10043  000458  0E01               	movlw	1
 10044  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
 10045  00045C  0E00               	movlw	0
 10046  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 10047  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 10048  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 10049  000464  500E               	movf	parseHexFileEntry@offset,w,c
 10050  000466  240C               	addwf	parseHexFileEntry@data,w,c
 10051  000468  6ED9               	movwf	fsr2l,c
 10052  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
 10053  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 10054  00046E  6EDA               	movwf	fsr2h,c
 10055  000470  0E3A               	movlw	58
 10056  000472  18DE               	xorwf	postinc2,w,c
 10057  000474  A4D8               	btfss	status,2,c
 10058  000476  D009               	goto	l2232
 10059                           
 10060                           ;hex.c: 126: {;hex.c: 127: return offset;
 10061  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 10062  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 10063  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 10064  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 10065                           
 10066                           ;hex.c: 128: }
 10067  000488  0012               	return	
 10068  00048A                     l2232:
 10069                           
 10070                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
 10071  00048A  0EFD               	movlw	253
 10072  00048C  6E0C               	movwf	?_parseHexFileEntry,c
 10073  00048E  0EFF               	movlw	255
 10074  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
 10075  000492  0EFF               	movlw	255
 10076  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
 10077  000496  0EFF               	movlw	255
 10078  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
 10079  00049A  0012               	return	
 10080  00049C                     __end_of_parseHexFileEntry:
 10081                           	opt stack 0
 10082                           tblptru	equ	0xFF8
 10083                           tblptrh	equ	0xFF7
 10084                           tblptrl	equ	0xFF6
 10085                           tablat	equ	0xFF5
 10086                           prodh	equ	0xFF4
 10087                           prodl	equ	0xFF3
 10088                           intcon	equ	0xFF2
 10089                           intcon2	equ	0xFF1
 10090                           intcon3	equ	0xFF0
 10091                           postinc0	equ	0xFEE
 10092                           wreg	equ	0xFE8
 10093                           indf1	equ	0xFE7
 10094                           postdec1	equ	0xFE5
 10095                           plusw1	equ	0xFE3
 10096                           fsr1h	equ	0xFE2
 10097                           fsr1l	equ	0xFE1
 10098                           indf2	equ	0xFDF
 10099                           postinc2	equ	0xFDE
 10100                           postdec2	equ	0xFDD
 10101                           plusw2	equ	0xFDB
 10102                           fsr2h	equ	0xFDA
 10103                           fsr2l	equ	0xFD9
 10104                           status	equ	0xFD8
 10105                           
 10106 ;; *************** function _hexCharsToUint8 *****************
 10107 ;; Defined at:
 10108 ;;		line 42 in file "hex.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  c1              1    wreg     unsigned char 
 10111 ;;  c2              1    2[COMRAM] unsigned char 
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;  c1              1    4[COMRAM] unsigned char 
 10114 ;;  retVal          1    5[COMRAM] unsigned char 
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  1    wreg      unsigned char 
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0, cstack
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10124 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10128 ;;Total ram usage:        4 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; Hardware stack levels required when called:    1
 10131 ;; This function calls:
 10132 ;;		_hexCharToUint8
 10133 ;; This function is called by:
 10134 ;;		_parseHexFileEntry
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           	psect	text37
 10139  007FAA                     __ptext37:
 10140                           	opt stack 0
 10141  007FAA                     _hexCharsToUint8:
 10142                           	opt stack 26
 10143                           
 10144                           ;incstack = 0
 10145                           ;hexCharsToUint8@c1 stored from wreg
 10146  007FAA  6E05               	movwf	hexCharsToUint8@c1,c
 10147                           
 10148                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
 10149  007FAC  5005               	movf	hexCharsToUint8@c1,w,c
 10150  007FAE  EC93  F03E         	call	_hexCharToUint8
 10151  007FB2  6E04               	movwf	??_hexCharsToUint8& (0+255),c
 10152  007FB4  3804               	swapf	??_hexCharsToUint8,w,c
 10153  007FB6  0BF0               	andlw	240
 10154  007FB8  6E06               	movwf	hexCharsToUint8@retVal,c
 10155                           
 10156                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
 10157  007FBA  5003               	movf	hexCharsToUint8@c2,w,c
 10158  007FBC  EC93  F03E         	call	_hexCharToUint8
 10159  007FC0  1206               	iorwf	hexCharsToUint8@retVal,f,c
 10160                           
 10161                           ;hex.c: 46: return retVal;
 10162  007FC2  5006               	movf	hexCharsToUint8@retVal,w,c
 10163  007FC4  0012               	return	
 10164  007FC6                     __end_of_hexCharsToUint8:
 10165                           	opt stack 0
 10166                           tblptru	equ	0xFF8
 10167                           tblptrh	equ	0xFF7
 10168                           tblptrl	equ	0xFF6
 10169                           tablat	equ	0xFF5
 10170                           prodh	equ	0xFF4
 10171                           prodl	equ	0xFF3
 10172                           intcon	equ	0xFF2
 10173                           intcon2	equ	0xFF1
 10174                           intcon3	equ	0xFF0
 10175                           postinc0	equ	0xFEE
 10176                           wreg	equ	0xFE8
 10177                           indf1	equ	0xFE7
 10178                           postdec1	equ	0xFE5
 10179                           plusw1	equ	0xFE3
 10180                           fsr1h	equ	0xFE2
 10181                           fsr1l	equ	0xFE1
 10182                           indf2	equ	0xFDF
 10183                           postinc2	equ	0xFDE
 10184                           postdec2	equ	0xFDD
 10185                           plusw2	equ	0xFDB
 10186                           fsr2h	equ	0xFDA
 10187                           fsr2l	equ	0xFD9
 10188                           status	equ	0xFD8
 10189                           
 10190 ;; *************** function _hexCharsToUint16 *****************
 10191 ;; Defined at:
 10192 ;;		line 49 in file "hex.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  c1              1    wreg     unsigned char 
 10195 ;;  c2              1    2[COMRAM] unsigned char 
 10196 ;;  c3              1    3[COMRAM] unsigned char 
 10197 ;;  c4              1    4[COMRAM] unsigned char 
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;  c1              1    8[COMRAM] unsigned char 
 10200 ;;  retVal          2    9[COMRAM] unsigned int 
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  2    2[COMRAM] unsigned int 
 10203 ;; Registers used:
 10204 ;;		wreg, status,2, status,0, cstack
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10210 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10211 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10212 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10213 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10214 ;;Total ram usage:        9 bytes
 10215 ;; Hardware stack levels used:    1
 10216 ;; Hardware stack levels required when called:    1
 10217 ;; This function calls:
 10218 ;;		_hexCharToUint8
 10219 ;; This function is called by:
 10220 ;;		_parseHexFileEntry
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           	psect	text38
 10225  006AAA                     __ptext38:
 10226                           	opt stack 0
 10227  006AAA                     _hexCharsToUint16:
 10228                           	opt stack 26
 10229                           
 10230                           ;incstack = 0
 10231                           ;hexCharsToUint16@c1 stored from wreg
 10232  006AAA  6E09               	movwf	hexCharsToUint16@c1,c
 10233                           
 10234                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
 10235  006AAC  5009               	movf	hexCharsToUint16@c1,w,c
 10236  006AAE  EC93  F03E         	call	_hexCharToUint8
 10237  006AB2  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10238  006AB4  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 10239  006AB6  0E0C               	movlw	12
 10240  006AB8                     u9625:
 10241  006AB8  90D8               	bcf	status,0,c
 10242  006ABA  3606               	rlcf	??_hexCharsToUint16,f,c
 10243  006ABC  3607               	rlcf	??_hexCharsToUint16+1,f,c
 10244  006ABE  2EE8               	decfsz	wreg,f,c
 10245  006AC0  D7FB               	goto	u9625
 10246  006AC2  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
 10247  006AC6  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
 10248                           
 10249                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
 10250  006ACA  5003               	movf	hexCharsToUint16@c2,w,c
 10251  006ACC  EC93  F03E         	call	_hexCharToUint8
 10252  006AD0  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10253  006AD2  5006               	movf	??_hexCharsToUint16,w,c
 10254  006AD4  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
 10255  006AD6  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 10256  006AD8  5007               	movf	??_hexCharsToUint16+1,w,c
 10257  006ADA  120A               	iorwf	hexCharsToUint16@retVal,f,c
 10258  006ADC  5008               	movf	??_hexCharsToUint16+2,w,c
 10259  006ADE  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 10260                           
 10261                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
 10262  006AE0  5004               	movf	hexCharsToUint16@c3,w,c
 10263  006AE2  EC93  F03E         	call	_hexCharToUint8
 10264  006AE6  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10265  006AE8  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 10266  006AEA  3A06               	swapf	??_hexCharsToUint16,f,c
 10267  006AEC  3A07               	swapf	??_hexCharsToUint16+1,f,c
 10268  006AEE  0EF0               	movlw	240
 10269  006AF0  1607               	andwf	??_hexCharsToUint16+1,f,c
 10270  006AF2  5006               	movf	??_hexCharsToUint16,w,c
 10271  006AF4  0B0F               	andlw	15
 10272  006AF6  1207               	iorwf	??_hexCharsToUint16+1,f,c
 10273  006AF8  0EF0               	movlw	240
 10274  006AFA  1606               	andwf	??_hexCharsToUint16,f,c
 10275  006AFC  5006               	movf	??_hexCharsToUint16,w,c
 10276  006AFE  120A               	iorwf	hexCharsToUint16@retVal,f,c
 10277  006B00  5007               	movf	??_hexCharsToUint16+1,w,c
 10278  006B02  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 10279                           
 10280                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
 10281  006B04  5005               	movf	hexCharsToUint16@c4,w,c
 10282  006B06  EC93  F03E         	call	_hexCharToUint8
 10283  006B0A  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10284  006B0C  5006               	movf	??_hexCharsToUint16,w,c
 10285  006B0E  120A               	iorwf	hexCharsToUint16@retVal,f,c
 10286                           
 10287                           ;hex.c: 55: return retVal;
 10288  006B10  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
 10289  006B14  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
 10290  006B18  0012               	return	
 10291  006B1A                     __end_of_hexCharsToUint16:
 10292                           	opt stack 0
 10293                           tblptru	equ	0xFF8
 10294                           tblptrh	equ	0xFF7
 10295                           tblptrl	equ	0xFF6
 10296                           tablat	equ	0xFF5
 10297                           prodh	equ	0xFF4
 10298                           prodl	equ	0xFF3
 10299                           intcon	equ	0xFF2
 10300                           intcon2	equ	0xFF1
 10301                           intcon3	equ	0xFF0
 10302                           postinc0	equ	0xFEE
 10303                           wreg	equ	0xFE8
 10304                           indf1	equ	0xFE7
 10305                           postdec1	equ	0xFE5
 10306                           plusw1	equ	0xFE3
 10307                           fsr1h	equ	0xFE2
 10308                           fsr1l	equ	0xFE1
 10309                           indf2	equ	0xFDF
 10310                           postinc2	equ	0xFDE
 10311                           postdec2	equ	0xFDD
 10312                           plusw2	equ	0xFDB
 10313                           fsr2h	equ	0xFDA
 10314                           fsr2l	equ	0xFD9
 10315                           status	equ	0xFD8
 10316                           
 10317 ;; *************** function _hexCharToUint8 *****************
 10318 ;; Defined at:
 10319 ;;		line 11 in file "hex.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  c               1    wreg     unsigned char 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;  c               1    0[COMRAM] unsigned char 
 10324 ;;  ascii           1    1[COMRAM] unsigned char 
 10325 ;; Return value:  Size  Location     Type
 10326 ;;                  1    wreg      unsigned char 
 10327 ;; Registers used:
 10328 ;;		wreg, status,2, status,0
 10329 ;; Tracked objects:
 10330 ;;		On entry : 0/0
 10331 ;;		On exit  : 0/0
 10332 ;;		Unchanged: 0/0
 10333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10338 ;;Total ram usage:        2 bytes
 10339 ;; Hardware stack levels used:    1
 10340 ;; This function calls:
 10341 ;;		Nothing
 10342 ;; This function is called by:
 10343 ;;		_hexCharsToUint8
 10344 ;;		_hexCharsToUint16
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           	psect	text39
 10349  007D26                     __ptext39:
 10350                           	opt stack 0
 10351  007D26                     _hexCharToUint8:
 10352                           	opt stack 26
 10353                           
 10354                           ;incstack = 0
 10355                           ;hexCharToUint8@c stored from wreg
 10356  007D26  6E01               	movwf	hexCharToUint8@c,c
 10357                           
 10358                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
 10359  007D28  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
 10360                           
 10361                           ;hex.c: 16: if (ascii >= 97)
 10362  007D2C  0E60               	movlw	96
 10363  007D2E  6402               	cpfsgt	hexCharToUint8@ascii,c
 10364  007D30  D002               	goto	l2201
 10365                           
 10366                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
 10367  007D32  0E57               	movlw	87
 10368  007D34  D006               	goto	L3
 10369  007D36                     l2201:
 10370                           
 10371                           ;hex.c: 21: else if (ascii >= 65)
 10372  007D36  0E40               	movlw	64
 10373  007D38  6402               	cpfsgt	hexCharToUint8@ascii,c
 10374  007D3A  D002               	goto	l2203
 10375                           
 10376                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
 10377  007D3C  0E37               	movlw	55
 10378  007D3E  D001               	goto	L3
 10379  007D40                     l2203:
 10380                           
 10381                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
 10382  007D40  0E30               	movlw	48
 10383  007D42                     L3:
 10384  007D42  5E02               	subwf	hexCharToUint8@ascii,f,c
 10385                           
 10386                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
 10387  007D44  0E0F               	movlw	15
 10388  007D46  6402               	cpfsgt	hexCharToUint8@ascii,c
 10389  007D48  D002               	goto	l2205
 10390                           
 10391                           ;hex.c: 32: {;hex.c: 33: return 0;
 10392  007D4A  0E00               	movlw	0
 10393                           
 10394                           ;hex.c: 34: }
 10395  007D4C  0012               	return	
 10396  007D4E                     l2205:
 10397                           
 10398                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
 10399  007D4E  5002               	movf	hexCharToUint8@ascii,w,c
 10400  007D50  0012               	return	
 10401  007D52                     __end_of_hexCharToUint8:
 10402                           	opt stack 0
 10403                           tblptru	equ	0xFF8
 10404                           tblptrh	equ	0xFF7
 10405                           tblptrl	equ	0xFF6
 10406                           tablat	equ	0xFF5
 10407                           prodh	equ	0xFF4
 10408                           prodl	equ	0xFF3
 10409                           intcon	equ	0xFF2
 10410                           intcon2	equ	0xFF1
 10411                           intcon3	equ	0xFF0
 10412                           postinc0	equ	0xFEE
 10413                           wreg	equ	0xFE8
 10414                           indf1	equ	0xFE7
 10415                           postdec1	equ	0xFE5
 10416                           plusw1	equ	0xFE3
 10417                           fsr1h	equ	0xFE2
 10418                           fsr1l	equ	0xFE1
 10419                           indf2	equ	0xFDF
 10420                           postinc2	equ	0xFDE
 10421                           postdec2	equ	0xFDD
 10422                           plusw2	equ	0xFDB
 10423                           fsr2h	equ	0xFDA
 10424                           fsr2l	equ	0xFD9
 10425                           status	equ	0xFD8
 10426                           
 10427 ;; *************** function _internalFlash_writePage *****************
 10428 ;; Defined at:
 10429 ;;		line 63 in file "internal_flash.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  page            2    2[COMRAM] unsigned int 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;  address         4    4[COMRAM] unsigned long 
 10434 ;;  cntr            2    8[COMRAM] unsigned int 
 10435 ;;  byte_cntr       1   11[COMRAM] unsigned char 
 10436 ;;  block_cntr      1   10[COMRAM] unsigned char 
 10437 ;;  i               1    0        unsigned char 
 10438 ;;  gie             1    0        unsigned char 
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      void 
 10441 ;; Registers used:
 10442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10449 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10451 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10452 ;;Total ram usage:       10 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; Hardware stack levels required when called:    1
 10455 ;; This function calls:
 10456 ;;		__internalFlash_unlockAndActivate
 10457 ;; This function is called by:
 10458 ;;		__bootloader_program
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           	psect	text40
 10463  0066F2                     __ptext40:
 10464                           	opt stack 0
 10465  0066F2                     _internalFlash_writePage:
 10466                           	opt stack 27
 10467                           
 10468                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
 10469                           
 10470                           ;incstack = 0
 10471  0066F2  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
 10472  0066F6  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
 10473  0066FA  6A07               	clrf	internalFlash_writePage@address+2,c
 10474  0066FC  6A08               	clrf	internalFlash_writePage@address+3,c
 10475                           
 10476                           ;internal_flash.c: 74: address <<= 10;
 10477  0066FE  0E0A               	movlw	10
 10478  006700                     u10425:
 10479  006700  90D8               	bcf	status,0,c
 10480  006702  3605               	rlcf	internalFlash_writePage@address,f,c
 10481  006704  3606               	rlcf	internalFlash_writePage@address+1,f,c
 10482  006706  3607               	rlcf	internalFlash_writePage@address+2,f,c
 10483  006708  3608               	rlcf	internalFlash_writePage@address+3,f,c
 10484  00670A  2EE8               	decfsz	wreg,f,c
 10485  00670C  D7F9               	goto	u10425
 10486                           
 10487                           ;internal_flash.c: 76: TBLPTR = address;
 10488  00670E  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
 10489  006712  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
 10490  006716  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
 10491                           
 10492                           ;internal_flash.c: 79: cntr = 0;
 10493  00671A  0E00               	movlw	0
 10494  00671C  6E0A               	movwf	internalFlash_writePage@cntr+1,c
 10495  00671E  0E00               	movlw	0
 10496  006720  6E09               	movwf	internalFlash_writePage@cntr,c
 10497                           
 10498                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
 10499  006722  0E00               	movlw	0
 10500  006724  6E0B               	movwf	internalFlash_writePage@block_cntr,c
 10501  006726                     l13463:
 10502  006726  0E0F               	movlw	15
 10503  006728  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
 10504  00672A  D001               	goto	l2453
 10505  00672C  0012               	return	
 10506  00672E                     l2453:
 10507                           
 10508                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
 10509  00672E  0E00               	movlw	0
 10510  006730  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
 10511  006732                     l13469:
 10512  006732  0E3F               	movlw	63
 10513  006734  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
 10514  006736  D001               	goto	l2455
 10515  006738  D00D               	goto	u10450
 10516  00673A                     l2455:
 10517                           
 10518                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
 10519  00673A  0E00               	movlw	low _pageBuffer
 10520  00673C  2409               	addwf	internalFlash_writePage@cntr,w,c
 10521  00673E  6ED9               	movwf	fsr2l,c
 10522  006740  0E08               	movlw	high _pageBuffer
 10523  006742  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
 10524  006744  6EDA               	movwf	fsr2h,c
 10525  006746  50DF               	movf	indf2,w,c
 10526  006748  6EF5               	movwf	tablat,c	;volatile
 10527  00674A  000D               	tblwt		*+	;# 
 10528                           
 10529                           ;internal_flash.c: 91: ++cntr;
 10530  00674C  4A09               	infsnz	internalFlash_writePage@cntr,f,c
 10531  00674E  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
 10532  006750  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
 10533  006752  D7EF               	goto	l13469
 10534  006754                     u10450:
 10535  006754  000A               	tblrd		*-	;# 
 10536                           
 10537                           ;internal_flash.c: 98: EECON1 = 0x84;
 10538  006756  0E84               	movlw	132
 10539  006758  6EA6               	movwf	4006,c	;volsfr
 10540                           
 10541                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 10542  00675A  0EB5               	movlw	181
 10543  00675C  ECFE  F03E         	call	__internalFlash_unlockAndActivate
 10544                           
 10545                           ;internal_flash.c: 100: TBLPTR++;
 10546  006760  0E01               	movlw	1
 10547  006762  26F6               	addwf	tblptrl,f,c	;volatile
 10548  006764  0E00               	movlw	0
 10549  006766  22F7               	addwfc	tblptrh,f,c	;volatile
 10550  006768  0E00               	movlw	0
 10551  00676A  22F8               	addwfc	tblptru,f,c	;volatile
 10552  00676C  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
 10553  00676E  D7DB               	goto	l13463
 10554  006770                     __end_of_internalFlash_writePage:
 10555                           	opt stack 0
 10556                           tblptru	equ	0xFF8
 10557                           tblptrh	equ	0xFF7
 10558                           tblptrl	equ	0xFF6
 10559                           tablat	equ	0xFF5
 10560                           prodh	equ	0xFF4
 10561                           prodl	equ	0xFF3
 10562                           intcon	equ	0xFF2
 10563                           intcon2	equ	0xFF1
 10564                           intcon3	equ	0xFF0
 10565                           postinc0	equ	0xFEE
 10566                           wreg	equ	0xFE8
 10567                           indf1	equ	0xFE7
 10568                           postdec1	equ	0xFE5
 10569                           plusw1	equ	0xFE3
 10570                           fsr1h	equ	0xFE2
 10571                           fsr1l	equ	0xFE1
 10572                           indf2	equ	0xFDF
 10573                           postinc2	equ	0xFDE
 10574                           postdec2	equ	0xFDD
 10575                           plusw2	equ	0xFDB
 10576                           fsr2h	equ	0xFDA
 10577                           fsr2l	equ	0xFD9
 10578                           status	equ	0xFD8
 10579                           
 10580 ;; *************** function _internalFlash_readPage *****************
 10581 ;; Defined at:
 10582 ;;		line 37 in file "internal_flash.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;  page            2   21[COMRAM] unsigned int 
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;  address         4   23[COMRAM] unsigned long 
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      void 
 10589 ;; Registers used:
 10590 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10597 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10599 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10600 ;;Total ram usage:        6 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; Hardware stack levels required when called:    2
 10603 ;; This function calls:
 10604 ;;		_internalFlash_addressFromPage
 10605 ;;		_internalFlash_read
 10606 ;; This function is called by:
 10607 ;;		__bootloader_program
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text41
 10612  007836                     __ptext41:
 10613                           	opt stack 0
 10614  007836                     _internalFlash_readPage:
 10615                           	opt stack 26
 10616                           
 10617                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
 10618                           
 10619                           ;incstack = 0
 10620  007836  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
 10621  00783A  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
 10622  00783E  EC66  F03E         	call	_internalFlash_addressFromPage	;wreg free
 10623  007842  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
 10624  007846  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
 10625  00784A  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
 10626  00784E  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
 10627                           
 10628                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
 10629  007852  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
 10630  007856  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
 10631  00785A  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
 10632  00785E  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
 10633  007862  0E04               	movlw	4
 10634  007864  6E13               	movwf	internalFlash_read@data_length+1,c
 10635  007866  0E00               	movlw	0
 10636  007868  6E12               	movwf	internalFlash_read@data_length,c
 10637  00786A  0E00               	movlw	low _pageBuffer
 10638  00786C  6E14               	movwf	internalFlash_read@buffer,c
 10639  00786E  0E08               	movlw	high _pageBuffer
 10640  007870  6E15               	movwf	internalFlash_read@buffer+1,c
 10641  007872  EC4F  F03D         	call	_internalFlash_read	;wreg free
 10642  007876  0012               	return		;funcret
 10643  007878                     __end_of_internalFlash_readPage:
 10644                           	opt stack 0
 10645                           tblptru	equ	0xFF8
 10646                           tblptrh	equ	0xFF7
 10647                           tblptrl	equ	0xFF6
 10648                           tablat	equ	0xFF5
 10649                           prodh	equ	0xFF4
 10650                           prodl	equ	0xFF3
 10651                           intcon	equ	0xFF2
 10652                           intcon2	equ	0xFF1
 10653                           intcon3	equ	0xFF0
 10654                           postinc0	equ	0xFEE
 10655                           wreg	equ	0xFE8
 10656                           indf1	equ	0xFE7
 10657                           postdec1	equ	0xFE5
 10658                           plusw1	equ	0xFE3
 10659                           fsr1h	equ	0xFE2
 10660                           fsr1l	equ	0xFE1
 10661                           indf2	equ	0xFDF
 10662                           postinc2	equ	0xFDE
 10663                           postdec2	equ	0xFDD
 10664                           plusw2	equ	0xFDB
 10665                           fsr2h	equ	0xFDA
 10666                           fsr2l	equ	0xFD9
 10667                           status	equ	0xFD8
 10668                           
 10669 ;; *************** function _internalFlash_read *****************
 10670 ;; Defined at:
 10671 ;;		line 144 in file "internal_flash.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;  address         4   13[COMRAM] unsigned long 
 10674 ;;  data_length     2   17[COMRAM] unsigned int 
 10675 ;;  buffer          2   19[COMRAM] PTR unsigned char 
 10676 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;		None
 10679 ;; Return value:  Size  Location     Type
 10680 ;;                  1    wreg      unsigned char 
 10681 ;; Registers used:
 10682 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10683 ;; Tracked objects:
 10684 ;;		On entry : 0/0
 10685 ;;		On exit  : 0/0
 10686 ;;		Unchanged: 0/0
 10687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10688 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10691 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10692 ;;Total ram usage:        8 bytes
 10693 ;; Hardware stack levels used:    1
 10694 ;; Hardware stack levels required when called:    1
 10695 ;; This function calls:
 10696 ;;		_memcpy
 10697 ;; This function is called by:
 10698 ;;		_internalFlash_readPage
 10699 ;;		__bootloader_verify_program_memory
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           	psect	text42
 10704  007A9E                     __ptext42:
 10705                           	opt stack 0
 10706  007A9E                     _internalFlash_read:
 10707                           	opt stack 26
 10708                           
 10709                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
 10710                           
 10711                           ;incstack = 0
 10712  007A9E  5011               	movf	internalFlash_read@address+3,w,c
 10713  007AA0  E118               	bnz	l2469
 10714  007AA2  280E               	incf	internalFlash_read@address,w,c
 10715  007AA4  0EFF               	movlw	255
 10716  007AA6  580F               	subwfb	internalFlash_read@address+1,w,c
 10717  007AA8  0E01               	movlw	1
 10718  007AAA  5810               	subwfb	internalFlash_read@address+2,w,c
 10719  007AAC  B0D8               	btfsc	status,0,c
 10720  007AAE  0012               	return	
 10721                           
 10722                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
 10723                           
 10724                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
 10725  007AB0  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
 10726  007AB4  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
 10727  007AB8  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
 10728  007ABC  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
 10729  007AC0  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
 10730  007AC4  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
 10731  007AC8  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
 10732  007ACC  EC39  F037         	call	_memcpy	;wreg free
 10733  007AD0  0012               	return	
 10734  007AD2                     l2469:
 10735  007AD2  0012               	return		;funcret
 10736  007AD4                     __end_of_internalFlash_read:
 10737                           	opt stack 0
 10738                           tblptru	equ	0xFF8
 10739                           tblptrh	equ	0xFF7
 10740                           tblptrl	equ	0xFF6
 10741                           tablat	equ	0xFF5
 10742                           prodh	equ	0xFF4
 10743                           prodl	equ	0xFF3
 10744                           intcon	equ	0xFF2
 10745                           intcon2	equ	0xFF1
 10746                           intcon3	equ	0xFF0
 10747                           postinc0	equ	0xFEE
 10748                           wreg	equ	0xFE8
 10749                           indf1	equ	0xFE7
 10750                           postdec1	equ	0xFE5
 10751                           plusw1	equ	0xFE3
 10752                           fsr1h	equ	0xFE2
 10753                           fsr1l	equ	0xFE1
 10754                           indf2	equ	0xFDF
 10755                           postinc2	equ	0xFDE
 10756                           postdec2	equ	0xFDD
 10757                           plusw2	equ	0xFDB
 10758                           fsr2h	equ	0xFDA
 10759                           fsr2l	equ	0xFD9
 10760                           status	equ	0xFD8
 10761                           
 10762 ;; *************** function _internalFlash_pageFromAddress *****************
 10763 ;; Defined at:
 10764 ;;		line 308 in file "internal_flash.c"
 10765 ;; Parameters:    Size  Location     Type
 10766 ;;  address         4    0[COMRAM] unsigned long 
 10767 ;; Auto vars:     Size  Location     Type
 10768 ;;		None
 10769 ;; Return value:  Size  Location     Type
 10770 ;;                  2    0[COMRAM] unsigned int 
 10771 ;; Registers used:
 10772 ;;		wreg, status,2, status,0
 10773 ;; Tracked objects:
 10774 ;;		On entry : 0/0
 10775 ;;		On exit  : 0/0
 10776 ;;		Unchanged: 0/0
 10777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10781 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10782 ;;Total ram usage:        5 bytes
 10783 ;; Hardware stack levels used:    1
 10784 ;; This function calls:
 10785 ;;		Nothing
 10786 ;; This function is called by:
 10787 ;;		__bootloader_program
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text43
 10792  007FC6                     __ptext43:
 10793                           	opt stack 0
 10794  007FC6                     _internalFlash_pageFromAddress:
 10795                           	opt stack 28
 10796                           
 10797                           ;internal_flash.c: 310: address >>= 10;
 10798                           
 10799                           ;incstack = 0
 10800  007FC6  0E0A               	movlw	10
 10801  007FC8  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
 10802  007FCA                     u10405:
 10803  007FCA  90D8               	bcf	status,0,c
 10804  007FCC  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
 10805  007FCE  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
 10806  007FD0  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
 10807  007FD2  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
 10808  007FD4  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
 10809  007FD6  D7F9               	goto	u10405
 10810                           
 10811                           ;internal_flash.c: 311: return (uint16_t) address;
 10812  007FD8  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
 10813  007FDC  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
 10814  007FE0  0012               	return	
 10815  007FE2                     __end_of_internalFlash_pageFromAddress:
 10816                           	opt stack 0
 10817                           tblptru	equ	0xFF8
 10818                           tblptrh	equ	0xFF7
 10819                           tblptrl	equ	0xFF6
 10820                           tablat	equ	0xFF5
 10821                           prodh	equ	0xFF4
 10822                           prodl	equ	0xFF3
 10823                           intcon	equ	0xFF2
 10824                           intcon2	equ	0xFF1
 10825                           intcon3	equ	0xFF0
 10826                           postinc0	equ	0xFEE
 10827                           wreg	equ	0xFE8
 10828                           indf1	equ	0xFE7
 10829                           postdec1	equ	0xFE5
 10830                           plusw1	equ	0xFE3
 10831                           fsr1h	equ	0xFE2
 10832                           fsr1l	equ	0xFE1
 10833                           indf2	equ	0xFDF
 10834                           postinc2	equ	0xFDE
 10835                           postdec2	equ	0xFDD
 10836                           plusw2	equ	0xFDB
 10837                           fsr2h	equ	0xFDA
 10838                           fsr2l	equ	0xFD9
 10839                           status	equ	0xFD8
 10840                           
 10841 ;; *************** function _internalFlash_getBuffer *****************
 10842 ;; Defined at:
 10843 ;;		line 32 in file "internal_flash.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;		None
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;		None
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  2    0[COMRAM] PTR unsigned char 
 10850 ;; Registers used:
 10851 ;;		wreg, status,2, status,0
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10861 ;;Total ram usage:        2 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; This function calls:
 10864 ;;		Nothing
 10865 ;; This function is called by:
 10866 ;;		__bootloader_program
 10867 ;; This function uses a non-reentrant model
 10868 ;;
 10869                           
 10870                           	psect	text44
 10871  00814A                     __ptext44:
 10872                           	opt stack 0
 10873  00814A                     _internalFlash_getBuffer:
 10874                           	opt stack 28
 10875                           
 10876                           ;internal_flash.c: 34: return pageBuffer;
 10877                           
 10878                           ;incstack = 0
 10879  00814A  0E00               	movlw	low _pageBuffer
 10880  00814C  6E01               	movwf	?_internalFlash_getBuffer,c
 10881  00814E  0E08               	movlw	high _pageBuffer
 10882  008150  6E02               	movwf	?_internalFlash_getBuffer+1,c
 10883  008152  0012               	return	
 10884  008154                     __end_of_internalFlash_getBuffer:
 10885                           	opt stack 0
 10886                           tblptru	equ	0xFF8
 10887                           tblptrh	equ	0xFF7
 10888                           tblptrl	equ	0xFF6
 10889                           tablat	equ	0xFF5
 10890                           prodh	equ	0xFF4
 10891                           prodl	equ	0xFF3
 10892                           intcon	equ	0xFF2
 10893                           intcon2	equ	0xFF1
 10894                           intcon3	equ	0xFF0
 10895                           postinc0	equ	0xFEE
 10896                           wreg	equ	0xFE8
 10897                           indf1	equ	0xFE7
 10898                           postdec1	equ	0xFE5
 10899                           plusw1	equ	0xFE3
 10900                           fsr1h	equ	0xFE2
 10901                           fsr1l	equ	0xFE1
 10902                           indf2	equ	0xFDF
 10903                           postinc2	equ	0xFDE
 10904                           postdec2	equ	0xFDD
 10905                           plusw2	equ	0xFDB
 10906                           fsr2h	equ	0xFDA
 10907                           fsr2l	equ	0xFD9
 10908                           status	equ	0xFD8
 10909                           
 10910 ;; *************** function _internalFlash_erasePage *****************
 10911 ;; Defined at:
 10912 ;;		line 44 in file "internal_flash.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  page            2    2[COMRAM] unsigned int 
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  address         4    4[COMRAM] unsigned long 
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1    wreg      void 
 10919 ;; Registers used:
 10920 ;;		wreg, status,2, status,0, cstack
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10929 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10930 ;;Total ram usage:        6 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; Hardware stack levels required when called:    1
 10933 ;; This function calls:
 10934 ;;		__internalFlash_unlockAndActivate
 10935 ;; This function is called by:
 10936 ;;		__bootloader_program
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text45
 10941  007B08                     __ptext45:
 10942                           	opt stack 0
 10943  007B08                     _internalFlash_erasePage:
 10944                           	opt stack 27
 10945                           
 10946                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
 10947                           
 10948                           ;incstack = 0
 10949  007B08  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
 10950  007B0C  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
 10951  007B10  6A07               	clrf	internalFlash_erasePage@address+2,c
 10952  007B12  6A08               	clrf	internalFlash_erasePage@address+3,c
 10953                           
 10954                           ;internal_flash.c: 50: address <<= 10;
 10955  007B14  0E0A               	movlw	10
 10956  007B16                     u10415:
 10957  007B16  90D8               	bcf	status,0,c
 10958  007B18  3605               	rlcf	internalFlash_erasePage@address,f,c
 10959  007B1A  3606               	rlcf	internalFlash_erasePage@address+1,f,c
 10960  007B1C  3607               	rlcf	internalFlash_erasePage@address+2,f,c
 10961  007B1E  3608               	rlcf	internalFlash_erasePage@address+3,f,c
 10962  007B20  2EE8               	decfsz	wreg,f,c
 10963  007B22  D7F9               	goto	u10415
 10964                           
 10965                           ;internal_flash.c: 51: TBLPTR = address;
 10966  007B24  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
 10967  007B28  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
 10968  007B2C  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
 10969                           
 10970                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
 10971  007B30  84A6               	bsf	4006,2,c	;volsfr
 10972                           
 10973                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
 10974  007B32  88A6               	bsf	4006,4,c	;volsfr
 10975                           
 10976                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 10977  007B34  0EB5               	movlw	181
 10978  007B36  ECFE  F03E         	call	__internalFlash_unlockAndActivate
 10979  007B3A  0012               	return		;funcret
 10980  007B3C                     __end_of_internalFlash_erasePage:
 10981                           	opt stack 0
 10982                           tblptru	equ	0xFF8
 10983                           tblptrh	equ	0xFF7
 10984                           tblptrl	equ	0xFF6
 10985                           tablat	equ	0xFF5
 10986                           prodh	equ	0xFF4
 10987                           prodl	equ	0xFF3
 10988                           intcon	equ	0xFF2
 10989                           intcon2	equ	0xFF1
 10990                           intcon3	equ	0xFF0
 10991                           postinc0	equ	0xFEE
 10992                           wreg	equ	0xFE8
 10993                           indf1	equ	0xFE7
 10994                           postdec1	equ	0xFE5
 10995                           plusw1	equ	0xFE3
 10996                           fsr1h	equ	0xFE2
 10997                           fsr1l	equ	0xFE1
 10998                           indf2	equ	0xFDF
 10999                           postinc2	equ	0xFDE
 11000                           postdec2	equ	0xFDD
 11001                           plusw2	equ	0xFDB
 11002                           fsr2h	equ	0xFDA
 11003                           fsr2l	equ	0xFD9
 11004                           status	equ	0xFD8
 11005                           
 11006 ;; *************** function __internalFlash_unlockAndActivate *****************
 11007 ;; Defined at:
 11008 ;;		line 106 in file "internal_flash.c"
 11009 ;; Parameters:    Size  Location     Type
 11010 ;;  UnlockKey       1    wreg     unsigned char 
 11011 ;; Auto vars:     Size  Location     Type
 11012 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 11013 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 11014 ;; Return value:  Size  Location     Type
 11015 ;;                  1    wreg      void 
 11016 ;; Registers used:
 11017 ;;		wreg, status,2, status,0
 11018 ;; Tracked objects:
 11019 ;;		On entry : 0/0
 11020 ;;		On exit  : 0/0
 11021 ;;		Unchanged: 0/0
 11022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11027 ;;Total ram usage:        2 bytes
 11028 ;; Hardware stack levels used:    1
 11029 ;; This function calls:
 11030 ;;		Nothing
 11031 ;; This function is called by:
 11032 ;;		_internalFlash_erasePage
 11033 ;;		_internalFlash_writePage
 11034 ;;		_EraseBlock
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text46
 11039  007DFC                     __ptext46:
 11040                           	opt stack 0
 11041  007DFC                     __internalFlash_unlockAndActivate:
 11042                           	opt stack 27
 11043                           
 11044                           ;incstack = 0
 11045                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 11046  007DFC  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 11047                           
 11048                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
 11049  007DFE  0EB5               	movlw	181
 11050  007E00  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 11051  007E02  B4D8               	btfsc	status,2,c
 11052  007E04  D002               	goto	l2460
 11053                           
 11054                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
 11055  007E06  94A6               	bcf	4006,2,c	;volsfr
 11056                           
 11057                           ;internal_flash.c: 118: return;
 11058  007E08  0012               	return	
 11059  007E0A                     l2460:
 11060                           
 11061                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
 11062  007E0A  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 11063                           
 11064                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
 11065  007E0E  9EF2               	bcf	intcon,7,c	;volatile
 11066                           
 11067                           ;internal_flash.c: 123: EECON2 = 0x55;
 11068  007E10  0E55               	movlw	85
 11069  007E12  6EA7               	movwf	4007,c	;volsfr
 11070                           
 11071                           ;internal_flash.c: 124: EECON2 = 0xAA;
 11072  007E14  0EAA               	movlw	170
 11073  007E16  6EA7               	movwf	4007,c	;volsfr
 11074                           
 11075                           ;internal_flash.c: 125: EECON1bits.WR = 1;
 11076  007E18  82A6               	bsf	4006,1,c	;volsfr
 11077                           
 11078                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
 11079  007E1A  94A6               	bcf	4006,2,c	;volsfr
 11080                           
 11081                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
 11082  007E1C  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 11083  007E1E  0012               	return	
 11084                           
 11085                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
 11086  007E20  8EF2               	bsf	intcon,7,c	;volatile
 11087  007E22  0012               	return	
 11088  007E24                     __end_of__internalFlash_unlockAndActivate:
 11089                           	opt stack 0
 11090                           tblptru	equ	0xFF8
 11091                           tblptrh	equ	0xFF7
 11092                           tblptrl	equ	0xFF6
 11093                           tablat	equ	0xFF5
 11094                           prodh	equ	0xFF4
 11095                           prodl	equ	0xFF3
 11096                           intcon	equ	0xFF2
 11097                           intcon2	equ	0xFF1
 11098                           intcon3	equ	0xFF0
 11099                           postinc0	equ	0xFEE
 11100                           wreg	equ	0xFE8
 11101                           indf1	equ	0xFE7
 11102                           postdec1	equ	0xFE5
 11103                           plusw1	equ	0xFE3
 11104                           fsr1h	equ	0xFE2
 11105                           fsr1l	equ	0xFE1
 11106                           indf2	equ	0xFDF
 11107                           postinc2	equ	0xFDE
 11108                           postdec2	equ	0xFDD
 11109                           plusw2	equ	0xFDB
 11110                           fsr2h	equ	0xFDA
 11111                           fsr2l	equ	0xFD9
 11112                           status	equ	0xFD8
 11113                           
 11114 ;; *************** function _internalFlash_addressWithinPage *****************
 11115 ;; Defined at:
 11116 ;;		line 322 in file "internal_flash.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;  address         4    8[COMRAM] unsigned long 
 11119 ;;  page            2   12[COMRAM] unsigned int 
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;  page_start_a    4   18[COMRAM] unsigned long 
 11122 ;; Return value:  Size  Location     Type
 11123 ;;                  2    8[COMRAM] unsigned int 
 11124 ;; Registers used:
 11125 ;;		wreg, status,2, status,0, cstack
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11131 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11132 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11133 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11134 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11135 ;;Total ram usage:       14 bytes
 11136 ;; Hardware stack levels used:    1
 11137 ;; Hardware stack levels required when called:    1
 11138 ;; This function calls:
 11139 ;;		_internalFlash_addressFromPage
 11140 ;; This function is called by:
 11141 ;;		__bootloader_program
 11142 ;; This function uses a non-reentrant model
 11143 ;;
 11144                           
 11145                           	psect	text47
 11146  006F9C                     __ptext47:
 11147                           	opt stack 0
 11148  006F9C                     _internalFlash_addressWithinPage:
 11149                           	opt stack 27
 11150                           
 11151                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 11152                           
 11153                           ;incstack = 0
 11154  006F9C  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 11155  006FA0  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 11156  006FA4  EC66  F03E         	call	_internalFlash_addressFromPage	;wreg free
 11157  006FA8  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 11158  006FAC  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 11159  006FB0  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 11160  006FB4  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 11161                           
 11162                           ;internal_flash.c: 326: address = address - page_start_address;
 11163  006FB8  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 11164  006FBC  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 11165  006FC0  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 11166  006FC4  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 11167  006FC8  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 11168  006FCA  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 11169  006FCC  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 11170  006FCE  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 11171  006FD0  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 11172  006FD2  0E00               	movlw	0
 11173  006FD4  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 11174  006FD6  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 11175  006FD8  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 11176  006FDA  5009               	movf	internalFlash_addressWithinPage@address,w,c
 11177  006FDC  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 11178  006FDE  6E09               	movwf	internalFlash_addressWithinPage@address,c
 11179  006FE0  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 11180  006FE2  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 11181  006FE4  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 11182  006FE6  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 11183  006FE8  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 11184  006FEA  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 11185  006FEC  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 11186  006FEE  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 11187  006FF0  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 11188                           
 11189                           ;internal_flash.c: 327: return (uint16_t) address;
 11190  006FF2  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 11191  006FF6  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 11192  006FFA  0012               	return	
 11193  006FFC                     __end_of_internalFlash_addressWithinPage:
 11194                           	opt stack 0
 11195                           tblptru	equ	0xFF8
 11196                           tblptrh	equ	0xFF7
 11197                           tblptrl	equ	0xFF6
 11198                           tablat	equ	0xFF5
 11199                           prodh	equ	0xFF4
 11200                           prodl	equ	0xFF3
 11201                           intcon	equ	0xFF2
 11202                           intcon2	equ	0xFF1
 11203                           intcon3	equ	0xFF0
 11204                           postinc0	equ	0xFEE
 11205                           wreg	equ	0xFE8
 11206                           indf1	equ	0xFE7
 11207                           postdec1	equ	0xFE5
 11208                           plusw1	equ	0xFE3
 11209                           fsr1h	equ	0xFE2
 11210                           fsr1l	equ	0xFE1
 11211                           indf2	equ	0xFDF
 11212                           postinc2	equ	0xFDE
 11213                           postdec2	equ	0xFDD
 11214                           plusw2	equ	0xFDB
 11215                           fsr2h	equ	0xFDA
 11216                           fsr2l	equ	0xFD9
 11217                           status	equ	0xFD8
 11218                           
 11219 ;; *************** function _internalFlash_addressFromPage *****************
 11220 ;; Defined at:
 11221 ;;		line 314 in file "internal_flash.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  page            2    0[COMRAM] unsigned int 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  address         4    4[COMRAM] unsigned long 
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  4    0[COMRAM] unsigned long 
 11228 ;; Registers used:
 11229 ;;		wreg, status,2, status,0
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11236 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11238 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11239 ;;Total ram usage:        8 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; This function calls:
 11242 ;;		Nothing
 11243 ;; This function is called by:
 11244 ;;		_internalFlash_readPage
 11245 ;;		_internalFlash_addressWithinPage
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text48
 11250  007CCC                     __ptext48:
 11251                           	opt stack 0
 11252  007CCC                     _internalFlash_addressFromPage:
 11253                           	opt stack 27
 11254                           
 11255                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
 11256                           
 11257                           ;incstack = 0
 11258  007CCC  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 11259  007CD0  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 11260  007CD4  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 11261  007CD6  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 11262                           
 11263                           ;internal_flash.c: 318: address <<= 10;
 11264  007CD8  0E0A               	movlw	10
 11265  007CDA                     u9645:
 11266  007CDA  90D8               	bcf	status,0,c
 11267  007CDC  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 11268  007CDE  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 11269  007CE0  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 11270  007CE2  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 11271  007CE4  2EE8               	decfsz	wreg,f,c
 11272  007CE6  D7F9               	goto	u9645
 11273                           
 11274                           ;internal_flash.c: 319: return address;
 11275  007CE8  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 11276  007CEC  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 11277  007CF0  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 11278  007CF4  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 11279  007CF8  0012               	return	
 11280  007CFA                     __end_of_internalFlash_addressFromPage:
 11281                           	opt stack 0
 11282                           tblptru	equ	0xFF8
 11283                           tblptrh	equ	0xFF7
 11284                           tblptrl	equ	0xFF6
 11285                           tablat	equ	0xFF5
 11286                           prodh	equ	0xFF4
 11287                           prodl	equ	0xFF3
 11288                           intcon	equ	0xFF2
 11289                           intcon2	equ	0xFF1
 11290                           intcon3	equ	0xFF0
 11291                           postinc0	equ	0xFEE
 11292                           wreg	equ	0xFE8
 11293                           indf1	equ	0xFE7
 11294                           postdec1	equ	0xFE5
 11295                           plusw1	equ	0xFE3
 11296                           fsr1h	equ	0xFE2
 11297                           fsr1l	equ	0xFE1
 11298                           indf2	equ	0xFDF
 11299                           postinc2	equ	0xFDE
 11300                           postdec2	equ	0xFDD
 11301                           plusw2	equ	0xFDB
 11302                           fsr2h	equ	0xFDA
 11303                           fsr2l	equ	0xFD9
 11304                           status	equ	0xFD8
 11305                           
 11306 ;; *************** function __bootloader_check_address *****************
 11307 ;; Defined at:
 11308 ;;		line 103 in file "bootloader.c"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;  address         4    0[COMRAM] unsigned long 
 11311 ;;  dataLength      1    4[COMRAM] unsigned char 
 11312 ;; Auto vars:     Size  Location     Type
 11313 ;;  cntr            1   11[COMRAM] unsigned char 
 11314 ;;  byte_status     1   10[COMRAM] enum E6943
 11315 ;;  worst_case      1    9[COMRAM] enum E6943
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  1    wreg      enum E6943
 11318 ;; Registers used:
 11319 ;;		wreg, status,2, status,0
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11325 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11326 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11328 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11329 ;;Total ram usage:       12 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; This function calls:
 11332 ;;		Nothing
 11333 ;; This function is called by:
 11334 ;;		__bootloader_verify_file
 11335 ;;		__bootloader_program
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           	psect	text49
 11340  004F3C                     __ptext49:
 11341                           	opt stack 0
 11342  004F3C                     __bootloader_check_address:
 11343                           	opt stack 28
 11344                           
 11345                           ;bootloader.c: 105: addressCheckResult_t byte_status;;bootloader.c: 106: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 107: uint8_t cntr;;bootloader.c: 109: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 11346                           
 11347                           ;incstack = 0
 11348  004F3C  0E00               	movlw	0
 11349  004F3E  6E0A               	movwf	__bootloader_check_address@worst_case,c
 11350                           
 11351                           ;bootloader.c: 112: for(cntr=0; cntr<dataLength; ++cntr)
 11352  004F40  0E00               	movlw	0
 11353  004F42  6E0C               	movwf	__bootloader_check_address@cntr,c
 11354  004F44  D062               	goto	l2319
 11355  004F46                     
 11356                           ;bootloader.c: 113: {;bootloader.c: 115: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 11357  004F46  500C               	movf	__bootloader_check_address@cntr,w,c
 11358  004F48  2401               	addwf	__bootloader_check_address@address,w,c
 11359  004F4A  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11360  004F4C  0E00               	movlw	0
 11361  004F4E  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11362  004F50  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11363  004F52  0E00               	movlw	0
 11364  004F54  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11365  004F56  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11366  004F58  0E00               	movlw	0
 11367  004F5A  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11368  004F5C  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11369  004F5E  5009               	movf	??__bootloader_check_address+3,w,c
 11370  004F60  1008               	iorwf	??__bootloader_check_address+2,w,c
 11371  004F62  E104               	bnz	u10330
 11372  004F64  0E90               	movlw	144
 11373  004F66  5C07               	subwf	??__bootloader_check_address+1,w,c
 11374  004F68  A0D8               	btfss	status,0,c
 11375  004F6A  D018               	goto	l2321
 11376  004F6C                     u10330:
 11377  004F6C  500C               	movf	__bootloader_check_address@cntr,w,c
 11378  004F6E  2401               	addwf	__bootloader_check_address@address,w,c
 11379  004F70  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11380  004F72  0E00               	movlw	0
 11381  004F74  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11382  004F76  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11383  004F78  0E00               	movlw	0
 11384  004F7A  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11385  004F7C  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11386  004F7E  0E00               	movlw	0
 11387  004F80  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11388  004F82  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11389  004F84  5009               	movf	??__bootloader_check_address+3,w,c
 11390  004F86  E10A               	bnz	l13395
 11391  004F88  0EF8               	movlw	248
 11392  004F8A  5C06               	subwf	??__bootloader_check_address,w,c
 11393  004F8C  0EFF               	movlw	255
 11394  004F8E  5807               	subwfb	??__bootloader_check_address+1,w,c
 11395  004F90  0E01               	movlw	1
 11396  004F92  5808               	subwfb	??__bootloader_check_address+2,w,c
 11397  004F94  B0D8               	btfsc	status,0,c
 11398  004F96  D002               	goto	l2321
 11399                           
 11400                           ;bootloader.c: 116: {;bootloader.c: 117: byte_status = ADDRESS_CHECK_RESULT_OK;
 11401  004F98  0E00               	movlw	0
 11402  004F9A  D029               	goto	L4
 11403  004F9C                     l2321:
 11404  004F9C                     l13395:
 11405                           
 11406                           ;bootloader.c: 121: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 11407  004F9C  500C               	movf	__bootloader_check_address@cntr,w,c
 11408  004F9E  2401               	addwf	__bootloader_check_address@address,w,c
 11409  004FA0  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11410  004FA2  0E00               	movlw	0
 11411  004FA4  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11412  004FA6  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11413  004FA8  0E00               	movlw	0
 11414  004FAA  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11415  004FAC  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11416  004FAE  0E00               	movlw	0
 11417  004FB0  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11418  004FB2  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11419  004FB4  5009               	movf	??__bootloader_check_address+3,w,c
 11420  004FB6  E108               	bnz	u10350
 11421  004FB8  0EF8               	movlw	248
 11422  004FBA  5C06               	subwf	??__bootloader_check_address,w,c
 11423  004FBC  0EFF               	movlw	255
 11424  004FBE  5807               	subwfb	??__bootloader_check_address+1,w,c
 11425  004FC0  0E01               	movlw	1
 11426  004FC2  5808               	subwfb	??__bootloader_check_address+2,w,c
 11427  004FC4  A0D8               	btfss	status,0,c
 11428  004FC6  D015               	goto	l2323
 11429  004FC8                     u10350:
 11430  004FC8  500C               	movf	__bootloader_check_address@cntr,w,c
 11431  004FCA  2401               	addwf	__bootloader_check_address@address,w,c
 11432  004FCC  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11433  004FCE  0E00               	movlw	0
 11434  004FD0  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11435  004FD2  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11436  004FD4  0E00               	movlw	0
 11437  004FD6  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11438  004FD8  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11439  004FDA  0E00               	movlw	0
 11440  004FDC  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11441  004FDE  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11442  004FE0  5009               	movf	??__bootloader_check_address+3,w,c
 11443  004FE2  E107               	bnz	l2323
 11444  004FE4  0E02               	movlw	2
 11445  004FE6  5C08               	subwf	??__bootloader_check_address+2,w,c
 11446  004FE8  B0D8               	btfsc	status,0,c
 11447  004FEA  D003               	goto	l2323
 11448                           
 11449                           ;bootloader.c: 122: {;bootloader.c: 123: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 11450  004FEC  0E01               	movlw	1
 11451  004FEE                     L4:
 11452  004FEE  6E0B               	movwf	__bootloader_check_address@byte_status,c
 11453                           
 11454                           ;bootloader.c: 124: }
 11455  004FF0  D001               	goto	l2324
 11456  004FF2                     l2323:
 11457                           
 11458                           ;bootloader.c: 125: else;bootloader.c: 126: {;bootloader.c: 127: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 11459  004FF2  680B               	setf	__bootloader_check_address@byte_status,c
 11460  004FF4                     l2324:
 11461                           
 11462                           ;bootloader.c: 128: };bootloader.c: 131: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 11463  004FF4  280B               	incf	__bootloader_check_address@byte_status,w,c
 11464  004FF6  A4D8               	btfss	status,2,c
 11465  004FF8  D002               	goto	l2325
 11466                           
 11467                           ;bootloader.c: 132: {;bootloader.c: 133: return ADDRESS_CHECK_RESULT_ERROR;
 11468  004FFA  0EFF               	movlw	255
 11469  004FFC  0012               	return	
 11470  004FFE                     l2325:
 11471                           
 11472                           ;bootloader.c: 134: };bootloader.c: 137: if(byte_status > worst_case)
 11473  004FFE  500B               	movf	__bootloader_check_address@byte_status,w,c
 11474  005000  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 11475  005002  A0D8               	btfss	status,0,c
 11476                           
 11477                           ;bootloader.c: 138: {;bootloader.c: 139: worst_case = byte_status;
 11478  005004  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 11479  005008  2A0C               	incf	__bootloader_check_address@cntr,f,c
 11480  00500A                     l2319:
 11481  00500A  5005               	movf	__bootloader_check_address@dataLength,w,c
 11482  00500C  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 11483  00500E  A0D8               	btfss	status,0,c
 11484  005010  D79A               	goto	l2320
 11485                           
 11486                           ;bootloader.c: 140: };bootloader.c: 141: };bootloader.c: 143: return worst_case;
 11487  005012  500A               	movf	__bootloader_check_address@worst_case,w,c
 11488  005014  0012               	return	
 11489  005016                     __end_of__bootloader_check_address:
 11490                           	opt stack 0
 11491                           tblptru	equ	0xFF8
 11492                           tblptrh	equ	0xFF7
 11493                           tblptrl	equ	0xFF6
 11494                           tablat	equ	0xFF5
 11495                           prodh	equ	0xFF4
 11496                           prodl	equ	0xFF3
 11497                           intcon	equ	0xFF2
 11498                           intcon2	equ	0xFF1
 11499                           intcon3	equ	0xFF0
 11500                           postinc0	equ	0xFEE
 11501                           wreg	equ	0xFE8
 11502                           indf1	equ	0xFE7
 11503                           postdec1	equ	0xFE5
 11504                           plusw1	equ	0xFE3
 11505                           fsr1h	equ	0xFE2
 11506                           fsr1l	equ	0xFE1
 11507                           indf2	equ	0xFDF
 11508                           postinc2	equ	0xFDE
 11509                           postdec2	equ	0xFDD
 11510                           plusw2	equ	0xFDB
 11511                           fsr2h	equ	0xFDA
 11512                           fsr2l	equ	0xFD9
 11513                           status	equ	0xFD8
 11514                           
 11515 ;; *************** function __bootloader_find_file *****************
 11516 ;; Defined at:
 11517 ;;		line 146 in file "bootloader.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;		None
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;		None
 11522 ;; Return value:  Size  Location     Type
 11523 ;;                  1    wreg      void 
 11524 ;; Registers used:
 11525 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11526 ;; Tracked objects:
 11527 ;;		On entry : 0/0
 11528 ;;		On exit  : 0/0
 11529 ;;		Unchanged: 0/0
 11530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11535 ;;Total ram usage:        0 bytes
 11536 ;; Hardware stack levels used:    1
 11537 ;; Hardware stack levels required when called:    6
 11538 ;; This function calls:
 11539 ;;		_fat_find_file
 11540 ;;		_fat_get_file_size
 11541 ;; This function is called by:
 11542 ;;		_bootloader_run
 11543 ;; This function uses a non-reentrant model
 11544 ;;
 11545                           
 11546                           	psect	text50
 11547  005B56                     __ptext50:
 11548                           	opt stack 0
 11549  005B56                     __bootloader_find_file:
 11550                           	opt stack 23
 11551                           
 11552                           ;bootloader.c: 149: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 11553                           
 11554                           ;incstack = 0
 11555  005B56  0EB7               	movlw	low _bootloader_filename
 11556  005B58  6E30               	movwf	fat_find_file@name,c
 11557  005B5A  0E8F               	movlw	high _bootloader_filename
 11558  005B5C  6E31               	movwf	fat_find_file@name+1,c
 11559  005B5E  0EC8               	movlw	low _bootloader_extension
 11560  005B60  6E32               	movwf	fat_find_file@extension,c
 11561  005B62  0E8F               	movlw	high _bootloader_extension
 11562  005B64  6E33               	movwf	fat_find_file@extension+1,c
 11563  005B66  EC98  F02B         	call	_fat_find_file	;wreg free
 11564  005B6A  0100               	movlb	0	; () banked
 11565  005B6C  6FFF               	movwf	_file_number& (0+255),b
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;bootloader.c: 152: if(file_number!=0xFF)
 11569  005B6E  29FF               	incf	_file_number& (0+255),w,b
 11570  005B70  B4D8               	btfsc	status,2,c
 11571  005B72  D034               	goto	l2331
 11572                           
 11573                           ; BSR set to: 0
 11574                           ;bootloader.c: 153: {;bootloader.c: 155: hex_file_size = fat_get_file_size(file_number);
 11575  005B74  51FF               	movf	_file_number& (0+255),w,b
 11576  005B76  EC1C  F035         	call	_fat_get_file_size
 11577  005B7A  C030  F0CB         	movff	?_fat_get_file_size,_hex_file_size
 11578  005B7E  C031  F0CC         	movff	?_fat_get_file_size+1,_hex_file_size+1
 11579  005B82  C032  F0CD         	movff	?_fat_get_file_size+2,_hex_file_size+2
 11580  005B86  C033  F0CE         	movff	?_fat_get_file_size+3,_hex_file_size+3
 11581                           
 11582                           ;bootloader.c: 157: hex_file_entries = 0;
 11583  005B8A  0E00               	movlw	0
 11584  005B8C  0101               	movlb	1	; () banked
 11585  005B8E  6F75               	movwf	(_hex_file_entries+1)& (0+255),b
 11586  005B90  0E00               	movlw	0
 11587  005B92  6F74               	movwf	_hex_file_entries& (0+255),b
 11588                           
 11589                           ; BSR set to: 1
 11590                           ;bootloader.c: 158: hex_file_offset = 0;
 11591  005B94  0E00               	movlw	0
 11592  005B96  0100               	movlb	0	; () banked
 11593  005B98  6FCF               	movwf	_hex_file_offset& (0+255),b
 11594  005B9A  0E00               	movlw	0
 11595  005B9C  6FD0               	movwf	(_hex_file_offset+1)& (0+255),b
 11596  005B9E  0E00               	movlw	0
 11597  005BA0  6FD1               	movwf	(_hex_file_offset+2)& (0+255),b
 11598  005BA2  0E00               	movlw	0
 11599  005BA4  6FD2               	movwf	(_hex_file_offset+3)& (0+255),b
 11600                           
 11601                           ; BSR set to: 0
 11602                           ;bootloader.c: 159: file_minimum_address = 0xFFFFFFFF;
 11603  005BA6  0101               	movlb	1	; () banked
 11604  005BA8  694E               	setf	_file_minimum_address& (0+255),b
 11605  005BAA  694F               	setf	(_file_minimum_address+1)& (0+255),b
 11606  005BAC  6950               	setf	(_file_minimum_address+2)& (0+255),b
 11607  005BAE  6951               	setf	(_file_minimum_address+3)& (0+255),b
 11608                           
 11609                           ; BSR set to: 1
 11610                           ;bootloader.c: 160: file_maximum_address = 0x00000000;
 11611  005BB0  0E00               	movlw	0
 11612  005BB2  6F4A               	movwf	_file_maximum_address& (0+255),b
 11613  005BB4  0E00               	movlw	0
 11614  005BB6  6F4B               	movwf	(_file_maximum_address+1)& (0+255),b
 11615  005BB8  0E00               	movlw	0
 11616  005BBA  6F4C               	movwf	(_file_maximum_address+2)& (0+255),b
 11617  005BBC  0E00               	movlw	0
 11618  005BBE  6F4D               	movwf	(_file_maximum_address+3)& (0+255),b
 11619                           
 11620                           ; BSR set to: 1
 11621                           ;bootloader.c: 161: extended_linear_address = 0x00000000;
 11622  005BC0  0E00               	movlw	0
 11623  005BC2  6F46               	movwf	_extended_linear_address& (0+255),b
 11624  005BC4  0E00               	movlw	0
 11625  005BC6  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
 11626  005BC8  0E00               	movlw	0
 11627  005BCA  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
 11628  005BCC  0E00               	movlw	0
 11629  005BCE  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
 11630                           
 11631                           ; BSR set to: 1
 11632                           ;bootloader.c: 162: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 11633  005BD0  0E20               	movlw	32
 11634  005BD2  0100               	movlb	0	; () banked
 11635  005BD4  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
 11636                           
 11637                           ; BSR set to: 0
 11638                           ;bootloader.c: 163: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 11639  005BD6  0E20               	movlw	32
 11640  005BD8  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 11641                           
 11642                           ;bootloader.c: 164: }
 11643  005BDA  0012               	return	
 11644  005BDC                     l2331:
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;bootloader.c: 166: else;bootloader.c: 167: {;bootloader.c: 169: hex_file_size = 0;
 11648                           
 11649                           ; BSR set to: 0
 11650  005BDC  0E00               	movlw	0
 11651  005BDE  6FCB               	movwf	_hex_file_size& (0+255),b
 11652  005BE0  0E00               	movlw	0
 11653  005BE2  6FCC               	movwf	(_hex_file_size+1)& (0+255),b
 11654  005BE4  0E00               	movlw	0
 11655  005BE6  6FCD               	movwf	(_hex_file_size+2)& (0+255),b
 11656  005BE8  0E00               	movlw	0
 11657  005BEA  6FCE               	movwf	(_hex_file_size+3)& (0+255),b
 11658                           
 11659                           ;bootloader.c: 171: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 11660  005BEC  0E10               	movlw	16
 11661  005BEE  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
 11662                           
 11663                           ;bootloader.c: 172: if(os.display_mode != DISPLAY_MODE_BOOTLOADER_START)
 11664  005BF0  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
 11665  005BF2  B4D8               	btfsc	status,2,c
 11666  005BF4  0012               	return	
 11667                           
 11668                           ; BSR set to: 0
 11669                           ;bootloader.c: 173: {;bootloader.c: 174: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARC
      +                          H;
 11670  005BF6  0E10               	movlw	16
 11671  005BF8  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 11672                           
 11673                           ; BSR set to: 0
 11674  005BFA  0012               	return	
 11675  005BFC                     __end_of__bootloader_find_file:
 11676                           	opt stack 0
 11677                           tblptru	equ	0xFF8
 11678                           tblptrh	equ	0xFF7
 11679                           tblptrl	equ	0xFF6
 11680                           tablat	equ	0xFF5
 11681                           prodh	equ	0xFF4
 11682                           prodl	equ	0xFF3
 11683                           intcon	equ	0xFF2
 11684                           intcon2	equ	0xFF1
 11685                           intcon3	equ	0xFF0
 11686                           postinc0	equ	0xFEE
 11687                           wreg	equ	0xFE8
 11688                           indf1	equ	0xFE7
 11689                           postdec1	equ	0xFE5
 11690                           plusw1	equ	0xFE3
 11691                           fsr1h	equ	0xFE2
 11692                           fsr1l	equ	0xFE1
 11693                           indf2	equ	0xFDF
 11694                           postinc2	equ	0xFDE
 11695                           postdec2	equ	0xFDD
 11696                           plusw2	equ	0xFDB
 11697                           fsr2h	equ	0xFDA
 11698                           fsr2l	equ	0xFD9
 11699                           status	equ	0xFD8
 11700                           
 11701 ;; *************** function __normal_mode *****************
 11702 ;; Defined at:
 11703 ;;		line 205 in file "main.c"
 11704 ;; Parameters:    Size  Location     Type
 11705 ;;		None
 11706 ;; Auto vars:     Size  Location     Type
 11707 ;;		None
 11708 ;; Return value:  Size  Location     Type
 11709 ;;                  1    wreg      unsigned char 
 11710 ;; Registers used:
 11711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11712 ;; Tracked objects:
 11713 ;;		On entry : 0/0
 11714 ;;		On exit  : 0/0
 11715 ;;		Unchanged: 0/0
 11716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11721 ;;Total ram usage:        0 bytes
 11722 ;; Hardware stack levels used:    1
 11723 ;; Hardware stack levels required when called:    3
 11724 ;; This function calls:
 11725 ;;		_i2c_eeprom_readByte
 11726 ;;		_i2c_eeprom_writeByte
 11727 ;; This function is called by:
 11728 ;;		_main
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732                           	psect	text51
 11733  00716E                     __ptext51:
 11734                           	opt stack 0
 11735  00716E                     __normal_mode:
 11736                           	opt stack 27
 11737                           
 11738                           ;main.c: 207: if(i2c_eeprom_readByte(0x100)==0x94)
 11739                           
 11740                           ; BSR set to: 0
 11741                           ;incstack = 0
 11742  00716E  0E01               	movlw	1
 11743  007170  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 11744  007172  0E00               	movlw	0
 11745  007174  6E12               	movwf	i2c_eeprom_readByte@address,c
 11746  007176  EC3D  F03B         	call	_i2c_eeprom_readByte	;wreg free
 11747  00717A  0A94               	xorlw	148
 11748  00717C  A4D8               	btfss	status,2,c
 11749  00717E  D00A               	goto	l910
 11750                           
 11751                           ;main.c: 208: {;main.c: 210: i2c_eeprom_writeByte(0x100, 0x00);
 11752  007180  0E01               	movlw	1
 11753  007182  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 11754  007184  0E00               	movlw	0
 11755  007186  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 11756  007188  0E00               	movlw	0
 11757  00718A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 11758  00718C  EC7E  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 11759                           
 11760                           ;main.c: 212: return 0;
 11761  007190  0E00               	movlw	0
 11762                           
 11763                           ;main.c: 213: }
 11764  007192  0012               	return	
 11765  007194                     l910:
 11766                           
 11767                           ;main.c: 214: else if(i2c_eeprom_readByte(0x100)==0x78)
 11768  007194  0E01               	movlw	1
 11769  007196  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 11770  007198  0E00               	movlw	0
 11771  00719A  6E12               	movwf	i2c_eeprom_readByte@address,c
 11772  00719C  EC3D  F03B         	call	_i2c_eeprom_readByte	;wreg free
 11773  0071A0  0A78               	xorlw	120
 11774  0071A2  A4D8               	btfss	status,2,c
 11775  0071A4  D00A               	goto	l913
 11776                           
 11777                           ;main.c: 215: {;main.c: 217: i2c_eeprom_writeByte(0x100, 0x00);
 11778  0071A6  0E01               	movlw	1
 11779  0071A8  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 11780  0071AA  0E00               	movlw	0
 11781  0071AC  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 11782  0071AE  0E00               	movlw	0
 11783  0071B0  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 11784  0071B2  EC7E  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 11785                           
 11786                           ;main.c: 219: return 1;
 11787  0071B6  0E01               	movlw	1
 11788                           
 11789                           ;main.c: 220: }
 11790  0071B8  0012               	return	
 11791  0071BA                     l913:
 11792                           
 11793                           ;main.c: 221: else if(!PORTAbits.RA0)
 11794  0071BA  B080               	btfsc	3968,0,c	;volatile
 11795  0071BC  D002               	goto	l915
 11796                           
 11797                           ;main.c: 222: {;main.c: 224: return 0;
 11798  0071BE  0E00               	movlw	0
 11799                           
 11800                           ;main.c: 225: }
 11801  0071C0  0012               	return	
 11802  0071C2                     l915:
 11803                           
 11804                           ;main.c: 226: else;main.c: 227: {;main.c: 229: return 1;
 11805  0071C2  0E01               	movlw	1
 11806  0071C4  0012               	return	
 11807  0071C6                     __end_of__normal_mode:
 11808                           	opt stack 0
 11809                           tblptru	equ	0xFF8
 11810                           tblptrh	equ	0xFF7
 11811                           tblptrl	equ	0xFF6
 11812                           tablat	equ	0xFF5
 11813                           prodh	equ	0xFF4
 11814                           prodl	equ	0xFF3
 11815                           intcon	equ	0xFF2
 11816                           intcon2	equ	0xFF1
 11817                           intcon3	equ	0xFF0
 11818                           postinc0	equ	0xFEE
 11819                           wreg	equ	0xFE8
 11820                           indf1	equ	0xFE7
 11821                           postdec1	equ	0xFE5
 11822                           plusw1	equ	0xFE3
 11823                           fsr1h	equ	0xFE2
 11824                           fsr1l	equ	0xFE1
 11825                           indf2	equ	0xFDF
 11826                           postinc2	equ	0xFDE
 11827                           postdec2	equ	0xFDD
 11828                           plusw2	equ	0xFDB
 11829                           fsr2h	equ	0xFDA
 11830                           fsr2l	equ	0xFD9
 11831                           status	equ	0xFD8
 11832                           
 11833 ;; *************** function _i2c_eeprom_readByte *****************
 11834 ;; Defined at:
 11835 ;;		line 367 in file "i2c.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;  address         2   17[COMRAM] unsigned int 
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;  addr            1   23[COMRAM] unsigned char 
 11840 ;;  slave_addres    1   22[COMRAM] unsigned char 
 11841 ;; Return value:  Size  Location     Type
 11842 ;;                  1    wreg      unsigned char 
 11843 ;; Registers used:
 11844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11845 ;; Tracked objects:
 11846 ;;		On entry : 0/0
 11847 ;;		On exit  : 0/0
 11848 ;;		Unchanged: 0/0
 11849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11852 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11853 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11854 ;;Total ram usage:        7 bytes
 11855 ;; Hardware stack levels used:    1
 11856 ;; Hardware stack levels required when called:    2
 11857 ;; This function calls:
 11858 ;;		__i2c_read
 11859 ;;		__i2c_write
 11860 ;;		_i2c_set_frequency
 11861 ;; This function is called by:
 11862 ;;		__normal_mode
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           	psect	text52
 11867  00767A                     __ptext52:
 11868                           	opt stack 0
 11869  00767A                     _i2c_eeprom_readByte:
 11870                           	opt stack 27
 11871                           
 11872                           ;i2c.c: 369: uint8_t slave_address;;i2c.c: 370: uint8_t addr;;i2c.c: 371: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 11873                           
 11874                           ;incstack = 0
 11875  00767A  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 11876  00767E  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 11877  007682  0E07               	movlw	7
 11878  007684  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 11879  007686                     u10985:
 11880  007686  90D8               	bcf	status,0,c
 11881  007688  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 11882  00768A  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 11883  00768C  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 11884  00768E  D7FB               	goto	u10985
 11885  007690  5014               	movf	??_i2c_eeprom_readByte,w,c
 11886  007692  0B0E               	andlw	14
 11887  007694  09A0               	iorlw	160
 11888  007696  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 11889                           
 11890                           ;i2c.c: 372: addr = address & 0xFF;
 11891  007698  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 11892                           
 11893                           ;i2c.c: 375: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 11894  00769C  0E02               	movlw	2
 11895  00769E  ECBF  F03E         	call	_i2c_set_frequency
 11896                           
 11897                           ;i2c.c: 377: _i2c_write(slave_address, &addr, 1);
 11898  0076A2  0E18               	movlw	low i2c_eeprom_readByte@addr
 11899  0076A4  6E06               	movwf	__i2c_write@data,c
 11900  0076A6  0E00               	movlw	high i2c_eeprom_readByte@addr
 11901  0076A8  6E07               	movwf	__i2c_write@data+1,c
 11902  0076AA  0E01               	movlw	1
 11903  0076AC  6E08               	movwf	__i2c_write@length,c
 11904  0076AE  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 11905  0076B0  ECB1  F03B         	call	__i2c_write
 11906                           
 11907                           ;i2c.c: 378: _i2c_read(slave_address, &addr, 1);
 11908  0076B4  0E18               	movlw	low i2c_eeprom_readByte@addr
 11909  0076B6  6E06               	movwf	__i2c_read@data,c
 11910  0076B8  0E00               	movlw	high i2c_eeprom_readByte@addr
 11911  0076BA  6E07               	movwf	__i2c_read@data+1,c
 11912  0076BC  0E01               	movlw	1
 11913  0076BE  6E08               	movwf	__i2c_read@length,c
 11914  0076C0  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 11915  0076C2  EC28  F032         	call	__i2c_read
 11916                           
 11917                           ;i2c.c: 379: return addr;
 11918  0076C6  5018               	movf	i2c_eeprom_readByte@addr,w,c
 11919  0076C8  0012               	return	
 11920  0076CA                     __end_of_i2c_eeprom_readByte:
 11921                           	opt stack 0
 11922                           tblptru	equ	0xFF8
 11923                           tblptrh	equ	0xFF7
 11924                           tblptrl	equ	0xFF6
 11925                           tablat	equ	0xFF5
 11926                           prodh	equ	0xFF4
 11927                           prodl	equ	0xFF3
 11928                           intcon	equ	0xFF2
 11929                           intcon2	equ	0xFF1
 11930                           intcon3	equ	0xFF0
 11931                           postinc0	equ	0xFEE
 11932                           wreg	equ	0xFE8
 11933                           indf1	equ	0xFE7
 11934                           postdec1	equ	0xFE5
 11935                           plusw1	equ	0xFE3
 11936                           fsr1h	equ	0xFE2
 11937                           fsr1l	equ	0xFE1
 11938                           indf2	equ	0xFDF
 11939                           postinc2	equ	0xFDE
 11940                           postdec2	equ	0xFDD
 11941                           plusw2	equ	0xFDB
 11942                           fsr2h	equ	0xFDA
 11943                           fsr2l	equ	0xFD9
 11944                           status	equ	0xFD8
 11945                           
 11946 ;; *************** function __i2c_read *****************
 11947 ;; Defined at:
 11948 ;;		line 161 in file "i2c.c"
 11949 ;; Parameters:    Size  Location     Type
 11950 ;;  slave_addres    1    wreg     unsigned char 
 11951 ;;  data            2    5[COMRAM] PTR unsigned char 
 11952 ;;		 -> i2c_eeprom_readByte@addr(1), 
 11953 ;;  length          1    7[COMRAM] unsigned char 
 11954 ;; Auto vars:     Size  Location     Type
 11955 ;;  slave_addres    1   15[COMRAM] unsigned char 
 11956 ;;  cntr            1   16[COMRAM] unsigned char 
 11957 ;; Return value:  Size  Location     Type
 11958 ;;                  1    wreg      void 
 11959 ;; Registers used:
 11960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11961 ;; Tracked objects:
 11962 ;;		On entry : 0/0
 11963 ;;		On exit  : 0/0
 11964 ;;		Unchanged: 0/0
 11965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11966 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11968 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11969 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11970 ;;Total ram usage:       12 bytes
 11971 ;; Hardware stack levels used:    1
 11972 ;; Hardware stack levels required when called:    1
 11973 ;; This function calls:
 11974 ;;		__i2c_acknowledge
 11975 ;;		__i2c_get
 11976 ;;		__i2c_not_acknowledge
 11977 ;;		__i2c_send
 11978 ;;		__i2c_start
 11979 ;;		__i2c_stop
 11980 ;;		__i2c_wait_idle
 11981 ;; This function is called by:
 11982 ;;		_i2c_eeprom_readByte
 11983 ;;		_i2c_eeprom_read
 11984 ;; This function uses a non-reentrant model
 11985 ;;
 11986                           
 11987                           	psect	text53
 11988  006450                     __ptext53:
 11989                           	opt stack 0
 11990  006450                     __i2c_read:
 11991                           	opt stack 27
 11992                           
 11993                           ;incstack = 0
 11994                           ;__i2c_read@slave_address stored from wreg
 11995  006450  6E10               	movwf	__i2c_read@slave_address,c
 11996                           
 11997                           ;i2c.c: 163: uint8_t cntr;;i2c.c: 165: _i2c_wait_idle();
 11998  006452  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 11999                           
 12000                           ;i2c.c: 166: _i2c_start();
 12001  006456  ECE5  F040         	call	__i2c_start	;wreg free
 12002                           
 12003                           ;i2c.c: 167: _i2c_wait_idle();
 12004  00645A  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 12005                           
 12006                           ;i2c.c: 168: _i2c_send(slave_address | 0x01);
 12007  00645E  5010               	movf	__i2c_read@slave_address,w,c
 12008  006460  0901               	iorlw	1
 12009  006462  ECE9  F040         	call	__i2c_send
 12010                           
 12011                           ;i2c.c: 169: _i2c_wait_idle();
 12012  006466  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 12013                           
 12014                           ;i2c.c: 171: for(cntr=0; cntr<length-1; ++cntr)
 12015  00646A  0E00               	movlw	0
 12016  00646C  6E11               	movwf	__i2c_read@cntr,c
 12017  00646E  D00E               	goto	l1206
 12018  006470                     
 12019                           ;i2c.c: 172: {;i2c.c: 173: data[cntr] = _i2c_get();
 12020  006470  5011               	movf	__i2c_read@cntr,w,c
 12021  006472  0D01               	mullw	1
 12022  006474  50F3               	movf	prodl,w,c
 12023  006476  2406               	addwf	__i2c_read@data,w,c
 12024  006478  6ED9               	movwf	fsr2l,c
 12025  00647A  50F4               	movf	prodh,w,c
 12026  00647C  2007               	addwfc	__i2c_read@data+1,w,c
 12027  00647E  6EDA               	movwf	fsr2h,c
 12028  006480  ECAF  F040         	call	__i2c_get	;wreg free
 12029  006484  6EDF               	movwf	indf2,c
 12030                           
 12031                           ;i2c.c: 174: _i2c_acknowledge();
 12032  006486  ECB4  F040         	call	__i2c_acknowledge	;wreg free
 12033  00648A  2A11               	incf	__i2c_read@cntr,f,c
 12034  00648C                     l1206:
 12035  00648C  0EFF               	movlw	255
 12036  00648E  6E09               	movwf	??__i2c_read& (0+255),c
 12037  006490  0EFF               	movlw	255
 12038  006492  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 12039  006494  5008               	movf	__i2c_read@length,w,c
 12040  006496  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 12041  006498  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 12042  00649A  5009               	movf	??__i2c_read,w,c
 12043  00649C  260B               	addwf	??__i2c_read+2,f,c
 12044  00649E  500A               	movf	??__i2c_read+1,w,c
 12045  0064A0  220C               	addwfc	??__i2c_read+3,f,c
 12046  0064A2  5011               	movf	__i2c_read@cntr,w,c
 12047  0064A4  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 12048  0064A6  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 12049  0064A8  500B               	movf	??__i2c_read+2,w,c
 12050  0064AA  5C0D               	subwf	??__i2c_read+4,w,c
 12051  0064AC  500E               	movf	??__i2c_read+5,w,c
 12052  0064AE  0A80               	xorlw	128
 12053  0064B0  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 12054  0064B2  500C               	movf	??__i2c_read+3,w,c
 12055  0064B4  0A80               	xorlw	128
 12056  0064B6  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 12057  0064B8  A0D8               	btfss	status,0,c
 12058  0064BA  D7DA               	goto	l1207
 12059                           
 12060                           ;i2c.c: 175: };i2c.c: 176: data[cntr] = _i2c_get();
 12061  0064BC  5011               	movf	__i2c_read@cntr,w,c
 12062  0064BE  0D01               	mullw	1
 12063  0064C0  50F3               	movf	prodl,w,c
 12064  0064C2  2406               	addwf	__i2c_read@data,w,c
 12065  0064C4  6ED9               	movwf	fsr2l,c
 12066  0064C6  50F4               	movf	prodh,w,c
 12067  0064C8  2007               	addwfc	__i2c_read@data+1,w,c
 12068  0064CA  6EDA               	movwf	fsr2h,c
 12069  0064CC  ECAF  F040         	call	__i2c_get	;wreg free
 12070  0064D0  6EDF               	movwf	indf2,c
 12071                           
 12072                           ;i2c.c: 177: _i2c_not_acknowledge();
 12073  0064D2  ECAA  F040         	call	__i2c_not_acknowledge	;wreg free
 12074                           
 12075                           ;i2c.c: 179: _i2c_stop();
 12076  0064D6  ECE1  F040         	call	__i2c_stop	;wreg free
 12077  0064DA  0012               	return		;funcret
 12078  0064DC                     __end_of__i2c_read:
 12079                           	opt stack 0
 12080                           tblptru	equ	0xFF8
 12081                           tblptrh	equ	0xFF7
 12082                           tblptrl	equ	0xFF6
 12083                           tablat	equ	0xFF5
 12084                           prodh	equ	0xFF4
 12085                           prodl	equ	0xFF3
 12086                           intcon	equ	0xFF2
 12087                           intcon2	equ	0xFF1
 12088                           intcon3	equ	0xFF0
 12089                           postinc0	equ	0xFEE
 12090                           wreg	equ	0xFE8
 12091                           indf1	equ	0xFE7
 12092                           postdec1	equ	0xFE5
 12093                           plusw1	equ	0xFE3
 12094                           fsr1h	equ	0xFE2
 12095                           fsr1l	equ	0xFE1
 12096                           indf2	equ	0xFDF
 12097                           postinc2	equ	0xFDE
 12098                           postdec2	equ	0xFDD
 12099                           plusw2	equ	0xFDB
 12100                           fsr2h	equ	0xFDA
 12101                           fsr2l	equ	0xFD9
 12102                           status	equ	0xFD8
 12103                           
 12104 ;; *************** function __i2c_not_acknowledge *****************
 12105 ;; Defined at:
 12106 ;;		line 90 in file "i2c.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;		None
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;		None
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  1    wreg      void 
 12113 ;; Registers used:
 12114 ;;		None
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12124 ;;Total ram usage:        0 bytes
 12125 ;; Hardware stack levels used:    1
 12126 ;; This function calls:
 12127 ;;		Nothing
 12128 ;; This function is called by:
 12129 ;;		__i2c_read
 12130 ;; This function uses a non-reentrant model
 12131 ;;
 12132                           
 12133                           	psect	text54
 12134  008154                     __ptext54:
 12135                           	opt stack 0
 12136  008154                     __i2c_not_acknowledge:
 12137                           	opt stack 27
 12138                           
 12139                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 12140                           
 12141                           ;incstack = 0
 12142  008154  8AC5               	bsf	4037,5,c	;volatile
 12143                           
 12144                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 12145  008156  88C5               	bsf	4037,4,c	;volatile
 12146  008158  A8C5               	btfss	4037,4,c	;volatile
 12147  00815A  0012               	return	
 12148  00815C  D7FD               	goto	l1178
 12149  00815E                     __end_of__i2c_not_acknowledge:
 12150                           	opt stack 0
 12151                           tblptru	equ	0xFF8
 12152                           tblptrh	equ	0xFF7
 12153                           tblptrl	equ	0xFF6
 12154                           tablat	equ	0xFF5
 12155                           prodh	equ	0xFF4
 12156                           prodl	equ	0xFF3
 12157                           intcon	equ	0xFF2
 12158                           intcon2	equ	0xFF1
 12159                           intcon3	equ	0xFF0
 12160                           postinc0	equ	0xFEE
 12161                           wreg	equ	0xFE8
 12162                           indf1	equ	0xFE7
 12163                           postdec1	equ	0xFE5
 12164                           plusw1	equ	0xFE3
 12165                           fsr1h	equ	0xFE2
 12166                           fsr1l	equ	0xFE1
 12167                           indf2	equ	0xFDF
 12168                           postinc2	equ	0xFDE
 12169                           postdec2	equ	0xFDD
 12170                           plusw2	equ	0xFDB
 12171                           fsr2h	equ	0xFDA
 12172                           fsr2l	equ	0xFD9
 12173                           status	equ	0xFD8
 12174                           
 12175 ;; *************** function __i2c_get *****************
 12176 ;; Defined at:
 12177 ;;		line 67 in file "i2c.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;		None
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;		None
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      unsigned char 
 12184 ;; Registers used:
 12185 ;;		wreg, status,2
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12195 ;;Total ram usage:        0 bytes
 12196 ;; Hardware stack levels used:    1
 12197 ;; This function calls:
 12198 ;;		Nothing
 12199 ;; This function is called by:
 12200 ;;		__i2c_read
 12201 ;; This function uses a non-reentrant model
 12202 ;;
 12203                           
 12204                           	psect	text55
 12205  00815E                     __ptext55:
 12206                           	opt stack 0
 12207  00815E                     __i2c_get:
 12208                           	opt stack 27
 12209                           
 12210                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 12211                           
 12212                           ;incstack = 0
 12213  00815E  86C5               	bsf	4037,3,c	;volatile
 12214  008160  B6C5               	btfsc	4037,3,c	;volatile
 12215  008162  D7FE               	goto	l1160
 12216                           
 12217                           ;i2c.c: 71: return SSP1BUF;
 12218  008164  50C9               	movf	4041,w,c	;volatile
 12219  008166  0012               	return	
 12220  008168                     __end_of__i2c_get:
 12221                           	opt stack 0
 12222                           tblptru	equ	0xFF8
 12223                           tblptrh	equ	0xFF7
 12224                           tblptrl	equ	0xFF6
 12225                           tablat	equ	0xFF5
 12226                           prodh	equ	0xFF4
 12227                           prodl	equ	0xFF3
 12228                           intcon	equ	0xFF2
 12229                           intcon2	equ	0xFF1
 12230                           intcon3	equ	0xFF0
 12231                           postinc0	equ	0xFEE
 12232                           wreg	equ	0xFE8
 12233                           indf1	equ	0xFE7
 12234                           postdec1	equ	0xFE5
 12235                           plusw1	equ	0xFE3
 12236                           fsr1h	equ	0xFE2
 12237                           fsr1l	equ	0xFE1
 12238                           indf2	equ	0xFDF
 12239                           postinc2	equ	0xFDE
 12240                           postdec2	equ	0xFDD
 12241                           plusw2	equ	0xFDB
 12242                           fsr2h	equ	0xFDA
 12243                           fsr2l	equ	0xFD9
 12244                           status	equ	0xFD8
 12245                           
 12246 ;; *************** function __i2c_acknowledge *****************
 12247 ;; Defined at:
 12248 ;;		line 82 in file "i2c.c"
 12249 ;; Parameters:    Size  Location     Type
 12250 ;;		None
 12251 ;; Auto vars:     Size  Location     Type
 12252 ;;		None
 12253 ;; Return value:  Size  Location     Type
 12254 ;;                  1    wreg      void 
 12255 ;; Registers used:
 12256 ;;		None
 12257 ;; Tracked objects:
 12258 ;;		On entry : 0/0
 12259 ;;		On exit  : 0/0
 12260 ;;		Unchanged: 0/0
 12261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12266 ;;Total ram usage:        0 bytes
 12267 ;; Hardware stack levels used:    1
 12268 ;; This function calls:
 12269 ;;		Nothing
 12270 ;; This function is called by:
 12271 ;;		__i2c_read
 12272 ;; This function uses a non-reentrant model
 12273 ;;
 12274                           
 12275                           	psect	text56
 12276  008168                     __ptext56:
 12277                           	opt stack 0
 12278  008168                     __i2c_acknowledge:
 12279                           	opt stack 27
 12280                           
 12281                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 12282                           
 12283                           ;incstack = 0
 12284  008168  9AC5               	bcf	4037,5,c	;volatile
 12285                           
 12286                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 12287  00816A  88C5               	bsf	4037,4,c	;volatile
 12288  00816C  A8C5               	btfss	4037,4,c	;volatile
 12289  00816E  0012               	return	
 12290  008170  D7FD               	goto	l1172
 12291  008172                     __end_of__i2c_acknowledge:
 12292                           	opt stack 0
 12293                           tblptru	equ	0xFF8
 12294                           tblptrh	equ	0xFF7
 12295                           tblptrl	equ	0xFF6
 12296                           tablat	equ	0xFF5
 12297                           prodh	equ	0xFF4
 12298                           prodl	equ	0xFF3
 12299                           intcon	equ	0xFF2
 12300                           intcon2	equ	0xFF1
 12301                           intcon3	equ	0xFF0
 12302                           postinc0	equ	0xFEE
 12303                           wreg	equ	0xFE8
 12304                           indf1	equ	0xFE7
 12305                           postdec1	equ	0xFE5
 12306                           plusw1	equ	0xFE3
 12307                           fsr1h	equ	0xFE2
 12308                           fsr1l	equ	0xFE1
 12309                           indf2	equ	0xFDF
 12310                           postinc2	equ	0xFDE
 12311                           postdec2	equ	0xFDD
 12312                           plusw2	equ	0xFDB
 12313                           fsr2h	equ	0xFDA
 12314                           fsr2l	equ	0xFD9
 12315                           status	equ	0xFD8
 12316                           
 12317 ;; *************** function _USBDeviceTasks *****************
 12318 ;; Defined at:
 12319 ;;		line 477 in file "usb_device.c"
 12320 ;; Parameters:    Size  Location     Type
 12321 ;;		None
 12322 ;; Auto vars:     Size  Location     Type
 12323 ;;  i               1   31[COMRAM] unsigned char 
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  1    wreg      void 
 12326 ;; Registers used:
 12327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12337 ;;Total ram usage:        1 bytes
 12338 ;; Hardware stack levels used:    1
 12339 ;; Hardware stack levels required when called:    8
 12340 ;; This function calls:
 12341 ;;		_USBCtrlEPAllowStatusStage
 12342 ;;		_USBCtrlEPService
 12343 ;;		_USBDeviceInit
 12344 ;;		_USBIncrement1msInternalTimers
 12345 ;;		_USBStallHandler
 12346 ;;		_USBSuspend
 12347 ;;		_USBWakeFromSuspend
 12348 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12349 ;; This function is called by:
 12350 ;;		_main
 12351 ;; This function uses a non-reentrant model
 12352 ;;
 12353                           
 12354                           	psect	text57
 12355  00362C                     __ptext57:
 12356                           	opt stack 0
 12357  00362C                     _USBDeviceTasks:
 12358                           	opt stack 22
 12359                           
 12360                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 12361                           
 12362                           ; BSR set to: 15
 12363                           
 12364                           ; BSR set to: 15
 12365                           ;usb_device.c: 543: return;
 12366                           
 12367                           ; BSR set to: 15
 12368                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 12369                           
 12370                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 12371                           
 12372                           ;usb_device.c: 511: UIE = 0;
 12373                           
 12374                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 12375                           
 12376                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 12377                           
 12378                           ;incstack = 0
 12379  00362C  505F               	movf	_USBDeviceState,w,c
 12380  00362E  A4D8               	btfss	status,2,c
 12381  003630  D011               	goto	l150
 12382                           
 12383                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 12384  003632  0E00               	movlw	0
 12385  003634  6E65               	movwf	3941,c	;volatile
 12386                           
 12387                           ;usb_device.c: 572: UIE = 0;
 12388  003636  0E00               	movlw	0
 12389  003638  010F               	movlb	15	; () banked
 12390  00363A  6F36               	movwf	54,b	;volatile
 12391                           
 12392                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12393  00363C  0E16               	movlw	22
 12394  00363E  6F39               	movwf	57,b	;volatile
 12395  003640  0E9F               	movlw	159
 12396  003642  6F37               	movwf	55,b	;volatile
 12397  003644  0E7B               	movlw	123
 12398  003646  6F36               	movwf	54,b	;volatile
 12399                           
 12400                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 12401  003648  D001               	goto	l151
 12402  00364A                     l152:
 12403  00364A  8665               	bsf	3941,3,c	;volatile
 12404  00364C                     l151:
 12405  00364C  A665               	btfss	3941,3,c	;volatile
 12406  00364E  D7FD               	goto	l152
 12407                           
 12408                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 12409  003650  0E01               	movlw	1
 12410  003652  6E5F               	movwf	_USBDeviceState,c
 12411  003654                     l150:
 12412                           
 12413                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 12414  003654  045F               	decf	_USBDeviceState,w,c
 12415  003656  B4D8               	btfsc	status,2,c
 12416                           
 12417                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 12418  003658  BA65               	btfsc	3941,5,c	;volatile
 12419  00365A  D009               	goto	l155
 12420                           
 12421                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 12422  00365C  0E00               	movlw	0
 12423  00365E  6E62               	movwf	3938,c	;volatile
 12424                           
 12425                           ;usb_device.c: 612: UIE=0;
 12426  003660  0E00               	movlw	0
 12427  003662  010F               	movlb	15	; () banked
 12428  003664  6F36               	movwf	54,b	;volatile
 12429                           
 12430                           ; BSR set to: 15
 12431                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 12432  003666  8136               	bsf	54,0,b	;volatile
 12433                           
 12434                           ; BSR set to: 15
 12435                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 12436  003668  8936               	bsf	54,4,b	;volatile
 12437                           
 12438                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 12439  00366A  0E02               	movlw	2
 12440  00366C  6E5F               	movwf	_USBDeviceState,c
 12441  00366E                     l155:
 12442                           
 12443                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 12444                           
 12445                           ; BSR set to: 15
 12446                           
 12447                           ; BSR set to: 15
 12448  00366E  A462               	btfss	3938,2,c	;volatile
 12449  003670  D006               	goto	l156
 12450  003672  010F               	movlb	15	; () banked
 12451  003674  A536               	btfss	54,2,b	;volatile
 12452  003676  D003               	goto	l156
 12453                           
 12454                           ; BSR set to: 15
 12455                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 12456  003678  9462               	bcf	3938,2,c	;volatile
 12457                           
 12458                           ; BSR set to: 15
 12459                           ;usb_device.c: 640: USBWakeFromSuspend();
 12460  00367A  EC33  F03D         	call	_USBWakeFromSuspend	;wreg free
 12461  00367E                     l156:
 12462                           
 12463                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 12464  00367E  A265               	btfss	3941,1,c	;volatile
 12465  003680  D002               	goto	l157
 12466                           
 12467                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 12468  003682  98A1               	bcf	4001,4,c	;volatile
 12469                           
 12470                           ;usb_device.c: 650: return;
 12471  003684  0012               	return	
 12472  003686                     l157:
 12473                           
 12474                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 12475  003686  A062               	btfss	3938,0,c	;volatile
 12476  003688  D008               	goto	l158
 12477  00368A  010F               	movlb	15	; () banked
 12478  00368C  A136               	btfss	54,0,b	;volatile
 12479  00368E  D005               	goto	l158
 12480                           
 12481                           ; BSR set to: 15
 12482                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 12483  003690  ECED  F01D         	call	_USBDeviceInit	;wreg free
 12484                           
 12485                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 12486  003694  0E04               	movlw	4
 12487  003696  6E5F               	movwf	_USBDeviceState,c
 12488                           
 12489                           ;usb_device.c: 681: (UIR &= 0xFE);
 12490  003698  9062               	bcf	3938,0,c	;volatile
 12491  00369A                     l158:
 12492                           
 12493                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 12494  00369A  A862               	btfss	3938,4,c	;volatile
 12495  00369C  D004               	goto	l159
 12496  00369E  010F               	movlb	15	; () banked
 12497  0036A0  B936               	btfsc	54,4,b	;volatile
 12498                           
 12499                           ; BSR set to: 15
 12500                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 12501  0036A2  EC4E  F03E         	call	_USBSuspend	;wreg free
 12502  0036A6                     l159:
 12503                           
 12504                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 12505  0036A6  AC62               	btfss	3938,6,c	;volatile
 12506  0036A8  D01C               	goto	l163
 12507                           
 12508                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 12509  0036AA  010F               	movlb	15	; () banked
 12510  0036AC  AD36               	btfss	54,6,b	;volatile
 12511  0036AE  D00E               	goto	l161
 12512                           
 12513                           ; BSR set to: 15
 12514                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 12515  0036B0  0E00               	movlw	0
 12516  0036B2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12517  0036B4  0E73               	movlw	115
 12518  0036B6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12519  0036B8  0E00               	movlw	0
 12520  0036BA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12521  0036BC  0E00               	movlw	0
 12522  0036BE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12523  0036C0  0E00               	movlw	0
 12524  0036C2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12525  0036C4  0E01               	movlw	1
 12526  0036C6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12527  0036C8  ECB4  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12528  0036CC                     l161:
 12529                           
 12530                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 12531  0036CC  9C62               	bcf	3938,6,c	;volatile
 12532                           
 12533                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 12534  0036CE  ECA3  F03F         	call	_USBIncrement1msInternalTimers	;wreg free
 12535                           
 12536                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 12537  0036D2  0100               	movlb	0	; () banked
 12538  0036D4  51F0               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12539  0036D6  A4D8               	btfss	status,2,c
 12540                           
 12541                           ; BSR set to: 0
 12542                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 12543  0036D8  07F0               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 12544                           
 12545                           ; BSR set to: 0
 12546                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 12547                           
 12548                           ; BSR set to: 0
 12549  0036DA  51F0               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12550  0036DC  B4D8               	btfsc	status,2,c
 12551                           
 12552                           ; BSR set to: 0
 12553                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 12554  0036DE  EC12  F02A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12555  0036E2                     l163:
 12556                           
 12557                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 12558  0036E2  AA62               	btfss	3938,5,c	;volatile
 12559  0036E4  D004               	goto	l164
 12560  0036E6  010F               	movlb	15	; () banked
 12561  0036E8  BB36               	btfsc	54,5,b	;volatile
 12562                           
 12563                           ; BSR set to: 15
 12564                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 12565  0036EA  ECF9  F03B         	call	_USBStallHandler	;wreg free
 12566  0036EE                     l164:
 12567                           
 12568                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 12569  0036EE  A262               	btfss	3938,1,c	;volatile
 12570  0036F0  D012               	goto	l165
 12571  0036F2  010F               	movlb	15	; () banked
 12572  0036F4  A336               	btfss	54,1,b	;volatile
 12573  0036F6  D00F               	goto	l165
 12574                           
 12575                           ; BSR set to: 15
 12576                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 12577  0036F8  0E7F               	movlw	127
 12578  0036FA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12579  0036FC  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12580  0036FE  0E00               	movlw	0
 12581  003700  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12582  003702  0E00               	movlw	0
 12583  003704  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12584  003706  0E00               	movlw	0
 12585  003708  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12586  00370A  0E01               	movlw	1
 12587  00370C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12588  00370E  ECB4  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12589                           
 12590                           ;usb_device.c: 759: {UEIR = 0;};
 12591  003712  0E00               	movlw	0
 12592  003714  6E63               	movwf	3939,c	;volatile
 12593  003716                     l165:
 12594                           
 12595                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 12596  003716  0E04               	movlw	4
 12597  003718  605F               	cpfslt	_USBDeviceState,c
 12598  00371A  D002               	goto	l166
 12599                           
 12600                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 12601  00371C  98A1               	bcf	4001,4,c	;volatile
 12602                           
 12603                           ;usb_device.c: 777: return;
 12604  00371E  0012               	return	
 12605  003720                     l166:
 12606                           
 12607                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 12608  003720  010F               	movlb	15	; () banked
 12609  003722  A736               	btfss	54,3,b	;volatile
 12610  003724  D03C               	goto	u11550
 12611                           
 12612                           ; BSR set to: 15
 12613                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 12614  003726  0E00               	movlw	0
 12615  003728  6E20               	movwf	USBDeviceTasks@i,c
 12616  00372A                     l14519:
 12617                           
 12618                           ; BSR set to: 15
 12619  00372A  0E03               	movlw	3
 12620  00372C  6420               	cpfsgt	USBDeviceTasks@i,c
 12621  00372E  D001               	goto	l168
 12622  003730  D036               	goto	u11550
 12623  003732                     l168:
 12624                           
 12625                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 12626  003732  A662               	btfss	3938,3,c	;volatile
 12627  003734  D034               	goto	u11550
 12628                           
 12629                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 12630  003736  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 12631                           
 12632                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 12633  00373A  0100               	movlb	0	; () banked
 12634  00373C  31FD               	rrcf	_USTATcopy& (0+255),w,b
 12635  00373E  32E8               	rrcf	wreg,f,c
 12636  003740  32E8               	rrcf	wreg,f,c
 12637  003742  0B0F               	andlw	15
 12638  003744  6FF2               	movwf	_endpoint_number& (0+255),b
 12639                           
 12640                           ; BSR set to: 0
 12641                           ;usb_device.c: 793: (UIR &= 0xF7);
 12642  003746  9662               	bcf	3938,3,c	;volatile
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 12646  003748  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 12647  00374A  D007               	goto	l171
 12648                           
 12649                           ; BSR set to: 0
 12650                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 12651  00374C  51F2               	movf	_endpoint_number& (0+255),w,b
 12652  00374E  0D01               	mullw	1
 12653  003750  0E68               	movlw	low _ep_data_out
 12654  003752  24F3               	addwf	prodl,w,c
 12655  003754  6ED9               	movwf	fsr2l,c
 12656  003756  0E01               	movlw	high _ep_data_out
 12657  003758  D007               	goto	L5
 12658  00375A                     l171:
 12659                           
 12660                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 12661                           
 12662                           ; BSR set to: 1
 12663  00375A  0100               	movlb	0	; () banked
 12664  00375C  51F2               	movf	_endpoint_number& (0+255),w,b
 12665  00375E  0D01               	mullw	1
 12666  003760  0E6B               	movlw	low _ep_data_in
 12667  003762  24F3               	addwf	prodl,w,c
 12668  003764  6ED9               	movwf	fsr2l,c
 12669  003766  0E01               	movlw	high _ep_data_in
 12670  003768                     L5:
 12671  003768  20F4               	addwfc	prodh,w,c
 12672  00376A  6EDA               	movwf	fsr2h,c
 12673  00376C  0101               	movlb	1	; () banked
 12674  00376E  70DF               	btg	indf2,0,c
 12675                           
 12676                           ; BSR set to: 1
 12677                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 12678                           
 12679                           ; BSR set to: 1
 12680  003770  0100               	movlb	0	; () banked
 12681  003772  51F2               	movf	_endpoint_number& (0+255),w,b
 12682  003774  A4D8               	btfss	status,2,c
 12683  003776  D003               	goto	l173
 12684                           
 12685                           ; BSR set to: 0
 12686                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 12687  003778  ECAC  F02C         	call	_USBCtrlEPService	;wreg free
 12688                           
 12689                           ;usb_device.c: 813: }
 12690  00377C  D00E               	goto	l175
 12691  00377E                     l173:
 12692                           
 12693                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 12694  00377E  0E00               	movlw	0
 12695  003780  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12696  003782  0E72               	movlw	114
 12697  003784  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12698  003786  0EFD               	movlw	low _USTATcopy
 12699  003788  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12700  00378A  0E00               	movlw	high _USTATcopy
 12701  00378C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12702  00378E  0E00               	movlw	0
 12703  003790  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12704  003792  0E00               	movlw	0
 12705  003794  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12706  003796  ECB4  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12707  00379A                     l175:
 12708  00379A  2A20               	incf	USBDeviceTasks@i,f,c
 12709  00379C  D7C6               	goto	l14519
 12710  00379E                     u11550:
 12711                           
 12712                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 12713  00379E  98A1               	bcf	4001,4,c	;volatile
 12714  0037A0  0012               	return		;funcret
 12715  0037A2                     __end_of_USBDeviceTasks:
 12716                           	opt stack 0
 12717                           tblptru	equ	0xFF8
 12718                           tblptrh	equ	0xFF7
 12719                           tblptrl	equ	0xFF6
 12720                           tablat	equ	0xFF5
 12721                           prodh	equ	0xFF4
 12722                           prodl	equ	0xFF3
 12723                           intcon	equ	0xFF2
 12724                           intcon2	equ	0xFF1
 12725                           intcon3	equ	0xFF0
 12726                           postinc0	equ	0xFEE
 12727                           wreg	equ	0xFE8
 12728                           indf1	equ	0xFE7
 12729                           postdec1	equ	0xFE5
 12730                           plusw1	equ	0xFE3
 12731                           fsr1h	equ	0xFE2
 12732                           fsr1l	equ	0xFE1
 12733                           indf2	equ	0xFDF
 12734                           postinc2	equ	0xFDE
 12735                           postdec2	equ	0xFDD
 12736                           plusw2	equ	0xFDB
 12737                           fsr2h	equ	0xFDA
 12738                           fsr2l	equ	0xFD9
 12739                           status	equ	0xFD8
 12740                           
 12741 ;; *************** function _USBWakeFromSuspend *****************
 12742 ;; Defined at:
 12743 ;;		line 2305 in file "usb_device.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;		None
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;		None
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      void 
 12750 ;; Registers used:
 12751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12761 ;;Total ram usage:        0 bytes
 12762 ;; Hardware stack levels used:    1
 12763 ;; Hardware stack levels required when called:    4
 12764 ;; This function calls:
 12765 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12766 ;; This function is called by:
 12767 ;;		_USBDeviceTasks
 12768 ;; This function uses a non-reentrant model
 12769 ;;
 12770                           
 12771                           	psect	text58
 12772  007A66                     __ptext58:
 12773                           	opt stack 0
 12774  007A66                     _USBWakeFromSuspend:
 12775                           	opt stack 25
 12776                           
 12777                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 12778                           
 12779                           ;incstack = 0
 12780  007A66  0E00               	movlw	0
 12781  007A68  0100               	movlb	0	; () banked
 12782  007A6A  6FF3               	movwf	_USBBusIsSuspended& (0+255),b
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12786  007A6C  0E00               	movlw	0
 12787  007A6E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12788  007A70  0E74               	movlw	116
 12789  007A72  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12790  007A74  0E00               	movlw	0
 12791  007A76  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12792  007A78  0E00               	movlw	0
 12793  007A7A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12794  007A7C  0E00               	movlw	0
 12795  007A7E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12796  007A80  0E00               	movlw	0
 12797  007A82  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12798  007A84  ECB4  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12799                           
 12800                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 12801  007A88  9265               	bcf	3941,1,c	;volatile
 12802                           
 12803                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 12804  007A8A  010F               	movlb	15	; () banked
 12805  007A8C  9536               	bcf	54,2,b	;volatile
 12806                           
 12807                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 12808  007A8E  D001               	goto	l303
 12809  007A90                     
 12810                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 12811                           
 12812                           ; BSR set to: 15
 12813  007A90  9462               	bcf	3938,2,c	;volatile
 12814  007A92                     l303:
 12815  007A92  B462               	btfsc	3938,2,c	;volatile
 12816  007A94  D7FD               	goto	l304
 12817                           
 12818                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 12819  007A96  0E00               	movlw	0
 12820  007A98  0100               	movlb	0	; () banked
 12821  007A9A  6FEA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12822                           
 12823                           ; BSR set to: 0
 12824  007A9C  0012               	return		;funcret
 12825  007A9E                     __end_of_USBWakeFromSuspend:
 12826                           	opt stack 0
 12827                           tblptru	equ	0xFF8
 12828                           tblptrh	equ	0xFF7
 12829                           tblptrl	equ	0xFF6
 12830                           tablat	equ	0xFF5
 12831                           prodh	equ	0xFF4
 12832                           prodl	equ	0xFF3
 12833                           intcon	equ	0xFF2
 12834                           intcon2	equ	0xFF1
 12835                           intcon3	equ	0xFF0
 12836                           postinc0	equ	0xFEE
 12837                           wreg	equ	0xFE8
 12838                           indf1	equ	0xFE7
 12839                           postdec1	equ	0xFE5
 12840                           plusw1	equ	0xFE3
 12841                           fsr1h	equ	0xFE2
 12842                           fsr1l	equ	0xFE1
 12843                           indf2	equ	0xFDF
 12844                           postinc2	equ	0xFDE
 12845                           postdec2	equ	0xFDD
 12846                           plusw2	equ	0xFDB
 12847                           fsr2h	equ	0xFDA
 12848                           fsr2l	equ	0xFD9
 12849                           status	equ	0xFD8
 12850                           
 12851 ;; *************** function _USBSuspend *****************
 12852 ;; Defined at:
 12853 ;;		line 2247 in file "usb_device.c"
 12854 ;; Parameters:    Size  Location     Type
 12855 ;;		None
 12856 ;; Auto vars:     Size  Location     Type
 12857 ;;		None
 12858 ;; Return value:  Size  Location     Type
 12859 ;;                  1    wreg      void 
 12860 ;; Registers used:
 12861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12862 ;; Tracked objects:
 12863 ;;		On entry : 0/0
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12871 ;;Total ram usage:        0 bytes
 12872 ;; Hardware stack levels used:    1
 12873 ;; Hardware stack levels required when called:    4
 12874 ;; This function calls:
 12875 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12876 ;; This function is called by:
 12877 ;;		_USBDeviceTasks
 12878 ;; This function uses a non-reentrant model
 12879 ;;
 12880                           
 12881                           	psect	text59
 12882  007C9C                     __ptext59:
 12883                           	opt stack 0
 12884  007C9C                     _USBSuspend:
 12885                           	opt stack 25
 12886                           
 12887                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 12888                           
 12889                           ; BSR set to: 0
 12890                           ;incstack = 0
 12891  007C9C  010F               	movlb	15	; () banked
 12892  007C9E  8536               	bsf	54,2,b	;volatile
 12893                           
 12894                           ; BSR set to: 15
 12895                           ;usb_device.c: 2273: (UIR &= 0xEF);
 12896  007CA0  9862               	bcf	3938,4,c	;volatile
 12897                           
 12898                           ; BSR set to: 15
 12899                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 12900  007CA2  8265               	bsf	3941,1,c	;volatile
 12901                           
 12902                           ; BSR set to: 15
 12903                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 12904  007CA4  0E01               	movlw	1
 12905  007CA6  0100               	movlb	0	; () banked
 12906  007CA8  6FF3               	movwf	_USBBusIsSuspended& (0+255),b
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 12910  007CAA  0E00               	movlw	0
 12911  007CAC  6FEA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12915  007CAE  0E00               	movlw	0
 12916  007CB0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12917  007CB2  0E75               	movlw	117
 12918  007CB4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12919  007CB6  0E00               	movlw	0
 12920  007CB8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12921  007CBA  0E00               	movlw	0
 12922  007CBC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12923  007CBE  0E00               	movlw	0
 12924  007CC0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12925  007CC2  0E00               	movlw	0
 12926  007CC4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12927  007CC6  ECB4  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12928  007CCA  0012               	return		;funcret
 12929  007CCC                     __end_of_USBSuspend:
 12930                           	opt stack 0
 12931                           tblptru	equ	0xFF8
 12932                           tblptrh	equ	0xFF7
 12933                           tblptrl	equ	0xFF6
 12934                           tablat	equ	0xFF5
 12935                           prodh	equ	0xFF4
 12936                           prodl	equ	0xFF3
 12937                           intcon	equ	0xFF2
 12938                           intcon2	equ	0xFF1
 12939                           intcon3	equ	0xFF0
 12940                           postinc0	equ	0xFEE
 12941                           wreg	equ	0xFE8
 12942                           indf1	equ	0xFE7
 12943                           postdec1	equ	0xFE5
 12944                           plusw1	equ	0xFE3
 12945                           fsr1h	equ	0xFE2
 12946                           fsr1l	equ	0xFE1
 12947                           indf2	equ	0xFDF
 12948                           postinc2	equ	0xFDE
 12949                           postdec2	equ	0xFDD
 12950                           plusw2	equ	0xFDB
 12951                           fsr2h	equ	0xFDA
 12952                           fsr2l	equ	0xFD9
 12953                           status	equ	0xFD8
 12954                           
 12955 ;; *************** function _USBStallHandler *****************
 12956 ;; Defined at:
 12957 ;;		line 2204 in file "usb_device.c"
 12958 ;; Parameters:    Size  Location     Type
 12959 ;;		None
 12960 ;; Auto vars:     Size  Location     Type
 12961 ;;		None
 12962 ;; Return value:  Size  Location     Type
 12963 ;;                  1    wreg      void 
 12964 ;; Registers used:
 12965 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12966 ;; Tracked objects:
 12967 ;;		On entry : 0/0
 12968 ;;		On exit  : 0/0
 12969 ;;		Unchanged: 0/0
 12970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12975 ;;Total ram usage:        1 bytes
 12976 ;; Hardware stack levels used:    1
 12977 ;; This function calls:
 12978 ;;		Nothing
 12979 ;; This function is called by:
 12980 ;;		_USBDeviceTasks
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           
 12984                           	psect	text60
 12985  0077F2                     __ptext60:
 12986                           	opt stack 0
 12987  0077F2                     _USBStallHandler:
 12988                           	opt stack 29
 12989                           
 12990                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 12991                           
 12992                           ;incstack = 0
 12993  0077F2  010F               	movlb	15	; () banked
 12994  0077F4  A126               	btfss	38,0,b	;volatile
 12995  0077F6  D01D               	goto	l295
 12996                           
 12997                           ; BSR set to: 15
 12998                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 12999  0077F8  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13000  0077FC  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13001  007800  0E80               	movlw	128
 13002  007802  18DE               	xorwf	postinc2,w,c
 13003  007804  A4D8               	btfss	status,2,c
 13004  007806  D014               	goto	l296
 13005                           
 13006                           ; BSR set to: 15
 13007  007808  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 13008  00780C  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13009  007810  0E84               	movlw	132
 13010  007812  18DE               	xorwf	postinc2,w,c
 13011  007814  A4D8               	btfss	status,2,c
 13012  007816  D00C               	goto	l296
 13013                           
 13014                           ; BSR set to: 15
 13015                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 13016  007818  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13017  00781C  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13018  007820  0E0C               	movlw	12
 13019  007822  6EDF               	movwf	indf2,c
 13020                           
 13021                           ; BSR set to: 15
 13022                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13023  007824  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13024  007828  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13025  00782C  0E00               	movlw	0
 13026  00782E  8EDB               	bsf	plusw2,7,c
 13027  007830                     l296:
 13028                           
 13029                           ; BSR set to: 15
 13030                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 13031                           
 13032                           ; BSR set to: 15
 13033  007830  9126               	bcf	38,0,b	;volatile
 13034  007832                     l295:
 13035                           
 13036                           ; BSR set to: 15
 13037                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 13038  007832  9A62               	bcf	3938,5,c	;volatile
 13039                           
 13040                           ; BSR set to: 15
 13041  007834  0012               	return		;funcret
 13042  007836                     __end_of_USBStallHandler:
 13043                           	opt stack 0
 13044                           tblptru	equ	0xFF8
 13045                           tblptrh	equ	0xFF7
 13046                           tblptrl	equ	0xFF6
 13047                           tablat	equ	0xFF5
 13048                           prodh	equ	0xFF4
 13049                           prodl	equ	0xFF3
 13050                           intcon	equ	0xFF2
 13051                           intcon2	equ	0xFF1
 13052                           intcon3	equ	0xFF0
 13053                           postinc0	equ	0xFEE
 13054                           wreg	equ	0xFE8
 13055                           indf1	equ	0xFE7
 13056                           postdec1	equ	0xFE5
 13057                           plusw1	equ	0xFE3
 13058                           fsr1h	equ	0xFE2
 13059                           fsr1l	equ	0xFE1
 13060                           indf2	equ	0xFDF
 13061                           postinc2	equ	0xFDE
 13062                           postdec2	equ	0xFDD
 13063                           plusw2	equ	0xFDB
 13064                           fsr2h	equ	0xFDA
 13065                           fsr2l	equ	0xFD9
 13066                           status	equ	0xFD8
 13067                           
 13068 ;; *************** function _USBIncrement1msInternalTimers *****************
 13069 ;; Defined at:
 13070 ;;		line 3027 in file "usb_device.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;		None
 13073 ;; Auto vars:     Size  Location     Type
 13074 ;;		None
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  1    wreg      void 
 13077 ;; Registers used:
 13078 ;;		wreg, status,2, status,0
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13088 ;;Total ram usage:        0 bytes
 13089 ;; Hardware stack levels used:    1
 13090 ;; This function calls:
 13091 ;;		Nothing
 13092 ;; This function is called by:
 13093 ;;		_USBDeviceTasks
 13094 ;; This function uses a non-reentrant model
 13095 ;;
 13096                           
 13097                           	psect	text61
 13098  007F46                     __ptext61:
 13099                           	opt stack 0
 13100  007F46                     _USBIncrement1msInternalTimers:
 13101                           	opt stack 29
 13102                           
 13103                           ;usb_device.c: 3035: USB1msTickCount++;
 13104                           
 13105                           ; BSR set to: 15
 13106                           ;incstack = 0
 13107  007F46  0E01               	movlw	1
 13108  007F48  0101               	movlb	1	; () banked
 13109  007F4A  275E               	addwf	_USB1msTickCount& (0+255),f,b
 13110  007F4C  0E00               	movlw	0
 13111  007F4E  235F               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 13112  007F50  2360               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 13113  007F52  2361               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 13114                           
 13115                           ; BSR set to: 1
 13116                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 13117  007F54  0100               	movlb	0	; () banked
 13118  007F56  51F3               	movf	_USBBusIsSuspended& (0+255),w,b
 13119  007F58  A4D8               	btfss	status,2,c
 13120  007F5A  0012               	return	
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 13124  007F5C  2BEA               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 13128  007F5E  51EA               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 13129  007F60  A4D8               	btfss	status,2,c
 13130  007F62  0012               	return	
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 13134  007F64  69EA               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 13135                           
 13136                           ; BSR set to: 0
 13137  007F66  0012               	return	
 13138  007F68                     __end_of_USBIncrement1msInternalTimers:
 13139                           	opt stack 0
 13140                           tblptru	equ	0xFF8
 13141                           tblptrh	equ	0xFF7
 13142                           tblptrl	equ	0xFF6
 13143                           tablat	equ	0xFF5
 13144                           prodh	equ	0xFF4
 13145                           prodl	equ	0xFF3
 13146                           intcon	equ	0xFF2
 13147                           intcon2	equ	0xFF1
 13148                           intcon3	equ	0xFF0
 13149                           postinc0	equ	0xFEE
 13150                           wreg	equ	0xFE8
 13151                           indf1	equ	0xFE7
 13152                           postdec1	equ	0xFE5
 13153                           plusw1	equ	0xFE3
 13154                           fsr1h	equ	0xFE2
 13155                           fsr1l	equ	0xFE1
 13156                           indf2	equ	0xFDF
 13157                           postinc2	equ	0xFDE
 13158                           postdec2	equ	0xFDD
 13159                           plusw2	equ	0xFDB
 13160                           fsr2h	equ	0xFDA
 13161                           fsr2l	equ	0xFD9
 13162                           status	equ	0xFD8
 13163                           
 13164 ;; *************** function _USBDeviceInit *****************
 13165 ;; Defined at:
 13166 ;;		line 277 in file "usb_device.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;		None
 13169 ;; Auto vars:     Size  Location     Type
 13170 ;;  i               1    8[COMRAM] unsigned char 
 13171 ;; Return value:  Size  Location     Type
 13172 ;;                  1    wreg      void 
 13173 ;; Registers used:
 13174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13175 ;; Tracked objects:
 13176 ;;		On entry : 0/0
 13177 ;;		On exit  : 0/0
 13178 ;;		Unchanged: 0/0
 13179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13181 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13184 ;;Total ram usage:        1 bytes
 13185 ;; Hardware stack levels used:    1
 13186 ;; Hardware stack levels required when called:    1
 13187 ;; This function calls:
 13188 ;;		_memset
 13189 ;; This function is called by:
 13190 ;;		_USBDeviceTasks
 13191 ;;		_main
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195                           	psect	text62
 13196  003BDA                     __ptext62:
 13197                           	opt stack 0
 13198  003BDA                     _USBDeviceInit:
 13199                           	opt stack 28
 13200                           
 13201                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 13202                           
 13203                           ; BSR set to: 0
 13204                           ;incstack = 0
 13205  003BDA  98A0               	bcf	4000,4,c	;volatile
 13206                           
 13207                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 13208  003BDC  0E00               	movlw	0
 13209  003BDE  6E63               	movwf	3939,c	;volatile
 13210                           
 13211                           ;usb_device.c: 291: {UIR = 0;};
 13212  003BE0  0E00               	movlw	0
 13213  003BE2  6E62               	movwf	3938,c	;volatile
 13214                           
 13215                           ;usb_device.c: 294: UEP0 = 0;
 13216  003BE4  0E00               	movlw	0
 13217  003BE6  010F               	movlb	15	; () banked
 13218  003BE8  6F26               	movwf	38,b	;volatile
 13219                           
 13220                           ; BSR set to: 15
 13221                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 13222  003BEA  0E27               	movlw	39
 13223  003BEC  6E01               	movwf	memset@p1,c
 13224  003BEE  0E0F               	movlw	15
 13225  003BF0  6E02               	movwf	memset@p1+1,c
 13226  003BF2  0E00               	movlw	0
 13227  003BF4  6E04               	movwf	memset@c+1,c
 13228  003BF6  0E00               	movlw	0
 13229  003BF8  6E03               	movwf	memset@c,c
 13230  003BFA  0E00               	movlw	0
 13231  003BFC  6E06               	movwf	memset@n+1,c
 13232  003BFE  0E02               	movlw	2
 13233  003C00  6E05               	movwf	memset@n,c
 13234  003C02  ECA9  F03E         	call	_memset	;wreg free
 13235                           
 13236                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13237  003C06  0E16               	movlw	22
 13238  003C08  010F               	movlb	15	; () banked
 13239  003C0A  6F39               	movwf	57,b	;volatile
 13240                           
 13241                           ; BSR set to: 15
 13242  003C0C  0E9F               	movlw	159
 13243  003C0E  6F37               	movwf	55,b	;volatile
 13244                           
 13245                           ; BSR set to: 15
 13246  003C10  0E7B               	movlw	123
 13247  003C12  6F36               	movwf	54,b	;volatile
 13248                           
 13249                           ; BSR set to: 15
 13250                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 13251  003C14  0E00               	movlw	0
 13252  003C16  6E09               	movwf	USBDeviceInit@i,c
 13253  003C18                     l13789:
 13254                           
 13255                           ; BSR set to: 15
 13256  003C18  0E0B               	movlw	11
 13257  003C1A  6409               	cpfsgt	USBDeviceInit@i,c
 13258  003C1C  D001               	goto	l139
 13259  003C1E  D00E               	goto	u10580
 13260  003C20                     l139:
 13261                           
 13262                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 13263                           
 13264                           ; BSR set to: 15
 13265  003C20  5009               	movf	USBDeviceInit@i,w,c
 13266  003C22  0D04               	mullw	4
 13267  003C24  0E00               	movlw	0
 13268  003C26  24F3               	addwf	prodl,w,c
 13269  003C28  6ED9               	movwf	fsr2l,c
 13270  003C2A  0E0D               	movlw	13
 13271  003C2C  20F4               	addwfc	prodh,w,c
 13272  003C2E  6EDA               	movwf	fsr2h,c
 13273  003C30  6ADE               	clrf	postinc2,c
 13274  003C32  6ADE               	clrf	postinc2,c
 13275  003C34  6ADE               	clrf	postinc2,c
 13276  003C36  6ADD               	clrf	postdec2,c
 13277  003C38  2A09               	incf	USBDeviceInit@i,f,c
 13278  003C3A  D7EE               	goto	l13789
 13279  003C3C                     u10580:
 13280                           
 13281                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 13282  003C3C  8C65               	bsf	3941,6,c	;volatile
 13283                           
 13284                           ;usb_device.c: 316: UADDR = 0x00;
 13285  003C3E  0E00               	movlw	0
 13286  003C40  010F               	movlb	15	; () banked
 13287  003C42  6F38               	movwf	56,b	;volatile
 13288                           
 13289                           ; BSR set to: 15
 13290                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 13291  003C44  9865               	bcf	3941,4,c	;volatile
 13292                           
 13293                           ; BSR set to: 15
 13294                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 13295  003C46  9C65               	bcf	3941,6,c	;volatile
 13296  003C48                     
 13297                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 13298                           
 13299                           ; BSR set to: 15
 13300  003C48  9662               	bcf	3938,3,c	;volatile
 13301                           
 13302                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 13303  003C4A  0E00               	movlw	0
 13304  003C4C  0100               	movlb	0	; () banked
 13305  003C4E  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13306                           
 13307                           ; BSR set to: 0
 13308                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 13309  003C50  0E00               	movlw	0
 13310  003C52  0101               	movlb	1	; () banked
 13311  003C54  6F34               	movwf	(_outPipes+3)& (0+255),b
 13312                           
 13313                           ; BSR set to: 1
 13314                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 13315  003C56  0E00               	movlw	0
 13316  003C58  6F36               	movwf	(_outPipes+5)& (0+255),b
 13317  003C5A  0E00               	movlw	0
 13318  003C5C  6F35               	movwf	(_outPipes+4)& (0+255),b
 13319                           
 13320                           ; BSR set to: 1
 13321                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 13322  003C5E  B662               	btfsc	3938,3,c	;volatile
 13323  003C60  D7F3               	goto	l141
 13324                           
 13325                           ; BSR set to: 1
 13326                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 13327                           
 13328                           ; BSR set to: 1
 13329  003C62  0E01               	movlw	1
 13330  003C64  0100               	movlb	0	; () banked
 13331  003C66  6FEE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13332                           
 13333                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 13334  003C68  0E01               	movlw	1
 13335  003C6A  6FED               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13336                           
 13337                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 13338  003C6C  0E00               	movlw	0
 13339  003C6E  6FEC               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13340                           
 13341                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 13342  003C70  0E00               	movlw	0
 13343  003C72  6FEB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13344                           
 13345                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 13346  003C74  0E00               	movlw	0
 13347  003C76  6FF3               	movwf	_USBBusIsSuspended& (0+255),b
 13348                           
 13349                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 13350  003C78  0E00               	movlw	0
 13351  003C7A  6E09               	movwf	USBDeviceInit@i,c
 13352  003C7C                     l13817:
 13353                           
 13354                           ; BSR set to: 0
 13355  003C7C  0E02               	movlw	2
 13356  003C7E  6409               	cpfsgt	USBDeviceInit@i,c
 13357  003C80  D001               	goto	l143
 13358  003C82  D02E               	goto	u10610
 13359  003C84                     l143:
 13360                           
 13361                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 13362                           
 13363                           ; BSR set to: 0
 13364  003C84  5009               	movf	USBDeviceInit@i,w,c
 13365  003C86  0D02               	mullw	2
 13366  003C88  0EC5               	movlw	low _pBDTEntryIn
 13367  003C8A  24F3               	addwf	prodl,w,c
 13368  003C8C  6ED9               	movwf	fsr2l,c
 13369  003C8E  0E00               	movlw	high _pBDTEntryIn
 13370  003C90  20F4               	addwfc	prodh,w,c
 13371  003C92  6EDA               	movwf	fsr2h,c
 13372  003C94  0E00               	movlw	0
 13373  003C96  6EDE               	movwf	postinc2,c
 13374  003C98  0E00               	movlw	0
 13375  003C9A  6EDD               	movwf	postdec2,c
 13376                           
 13377                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 13378  003C9C  5009               	movf	USBDeviceInit@i,w,c
 13379  003C9E  0D02               	mullw	2
 13380  003CA0  0E40               	movlw	low _pBDTEntryOut
 13381  003CA2  24F3               	addwf	prodl,w,c
 13382  003CA4  6ED9               	movwf	fsr2l,c
 13383  003CA6  0E01               	movlw	high _pBDTEntryOut
 13384  003CA8  20F4               	addwfc	prodh,w,c
 13385  003CAA  6EDA               	movwf	fsr2h,c
 13386  003CAC  0E00               	movlw	0
 13387  003CAE  6EDE               	movwf	postinc2,c
 13388  003CB0  0E00               	movlw	0
 13389  003CB2  6EDD               	movwf	postdec2,c
 13390                           
 13391                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 13392  003CB4  5009               	movf	USBDeviceInit@i,w,c
 13393  003CB6  0D01               	mullw	1
 13394  003CB8  0E6B               	movlw	low _ep_data_in
 13395  003CBA  24F3               	addwf	prodl,w,c
 13396  003CBC  6ED9               	movwf	fsr2l,c
 13397  003CBE  0E01               	movlw	high _ep_data_in
 13398  003CC0  20F4               	addwfc	prodh,w,c
 13399  003CC2  6EDA               	movwf	fsr2h,c
 13400  003CC4  0E00               	movlw	0
 13401  003CC6  6EDF               	movwf	indf2,c
 13402                           
 13403                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 13404  003CC8  5009               	movf	USBDeviceInit@i,w,c
 13405  003CCA  0D01               	mullw	1
 13406  003CCC  0E68               	movlw	low _ep_data_out
 13407  003CCE  24F3               	addwf	prodl,w,c
 13408  003CD0  6ED9               	movwf	fsr2l,c
 13409  003CD2  0E01               	movlw	high _ep_data_out
 13410  003CD4  20F4               	addwfc	prodh,w,c
 13411  003CD6  6EDA               	movwf	fsr2h,c
 13412  003CD8  0E00               	movlw	0
 13413  003CDA  6EDF               	movwf	indf2,c
 13414  003CDC  2A09               	incf	USBDeviceInit@i,f,c
 13415  003CDE  D7CE               	goto	l13817
 13416  003CE0                     u10610:
 13417                           
 13418                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13419  003CE0  0E08               	movlw	8
 13420  003CE2  0100               	movlb	0	; () banked
 13421  003CE4  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 13422  003CE6  0E0D               	movlw	13
 13423  003CE8  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 13427  003CEA  0E16               	movlw	22
 13428  003CEC  010F               	movlb	15	; () banked
 13429  003CEE  6F26               	movwf	38,b	;volatile
 13430                           
 13431                           ; BSR set to: 15
 13432                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13433  003CF0  0E0D               	movlw	13
 13434  003CF2  010D               	movlb	13	; () banked
 13435  003CF4  6F03               	movwf	3,b	;volatile
 13436  003CF6  0E30               	movlw	48
 13437  003CF8  6F02               	movwf	2,b	;volatile
 13438                           
 13439                           ; BSR set to: 13
 13440                           ;usb_device.c: 359: BDT[0].CNT = 8;
 13441  003CFA  0E08               	movlw	8
 13442  003CFC  6F01               	movwf	1,b	;volatile
 13443                           
 13444                           ; BSR set to: 13
 13445                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 13446  003CFE  0E04               	movlw	4
 13447  003D00  6F00               	movwf	0,b	;volatile
 13448                           
 13449                           ; BSR set to: 13
 13450                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 13451  003D02  8F00               	bsf	0,7,b	;volatile
 13452                           
 13453                           ; BSR set to: 13
 13454                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 13455  003D04  0E00               	movlw	0
 13456  003D06  0100               	movlb	0	; () banked
 13457  003D08  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;usb_device.c: 366: USB1msTickCount = 0;
 13461  003D0A  0E00               	movlw	0
 13462  003D0C  0101               	movlb	1	; () banked
 13463  003D0E  6F5E               	movwf	_USB1msTickCount& (0+255),b
 13464  003D10  0E00               	movlw	0
 13465  003D12  6F5F               	movwf	(_USB1msTickCount+1)& (0+255),b
 13466  003D14  0E00               	movlw	0
 13467  003D16  6F60               	movwf	(_USB1msTickCount+2)& (0+255),b
 13468  003D18  0E00               	movlw	0
 13469  003D1A  6F61               	movwf	(_USB1msTickCount+3)& (0+255),b
 13470                           
 13471                           ; BSR set to: 1
 13472                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 13473  003D1C  0E00               	movlw	0
 13474  003D1E  0100               	movlb	0	; () banked
 13475  003D20  6FEA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 13476                           
 13477                           ; BSR set to: 0
 13478                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 13479  003D22  0E00               	movlw	0
 13480  003D24  6E5F               	movwf	_USBDeviceState,c
 13481                           
 13482                           ; BSR set to: 0
 13483  003D26  0012               	return		;funcret
 13484  003D28                     __end_of_USBDeviceInit:
 13485                           	opt stack 0
 13486                           tblptru	equ	0xFF8
 13487                           tblptrh	equ	0xFF7
 13488                           tblptrl	equ	0xFF6
 13489                           tablat	equ	0xFF5
 13490                           prodh	equ	0xFF4
 13491                           prodl	equ	0xFF3
 13492                           intcon	equ	0xFF2
 13493                           intcon2	equ	0xFF1
 13494                           intcon3	equ	0xFF0
 13495                           postinc0	equ	0xFEE
 13496                           wreg	equ	0xFE8
 13497                           indf1	equ	0xFE7
 13498                           postdec1	equ	0xFE5
 13499                           plusw1	equ	0xFE3
 13500                           fsr1h	equ	0xFE2
 13501                           fsr1l	equ	0xFE1
 13502                           indf2	equ	0xFDF
 13503                           postinc2	equ	0xFDE
 13504                           postdec2	equ	0xFDD
 13505                           plusw2	equ	0xFDB
 13506                           fsr2h	equ	0xFDA
 13507                           fsr2l	equ	0xFD9
 13508                           status	equ	0xFD8
 13509                           
 13510 ;; *************** function _USBCtrlEPService *****************
 13511 ;; Defined at:
 13512 ;;		line 2374 in file "usb_device.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;		None
 13515 ;; Auto vars:     Size  Location     Type
 13516 ;;		None
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  1    wreg      void 
 13519 ;; Registers used:
 13520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13530 ;;Total ram usage:        2 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; Hardware stack levels required when called:    7
 13533 ;; This function calls:
 13534 ;;		_USBCtrlTrfInHandler
 13535 ;;		_USBCtrlTrfOutHandler
 13536 ;;		_USBCtrlTrfSetupHandler
 13537 ;;		_memcpy
 13538 ;; This function is called by:
 13539 ;;		_USBDeviceTasks
 13540 ;; This function uses a non-reentrant model
 13541 ;;
 13542                           
 13543                           	psect	text63
 13544  005958                     __ptext63:
 13545                           	opt stack 0
 13546  005958                     _USBCtrlEPService:
 13547                           	opt stack 22
 13548                           
 13549                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 13550                           
 13551                           ; BSR set to: 0
 13552                           ;incstack = 0
 13553  005958  0E2D               	movlw	45
 13554  00595A  0100               	movlb	0	; () banked
 13555  00595C  6FF0               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 13556                           
 13557                           ; BSR set to: 0
 13558                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 13559  00595E  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13560  005962  0EFD               	movlw	253
 13561  005964  161E               	andwf	??_USBCtrlEPService,f,c
 13562  005966  A4D8               	btfss	status,2,c
 13563  005968  D044               	goto	l309
 13564                           
 13565                           ; BSR set to: 0
 13566                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 13567  00596A  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13568  00596E  90D8               	bcf	status,0,c
 13569  005970  321E               	rrcf	??_USBCtrlEPService,f,c
 13570  005972  0E3F               	movlw	63
 13571  005974  161E               	andwf	??_USBCtrlEPService,f,c
 13572  005976  501E               	movf	??_USBCtrlEPService,w,c
 13573  005978  0D04               	mullw	4
 13574  00597A  0E00               	movlw	0
 13575  00597C  24F3               	addwf	prodl,w,c
 13576  00597E  6FDB               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13577  005980  0E0D               	movlw	13
 13578  005982  20F4               	addwfc	prodh,w,c
 13579  005984  6FDC               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13580                           
 13581                           ; BSR set to: 0
 13582                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13583  005986  C0DB  F0D9         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13584  00598A  C0DC  F0DA         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 13588  00598E  0E04               	movlw	4
 13589  005990  19D9               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 13590  005992  6FD9               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 13591  005994  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13592  005996  6FDA               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 13593                           
 13594                           ; BSR set to: 0
 13595                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 13596  005998  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13597  00599C  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13598  0059A0  30DF               	rrcf	223,w,c
 13599  0059A2  32E8               	rrcf	wreg,f,c
 13600  0059A4  0B0F               	andlw	15
 13601  0059A6  0A0D               	xorlw	13
 13602  0059A8  A4D8               	btfss	status,2,c
 13603  0059AA  D020               	goto	l310
 13604                           
 13605                           ; BSR set to: 0
 13606                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 13607  0059AC  0E30               	movlw	48
 13608  0059AE  6E01               	movwf	memcpy@d1,c
 13609  0059B0  0E0D               	movlw	13
 13610  0059B2  6E02               	movwf	memcpy@d1+1,c
 13611  0059B4  EE20 F002          	lfsr	2,2
 13612  0059B8  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13613  0059BA  26D9               	addwf	fsr2l,f,c
 13614  0059BC  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13615  0059BE  22DA               	addwfc	fsr2h,f,c
 13616  0059C0  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 13617  0059C4  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 13618  0059C8  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 13619  0059CC  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 13620  0059D0  5003               	movf	memcpy@s1,w,c
 13621  0059D2  1004               	iorwf	memcpy@s1+1,w,c
 13622  0059D4  A4D8               	btfss	status,2,c
 13623  0059D6  0E20               	movlw	32
 13624  0059D8  6E05               	movwf	memcpy@s1+2,c
 13625  0059DA  0E00               	movlw	0
 13626  0059DC  6E07               	movwf	memcpy@n+1,c
 13627  0059DE  0E08               	movlw	8
 13628  0059E0  6E06               	movwf	memcpy@n,c
 13629  0059E2  EC39  F037         	call	_memcpy	;wreg free
 13630                           
 13631                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 13632  0059E6  EC51  F031         	call	_USBCtrlTrfSetupHandler	;wreg free
 13633                           
 13634                           ;usb_device.c: 2411: }
 13635  0059EA  0012               	return	
 13636  0059EC                     l310:
 13637                           
 13638                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 13639  0059EC  ECFE  F037         	call	_USBCtrlTrfOutHandler	;wreg free
 13640                           
 13641                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 13642  0059F0  0012               	return	
 13643  0059F2                     l309:
 13644                           
 13645                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 13646  0059F2  0100               	movlb	0	; () banked
 13647  0059F4  51FD               	movf	_USTATcopy& (0+255),w,b
 13648  0059F6  0BFD               	andlw	253
 13649  0059F8  0A04               	xorlw	4
 13650  0059FA  A4D8               	btfss	status,2,c
 13651  0059FC  0012               	return	
 13652                           
 13653                           ; BSR set to: 0
 13654                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 13655  0059FE  ECAE  F029         	call	_USBCtrlTrfInHandler	;wreg free
 13656  005A02  0012               	return	
 13657  005A04                     __end_of_USBCtrlEPService:
 13658                           	opt stack 0
 13659                           tblptru	equ	0xFF8
 13660                           tblptrh	equ	0xFF7
 13661                           tblptrl	equ	0xFF6
 13662                           tablat	equ	0xFF5
 13663                           prodh	equ	0xFF4
 13664                           prodl	equ	0xFF3
 13665                           intcon	equ	0xFF2
 13666                           intcon2	equ	0xFF1
 13667                           intcon3	equ	0xFF0
 13668                           postinc0	equ	0xFEE
 13669                           wreg	equ	0xFE8
 13670                           indf1	equ	0xFE7
 13671                           postdec1	equ	0xFE5
 13672                           plusw1	equ	0xFE3
 13673                           fsr1h	equ	0xFE2
 13674                           fsr1l	equ	0xFE1
 13675                           indf2	equ	0xFDF
 13676                           postinc2	equ	0xFDE
 13677                           postdec2	equ	0xFDD
 13678                           plusw2	equ	0xFDB
 13679                           fsr2h	equ	0xFDA
 13680                           fsr2l	equ	0xFD9
 13681                           status	equ	0xFD8
 13682                           
 13683 ;; *************** function _USBCtrlTrfSetupHandler *****************
 13684 ;; Defined at:
 13685 ;;		line 2467 in file "usb_device.c"
 13686 ;; Parameters:    Size  Location     Type
 13687 ;;		None
 13688 ;; Auto vars:     Size  Location     Type
 13689 ;;		None
 13690 ;; Return value:  Size  Location     Type
 13691 ;;                  1    wreg      void 
 13692 ;; Registers used:
 13693 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13694 ;; Tracked objects:
 13695 ;;		On entry : 0/0
 13696 ;;		On exit  : 0/0
 13697 ;;		Unchanged: 0/0
 13698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13703 ;;Total ram usage:        0 bytes
 13704 ;; Hardware stack levels used:    1
 13705 ;; Hardware stack levels required when called:    6
 13706 ;; This function calls:
 13707 ;;		_USBCheckStdRequest
 13708 ;;		_USBCtrlEPServiceComplete
 13709 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13710 ;; This function is called by:
 13711 ;;		_USBCtrlEPService
 13712 ;; This function uses a non-reentrant model
 13713 ;;
 13714                           
 13715                           	psect	text64
 13716  0062A2                     __ptext64:
 13717                           	opt stack 0
 13718  0062A2                     _USBCtrlTrfSetupHandler:
 13719                           	opt stack 22
 13720                           
 13721                           ;usb_device.c: 2472: shortPacketStatus = 0;
 13722                           
 13723                           ;incstack = 0
 13724  0062A2  0E00               	movlw	0
 13725  0062A4  0100               	movlb	0	; () banked
 13726  0062A6  6FF6               	movwf	_shortPacketStatus& (0+255),b
 13727                           
 13728                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 13729  0062A8  0E00               	movlw	0
 13730  0062AA  6FEF               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 13731                           
 13732                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 13733  0062AC  0E00               	movlw	0
 13734  0062AE  6FEC               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13735                           
 13736                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 13737  0062B0  0E00               	movlw	0
 13738  0062B2  6FEB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13739                           
 13740                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 13741  0062B4  0E00               	movlw	0
 13742  0062B6  6FF1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13743                           
 13744                           ;usb_device.c: 2477: controlTransferState = 0;
 13745  0062B8  0E00               	movlw	0
 13746  0062BA  6FF5               	movwf	_controlTransferState& (0+255),b
 13747                           
 13748                           ; BSR set to: 0
 13749                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13750  0062BC  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 13751  0062C0  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13752  0062C4  0E7F               	movlw	127
 13753  0062C6  16DF               	andwf	indf2,f,c
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13757  0062C8  0E04               	movlw	4
 13758  0062CA  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 13759  0062CC  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 13760  0062CE  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13761  0062D0  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13762                           
 13763                           ; BSR set to: 0
 13764                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13765  0062D2  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 13766  0062D6  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13767  0062DA  0E7F               	movlw	127
 13768  0062DC  16DF               	andwf	indf2,f,c
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13772  0062DE  0E04               	movlw	4
 13773  0062E0  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 13774  0062E2  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 13775  0062E4  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13776  0062E6  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 13780  0062E8  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13781  0062EC  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13782  0062F0  0E7F               	movlw	127
 13783  0062F2  16DF               	andwf	indf2,f,c
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 13787  0062F4  0E00               	movlw	0
 13788  0062F6  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 13792  0062F8  0E00               	movlw	0
 13793  0062FA  6FC4               	movwf	(_inPipes+5)& (0+255),b
 13794  0062FC  0E00               	movlw	0
 13795  0062FE  6FC3               	movwf	(_inPipes+4)& (0+255),b
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 13799  006300  0E00               	movlw	0
 13800  006302  0101               	movlb	1	; () banked
 13801  006304  6F34               	movwf	(_outPipes+3)& (0+255),b
 13802                           
 13803                           ; BSR set to: 1
 13804                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 13805  006306  0E00               	movlw	0
 13806  006308  6F36               	movwf	(_outPipes+5)& (0+255),b
 13807  00630A  0E00               	movlw	0
 13808  00630C  6F35               	movwf	(_outPipes+4)& (0+255),b
 13809                           
 13810                           ; BSR set to: 1
 13811                           ;usb_device.c: 2502: USBCheckStdRequest();
 13812  00630E  ECFA  F024         	call	_USBCheckStdRequest	;wreg free
 13813                           
 13814                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 13815  006312  0E00               	movlw	0
 13816  006314  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13817  006316  0E03               	movlw	3
 13818  006318  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13819  00631A  0E00               	movlw	0
 13820  00631C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13821  00631E  0E00               	movlw	0
 13822  006320  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13823  006322  0E00               	movlw	0
 13824  006324  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13825  006326  0E00               	movlw	0
 13826  006328  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13827  00632A  ECB4  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13828                           
 13829                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 13830  00632E  ECFA  F023         	call	_USBCtrlEPServiceComplete	;wreg free
 13831  006332  0012               	return		;funcret
 13832  006334                     __end_of_USBCtrlTrfSetupHandler:
 13833                           	opt stack 0
 13834                           tblptru	equ	0xFF8
 13835                           tblptrh	equ	0xFF7
 13836                           tblptrl	equ	0xFF6
 13837                           tablat	equ	0xFF5
 13838                           prodh	equ	0xFF4
 13839                           prodl	equ	0xFF3
 13840                           intcon	equ	0xFF2
 13841                           intcon2	equ	0xFF1
 13842                           intcon3	equ	0xFF0
 13843                           postinc0	equ	0xFEE
 13844                           wreg	equ	0xFE8
 13845                           indf1	equ	0xFE7
 13846                           postdec1	equ	0xFE5
 13847                           plusw1	equ	0xFE3
 13848                           fsr1h	equ	0xFE2
 13849                           fsr1l	equ	0xFE1
 13850                           indf2	equ	0xFDF
 13851                           postinc2	equ	0xFDE
 13852                           postdec2	equ	0xFDD
 13853                           plusw2	equ	0xFDB
 13854                           fsr2h	equ	0xFDA
 13855                           fsr2l	equ	0xFD9
 13856                           status	equ	0xFD8
 13857                           
 13858 ;; *************** function _USBCtrlEPServiceComplete *****************
 13859 ;; Defined at:
 13860 ;;		line 1618 in file "usb_device.c"
 13861 ;; Parameters:    Size  Location     Type
 13862 ;;		None
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;		None
 13865 ;; Return value:  Size  Location     Type
 13866 ;;                  1    wreg      void 
 13867 ;; Registers used:
 13868 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13869 ;; Tracked objects:
 13870 ;;		On entry : 0/0
 13871 ;;		On exit  : 0/0
 13872 ;;		Unchanged: 0/0
 13873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13878 ;;Total ram usage:        0 bytes
 13879 ;; Hardware stack levels used:    1
 13880 ;; Hardware stack levels required when called:    2
 13881 ;; This function calls:
 13882 ;;		_USBCtrlEPAllowDataStage
 13883 ;;		_USBCtrlEPAllowStatusStage
 13884 ;; This function is called by:
 13885 ;;		_USBCtrlTrfSetupHandler
 13886 ;; This function uses a non-reentrant model
 13887 ;;
 13888                           
 13889                           	psect	text65
 13890  0047F4                     __ptext65:
 13891                           	opt stack 0
 13892  0047F4                     _USBCtrlEPServiceComplete:
 13893                           	opt stack 25
 13894                           
 13895                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 13896                           
 13897                           ;incstack = 0
 13898  0047F4  9865               	bcf	3941,4,c	;volatile
 13899                           
 13900                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 13901  0047F6  0100               	movlb	0	; () banked
 13902  0047F8  BFC2               	btfsc	(_inPipes+3)& (0+255),7,b
 13903  0047FA  D03C               	goto	l219
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 13907  0047FC  0101               	movlb	1	; () banked
 13908  0047FE  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 13909  004800  D00D               	goto	l220
 13910                           
 13911                           ; BSR set to: 1
 13912                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 13913  004802  0E02               	movlw	2
 13914  004804  0100               	movlb	0	; () banked
 13915  004806  6FF5               	movwf	_controlTransferState& (0+255),b
 13916                           
 13917                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 13918  004808  51EB               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 13919  00480A  B4D8               	btfsc	status,2,c
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 13923  00480C  ECF3  F02E         	call	_USBCtrlEPAllowDataStage	;wreg free
 13924                           
 13925                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 13926  004810  0E00               	movlw	0
 13927  004812  0100               	movlb	0	; () banked
 13928  004814  6FED               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13929                           
 13930                           ; BSR set to: 0
 13931                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 13932  004816  0E00               	movlw	0
 13933  004818  6FEE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13934                           
 13935                           ;usb_device.c: 1654: }
 13936  00481A  0012               	return	
 13937  00481C                     l220:
 13938                           
 13939                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 13940                           
 13941                           ; BSR set to: 0
 13942  00481C  0100               	movlb	0	; () banked
 13943  00481E  EE20 F001          	lfsr	2,1
 13944  004822  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13945  004824  26D9               	addwf	fsr2l,f,c
 13946  004826  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13947  004828  22DA               	addwfc	fsr2h,f,c
 13948  00482A  0E08               	movlw	8
 13949  00482C  6EDF               	movwf	indf2,c
 13950                           
 13951                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13952  00482E  EE20 F002          	lfsr	2,2
 13953  004832  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13954  004834  26D9               	addwf	fsr2l,f,c
 13955  004836  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13956  004838  22DA               	addwfc	fsr2h,f,c
 13957  00483A  0E30               	movlw	48
 13958  00483C  6EDE               	movwf	postinc2,c
 13959  00483E  0E0D               	movlw	13
 13960  004840  6EDD               	movwf	postdec2,c
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13964  004842  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13965  004846  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13966  00484A  0E0C               	movlw	12
 13967  00484C  6EDF               	movwf	indf2,c
 13968                           
 13969                           ; BSR set to: 0
 13970                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13971  00484E  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13972  004852  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13973  004856  0E00               	movlw	0
 13974  004858  8EDB               	bsf	plusw2,7,c
 13975                           
 13976                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 13977  00485A  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 13978  00485E  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13979  004862  0E04               	movlw	4
 13980  004864  6EDF               	movwf	indf2,c
 13981                           
 13982                           ; BSR set to: 0
 13983                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13984  004866  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 13985  00486A  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13986  00486E  0E00               	movlw	0
 13987  004870  8EDB               	bsf	plusw2,7,c
 13988                           
 13989                           ; BSR set to: 0
 13990                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 13991  004872  0012               	return	
 13992  004874                     l219:
 13993                           
 13994                           ; BSR set to: 0
 13995                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 13996  004874  010D               	movlb	13	; () banked
 13997  004876  AF30               	btfss	48,7,b	;volatile
 13998  004878  D012               	goto	l224
 13999                           
 14000                           ; BSR set to: 13
 14001                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 14002  00487A  0E01               	movlw	1
 14003  00487C  0100               	movlb	0	; () banked
 14004  00487E  6FF5               	movwf	_controlTransferState& (0+255),b
 14005                           
 14006                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 14007  004880  51EC               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 14008  004882  B4D8               	btfsc	status,2,c
 14009                           
 14010                           ; BSR set to: 0
 14011                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 14012  004884  ECF3  F02E         	call	_USBCtrlEPAllowDataStage	;wreg free
 14013                           
 14014                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 14015  004888  0E00               	movlw	0
 14016  00488A  0100               	movlb	0	; () banked
 14017  00488C  6FED               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14018                           
 14019                           ; BSR set to: 0
 14020                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 14021  00488E  0E00               	movlw	0
 14022  004890  6FEE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14023                           
 14024                           ; BSR set to: 0
 14025                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 14026  004892  51EF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 14027  004894  A4D8               	btfss	status,2,c
 14028  004896  0012               	return	
 14029                           
 14030                           ; BSR set to: 0
 14031                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 14032  004898  EC12  F02A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14033                           
 14034                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 14035  00489C  0012               	return	
 14036  00489E                     l224:
 14037                           
 14038                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 14039  00489E  0E02               	movlw	2
 14040  0048A0  0100               	movlb	0	; () banked
 14041  0048A2  6FF5               	movwf	_controlTransferState& (0+255),b
 14042                           
 14043                           ; BSR set to: 0
 14044                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 14045  0048A4  EE20 F001          	lfsr	2,1
 14046  0048A8  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14047  0048AA  26D9               	addwf	fsr2l,f,c
 14048  0048AC  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14049  0048AE  22DA               	addwfc	fsr2h,f,c
 14050  0048B0  0E08               	movlw	8
 14051  0048B2  6EDF               	movwf	indf2,c
 14052                           
 14053                           ; BSR set to: 0
 14054                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14055  0048B4  EE20 F002          	lfsr	2,2
 14056  0048B8  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14057  0048BA  26D9               	addwf	fsr2l,f,c
 14058  0048BC  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14059  0048BE  22DA               	addwfc	fsr2h,f,c
 14060  0048C0  0E30               	movlw	48
 14061  0048C2  6EDE               	movwf	postinc2,c
 14062  0048C4  0E0D               	movlw	13
 14063  0048C6  6EDD               	movwf	postdec2,c
 14064                           
 14065                           ; BSR set to: 0
 14066                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 14067  0048C8  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14068  0048CC  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14069  0048D0  0E04               	movlw	4
 14070  0048D2  6EDF               	movwf	indf2,c
 14071                           
 14072                           ; BSR set to: 0
 14073                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14074  0048D4  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14075  0048D8  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14076  0048DC  0E00               	movlw	0
 14077  0048DE  8EDB               	bsf	plusw2,7,c
 14078                           
 14079                           ; BSR set to: 0
 14080                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 14081  0048E0  0E00               	movlw	0
 14082  0048E2  6FED               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 14086  0048E4  0E00               	movlw	0
 14087  0048E6  6FEE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14088                           
 14089                           ; BSR set to: 0
 14090                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 14091  0048E8  51EF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 14092  0048EA  A4D8               	btfss	status,2,c
 14093  0048EC  0012               	return	
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 14097  0048EE  EC12  F02A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14098  0048F2  0012               	return	
 14099  0048F4                     __end_of_USBCtrlEPServiceComplete:
 14100                           	opt stack 0
 14101                           tblptru	equ	0xFF8
 14102                           tblptrh	equ	0xFF7
 14103                           tblptrl	equ	0xFF6
 14104                           tablat	equ	0xFF5
 14105                           prodh	equ	0xFF4
 14106                           prodl	equ	0xFF3
 14107                           intcon	equ	0xFF2
 14108                           intcon2	equ	0xFF1
 14109                           intcon3	equ	0xFF0
 14110                           postinc0	equ	0xFEE
 14111                           wreg	equ	0xFE8
 14112                           indf1	equ	0xFE7
 14113                           postdec1	equ	0xFE5
 14114                           plusw1	equ	0xFE3
 14115                           fsr1h	equ	0xFE2
 14116                           fsr1l	equ	0xFE1
 14117                           indf2	equ	0xFDF
 14118                           postinc2	equ	0xFDE
 14119                           postdec2	equ	0xFDD
 14120                           plusw2	equ	0xFDB
 14121                           fsr2h	equ	0xFDA
 14122                           fsr2l	equ	0xFD9
 14123                           status	equ	0xFD8
 14124                           
 14125 ;; *************** function _USBCtrlEPAllowDataStage *****************
 14126 ;; Defined at:
 14127 ;;		line 1490 in file "usb_device.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;		None
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;		None
 14132 ;; Return value:  Size  Location     Type
 14133 ;;                  1    wreg      void 
 14134 ;; Registers used:
 14135 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/0
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14145 ;;Total ram usage:        0 bytes
 14146 ;; Hardware stack levels used:    1
 14147 ;; Hardware stack levels required when called:    1
 14148 ;; This function calls:
 14149 ;;		_USBCtrlTrfTxService
 14150 ;; This function is called by:
 14151 ;;		_USBCtrlEPServiceComplete
 14152 ;; This function uses a non-reentrant model
 14153 ;;
 14154                           
 14155                           	psect	text66
 14156  005DE6                     __ptext66:
 14157                           	opt stack 0
 14158  005DE6                     _USBCtrlEPAllowDataStage:
 14159                           	opt stack 25
 14160                           
 14161                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 14162                           
 14163                           ;incstack = 0
 14164  005DE6  0E00               	movlw	0
 14165  005DE8  0100               	movlb	0	; () banked
 14166  005DEA  6FEC               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 14167                           
 14168                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 14169  005DEC  0E00               	movlw	0
 14170  005DEE  6FEB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 14171                           
 14172                           ; BSR set to: 0
 14173                           ;usb_device.c: 1495: if(controlTransferState == 2)
 14174  005DF0  0E02               	movlw	2
 14175  005DF2  19F5               	xorwf	_controlTransferState& (0+255),w,b
 14176  005DF4  A4D8               	btfss	status,2,c
 14177  005DF6  D01F               	goto	l208
 14178                           
 14179                           ; BSR set to: 0
 14180                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 14181  005DF8  EE20 F001          	lfsr	2,1
 14182  005DFC  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14183  005DFE  26D9               	addwf	fsr2l,f,c
 14184  005E00  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14185  005E02  22DA               	addwfc	fsr2h,f,c
 14186  005E04  0E08               	movlw	8
 14187  005E06  6EDF               	movwf	indf2,c
 14188                           
 14189                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 14190  005E08  EE20 F002          	lfsr	2,2
 14191  005E0C  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14192  005E0E  26D9               	addwf	fsr2l,f,c
 14193  005E10  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14194  005E12  22DA               	addwfc	fsr2h,f,c
 14195  005E14  0E38               	movlw	56
 14196  005E16  6EDE               	movwf	postinc2,c
 14197  005E18  0E0D               	movlw	13
 14198  005E1A  6EDD               	movwf	postdec2,c
 14199                           
 14200                           ; BSR set to: 0
 14201                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 14202  005E1C  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14203  005E20  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14204  005E24  0E48               	movlw	72
 14205  005E26  6EDF               	movwf	indf2,c
 14206                           
 14207                           ; BSR set to: 0
 14208                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14209  005E28  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14210  005E2C  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14211  005E30  0E00               	movlw	0
 14212  005E32  8EDB               	bsf	plusw2,7,c
 14213                           
 14214                           ;usb_device.c: 1502: }
 14215  005E34  0012               	return	
 14216  005E36                     l208:
 14217                           
 14218                           ; BSR set to: 0
 14219                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 14220                           
 14221                           ; BSR set to: 0
 14222  005E36  51C3               	movf	(_inPipes+4)& (0+255),w,b
 14223  005E38  010D               	movlb	13	; () banked
 14224  005E3A  5D36               	subwf	54,w,b	;volatile
 14225  005E3C  0100               	movlb	0	; () banked
 14226  005E3E  51C4               	movf	(_inPipes+5)& (0+255),w,b
 14227  005E40  010D               	movlb	13	; () banked
 14228  005E42  5937               	subwfb	55,w,b	;volatile
 14229  005E44  B0D8               	btfsc	status,0,c
 14230  005E46  D004               	goto	l210
 14231                           
 14232                           ; BSR set to: 13
 14233                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 14234  005E48  CD36 F0C3          	movff	3382,_inPipes+4	;volatile
 14235  005E4C  CD37 F0C4          	movff	3383,_inPipes+5	;volatile
 14236  005E50                     l210:
 14237                           
 14238                           ; BSR set to: 13
 14239                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 14240                           
 14241                           ; BSR set to: 13
 14242  005E50  EC0B  F028         	call	_USBCtrlTrfTxService	;wreg free
 14243                           
 14244                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 14245  005E54  0100               	movlb	0	; () banked
 14246  005E56  EE20 F002          	lfsr	2,2
 14247  005E5A  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 14248  005E5C  26D9               	addwf	fsr2l,f,c
 14249  005E5E  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 14250  005E60  22DA               	addwfc	fsr2h,f,c
 14251  005E62  0E38               	movlw	56
 14252  005E64  6EDE               	movwf	postinc2,c
 14253  005E66  0E0D               	movlw	13
 14254  005E68  6EDD               	movwf	postdec2,c
 14255                           
 14256                           ; BSR set to: 0
 14257                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14258  005E6A  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 14259  005E6E  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14260  005E72  0E48               	movlw	72
 14261  005E74  6EDF               	movwf	indf2,c
 14262                           
 14263                           ; BSR set to: 0
 14264                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14265  005E76  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 14266  005E7A  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14267  005E7E  0E00               	movlw	0
 14268  005E80  8EDB               	bsf	plusw2,7,c
 14269  005E82  0012               	return	
 14270  005E84                     __end_of_USBCtrlEPAllowDataStage:
 14271                           	opt stack 0
 14272                           tblptru	equ	0xFF8
 14273                           tblptrh	equ	0xFF7
 14274                           tblptrl	equ	0xFF6
 14275                           tablat	equ	0xFF5
 14276                           prodh	equ	0xFF4
 14277                           prodl	equ	0xFF3
 14278                           intcon	equ	0xFF2
 14279                           intcon2	equ	0xFF1
 14280                           intcon3	equ	0xFF0
 14281                           postinc0	equ	0xFEE
 14282                           wreg	equ	0xFE8
 14283                           indf1	equ	0xFE7
 14284                           postdec1	equ	0xFE5
 14285                           plusw1	equ	0xFE3
 14286                           fsr1h	equ	0xFE2
 14287                           fsr1l	equ	0xFE1
 14288                           indf2	equ	0xFDF
 14289                           postinc2	equ	0xFDE
 14290                           postdec2	equ	0xFDD
 14291                           plusw2	equ	0xFDB
 14292                           fsr2h	equ	0xFDA
 14293                           fsr2l	equ	0xFD9
 14294                           status	equ	0xFD8
 14295                           
 14296 ;; *************** function _USBCheckStdRequest *****************
 14297 ;; Defined at:
 14298 ;;		line 2688 in file "usb_device.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;		None
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;		None
 14303 ;; Return value:  Size  Location     Type
 14304 ;;                  1    wreg      void 
 14305 ;; Registers used:
 14306 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14307 ;; Tracked objects:
 14308 ;;		On entry : 0/0
 14309 ;;		On exit  : 0/0
 14310 ;;		Unchanged: 0/0
 14311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14316 ;;Total ram usage:        0 bytes
 14317 ;; Hardware stack levels used:    1
 14318 ;; Hardware stack levels required when called:    5
 14319 ;; This function calls:
 14320 ;;		_USBStdFeatureReqHandler
 14321 ;;		_USBStdGetDscHandler
 14322 ;;		_USBStdGetStatusHandler
 14323 ;;		_USBStdSetCfgHandler
 14324 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14325 ;; This function is called by:
 14326 ;;		_USBCtrlTrfSetupHandler
 14327 ;; This function uses a non-reentrant model
 14328 ;;
 14329                           
 14330                           	psect	text67
 14331  0049F4                     __ptext67:
 14332                           	opt stack 0
 14333  0049F4                     _USBCheckStdRequest:
 14334                           	opt stack 22
 14335                           
 14336                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 14337                           
 14338                           ; BSR set to: 0
 14339                           ;incstack = 0
 14340  0049F4  010D               	movlb	13	; () banked
 14341  0049F6  3930               	swapf	48,w,b	;volatile
 14342  0049F8  32E8               	rrcf	wreg,f,c
 14343  0049FA  0B03               	andlw	3
 14344  0049FC  0900               	iorlw	0
 14345  0049FE  A4D8               	btfss	status,2,c
 14346  004A00  0012               	return	
 14347  004A02  D047               	goto	l343
 14348  004A04                     l344:
 14349                           
 14350                           ; BSR set to: 13
 14351                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 14352  004A04  0100               	movlb	0	; () banked
 14353  004A06  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14354                           
 14355                           ; BSR set to: 0
 14356                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 14357  004A08  0E08               	movlw	8
 14358  004A0A  6E5F               	movwf	_USBDeviceState,c
 14359                           
 14360                           ;usb_device.c: 2698: break;
 14361  004A0C  0012               	return	
 14362  004A0E                     
 14363                           ;usb_device.c: 2700: USBStdGetDscHandler();
 14364                           
 14365                           ; BSR set to: 0
 14366  004A0E  EC94  F01E         	call	_USBStdGetDscHandler	;wreg free
 14367                           
 14368                           ;usb_device.c: 2701: break;
 14369  004A12  0012               	return	
 14370  004A14                     
 14371                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 14372  004A14  EC2E  F027         	call	_USBStdSetCfgHandler	;wreg free
 14373                           
 14374                           ;usb_device.c: 2704: break;
 14375  004A18  0012               	return	
 14376  004A1A                     
 14377                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 14378  004A1A  0EFE               	movlw	low _USBActiveConfiguration
 14379  004A1C  0100               	movlb	0	; () banked
 14380  004A1E  6FBF               	movwf	_inPipes& (0+255),b
 14381  004A20  0E00               	movlw	high _USBActiveConfiguration
 14382  004A22  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14383                           
 14384                           ; BSR set to: 0
 14385                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14386  004A24  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 14387                           
 14388                           ; BSR set to: 0
 14389                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 14390  004A26  0E01               	movlw	1
 14391  004A28  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 14395  004A2A  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14396                           
 14397                           ;usb_device.c: 2710: break;
 14398  004A2C  0012               	return	
 14399  004A2E                     
 14400                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 14401                           
 14402                           ; BSR set to: 0
 14403  004A2E  EC02  F02D         	call	_USBStdGetStatusHandler	;wreg free
 14404                           
 14405                           ;usb_device.c: 2713: break;
 14406  004A32  0012               	return	
 14407  004A34                     
 14408                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 14409  004A34  EC24  F00C         	call	_USBStdFeatureReqHandler	;wreg free
 14410                           
 14411                           ;usb_device.c: 2717: break;
 14412  004A38  0012               	return	
 14413  004A3A                     
 14414                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 14415  004A3A  010D               	movlb	13	; () banked
 14416  004A3C  5134               	movf	52,w,b	;volatile
 14417  004A3E  0D01               	mullw	1
 14418  004A40  0ED6               	movlw	low _USBAlternateInterface
 14419  004A42  24F3               	addwf	prodl,w,c
 14420  004A44  0100               	movlb	0	; () banked
 14421  004A46  6FBF               	movwf	_inPipes& (0+255),b
 14422  004A48  0E01               	movlw	high _USBAlternateInterface
 14423  004A4A  20F4               	addwfc	prodh,w,c
 14424  004A4C  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14425                           
 14426                           ; BSR set to: 0
 14427                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14428  004A4E  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 14429                           
 14430                           ; BSR set to: 0
 14431                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 14432  004A50  0E01               	movlw	1
 14433  004A52  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14434                           
 14435                           ; BSR set to: 0
 14436                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 14437  004A54  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14438                           
 14439                           ;usb_device.c: 2723: break;
 14440  004A56  0012               	return	
 14441  004A58                     l353:
 14442                           
 14443                           ; BSR set to: 13
 14444                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 14445  004A58  0100               	movlb	0	; () banked
 14446  004A5A  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14447                           
 14448                           ; BSR set to: 0
 14449                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 14450  004A5C  010D               	movlb	13	; () banked
 14451  004A5E  5134               	movf	52,w,b	;volatile
 14452  004A60  0D01               	mullw	1
 14453  004A62  0ED6               	movlw	low _USBAlternateInterface
 14454  004A64  24F3               	addwf	prodl,w,c
 14455  004A66  6ED9               	movwf	fsr2l,c
 14456  004A68  0E01               	movlw	high _USBAlternateInterface
 14457  004A6A  20F4               	addwfc	prodh,w,c
 14458  004A6C  6EDA               	movwf	fsr2h,c
 14459  004A6E  CD32 FFDF          	movff	3378,indf2	;volatile
 14460                           
 14461                           ;usb_device.c: 2727: break;
 14462  004A72  0012               	return	
 14463  004A74                     
 14464                           ; BSR set to: 13
 14465                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 14466                           
 14467                           ; BSR set to: 13
 14468  004A74  0E00               	movlw	0
 14469  004A76  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14470  004A78  0E02               	movlw	2
 14471  004A7A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14472  004A7C  0E00               	movlw	0
 14473  004A7E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14474  004A80  0E00               	movlw	0
 14475  004A82  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14476  004A84  0E00               	movlw	0
 14477  004A86  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14478  004A88  0E00               	movlw	0
 14479  004A8A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14480  004A8C  ECB4  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14481                           
 14482                           ;usb_device.c: 2734: }
 14483                           
 14484                           ;usb_device.c: 2733: break;
 14485                           
 14486                           ;usb_device.c: 2732: default:
 14487                           
 14488                           ;usb_device.c: 2731: case 12:
 14489                           
 14490                           ;usb_device.c: 2730: break;
 14491  004A90  0012               	return	
 14492  004A92                     l343:
 14493  004A92  010D               	movlb	13	; () banked
 14494  004A94  5131               	movf	49,w,b	;volatile
 14495                           
 14496                           ; Switch size 1, requested type "space"
 14497                           ; Number of cases is 11, Range of values is 0 to 12
 14498                           ; switch strategies available:
 14499                           ; Name         Instructions Cycles
 14500                           ; simple_byte           34    18 (average)
 14501                           ;	Chosen strategy is simple_byte
 14502  004A96  0A00               	xorlw	0	; case 0
 14503  004A98  B4D8               	btfsc	status,2,c
 14504  004A9A  D7C9               	goto	l349
 14505  004A9C  0A01               	xorlw	1	; case 1
 14506  004A9E  B4D8               	btfsc	status,2,c
 14507  004AA0  D7C9               	goto	l350
 14508  004AA2  0A02               	xorlw	2	; case 3
 14509  004AA4  B4D8               	btfsc	status,2,c
 14510  004AA6  D7C6               	goto	l350
 14511  004AA8  0A06               	xorlw	6	; case 5
 14512  004AAA  B4D8               	btfsc	status,2,c
 14513  004AAC  D7AB               	goto	l344
 14514  004AAE  0A03               	xorlw	3	; case 6
 14515  004AB0  B4D8               	btfsc	status,2,c
 14516  004AB2  D7AD               	goto	l346
 14517  004AB4  0A01               	xorlw	1	; case 7
 14518  004AB6  B4D8               	btfsc	status,2,c
 14519  004AB8  D7DD               	goto	l354
 14520  004ABA  0A0F               	xorlw	15	; case 8
 14521  004ABC  B4D8               	btfsc	status,2,c
 14522  004ABE  D7AD               	goto	l348
 14523  004AC0  0A01               	xorlw	1	; case 9
 14524  004AC2  B4D8               	btfsc	status,2,c
 14525  004AC4  D7A7               	goto	l347
 14526  004AC6  0A03               	xorlw	3	; case 10
 14527  004AC8  B4D8               	btfsc	status,2,c
 14528  004ACA  D7B7               	goto	l352
 14529  004ACC  0A01               	xorlw	1	; case 11
 14530  004ACE  B4D8               	btfsc	status,2,c
 14531  004AD0  D7C3               	goto	l353
 14532  004AD2  0A07               	xorlw	7	; case 12
 14533  004AD4  0012               	return	
 14534  004AD6                     __end_of_USBCheckStdRequest:
 14535                           	opt stack 0
 14536                           tblptru	equ	0xFF8
 14537                           tblptrh	equ	0xFF7
 14538                           tblptrl	equ	0xFF6
 14539                           tablat	equ	0xFF5
 14540                           prodh	equ	0xFF4
 14541                           prodl	equ	0xFF3
 14542                           intcon	equ	0xFF2
 14543                           intcon2	equ	0xFF1
 14544                           intcon3	equ	0xFF0
 14545                           postinc0	equ	0xFEE
 14546                           wreg	equ	0xFE8
 14547                           indf1	equ	0xFE7
 14548                           postdec1	equ	0xFE5
 14549                           plusw1	equ	0xFE3
 14550                           fsr1h	equ	0xFE2
 14551                           fsr1l	equ	0xFE1
 14552                           indf2	equ	0xFDF
 14553                           postinc2	equ	0xFDE
 14554                           postdec2	equ	0xFDD
 14555                           plusw2	equ	0xFDB
 14556                           fsr2h	equ	0xFDA
 14557                           fsr2l	equ	0xFD9
 14558                           status	equ	0xFD8
 14559                           
 14560 ;; *************** function _USBStdSetCfgHandler *****************
 14561 ;; Defined at:
 14562 ;;		line 1970 in file "usb_device.c"
 14563 ;; Parameters:    Size  Location     Type
 14564 ;;		None
 14565 ;; Auto vars:     Size  Location     Type
 14566 ;;  i               1   23[COMRAM] unsigned char 
 14567 ;; Return value:  Size  Location     Type
 14568 ;;                  1    wreg      void 
 14569 ;; Registers used:
 14570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14571 ;; Tracked objects:
 14572 ;;		On entry : 0/0
 14573 ;;		On exit  : 0/0
 14574 ;;		Unchanged: 0/0
 14575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14580 ;;Total ram usage:        1 bytes
 14581 ;; Hardware stack levels used:    1
 14582 ;; Hardware stack levels required when called:    4
 14583 ;; This function calls:
 14584 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14585 ;;		_memset
 14586 ;; This function is called by:
 14587 ;;		_USBCheckStdRequest
 14588 ;; This function uses a non-reentrant model
 14589 ;;
 14590                           
 14591                           	psect	text68
 14592  004E5C                     __ptext68:
 14593                           	opt stack 0
 14594  004E5C                     _USBStdSetCfgHandler:
 14595                           	opt stack 22
 14596                           
 14597                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 14598                           
 14599                           ;incstack = 0
 14600  004E5C  0100               	movlb	0	; () banked
 14601  004E5E  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14602                           
 14603                           ; BSR set to: 0
 14604                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 14605  004E60  0E27               	movlw	39
 14606  004E62  6E01               	movwf	memset@p1,c
 14607  004E64  0E0F               	movlw	15
 14608  004E66  6E02               	movwf	memset@p1+1,c
 14609  004E68  0E00               	movlw	0
 14610  004E6A  6E04               	movwf	memset@c+1,c
 14611  004E6C  0E00               	movlw	0
 14612  004E6E  6E03               	movwf	memset@c,c
 14613  004E70  0E00               	movlw	0
 14614  004E72  6E06               	movwf	memset@n+1,c
 14615  004E74  0E02               	movlw	2
 14616  004E76  6E05               	movwf	memset@n,c
 14617  004E78  ECA9  F03E         	call	_memset	;wreg free
 14618                           
 14619                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 14620  004E7C  0E00               	movlw	0
 14621  004E7E  6E01               	movwf	memset@p1,c
 14622  004E80  0E0D               	movlw	13
 14623  004E82  6E02               	movwf	memset@p1+1,c
 14624  004E84  0E00               	movlw	0
 14625  004E86  6E04               	movwf	memset@c+1,c
 14626  004E88  0E00               	movlw	0
 14627  004E8A  6E03               	movwf	memset@c,c
 14628  004E8C  0E00               	movlw	0
 14629  004E8E  6E06               	movwf	memset@n+1,c
 14630  004E90  0E30               	movlw	48
 14631  004E92  6E05               	movwf	memset@n,c
 14632  004E94  ECA9  F03E         	call	_memset	;wreg free
 14633                           
 14634                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 14635  004E98  8C65               	bsf	3941,6,c	;volatile
 14636                           
 14637                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 14638  004E9A  0E00               	movlw	0
 14639  004E9C  6E18               	movwf	USBStdSetCfgHandler@i,c
 14640  004E9E                     l11539:
 14641  004E9E  0E02               	movlw	2
 14642  004EA0  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 14643  004EA2  D001               	goto	l260
 14644  004EA4  D016               	goto	u8530
 14645  004EA6                     l260:
 14646                           
 14647                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 14648  004EA6  5018               	movf	USBStdSetCfgHandler@i,w,c
 14649  004EA8  0D01               	mullw	1
 14650  004EAA  0E6B               	movlw	low _ep_data_in
 14651  004EAC  24F3               	addwf	prodl,w,c
 14652  004EAE  6ED9               	movwf	fsr2l,c
 14653  004EB0  0E01               	movlw	high _ep_data_in
 14654  004EB2  20F4               	addwfc	prodh,w,c
 14655  004EB4  6EDA               	movwf	fsr2h,c
 14656  004EB6  0E00               	movlw	0
 14657  004EB8  6EDF               	movwf	indf2,c
 14658                           
 14659                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 14660  004EBA  5018               	movf	USBStdSetCfgHandler@i,w,c
 14661  004EBC  0D01               	mullw	1
 14662  004EBE  0E68               	movlw	low _ep_data_out
 14663  004EC0  24F3               	addwf	prodl,w,c
 14664  004EC2  6ED9               	movwf	fsr2l,c
 14665  004EC4  0E01               	movlw	high _ep_data_out
 14666  004EC6  20F4               	addwfc	prodh,w,c
 14667  004EC8  6EDA               	movwf	fsr2h,c
 14668  004ECA  0E00               	movlw	0
 14669  004ECC  6EDF               	movwf	indf2,c
 14670  004ECE  2A18               	incf	USBStdSetCfgHandler@i,f,c
 14671  004ED0  D7E6               	goto	l11539
 14672  004ED2                     u8530:
 14673                           
 14674                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 14675  004ED2  0ED6               	movlw	low _USBAlternateInterface
 14676  004ED4  6E01               	movwf	memset@p1,c
 14677  004ED6  0E01               	movlw	high _USBAlternateInterface
 14678  004ED8  6E02               	movwf	memset@p1+1,c
 14679  004EDA  0E00               	movlw	0
 14680  004EDC  6E04               	movwf	memset@c+1,c
 14681  004EDE  0E00               	movlw	0
 14682  004EE0  6E03               	movwf	memset@c,c
 14683  004EE2  0E00               	movlw	0
 14684  004EE4  6E06               	movwf	memset@n+1,c
 14685  004EE6  0E02               	movlw	2
 14686  004EE8  6E05               	movwf	memset@n,c
 14687  004EEA  ECA9  F03E         	call	_memset	;wreg free
 14688                           
 14689                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 14690  004EEE  9C65               	bcf	3941,6,c	;volatile
 14691                           
 14692                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14693  004EF0  0E08               	movlw	8
 14694  004EF2  0100               	movlb	0	; () banked
 14695  004EF4  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 14696  004EF6  0E0D               	movlw	13
 14697  004EF8  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14698                           
 14699                           ; BSR set to: 0
 14700                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 14701  004EFA  0E00               	movlw	0
 14702  004EFC  6FDB               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 14703  004EFE  0E0D               	movlw	13
 14704  004F00  6FDC               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 14705                           
 14706                           ; BSR set to: 0
 14707                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14708  004F02  C0DB  F0D9         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14709  004F06  C0DC  F0DA         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 14713  004F0A  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 14714                           
 14715                           ; BSR set to: 0
 14716                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 14717  004F0E  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 14718  004F10  A4D8               	btfss	status,2,c
 14719  004F12  D003               	goto	l262
 14720                           
 14721                           ; BSR set to: 0
 14722                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 14723  004F14  0E10               	movlw	16
 14724  004F16  6E5F               	movwf	_USBDeviceState,c
 14725                           
 14726                           ;usb_device.c: 2015: }
 14727  004F18  0012               	return	
 14728  004F1A                     l262:
 14729                           
 14730                           ; BSR set to: 0
 14731                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 14732                           
 14733                           ; BSR set to: 0
 14734  004F1A  0E00               	movlw	0
 14735  004F1C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14736  004F1E  0E01               	movlw	1
 14737  004F20  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14738  004F22  0EFE               	movlw	low _USBActiveConfiguration
 14739  004F24  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14740  004F26  0E00               	movlw	high _USBActiveConfiguration
 14741  004F28  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14742  004F2A  0E00               	movlw	0
 14743  004F2C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14744  004F2E  0E01               	movlw	1
 14745  004F30  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14746  004F32  ECB4  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14747                           
 14748                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 14749  004F36  0E20               	movlw	32
 14750  004F38  6E5F               	movwf	_USBDeviceState,c
 14751  004F3A  0012               	return	
 14752  004F3C                     __end_of_USBStdSetCfgHandler:
 14753                           	opt stack 0
 14754                           tblptru	equ	0xFF8
 14755                           tblptrh	equ	0xFF7
 14756                           tblptrl	equ	0xFF6
 14757                           tablat	equ	0xFF5
 14758                           prodh	equ	0xFF4
 14759                           prodl	equ	0xFF3
 14760                           intcon	equ	0xFF2
 14761                           intcon2	equ	0xFF1
 14762                           intcon3	equ	0xFF0
 14763                           postinc0	equ	0xFEE
 14764                           wreg	equ	0xFE8
 14765                           indf1	equ	0xFE7
 14766                           postdec1	equ	0xFE5
 14767                           plusw1	equ	0xFE3
 14768                           fsr1h	equ	0xFE2
 14769                           fsr1l	equ	0xFE1
 14770                           indf2	equ	0xFDF
 14771                           postinc2	equ	0xFDE
 14772                           postdec2	equ	0xFDD
 14773                           plusw2	equ	0xFDB
 14774                           fsr2h	equ	0xFDA
 14775                           fsr2l	equ	0xFD9
 14776                           status	equ	0xFD8
 14777                           
 14778 ;; *************** function _memset *****************
 14779 ;; Defined at:
 14780 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 14781 ;; Parameters:    Size  Location     Type
 14782 ;;  p1              2    0[COMRAM] PTR void 
 14783 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14784 ;;  c               2    2[COMRAM] int 
 14785 ;;  n               2    4[COMRAM] unsigned int 
 14786 ;; Auto vars:     Size  Location     Type
 14787 ;;  p               2    6[COMRAM] PTR unsigned char 
 14788 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  2    0[COMRAM] PTR void 
 14791 ;; Registers used:
 14792 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14798 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14801 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14802 ;;Total ram usage:        8 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; This function calls:
 14805 ;;		Nothing
 14806 ;; This function is called by:
 14807 ;;		_USBDeviceInit
 14808 ;;		_USBStdSetCfgHandler
 14809 ;; This function uses a non-reentrant model
 14810 ;;
 14811                           
 14812                           	psect	text69
 14813  007D52                     __ptext69:
 14814                           	opt stack 0
 14815  007D52                     _memset:
 14816                           	opt stack 28
 14817                           
 14818                           ;incstack = 0
 14819  007D52  C001  F007         	movff	memset@p1,memset@p
 14820  007D56  C002  F008         	movff	memset@p1+1,memset@p+1
 14821  007D5A  D008               	goto	l3525
 14822  007D5C                     l10625:
 14823  007D5C  C007  FFD9         	movff	memset@p,fsr2l
 14824  007D60  C008  FFDA         	movff	memset@p+1,fsr2h
 14825  007D64  C003  FFDF         	movff	memset@c,indf2
 14826  007D68  4A07               	infsnz	memset@p,f,c
 14827  007D6A  2A08               	incf	memset@p+1,f,c
 14828  007D6C                     l3525:
 14829  007D6C  0605               	decf	memset@n,f,c
 14830  007D6E  A0D8               	btfss	status,0,c
 14831  007D70  0606               	decf	memset@n+1,f,c
 14832  007D72  2805               	incf	memset@n,w,c
 14833  007D74  E1F3               	bnz	l10625
 14834  007D76  2806               	incf	memset@n+1,w,c
 14835  007D78  B4D8               	btfsc	status,2,c
 14836  007D7A  0012               	return	
 14837  007D7C  D7EF               	goto	l3526
 14838  007D7E                     __end_of_memset:
 14839                           	opt stack 0
 14840                           tblptru	equ	0xFF8
 14841                           tblptrh	equ	0xFF7
 14842                           tblptrl	equ	0xFF6
 14843                           tablat	equ	0xFF5
 14844                           prodh	equ	0xFF4
 14845                           prodl	equ	0xFF3
 14846                           intcon	equ	0xFF2
 14847                           intcon2	equ	0xFF1
 14848                           intcon3	equ	0xFF0
 14849                           postinc0	equ	0xFEE
 14850                           wreg	equ	0xFE8
 14851                           indf1	equ	0xFE7
 14852                           postdec1	equ	0xFE5
 14853                           plusw1	equ	0xFE3
 14854                           fsr1h	equ	0xFE2
 14855                           fsr1l	equ	0xFE1
 14856                           indf2	equ	0xFDF
 14857                           postinc2	equ	0xFDE
 14858                           postdec2	equ	0xFDD
 14859                           plusw2	equ	0xFDB
 14860                           fsr2h	equ	0xFDA
 14861                           fsr2l	equ	0xFD9
 14862                           status	equ	0xFD8
 14863                           
 14864 ;; *************** function _USBStdGetStatusHandler *****************
 14865 ;; Defined at:
 14866 ;;		line 2131 in file "usb_device.c"
 14867 ;; Parameters:    Size  Location     Type
 14868 ;;		None
 14869 ;; Auto vars:     Size  Location     Type
 14870 ;;  p               2    1[COMRAM] PTR struct __BDT
 14871 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14872 ;; Return value:  Size  Location     Type
 14873 ;;                  1    wreg      void 
 14874 ;; Registers used:
 14875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14876 ;; Tracked objects:
 14877 ;;		On entry : 0/0
 14878 ;;		On exit  : 0/0
 14879 ;;		Unchanged: 0/0
 14880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14884 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14885 ;;Total ram usage:        3 bytes
 14886 ;; Hardware stack levels used:    1
 14887 ;; This function calls:
 14888 ;;		Nothing
 14889 ;; This function is called by:
 14890 ;;		_USBCheckStdRequest
 14891 ;; This function uses a non-reentrant model
 14892 ;;
 14893                           
 14894                           	psect	text70
 14895  005A04                     __ptext70:
 14896                           	opt stack 0
 14897  005A04                     _USBStdGetStatusHandler:
 14898                           	opt stack 26
 14899                           
 14900                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 14901                           
 14902                           ;incstack = 0
 14903  005A04  0E00               	movlw	0
 14904  005A06  010D               	movlb	13	; () banked
 14905  005A08  6F38               	movwf	56,b	;volatile
 14906                           
 14907                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 14908  005A0A  0E00               	movlw	0
 14909  005A0C  6F39               	movwf	57,b	;volatile
 14910                           
 14911                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 14912  005A0E  D039               	goto	l281
 14913  005A10                     l282:
 14914                           
 14915                           ; BSR set to: 13
 14916                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 14917  005A10  0100               	movlb	0	; () banked
 14918  005A12  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14919                           
 14920                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 14921                           
 14922                           ; BSR set to: 13
 14923                           
 14924                           ; BSR set to: 0
 14925                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 14926                           
 14927                           ;usb_device.c: 2144: if(0 == 1)
 14928  005A14  0100               	movlb	0	; () banked
 14929  005A16  05F4               	decf	_RemoteWakeup& (0+255),w,b
 14930  005A18  A4D8               	btfss	status,2,c
 14931  005A1A  D03E               	goto	l285
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 14935  005A1C  010D               	movlb	13	; () banked
 14936  005A1E  8338               	bsf	56,1,b	;volatile
 14937                           
 14938                           ; BSR set to: 13
 14939                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 14940  005A20  D03B               	goto	l285
 14941  005A22                     l286:
 14942                           
 14943                           ; BSR set to: 13
 14944                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 14945  005A22  0100               	movlb	0	; () banked
 14946  005A24  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14947                           
 14948                           ;usb_device.c: 2156: break;
 14949  005A26  D038               	goto	l285
 14950  005A28                     l287:
 14951                           
 14952                           ; BSR set to: 13
 14953                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 14954  005A28  0100               	movlb	0	; () banked
 14955  005A2A  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14956                           
 14957                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 14958  005A2C  010D               	movlb	13	; () banked
 14959  005A2E  BF34               	btfsc	52,7,b	;volatile
 14960  005A30  D00A               	goto	l288
 14961                           
 14962                           ; BSR set to: 13
 14963                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14964  005A32  5134               	movf	52,w,b	;volatile
 14965  005A34  0B0F               	andlw	15
 14966  005A36  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14967  005A38  5001               	movf	??_USBStdGetStatusHandler,w,c
 14968  005A3A  0D02               	mullw	2
 14969  005A3C  0E40               	movlw	low _pBDTEntryOut
 14970  005A3E  24F3               	addwf	prodl,w,c
 14971  005A40  6ED9               	movwf	fsr2l,c
 14972  005A42  0E01               	movlw	high _pBDTEntryOut
 14973  005A44  D009               	goto	L6
 14974  005A46                     l288:
 14975                           
 14976                           ; BSR set to: 13
 14977                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14978                           
 14979                           ; BSR set to: 13
 14980  005A46  5134               	movf	52,w,b	;volatile
 14981  005A48  0B0F               	andlw	15
 14982  005A4A  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14983  005A4C  5001               	movf	??_USBStdGetStatusHandler,w,c
 14984  005A4E  0D02               	mullw	2
 14985  005A50  0EC5               	movlw	low _pBDTEntryIn
 14986  005A52  24F3               	addwf	prodl,w,c
 14987  005A54  6ED9               	movwf	fsr2l,c
 14988  005A56  0E00               	movlw	high _pBDTEntryIn
 14989  005A58                     L6:
 14990  005A58  20F4               	addwfc	prodh,w,c
 14991  005A5A  6EDA               	movwf	fsr2h,c
 14992  005A5C  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 14993  005A60  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 14994                           
 14995                           ; BSR set to: 13
 14996                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 14997                           
 14998                           ; BSR set to: 13
 14999  005A64  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15000  005A68  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15001  005A6C  AEDF               	btfss	indf2,7,c
 15002  005A6E  D014               	goto	l285
 15003                           
 15004                           ; BSR set to: 13
 15005  005A70  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15006  005A74  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15007  005A78  A4DF               	btfss	indf2,2,c
 15008  005A7A  D00E               	goto	l285
 15009                           
 15010                           ; BSR set to: 13
 15011                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 15012  005A7C  0E01               	movlw	1
 15013  005A7E  6F38               	movwf	56,b	;volatile
 15014                           
 15015                           ; BSR set to: 13
 15016                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 15017                           
 15018                           ; BSR set to: 13
 15019                           ;usb_device.c: 2176: break;
 15020  005A80  D00B               	goto	l285
 15021  005A82                     l281:
 15022                           
 15023                           ; BSR set to: 13
 15024                           
 15025                           ; BSR set to: 13
 15026  005A82  5130               	movf	48,w,b	;volatile
 15027  005A84  0B1F               	andlw	31
 15028                           
 15029                           ; Switch size 1, requested type "space"
 15030                           ; Number of cases is 3, Range of values is 0 to 2
 15031                           ; switch strategies available:
 15032                           ; Name         Instructions Cycles
 15033                           ; simple_byte           10     6 (average)
 15034                           ;	Chosen strategy is simple_byte
 15035  005A86  0A00               	xorlw	0	; case 0
 15036  005A88  B4D8               	btfsc	status,2,c
 15037  005A8A  D7C2               	goto	l282
 15038  005A8C  0A01               	xorlw	1	; case 1
 15039  005A8E  B4D8               	btfsc	status,2,c
 15040  005A90  D7C8               	goto	l286
 15041  005A92  0A03               	xorlw	3	; case 2
 15042  005A94  B4D8               	btfsc	status,2,c
 15043  005A96  D7C8               	goto	l287
 15044  005A98                     l285:
 15045                           
 15046                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 15047  005A98  0100               	movlb	0	; () banked
 15048  005A9A  AFC2               	btfss	(_inPipes+3)& (0+255),7,b
 15049  005A9C  0012               	return	
 15050                           
 15051                           ; BSR set to: 0
 15052                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 15053  005A9E  0E38               	movlw	56
 15054  005AA0  6FBF               	movwf	_inPipes& (0+255),b
 15055  005AA2  0E0D               	movlw	13
 15056  005AA4  6FC0               	movwf	(_inPipes+1)& (0+255),b
 15057                           
 15058                           ; BSR set to: 0
 15059                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15060  005AA6  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 15061                           
 15062                           ; BSR set to: 0
 15063                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 15064  005AA8  0E02               	movlw	2
 15065  005AAA  6FC3               	movwf	(_inPipes+4)& (0+255),b
 15066  005AAC  0012               	return	
 15067  005AAE                     __end_of_USBStdGetStatusHandler:
 15068                           	opt stack 0
 15069                           tblptru	equ	0xFF8
 15070                           tblptrh	equ	0xFF7
 15071                           tblptrl	equ	0xFF6
 15072                           tablat	equ	0xFF5
 15073                           prodh	equ	0xFF4
 15074                           prodl	equ	0xFF3
 15075                           intcon	equ	0xFF2
 15076                           intcon2	equ	0xFF1
 15077                           intcon3	equ	0xFF0
 15078                           postinc0	equ	0xFEE
 15079                           wreg	equ	0xFE8
 15080                           indf1	equ	0xFE7
 15081                           postdec1	equ	0xFE5
 15082                           plusw1	equ	0xFE3
 15083                           fsr1h	equ	0xFE2
 15084                           fsr1l	equ	0xFE1
 15085                           indf2	equ	0xFDF
 15086                           postinc2	equ	0xFDE
 15087                           postdec2	equ	0xFDD
 15088                           plusw2	equ	0xFDB
 15089                           fsr2h	equ	0xFDA
 15090                           fsr2l	equ	0xFD9
 15091                           status	equ	0xFD8
 15092                           
 15093 ;; *************** function _USBStdGetDscHandler *****************
 15094 ;; Defined at:
 15095 ;;		line 2045 in file "usb_device.c"
 15096 ;; Parameters:    Size  Location     Type
 15097 ;;		None
 15098 ;; Auto vars:     Size  Location     Type
 15099 ;;		None
 15100 ;; Return value:  Size  Location     Type
 15101 ;;                  1    wreg      void 
 15102 ;; Registers used:
 15103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15104 ;; Tracked objects:
 15105 ;;		On entry : 0/0
 15106 ;;		On exit  : 0/0
 15107 ;;		Unchanged: 0/0
 15108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15111 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15113 ;;Total ram usage:        2 bytes
 15114 ;; Hardware stack levels used:    1
 15115 ;; This function calls:
 15116 ;;		Nothing
 15117 ;; This function is called by:
 15118 ;;		_USBCheckStdRequest
 15119 ;; This function uses a non-reentrant model
 15120 ;;
 15121                           
 15122                           	psect	text71
 15123  003D28                     __ptext71:
 15124                           	opt stack 0
 15125  003D28                     _USBStdGetDscHandler:
 15126                           	opt stack 26
 15127                           
 15128                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 15129                           
 15130                           ; BSR set to: 0
 15131                           ;incstack = 0
 15132  003D28  0E80               	movlw	128
 15133  003D2A  010D               	movlb	13	; () banked
 15134  003D2C  1930               	xorwf	48,w,b	;volatile
 15135  003D2E  A4D8               	btfss	status,2,c
 15136  003D30  0012               	return	
 15137                           
 15138                           ; BSR set to: 13
 15139                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 15140  003D32  0EC0               	movlw	192
 15141  003D34  0100               	movlb	0	; () banked
 15142  003D36  6FC2               	movwf	(_inPipes+3)& (0+255),b
 15143                           
 15144                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 15145  003D38  D088               	goto	l268
 15146  003D3A                     
 15147                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 15148                           
 15149                           ; BSR set to: 0
 15150  003D3A  0EA5               	movlw	low _device_dsc
 15151  003D3C  0100               	movlb	0	; () banked
 15152  003D3E  6FBF               	movwf	_inPipes& (0+255),b
 15153  003D40  0E8F               	movlw	high _device_dsc
 15154  003D42  6FC0               	movwf	(_inPipes+1)& (0+255),b
 15155                           
 15156                           ; BSR set to: 0
 15157                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 15158  003D44  0E00               	movlw	0
 15159  003D46  6FC4               	movwf	(_inPipes+5)& (0+255),b
 15160  003D48  0E12               	movlw	18
 15161  003D4A  6FC3               	movwf	(_inPipes+4)& (0+255),b
 15162                           
 15163                           ;usb_device.c: 2060: break;
 15164  003D4C  0012               	return	
 15165  003D4E                     
 15166                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 15167                           
 15168                           ; BSR set to: 0
 15169  003D4E  010D               	movlb	13	; () banked
 15170  003D50  5132               	movf	50,w,b	;volatile
 15171  003D52  A4D8               	btfss	status,2,c
 15172  003D54  D043               	goto	l272
 15173                           
 15174                           ; BSR set to: 13
 15175                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 15176  003D56  5132               	movf	50,w,b	;volatile
 15177  003D58  0D02               	mullw	2
 15178  003D5A  0EA5               	movlw	low _USB_CD_Ptr
 15179  003D5C  24F3               	addwf	prodl,w,c
 15180  003D5E  6EF6               	movwf	tblptrl,c
 15181  003D60  0E8E               	movlw	high _USB_CD_Ptr
 15182  003D62  20F4               	addwfc	prodh,w,c
 15183  003D64  6EF7               	movwf	tblptrh,c
 15184  003D66                     	if	1	;There are 3 active tblptr bytes
 15185  003D66  6AF8               	clrf	tblptru,c
 15186  003D68  0E00               	movlw	low (__mediumconst shr (0+16))
 15187  003D6A  22F8               	addwfc	tblptru,f,c
 15188  003D6C                     	endif
 15189  003D6C  0009               	tblrd		*+
 15190  003D6E  CFF5 F0BF          	movff	tablat,_inPipes
 15191  003D72  000A               	tblrd		*-
 15192  003D74  CFF5 F0C0          	movff	tablat,_inPipes+1
 15193                           
 15194                           ; BSR set to: 13
 15195                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 15196  003D78  0E02               	movlw	2
 15197  003D7A  0100               	movlb	0	; () banked
 15198  003D7C  25BF               	addwf	_inPipes& (0+255),w,b
 15199  003D7E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15200  003D80  0E00               	movlw	0
 15201  003D82  21C0               	addwfc	(_inPipes+1)& (0+255),w,b
 15202  003D84  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15203  003D86  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15204  003D8A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15205  003D8E  6AF8               	clrf	tblptru,c
 15206  003D90  0E0E               	movlw	(high __ramtop+-1)
 15207  003D92  64F7               	cpfsgt	tblptrh,c
 15208  003D94  D003               	bra	u8577
 15209  003D96  0008               	tblrd		*
 15210  003D98  50F5               	movf	tablat,w,c
 15211  003D9A  D005               	bra	u8570
 15212  003D9C                     u8577:
 15213  003D9C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15214  003DA0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15215  003DA4  50EF               	movf	indf0,w,c
 15216  003DA6                     u8570:
 15217  003DA6  0100               	movlb	0	; () banked
 15218  003DA8  6FC3               	movwf	(_inPipes+4)& (0+255),b
 15219                           
 15220                           ; BSR set to: 0
 15221                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 15222  003DAA  0E03               	movlw	3
 15223  003DAC  25BF               	addwf	_inPipes& (0+255),w,b
 15224  003DAE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15225  003DB0  0E00               	movlw	0
 15226  003DB2  21C0               	addwfc	(_inPipes+1)& (0+255),w,b
 15227  003DB4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15228  003DB6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15229  003DBA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15230  003DBE  6AF8               	clrf	tblptru,c
 15231  003DC0  0E0E               	movlw	(high __ramtop+-1)
 15232  003DC2  64F7               	cpfsgt	tblptrh,c
 15233  003DC4  D003               	bra	u8587
 15234  003DC6  0008               	tblrd		*
 15235  003DC8  50F5               	movf	tablat,w,c
 15236  003DCA  D005               	bra	u8580
 15237  003DCC                     u8587:
 15238  003DCC  CFF6 FFE9          	movff	tblptrl,fsr0l
 15239  003DD0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15240  003DD4  50EF               	movf	indf0,w,c
 15241  003DD6                     u8580:
 15242  003DD6  0100               	movlb	0	; () banked
 15243  003DD8  6FC4               	movwf	(_inPipes+5)& (0+255),b
 15244                           
 15245                           ;usb_device.c: 2078: }
 15246  003DDA  0012               	return	
 15247  003DDC                     l272:
 15248                           
 15249                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 15250                           
 15251                           ; BSR set to: 0
 15252  003DDC  0E00               	movlw	0
 15253  003DDE  0100               	movlb	0	; () banked
 15254  003DE0  6FC2               	movwf	(_inPipes+3)& (0+255),b
 15255                           
 15256                           ; BSR set to: 0
 15257                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 15258  003DE2  0012               	return	
 15259  003DE4                     
 15260                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 15261                           
 15262                           ; BSR set to: 0
 15263  003DE4  0E04               	movlw	4
 15264  003DE6  010D               	movlb	13	; () banked
 15265  003DE8  6132               	cpfslt	50,b	;volatile
 15266  003DEA  D027               	goto	l275
 15267                           
 15268                           ; BSR set to: 13
 15269                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 15270  003DEC  5132               	movf	50,w,b	;volatile
 15271  003DEE  0D02               	mullw	2
 15272  003DF0  0E7B               	movlw	low _USB_SD_Ptr
 15273  003DF2  24F3               	addwf	prodl,w,c
 15274  003DF4  6EF6               	movwf	tblptrl,c
 15275  003DF6  0E8E               	movlw	high _USB_SD_Ptr
 15276  003DF8  20F4               	addwfc	prodh,w,c
 15277  003DFA  6EF7               	movwf	tblptrh,c
 15278  003DFC                     	if	1	;There are 3 active tblptr bytes
 15279  003DFC  6AF8               	clrf	tblptru,c
 15280  003DFE  0E00               	movlw	low (__mediumconst shr (0+16))
 15281  003E00  22F8               	addwfc	tblptru,f,c
 15282  003E02                     	endif
 15283  003E02  0009               	tblrd		*+
 15284  003E04  CFF5 F0BF          	movff	tablat,_inPipes
 15285  003E08  000A               	tblrd		*-
 15286  003E0A  CFF5 F0C0          	movff	tablat,_inPipes+1
 15287                           
 15288                           ; BSR set to: 13
 15289                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 15290  003E0E  C0BF  FFF6         	movff	_inPipes,tblptrl
 15291  003E12  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 15292  003E16  6AF8               	clrf	tblptru,c
 15293  003E18  0E0E               	movlw	(high __ramtop+-1)
 15294  003E1A  64F7               	cpfsgt	tblptrh,c
 15295  003E1C  D003               	bra	u8607
 15296  003E1E  0008               	tblrd		*
 15297  003E20  50F5               	movf	tablat,w,c
 15298  003E22  D005               	bra	u8600
 15299  003E24                     u8607:
 15300  003E24  CFF6 FFE9          	movff	tblptrl,fsr0l
 15301  003E28  CFF7 FFEA          	movff	tblptrh,fsr0h
 15302  003E2C  50EF               	movf	indf0,w,c
 15303  003E2E                     u8600:
 15304  003E2E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15305  003E30  5001               	movf	??_USBStdGetDscHandler,w,c
 15306  003E32  0100               	movlb	0	; () banked
 15307  003E34  6FC3               	movwf	(_inPipes+4)& (0+255),b
 15308  003E36  6BC4               	clrf	(_inPipes+5)& (0+255),b
 15309                           
 15310                           ;usb_device.c: 2094: }
 15311  003E38  0012               	return	
 15312  003E3A                     l275:
 15313                           
 15314                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 15315                           
 15316                           ; BSR set to: 0
 15317  003E3A  0E00               	movlw	0
 15318  003E3C  0100               	movlb	0	; () banked
 15319  003E3E  6FC2               	movwf	(_inPipes+3)& (0+255),b
 15320                           
 15321                           ; BSR set to: 0
 15322                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 15323  003E40  0012               	return	
 15324  003E42                     
 15325                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 15326                           
 15327                           ; BSR set to: 0
 15328  003E42  0E00               	movlw	0
 15329  003E44  0100               	movlb	0	; () banked
 15330  003E46  6FC2               	movwf	(_inPipes+3)& (0+255),b
 15331                           
 15332                           ; BSR set to: 0
 15333                           ;usb_device.c: 2112: }
 15334                           
 15335                           ;usb_device.c: 2111: break;
 15336  003E48  0012               	return	
 15337  003E4A                     l268:
 15338                           
 15339                           ; BSR set to: 0
 15340                           
 15341                           ; BSR set to: 0
 15342  003E4A  010D               	movlb	13	; () banked
 15343  003E4C  5133               	movf	51,w,b	;volatile
 15344                           
 15345                           ; Switch size 1, requested type "space"
 15346                           ; Number of cases is 3, Range of values is 1 to 3
 15347                           ; switch strategies available:
 15348                           ; Name         Instructions Cycles
 15349                           ; simple_byte           10     6 (average)
 15350                           ;	Chosen strategy is simple_byte
 15351  003E4E  0A01               	xorlw	1	; case 1
 15352  003E50  B4D8               	btfsc	status,2,c
 15353  003E52  D773               	goto	l269
 15354  003E54  0A03               	xorlw	3	; case 2
 15355  003E56  B4D8               	btfsc	status,2,c
 15356  003E58  D77A               	goto	l271
 15357  003E5A  0A01               	xorlw	1	; case 3
 15358  003E5C  B4D8               	btfsc	status,2,c
 15359  003E5E  D7C2               	goto	l274
 15360  003E60  D7F0               	goto	l277
 15361  003E62                     __end_of_USBStdGetDscHandler:
 15362                           	opt stack 0
 15363                           tblptru	equ	0xFF8
 15364                           tblptrh	equ	0xFF7
 15365                           tblptrl	equ	0xFF6
 15366                           tablat	equ	0xFF5
 15367                           prodh	equ	0xFF4
 15368                           prodl	equ	0xFF3
 15369                           intcon	equ	0xFF2
 15370                           intcon2	equ	0xFF1
 15371                           intcon3	equ	0xFF0
 15372                           indf0	equ	0xFEF
 15373                           postinc0	equ	0xFEE
 15374                           fsr0h	equ	0xFEA
 15375                           fsr0l	equ	0xFE9
 15376                           wreg	equ	0xFE8
 15377                           indf1	equ	0xFE7
 15378                           postdec1	equ	0xFE5
 15379                           plusw1	equ	0xFE3
 15380                           fsr1h	equ	0xFE2
 15381                           fsr1l	equ	0xFE1
 15382                           indf2	equ	0xFDF
 15383                           postinc2	equ	0xFDE
 15384                           postdec2	equ	0xFDD
 15385                           plusw2	equ	0xFDB
 15386                           fsr2h	equ	0xFDA
 15387                           fsr2l	equ	0xFD9
 15388                           status	equ	0xFD8
 15389                           
 15390 ;; *************** function _USBStdFeatureReqHandler *****************
 15391 ;; Defined at:
 15392 ;;		line 2756 in file "usb_device.c"
 15393 ;; Parameters:    Size  Location     Type
 15394 ;;		None
 15395 ;; Auto vars:     Size  Location     Type
 15396 ;;  p               2   27[COMRAM] PTR struct __BDT
 15397 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 15398 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 15399 ;;		 -> UEP0(1), 
 15400 ;;  current_ep_d    1   26[COMRAM] struct .
 15401 ;; Return value:  Size  Location     Type
 15402 ;;                  1    wreg      void 
 15403 ;; Registers used:
 15404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15405 ;; Tracked objects:
 15406 ;;		On entry : 0/0
 15407 ;;		On exit  : 0/0
 15408 ;;		Unchanged: 0/0
 15409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15411 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15412 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15413 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15414 ;;Total ram usage:        6 bytes
 15415 ;; Hardware stack levels used:    1
 15416 ;; Hardware stack levels required when called:    4
 15417 ;; This function calls:
 15418 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15419 ;; This function is called by:
 15420 ;;		_USBCheckStdRequest
 15421 ;; This function uses a non-reentrant model
 15422 ;;
 15423                           
 15424                           	psect	text72
 15425  001848                     __ptext72:
 15426                           	opt stack 0
 15427  001848                     _USBStdFeatureReqHandler:
 15428                           	opt stack 22
 15429                           
 15430                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 15431                           
 15432                           ;incstack = 0
 15433  001848  010D               	movlb	13	; () banked
 15434  00184A  0532               	decf	50,w,b	;volatile
 15435  00184C  A4D8               	btfss	status,2,c
 15436  00184E  D011               	goto	l361
 15437                           
 15438                           ; BSR set to: 13
 15439  001850  5130               	movf	48,w,b	;volatile
 15440  001852  0B1F               	andlw	31
 15441  001854  0900               	iorlw	0
 15442  001856  A4D8               	btfss	status,2,c
 15443  001858  D00C               	goto	l361
 15444                           
 15445                           ; BSR set to: 13
 15446                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 15447  00185A  0100               	movlb	0	; () banked
 15448  00185C  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 15449                           
 15450                           ; BSR set to: 0
 15451                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 15452  00185E  0E03               	movlw	3
 15453  001860  010D               	movlb	13	; () banked
 15454  001862  1931               	xorwf	49,w,b	;volatile
 15455  001864  A4D8               	btfss	status,2,c
 15456  001866  D002               	goto	l360
 15457                           
 15458                           ; BSR set to: 13
 15459                           ;usb_device.c: 2806: RemoteWakeup = 1;
 15460  001868  0E01               	movlw	1
 15461  00186A  D001               	goto	L7
 15462  00186C                     l360:
 15463                           
 15464                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 15465                           
 15466                           ; BSR set to: 0
 15467  00186C  0E00               	movlw	0
 15468  00186E                     L7:
 15469  00186E  0100               	movlb	0	; () banked
 15470  001870  6FF4               	movwf	_RemoteWakeup& (0+255),b
 15471  001872                     l361:
 15472                           
 15473                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 15474                           
 15475                           ; BSR set to: 0
 15476  001872  010D               	movlb	13	; () banked
 15477  001874  5132               	movf	50,w,b	;volatile
 15478  001876  A4D8               	btfss	status,2,c
 15479  001878  0012               	return	
 15480                           
 15481                           ; BSR set to: 13
 15482  00187A  5130               	movf	48,w,b	;volatile
 15483  00187C  0B1F               	andlw	31
 15484  00187E  0A02               	xorlw	2
 15485  001880  A4D8               	btfss	status,2,c
 15486  001882  0012               	return	
 15487                           
 15488                           ; BSR set to: 13
 15489  001884  5134               	movf	52,w,b	;volatile
 15490  001886  0B0F               	andlw	15
 15491  001888  0900               	iorlw	0
 15492  00188A  B4D8               	btfsc	status,2,c
 15493  00188C  0012               	return	
 15494                           
 15495                           ; BSR set to: 13
 15496  00188E  5134               	movf	52,w,b	;volatile
 15497  001890  0B0F               	andlw	15
 15498  001892  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15499  001894  0E03               	movlw	3
 15500  001896  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 15501  001898  0012               	return	
 15502                           
 15503                           ; BSR set to: 13
 15504  00189A  0E20               	movlw	32
 15505  00189C  185F               	xorwf	_USBDeviceState,w,c
 15506  00189E  A4D8               	btfss	status,2,c
 15507  0018A0  0012               	return	
 15508                           
 15509                           ; BSR set to: 13
 15510                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 15511  0018A2  0100               	movlb	0	; () banked
 15512  0018A4  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 15513                           
 15514                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 15515  0018A6  010D               	movlb	13	; () banked
 15516  0018A8  BF34               	btfsc	52,7,b	;volatile
 15517  0018AA  D019               	goto	l363
 15518                           
 15519                           ; BSR set to: 13
 15520                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15521  0018AC  5134               	movf	52,w,b	;volatile
 15522  0018AE  0B0F               	andlw	15
 15523  0018B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15524  0018B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15525  0018B4  0D02               	mullw	2
 15526  0018B6  0E40               	movlw	low _pBDTEntryOut
 15527  0018B8  24F3               	addwf	prodl,w,c
 15528  0018BA  6ED9               	movwf	fsr2l,c
 15529  0018BC  0E01               	movlw	high _pBDTEntryOut
 15530  0018BE  20F4               	addwfc	prodh,w,c
 15531  0018C0  6EDA               	movwf	fsr2h,c
 15532  0018C2  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15533  0018C6  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15534                           
 15535                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 15536  0018CA  5134               	movf	52,w,b	;volatile
 15537  0018CC  0B0F               	andlw	15
 15538  0018CE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15539  0018D0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15540  0018D2  0D01               	mullw	1
 15541  0018D4  0E68               	movlw	low _ep_data_out
 15542  0018D6  24F3               	addwf	prodl,w,c
 15543  0018D8  6ED9               	movwf	fsr2l,c
 15544  0018DA  0E01               	movlw	high _ep_data_out
 15545  0018DC  D018               	goto	L8
 15546  0018DE                     l363:
 15547                           
 15548                           ; BSR set to: 13
 15549                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 15550                           
 15551                           ; BSR set to: 13
 15552  0018DE  5134               	movf	52,w,b	;volatile
 15553  0018E0  0B0F               	andlw	15
 15554  0018E2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15555  0018E4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15556  0018E6  0D02               	mullw	2
 15557  0018E8  0EC5               	movlw	low _pBDTEntryIn
 15558  0018EA  24F3               	addwf	prodl,w,c
 15559  0018EC  6ED9               	movwf	fsr2l,c
 15560  0018EE  0E00               	movlw	high _pBDTEntryIn
 15561  0018F0  20F4               	addwfc	prodh,w,c
 15562  0018F2  6EDA               	movwf	fsr2h,c
 15563  0018F4  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15564  0018F8  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15565                           
 15566                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 15567  0018FC  5134               	movf	52,w,b	;volatile
 15568  0018FE  0B0F               	andlw	15
 15569  001900  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15570  001902  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15571  001904  0D01               	mullw	1
 15572  001906  0E6B               	movlw	low _ep_data_in
 15573  001908  24F3               	addwf	prodl,w,c
 15574  00190A  6ED9               	movwf	fsr2l,c
 15575  00190C  0E01               	movlw	high _ep_data_in
 15576  00190E                     L8:
 15577  00190E  20F4               	addwfc	prodh,w,c
 15578  001910  6EDA               	movwf	fsr2h,c
 15579  001912  50DF               	movf	indf2,w,c
 15580  001914  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 15581                           
 15582                           ; BSR set to: 13
 15583                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 15584                           
 15585                           ; BSR set to: 13
 15586  001916  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 15587  001918  D006               	goto	l365
 15588                           
 15589                           ; BSR set to: 13
 15590                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 15591  00191A  0EFB               	movlw	251
 15592  00191C  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 15593  00191E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15594  001920  0EFF               	movlw	255
 15595  001922  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 15596  001924  D004               	goto	L9
 15597  001926                     l365:
 15598                           
 15599                           ; BSR set to: 13
 15600                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 15601                           
 15602                           ; BSR set to: 13
 15603  001926  0E04               	movlw	4
 15604  001928  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 15605  00192A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15606  00192C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15607  00192E                     L9:
 15608  00192E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15609                           
 15610                           ; BSR set to: 13
 15611                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 15612                           
 15613                           ; BSR set to: 13
 15614  001930  BF34               	btfsc	52,7,b	;volatile
 15615  001932  D00A               	goto	l367
 15616                           
 15617                           ; BSR set to: 13
 15618                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 15619  001934  5134               	movf	52,w,b	;volatile
 15620  001936  0B0F               	andlw	15
 15621  001938  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15622  00193A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15623  00193C  0D02               	mullw	2
 15624  00193E  0E40               	movlw	low _pBDTEntryOut
 15625  001940  24F3               	addwf	prodl,w,c
 15626  001942  6ED9               	movwf	fsr2l,c
 15627  001944  0E01               	movlw	high _pBDTEntryOut
 15628  001946  D009               	goto	L10
 15629  001948                     l367:
 15630                           
 15631                           ; BSR set to: 13
 15632                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 15633                           
 15634                           ; BSR set to: 13
 15635  001948  5134               	movf	52,w,b	;volatile
 15636  00194A  0B0F               	andlw	15
 15637  00194C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15638  00194E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15639  001950  0D02               	mullw	2
 15640  001952  0EC5               	movlw	low _pBDTEntryIn
 15641  001954  24F3               	addwf	prodl,w,c
 15642  001956  6ED9               	movwf	fsr2l,c
 15643  001958  0E00               	movlw	high _pBDTEntryIn
 15644  00195A                     L10:
 15645  00195A  20F4               	addwfc	prodh,w,c
 15646  00195C  6EDA               	movwf	fsr2h,c
 15647  00195E  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 15648  001962  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 15649                           
 15650                           ; BSR set to: 13
 15651                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 15652                           
 15653                           ; BSR set to: 13
 15654  001966  0E03               	movlw	3
 15655  001968  1931               	xorwf	49,w,b	;volatile
 15656  00196A  A4D8               	btfss	status,2,c
 15657  00196C  D02D               	goto	l369
 15658                           
 15659                           ; BSR set to: 13
 15660                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 15661  00196E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15662  001972  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15663  001976  AEDF               	btfss	indf2,7,c
 15664  001978  D01A               	goto	l372
 15665                           
 15666                           ; BSR set to: 13
 15667                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 15668  00197A  BF34               	btfsc	52,7,b	;volatile
 15669  00197C  D00A               	goto	l371
 15670                           
 15671                           ; BSR set to: 13
 15672                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 15673  00197E  5134               	movf	52,w,b	;volatile
 15674  001980  0B0F               	andlw	15
 15675  001982  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15676  001984  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15677  001986  0D01               	mullw	1
 15678  001988  0E68               	movlw	low _ep_data_out
 15679  00198A  24F3               	addwf	prodl,w,c
 15680  00198C  6ED9               	movwf	fsr2l,c
 15681  00198E  0E01               	movlw	high _ep_data_out
 15682  001990  D00A               	goto	L11
 15683  001992                     l371:
 15684                           
 15685                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 15686                           
 15687                           ; BSR set to: 1
 15688  001992  010D               	movlb	13	; () banked
 15689  001994  5134               	movf	52,w,b	;volatile
 15690  001996  0B0F               	andlw	15
 15691  001998  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15692  00199A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15693  00199C  0D01               	mullw	1
 15694  00199E  0E6B               	movlw	low _ep_data_in
 15695  0019A0  24F3               	addwf	prodl,w,c
 15696  0019A2  6ED9               	movwf	fsr2l,c
 15697  0019A4  0E01               	movlw	high _ep_data_in
 15698  0019A6                     L11:
 15699  0019A6  20F4               	addwfc	prodh,w,c
 15700  0019A8  6EDA               	movwf	fsr2h,c
 15701  0019AA  0101               	movlb	1	; () banked
 15702  0019AC  82DF               	bsf	indf2,1,c
 15703  0019AE                     l372:
 15704                           
 15705                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 15706                           
 15707                           ; BSR set to: 1
 15708                           
 15709                           ; BSR set to: 1
 15710  0019AE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15711  0019B2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15712  0019B6  0E00               	movlw	0
 15713  0019B8  84DB               	bsf	plusw2,2,c
 15714                           
 15715                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 15716  0019BA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15717  0019BE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15718  0019C2  0E00               	movlw	0
 15719  0019C4  8EDB               	bsf	plusw2,7,c
 15720                           
 15721                           ;usb_device.c: 2878: }
 15722  0019C6  0012               	return	
 15723  0019C8                     l369:
 15724                           
 15725                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 15726  0019C8  0E04               	movlw	4
 15727  0019CA  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 15728  0019CC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15729  0019CE  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15730  0019D0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15731                           
 15732                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 15733  0019D2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15734  0019D6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15735  0019DA  AEDF               	btfss	indf2,7,c
 15736  0019DC  D01B               	goto	l374
 15737                           
 15738                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 15739  0019DE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15740  0019E2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15741  0019E6  0E7F               	movlw	127
 15742  0019E8  16DF               	andwf	indf2,f,c
 15743                           
 15744                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 15745  0019EA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15746  0019EE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15747  0019F2  0E00               	movlw	0
 15748  0019F4  8CDB               	bsf	plusw2,6,c
 15749                           
 15750                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15751  0019F6  0E00               	movlw	0
 15752  0019F8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15753  0019FA  0E05               	movlw	5
 15754  0019FC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15755  0019FE  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15756  001A02  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15757  001A06  0E00               	movlw	0
 15758  001A08  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15759  001A0A  0E02               	movlw	2
 15760  001A0C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15761  001A0E  ECB4  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15762                           
 15763                           ;usb_device.c: 2893: }
 15764  001A12  D006               	goto	l375
 15765  001A14                     l374:
 15766                           
 15767                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 15768  001A14  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15769  001A18  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15770  001A1C  0E00               	movlw	0
 15771  001A1E  8CDB               	bsf	plusw2,6,c
 15772  001A20                     l375:
 15773                           
 15774                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 15775  001A20  0E04               	movlw	4
 15776  001A22  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 15777  001A24  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15778  001A26  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15779  001A28  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15780                           
 15781                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 15782  001A2A  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 15783  001A2C  D006               	goto	u8820
 15784  001A2E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15785  001A32  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15786  001A36  AEDF               	btfss	indf2,7,c
 15787  001A38  D030               	goto	l376
 15788  001A3A                     u8820:
 15789                           
 15790                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 15791  001A3A  010D               	movlb	13	; () banked
 15792  001A3C  BF34               	btfsc	52,7,b	;volatile
 15793  001A3E  D00A               	goto	l379
 15794                           
 15795                           ; BSR set to: 13
 15796                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 15797  001A40  5134               	movf	52,w,b	;volatile
 15798  001A42  0B0F               	andlw	15
 15799  001A44  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15800  001A46  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15801  001A48  0D01               	mullw	1
 15802  001A4A  0E68               	movlw	low _ep_data_out
 15803  001A4C  24F3               	addwf	prodl,w,c
 15804  001A4E  6ED9               	movwf	fsr2l,c
 15805  001A50  0E01               	movlw	high _ep_data_out
 15806  001A52  D00A               	goto	L12
 15807  001A54                     l379:
 15808                           
 15809                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 15810                           
 15811                           ; BSR set to: 1
 15812  001A54  010D               	movlb	13	; () banked
 15813  001A56  5134               	movf	52,w,b	;volatile
 15814  001A58  0B0F               	andlw	15
 15815  001A5A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15816  001A5C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15817  001A5E  0D01               	mullw	1
 15818  001A60  0E6B               	movlw	low _ep_data_in
 15819  001A62  24F3               	addwf	prodl,w,c
 15820  001A64  6ED9               	movwf	fsr2l,c
 15821  001A66  0E01               	movlw	high _ep_data_in
 15822  001A68                     L12:
 15823  001A68  20F4               	addwfc	prodh,w,c
 15824  001A6A  6EDA               	movwf	fsr2h,c
 15825  001A6C  0101               	movlb	1	; () banked
 15826  001A6E  92DF               	bcf	indf2,1,c
 15827                           
 15828                           ; BSR set to: 1
 15829                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15830                           
 15831                           ; BSR set to: 1
 15832  001A70  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15833  001A74  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15834  001A78  0E3B               	movlw	59
 15835  001A7A  16DF               	andwf	indf2,f,c
 15836                           
 15837                           ; BSR set to: 1
 15838                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15839  001A7C  0E00               	movlw	0
 15840  001A7E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15841  001A80  0E05               	movlw	5
 15842  001A82  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15843  001A84  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15844  001A88  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15845  001A8C  0E00               	movlw	0
 15846  001A8E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15847  001A90  0E02               	movlw	2
 15848  001A92  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15849  001A94  ECB4  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15850                           
 15851                           ;usb_device.c: 2923: }
 15852  001A98  D006               	goto	l381
 15853  001A9A                     l376:
 15854                           
 15855                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 15856  001A9A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15857  001A9E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15858  001AA2  0E3B               	movlw	59
 15859  001AA4  16DF               	andwf	indf2,f,c
 15860  001AA6                     l381:
 15861                           
 15862                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 15863  001AA6  010D               	movlb	13	; () banked
 15864  001AA8  5134               	movf	52,w,b	;volatile
 15865  001AAA  0B0F               	andlw	15
 15866  001AAC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15867  001AAE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15868  001AB0  0D01               	mullw	1
 15869  001AB2  0E26               	movlw	38
 15870  001AB4  24F3               	addwf	prodl,w,c
 15871  001AB6  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 15872  001AB8  0E0F               	movlw	15
 15873  001ABA  20F4               	addwfc	prodh,w,c
 15874  001ABC  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 15875                           
 15876                           ; BSR set to: 13
 15877                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 15878  001ABE  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 15879  001AC2  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 15880  001AC6  0EFE               	movlw	254
 15881  001AC8  16DF               	andwf	indf2,f,c
 15882                           
 15883                           ; BSR set to: 13
 15884  001ACA  0012               	return	
 15885  001ACC                     __end_of_USBStdFeatureReqHandler:
 15886                           	opt stack 0
 15887                           tblptru	equ	0xFF8
 15888                           tblptrh	equ	0xFF7
 15889                           tblptrl	equ	0xFF6
 15890                           tablat	equ	0xFF5
 15891                           prodh	equ	0xFF4
 15892                           prodl	equ	0xFF3
 15893                           intcon	equ	0xFF2
 15894                           intcon2	equ	0xFF1
 15895                           intcon3	equ	0xFF0
 15896                           indf0	equ	0xFEF
 15897                           postinc0	equ	0xFEE
 15898                           fsr0h	equ	0xFEA
 15899                           fsr0l	equ	0xFE9
 15900                           wreg	equ	0xFE8
 15901                           indf1	equ	0xFE7
 15902                           postdec1	equ	0xFE5
 15903                           plusw1	equ	0xFE3
 15904                           fsr1h	equ	0xFE2
 15905                           fsr1l	equ	0xFE1
 15906                           indf2	equ	0xFDF
 15907                           postinc2	equ	0xFDE
 15908                           postdec2	equ	0xFDD
 15909                           plusw2	equ	0xFDB
 15910                           fsr2h	equ	0xFDA
 15911                           fsr2l	equ	0xFD9
 15912                           status	equ	0xFD8
 15913                           
 15914 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 15915 ;; Defined at:
 15916 ;;		line 54 in file "usb_events.c"
 15917 ;; Parameters:    Size  Location     Type
 15918 ;;  event           2   15[COMRAM] enum E6832
 15919 ;;  pdata           2   17[COMRAM] PTR void 
 15920 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15921 ;;		 -> BDT(48), 
 15922 ;;  size            2   19[COMRAM] unsigned int 
 15923 ;; Auto vars:     Size  Location     Type
 15924 ;;		None
 15925 ;; Return value:  Size  Location     Type
 15926 ;;                  1    wreg      unsigned char 
 15927 ;; Registers used:
 15928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15929 ;; Tracked objects:
 15930 ;;		On entry : 0/0
 15931 ;;		On exit  : 0/0
 15932 ;;		Unchanged: 0/0
 15933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15934 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15937 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15938 ;;Total ram usage:        8 bytes
 15939 ;; Hardware stack levels used:    1
 15940 ;; Hardware stack levels required when called:    3
 15941 ;; This function calls:
 15942 ;;		_APP_DeviceCustomHIDInitialize
 15943 ;;		_APP_DeviceMSDInitialize
 15944 ;;		_MSDTransferTerminated
 15945 ;;		_SYSTEM_Initialize
 15946 ;;		_USBCheckHIDRequest
 15947 ;;		_USBCheckMSDRequest
 15948 ;; This function is called by:
 15949 ;;		_USBDeviceTasks
 15950 ;;		_USBStdSetCfgHandler
 15951 ;;		_USBSuspend
 15952 ;;		_USBWakeFromSuspend
 15953 ;;		_USBCtrlTrfSetupHandler
 15954 ;;		_USBCheckStdRequest
 15955 ;;		_USBStdFeatureReqHandler
 15956 ;; This function uses a non-reentrant model
 15957 ;;
 15958                           
 15959                           	psect	text73
 15960  006568                     __ptext73:
 15961                           	opt stack 0
 15962  006568                     _USER_USB_CALLBACK_EVENT_HANDLER:
 15963                           	opt stack 26
 15964                           
 15965                           ;usb_events.c: 56: switch((int)event)
 15966                           
 15967                           ;incstack = 0
 15968  006568  D019               	goto	l800
 15969  00656A                     
 15970                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 15971  00656A  0E01               	movlw	1
 15972  00656C  ECC1  F03A         	call	_SYSTEM_Initialize
 15973                           
 15974                           ;usb_events.c: 79: break;
 15975  006570  0012               	return	
 15976  006572                     
 15977                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 15978  006572  0E02               	movlw	2
 15979  006574  ECC1  F03A         	call	_SYSTEM_Initialize
 15980                           
 15981                           ;usb_events.c: 90: break;
 15982  006578  0012               	return	
 15983  00657A                     
 15984                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 15985  00657A  EC9E  F03D         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 15986                           
 15987                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 15988  00657E  EC7F  F040         	call	_APP_DeviceMSDInitialize	;wreg free
 15989                           
 15990                           ;usb_events.c: 100: break;
 15991                           
 15992                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 15993                           
 15994                           ;usb_events.c: 97: break;
 15995  006582  0012               	return	
 15996  006584                     
 15997                           ;usb_events.c: 105: USBCheckHIDRequest();
 15998  006584  EC6B  F025         	call	_USBCheckHIDRequest	;wreg free
 15999                           
 16000                           ;usb_events.c: 108: USBCheckMSDRequest();
 16001  006588  ECD6  F02A         	call	_USBCheckMSDRequest	;wreg free
 16002                           
 16003                           ;usb_events.c: 112: break;
 16004                           
 16005                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 16006                           
 16007                           ;usb_events.c: 109: break;
 16008  00658C  0012               	return	
 16009  00658E                     
 16010                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 16011  00658E  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 16012  006592  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 16013  006596  ECEA  F039         	call	_MSDTransferTerminated	;wreg free
 16014                           
 16015                           ;usb_events.c: 129: }
 16016                           
 16017                           ;usb_events.c: 128: break;
 16018                           
 16019                           ;usb_events.c: 127: default:
 16020                           
 16021                           ;usb_events.c: 125: break;
 16022  00659A  0012               	return	
 16023  00659C                     l800:
 16024  00659C  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 16025  0065A0  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 16026                           
 16027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16028                           ; Switch size 1, requested type "space"
 16029                           ; Number of cases is 2, Range of values is 0 to 127
 16030                           ; switch strategies available:
 16031                           ; Name         Instructions Cycles
 16032                           ; simple_byte            7     4 (average)
 16033                           ;	Chosen strategy is simple_byte
 16034  0065A4  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 16035  0065A6  0A00               	xorlw	0	; case 0
 16036  0065A8  B4D8               	btfsc	status,2,c
 16037  0065AA  D004               	goto	l15271
 16038  0065AC  0A7F               	xorlw	127	; case 127
 16039  0065AE  A4D8               	btfss	status,2,c
 16040  0065B0  0012               	return	
 16041  0065B2  D01A               	goto	l15273
 16042  0065B4                     l15271:
 16043                           
 16044                           ; Switch size 1, requested type "space"
 16045                           ; Number of cases is 8, Range of values is 1 to 117
 16046                           ; switch strategies available:
 16047                           ; Name         Instructions Cycles
 16048                           ; simple_byte           25    13 (average)
 16049                           ;	Chosen strategy is simple_byte
 16050  0065B4  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16051  0065B6  0A01               	xorlw	1	; case 1
 16052  0065B8  B4D8               	btfsc	status,2,c
 16053  0065BA  D7DF               	goto	l806
 16054  0065BC  0A03               	xorlw	3	; case 2
 16055  0065BE  B4D8               	btfsc	status,2,c
 16056  0065C0  0012               	return	
 16057  0065C2  0A01               	xorlw	1	; case 3
 16058  0065C4  B4D8               	btfsc	status,2,c
 16059  0065C6  D7DE               	goto	l808
 16060  0065C8  0A06               	xorlw	6	; case 5
 16061  0065CA  B4D8               	btfsc	status,2,c
 16062  0065CC  D7E0               	goto	l810
 16063  0065CE  0A77               	xorlw	119	; case 114
 16064  0065D0  B4D8               	btfsc	status,2,c
 16065  0065D2  0012               	return	
 16066  0065D4  0A01               	xorlw	1	; case 115
 16067  0065D6  B4D8               	btfsc	status,2,c
 16068  0065D8  0012               	return	
 16069  0065DA  0A07               	xorlw	7	; case 116
 16070  0065DC  B4D8               	btfsc	status,2,c
 16071  0065DE  D7C9               	goto	l805
 16072  0065E0  0A01               	xorlw	1	; case 117
 16073  0065E2  A4D8               	btfss	status,2,c
 16074  0065E4  0012               	return	
 16075  0065E6  D7C1               	goto	l804
 16076  0065E8                     l15273:
 16077                           
 16078                           ; Switch size 1, requested type "space"
 16079                           ; Number of cases is 1, Range of values is 255 to 255
 16080                           ; switch strategies available:
 16081                           ; Name         Instructions Cycles
 16082                           ; simple_byte            4     3 (average)
 16083                           ;	Chosen strategy is simple_byte
 16084  0065E8  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16085  0065EA  0AFF               	xorlw	255	; case 255
 16086  0065EC  0012               	return	
 16087  0065EE                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 16088                           	opt stack 0
 16089                           tblptru	equ	0xFF8
 16090                           tblptrh	equ	0xFF7
 16091                           tblptrl	equ	0xFF6
 16092                           tablat	equ	0xFF5
 16093                           prodh	equ	0xFF4
 16094                           prodl	equ	0xFF3
 16095                           intcon	equ	0xFF2
 16096                           intcon2	equ	0xFF1
 16097                           intcon3	equ	0xFF0
 16098                           indf0	equ	0xFEF
 16099                           postinc0	equ	0xFEE
 16100                           fsr0h	equ	0xFEA
 16101                           fsr0l	equ	0xFE9
 16102                           wreg	equ	0xFE8
 16103                           indf1	equ	0xFE7
 16104                           postdec1	equ	0xFE5
 16105                           plusw1	equ	0xFE3
 16106                           fsr1h	equ	0xFE2
 16107                           fsr1l	equ	0xFE1
 16108                           indf2	equ	0xFDF
 16109                           postinc2	equ	0xFDE
 16110                           postdec2	equ	0xFDD
 16111                           plusw2	equ	0xFDB
 16112                           fsr2h	equ	0xFDA
 16113                           fsr2l	equ	0xFD9
 16114                           status	equ	0xFD8
 16115                           
 16116 ;; *************** function _USBCheckMSDRequest *****************
 16117 ;; Defined at:
 16118 ;;		line 218 in file "usb_device_msd.c"
 16119 ;; Parameters:    Size  Location     Type
 16120 ;;		None
 16121 ;; Auto vars:     Size  Location     Type
 16122 ;;		None
 16123 ;; Return value:  Size  Location     Type
 16124 ;;                  1    wreg      void 
 16125 ;; Registers used:
 16126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16127 ;; Tracked objects:
 16128 ;;		On entry : 0/0
 16129 ;;		On exit  : 0/0
 16130 ;;		Unchanged: 0/0
 16131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16135 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16136 ;;Total ram usage:        4 bytes
 16137 ;; Hardware stack levels used:    1
 16138 ;; Hardware stack levels required when called:    1
 16139 ;; This function calls:
 16140 ;;		_USBTransferOnePacket
 16141 ;; This function is called by:
 16142 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16143 ;; This function uses a non-reentrant model
 16144 ;;
 16145                           
 16146                           	psect	text74
 16147  0055AC                     __ptext74:
 16148                           	opt stack 0
 16149  0055AC                     _USBCheckMSDRequest:
 16150                           	opt stack 27
 16151                           
 16152                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 16153                           
 16154                           ;incstack = 0
 16155  0055AC  010D               	movlb	13	; () banked
 16156  0055AE  5130               	movf	48,w,b	;volatile
 16157  0055B0  0B1F               	andlw	31
 16158  0055B2  06E8               	decf	wreg,f,c
 16159  0055B4  A4D8               	btfss	status,2,c
 16160  0055B6  0012               	return	
 16161                           
 16162                           ; BSR set to: 13
 16163                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 16164                           
 16165                           ; BSR set to: 13
 16166                           
 16167                           ; BSR set to: 13
 16168                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 16169  0055B8  5134               	movf	52,w,b	;volatile
 16170  0055BA  A4D8               	btfss	status,2,c
 16171  0055BC  0012               	return	
 16172  0055BE  D04E               	goto	l529
 16173  0055C0                     
 16174                           ; BSR set to: 13
 16175                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 16176                           
 16177                           ; BSR set to: 13
 16178  0055C0  5132               	movf	50,w,b	;volatile
 16179  0055C2  1133               	iorwf	51,w,b	;volatile
 16180  0055C4  A4D8               	btfss	status,2,c
 16181  0055C6  0012               	return	
 16182                           
 16183                           ; BSR set to: 13
 16184  0055C8  5136               	movf	54,w,b	;volatile
 16185  0055CA  1137               	iorwf	55,w,b	;volatile
 16186  0055CC  A4D8               	btfss	status,2,c
 16187  0055CE  0012               	return	
 16188                           
 16189                           ; BSR set to: 13
 16190                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 16191                           
 16192                           ; BSR set to: 13
 16193                           
 16194                           ; BSR set to: 13
 16195                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 16196  0055D0  0E00               	movlw	0
 16197  0055D2  0100               	movlb	0	; () banked
 16198  0055D4  6FE9               	movwf	_MSD_State& (0+255),b
 16199                           
 16200                           ; BSR set to: 0
 16201                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 16202  0055D6  69E8               	setf	_MSDCommandState& (0+255),b
 16203                           
 16204                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 16205  0055D8  0E00               	movlw	0
 16206  0055DA  6FE7               	movwf	_MSDReadState& (0+255),b
 16207                           
 16208                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 16209  0055DC  0E00               	movlw	0
 16210  0055DE  6FE6               	movwf	_MSDWriteState& (0+255),b
 16211                           
 16212                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 16213  0055E0  0E01               	movlw	1
 16214  0055E2  6FE1               	movwf	_MSDCBWValid& (0+255),b
 16215                           
 16216                           ; BSR set to: 0
 16217                           
 16218                           ; BSR set to: 0
 16219                           
 16220                           ; BSR set to: 0
 16221                           
 16222                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 16223  0055E4  C144  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 16224  0055E8  C145  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 16225                           
 16226                           ; BSR set to: 0
 16227  0055EC  500C               	movf	_USBCheckMSDRequest$2319,w,c
 16228  0055EE  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 16229  0055F0  B4D8               	btfsc	status,2,c
 16230  0055F2  D00A               	goto	u6950
 16231                           
 16232                           ; BSR set to: 0
 16233                           
 16234                           ; BSR set to: 0
 16235                           
 16236                           ; BSR set to: 0
 16237                           
 16238                           ; BSR set to: 0
 16239  0055F4  C144  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 16240  0055F8  C145  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 16241                           
 16242                           ; BSR set to: 0
 16243                           
 16244                           ; BSR set to: 0
 16245  0055FC  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 16246  005600  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 16247  005604  BEDF               	btfsc	indf2,7,c
 16248  005606  D00F               	goto	l534
 16249  005608                     u6950:
 16250                           
 16251                           ; BSR set to: 0
 16252                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 16253                           
 16254                           ; BSR set to: 0
 16255  005608  0E00               	movlw	0
 16256  00560A  6E01               	movwf	USBTransferOnePacket@dir,c
 16257  00560C  0E40               	movlw	64
 16258  00560E  6E02               	movwf	USBTransferOnePacket@data,c
 16259  005610  0E0D               	movlw	13
 16260  005612  6E03               	movwf	USBTransferOnePacket@data+1,c
 16261  005614  0E40               	movlw	64
 16262  005616  6E04               	movwf	USBTransferOnePacket@len,c
 16263  005618  0E02               	movlw	2
 16264  00561A  EC79  F023         	call	_USBTransferOnePacket
 16265  00561E  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16266  005622  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16267  005626                     l534:
 16268                           
 16269                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 16270  005626  0E80               	movlw	128
 16271  005628  0100               	movlb	0	; () banked
 16272  00562A  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16273                           
 16274                           ;usb_device_msd.c: 263: break;
 16275  00562C  0012               	return	
 16276  00562E                     
 16277                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 16278                           
 16279                           ; BSR set to: 0
 16280  00562E  010D               	movlb	13	; () banked
 16281  005630  5132               	movf	50,w,b	;volatile
 16282  005632  1133               	iorwf	51,w,b	;volatile
 16283  005634  A4D8               	btfss	status,2,c
 16284  005636  0012               	return	
 16285                           
 16286                           ; BSR set to: 13
 16287  005638  0536               	decf	54,w,b	;volatile
 16288  00563A  1137               	iorwf	55,w,b	;volatile
 16289  00563C  A4D8               	btfss	status,2,c
 16290  00563E  0012               	return	
 16291                           
 16292                           ; BSR set to: 13
 16293                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 16294                           
 16295                           ; BSR set to: 13
 16296                           
 16297                           ; BSR set to: 13
 16298                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 16299  005640  0E00               	movlw	0
 16300  005642  6F38               	movwf	56,b	;volatile
 16301                           
 16302                           ; BSR set to: 13
 16303                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16304  005644  0E38               	movlw	56
 16305  005646  0100               	movlb	0	; () banked
 16306  005648  6FBF               	movwf	_inPipes& (0+255),b
 16307  00564A  0E0D               	movlw	13
 16308  00564C  6FC0               	movwf	(_inPipes+1)& (0+255),b
 16309                           
 16310                           ; BSR set to: 0
 16311  00564E  0E00               	movlw	0
 16312  005650  6FC4               	movwf	(_inPipes+5)& (0+255),b
 16313  005652  0E01               	movlw	1
 16314  005654  6FC3               	movwf	(_inPipes+4)& (0+255),b
 16315                           
 16316                           ; BSR set to: 0
 16317  005656  0EC1               	movlw	193
 16318  005658  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16319                           
 16320                           ; BSR set to: 0
 16321                           ;usb_device_msd.c: 278: }
 16322                           
 16323                           ;usb_device_msd.c: 277: break;
 16324  00565A  0012               	return	
 16325  00565C                     l529:
 16326                           
 16327                           ; BSR set to: 0
 16328  00565C  010D               	movlb	13	; () banked
 16329  00565E  5131               	movf	49,w,b	;volatile
 16330                           
 16331                           ; Switch size 1, requested type "space"
 16332                           ; Number of cases is 2, Range of values is 254 to 255
 16333                           ; switch strategies available:
 16334                           ; Name         Instructions Cycles
 16335                           ; simple_byte            7     4 (average)
 16336                           ;	Chosen strategy is simple_byte
 16337  005660  0AFE               	xorlw	254	; case 254
 16338  005662  B4D8               	btfsc	status,2,c
 16339  005664  D7E4               	goto	l546
 16340  005666  0A01               	xorlw	1	; case 255
 16341  005668  A4D8               	btfss	status,2,c
 16342  00566A  0012               	return	
 16343  00566C  D7A9               	goto	l530
 16344  00566E                     __end_of_USBCheckMSDRequest:
 16345                           	opt stack 0
 16346                           tblptru	equ	0xFF8
 16347                           tblptrh	equ	0xFF7
 16348                           tblptrl	equ	0xFF6
 16349                           tablat	equ	0xFF5
 16350                           prodh	equ	0xFF4
 16351                           prodl	equ	0xFF3
 16352                           intcon	equ	0xFF2
 16353                           intcon2	equ	0xFF1
 16354                           intcon3	equ	0xFF0
 16355                           indf0	equ	0xFEF
 16356                           postinc0	equ	0xFEE
 16357                           fsr0h	equ	0xFEA
 16358                           fsr0l	equ	0xFE9
 16359                           wreg	equ	0xFE8
 16360                           indf1	equ	0xFE7
 16361                           postdec1	equ	0xFE5
 16362                           plusw1	equ	0xFE3
 16363                           fsr1h	equ	0xFE2
 16364                           fsr1l	equ	0xFE1
 16365                           indf2	equ	0xFDF
 16366                           postinc2	equ	0xFDE
 16367                           postdec2	equ	0xFDD
 16368                           plusw2	equ	0xFDB
 16369                           fsr2h	equ	0xFDA
 16370                           fsr2l	equ	0xFD9
 16371                           status	equ	0xFD8
 16372                           
 16373 ;; *************** function _USBCheckHIDRequest *****************
 16374 ;; Defined at:
 16375 ;;		line 153 in file "usb_device_hid.c"
 16376 ;; Parameters:    Size  Location     Type
 16377 ;;		None
 16378 ;; Auto vars:     Size  Location     Type
 16379 ;;		None
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      void 
 16382 ;; Registers used:
 16383 ;;		wreg, status,2, status,0
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16393 ;;Total ram usage:        0 bytes
 16394 ;; Hardware stack levels used:    1
 16395 ;; This function calls:
 16396 ;;		Nothing
 16397 ;; This function is called by:
 16398 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16399 ;; This function uses a non-reentrant model
 16400 ;;
 16401                           
 16402                           	psect	text75
 16403  004AD6                     __ptext75:
 16404                           	opt stack 0
 16405  004AD6                     _USBCheckHIDRequest:
 16406                           	opt stack 28
 16407                           
 16408                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 16409                           
 16410                           ;incstack = 0
 16411  004AD6  010D               	movlb	13	; () banked
 16412  004AD8  5130               	movf	48,w,b	;volatile
 16413  004ADA  0B1F               	andlw	31
 16414  004ADC  06E8               	decf	wreg,f,c
 16415  004ADE  A4D8               	btfss	status,2,c
 16416  004AE0  0012               	return	
 16417                           
 16418                           ; BSR set to: 13
 16419                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 16420                           
 16421                           ; BSR set to: 13
 16422                           
 16423                           ; BSR set to: 13
 16424  004AE2  5134               	movf	52,w,b	;volatile
 16425  004AE4  A4D8               	btfss	status,2,c
 16426  004AE6  0012               	return	
 16427                           
 16428                           ; BSR set to: 13
 16429                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 16430                           
 16431                           ; BSR set to: 13
 16432                           
 16433                           ; BSR set to: 13
 16434  004AE8  0E06               	movlw	6
 16435  004AEA  1931               	xorwf	49,w,b	;volatile
 16436  004AEC  B4D8               	btfsc	status,2,c
 16437  004AEE  D01A               	goto	l411
 16438  004AF0  D022               	goto	l414
 16439  004AF2                     
 16440                           ; BSR set to: 13
 16441                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 16442                           
 16443                           ; BSR set to: 13
 16444  004AF2  0100               	movlb	0	; () banked
 16445  004AF4  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 16446  004AF6  A4D8               	btfss	status,2,c
 16447  004AF8  D01E               	goto	l414
 16448                           
 16449                           ; BSR set to: 0
 16450                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 16451  004AFA  0EBA               	movlw	low (_configDescriptor1+18)
 16452  004AFC  6FBF               	movwf	_inPipes& (0+255),b
 16453  004AFE  0E8E               	movlw	high (_configDescriptor1+18)
 16454  004B00  6FC0               	movwf	(_inPipes+1)& (0+255),b
 16455                           
 16456                           ; BSR set to: 0
 16457  004B02  0E00               	movlw	0
 16458  004B04  6FC4               	movwf	(_inPipes+5)& (0+255),b
 16459  004B06  0E09               	movlw	9
 16460  004B08  D00B               	goto	L13
 16461  004B0A                     l10245:
 16462                           
 16463                           ; BSR set to: 0
 16464  004B0A  0EC0               	movlw	192
 16465  004B0C  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16466                           
 16467                           ; BSR set to: 0
 16468                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 16469  004B0E  D013               	goto	l414
 16470  004B10                     
 16471                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 16472                           
 16473                           ; BSR set to: 0
 16474  004B10  0E6E               	movlw	low _hid_rpt01
 16475  004B12  0100               	movlb	0	; () banked
 16476  004B14  6FBF               	movwf	_inPipes& (0+255),b
 16477  004B16  0E8F               	movlw	high _hid_rpt01
 16478  004B18  6FC0               	movwf	(_inPipes+1)& (0+255),b
 16479                           
 16480                           ; BSR set to: 0
 16481  004B1A  0E00               	movlw	0
 16482  004B1C  6FC4               	movwf	(_inPipes+5)& (0+255),b
 16483  004B1E  0E1D               	movlw	29
 16484  004B20                     L13:
 16485  004B20  6FC3               	movwf	(_inPipes+4)& (0+255),b
 16486  004B22  D7F3               	goto	l10245
 16487  004B24                     l411:
 16488                           
 16489                           ; BSR set to: 0
 16490  004B24  010D               	movlb	13	; () banked
 16491  004B26  5133               	movf	51,w,b	;volatile
 16492                           
 16493                           ; Switch size 1, requested type "space"
 16494                           ; Number of cases is 3, Range of values is 33 to 35
 16495                           ; switch strategies available:
 16496                           ; Name         Instructions Cycles
 16497                           ; simple_byte           10     6 (average)
 16498                           ;	Chosen strategy is simple_byte
 16499  004B28  0A21               	xorlw	33	; case 33
 16500  004B2A  B4D8               	btfsc	status,2,c
 16501  004B2C  D7E2               	goto	l412
 16502  004B2E  0A03               	xorlw	3	; case 34
 16503  004B30  B4D8               	btfsc	status,2,c
 16504  004B32  D7EE               	goto	l415
 16505  004B34  0A01               	xorlw	1	; case 35
 16506  004B36                     l414:
 16507                           
 16508                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 16509                           
 16510                           ; BSR set to: 13
 16511                           
 16512                           ; BSR set to: 13
 16513  004B36  010D               	movlb	13	; () banked
 16514  004B38  3930               	swapf	48,w,b	;volatile
 16515  004B3A  32E8               	rrcf	wreg,f,c
 16516  004B3C  0B03               	andlw	3
 16517  004B3E  06E8               	decf	wreg,f,c
 16518  004B40  A4D8               	btfss	status,2,c
 16519  004B42  0012               	return	
 16520  004B44  D024               	goto	l418
 16521  004B46                     
 16522                           ; BSR set to: 13
 16523                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16524                           
 16525                           ; BSR set to: 13
 16526  004B46  0EFC               	movlw	low _idle_rate
 16527  004B48  0100               	movlb	0	; () banked
 16528  004B4A  6FBF               	movwf	_inPipes& (0+255),b
 16529  004B4C  0E00               	movlw	high _idle_rate
 16530  004B4E  6FC0               	movwf	(_inPipes+1)& (0+255),b
 16531                           
 16532                           ; BSR set to: 0
 16533  004B50  0E00               	movlw	0
 16534  004B52  6FC4               	movwf	(_inPipes+5)& (0+255),b
 16535  004B54  0E01               	movlw	1
 16536  004B56  6FC3               	movwf	(_inPipes+4)& (0+255),b
 16537                           
 16538                           ; BSR set to: 0
 16539  004B58  0EC1               	movlw	193
 16540  004B5A  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16541                           
 16542                           ;usb_device_hid.c: 223: break;
 16543  004B5C  0012               	return	
 16544  004B5E                     
 16545                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 16546                           
 16547                           ; BSR set to: 0
 16548  004B5E  0E80               	movlw	128
 16549  004B60  0100               	movlb	0	; () banked
 16550  004B62  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16551                           
 16552                           ; BSR set to: 0
 16553                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 16554  004B64  CD33 F0FC          	movff	3379,_idle_rate	;volatile
 16555                           
 16556                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 16557  004B68  0012               	return	
 16558  004B6A                     
 16559                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 16560                           
 16561                           ; BSR set to: 0
 16562  004B6A  0EFB               	movlw	low _active_protocol
 16563  004B6C  0100               	movlb	0	; () banked
 16564  004B6E  6FBF               	movwf	_inPipes& (0+255),b
 16565  004B70  0E00               	movlw	high _active_protocol
 16566  004B72  6FC0               	movwf	(_inPipes+1)& (0+255),b
 16567                           
 16568                           ; BSR set to: 0
 16569  004B74  0E00               	movlw	0
 16570  004B76  6FC4               	movwf	(_inPipes+5)& (0+255),b
 16571  004B78  0E01               	movlw	1
 16572  004B7A  6FC3               	movwf	(_inPipes+4)& (0+255),b
 16573                           
 16574                           ; BSR set to: 0
 16575  004B7C  0E81               	movlw	129
 16576  004B7E  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16577                           
 16578                           ;usb_device_hid.c: 234: break;
 16579  004B80  0012               	return	
 16580  004B82                     
 16581                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 16582                           
 16583                           ; BSR set to: 0
 16584  004B82  0E80               	movlw	128
 16585  004B84  0100               	movlb	0	; () banked
 16586  004B86  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 16590  004B88  CD32 F0FB          	movff	3378,_active_protocol	;volatile
 16591                           
 16592                           ; BSR set to: 0
 16593                           ;usb_device_hid.c: 239: }
 16594                           
 16595                           ;usb_device_hid.c: 238: break;
 16596  004B8C  0012               	return	
 16597  004B8E                     l418:
 16598                           
 16599                           ; BSR set to: 0
 16600  004B8E  010D               	movlb	13	; () banked
 16601  004B90  5131               	movf	49,w,b	;volatile
 16602                           
 16603                           ; Switch size 1, requested type "space"
 16604                           ; Number of cases is 6, Range of values is 1 to 11
 16605                           ; switch strategies available:
 16606                           ; Name         Instructions Cycles
 16607                           ; simple_byte           19    10 (average)
 16608                           ;	Chosen strategy is simple_byte
 16609  004B92  0A01               	xorlw	1	; case 1
 16610  004B94  B4D8               	btfsc	status,2,c
 16611  004B96  0012               	return	
 16612  004B98  0A03               	xorlw	3	; case 2
 16613  004B9A  B4D8               	btfsc	status,2,c
 16614  004B9C  D7D4               	goto	l422
 16615  004B9E  0A01               	xorlw	1	; case 3
 16616  004BA0  B4D8               	btfsc	status,2,c
 16617  004BA2  D7E3               	goto	l424
 16618  004BA4  0A0A               	xorlw	10	; case 9
 16619  004BA6  B4D8               	btfsc	status,2,c
 16620  004BA8  0012               	return	
 16621  004BAA  0A03               	xorlw	3	; case 10
 16622  004BAC  B4D8               	btfsc	status,2,c
 16623  004BAE  D7D7               	goto	l423
 16624  004BB0  0A01               	xorlw	1	; case 11
 16625  004BB2  A4D8               	btfss	status,2,c
 16626  004BB4  0012               	return	
 16627  004BB6  D7E5               	goto	l425
 16628  004BB8                     __end_of_USBCheckHIDRequest:
 16629                           	opt stack 0
 16630                           tblptru	equ	0xFF8
 16631                           tblptrh	equ	0xFF7
 16632                           tblptrl	equ	0xFF6
 16633                           tablat	equ	0xFF5
 16634                           prodh	equ	0xFF4
 16635                           prodl	equ	0xFF3
 16636                           intcon	equ	0xFF2
 16637                           intcon2	equ	0xFF1
 16638                           intcon3	equ	0xFF0
 16639                           indf0	equ	0xFEF
 16640                           postinc0	equ	0xFEE
 16641                           fsr0h	equ	0xFEA
 16642                           fsr0l	equ	0xFE9
 16643                           wreg	equ	0xFE8
 16644                           indf1	equ	0xFE7
 16645                           postdec1	equ	0xFE5
 16646                           plusw1	equ	0xFE3
 16647                           fsr1h	equ	0xFE2
 16648                           fsr1l	equ	0xFE1
 16649                           indf2	equ	0xFDF
 16650                           postinc2	equ	0xFDE
 16651                           postdec2	equ	0xFDD
 16652                           plusw2	equ	0xFDB
 16653                           fsr2h	equ	0xFDA
 16654                           fsr2l	equ	0xFD9
 16655                           status	equ	0xFD8
 16656                           
 16657 ;; *************** function _SYSTEM_Initialize *****************
 16658 ;; Defined at:
 16659 ;;		line 80 in file "system.c"
 16660 ;; Parameters:    Size  Location     Type
 16661 ;;  state           1    wreg     enum E6623
 16662 ;; Auto vars:     Size  Location     Type
 16663 ;;  state           1    4[COMRAM] enum E6623
 16664 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 16665 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 16666 ;; Return value:  Size  Location     Type
 16667 ;;                  1    wreg      void 
 16668 ;; Registers used:
 16669 ;;		wreg, status,2, status,0
 16670 ;; Tracked objects:
 16671 ;;		On entry : 0/0
 16672 ;;		On exit  : 0/0
 16673 ;;		Unchanged: 0/0
 16674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16676 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16678 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16679 ;;Total ram usage:        5 bytes
 16680 ;; Hardware stack levels used:    1
 16681 ;; This function calls:
 16682 ;;		Nothing
 16683 ;; This function is called by:
 16684 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16685 ;;		_main
 16686 ;; This function uses a non-reentrant model
 16687 ;;
 16688                           
 16689                           	psect	text76
 16690  007582                     __ptext76:
 16691                           	opt stack 0
 16692  007582                     _SYSTEM_Initialize:
 16693                           	opt stack 28
 16694                           
 16695                           ;incstack = 0
 16696                           ;SYSTEM_Initialize@state stored from wreg
 16697  007582  6E05               	movwf	SYSTEM_Initialize@state,c
 16698                           
 16699                           ;system.c: 82: switch(state)
 16700  007584  D01D               	goto	l923
 16701  007586                     
 16702                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 16703  007586  0E02               	movlw	2
 16704  007588  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 16705  00758A  0E58               	movlw	88
 16706  00758C  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 16707                           
 16708                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 16709  00758E  8C9B               	bsf	3995,6,c	;volatile
 16710  007590                     l10431:
 16711  007590  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 16712  007592  A0D8               	btfss	status,0,c
 16713  007594  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 16714  007596  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 16715  007598  E1FB               	bnz	l10431
 16716  00759A  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 16717  00759C  B4D8               	btfsc	status,2,c
 16718  00759E  0012               	return	
 16719  0075A0  D7F7               	goto	l926
 16720  0075A2                     
 16721                           ;system.c: 119: OSCCON = 0x70;
 16722  0075A2  0E70               	movlw	112
 16723  0075A4  6ED3               	movwf	4051,c	;volatile
 16724                           
 16725                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 16726  0075A6  0E03               	movlw	3
 16727  0075A8  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3036+1,c
 16728  0075AA  0E20               	movlw	32
 16729  0075AC  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3036,c
 16730  0075AE                     l10435:
 16731  0075AE  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3036,f,c
 16732  0075B0  A0D8               	btfss	status,0,c
 16733  0075B2  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3036+1,f,c
 16734  0075B4  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3036,w,c
 16735  0075B6  E1FB               	bnz	l10435
 16736  0075B8  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3036+1,w,c
 16737  0075BA  B4D8               	btfsc	status,2,c
 16738  0075BC  0012               	return	
 16739  0075BE  D7F7               	goto	l932
 16740  0075C0                     l923:
 16741  0075C0  5005               	movf	SYSTEM_Initialize@state,w,c
 16742                           
 16743                           ; Switch size 1, requested type "space"
 16744                           ; Number of cases is 3, Range of values is 0 to 2
 16745                           ; switch strategies available:
 16746                           ; Name         Instructions Cycles
 16747                           ; simple_byte           10     6 (average)
 16748                           ;	Chosen strategy is simple_byte
 16749  0075C2  0A00               	xorlw	0	; case 0
 16750  0075C4  B4D8               	btfsc	status,2,c
 16751  0075C6  D7DF               	goto	l924
 16752  0075C8  0A01               	xorlw	1	; case 1
 16753  0075CA  B4D8               	btfsc	status,2,c
 16754  0075CC  0012               	return	
 16755  0075CE  0A03               	xorlw	3	; case 2
 16756  0075D0  A4D8               	btfss	status,2,c
 16757  0075D2  0012               	return	
 16758  0075D4  D7E6               	goto	l930
 16759  0075D6                     __end_of_SYSTEM_Initialize:
 16760                           	opt stack 0
 16761                           tblptru	equ	0xFF8
 16762                           tblptrh	equ	0xFF7
 16763                           tblptrl	equ	0xFF6
 16764                           tablat	equ	0xFF5
 16765                           prodh	equ	0xFF4
 16766                           prodl	equ	0xFF3
 16767                           intcon	equ	0xFF2
 16768                           intcon2	equ	0xFF1
 16769                           intcon3	equ	0xFF0
 16770                           indf0	equ	0xFEF
 16771                           postinc0	equ	0xFEE
 16772                           fsr0h	equ	0xFEA
 16773                           fsr0l	equ	0xFE9
 16774                           wreg	equ	0xFE8
 16775                           indf1	equ	0xFE7
 16776                           postdec1	equ	0xFE5
 16777                           plusw1	equ	0xFE3
 16778                           fsr1h	equ	0xFE2
 16779                           fsr1l	equ	0xFE1
 16780                           indf2	equ	0xFDF
 16781                           postinc2	equ	0xFDE
 16782                           postdec2	equ	0xFDD
 16783                           plusw2	equ	0xFDB
 16784                           fsr2h	equ	0xFDA
 16785                           fsr2l	equ	0xFD9
 16786                           status	equ	0xFD8
 16787                           
 16788 ;; *************** function _MSDTransferTerminated *****************
 16789 ;; Defined at:
 16790 ;;		line 1674 in file "usb_device_msd.c"
 16791 ;; Parameters:    Size  Location     Type
 16792 ;;  handle          2   11[COMRAM] PTR void 
 16793 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 16794 ;;		 -> BDT(48), 
 16795 ;; Auto vars:     Size  Location     Type
 16796 ;;		None
 16797 ;; Return value:  Size  Location     Type
 16798 ;;                  1    wreg      void 
 16799 ;; Registers used:
 16800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16801 ;; Tracked objects:
 16802 ;;		On entry : 0/0
 16803 ;;		On exit  : 0/0
 16804 ;;		Unchanged: 0/0
 16805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16809 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16810 ;;Total ram usage:        4 bytes
 16811 ;; Hardware stack levels used:    1
 16812 ;; Hardware stack levels required when called:    1
 16813 ;; This function calls:
 16814 ;;		_USBStallEndpoint
 16815 ;;		_USBTransferOnePacket
 16816 ;; This function is called by:
 16817 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16818 ;; This function uses a non-reentrant model
 16819 ;;
 16820                           
 16821                           	psect	text77
 16822  0073D4                     __ptext77:
 16823                           	opt stack 0
 16824  0073D4                     _MSDTransferTerminated:
 16825                           	opt stack 27
 16826                           
 16827                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 16828                           
 16829                           ;incstack = 0
 16830  0073D4  0100               	movlb	0	; () banked
 16831  0073D6  51E1               	movf	_MSDCBWValid& (0+255),w,b
 16832  0073D8  A4D8               	btfss	status,2,c
 16833  0073DA  D00B               	goto	l764
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 16837  0073DC  0E01               	movlw	1
 16838  0073DE  6E01               	movwf	USBStallEndpoint@dir,c
 16839  0073E0  0E02               	movlw	2
 16840  0073E2  EC6C  F021         	call	_USBStallEndpoint
 16841                           
 16842                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 16843  0073E6  0E00               	movlw	0
 16844  0073E8  6E01               	movwf	USBStallEndpoint@dir,c
 16845  0073EA  0E02               	movlw	2
 16846  0073EC  EC6C  F021         	call	_USBStallEndpoint
 16847                           
 16848                           ;usb_device_msd.c: 1681: }
 16849  0073F0  0012               	return	
 16850  0073F2                     l764:
 16851  0073F2  C144  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 16852  0073F6  C145  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 16853  0073FA  500E               	movf	_MSDTransferTerminated$2407,w,c
 16854  0073FC  180C               	xorwf	MSDTransferTerminated@handle,w,c
 16855  0073FE  E114               	bnz	l767
 16856  007400  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 16857  007402  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 16858  007404  A4D8               	btfss	status,2,c
 16859  007406  0012               	return	
 16860                           
 16861                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 16862  007408  0E00               	movlw	0
 16863  00740A  6E01               	movwf	USBTransferOnePacket@dir,c
 16864  00740C  0E40               	movlw	64
 16865  00740E  6E02               	movwf	USBTransferOnePacket@data,c
 16866  007410  0E0D               	movlw	13
 16867  007412  6E03               	movwf	USBTransferOnePacket@data+1,c
 16868  007414  0E40               	movlw	64
 16869  007416  6E04               	movwf	USBTransferOnePacket@len,c
 16870  007418  0E02               	movlw	2
 16871  00741A  EC79  F023         	call	_USBTransferOnePacket
 16872  00741E  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16873  007422  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16874  007426  0012               	return	
 16875  007428                     l767:
 16876  007428  0012               	return		;funcret
 16877  00742A                     __end_of_MSDTransferTerminated:
 16878                           	opt stack 0
 16879                           tblptru	equ	0xFF8
 16880                           tblptrh	equ	0xFF7
 16881                           tblptrl	equ	0xFF6
 16882                           tablat	equ	0xFF5
 16883                           prodh	equ	0xFF4
 16884                           prodl	equ	0xFF3
 16885                           intcon	equ	0xFF2
 16886                           intcon2	equ	0xFF1
 16887                           intcon3	equ	0xFF0
 16888                           indf0	equ	0xFEF
 16889                           postinc0	equ	0xFEE
 16890                           fsr0h	equ	0xFEA
 16891                           fsr0l	equ	0xFE9
 16892                           wreg	equ	0xFE8
 16893                           indf1	equ	0xFE7
 16894                           postdec1	equ	0xFE5
 16895                           plusw1	equ	0xFE3
 16896                           fsr1h	equ	0xFE2
 16897                           fsr1l	equ	0xFE1
 16898                           indf2	equ	0xFDF
 16899                           postinc2	equ	0xFDE
 16900                           postdec2	equ	0xFDD
 16901                           plusw2	equ	0xFDB
 16902                           fsr2h	equ	0xFDA
 16903                           fsr2l	equ	0xFD9
 16904                           status	equ	0xFD8
 16905                           
 16906 ;; *************** function _APP_DeviceMSDInitialize *****************
 16907 ;; Defined at:
 16908 ;;		line 84 in file "app_device_msd.c"
 16909 ;; Parameters:    Size  Location     Type
 16910 ;;		None
 16911 ;; Auto vars:     Size  Location     Type
 16912 ;;		None
 16913 ;; Return value:  Size  Location     Type
 16914 ;;                  1    wreg      void 
 16915 ;; Registers used:
 16916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16917 ;; Tracked objects:
 16918 ;;		On entry : 0/0
 16919 ;;		On exit  : 0/0
 16920 ;;		Unchanged: 0/0
 16921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16926 ;;Total ram usage:        0 bytes
 16927 ;; Hardware stack levels used:    1
 16928 ;; Hardware stack levels required when called:    2
 16929 ;; This function calls:
 16930 ;;		_USBEnableEndpoint
 16931 ;;		_USBMSDInit
 16932 ;; This function is called by:
 16933 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16934 ;; This function uses a non-reentrant model
 16935 ;;
 16936                           
 16937                           	psect	text78
 16938  0080FE                     __ptext78:
 16939                           	opt stack 0
 16940  0080FE                     _APP_DeviceMSDInitialize:
 16941                           	opt stack 26
 16942                           
 16943                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 16944                           
 16945                           ;incstack = 0
 16946  0080FE  0E1E               	movlw	30
 16947  008100  6E09               	movwf	USBEnableEndpoint@options,c
 16948  008102  0E02               	movlw	2
 16949  008104  ECDC  F03C         	call	_USBEnableEndpoint
 16950                           
 16951                           ;app_device_msd.c: 93: USBMSDInit();
 16952  008108  EC73  F022         	call	_USBMSDInit	;wreg free
 16953  00810C  0012               	return		;funcret
 16954  00810E                     __end_of_APP_DeviceMSDInitialize:
 16955                           	opt stack 0
 16956                           tblptru	equ	0xFF8
 16957                           tblptrh	equ	0xFF7
 16958                           tblptrl	equ	0xFF6
 16959                           tablat	equ	0xFF5
 16960                           prodh	equ	0xFF4
 16961                           prodl	equ	0xFF3
 16962                           intcon	equ	0xFF2
 16963                           intcon2	equ	0xFF1
 16964                           intcon3	equ	0xFF0
 16965                           indf0	equ	0xFEF
 16966                           postinc0	equ	0xFEE
 16967                           fsr0h	equ	0xFEA
 16968                           fsr0l	equ	0xFE9
 16969                           wreg	equ	0xFE8
 16970                           indf1	equ	0xFE7
 16971                           postdec1	equ	0xFE5
 16972                           plusw1	equ	0xFE3
 16973                           fsr1h	equ	0xFE2
 16974                           fsr1l	equ	0xFE1
 16975                           indf2	equ	0xFDF
 16976                           postinc2	equ	0xFDE
 16977                           postdec2	equ	0xFDD
 16978                           plusw2	equ	0xFDB
 16979                           fsr2h	equ	0xFDA
 16980                           fsr2l	equ	0xFD9
 16981                           status	equ	0xFD8
 16982                           
 16983 ;; *************** function _USBMSDInit *****************
 16984 ;; Defined at:
 16985 ;;		line 142 in file "usb_device_msd.c"
 16986 ;; Parameters:    Size  Location     Type
 16987 ;;		None
 16988 ;; Auto vars:     Size  Location     Type
 16989 ;;		None
 16990 ;; Return value:  Size  Location     Type
 16991 ;;                  1    wreg      void 
 16992 ;; Registers used:
 16993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16994 ;; Tracked objects:
 16995 ;;		On entry : 0/0
 16996 ;;		On exit  : 0/0
 16997 ;;		Unchanged: 0/0
 16998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17001 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17002 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17003 ;;Total ram usage:        3 bytes
 17004 ;; Hardware stack levels used:    1
 17005 ;; Hardware stack levels required when called:    1
 17006 ;; This function calls:
 17007 ;;		_ExternalFlash_MediaDetect
 17008 ;;		_ExternalFlash_MediaInitialize
 17009 ;;		_ResetSenseData
 17010 ;;		_USBTransferOnePacket
 17011 ;; This function is called by:
 17012 ;;		_APP_DeviceMSDInitialize
 17013 ;; This function uses a non-reentrant model
 17014 ;;
 17015                           
 17016                           	psect	text79
 17017  0044E6                     __ptext79:
 17018                           	opt stack 0
 17019  0044E6                     _USBMSDInit:
 17020                           	opt stack 26
 17021                           
 17022                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 17023                           
 17024                           ;incstack = 0
 17025  0044E6  0E00               	movlw	0
 17026  0044E8  6E01               	movwf	USBTransferOnePacket@dir,c
 17027  0044EA  0E40               	movlw	64
 17028  0044EC  6E02               	movwf	USBTransferOnePacket@data,c
 17029  0044EE  0E0D               	movlw	13
 17030  0044F0  6E03               	movwf	USBTransferOnePacket@data+1,c
 17031  0044F2  0E40               	movlw	64
 17032  0044F4  6E04               	movwf	USBTransferOnePacket@len,c
 17033  0044F6  0E02               	movlw	2
 17034  0044F8  EC79  F023         	call	_USBTransferOnePacket
 17035  0044FC  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17036  004500  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17037  004504  C0C9  F0D5         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 17038  004508  C0CA  F0D6         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 17039                           
 17040                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 17041  00450C  0E00               	movlw	0
 17042  00450E  0100               	movlb	0	; () banked
 17043  004510  6FE9               	movwf	_MSD_State& (0+255),b
 17044                           
 17045                           ; BSR set to: 0
 17046                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 17047  004512  69E8               	setf	_MSDCommandState& (0+255),b
 17048                           
 17049                           ; BSR set to: 0
 17050                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 17051  004514  0E00               	movlw	0
 17052  004516  6FE7               	movwf	_MSDReadState& (0+255),b
 17053                           
 17054                           ; BSR set to: 0
 17055                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 17056  004518  0E00               	movlw	0
 17057  00451A  6FE6               	movwf	_MSDWriteState& (0+255),b
 17058                           
 17059                           ; BSR set to: 0
 17060                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 17061  00451C  0E00               	movlw	0
 17062  00451E  6FE2               	movwf	_MSDHostNoData& (0+255),b
 17063                           
 17064                           ; BSR set to: 0
 17065                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 17066  004520  0E00               	movlw	0
 17067  004522  0101               	movlb	1	; () banked
 17068  004524  6F56               	movwf	_gblNumBLKS& (0+255),b
 17069  004526  0E00               	movlw	0
 17070  004528  6F57               	movwf	(_gblNumBLKS+1)& (0+255),b
 17071  00452A  0E00               	movlw	0
 17072  00452C  6F58               	movwf	(_gblNumBLKS+2)& (0+255),b
 17073  00452E  0E00               	movlw	0
 17074  004530  6F59               	movwf	(_gblNumBLKS+3)& (0+255),b
 17075                           
 17076                           ; BSR set to: 1
 17077                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 17078  004532  0E00               	movlw	0
 17079  004534  6F52               	movwf	_gblBLKLen& (0+255),b
 17080  004536  0E00               	movlw	0
 17081  004538  6F53               	movwf	(_gblBLKLen+1)& (0+255),b
 17082  00453A  0E00               	movlw	0
 17083  00453C  6F54               	movwf	(_gblBLKLen+2)& (0+255),b
 17084  00453E  0E00               	movlw	0
 17085  004540  6F55               	movwf	(_gblBLKLen+3)& (0+255),b
 17086                           
 17087                           ; BSR set to: 1
 17088                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 17089  004542  0E01               	movlw	1
 17090  004544  0100               	movlb	0	; () banked
 17091  004546  6FE1               	movwf	_MSDCBWValid& (0+255),b
 17092                           
 17093                           ; BSR set to: 0
 17094                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 17095  004548  0E00               	movlw	0
 17096  00454A  0101               	movlb	1	; () banked
 17097  00454C  6F7F               	movwf	(_gblMediaPresent+1)& (0+255),b
 17098  00454E  0E00               	movlw	0
 17099  004550  6F7E               	movwf	_gblMediaPresent& (0+255),b
 17100                           
 17101                           ; BSR set to: 1
 17102                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 17103  004552  0E00               	movlw	0
 17104  004554  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 17105  004556  D046               	goto	l518
 17106  004558                     
 17107                           ; BSR set to: 1
 17108                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 17109                           
 17110                           ; BSR set to: 1
 17111  004558  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17112  00455A  0D01               	mullw	1
 17113  00455C  0EE3               	movlw	low _SoftDetach
 17114  00455E  24F3               	addwf	prodl,w,c
 17115  004560  6ED9               	movwf	fsr2l,c
 17116  004562  0E00               	movlw	high _SoftDetach
 17117  004564  20F4               	addwfc	prodh,w,c
 17118  004566  6EDA               	movwf	fsr2h,c
 17119  004568  0E00               	movlw	0
 17120  00456A  6EDF               	movwf	indf2,c
 17121                           
 17122                           ; BSR set to: 1
 17123                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 17124  00456C  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 17125  004570  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 17126  004574  D801               	call	u6578
 17127  004576  D009               	goto	u6579
 17128  004578                     u6578:
 17129  004578  0005               	push	
 17130  00457A  6EFA               	movwf	pclath,c
 17131  00457C  51DE               	movf	(_LUN+6)& (0+255),w,b
 17132  00457E  6EFD               	movwf	tosl,c
 17133  004580  51DF               	movf	(_LUN+7)& (0+255),w,b
 17134  004582  6EFE               	movwf	tosh,c
 17135  004584  6AFF               	clrf	tosu,c
 17136  004586  50FA               	movf	pclath,w,c
 17137  004588  0012               	return		;indir
 17138  00458A                     u6579:
 17139  00458A  0900               	iorlw	0
 17140  00458C  B4D8               	btfsc	status,2,c
 17141  00458E  D026               	goto	l521
 17142                           
 17143                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 17144  004590  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 17145  004594  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 17146  004598  D801               	call	u6598
 17147  00459A  D00A               	goto	u6599
 17148  00459C                     u6598:
 17149  00459C  0005               	push	
 17150  00459E  6EFA               	movwf	pclath,c
 17151  0045A0  0101               	movlb	1	; () banked
 17152  0045A2  51D8               	movf	_LUN& (0+255),w,b
 17153  0045A4  6EFD               	movwf	tosl,c
 17154  0045A6  51D9               	movf	(_LUN+1)& (0+255),w,b
 17155  0045A8  6EFE               	movwf	tosh,c
 17156  0045AA  6AFF               	clrf	tosu,c
 17157  0045AC  50FA               	movf	pclath,w,c
 17158  0045AE  0012               	return		;indir
 17159  0045B0                     u6599:
 17160  0045B0  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 17161  0045B2  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 17162  0045B4  B4D8               	btfsc	status,2,c
 17163  0045B6  D012               	goto	l521
 17164                           
 17165                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 17166  0045B8  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 17167  0045BC  0E01               	movlw	1
 17168  0045BE  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 17169  0045C0  0E00               	movlw	0
 17170  0045C2  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 17171  0045C4  2A0C               	incf	??_USBMSDInit,f,c
 17172  0045C6  D003               	goto	u6614
 17173  0045C8                     u6615:
 17174  0045C8  90D8               	bcf	status,0,c
 17175  0045CA  360D               	rlcf	??_USBMSDInit+1,f,c
 17176  0045CC  360E               	rlcf	??_USBMSDInit+2,f,c
 17177  0045CE                     u6614:
 17178  0045CE  2E0C               	decfsz	??_USBMSDInit,f,c
 17179  0045D0  D7FB               	goto	u6615
 17180  0045D2  500D               	movf	??_USBMSDInit+1,w,c
 17181  0045D4  0101               	movlb	1	; () banked
 17182  0045D6  137E               	iorwf	_gblMediaPresent& (0+255),f,b
 17183  0045D8  500E               	movf	??_USBMSDInit+2,w,c
 17184  0045DA  137F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 17185  0045DC                     l521:
 17186                           
 17187                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 17188                           
 17189                           ; BSR set to: 1
 17190                           
 17191                           ; BSR set to: 1
 17192  0045DC  EC9D  F037         	call	_ResetSenseData	;wreg free
 17193  0045E0  0101               	movlb	1	; () banked
 17194  0045E2  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 17195  0045E4                     l518:
 17196                           
 17197                           ; BSR set to: 1
 17198                           
 17199                           ; BSR set to: 1
 17200  0045E4  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17201  0045E6  A4D8               	btfss	status,2,c
 17202  0045E8  0012               	return	
 17203  0045EA  D7B6               	goto	l519
 17204  0045EC                     __end_of_USBMSDInit:
 17205                           	opt stack 0
 17206                           tosu	equ	0xFFF
 17207                           tosh	equ	0xFFE
 17208                           tosl	equ	0xFFD
 17209                           pclath	equ	0xFFA
 17210                           tblptru	equ	0xFF8
 17211                           tblptrh	equ	0xFF7
 17212                           tblptrl	equ	0xFF6
 17213                           tablat	equ	0xFF5
 17214                           prodh	equ	0xFF4
 17215                           prodl	equ	0xFF3
 17216                           intcon	equ	0xFF2
 17217                           intcon2	equ	0xFF1
 17218                           intcon3	equ	0xFF0
 17219                           indf0	equ	0xFEF
 17220                           postinc0	equ	0xFEE
 17221                           fsr0h	equ	0xFEA
 17222                           fsr0l	equ	0xFE9
 17223                           wreg	equ	0xFE8
 17224                           indf1	equ	0xFE7
 17225                           postdec1	equ	0xFE5
 17226                           plusw1	equ	0xFE3
 17227                           fsr1h	equ	0xFE2
 17228                           fsr1l	equ	0xFE1
 17229                           indf2	equ	0xFDF
 17230                           postinc2	equ	0xFDE
 17231                           postdec2	equ	0xFDD
 17232                           plusw2	equ	0xFDB
 17233                           fsr2h	equ	0xFDA
 17234                           fsr2l	equ	0xFD9
 17235                           status	equ	0xFD8
 17236                           
 17237 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 17238 ;; Defined at:
 17239 ;;		line 47 in file "app_device_custom_hid.c"
 17240 ;; Parameters:    Size  Location     Type
 17241 ;;		None
 17242 ;; Auto vars:     Size  Location     Type
 17243 ;;		None
 17244 ;; Return value:  Size  Location     Type
 17245 ;;                  1    wreg      void 
 17246 ;; Registers used:
 17247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17248 ;; Tracked objects:
 17249 ;;		On entry : 0/0
 17250 ;;		On exit  : 0/0
 17251 ;;		Unchanged: 0/0
 17252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17257 ;;Total ram usage:        0 bytes
 17258 ;; Hardware stack levels used:    1
 17259 ;; Hardware stack levels required when called:    2
 17260 ;; This function calls:
 17261 ;;		_USBEnableEndpoint
 17262 ;;		_USBTransferOnePacket
 17263 ;; This function is called by:
 17264 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           	psect	text80
 17269  007B3C                     __ptext80:
 17270                           	opt stack 0
 17271  007B3C                     _APP_DeviceCustomHIDInitialize:
 17272                           	opt stack 26
 17273                           
 17274                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 17275                           
 17276                           ; BSR set to: 1
 17277                           ;incstack = 0
 17278  007B3C  0E00               	movlw	0
 17279  007B3E  0101               	movlb	1	; () banked
 17280  007B40  6F7A               	movwf	_USBInHandle& (0+255),b
 17281  007B42  0E00               	movlw	0
 17282  007B44  6F7B               	movwf	(_USBInHandle+1)& (0+255),b
 17283                           
 17284                           ; BSR set to: 1
 17285                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 17286  007B46  0E1E               	movlw	30
 17287  007B48  6E09               	movwf	USBEnableEndpoint@options,c
 17288  007B4A  0E01               	movlw	1
 17289  007B4C  ECDC  F03C         	call	_USBEnableEndpoint
 17290                           
 17291                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 17292  007B50  0E00               	movlw	0
 17293  007B52  6E01               	movwf	USBTransferOnePacket@dir,c
 17294  007B54  0E90               	movlw	low _ReceivedDataBuffer
 17295  007B56  6E02               	movwf	USBTransferOnePacket@data,c
 17296  007B58  0E02               	movlw	high _ReceivedDataBuffer
 17297  007B5A  6E03               	movwf	USBTransferOnePacket@data+1,c
 17298  007B5C  0E40               	movlw	64
 17299  007B5E  6E04               	movwf	USBTransferOnePacket@len,c
 17300  007B60  0E01               	movlw	1
 17301  007B62  EC79  F023         	call	_USBTransferOnePacket
 17302  007B66  C001  F17C         	movff	?_USBTransferOnePacket,_USBOutHandle
 17303  007B6A  C002  F17D         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 17304  007B6E  0012               	return		;funcret
 17305  007B70                     __end_of_APP_DeviceCustomHIDInitialize:
 17306                           	opt stack 0
 17307                           tosu	equ	0xFFF
 17308                           tosh	equ	0xFFE
 17309                           tosl	equ	0xFFD
 17310                           pclath	equ	0xFFA
 17311                           tblptru	equ	0xFF8
 17312                           tblptrh	equ	0xFF7
 17313                           tblptrl	equ	0xFF6
 17314                           tablat	equ	0xFF5
 17315                           prodh	equ	0xFF4
 17316                           prodl	equ	0xFF3
 17317                           intcon	equ	0xFF2
 17318                           intcon2	equ	0xFF1
 17319                           intcon3	equ	0xFF0
 17320                           indf0	equ	0xFEF
 17321                           postinc0	equ	0xFEE
 17322                           fsr0h	equ	0xFEA
 17323                           fsr0l	equ	0xFE9
 17324                           wreg	equ	0xFE8
 17325                           indf1	equ	0xFE7
 17326                           postdec1	equ	0xFE5
 17327                           plusw1	equ	0xFE3
 17328                           fsr1h	equ	0xFE2
 17329                           fsr1l	equ	0xFE1
 17330                           indf2	equ	0xFDF
 17331                           postinc2	equ	0xFDE
 17332                           postdec2	equ	0xFDD
 17333                           plusw2	equ	0xFDB
 17334                           fsr2h	equ	0xFDA
 17335                           fsr2l	equ	0xFD9
 17336                           status	equ	0xFD8
 17337                           
 17338 ;; *************** function _USBEnableEndpoint *****************
 17339 ;; Defined at:
 17340 ;;		line 878 in file "usb_device.c"
 17341 ;; Parameters:    Size  Location     Type
 17342 ;;  ep              1    wreg     unsigned char 
 17343 ;;  options         1    8[COMRAM] unsigned char 
 17344 ;; Auto vars:     Size  Location     Type
 17345 ;;  ep              1   11[COMRAM] unsigned char 
 17346 ;;  p               2    9[COMRAM] PTR unsigned char 
 17347 ;;		 -> UEP0(1), 
 17348 ;; Return value:  Size  Location     Type
 17349 ;;                  1    wreg      void 
 17350 ;; Registers used:
 17351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17352 ;; Tracked objects:
 17353 ;;		On entry : 0/0
 17354 ;;		On exit  : 0/0
 17355 ;;		Unchanged: 0/0
 17356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17357 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17358 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17361 ;;Total ram usage:        4 bytes
 17362 ;; Hardware stack levels used:    1
 17363 ;; Hardware stack levels required when called:    1
 17364 ;; This function calls:
 17365 ;;		_USBConfigureEndpoint
 17366 ;; This function is called by:
 17367 ;;		_APP_DeviceCustomHIDInitialize
 17368 ;;		_APP_DeviceMSDInitialize
 17369 ;; This function uses a non-reentrant model
 17370 ;;
 17371                           
 17372                           	psect	text81
 17373  0079B8                     __ptext81:
 17374                           	opt stack 0
 17375  0079B8                     _USBEnableEndpoint:
 17376                           	opt stack 26
 17377                           
 17378                           ;incstack = 0
 17379                           ;USBEnableEndpoint@ep stored from wreg
 17380  0079B8  6E0C               	movwf	USBEnableEndpoint@ep,c
 17381                           
 17382                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 17383  0079BA  A409               	btfss	USBEnableEndpoint@options,2,c
 17384  0079BC  D005               	goto	l178
 17385                           
 17386                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 17387  0079BE  0E00               	movlw	0
 17388  0079C0  6E01               	movwf	USBConfigureEndpoint@direction,c
 17389  0079C2  500C               	movf	USBEnableEndpoint@ep,w,c
 17390  0079C4  EC2A  F030         	call	_USBConfigureEndpoint
 17391  0079C8                     l178:
 17392                           
 17393                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 17394  0079C8  A209               	btfss	USBEnableEndpoint@options,1,c
 17395  0079CA  D005               	goto	l179
 17396                           
 17397                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 17398  0079CC  0E01               	movlw	1
 17399  0079CE  6E01               	movwf	USBConfigureEndpoint@direction,c
 17400  0079D0  500C               	movf	USBEnableEndpoint@ep,w,c
 17401  0079D2  EC2A  F030         	call	_USBConfigureEndpoint
 17402  0079D6                     l179:
 17403                           
 17404                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 17405  0079D6  500C               	movf	USBEnableEndpoint@ep,w,c
 17406  0079D8  0D01               	mullw	1
 17407  0079DA  0E26               	movlw	38
 17408  0079DC  24F3               	addwf	prodl,w,c
 17409  0079DE  6E0A               	movwf	USBEnableEndpoint@p,c
 17410  0079E0  0E0F               	movlw	15
 17411  0079E2  20F4               	addwfc	prodh,w,c
 17412  0079E4  6E0B               	movwf	USBEnableEndpoint@p+1,c
 17413                           
 17414                           ;usb_device.c: 901: *p = options;
 17415  0079E6  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 17416  0079EA  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 17417  0079EE  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 17418  0079F2  0012               	return		;funcret
 17419  0079F4                     __end_of_USBEnableEndpoint:
 17420                           	opt stack 0
 17421                           tosu	equ	0xFFF
 17422                           tosh	equ	0xFFE
 17423                           tosl	equ	0xFFD
 17424                           pclath	equ	0xFFA
 17425                           tblptru	equ	0xFF8
 17426                           tblptrh	equ	0xFF7
 17427                           tblptrl	equ	0xFF6
 17428                           tablat	equ	0xFF5
 17429                           prodh	equ	0xFF4
 17430                           prodl	equ	0xFF3
 17431                           intcon	equ	0xFF2
 17432                           intcon2	equ	0xFF1
 17433                           intcon3	equ	0xFF0
 17434                           indf0	equ	0xFEF
 17435                           postinc0	equ	0xFEE
 17436                           fsr0h	equ	0xFEA
 17437                           fsr0l	equ	0xFE9
 17438                           wreg	equ	0xFE8
 17439                           indf1	equ	0xFE7
 17440                           postdec1	equ	0xFE5
 17441                           plusw1	equ	0xFE3
 17442                           fsr1h	equ	0xFE2
 17443                           fsr1l	equ	0xFE1
 17444                           indf2	equ	0xFDF
 17445                           postinc2	equ	0xFDE
 17446                           postdec2	equ	0xFDD
 17447                           plusw2	equ	0xFDB
 17448                           fsr2h	equ	0xFDA
 17449                           fsr2l	equ	0xFD9
 17450                           status	equ	0xFD8
 17451                           
 17452 ;; *************** function _USBConfigureEndpoint *****************
 17453 ;; Defined at:
 17454 ;;		line 1545 in file "usb_device.c"
 17455 ;; Parameters:    Size  Location     Type
 17456 ;;  EPNum           1    wreg     unsigned char 
 17457 ;;  direction       1    0[COMRAM] unsigned char 
 17458 ;; Auto vars:     Size  Location     Type
 17459 ;;  EPNum           1    5[COMRAM] unsigned char 
 17460 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 17461 ;;		 -> BDT(48), 
 17462 ;; Return value:  Size  Location     Type
 17463 ;;                  1    wreg      void 
 17464 ;; Registers used:
 17465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17466 ;; Tracked objects:
 17467 ;;		On entry : 0/0
 17468 ;;		On exit  : 0/0
 17469 ;;		Unchanged: 0/0
 17470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17471 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17472 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17473 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17474 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17475 ;;Total ram usage:        8 bytes
 17476 ;; Hardware stack levels used:    1
 17477 ;; This function calls:
 17478 ;;		Nothing
 17479 ;; This function is called by:
 17480 ;;		_USBEnableEndpoint
 17481 ;; This function uses a non-reentrant model
 17482 ;;
 17483                           
 17484                           	psect	text82
 17485  006054                     __ptext82:
 17486                           	opt stack 0
 17487  006054                     _USBConfigureEndpoint:
 17488                           	opt stack 26
 17489                           
 17490                           ;incstack = 0
 17491                           ;USBConfigureEndpoint@EPNum stored from wreg
 17492  006054  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 17493                           
 17494                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 17495  006056  0E00               	movlw	0
 17496  006058  6E07               	movwf	USBConfigureEndpoint@handle,c
 17497  00605A  0E0D               	movlw	13
 17498  00605C  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 17499                           
 17500                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 17501  00605E  5001               	movf	USBConfigureEndpoint@direction,w,c
 17502  006060  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 17503  006062  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 17504  006064  90D8               	bcf	status,0,c
 17505  006066  3602               	rlcf	??_USBConfigureEndpoint,f,c
 17506  006068  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 17507  00606A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17508  00606C  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 17509  00606E  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 17510  006070  90D8               	bcf	status,0,c
 17511  006072  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17512  006074  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17513  006076  90D8               	bcf	status,0,c
 17514  006078  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17515  00607A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17516  00607C  5002               	movf	??_USBConfigureEndpoint,w,c
 17517  00607E  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 17518  006080  5003               	movf	??_USBConfigureEndpoint+1,w,c
 17519  006082  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 17520  006084  90D8               	bcf	status,0,c
 17521  006086  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17522  006088  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17523  00608A  90D8               	bcf	status,0,c
 17524  00608C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17525  00608E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17526  006090  5004               	movf	??_USBConfigureEndpoint+2,w,c
 17527  006092  2607               	addwf	USBConfigureEndpoint@handle,f,c
 17528  006094  5005               	movf	??_USBConfigureEndpoint+3,w,c
 17529  006096  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 17530                           
 17531                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 17532  006098  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17533  00609C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17534  0060A0  9EDF               	bcf	indf2,7,c
 17535                           
 17536                           ;usb_device.c: 1559: if(direction == 0)
 17537  0060A2  5001               	movf	USBConfigureEndpoint@direction,w,c
 17538  0060A4  A4D8               	btfss	status,2,c
 17539  0060A6  D007               	goto	l214
 17540                           
 17541                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 17542  0060A8  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17543  0060AA  0D02               	mullw	2
 17544  0060AC  0E40               	movlw	low _pBDTEntryOut
 17545  0060AE  24F3               	addwf	prodl,w,c
 17546  0060B0  6ED9               	movwf	fsr2l,c
 17547  0060B2  0E01               	movlw	high _pBDTEntryOut
 17548  0060B4  D006               	goto	L14
 17549  0060B6                     l214:
 17550                           
 17551                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 17552  0060B6  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17553  0060B8  0D02               	mullw	2
 17554  0060BA  0EC5               	movlw	low _pBDTEntryIn
 17555  0060BC  24F3               	addwf	prodl,w,c
 17556  0060BE  6ED9               	movwf	fsr2l,c
 17557  0060C0  0E00               	movlw	high _pBDTEntryIn
 17558  0060C2                     L14:
 17559  0060C2  20F4               	addwfc	prodh,w,c
 17560  0060C4  6EDA               	movwf	fsr2h,c
 17561  0060C6  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 17562  0060CA  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 17563                           
 17564                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 17565  0060CE  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17566  0060D2  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17567  0060D6  9CDF               	bcf	indf2,6,c
 17568                           
 17569                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 17570  0060D8  EE20 F004          	lfsr	2,4
 17571  0060DC  5007               	movf	USBConfigureEndpoint@handle,w,c
 17572  0060DE  26D9               	addwf	fsr2l,f,c
 17573  0060E0  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 17574  0060E2  22DA               	addwfc	fsr2h,f,c
 17575  0060E4  8CDF               	bsf	indf2,6,c
 17576  0060E6  0012               	return		;funcret
 17577  0060E8                     __end_of_USBConfigureEndpoint:
 17578                           	opt stack 0
 17579                           tosu	equ	0xFFF
 17580                           tosh	equ	0xFFE
 17581                           tosl	equ	0xFFD
 17582                           pclath	equ	0xFFA
 17583                           tblptru	equ	0xFF8
 17584                           tblptrh	equ	0xFF7
 17585                           tblptrl	equ	0xFF6
 17586                           tablat	equ	0xFF5
 17587                           prodh	equ	0xFF4
 17588                           prodl	equ	0xFF3
 17589                           intcon	equ	0xFF2
 17590                           intcon2	equ	0xFF1
 17591                           intcon3	equ	0xFF0
 17592                           indf0	equ	0xFEF
 17593                           postinc0	equ	0xFEE
 17594                           fsr0h	equ	0xFEA
 17595                           fsr0l	equ	0xFE9
 17596                           wreg	equ	0xFE8
 17597                           indf1	equ	0xFE7
 17598                           postdec1	equ	0xFE5
 17599                           plusw1	equ	0xFE3
 17600                           fsr1h	equ	0xFE2
 17601                           fsr1l	equ	0xFE1
 17602                           indf2	equ	0xFDF
 17603                           postinc2	equ	0xFDE
 17604                           postdec2	equ	0xFDD
 17605                           plusw2	equ	0xFDB
 17606                           fsr2h	equ	0xFDA
 17607                           fsr2l	equ	0xFD9
 17608                           status	equ	0xFD8
 17609                           
 17610 ;; *************** function _USBCtrlTrfOutHandler *****************
 17611 ;; Defined at:
 17612 ;;		line 2540 in file "usb_device.c"
 17613 ;; Parameters:    Size  Location     Type
 17614 ;;		None
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;		None
 17617 ;; Return value:  Size  Location     Type
 17618 ;;                  1    wreg      void 
 17619 ;; Registers used:
 17620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17621 ;; Tracked objects:
 17622 ;;		On entry : 0/0
 17623 ;;		On exit  : 0/0
 17624 ;;		Unchanged: 0/0
 17625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17630 ;;Total ram usage:        0 bytes
 17631 ;; Hardware stack levels used:    1
 17632 ;; Hardware stack levels required when called:    2
 17633 ;; This function calls:
 17634 ;;		_USBCtrlTrfRxService
 17635 ;; This function is called by:
 17636 ;;		_USBCtrlEPService
 17637 ;; This function uses a non-reentrant model
 17638 ;;
 17639                           
 17640                           	psect	text83
 17641  006FFC                     __ptext83:
 17642                           	opt stack 0
 17643  006FFC                     _USBCtrlTrfOutHandler:
 17644                           	opt stack 26
 17645                           
 17646                           ;usb_device.c: 2542: if(controlTransferState == 2)
 17647                           
 17648                           ;incstack = 0
 17649  006FFC  0E02               	movlw	2
 17650  006FFE  0100               	movlb	0	; () banked
 17651  007000  19F5               	xorwf	_controlTransferState& (0+255),w,b
 17652  007002  A4D8               	btfss	status,2,c
 17653  007004  D003               	goto	l320
 17654                           
 17655                           ; BSR set to: 0
 17656                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 17657  007006  EC57  F020         	call	_USBCtrlTrfRxService	;wreg free
 17658                           
 17659                           ;usb_device.c: 2545: }
 17660  00700A  0012               	return	
 17661  00700C                     l320:
 17662                           
 17663                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 17664  00700C  0E00               	movlw	0
 17665  00700E  0100               	movlb	0	; () banked
 17666  007010  6FF5               	movwf	_controlTransferState& (0+255),b
 17667                           
 17668                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 17669  007012  51F1               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 17670  007014  A4D8               	btfss	status,2,c
 17671  007016  D01F               	goto	l322
 17672                           
 17673                           ; BSR set to: 0
 17674                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 17675  007018  EE20 F001          	lfsr	2,1
 17676  00701C  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17677  00701E  26D9               	addwf	fsr2l,f,c
 17678  007020  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17679  007022  22DA               	addwfc	fsr2h,f,c
 17680  007024  0E08               	movlw	8
 17681  007026  6EDF               	movwf	indf2,c
 17682                           
 17683                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17684  007028  EE20 F002          	lfsr	2,2
 17685  00702C  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17686  00702E  26D9               	addwf	fsr2l,f,c
 17687  007030  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17688  007032  22DA               	addwfc	fsr2h,f,c
 17689  007034  0E30               	movlw	48
 17690  007036  6EDE               	movwf	postinc2,c
 17691  007038  0E0D               	movlw	13
 17692  00703A  6EDD               	movwf	postdec2,c
 17693                           
 17694                           ; BSR set to: 0
 17695                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17696  00703C  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17697  007040  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17698  007044  0E0C               	movlw	12
 17699  007046  6EDF               	movwf	indf2,c
 17700                           
 17701                           ; BSR set to: 0
 17702                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17703  007048  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17704  00704C  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17705  007050  0E00               	movlw	0
 17706  007052  8EDB               	bsf	plusw2,7,c
 17707                           
 17708                           ;usb_device.c: 2563: }
 17709  007054  0012               	return	
 17710  007056                     l322:
 17711                           
 17712                           ; BSR set to: 0
 17713                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 17714                           
 17715                           ; BSR set to: 0
 17716  007056  0E00               	movlw	0
 17717  007058  6FF1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17718                           
 17719                           ; BSR set to: 0
 17720  00705A  0012               	return	
 17721  00705C                     __end_of_USBCtrlTrfOutHandler:
 17722                           	opt stack 0
 17723                           tosu	equ	0xFFF
 17724                           tosh	equ	0xFFE
 17725                           tosl	equ	0xFFD
 17726                           pclath	equ	0xFFA
 17727                           tblptru	equ	0xFF8
 17728                           tblptrh	equ	0xFF7
 17729                           tblptrl	equ	0xFF6
 17730                           tablat	equ	0xFF5
 17731                           prodh	equ	0xFF4
 17732                           prodl	equ	0xFF3
 17733                           intcon	equ	0xFF2
 17734                           intcon2	equ	0xFF1
 17735                           intcon3	equ	0xFF0
 17736                           indf0	equ	0xFEF
 17737                           postinc0	equ	0xFEE
 17738                           fsr0h	equ	0xFEA
 17739                           fsr0l	equ	0xFE9
 17740                           wreg	equ	0xFE8
 17741                           indf1	equ	0xFE7
 17742                           postdec1	equ	0xFE5
 17743                           plusw1	equ	0xFE3
 17744                           fsr1h	equ	0xFE2
 17745                           fsr1l	equ	0xFE1
 17746                           indf2	equ	0xFDF
 17747                           postinc2	equ	0xFDE
 17748                           postdec2	equ	0xFDD
 17749                           plusw2	equ	0xFDB
 17750                           fsr2h	equ	0xFDA
 17751                           fsr2l	equ	0xFD9
 17752                           status	equ	0xFD8
 17753                           
 17754 ;; *************** function _USBCtrlTrfRxService *****************
 17755 ;; Defined at:
 17756 ;;		line 1854 in file "usb_device.c"
 17757 ;; Parameters:    Size  Location     Type
 17758 ;;		None
 17759 ;; Auto vars:     Size  Location     Type
 17760 ;;  byteToRead      1    1[COMRAM] unsigned char 
 17761 ;;  i               1    0[COMRAM] unsigned char 
 17762 ;; Return value:  Size  Location     Type
 17763 ;;                  1    wreg      void 
 17764 ;; Registers used:
 17765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17766 ;; Tracked objects:
 17767 ;;		On entry : 0/0
 17768 ;;		On exit  : 0/0
 17769 ;;		Unchanged: 0/0
 17770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17775 ;;Total ram usage:        2 bytes
 17776 ;; Hardware stack levels used:    1
 17777 ;; Hardware stack levels required when called:    1
 17778 ;; This function calls:
 17779 ;;		_USBCtrlEPAllowStatusStage
 17780 ;; This function is called by:
 17781 ;;		_USBCtrlTrfOutHandler
 17782 ;; This function uses a non-reentrant model
 17783 ;;
 17784                           
 17785                           	psect	text84
 17786  0040AE                     __ptext84:
 17787                           	opt stack 0
 17788  0040AE                     _USBCtrlTrfRxService:
 17789                           	opt stack 26
 17790                           
 17791                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 17792                           
 17793                           ;incstack = 0
 17794  0040AE  0100               	movlb	0	; () banked
 17795  0040B0  EE20 F001          	lfsr	2,1
 17796  0040B4  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17797  0040B6  26D9               	addwf	fsr2l,f,c
 17798  0040B8  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17799  0040BA  22DA               	addwfc	fsr2h,f,c
 17800  0040BC  50DF               	movf	indf2,w,c
 17801  0040BE  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 17805  0040C0  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17806  0040C2  0101               	movlb	1	; () banked
 17807  0040C4  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 17808  0040C6  0E00               	movlw	0
 17809  0040C8  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 17810  0040CA  A0D8               	btfss	status,0,c
 17811                           
 17812                           ; BSR set to: 1
 17813                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 17814  0040CC  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 17815                           
 17816                           ; BSR set to: 1
 17817                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 17818                           
 17819                           ; BSR set to: 1
 17820  0040D0  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17821  0040D2  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 17822  0040D4  0E00               	movlw	0
 17823  0040D6  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 17824                           
 17825                           ; BSR set to: 1
 17826                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 17827  0040D8  0E00               	movlw	0
 17828  0040DA  6E01               	movwf	USBCtrlTrfRxService@i,c
 17829  0040DC  D011               	goto	l248
 17830  0040DE                     
 17831                           ; BSR set to: 1
 17832                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 17833                           
 17834                           ; BSR set to: 1
 17835  0040DE  5001               	movf	USBCtrlTrfRxService@i,w,c
 17836  0040E0  0D01               	mullw	1
 17837  0040E2  0E38               	movlw	56
 17838  0040E4  24F3               	addwf	prodl,w,c
 17839  0040E6  6ED9               	movwf	fsr2l,c
 17840  0040E8  0E0D               	movlw	13
 17841  0040EA  20F4               	addwfc	prodh,w,c
 17842  0040EC  6EDA               	movwf	fsr2h,c
 17843  0040EE  C131  FFE1         	movff	_outPipes,fsr1l
 17844  0040F2  C132  FFE2         	movff	_outPipes+1,fsr1h
 17845  0040F6  CFDF FFE7          	movff	indf2,indf1
 17846                           
 17847                           ; BSR set to: 1
 17848  0040FA  4B31               	infsnz	_outPipes& (0+255),f,b
 17849  0040FC  2B32               	incf	(_outPipes+1)& (0+255),f,b
 17850                           
 17851                           ; BSR set to: 1
 17852  0040FE  2A01               	incf	USBCtrlTrfRxService@i,f,c
 17853  004100                     l248:
 17854                           
 17855                           ; BSR set to: 1
 17856                           
 17857                           ; BSR set to: 1
 17858  004100  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17859  004102  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 17860  004104  A0D8               	btfss	status,0,c
 17861  004106  D7EB               	goto	l249
 17862                           
 17863                           ; BSR set to: 1
 17864                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 17865                           
 17866                           ; BSR set to: 1
 17867  004108  5135               	movf	(_outPipes+4)& (0+255),w,b
 17868  00410A  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 17869  00410C  B4D8               	btfsc	status,2,c
 17870  00410E  D033               	goto	l251
 17871                           
 17872                           ; BSR set to: 1
 17873                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 17874  004110  0100               	movlb	0	; () banked
 17875  004112  EE20 F001          	lfsr	2,1
 17876  004116  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17877  004118  26D9               	addwf	fsr2l,f,c
 17878  00411A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17879  00411C  22DA               	addwfc	fsr2h,f,c
 17880  00411E  0E08               	movlw	8
 17881  004120  6EDF               	movwf	indf2,c
 17882                           
 17883                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 17884  004122  EE20 F002          	lfsr	2,2
 17885  004126  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17886  004128  26D9               	addwf	fsr2l,f,c
 17887  00412A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17888  00412C  22DA               	addwfc	fsr2h,f,c
 17889  00412E  0E38               	movlw	56
 17890  004130  6EDE               	movwf	postinc2,c
 17891  004132  0E0D               	movlw	13
 17892  004134  6EDD               	movwf	postdec2,c
 17893                           
 17894                           ; BSR set to: 0
 17895                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 17896  004136  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17897  00413A  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17898  00413E  BCDF               	btfsc	indf2,6,c
 17899  004140  D00D               	goto	l252
 17900                           
 17901                           ; BSR set to: 0
 17902                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 17903  004142  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17904  004146  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17905  00414A  0E48               	movlw	72
 17906  00414C  6EDF               	movwf	indf2,c
 17907                           
 17908                           ; BSR set to: 0
 17909                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17910  00414E  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17911  004152  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17912  004156  0E00               	movlw	0
 17913  004158  8EDB               	bsf	plusw2,7,c
 17914                           
 17915                           ;usb_device.c: 1891: }
 17916  00415A  0012               	return	
 17917  00415C                     l252:
 17918                           
 17919                           ; BSR set to: 0
 17920                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 17921                           
 17922                           ; BSR set to: 0
 17923  00415C  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17924  004160  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17925  004164  0E08               	movlw	8
 17926  004166  6EDF               	movwf	indf2,c
 17927                           
 17928                           ; BSR set to: 0
 17929                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17930  004168  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17931  00416C  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17932  004170  0E00               	movlw	0
 17933  004172  8EDB               	bsf	plusw2,7,c
 17934                           
 17935                           ; BSR set to: 0
 17936                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 17937  004174  0012               	return	
 17938  004176                     l251:
 17939                           
 17940                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 17941                           
 17942                           ; BSR set to: 0
 17943  004176  0100               	movlb	0	; () banked
 17944  004178  EE20 F001          	lfsr	2,1
 17945  00417C  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17946  00417E  26D9               	addwf	fsr2l,f,c
 17947  004180  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17948  004182  22DA               	addwfc	fsr2h,f,c
 17949  004184  0E08               	movlw	8
 17950  004186  6EDF               	movwf	indf2,c
 17951                           
 17952                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17953  004188  EE20 F002          	lfsr	2,2
 17954  00418C  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17955  00418E  26D9               	addwf	fsr2l,f,c
 17956  004190  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17957  004192  22DA               	addwfc	fsr2h,f,c
 17958  004194  0E30               	movlw	48
 17959  004196  6EDE               	movwf	postinc2,c
 17960  004198  0E0D               	movlw	13
 17961  00419A  6EDD               	movwf	postdec2,c
 17962                           
 17963                           ; BSR set to: 0
 17964                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17965  00419C  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17966  0041A0  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17967  0041A4  0E04               	movlw	4
 17968  0041A6  6EDF               	movwf	indf2,c
 17969                           
 17970                           ; BSR set to: 0
 17971                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17972  0041A8  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17973  0041AC  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17974  0041B0  0E00               	movlw	0
 17975  0041B2  8EDB               	bsf	plusw2,7,c
 17976                           
 17977                           ; BSR set to: 0
 17978                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 17979                           
 17980                           ; BSR set to: 0
 17981  0041B4  0101               	movlb	1	; () banked
 17982  0041B6  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17983                           
 17984                           ; BSR set to: 1
 17985                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 17986  0041B8  0100               	movlb	0	; () banked
 17987  0041BA  51EF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17988  0041BC  A4D8               	btfss	status,2,c
 17989  0041BE  0012               	return	
 17990                           
 17991                           ; BSR set to: 0
 17992                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 17993  0041C0  EC12  F02A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17994  0041C4  0012               	return	
 17995  0041C6                     __end_of_USBCtrlTrfRxService:
 17996                           	opt stack 0
 17997                           tosu	equ	0xFFF
 17998                           tosh	equ	0xFFE
 17999                           tosl	equ	0xFFD
 18000                           pclath	equ	0xFFA
 18001                           tblptru	equ	0xFF8
 18002                           tblptrh	equ	0xFF7
 18003                           tblptrl	equ	0xFF6
 18004                           tablat	equ	0xFF5
 18005                           prodh	equ	0xFF4
 18006                           prodl	equ	0xFF3
 18007                           intcon	equ	0xFF2
 18008                           intcon2	equ	0xFF1
 18009                           intcon3	equ	0xFF0
 18010                           indf0	equ	0xFEF
 18011                           postinc0	equ	0xFEE
 18012                           fsr0h	equ	0xFEA
 18013                           fsr0l	equ	0xFE9
 18014                           wreg	equ	0xFE8
 18015                           indf1	equ	0xFE7
 18016                           postdec1	equ	0xFE5
 18017                           plusw1	equ	0xFE3
 18018                           fsr1h	equ	0xFE2
 18019                           fsr1l	equ	0xFE1
 18020                           indf2	equ	0xFDF
 18021                           postinc2	equ	0xFDE
 18022                           postdec2	equ	0xFDD
 18023                           plusw2	equ	0xFDB
 18024                           fsr2h	equ	0xFDA
 18025                           fsr2l	equ	0xFD9
 18026                           status	equ	0xFD8
 18027                           
 18028 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 18029 ;; Defined at:
 18030 ;;		line 1418 in file "usb_device.c"
 18031 ;; Parameters:    Size  Location     Type
 18032 ;;		None
 18033 ;; Auto vars:     Size  Location     Type
 18034 ;;		None
 18035 ;; Return value:  Size  Location     Type
 18036 ;;                  1    wreg      void 
 18037 ;; Registers used:
 18038 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18039 ;; Tracked objects:
 18040 ;;		On entry : 0/0
 18041 ;;		On exit  : 0/0
 18042 ;;		Unchanged: 0/0
 18043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18048 ;;Total ram usage:        0 bytes
 18049 ;; Hardware stack levels used:    1
 18050 ;; This function calls:
 18051 ;;		Nothing
 18052 ;; This function is called by:
 18053 ;;		_USBDeviceTasks
 18054 ;;		_USBCtrlEPServiceComplete
 18055 ;;		_USBCtrlTrfRxService
 18056 ;; This function uses a non-reentrant model
 18057 ;;
 18058                           
 18059                           	psect	text85
 18060  005424                     __ptext85:
 18061                           	opt stack 0
 18062  005424                     _USBCtrlEPAllowStatusStage:
 18063                           	opt stack 26
 18064                           
 18065                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 18066                           
 18067                           ;incstack = 0
 18068  005424  0100               	movlb	0	; () banked
 18069  005426  51EE               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 18070  005428  A4D8               	btfss	status,2,c
 18071  00542A  0012               	return	
 18072                           
 18073                           ; BSR set to: 0
 18074                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 18075  00542C  0E01               	movlw	1
 18076  00542E  6FEE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18077                           
 18078                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 18079  005430  51ED               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 18080  005432  A4D8               	btfss	status,2,c
 18081  005434  0012               	return	
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 18085  005436  0E01               	movlw	1
 18086  005438  6FED               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;usb_device.c: 1434: if(controlTransferState == 2)
 18090  00543A  0E02               	movlw	2
 18091  00543C  19F5               	xorwf	_controlTransferState& (0+255),w,b
 18092  00543E  A4D8               	btfss	status,2,c
 18093  005440  D015               	goto	l202
 18094                           
 18095                           ; BSR set to: 0
 18096                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 18097  005442  EE20 F001          	lfsr	2,1
 18098  005446  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 18099  005448  26D9               	addwf	fsr2l,f,c
 18100  00544A  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18101  00544C  22DA               	addwfc	fsr2h,f,c
 18102  00544E  0E00               	movlw	0
 18103  005450  6EDF               	movwf	indf2,c
 18104                           
 18105                           ; BSR set to: 0
 18106                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18107  005452  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18108  005456  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18109  00545A  0E48               	movlw	72
 18110  00545C  6EDF               	movwf	indf2,c
 18111                           
 18112                           ; BSR set to: 0
 18113                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18114  00545E  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18115  005462  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18116  005466  0E00               	movlw	0
 18117  005468  8EDB               	bsf	plusw2,7,c
 18118                           
 18119                           ;usb_device.c: 1439: }
 18120  00546A  0012               	return	
 18121  00546C                     l202:
 18122                           
 18123                           ; BSR set to: 0
 18124                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 18125                           
 18126                           ; BSR set to: 0
 18127  00546C  05F5               	decf	_controlTransferState& (0+255),w,b
 18128  00546E  A4D8               	btfss	status,2,c
 18129  005470  0012               	return	
 18130                           
 18131                           ; BSR set to: 0
 18132                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 18133  005472  0E00               	movlw	0
 18134  005474  6FF1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 18138  005476  EE20 F001          	lfsr	2,1
 18139  00547A  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18140  00547C  26D9               	addwf	fsr2l,f,c
 18141  00547E  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18142  005480  22DA               	addwfc	fsr2h,f,c
 18143  005482  0E08               	movlw	8
 18144  005484  6EDF               	movwf	indf2,c
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18148  005486  EE20 F002          	lfsr	2,2
 18149  00548A  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18150  00548C  26D9               	addwf	fsr2l,f,c
 18151  00548E  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18152  005490  22DA               	addwfc	fsr2h,f,c
 18153  005492  0E30               	movlw	48
 18154  005494  6EDE               	movwf	postinc2,c
 18155  005496  0E0D               	movlw	13
 18156  005498  6EDD               	movwf	postdec2,c
 18157                           
 18158                           ; BSR set to: 0
 18159                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 18160  00549A  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18161  00549E  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18162  0054A2  0E04               	movlw	4
 18163  0054A4  6EDF               	movwf	indf2,c
 18164                           
 18165                           ; BSR set to: 0
 18166                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 18167  0054A6  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18168  0054AA  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18169  0054AE  0E00               	movlw	0
 18170  0054B0  8EDB               	bsf	plusw2,7,c
 18171                           
 18172                           ; BSR set to: 0
 18173                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 18174  0054B2  0E01               	movlw	1
 18175  0054B4  6FF1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18176                           
 18177                           ; BSR set to: 0
 18178                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 18179  0054B6  EE20 F001          	lfsr	2,1
 18180  0054BA  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18181  0054BC  26D9               	addwf	fsr2l,f,c
 18182  0054BE  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18183  0054C0  22DA               	addwfc	fsr2h,f,c
 18184  0054C2  0E08               	movlw	8
 18185  0054C4  6EDF               	movwf	indf2,c
 18186                           
 18187                           ; BSR set to: 0
 18188                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18189  0054C6  EE20 F002          	lfsr	2,2
 18190  0054CA  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18191  0054CC  26D9               	addwf	fsr2l,f,c
 18192  0054CE  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18193  0054D0  22DA               	addwfc	fsr2h,f,c
 18194  0054D2  0E30               	movlw	48
 18195  0054D4  6EDE               	movwf	postinc2,c
 18196  0054D6  0E0D               	movlw	13
 18197  0054D8  6EDD               	movwf	postdec2,c
 18198                           
 18199                           ; BSR set to: 0
 18200                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 18201  0054DA  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18202  0054DE  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18203  0054E2  0E80               	movlw	128
 18204  0054E4  6EDF               	movwf	indf2,c
 18205                           
 18206                           ; BSR set to: 0
 18207                           
 18208                           ; BSR set to: 0
 18209                           
 18210                           ; BSR set to: 0
 18211  0054E6  0012               	return	
 18212  0054E8                     __end_of_USBCtrlEPAllowStatusStage:
 18213                           	opt stack 0
 18214                           tosu	equ	0xFFF
 18215                           tosh	equ	0xFFE
 18216                           tosl	equ	0xFFD
 18217                           pclath	equ	0xFFA
 18218                           tblptru	equ	0xFF8
 18219                           tblptrh	equ	0xFF7
 18220                           tblptrl	equ	0xFF6
 18221                           tablat	equ	0xFF5
 18222                           prodh	equ	0xFF4
 18223                           prodl	equ	0xFF3
 18224                           intcon	equ	0xFF2
 18225                           intcon2	equ	0xFF1
 18226                           intcon3	equ	0xFF0
 18227                           indf0	equ	0xFEF
 18228                           postinc0	equ	0xFEE
 18229                           fsr0h	equ	0xFEA
 18230                           fsr0l	equ	0xFE9
 18231                           wreg	equ	0xFE8
 18232                           indf1	equ	0xFE7
 18233                           postdec1	equ	0xFE5
 18234                           plusw1	equ	0xFE3
 18235                           fsr1h	equ	0xFE2
 18236                           fsr1l	equ	0xFE1
 18237                           indf2	equ	0xFDF
 18238                           postinc2	equ	0xFDE
 18239                           postdec2	equ	0xFDD
 18240                           plusw2	equ	0xFDB
 18241                           fsr2h	equ	0xFDA
 18242                           fsr2l	equ	0xFD9
 18243                           status	equ	0xFD8
 18244                           
 18245 ;; *************** function _USBCtrlTrfInHandler *****************
 18246 ;; Defined at:
 18247 ;;		line 2594 in file "usb_device.c"
 18248 ;; Parameters:    Size  Location     Type
 18249 ;;		None
 18250 ;; Auto vars:     Size  Location     Type
 18251 ;;  lastDTS         1    1[COMRAM] unsigned char 
 18252 ;; Return value:  Size  Location     Type
 18253 ;;                  1    wreg      void 
 18254 ;; Registers used:
 18255 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18256 ;; Tracked objects:
 18257 ;;		On entry : 0/0
 18258 ;;		On exit  : 0/0
 18259 ;;		Unchanged: 0/0
 18260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18265 ;;Total ram usage:        1 bytes
 18266 ;; Hardware stack levels used:    1
 18267 ;; Hardware stack levels required when called:    1
 18268 ;; This function calls:
 18269 ;;		_USBCtrlTrfTxService
 18270 ;; This function is called by:
 18271 ;;		_USBCtrlEPService
 18272 ;; This function uses a non-reentrant model
 18273 ;;
 18274                           
 18275                           	psect	text86
 18276  00535C                     __ptext86:
 18277                           	opt stack 0
 18278  00535C                     _USBCtrlTrfInHandler:
 18279                           	opt stack 27
 18280                           
 18281                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 18282                           
 18283                           ; BSR set to: 0
 18284                           ;incstack = 0
 18285  00535C  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18286  005360  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18287  005364  0100               	movlb	0	; () banked
 18288  005366  0E00               	movlw	0
 18289  005368  BCDF               	btfsc	indf2,6,c
 18290  00536A  0E01               	movlw	1
 18291  00536C  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 18292                           
 18293                           ; BSR set to: 0
 18294                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 18295  00536E  0E04               	movlw	4
 18296  005370  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 18297  005372  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 18298  005374  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18299  005376  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18300                           
 18301                           ; BSR set to: 0
 18302                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 18303  005378  0E08               	movlw	8
 18304  00537A  185F               	xorwf	_USBDeviceState,w,c
 18305  00537C  A4D8               	btfss	status,2,c
 18306  00537E  D00C               	goto	l329
 18307                           
 18308                           ; BSR set to: 0
 18309                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 18310  005380  010D               	movlb	13	; () banked
 18311  005382  5132               	movf	50,w,b	;volatile
 18312  005384  0B7F               	andlw	127
 18313  005386  010F               	movlb	15	; () banked
 18314  005388  6F38               	movwf	56,b	;volatile
 18315                           
 18316                           ; BSR set to: 15
 18317                           ;usb_device.c: 2609: if(UADDR != 0u)
 18318  00538A  5138               	movf	56,w,b	;volatile
 18319  00538C  B4D8               	btfsc	status,2,c
 18320  00538E  D002               	goto	l328
 18321                           
 18322                           ; BSR set to: 15
 18323                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 18324  005390  0E10               	movlw	16
 18325  005392  D001               	goto	L15
 18326  005394                     l328:
 18327                           
 18328                           ; BSR set to: 15
 18329                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 18330                           
 18331                           ; BSR set to: 15
 18332  005394  0E04               	movlw	4
 18333  005396                     L15:
 18334  005396  6E5F               	movwf	_USBDeviceState,c
 18335  005398                     l329:
 18336                           
 18337                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 18338                           
 18339                           ; BSR set to: 15
 18340                           
 18341                           ; BSR set to: 15
 18342  005398  0100               	movlb	0	; () banked
 18343  00539A  05F5               	decf	_controlTransferState& (0+255),w,b
 18344  00539C  A4D8               	btfss	status,2,c
 18345  00539E  D03B               	goto	l330
 18346                           
 18347                           ; BSR set to: 0
 18348                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 18349  0053A0  EE20 F002          	lfsr	2,2
 18350  0053A4  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 18351  0053A6  26D9               	addwf	fsr2l,f,c
 18352  0053A8  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18353  0053AA  22DA               	addwfc	fsr2h,f,c
 18354  0053AC  0E38               	movlw	56
 18355  0053AE  6EDE               	movwf	postinc2,c
 18356  0053B0  0E0D               	movlw	13
 18357  0053B2  6EDD               	movwf	postdec2,c
 18358                           
 18359                           ; BSR set to: 0
 18360                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 18361  0053B4  EC0B  F028         	call	_USBCtrlTrfTxService	;wreg free
 18362                           
 18363                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 18364  0053B8  0E02               	movlw	2
 18365  0053BA  0100               	movlb	0	; () banked
 18366  0053BC  19F6               	xorwf	_shortPacketStatus& (0+255),w,b
 18367  0053BE  A4D8               	btfss	status,2,c
 18368  0053C0  D00D               	goto	l331
 18369                           
 18370                           ; BSR set to: 0
 18371                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 18372  0053C2  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18373  0053C6  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18374  0053CA  0E04               	movlw	4
 18375  0053CC  6EDF               	movwf	indf2,c
 18376                           
 18377                           ; BSR set to: 0
 18378                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18379  0053CE  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18380  0053D2  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18381  0053D6  0E00               	movlw	0
 18382  0053D8  8EDB               	bsf	plusw2,7,c
 18383                           
 18384                           ;usb_device.c: 2635: }
 18385  0053DA  0012               	return	
 18386  0053DC                     l331:
 18387                           
 18388                           ; BSR set to: 0
 18389                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 18390                           
 18391                           ; BSR set to: 0
 18392  0053DC  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 18393  0053DE  A4D8               	btfss	status,2,c
 18394  0053E0  D00D               	goto	l333
 18395                           
 18396                           ; BSR set to: 0
 18397                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 18398  0053E2  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18399  0053E6  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18400  0053EA  0E48               	movlw	72
 18401  0053EC  6EDF               	movwf	indf2,c
 18402                           
 18403                           ; BSR set to: 0
 18404                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18405  0053EE  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18406  0053F2  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18407  0053F6  0E00               	movlw	0
 18408  0053F8  8EDB               	bsf	plusw2,7,c
 18409                           
 18410                           ;usb_device.c: 2642: }
 18411  0053FA  0012               	return	
 18412  0053FC                     l333:
 18413                           
 18414                           ; BSR set to: 0
 18415                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 18416                           
 18417                           ; BSR set to: 0
 18418  0053FC  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18419  005400  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18420  005404  0E08               	movlw	8
 18421  005406  6EDF               	movwf	indf2,c
 18422                           
 18423                           ; BSR set to: 0
 18424                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18425  005408  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18426  00540C  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18427  005410  0E00               	movlw	0
 18428  005412  8EDB               	bsf	plusw2,7,c
 18429                           
 18430                           ; BSR set to: 0
 18431                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 18432                           
 18433                           ; BSR set to: 0
 18434  005414  0012               	return	
 18435  005416                     l330:
 18436                           
 18437                           ; BSR set to: 0
 18438                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 18439  005416  0101               	movlb	1	; () banked
 18440  005418  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 18441                           
 18442                           ; BSR set to: 1
 18443                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 18444                           
 18445                           ; BSR set to: 1
 18446  00541A  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 18447                           
 18448                           ; BSR set to: 1
 18449                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 18450                           
 18451                           ; BSR set to: 1
 18452  00541C  0E00               	movlw	0
 18453  00541E  0100               	movlb	0	; () banked
 18454  005420  6FF5               	movwf	_controlTransferState& (0+255),b
 18455  005422  0012               	return	
 18456  005424                     __end_of_USBCtrlTrfInHandler:
 18457                           	opt stack 0
 18458                           tosu	equ	0xFFF
 18459                           tosh	equ	0xFFE
 18460                           tosl	equ	0xFFD
 18461                           pclath	equ	0xFFA
 18462                           tblptru	equ	0xFF8
 18463                           tblptrh	equ	0xFF7
 18464                           tblptrl	equ	0xFF6
 18465                           tablat	equ	0xFF5
 18466                           prodh	equ	0xFF4
 18467                           prodl	equ	0xFF3
 18468                           intcon	equ	0xFF2
 18469                           intcon2	equ	0xFF1
 18470                           intcon3	equ	0xFF0
 18471                           indf0	equ	0xFEF
 18472                           postinc0	equ	0xFEE
 18473                           fsr0h	equ	0xFEA
 18474                           fsr0l	equ	0xFE9
 18475                           wreg	equ	0xFE8
 18476                           indf1	equ	0xFE7
 18477                           postdec1	equ	0xFE5
 18478                           plusw1	equ	0xFE3
 18479                           fsr1h	equ	0xFE2
 18480                           fsr1l	equ	0xFE1
 18481                           indf2	equ	0xFDF
 18482                           postinc2	equ	0xFDE
 18483                           postdec2	equ	0xFDD
 18484                           plusw2	equ	0xFDB
 18485                           fsr2h	equ	0xFDA
 18486                           fsr2l	equ	0xFD9
 18487                           status	equ	0xFD8
 18488                           
 18489 ;; *************** function _USBCtrlTrfTxService *****************
 18490 ;; Defined at:
 18491 ;;		line 1773 in file "usb_device.c"
 18492 ;; Parameters:    Size  Location     Type
 18493 ;;		None
 18494 ;; Auto vars:     Size  Location     Type
 18495 ;;  byteToSend      1    0[COMRAM] unsigned char 
 18496 ;; Return value:  Size  Location     Type
 18497 ;;                  1    wreg      void 
 18498 ;; Registers used:
 18499 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18500 ;; Tracked objects:
 18501 ;;		On entry : 0/0
 18502 ;;		On exit  : 0/0
 18503 ;;		Unchanged: 0/0
 18504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18508 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18509 ;;Total ram usage:        1 bytes
 18510 ;; Hardware stack levels used:    1
 18511 ;; This function calls:
 18512 ;;		Nothing
 18513 ;; This function is called by:
 18514 ;;		_USBCtrlEPAllowDataStage
 18515 ;;		_USBCtrlTrfInHandler
 18516 ;; This function uses a non-reentrant model
 18517 ;;
 18518                           
 18519                           	psect	text87
 18520  005016                     __ptext87:
 18521                           	opt stack 0
 18522  005016                     _USBCtrlTrfTxService:
 18523                           	opt stack 25
 18524                           
 18525                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 18526                           
 18527                           ; BSR set to: 0
 18528                           ;incstack = 0
 18529  005016  0E08               	movlw	8
 18530  005018  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 18531                           
 18532                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 18533  00501A  0100               	movlb	0	; () banked
 18534  00501C  51C4               	movf	(_inPipes+5)& (0+255),w,b
 18535  00501E  E110               	bnz	l10673
 18536  005020  0E08               	movlw	8
 18537  005022  5DC3               	subwf	(_inPipes+4)& (0+255),w,b
 18538  005024  B0D8               	btfsc	status,0,c
 18539  005026  D00C               	goto	l235
 18540                           
 18541                           ; BSR set to: 0
 18542                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 18543  005028  C0C3  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 18544                           
 18545                           ; BSR set to: 0
 18546                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 18547  00502C  51F6               	movf	_shortPacketStatus& (0+255),w,b
 18548  00502E  A4D8               	btfss	status,2,c
 18549  005030  D002               	goto	l233
 18550                           
 18551                           ; BSR set to: 0
 18552                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 18553  005032  0E01               	movlw	1
 18554  005034  D004               	goto	L16
 18555  005036                     l233:
 18556                           
 18557                           ; BSR set to: 0
 18558                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 18559                           
 18560                           ; BSR set to: 0
 18561  005036  05F6               	decf	_shortPacketStatus& (0+255),w,b
 18562  005038  A4D8               	btfss	status,2,c
 18563  00503A  D002               	goto	l235
 18564                           
 18565                           ; BSR set to: 0
 18566                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 18567  00503C  0E02               	movlw	2
 18568  00503E                     L16:
 18569  00503E  6FF6               	movwf	_shortPacketStatus& (0+255),b
 18570  005040                     l235:
 18571  005040                     l10673:
 18572                           
 18573                           ; BSR set to: 0
 18574                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 18575  005040  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18576  005042  5FC3               	subwf	(_inPipes+4)& (0+255),f,b
 18577  005044  0E00               	movlw	0
 18578  005046  5BC4               	subwfb	(_inPipes+5)& (0+255),f,b
 18579                           
 18580                           ; BSR set to: 0
 18581                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 18582  005048  EE20 F001          	lfsr	2,1
 18583  00504C  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 18584  00504E  26D9               	addwf	fsr2l,f,c
 18585  005050  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18586  005052  22DA               	addwfc	fsr2h,f,c
 18587  005054  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 18588                           
 18589                           ; BSR set to: 0
 18590                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 18591  005058  0E38               	movlw	56
 18592  00505A  0101               	movlb	1	; () banked
 18593  00505C  6F84               	movwf	_pDst& (0+255),b
 18594  00505E  0E0D               	movlw	13
 18595  005060  6F85               	movwf	(_pDst+1)& (0+255),b
 18596                           
 18597                           ; BSR set to: 1
 18598                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 18599  005062  0100               	movlb	0	; () banked
 18600  005064  A1C2               	btfss	(_inPipes+3)& (0+255),0,b
 18601  005066  D01D               	goto	l237
 18602  005068  D03C               	goto	l241
 18603  00506A                     
 18604                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 18605                           
 18606                           ; BSR set to: 0
 18607  00506A  C0BF  FFF6         	movff	_inPipes,tblptrl
 18608  00506E  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 18609  005072  6AF8               	clrf	tblptru,c
 18610  005074  C184  FFD9         	movff	_pDst,fsr2l
 18611  005078  C185  FFDA         	movff	_pDst+1,fsr2h
 18612  00507C  0E0E               	movlw	(high __ramtop+-1)
 18613  00507E  64F7               	cpfsgt	tblptrh,c
 18614  005080  D003               	bra	u7437
 18615  005082  0008               	tblrd		*
 18616  005084  50F5               	movf	tablat,w,c
 18617  005086  D005               	bra	u7430
 18618  005088                     u7437:
 18619  005088  CFF6 FFE9          	movff	tblptrl,fsr0l
 18620  00508C  CFF7 FFEA          	movff	tblptrh,fsr0h
 18621  005090  50EF               	movf	indf0,w,c
 18622  005092                     u7430:
 18623  005092  6EDF               	movwf	indf2,c
 18624  005094  0100               	movlb	0	; () banked
 18625  005096  4BBF               	infsnz	_inPipes& (0+255),f,b
 18626  005098  2BC0               	incf	(_inPipes+1)& (0+255),f,b
 18627                           
 18628                           ; BSR set to: 0
 18629  00509A  0101               	movlb	1	; () banked
 18630  00509C  4B84               	infsnz	_pDst& (0+255),f,b
 18631  00509E  2B85               	incf	(_pDst+1)& (0+255),f,b
 18632                           
 18633                           ; BSR set to: 1
 18634                           ;usb_device.c: 1816: byteToSend--;
 18635  0050A0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18636  0050A2                     l237:
 18637                           
 18638                           ; BSR set to: 1
 18639  0050A2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18640  0050A4  B4D8               	btfsc	status,2,c
 18641  0050A6  0012               	return	
 18642  0050A8  D7E0               	goto	l238
 18643  0050AA                     
 18644                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 18645  0050AA  C0BF  FFF6         	movff	_inPipes,tblptrl
 18646  0050AE  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 18647  0050B2  6AF8               	clrf	tblptru,c
 18648  0050B4  C184  FFD9         	movff	_pDst,fsr2l
 18649  0050B8  C185  FFDA         	movff	_pDst+1,fsr2h
 18650  0050BC  0E0E               	movlw	(high __ramtop+-1)
 18651  0050BE  64F7               	cpfsgt	tblptrh,c
 18652  0050C0  D003               	bra	u7457
 18653  0050C2  0008               	tblrd		*
 18654  0050C4  50F5               	movf	tablat,w,c
 18655  0050C6  D005               	bra	u7450
 18656  0050C8                     u7457:
 18657  0050C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 18658  0050CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 18659  0050D0  50EF               	movf	indf0,w,c
 18660  0050D2                     u7450:
 18661  0050D2  6EDF               	movwf	indf2,c
 18662  0050D4  0100               	movlb	0	; () banked
 18663  0050D6  4BBF               	infsnz	_inPipes& (0+255),f,b
 18664  0050D8  2BC0               	incf	(_inPipes+1)& (0+255),f,b
 18665                           
 18666                           ; BSR set to: 0
 18667  0050DA  0101               	movlb	1	; () banked
 18668  0050DC  4B84               	infsnz	_pDst& (0+255),f,b
 18669  0050DE  2B85               	incf	(_pDst+1)& (0+255),f,b
 18670                           
 18671                           ; BSR set to: 1
 18672                           ;usb_device.c: 1824: byteToSend--;
 18673  0050E0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18674  0050E2                     l241:
 18675                           
 18676                           ; BSR set to: 1
 18677  0050E2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18678  0050E4  B4D8               	btfsc	status,2,c
 18679  0050E6  0012               	return	
 18680  0050E8  D7E0               	goto	l242
 18681  0050EA                     __end_of_USBCtrlTrfTxService:
 18682                           	opt stack 0
 18683                           tosu	equ	0xFFF
 18684                           tosh	equ	0xFFE
 18685                           tosl	equ	0xFFD
 18686                           pclath	equ	0xFFA
 18687                           tblptru	equ	0xFF8
 18688                           tblptrh	equ	0xFF7
 18689                           tblptrl	equ	0xFF6
 18690                           tablat	equ	0xFF5
 18691                           prodh	equ	0xFF4
 18692                           prodl	equ	0xFF3
 18693                           intcon	equ	0xFF2
 18694                           intcon2	equ	0xFF1
 18695                           intcon3	equ	0xFF0
 18696                           indf0	equ	0xFEF
 18697                           postinc0	equ	0xFEE
 18698                           fsr0h	equ	0xFEA
 18699                           fsr0l	equ	0xFE9
 18700                           wreg	equ	0xFE8
 18701                           indf1	equ	0xFE7
 18702                           postdec1	equ	0xFE5
 18703                           plusw1	equ	0xFE3
 18704                           fsr1h	equ	0xFE2
 18705                           fsr1l	equ	0xFE1
 18706                           indf2	equ	0xFDF
 18707                           postinc2	equ	0xFDE
 18708                           postdec2	equ	0xFDD
 18709                           plusw2	equ	0xFDB
 18710                           fsr2h	equ	0xFDA
 18711                           fsr2l	equ	0xFD9
 18712                           status	equ	0xFD8
 18713                           
 18714 ;; *************** function _APP_DeviceMSDTasks *****************
 18715 ;; Defined at:
 18716 ;;		line 110 in file "app_device_msd.c"
 18717 ;; Parameters:    Size  Location     Type
 18718 ;;		None
 18719 ;; Auto vars:     Size  Location     Type
 18720 ;;		None
 18721 ;; Return value:  Size  Location     Type
 18722 ;;                  1    wreg      void 
 18723 ;; Registers used:
 18724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18725 ;; Tracked objects:
 18726 ;;		On entry : 0/0
 18727 ;;		On exit  : 0/0
 18728 ;;		Unchanged: 0/0
 18729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18734 ;;Total ram usage:        0 bytes
 18735 ;; Hardware stack levels used:    1
 18736 ;; Hardware stack levels required when called:   11
 18737 ;; This function calls:
 18738 ;;		_MSDTasks
 18739 ;; This function is called by:
 18740 ;;		_main
 18741 ;; This function uses a non-reentrant model
 18742 ;;
 18743                           
 18744                           	psect	text88
 18745  008088                     __ptext88:
 18746                           	opt stack 0
 18747  008088                     _APP_DeviceMSDTasks:
 18748                           	opt stack 19
 18749                           
 18750                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 18751                           
 18752                           ;incstack = 0
 18753  008088  0E20               	movlw	32
 18754  00808A  605F               	cpfslt	_USBDeviceState,c
 18755  00808C  D001               	goto	l1005
 18756  00808E  0012               	return	
 18757  008090                     l1005:
 18758                           
 18759                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 18760  008090  B265               	btfsc	3941,1,c	;volatile
 18761  008092  0012               	return	
 18762                           
 18763                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 18764                           
 18765                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 18766  008094  EC98  F00E         	call	_MSDTasks	;wreg free
 18767  008098  0012               	return		;funcret
 18768  00809A                     __end_of_APP_DeviceMSDTasks:
 18769                           	opt stack 0
 18770                           tosu	equ	0xFFF
 18771                           tosh	equ	0xFFE
 18772                           tosl	equ	0xFFD
 18773                           pclath	equ	0xFFA
 18774                           tblptru	equ	0xFF8
 18775                           tblptrh	equ	0xFF7
 18776                           tblptrl	equ	0xFF6
 18777                           tablat	equ	0xFF5
 18778                           prodh	equ	0xFF4
 18779                           prodl	equ	0xFF3
 18780                           intcon	equ	0xFF2
 18781                           intcon2	equ	0xFF1
 18782                           intcon3	equ	0xFF0
 18783                           indf0	equ	0xFEF
 18784                           postinc0	equ	0xFEE
 18785                           fsr0h	equ	0xFEA
 18786                           fsr0l	equ	0xFE9
 18787                           wreg	equ	0xFE8
 18788                           indf1	equ	0xFE7
 18789                           postdec1	equ	0xFE5
 18790                           plusw1	equ	0xFE3
 18791                           fsr1h	equ	0xFE2
 18792                           fsr1l	equ	0xFE1
 18793                           indf2	equ	0xFDF
 18794                           postinc2	equ	0xFDE
 18795                           postdec2	equ	0xFDD
 18796                           plusw2	equ	0xFDB
 18797                           fsr2h	equ	0xFDA
 18798                           fsr2l	equ	0xFD9
 18799                           status	equ	0xFD8
 18800                           
 18801 ;; *************** function _MSDTasks *****************
 18802 ;; Defined at:
 18803 ;;		line 335 in file "usb_device_msd.c"
 18804 ;; Parameters:    Size  Location     Type
 18805 ;;		None
 18806 ;; Auto vars:     Size  Location     Type
 18807 ;;  i               1   81[COMRAM] unsigned char 
 18808 ;; Return value:  Size  Location     Type
 18809 ;;                  1    wreg      unsigned char 
 18810 ;; Registers used:
 18811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18812 ;; Tracked objects:
 18813 ;;		On entry : 0/0
 18814 ;;		On exit  : 0/0
 18815 ;;		Unchanged: 0/0
 18816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18818 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18820 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18821 ;;Total ram usage:        6 bytes
 18822 ;; Hardware stack levels used:    1
 18823 ;; Hardware stack levels required when called:   10
 18824 ;; This function calls:
 18825 ;;		_MSDProcessCommand
 18826 ;;		_USBStallEndpoint
 18827 ;;		_USBTransferOnePacket
 18828 ;; This function is called by:
 18829 ;;		_APP_DeviceMSDTasks
 18830 ;; This function uses a non-reentrant model
 18831 ;;
 18832                           
 18833                           	psect	text89
 18834  001D30                     __ptext89:
 18835                           	opt stack 0
 18836  001D30                     _MSDTasks:
 18837                           	opt stack 19
 18838                           
 18839                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 18840                           
 18841                           ;incstack = 0
 18842  001D30  0E20               	movlw	32
 18843  001D32  185F               	xorwf	_USBDeviceState,w,c
 18844  001D34  A4D8               	btfss	status,2,c
 18845  001D36  0012               	return	
 18846  001D38  D118               	goto	l554
 18847  001D3A                     
 18848                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 18849  001D3A  0100               	movlb	0	; () banked
 18850  001D3C  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 18851  001D3E  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 18852  001D40  B4D8               	btfsc	status,2,c
 18853  001D42  D006               	goto	u10730
 18854                           
 18855                           ; BSR set to: 0
 18856  001D44  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 18857  001D48  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 18858  001D4C  BEDF               	btfsc	indf2,7,c
 18859  001D4E  0012               	return	
 18860  001D50                     u10730:
 18861                           
 18862                           ; BSR set to: 0
 18863                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 18864                           
 18865                           ; BSR set to: 0
 18866  001D50  0E00               	movlw	0
 18867  001D52  6E52               	movwf	MSDTasks@i,c
 18868  001D54                     l13927:
 18869                           
 18870                           ; BSR set to: 0
 18871  001D54  0E1E               	movlw	30
 18872  001D56  6452               	cpfsgt	MSDTasks@i,c
 18873  001D58  D001               	goto	l559
 18874  001D5A  D014               	goto	u10750
 18875  001D5C                     l559:
 18876                           
 18877                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 18878                           
 18879                           ; BSR set to: 0
 18880  001D5C  5052               	movf	MSDTasks@i,w,c
 18881  001D5E  0D01               	mullw	1
 18882  001D60  0E40               	movlw	64
 18883  001D62  24F3               	addwf	prodl,w,c
 18884  001D64  6ED9               	movwf	fsr2l,c
 18885  001D66  0E0D               	movlw	13
 18886  001D68  20F4               	addwfc	prodh,w,c
 18887  001D6A  6EDA               	movwf	fsr2h,c
 18888  001D6C  5052               	movf	MSDTasks@i,w,c
 18889  001D6E  0D01               	mullw	1
 18890  001D70  0E00               	movlw	low _gblCBW
 18891  001D72  24F3               	addwf	prodl,w,c
 18892  001D74  6EE1               	movwf	fsr1l,c
 18893  001D76  0E01               	movlw	high _gblCBW
 18894  001D78  20F4               	addwfc	prodh,w,c
 18895  001D7A  6EE2               	movwf	fsr1h,c
 18896  001D7C  CFDF FFE7          	movff	indf2,indf1
 18897  001D80  2A52               	incf	MSDTasks@i,f,c
 18898  001D82  D7E8               	goto	l13927
 18899  001D84                     u10750:
 18900                           
 18901                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 18902  001D84  0100               	movlb	0	; () banked
 18903  001D86  EE20 F001          	lfsr	2,1
 18904  001D8A  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 18905  001D8C  26D9               	addwf	fsr2l,f,c
 18906  001D8E  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 18907  001D90  22DA               	addwfc	fsr2h,f,c
 18908  001D92  0E1F               	movlw	31
 18909  001D94  18DE               	xorwf	postinc2,w,c
 18910  001D96  A4D8               	btfss	status,2,c
 18911  001D98  D072               	goto	l561
 18912                           
 18913                           ; BSR set to: 0
 18914  001D9A  0E55               	movlw	85
 18915  001D9C  0101               	movlb	1	; () banked
 18916  001D9E  1900               	xorwf	_gblCBW& (0+255),w,b
 18917  001DA0  E16E               	bnz	l561
 18918  001DA2  0E53               	movlw	83
 18919  001DA4  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 18920  001DA6  E16B               	bnz	l561
 18921  001DA8  0E42               	movlw	66
 18922  001DAA  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 18923  001DAC  E168               	bnz	l561
 18924  001DAE  0E43               	movlw	67
 18925  001DB0  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 18926  001DB2  A4D8               	btfss	status,2,c
 18927  001DB4  D064               	goto	l561
 18928                           
 18929                           ; BSR set to: 1
 18930                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 18931  001DB6  0E01               	movlw	1
 18932  001DB8  0100               	movlb	0	; () banked
 18933  001DBA  6FE1               	movwf	_MSDCBWValid& (0+255),b
 18934                           
 18935                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 18936  001DBC  0101               	movlb	1	; () banked
 18937  001DBE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18938  001DC0  A4D8               	btfss	status,2,c
 18939  001DC2  D052               	goto	l562
 18940                           
 18941                           ; BSR set to: 1
 18942  001DC4  0E11               	movlw	17
 18943  001DC6  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 18944  001DC8  D04F               	goto	l562
 18945                           
 18946                           ; BSR set to: 1
 18947  001DCA  510E               	movf	(_gblCBW+14)& (0+255),w,b
 18948  001DCC  B4D8               	btfsc	status,2,c
 18949  001DCE  D04C               	goto	l562
 18950                           
 18951                           ; BSR set to: 1
 18952  001DD0  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 18953  001DD4  0E3F               	movlw	63
 18954  001DD6  164D               	andwf	??_MSDTasks,f,c
 18955  001DD8  A4D8               	btfss	status,2,c
 18956  001DDA  D046               	goto	l562
 18957                           
 18958                           ; BSR set to: 1
 18959                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 18960  001DDC  0E55               	movlw	85
 18961  001DDE  010D               	movlb	13	; () banked
 18962  001DE0  6F80               	movwf	128,b	;volatile
 18963  001DE2  0E53               	movlw	83
 18964  001DE4  6F81               	movwf	129,b	;volatile
 18965  001DE6  0E42               	movlw	66
 18966  001DE8  6F82               	movwf	130,b	;volatile
 18967  001DEA  0E53               	movlw	83
 18968  001DEC  6F83               	movwf	131,b	;volatile
 18969                           
 18970                           ; BSR set to: 13
 18971                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 18972  001DEE  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 18973  001DF2  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 18974  001DF6  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 18975  001DFA  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 18976                           
 18977                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 18978  001DFE  0E00               	movlw	0
 18979  001E00  6F88               	movwf	136,b	;volatile
 18980  001E02  0E00               	movlw	0
 18981  001E04  6F89               	movwf	137,b	;volatile
 18982  001E06  0E00               	movlw	0
 18983  001E08  6F8A               	movwf	138,b	;volatile
 18984  001E0A  0E00               	movlw	0
 18985  001E0C  6F8B               	movwf	139,b	;volatile
 18986                           
 18987                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 18988  001E0E  0E00               	movlw	0
 18989  001E10  6F8C               	movwf	140,b	;volatile
 18990                           
 18991                           ; BSR set to: 13
 18992                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 18993  001E12  0100               	movlb	0	; () banked
 18994  001E14  69E8               	setf	_MSDCommandState& (0+255),b
 18995                           
 18996                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 18997  001E16  0E00               	movlw	0
 18998  001E18  6FE7               	movwf	_MSDReadState& (0+255),b
 18999                           
 19000                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 19001  001E1A  0E00               	movlw	0
 19002  001E1C  6FE6               	movwf	_MSDWriteState& (0+255),b
 19003                           
 19004                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 19005  001E1E  0E00               	movlw	0
 19006  001E20  6FE5               	movwf	_MSDRetryAttempt& (0+255),b
 19007                           
 19008                           ; BSR set to: 0
 19009                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 19010  001E22  0E03               	movlw	3
 19011  001E24  0101               	movlb	1	; () banked
 19012  001E26  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 19013  001E28  B4D8               	btfsc	status,2,c
 19014  001E2A  D008               	goto	l563
 19015                           
 19016                           ; BSR set to: 1
 19017                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 19018  001E2C  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 19019  001E2E  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 19020  001E30  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 19021  001E32  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 19022                           
 19023                           ; BSR set to: 1
 19024                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 19025  001E34  0E00               	movlw	0
 19026  001E36  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19027                           
 19028                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 19029  001E38  0E00               	movlw	0
 19030  001E3A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19031  001E3C                     l563:
 19032                           
 19033                           ; BSR set to: 1
 19034                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 19035                           
 19036                           ; BSR set to: 1
 19037  001E3C  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 19038  001E3E  D002               	goto	l564
 19039                           
 19040                           ; BSR set to: 1
 19041                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 19042  001E40  0E01               	movlw	1
 19043  001E42  D001               	goto	L17
 19044  001E44                     l564:
 19045                           
 19046                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 19047                           
 19048                           ; BSR set to: 0
 19049  001E44  0E02               	movlw	2
 19050  001E46                     L17:
 19051  001E46  0100               	movlb	0	; () banked
 19052  001E48  6FE9               	movwf	_MSD_State& (0+255),b
 19053                           
 19054                           ; BSR set to: 0
 19055                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 19056                           
 19057                           ; BSR set to: 0
 19058  001E4A  0101               	movlb	1	; () banked
 19059  001E4C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 19060  001E4E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19061  001E50  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19062  001E52  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 19063  001E54  B4D8               	btfsc	status,2,c
 19064  001E56  D002               	goto	l566
 19065                           
 19066                           ; BSR set to: 1
 19067                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 19068  001E58  0E00               	movlw	0
 19069  001E5A  D001               	goto	L18
 19070  001E5C                     l566:
 19071                           
 19072                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 19073                           
 19074                           ; BSR set to: 0
 19075  001E5C  0E01               	movlw	1
 19076  001E5E                     L18:
 19077  001E5E  0100               	movlb	0	; () banked
 19078  001E60  6FE2               	movwf	_MSDHostNoData& (0+255),b
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 19082                           
 19083                           ; BSR set to: 0
 19084  001E62  C10F  F0E8         	movff	_gblCBW+15,_MSDCommandState
 19085                           
 19086                           ;usb_device_msd.c: 454: }
 19087  001E66  0012               	return	
 19088  001E68                     l562:
 19089                           
 19090                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 19091                           
 19092                           ; BSR set to: 0
 19093  001E68  0E01               	movlw	1
 19094  001E6A  6E01               	movwf	USBStallEndpoint@dir,c
 19095  001E6C  0E02               	movlw	2
 19096  001E6E  EC6C  F021         	call	_USBStallEndpoint
 19097                           
 19098                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 19099  001E72  0E00               	movlw	0
 19100  001E74  6E01               	movwf	USBStallEndpoint@dir,c
 19101  001E76  0E02               	movlw	2
 19102  001E78  EC6C  F021         	call	_USBStallEndpoint
 19103                           
 19104                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 19105  001E7C  0012               	return	
 19106  001E7E                     l561:
 19107                           
 19108                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 19109  001E7E  0E01               	movlw	1
 19110  001E80  6E01               	movwf	USBStallEndpoint@dir,c
 19111  001E82  0E02               	movlw	2
 19112  001E84  EC6C  F021         	call	_USBStallEndpoint
 19113                           
 19114                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 19115  001E88  0E00               	movlw	0
 19116  001E8A  6E01               	movwf	USBStallEndpoint@dir,c
 19117  001E8C  0E02               	movlw	2
 19118  001E8E  EC6C  F021         	call	_USBStallEndpoint
 19119                           
 19120                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 19121  001E92  0E00               	movlw	0
 19122  001E94  0100               	movlb	0	; () banked
 19123  001E96  6FE1               	movwf	_MSDCBWValid& (0+255),b
 19124                           
 19125                           ; BSR set to: 0
 19126                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 19127                           
 19128                           ; BSR set to: 0
 19129  001E98  0012               	return	
 19130  001E9A                     
 19131                           ; BSR set to: 0
 19132                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 19133                           
 19134                           ; BSR set to: 0
 19135  001E9A  ECE3  F020         	call	_MSDProcessCommand	;wreg free
 19136  001E9E  0AFF               	xorlw	255
 19137  001EA0  A4D8               	btfss	status,2,c
 19138  001EA2  0012               	return	
 19139                           
 19140                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 19141  001EA4  0E03               	movlw	3
 19142  001EA6  0100               	movlb	0	; () banked
 19143  001EA8  6FE9               	movwf	_MSD_State& (0+255),b
 19144                           
 19145                           ; BSR set to: 0
 19146                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 19147  001EAA  0012               	return	
 19148  001EAC                     
 19149                           ; BSR set to: 0
 19150                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 19151                           
 19152                           ; BSR set to: 0
 19153  001EAC  ECE3  F020         	call	_MSDProcessCommand	;wreg free
 19154  001EB0  0AFF               	xorlw	255
 19155  001EB2  A4D8               	btfss	status,2,c
 19156  001EB4  0012               	return	
 19157                           
 19158                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 19159  001EB6  010D               	movlb	13	; () banked
 19160  001EB8  518C               	movf	140,w,b	;volatile
 19161  001EBA  A4D8               	btfss	status,2,c
 19162  001EBC  D008               	goto	l575
 19163                           
 19164                           ; BSR set to: 13
 19165  001EBE  5188               	movf	136,w,b	;volatile
 19166  001EC0  1189               	iorwf	137,w,b	;volatile
 19167  001EC2  118A               	iorwf	138,w,b	;volatile
 19168  001EC4  118B               	iorwf	139,w,b	;volatile
 19169  001EC6  B4D8               	btfsc	status,2,c
 19170  001EC8  D002               	goto	l575
 19171                           
 19172                           ; BSR set to: 13
 19173                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 19174  001ECA  0E02               	movlw	2
 19175  001ECC  6F8C               	movwf	140,b	;volatile
 19176  001ECE                     l575:
 19177                           
 19178                           ; BSR set to: 13
 19179                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 19180  001ECE  0E03               	movlw	3
 19181  001ED0  0100               	movlb	0	; () banked
 19182  001ED2  6FE9               	movwf	_MSD_State& (0+255),b
 19183                           
 19184                           ; BSR set to: 0
 19185                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 19186  001ED4  0012               	return	
 19187  001ED6                     
 19188                           ; BSR set to: 0
 19189                           
 19190                           ; BSR set to: 0
 19191  001ED6  C0C9  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 19192  001EDA  C0CA  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 19193                           
 19194                           ; BSR set to: 0
 19195                           
 19196                           ; BSR set to: 0
 19197                           
 19198                           ; BSR set to: 0
 19199  001EDE  504E               	movf	_MSDTasks$2372,w,c
 19200  001EE0  104F               	iorwf	_MSDTasks$2372+1,w,c
 19201  001EE2  B4D8               	btfsc	status,2,c
 19202  001EE4  D00A               	goto	l577
 19203                           
 19204                           ; BSR set to: 0
 19205  001EE6  C0C9  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 19206  001EEA  C0CA  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 19207                           
 19208                           ; BSR set to: 0
 19209                           
 19210                           ; BSR set to: 0
 19211                           
 19212                           ; BSR set to: 0
 19213                           
 19214                           ; BSR set to: 0
 19215  001EEE  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 19216  001EF2  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 19217  001EF6  BEDF               	btfsc	indf2,7,c
 19218  001EF8  0012               	return	
 19219  001EFA                     l577:
 19220                           
 19221                           ; BSR set to: 0
 19222                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 19223                           
 19224                           ; BSR set to: 0
 19225  001EFA  0E01               	movlw	1
 19226  001EFC  6E01               	movwf	USBTransferOnePacket@dir,c
 19227  001EFE  0E80               	movlw	128
 19228  001F00  6E02               	movwf	USBTransferOnePacket@data,c
 19229  001F02  0E0D               	movlw	13
 19230  001F04  6E03               	movwf	USBTransferOnePacket@data+1,c
 19231  001F06  0E0D               	movlw	13
 19232  001F08  6E04               	movwf	USBTransferOnePacket@len,c
 19233  001F0A  0E02               	movlw	2
 19234  001F0C  EC79  F023         	call	_USBTransferOnePacket
 19235  001F10  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19236  001F14  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19237                           
 19238                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 19239  001F18  0100               	movlb	0	; () banked
 19240  001F1A  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 19241  001F1C  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19242  001F1E  B4D8               	btfsc	status,2,c
 19243  001F20  D006               	goto	u10920
 19244                           
 19245                           ; BSR set to: 0
 19246  001F22  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19247  001F26  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19248  001F2A  BEDF               	btfsc	indf2,7,c
 19249  001F2C  D00F               	goto	l586
 19250  001F2E                     u10920:
 19251                           
 19252                           ; BSR set to: 0
 19253                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 19254                           
 19255                           ; BSR set to: 0
 19256  001F2E  0E00               	movlw	0
 19257  001F30  6E01               	movwf	USBTransferOnePacket@dir,c
 19258  001F32  0E40               	movlw	64
 19259  001F34  6E02               	movwf	USBTransferOnePacket@data,c
 19260  001F36  0E0D               	movlw	13
 19261  001F38  6E03               	movwf	USBTransferOnePacket@data+1,c
 19262  001F3A  0E40               	movlw	64
 19263  001F3C  6E04               	movwf	USBTransferOnePacket@len,c
 19264  001F3E  0E02               	movlw	2
 19265  001F40  EC79  F023         	call	_USBTransferOnePacket
 19266  001F44  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19267  001F48  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19268  001F4C                     l586:
 19269                           
 19270                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 19271  001F4C  0E00               	movlw	0
 19272  001F4E  0100               	movlb	0	; () banked
 19273  001F50  6FE9               	movwf	_MSD_State& (0+255),b
 19274                           
 19275                           ;usb_device_msd.c: 513: break;
 19276  001F52  0012               	return	
 19277  001F54                     
 19278                           ; BSR set to: 0
 19279                           ;usb_device_msd.c: 518: MSD_State=0x00;
 19280                           
 19281                           ; BSR set to: 0
 19282  001F54  0E00               	movlw	0
 19283  001F56  6FE9               	movwf	_MSD_State& (0+255),b
 19284                           
 19285                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 19286  001F58  0E02               	movlw	2
 19287  001F5A  010D               	movlb	13	; () banked
 19288  001F5C  6F8C               	movwf	140,b	;volatile
 19289                           
 19290                           ; BSR set to: 13
 19291                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 19292  001F5E  0E00               	movlw	0
 19293  001F60  6E01               	movwf	USBStallEndpoint@dir,c
 19294  001F62  0E02               	movlw	2
 19295  001F64  EC6C  F021         	call	_USBStallEndpoint
 19296                           
 19297                           ;usb_device_msd.c: 521: }
 19298  001F68  0012               	return	
 19299  001F6A                     l554:
 19300  001F6A  0100               	movlb	0	; () banked
 19301  001F6C  51E9               	movf	_MSD_State& (0+255),w,b
 19302                           
 19303                           ; Switch size 1, requested type "space"
 19304                           ; Number of cases is 4, Range of values is 0 to 3
 19305                           ; switch strategies available:
 19306                           ; Name         Instructions Cycles
 19307                           ; simple_byte           13     7 (average)
 19308                           ;	Chosen strategy is simple_byte
 19309  001F6E  0A00               	xorlw	0	; case 0
 19310  001F70  B4D8               	btfsc	status,2,c
 19311  001F72  D6E3               	goto	l555
 19312  001F74  0A01               	xorlw	1	; case 1
 19313  001F76  B4D8               	btfsc	status,2,c
 19314  001F78  D790               	goto	l571
 19315  001F7A  0A03               	xorlw	3	; case 2
 19316  001F7C  B4D8               	btfsc	status,2,c
 19317  001F7E  D796               	goto	l573
 19318  001F80  0A01               	xorlw	1	; case 3
 19319  001F82  B4D8               	btfsc	status,2,c
 19320  001F84  D7A8               	goto	l576
 19321  001F86  D7E6               	goto	l589
 19322  001F88                     __end_of_MSDTasks:
 19323                           	opt stack 0
 19324                           tosu	equ	0xFFF
 19325                           tosh	equ	0xFFE
 19326                           tosl	equ	0xFFD
 19327                           pclath	equ	0xFFA
 19328                           tblptru	equ	0xFF8
 19329                           tblptrh	equ	0xFF7
 19330                           tblptrl	equ	0xFF6
 19331                           tablat	equ	0xFF5
 19332                           prodh	equ	0xFF4
 19333                           prodl	equ	0xFF3
 19334                           intcon	equ	0xFF2
 19335                           intcon2	equ	0xFF1
 19336                           intcon3	equ	0xFF0
 19337                           indf0	equ	0xFEF
 19338                           postinc0	equ	0xFEE
 19339                           fsr0h	equ	0xFEA
 19340                           fsr0l	equ	0xFE9
 19341                           wreg	equ	0xFE8
 19342                           indf1	equ	0xFE7
 19343                           postdec1	equ	0xFE5
 19344                           plusw1	equ	0xFE3
 19345                           fsr1h	equ	0xFE2
 19346                           fsr1l	equ	0xFE1
 19347                           indf2	equ	0xFDF
 19348                           postinc2	equ	0xFDE
 19349                           postdec2	equ	0xFDD
 19350                           plusw2	equ	0xFDB
 19351                           fsr2h	equ	0xFDA
 19352                           fsr2l	equ	0xFD9
 19353                           status	equ	0xFD8
 19354                           
 19355 ;; *************** function _MSDProcessCommand *****************
 19356 ;; Defined at:
 19357 ;;		line 553 in file "usb_device_msd.c"
 19358 ;; Parameters:    Size  Location     Type
 19359 ;;		None
 19360 ;; Auto vars:     Size  Location     Type
 19361 ;;		None
 19362 ;; Return value:  Size  Location     Type
 19363 ;;                  1    wreg      unsigned char 
 19364 ;; Registers used:
 19365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19366 ;; Tracked objects:
 19367 ;;		On entry : 0/0
 19368 ;;		On exit  : 0/0
 19369 ;;		Unchanged: 0/0
 19370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19373 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19374 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19375 ;;Total ram usage:        5 bytes
 19376 ;; Hardware stack levels used:    1
 19377 ;; Hardware stack levels required when called:    9
 19378 ;; This function calls:
 19379 ;;		_ExternalFlash_MediaDetect
 19380 ;;		_ExternalFlash_MediaInitialize
 19381 ;;		_MSDProcessCommandMediaAbsent
 19382 ;;		_MSDProcessCommandMediaPresent
 19383 ;; This function is called by:
 19384 ;;		_MSDTasks
 19385 ;; This function uses a non-reentrant model
 19386 ;;
 19387                           
 19388                           	psect	text90
 19389  0041C6                     __ptext90:
 19390                           	opt stack 0
 19391  0041C6                     _MSDProcessCommand:
 19392                           	opt stack 19
 19393                           
 19394                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 19395                           
 19396                           ;incstack = 0
 19397  0041C6  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 19398  0041CA  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 19399  0041CE  D801               	call	u9878
 19400  0041D0  D00A               	goto	u9879
 19401  0041D2                     u9878:
 19402  0041D2  0005               	push	
 19403  0041D4  6EFA               	movwf	pclath,c
 19404  0041D6  0101               	movlb	1	; () banked
 19405  0041D8  51DE               	movf	(_LUN+6)& (0+255),w,b
 19406  0041DA  6EFD               	movwf	tosl,c
 19407  0041DC  51DF               	movf	(_LUN+7)& (0+255),w,b
 19408  0041DE  6EFE               	movwf	tosh,c
 19409  0041E0  6AFF               	clrf	tosu,c
 19410  0041E2  50FA               	movf	pclath,w,c
 19411  0041E4  0012               	return		;indir
 19412  0041E6                     u9879:
 19413  0041E6  0900               	iorlw	0
 19414  0041E8  B4D8               	btfsc	status,2,c
 19415  0041EA  D00C               	goto	u9890
 19416  0041EC  0101               	movlb	1	; () banked
 19417  0041EE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 19418  0041F0  0D01               	mullw	1
 19419  0041F2  0EE3               	movlw	low _SoftDetach
 19420  0041F4  24F3               	addwf	prodl,w,c
 19421  0041F6  6ED9               	movwf	fsr2l,c
 19422  0041F8  0E00               	movlw	high _SoftDetach
 19423  0041FA  20F4               	addwfc	prodh,w,c
 19424  0041FC  6EDA               	movwf	fsr2h,c
 19425  0041FE  04DE               	decf	postinc2,w,c
 19426  004200  A4D8               	btfss	status,2,c
 19427  004202  D019               	goto	l592
 19428  004204                     u9890:
 19429                           
 19430                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 19431                           
 19432                           ; BSR set to: 1
 19433  004204  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19434  004208  0E01               	movlw	1
 19435  00420A  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19436  00420C  0E00               	movlw	0
 19437  00420E  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19438  004210  2A48               	incf	??_MSDProcessCommand,f,c
 19439  004212  D003               	goto	u9904
 19440  004214                     u9905:
 19441  004214  90D8               	bcf	status,0,c
 19442  004216  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19443  004218  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19444  00421A                     u9904:
 19445  00421A  2E48               	decfsz	??_MSDProcessCommand,f,c
 19446  00421C  D7FB               	goto	u9905
 19447  00421E  1C49               	comf	??_MSDProcessCommand+1,w,c
 19448  004220  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 19449  004222  1C4A               	comf	??_MSDProcessCommand+2,w,c
 19450  004224  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 19451  004226  504B               	movf	??_MSDProcessCommand+3,w,c
 19452  004228  0101               	movlb	1	; () banked
 19453  00422A  177E               	andwf	_gblMediaPresent& (0+255),f,b
 19454  00422C  504C               	movf	??_MSDProcessCommand+4,w,c
 19455  00422E  177F               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 19456                           
 19457                           ; BSR set to: 1
 19458                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 19459  004230  EC6C  F037         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19460                           
 19461                           ;usb_device_msd.c: 563: }
 19462  004234  D04E               	goto	l599
 19463  004236                     l592:
 19464                           
 19465                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 19466  004236  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19467  00423A  0E01               	movlw	1
 19468  00423C  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19469  00423E  0E00               	movlw	0
 19470  004240  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19471  004242  2A48               	incf	??_MSDProcessCommand,f,c
 19472  004244  D003               	goto	u9914
 19473  004246                     u9915:
 19474  004246  90D8               	bcf	status,0,c
 19475  004248  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19476  00424A  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19477  00424C                     u9914:
 19478  00424C  2E48               	decfsz	??_MSDProcessCommand,f,c
 19479  00424E  D7FB               	goto	u9915
 19480  004250  0101               	movlb	1	; () banked
 19481  004252  517E               	movf	_gblMediaPresent& (0+255),w,b
 19482  004254  1649               	andwf	??_MSDProcessCommand+1,f,c
 19483  004256  517F               	movf	(_gblMediaPresent+1)& (0+255),w,b
 19484  004258  164A               	andwf	??_MSDProcessCommand+2,f,c
 19485  00425A  5049               	movf	??_MSDProcessCommand+1,w,c
 19486  00425C  104A               	iorwf	??_MSDProcessCommand+2,w,c
 19487  00425E  A4D8               	btfss	status,2,c
 19488  004260  D036               	goto	l596
 19489                           
 19490                           ; BSR set to: 1
 19491                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 19492  004262  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 19493  004266  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 19494  00426A  D801               	call	u9938
 19495  00426C  D009               	goto	u9939
 19496  00426E                     u9938:
 19497  00426E  0005               	push	
 19498  004270  6EFA               	movwf	pclath,c
 19499  004272  51D8               	movf	_LUN& (0+255),w,b
 19500  004274  6EFD               	movwf	tosl,c
 19501  004276  51D9               	movf	(_LUN+1)& (0+255),w,b
 19502  004278  6EFE               	movwf	tosh,c
 19503  00427A  6AFF               	clrf	tosu,c
 19504  00427C  50FA               	movf	pclath,w,c
 19505  00427E  0012               	return		;indir
 19506  004280                     u9939:
 19507  004280  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 19508  004282  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 19509  004284  B4D8               	btfsc	status,2,c
 19510  004286  D020               	goto	l597
 19511                           
 19512                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 19513  004288  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19514  00428C  0E01               	movlw	1
 19515  00428E  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19516  004290  0E00               	movlw	0
 19517  004292  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19518  004294  2A48               	incf	??_MSDProcessCommand,f,c
 19519  004296  D003               	goto	u9954
 19520  004298                     u9955:
 19521  004298  90D8               	bcf	status,0,c
 19522  00429A  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19523  00429C  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19524  00429E                     u9954:
 19525  00429E  2E48               	decfsz	??_MSDProcessCommand,f,c
 19526  0042A0  D7FB               	goto	u9955
 19527  0042A2  5049               	movf	??_MSDProcessCommand+1,w,c
 19528  0042A4  0101               	movlb	1	; () banked
 19529  0042A6  137E               	iorwf	_gblMediaPresent& (0+255),f,b
 19530  0042A8  504A               	movf	??_MSDProcessCommand+2,w,c
 19531  0042AA  137F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 19532                           
 19533                           ; BSR set to: 1
 19534                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 19535  0042AC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19536  0042AE  0BF0               	andlw	-16
 19537  0042B0  0906               	iorlw	6
 19538  0042B2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19539                           
 19540                           ; BSR set to: 1
 19541                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 19542  0042B4  0E28               	movlw	40
 19543  0042B6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19544                           
 19545                           ; BSR set to: 1
 19546                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 19547  0042B8  0E00               	movlw	0
 19548  0042BA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19549                           
 19550                           ; BSR set to: 1
 19551                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 19552  0042BC  0E01               	movlw	1
 19553  0042BE  010D               	movlb	13	; () banked
 19554  0042C0  6F8C               	movwf	140,b	;volatile
 19555                           
 19556                           ; BSR set to: 13
 19557                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 19558  0042C2  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19559                           
 19560                           ;usb_device_msd.c: 589: }
 19561  0042C6  D005               	goto	l599
 19562  0042C8                     l597:
 19563                           
 19564                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 19565  0042C8  EC6C  F037         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19566                           
 19567                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 19568  0042CC  D002               	goto	l599
 19569  0042CE                     l596:
 19570                           
 19571                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 19572  0042CE  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19573  0042D2                     l599:
 19574                           
 19575                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 19576  0042D2  0100               	movlb	0	; () banked
 19577  0042D4  51E8               	movf	_MSDCommandState& (0+255),w,b
 19578  0042D6  0012               	return	
 19579  0042D8                     __end_of_MSDProcessCommand:
 19580                           	opt stack 0
 19581                           tosu	equ	0xFFF
 19582                           tosh	equ	0xFFE
 19583                           tosl	equ	0xFFD
 19584                           pclath	equ	0xFFA
 19585                           tblptru	equ	0xFF8
 19586                           tblptrh	equ	0xFF7
 19587                           tblptrl	equ	0xFF6
 19588                           tablat	equ	0xFF5
 19589                           prodh	equ	0xFF4
 19590                           prodl	equ	0xFF3
 19591                           intcon	equ	0xFF2
 19592                           intcon2	equ	0xFF1
 19593                           intcon3	equ	0xFF0
 19594                           indf0	equ	0xFEF
 19595                           postinc0	equ	0xFEE
 19596                           fsr0h	equ	0xFEA
 19597                           fsr0l	equ	0xFE9
 19598                           wreg	equ	0xFE8
 19599                           indf1	equ	0xFE7
 19600                           postdec1	equ	0xFE5
 19601                           plusw1	equ	0xFE3
 19602                           fsr1h	equ	0xFE2
 19603                           fsr1l	equ	0xFE1
 19604                           indf2	equ	0xFDF
 19605                           postinc2	equ	0xFDE
 19606                           postdec2	equ	0xFDD
 19607                           plusw2	equ	0xFDB
 19608                           fsr2h	equ	0xFDA
 19609                           fsr2l	equ	0xFD9
 19610                           status	equ	0xFD8
 19611                           
 19612 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 19613 ;; Defined at:
 19614 ;;		line 635 in file "usb_device_msd.c"
 19615 ;; Parameters:    Size  Location     Type
 19616 ;;		None
 19617 ;; Auto vars:     Size  Location     Type
 19618 ;;		None
 19619 ;; Return value:  Size  Location     Type
 19620 ;;                  1    wreg      void 
 19621 ;; Registers used:
 19622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19623 ;; Tracked objects:
 19624 ;;		On entry : 0/0
 19625 ;;		On exit  : 0/0
 19626 ;;		Unchanged: 0/0
 19627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19632 ;;Total ram usage:        0 bytes
 19633 ;; Hardware stack levels used:    1
 19634 ;; Hardware stack levels required when called:    8
 19635 ;; This function calls:
 19636 ;;		_MSDErrorHandler
 19637 ;;		_MSDProcessCommandMediaPresent
 19638 ;;		_ResetSenseData
 19639 ;; This function is called by:
 19640 ;;		_MSDProcessCommand
 19641 ;; This function uses a non-reentrant model
 19642 ;;
 19643                           
 19644                           	psect	text91
 19645  006ED8                     __ptext91:
 19646                           	opt stack 0
 19647  006ED8                     _MSDProcessCommandMediaAbsent:
 19648                           	opt stack 19
 19649                           
 19650                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 19651                           
 19652                           ; BSR set to: 0
 19653                           ;incstack = 0
 19654  006ED8  D01E               	goto	l603
 19655  006EDA                     
 19656                           ;usb_device_msd.c: 646: ResetSenseData();
 19657  006EDA  EC9D  F037         	call	_ResetSenseData	;wreg free
 19658                           
 19659                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 19660  006EDE  0101               	movlb	1	; () banked
 19661  006EE0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19662  006EE2  0BF0               	andlw	-16
 19663  006EE4  0902               	iorlw	2
 19664  006EE6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19665                           
 19666                           ; BSR set to: 1
 19667                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 19668  006EE8  0E3A               	movlw	58
 19669  006EEA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19670                           
 19671                           ; BSR set to: 1
 19672                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 19673  006EEC  0E00               	movlw	0
 19674  006EEE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19675                           
 19676                           ; BSR set to: 1
 19677                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 19678  006EF0  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19679                           
 19680                           ;usb_device_msd.c: 655: break;
 19681  006EF4  0012               	return	
 19682  006EF6                     
 19683                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 19684  006EF6  0E01               	movlw	1
 19685  006EF8  010D               	movlb	13	; () banked
 19686  006EFA  6F8C               	movwf	140,b	;volatile
 19687                           
 19688                           ; BSR set to: 13
 19689                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 19690  006EFC  0100               	movlb	0	; () banked
 19691  006EFE  69E8               	setf	_MSDCommandState& (0+255),b
 19692                           
 19693                           ;usb_device_msd.c: 665: break;
 19694  006F00  0012               	return	
 19695  006F02                     
 19696                           ; BSR set to: 0
 19697                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 19698                           
 19699                           ; BSR set to: 0
 19700  006F02  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19701                           
 19702                           ;usb_device_msd.c: 671: break;
 19703  006F06  0012               	return	
 19704  006F08                     
 19705                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 19706  006F08  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19707                           
 19708                           ;usb_device_msd.c: 677: break;
 19709  006F0C  0012               	return	
 19710  006F0E                     
 19711                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 19712  006F0E  0E7F               	movlw	127
 19713  006F10  ECF6  F022         	call	_MSDErrorHandler
 19714                           
 19715                           ;usb_device_msd.c: 685: }
 19716                           
 19717                           ;usb_device_msd.c: 684: break;
 19718  006F14  0012               	return	
 19719  006F16                     l603:
 19720  006F16  0100               	movlb	0	; () banked
 19721  006F18  51E8               	movf	_MSDCommandState& (0+255),w,b
 19722                           
 19723                           ; Switch size 1, requested type "space"
 19724                           ; Number of cases is 5, Range of values is 0 to 253
 19725                           ; switch strategies available:
 19726                           ; Name         Instructions Cycles
 19727                           ; simple_byte           16     9 (average)
 19728                           ;	Chosen strategy is simple_byte
 19729  006F1A  0A00               	xorlw	0	; case 0
 19730  006F1C  B4D8               	btfsc	status,2,c
 19731  006F1E  D7EB               	goto	l606
 19732  006F20  0A03               	xorlw	3	; case 3
 19733  006F22  B4D8               	btfsc	status,2,c
 19734  006F24  D7DA               	goto	l604
 19735  006F26  0A11               	xorlw	17	; case 18
 19736  006F28  B4D8               	btfsc	status,2,c
 19737  006F2A  D7EB               	goto	l608
 19738  006F2C  0A0C               	xorlw	12	; case 30
 19739  006F2E  B4D8               	btfsc	status,2,c
 19740  006F30  D7E2               	goto	l606
 19741  006F32  0AE3               	xorlw	227	; case 253
 19742  006F34  B4D8               	btfsc	status,2,c
 19743  006F36  D7E8               	goto	l609
 19744  006F38  D7EA               	goto	l610
 19745  006F3A                     __end_of_MSDProcessCommandMediaAbsent:
 19746                           	opt stack 0
 19747                           tosu	equ	0xFFF
 19748                           tosh	equ	0xFFE
 19749                           tosl	equ	0xFFD
 19750                           pclath	equ	0xFFA
 19751                           tblptru	equ	0xFF8
 19752                           tblptrh	equ	0xFF7
 19753                           tblptrl	equ	0xFF6
 19754                           tablat	equ	0xFF5
 19755                           prodh	equ	0xFF4
 19756                           prodl	equ	0xFF3
 19757                           intcon	equ	0xFF2
 19758                           intcon2	equ	0xFF1
 19759                           intcon3	equ	0xFF0
 19760                           indf0	equ	0xFEF
 19761                           postinc0	equ	0xFEE
 19762                           fsr0h	equ	0xFEA
 19763                           fsr0l	equ	0xFE9
 19764                           wreg	equ	0xFE8
 19765                           indf1	equ	0xFE7
 19766                           postdec1	equ	0xFE5
 19767                           plusw1	equ	0xFE3
 19768                           fsr1h	equ	0xFE2
 19769                           fsr1l	equ	0xFE1
 19770                           indf2	equ	0xFDF
 19771                           postinc2	equ	0xFDE
 19772                           postdec2	equ	0xFDD
 19773                           plusw2	equ	0xFDB
 19774                           fsr2h	equ	0xFDA
 19775                           fsr2l	equ	0xFD9
 19776                           status	equ	0xFD8
 19777                           
 19778 ;; *************** function _MSDProcessCommandMediaPresent *****************
 19779 ;; Defined at:
 19780 ;;		line 712 in file "usb_device_msd.c"
 19781 ;; Parameters:    Size  Location     Type
 19782 ;;		None
 19783 ;; Auto vars:     Size  Location     Type
 19784 ;;  capacity        4   66[COMRAM] struct .
 19785 ;;  sectorSize      4   62[COMRAM] struct .
 19786 ;;  i               1   70[COMRAM] unsigned char 
 19787 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 19788 ;; Return value:  Size  Location     Type
 19789 ;;                  1    wreg      void 
 19790 ;; Registers used:
 19791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19792 ;; Tracked objects:
 19793 ;;		On entry : 0/0
 19794 ;;		On exit  : 0/0
 19795 ;;		Unchanged: 0/0
 19796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19798 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19799 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19800 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19801 ;;Total ram usage:       14 bytes
 19802 ;; Hardware stack levels used:    1
 19803 ;; Hardware stack levels required when called:    7
 19804 ;; This function calls:
 19805 ;;		_ExternalFlash_CapacityRead
 19806 ;;		_ExternalFlash_SectorSizeRead
 19807 ;;		_ExternalFlash_WriteProtectStateGet
 19808 ;;		_MSDCheckForErrorCases
 19809 ;;		_MSDComputeDeviceInAndResidue
 19810 ;;		_MSDErrorHandler
 19811 ;;		_MSDReadHandler
 19812 ;;		_MSDWriteHandler
 19813 ;;		_ResetSenseData
 19814 ;;		_USBTransferOnePacket
 19815 ;;		_memcpy
 19816 ;; This function is called by:
 19817 ;;		_MSDProcessCommand
 19818 ;;		_MSDProcessCommandMediaAbsent
 19819 ;; This function uses a non-reentrant model
 19820 ;;
 19821                           
 19822                           	psect	text92
 19823  00049C                     __ptext92:
 19824                           	opt stack 0
 19825  00049C                     _MSDProcessCommandMediaPresent:
 19826                           	opt stack 20
 19827                           
 19828                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 19829                           
 19830                           ;incstack = 0
 19831  00049C  D1B9               	goto	l614
 19832  00049E                     
 19833                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 19834  00049E  ECD7  F016         	call	_MSDReadHandler	;wreg free
 19835  0004A2  0900               	iorlw	0
 19836  0004A4  A4D8               	btfss	status,2,c
 19837  0004A6  0012               	return	
 19838                           
 19839                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 19840  0004A8  0100               	movlb	0	; () banked
 19841  0004AA  69E8               	setf	_MSDCommandState& (0+255),b
 19842                           
 19843                           ; BSR set to: 0
 19844                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 19845  0004AC  0012               	return	
 19846  0004AE                     
 19847                           ; BSR set to: 0
 19848                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 19849                           
 19850                           ; BSR set to: 0
 19851  0004AE  ECC8  F00A         	call	_MSDWriteHandler	;wreg free
 19852  0004B2  0900               	iorlw	0
 19853  0004B4  A4D8               	btfss	status,2,c
 19854  0004B6  0012               	return	
 19855                           
 19856                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 19857  0004B8  0100               	movlb	0	; () banked
 19858  0004BA  69E8               	setf	_MSDCommandState& (0+255),b
 19859                           
 19860                           ; BSR set to: 0
 19861                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 19862  0004BC  0012               	return	
 19863  0004BE                     
 19864                           ; BSR set to: 0
 19865                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 19866                           
 19867                           ; BSR set to: 0
 19868  0004BE  05E2               	decf	_MSDHostNoData& (0+255),w,b
 19869  0004C0  A4D8               	btfss	status,2,c
 19870  0004C2  D002               	goto	l621
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 19874  0004C4  69E8               	setf	_MSDCommandState& (0+255),b
 19875                           
 19876                           ;usb_device_msd.c: 751: break;
 19877  0004C6  0012               	return	
 19878  0004C8                     l621:
 19879                           
 19880                           ; BSR set to: 0
 19881                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 19882  0004C8  C112  F0D4         	movff	_gblCBW+18,_TransferLength+1
 19883                           
 19884                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 19885  0004CC  C113  F0D3         	movff	_gblCBW+19,_TransferLength
 19886                           
 19887                           ; BSR set to: 0
 19888                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 19889  0004D0  C0D3  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 19890  0004D4  C0D4  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 19891  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 19892  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 19893  0004DC  ECDC  F025         	call	_MSDCheckForErrorCases	;wreg free
 19894  0004E0  0900               	iorlw	0
 19895  0004E2  A4D8               	btfss	status,2,c
 19896  0004E4  0012               	return	
 19897                           
 19898                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 19899                           
 19900                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 19901  0004E6  0E00               	movlw	0
 19902  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19903  0004EA  0E24               	movlw	36
 19904  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19905  0004EE  EC91  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19906                           
 19907                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 19908  0004F2  0E00               	movlw	0
 19909  0004F4  6E01               	movwf	memcpy@d1,c
 19910  0004F6  0E06               	movlw	6
 19911  0004F8  6E02               	movwf	memcpy@d1+1,c
 19912  0004FA  0E4A               	movlw	low _inq_resp
 19913  0004FC  6E03               	movwf	memcpy@s1,c
 19914  0004FE  0E8F               	movlw	high _inq_resp
 19915  000500  6E04               	movwf	memcpy@s1+1,c
 19916  000502  5003               	movf	memcpy@s1,w,c
 19917  000504  1004               	iorwf	memcpy@s1+1,w,c
 19918  000506  A4D8               	btfss	status,2,c
 19919  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 19920  00050A  6E05               	movwf	memcpy@s1+2,c
 19921  00050C  0E00               	movlw	0
 19922  00050E  6E07               	movwf	memcpy@n+1,c
 19923  000510  0E24               	movlw	36
 19924  000512  6E06               	movwf	memcpy@n,c
 19925  000514  EC39  F037         	call	_memcpy	;wreg free
 19926                           
 19927                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 19928  000518  0EFD               	movlw	253
 19929  00051A  0100               	movlb	0	; () banked
 19930  00051C  6FE8               	movwf	_MSDCommandState& (0+255),b
 19931                           
 19932                           ;usb_device_msd.c: 773: break;
 19933  00051E  0012               	return	
 19934  000520                     
 19935                           ; BSR set to: 0
 19936                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 19937                           
 19938                           ; BSR set to: 0
 19939  000520  C1E6  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 19940  000524  C1E7  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 19941  000528  D801               	call	u8888
 19942  00052A  D00A               	goto	u8889
 19943  00052C                     u8888:
 19944  00052C  0005               	push	
 19945  00052E  6EFA               	movwf	pclath,c
 19946  000530  0101               	movlb	1	; () banked
 19947  000532  51DA               	movf	(_LUN+2)& (0+255),w,b
 19948  000534  6EFD               	movwf	tosl,c
 19949  000536  51DB               	movf	(_LUN+3)& (0+255),w,b
 19950  000538  6EFE               	movwf	tosh,c
 19951  00053A  6AFF               	clrf	tosu,c
 19952  00053C  50FA               	movf	pclath,w,c
 19953  00053E  0012               	return		;indir
 19954  000540                     u8889:
 19955  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 19956  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 19957  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 19958  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 19959                           
 19960                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 19961  000550  C1E6  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 19962  000554  C1E7  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 19963  000558  D801               	call	u8898
 19964  00055A  D00A               	goto	u8899
 19965  00055C                     u8898:
 19966  00055C  0005               	push	
 19967  00055E  6EFA               	movwf	pclath,c
 19968  000560  0101               	movlb	1	; () banked
 19969  000562  51DC               	movf	(_LUN+4)& (0+255),w,b
 19970  000564  6EFD               	movwf	tosl,c
 19971  000566  51DD               	movf	(_LUN+5)& (0+255),w,b
 19972  000568  6EFE               	movwf	tosh,c
 19973  00056A  6AFF               	clrf	tosu,c
 19974  00056C  50FA               	movf	pclath,w,c
 19975  00056E  0012               	return		;indir
 19976  000570                     u8899:
 19977  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 19978  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 19979  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 19980  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 19981                           
 19982                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 19983  00057C  EE26 F000          	lfsr	2,1536
 19984  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 19985                           
 19986                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 19987  000584  EE26 F001          	lfsr	2,1537	;volatile
 19988  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 19989                           
 19990                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 19991  00058C  EE26 F002          	lfsr	2,1538	;volatile
 19992  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 19993                           
 19994                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 19995  000594  EE26 F003          	lfsr	2,1539	;volatile
 19996  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 19997                           
 19998                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 19999  00059C  EE26 F004          	lfsr	2,1540	;volatile
 20000  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 20001                           
 20002                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 20003  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 20004  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 20005                           
 20006                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 20007  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 20008  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 20009                           
 20010                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 20011  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 20012  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 20013                           
 20014                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 20015  0005BC  0E00               	movlw	0
 20016  0005BE  0100               	movlb	0	; () banked
 20017  0005C0  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 20018  0005C2  0E08               	movlw	8
 20019  0005C4  6FD3               	movwf	_TransferLength& (0+255),b
 20020                           
 20021                           ; BSR set to: 0
 20022                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 20023  0005C6  0E00               	movlw	0
 20024  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20025  0005CA  0E08               	movlw	8
 20026  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20027  0005CE  EC91  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20028                           
 20029                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 20030  0005D2  0EFD               	movlw	253
 20031  0005D4  0100               	movlb	0	; () banked
 20032  0005D6  6FE8               	movwf	_MSDCommandState& (0+255),b
 20033                           
 20034                           ;usb_device_msd.c: 802: break;
 20035  0005D8  0012               	return	
 20036  0005DA                     
 20037                           ; BSR set to: 0
 20038                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 20039                           
 20040                           ; BSR set to: 0
 20041  0005DA  05E2               	decf	_MSDHostNoData& (0+255),w,b
 20042  0005DC  A4D8               	btfss	status,2,c
 20043  0005DE  D002               	goto	l625
 20044                           
 20045                           ; BSR set to: 0
 20046                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 20047  0005E0  69E8               	setf	_MSDCommandState& (0+255),b
 20048                           
 20049                           ;usb_device_msd.c: 814: break;
 20050  0005E2  0012               	return	
 20051  0005E4                     l625:
 20052                           
 20053                           ; BSR set to: 0
 20054                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 20055                           
 20056                           ; BSR set to: 0
 20057  0005E4  0E00               	movlw	0
 20058  0005E6  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 20059  0005E8  0E12               	movlw	18
 20060  0005EA  6FD3               	movwf	_TransferLength& (0+255),b
 20061                           
 20062                           ; BSR set to: 0
 20063                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 20064  0005EC  0E00               	movlw	0
 20065  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20066  0005F0  0E12               	movlw	18
 20067  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20068  0005F4  EC91  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20069                           
 20070                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 20071  0005F8  0E00               	movlw	0
 20072  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 20073  0005FC                     l11771:
 20074  0005FC  0E11               	movlw	17
 20075  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 20076  000600  D001               	goto	l626
 20077  000602  D014               	goto	u8920
 20078  000604                     l626:
 20079                           
 20080                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 20081  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20082  000606  0D01               	mullw	1
 20083  000608  0E1F               	movlw	low _gblSenseData
 20084  00060A  24F3               	addwf	prodl,w,c
 20085  00060C  6ED9               	movwf	fsr2l,c
 20086  00060E  0E01               	movlw	high _gblSenseData
 20087  000610  20F4               	addwfc	prodh,w,c
 20088  000612  6EDA               	movwf	fsr2h,c
 20089  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20090  000616  0D01               	mullw	1
 20091  000618  0E00               	movlw	0
 20092  00061A  24F3               	addwf	prodl,w,c
 20093  00061C  6EE1               	movwf	fsr1l,c
 20094  00061E  0E06               	movlw	6
 20095  000620  20F4               	addwfc	prodh,w,c
 20096  000622  6EE2               	movwf	fsr1h,c
 20097  000624  CFDF FFE7          	movff	indf2,indf1
 20098  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20099  00062A  D7E8               	goto	l11771
 20100  00062C                     u8920:
 20101                           
 20102                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 20103  00062C  0EFD               	movlw	253
 20104  00062E  0100               	movlb	0	; () banked
 20105  000630  6FE8               	movwf	_MSDCommandState& (0+255),b
 20106                           
 20107                           ;usb_device_msd.c: 827: break;
 20108  000632  0012               	return	
 20109  000634                     l628:
 20110                           
 20111                           ; BSR set to: 0
 20112                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 20113  000634  0E03               	movlw	3
 20114  000636  CFE8 F600          	movff	wreg,1536
 20115                           
 20116                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 20117  00063A  0E00               	movlw	0
 20118  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 20119                           
 20120                           ; BSR set to: 0
 20121                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 20122  000640  C1E6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20123  000644  C1E7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20124  000648  D801               	call	u8938
 20125  00064A  D00A               	goto	u8939
 20126  00064C                     u8938:
 20127  00064C  0005               	push	
 20128  00064E  6EFA               	movwf	pclath,c
 20129  000650  0101               	movlb	1	; () banked
 20130  000652  51E2               	movf	(_LUN+10)& (0+255),w,b
 20131  000654  6EFD               	movwf	tosl,c
 20132  000656  51E3               	movf	(_LUN+11)& (0+255),w,b
 20133  000658  6EFE               	movwf	tosh,c
 20134  00065A  6AFF               	clrf	tosu,c
 20135  00065C  50FA               	movf	pclath,w,c
 20136  00065E  0012               	return		;indir
 20137  000660                     u8939:
 20138  000660  0900               	iorlw	0
 20139  000662  A4D8               	btfss	status,2,c
 20140  000664  D004               	goto	l630
 20141  000666  0E00               	movlw	0
 20142  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 20143  00066A  0E00               	movlw	0
 20144  00066C  D003               	goto	L19
 20145  00066E                     l630:
 20146  00066E  0E00               	movlw	0
 20147  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 20148  000672  0E80               	movlw	128
 20149  000674                     L19:
 20150  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 20151  000676  EE26 F002          	lfsr	2,1538	;volatile
 20152  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 20153                           
 20154                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 20155  00067E  0E00               	movlw	0
 20156  000680  CFE8 F603          	movff	wreg,1539	;volatile
 20157                           
 20158                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 20159  000684  0E00               	movlw	0
 20160  000686  0100               	movlb	0	; () banked
 20161  000688  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 20162  00068A  0E04               	movlw	4
 20163  00068C  6FD3               	movwf	_TransferLength& (0+255),b
 20164                           
 20165                           ; BSR set to: 0
 20166                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 20167  00068E  0E00               	movlw	0
 20168  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20169  000692  0E04               	movlw	4
 20170  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20171  000696  EC91  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20172                           
 20173                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 20174  00069A  0EFD               	movlw	253
 20175  00069C  0100               	movlb	0	; () banked
 20176  00069E  6FE8               	movwf	_MSDCommandState& (0+255),b
 20177                           
 20178                           ;usb_device_msd.c: 839: break;
 20179  0006A0  0012               	return	
 20180  0006A2                     
 20181                           ; BSR set to: 0
 20182                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 20183                           
 20184                           ; BSR set to: 0
 20185  0006A2  0101               	movlb	1	; () banked
 20186  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20187  0006A6  0BF0               	andlw	-16
 20188  0006A8  0905               	iorlw	5
 20189  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20190                           
 20191                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 20192  0006AC  0E20               	movlw	32
 20193  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20194                           
 20195                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 20196  0006B0  0E00               	movlw	0
 20197  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20198                           
 20199                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 20200  0006B4  0E01               	movlw	1
 20201  0006B6  010D               	movlb	13	; () banked
 20202  0006B8  6F8C               	movwf	140,b	;volatile
 20203                           
 20204                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 20205  0006BA  0E00               	movlw	0
 20206  0006BC  6F88               	movwf	136,b	;volatile
 20207  0006BE  0E00               	movlw	0
 20208  0006C0  6F89               	movwf	137,b	;volatile
 20209  0006C2  0E00               	movlw	0
 20210  0006C4  6F8A               	movwf	138,b	;volatile
 20211  0006C6  0E00               	movlw	0
 20212  0006C8  6F8B               	movwf	139,b	;volatile
 20213                           
 20214                           ; BSR set to: 13
 20215                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 20216  0006CA  0100               	movlb	0	; () banked
 20217  0006CC  69E8               	setf	_MSDCommandState& (0+255),b
 20218                           
 20219                           ;usb_device_msd.c: 848: break;
 20220  0006CE  0012               	return	
 20221  0006D0                     
 20222                           ; BSR set to: 0
 20223                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 20224                           
 20225                           ; BSR set to: 0
 20226  0006D0  0E00               	movlw	0
 20227  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 20228  0006D4  0E00               	movlw	0
 20229  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 20230  0006D8  0E00               	movlw	0
 20231  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 20232  0006DC  0E00               	movlw	0
 20233  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 20234  0006E0  ECDC  F025         	call	_MSDCheckForErrorCases	;wreg free
 20235  0006E4  0900               	iorlw	0
 20236  0006E6  A4D8               	btfss	status,2,c
 20237  0006E8  0012               	return	
 20238                           
 20239                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 20240                           
 20241                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 20242  0006EA  0101               	movlb	1	; () banked
 20243  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20244  0006EE  0B0F               	andlw	15
 20245  0006F0  0A06               	xorlw	6
 20246  0006F2  A4D8               	btfss	status,2,c
 20247  0006F4  D007               	goto	l636
 20248                           
 20249                           ; BSR set to: 1
 20250  0006F6  010D               	movlb	13	; () banked
 20251  0006F8  058C               	decf	140,w,b	;volatile
 20252  0006FA  A4D8               	btfss	status,2,c
 20253  0006FC  D003               	goto	l636
 20254                           
 20255                           ; BSR set to: 13
 20256                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 20257  0006FE  0100               	movlb	0	; () banked
 20258  000700  69E8               	setf	_MSDCommandState& (0+255),b
 20259                           
 20260                           ;usb_device_msd.c: 870: }
 20261  000702  0012               	return	
 20262  000704                     l636:
 20263                           
 20264                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 20265                           
 20266                           ; BSR set to: 0
 20267  000704  EC9D  F037         	call	_ResetSenseData	;wreg free
 20268                           
 20269                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 20270  000708  0E00               	movlw	0
 20271  00070A  010D               	movlb	13	; () banked
 20272  00070C  6F88               	movwf	136,b	;volatile
 20273  00070E  0E00               	movlw	0
 20274  000710  6F89               	movwf	137,b	;volatile
 20275  000712  0E00               	movlw	0
 20276  000714  6F8A               	movwf	138,b	;volatile
 20277  000716  0E00               	movlw	0
 20278  000718  6F8B               	movwf	139,b	;volatile
 20279                           
 20280                           ; BSR set to: 13
 20281                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 20282  00071A  0100               	movlb	0	; () banked
 20283  00071C  69E8               	setf	_MSDCommandState& (0+255),b
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 20287  00071E  0012               	return	
 20288  000720                     
 20289                           ; BSR set to: 0
 20290                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 20291                           
 20292                           ; BSR set to: 0
 20293                           
 20294                           ; BSR set to: 0
 20295  000720  0E00               	movlw	0
 20296  000722  010D               	movlb	13	; () banked
 20297  000724  6F88               	movwf	136,b	;volatile
 20298  000726  0E00               	movlw	0
 20299  000728  6F89               	movwf	137,b	;volatile
 20300  00072A  0E00               	movlw	0
 20301  00072C  6F8A               	movwf	138,b	;volatile
 20302  00072E  0E00               	movlw	0
 20303  000730  6F8B               	movwf	139,b	;volatile
 20304                           
 20305                           ; BSR set to: 13
 20306                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 20307  000732  0100               	movlb	0	; () banked
 20308  000734  69E8               	setf	_MSDCommandState& (0+255),b
 20309                           
 20310                           ;usb_device_msd.c: 885: break;
 20311  000736  0012               	return	
 20312  000738                     
 20313                           ; BSR set to: 0
 20314                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 20315                           
 20316                           ; BSR set to: 0
 20317  000738  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 20318  00073A  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20319  00073C  B4D8               	btfsc	status,2,c
 20320  00073E  D006               	goto	u8990
 20321                           
 20322                           ; BSR set to: 0
 20323  000740  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 20324  000744  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20325  000748  BEDF               	btfsc	indf2,7,c
 20326  00074A  0012               	return	
 20327  00074C                     u8990:
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 20331                           
 20332                           ; BSR set to: 0
 20333  00074C  0101               	movlb	1	; () banked
 20334  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20335  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20336  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20337  000754  E104               	bnz	u9000
 20338  000756  0E40               	movlw	64
 20339  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 20340  00075A  A0D8               	btfss	status,0,c
 20341  00075C  D009               	goto	l644
 20342  00075E                     u9000:
 20343                           
 20344                           ; BSR set to: 1
 20345                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 20346  00075E  0E40               	movlw	64
 20347  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 20348                           
 20349                           ; BSR set to: 1
 20350                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 20351  000762  0E40               	movlw	64
 20352  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20353  000766  0E00               	movlw	0
 20354  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20355  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20356  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20357                           
 20358                           ;usb_device_msd.c: 900: }
 20359  00076E  D00A               	goto	l645
 20360  000770                     l644:
 20361                           
 20362                           ; BSR set to: 1
 20363                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 20364  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 20365                           
 20366                           ; BSR set to: 1
 20367                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 20368  000774  0E00               	movlw	0
 20369  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 20370  000778  0E00               	movlw	0
 20371  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 20372  00077C  0E00               	movlw	0
 20373  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 20374  000780  0E00               	movlw	0
 20375  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 20376  000784                     l645:
 20377                           
 20378                           ; BSR set to: 1
 20379                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 20380                           
 20381                           ; BSR set to: 1
 20382  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20383  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 20384  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 20385  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 20386  00078C  0100               	movlb	0	; () banked
 20387  00078E  5DD3               	subwf	_TransferLength& (0+255),w,b
 20388  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 20389  000792  59D4               	subwfb	(_TransferLength+1)& (0+255),w,b
 20390  000794  A0D8               	btfss	status,0,c
 20391  000796  D005               	goto	l646
 20392                           
 20393                           ; BSR set to: 0
 20394                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 20395  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20396  00079A  5FD3               	subwf	_TransferLength& (0+255),f,b
 20397  00079C  0E00               	movlw	0
 20398  00079E  5BD4               	subwfb	(_TransferLength+1)& (0+255),f,b
 20399                           
 20400                           ;usb_device_msd.c: 918: }
 20401  0007A0  D01A               	goto	u9030
 20402  0007A2                     l646:
 20403                           
 20404                           ; BSR set to: 0
 20405                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 20406                           
 20407                           ; BSR set to: 0
 20408  0007A2  0E00               	movlw	0
 20409  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 20410  0007A6  D013               	goto	l648
 20411  0007A8                     
 20412                           ; BSR set to: 0
 20413                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 20414                           
 20415                           ; BSR set to: 0
 20416  0007A8  51D3               	movf	_TransferLength& (0+255),w,b
 20417  0007AA  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 20418  0007AC  B4D8               	btfsc	status,2,c
 20419  0007AE  D004               	goto	l650
 20420                           
 20421                           ; BSR set to: 0
 20422                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 20423  0007B0  07D3               	decf	_TransferLength& (0+255),f,b
 20424  0007B2  A0D8               	btfss	status,0,c
 20425  0007B4  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 20426                           
 20427                           ;usb_device_msd.c: 932: }
 20428  0007B6  D00A               	goto	l651
 20429  0007B8                     l650:
 20430                           
 20431                           ; BSR set to: 0
 20432                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 20433                           
 20434                           ; BSR set to: 0
 20435  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20436  0007BA  0D01               	mullw	1
 20437  0007BC  0E00               	movlw	0
 20438  0007BE  24F3               	addwf	prodl,w,c
 20439  0007C0  6ED9               	movwf	fsr2l,c
 20440  0007C2  0E06               	movlw	6
 20441  0007C4  20F4               	addwfc	prodh,w,c
 20442  0007C6  6EDA               	movwf	fsr2h,c
 20443  0007C8  0E00               	movlw	0
 20444  0007CA  6EDF               	movwf	indf2,c
 20445  0007CC                     l651:
 20446                           
 20447                           ; BSR set to: 0
 20448                           
 20449                           ; BSR set to: 0
 20450  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20451  0007CE                     l648:
 20452                           
 20453                           ; BSR set to: 0
 20454                           
 20455                           ; BSR set to: 0
 20456  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20457  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 20458  0007D2  A0D8               	btfss	status,0,c
 20459  0007D4  D7E9               	goto	l649
 20460  0007D6                     u9030:
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 20464                           
 20465                           ; BSR set to: 0
 20466                           
 20467                           ; BSR set to: 0
 20468  0007D6  0E01               	movlw	1
 20469  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 20470  0007DA  0E00               	movlw	0
 20471  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 20472  0007DE  0E06               	movlw	6
 20473  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 20474  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 20475  0007E6  0E02               	movlw	2
 20476  0007E8  EC79  F023         	call	_USBTransferOnePacket
 20477  0007EC  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20478  0007F0  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20479                           
 20480                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 20481  0007F4  0101               	movlb	1	; () banked
 20482  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20483  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20484  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20485  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20486  0007FE  A4D8               	btfss	status,2,c
 20487  000800  0012               	return	
 20488                           
 20489                           ; BSR set to: 1
 20490                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 20491  000802  0100               	movlb	0	; () banked
 20492  000804  69E8               	setf	_MSDCommandState& (0+255),b
 20493                           
 20494                           ; BSR set to: 0
 20495                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 20496                           
 20497                           ; BSR set to: 0
 20498                           
 20499                           ;usb_device_msd.c: 949: break;
 20500  000806  0012               	return	
 20501  000808                     
 20502                           ; BSR set to: 0
 20503                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 20504                           
 20505                           ; BSR set to: 0
 20506                           
 20507                           ;usb_device_msd.c: 954: default:
 20508                           
 20509                           ; BSR set to: 0
 20510  000808  0E7F               	movlw	127
 20511  00080A  ECF6  F022         	call	_MSDErrorHandler
 20512                           
 20513                           ;usb_device_msd.c: 960: }
 20514                           
 20515                           ;usb_device_msd.c: 959: break;
 20516  00080E  0012               	return	
 20517  000810                     l614:
 20518  000810  0100               	movlb	0	; () banked
 20519  000812  51E8               	movf	_MSDCommandState& (0+255),w,b
 20520                           
 20521                           ; Switch size 1, requested type "space"
 20522                           ; Number of cases is 12, Range of values is 0 to 254
 20523                           ; switch strategies available:
 20524                           ; Name         Instructions Cycles
 20525                           ; simple_byte           37    19 (average)
 20526                           ;	Chosen strategy is simple_byte
 20527  000814  0A00               	xorlw	0	; case 0
 20528  000816  B4D8               	btfsc	status,2,c
 20529  000818  D75B               	goto	l634
 20530  00081A  0A03               	xorlw	3	; case 3
 20531  00081C  B4D8               	btfsc	status,2,c
 20532  00081E  D6DD               	goto	l624
 20533  000820  0A11               	xorlw	17	; case 18
 20534  000822  B4D8               	btfsc	status,2,c
 20535  000824  D64C               	goto	l620
 20536  000826  0A08               	xorlw	8	; case 26
 20537  000828  B4D8               	btfsc	status,2,c
 20538  00082A  D704               	goto	l628
 20539  00082C  0A01               	xorlw	1	; case 27
 20540  00082E  B4D8               	btfsc	status,2,c
 20541  000830  D777               	goto	l638
 20542  000832  0A05               	xorlw	5	; case 30
 20543  000834  B4D8               	btfsc	status,2,c
 20544  000836  D735               	goto	l633
 20545  000838  0A3B               	xorlw	59	; case 37
 20546  00083A  B4D8               	btfsc	status,2,c
 20547  00083C  D671               	goto	l623
 20548  00083E  0A0D               	xorlw	13	; case 40
 20549  000840  B4D8               	btfsc	status,2,c
 20550  000842  D62D               	goto	l615
 20551  000844  0A02               	xorlw	2	; case 42
 20552  000846  B4D8               	btfsc	status,2,c
 20553  000848  D632               	goto	l618
 20554  00084A  0A05               	xorlw	5	; case 47
 20555  00084C  B4D8               	btfsc	status,2,c
 20556  00084E  D768               	goto	l638
 20557  000850  0AD2               	xorlw	210	; case 253
 20558  000852  B4D8               	btfsc	status,2,c
 20559  000854  D771               	goto	l640
 20560  000856  0A03               	xorlw	3	; case 254
 20561  000858  D7D7               	goto	l654
 20562  00085A                     __end_of_MSDProcessCommandMediaPresent:
 20563                           	opt stack 0
 20564                           tosu	equ	0xFFF
 20565                           tosh	equ	0xFFE
 20566                           tosl	equ	0xFFD
 20567                           pclath	equ	0xFFA
 20568                           tblptru	equ	0xFF8
 20569                           tblptrh	equ	0xFF7
 20570                           tblptrl	equ	0xFF6
 20571                           tablat	equ	0xFF5
 20572                           prodh	equ	0xFF4
 20573                           prodl	equ	0xFF3
 20574                           intcon	equ	0xFF2
 20575                           intcon2	equ	0xFF1
 20576                           intcon3	equ	0xFF0
 20577                           indf0	equ	0xFEF
 20578                           postinc0	equ	0xFEE
 20579                           fsr0h	equ	0xFEA
 20580                           fsr0l	equ	0xFE9
 20581                           wreg	equ	0xFE8
 20582                           indf1	equ	0xFE7
 20583                           postdec1	equ	0xFE5
 20584                           plusw1	equ	0xFE3
 20585                           fsr1h	equ	0xFE2
 20586                           fsr1l	equ	0xFE1
 20587                           indf2	equ	0xFDF
 20588                           postinc2	equ	0xFDE
 20589                           postdec2	equ	0xFDD
 20590                           plusw2	equ	0xFDB
 20591                           fsr2h	equ	0xFDA
 20592                           fsr2l	equ	0xFD9
 20593                           status	equ	0xFD8
 20594                           
 20595 ;; *************** function _MSDWriteHandler *****************
 20596 ;; Defined at:
 20597 ;;		line 1188 in file "usb_device_msd.c"
 20598 ;; Parameters:    Size  Location     Type
 20599 ;;		None
 20600 ;; Auto vars:     Size  Location     Type
 20601 ;;		None
 20602 ;; Return value:  Size  Location     Type
 20603 ;;                  1    wreg      unsigned char 
 20604 ;; Registers used:
 20605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20606 ;; Tracked objects:
 20607 ;;		On entry : 0/0
 20608 ;;		On exit  : 0/0
 20609 ;;		Unchanged: 0/0
 20610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20613 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20614 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20615 ;;Total ram usage:        5 bytes
 20616 ;; Hardware stack levels used:    1
 20617 ;; Hardware stack levels required when called:    6
 20618 ;; This function calls:
 20619 ;;		_ExternalFlash_SectorWrite
 20620 ;;		_ExternalFlash_WriteProtectStateGet
 20621 ;;		_MSDCheckForErrorCases
 20622 ;;		_USBStallEndpoint
 20623 ;;		_USBTransferOnePacket
 20624 ;; This function is called by:
 20625 ;;		_MSDProcessCommandMediaPresent
 20626 ;; This function uses a non-reentrant model
 20627 ;;
 20628                           
 20629                           	psect	text93
 20630  001590                     __ptext93:
 20631                           	opt stack 0
 20632  001590                     _MSDWriteHandler:
 20633                           	opt stack 20
 20634                           
 20635                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 20636                           
 20637                           ;incstack = 0
 20638  001590  D146               	goto	l684
 20639  001592                     l685:
 20640                           
 20641                           ; BSR set to: 0
 20642                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 20643  001592  C111  F15D         	movff	_gblCBW+17,_LBA+3
 20644                           
 20645                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 20646  001596  C112  F15C         	movff	_gblCBW+18,_LBA+2
 20647                           
 20648                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 20649  00159A  C113  F15B         	movff	_gblCBW+19,_LBA+1
 20650                           
 20651                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 20652  00159E  C114  F15A         	movff	_gblCBW+20,_LBA
 20653                           
 20654                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 20655  0015A2  C116  F0D4         	movff	_gblCBW+22,_TransferLength+1
 20656                           
 20657                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 20658  0015A6  C117  F0D3         	movff	_gblCBW+23,_TransferLength
 20659                           
 20660                           ; BSR set to: 0
 20661                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20662  0015AA  51D3               	movf	_TransferLength& (0+255),w,b
 20663  0015AC  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20664  0015AE  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 20665  0015B0  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 20666  0015B2  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20667  0015B4  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20668  0015B6  0E09               	movlw	9
 20669  0015B8                     u7605:
 20670  0015B8  90D8               	bcf	status,0,c
 20671  0015BA  3630               	rlcf	??_MSDWriteHandler,f,c
 20672  0015BC  3631               	rlcf	??_MSDWriteHandler+1,f,c
 20673  0015BE  3632               	rlcf	??_MSDWriteHandler+2,f,c
 20674  0015C0  3633               	rlcf	??_MSDWriteHandler+3,f,c
 20675  0015C2  2EE8               	decfsz	wreg,f,c
 20676  0015C4  D7F9               	goto	u7605
 20677  0015C6  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 20678  0015CA  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20679  0015CE  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20680  0015D2  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20681  0015D6  ECDC  F025         	call	_MSDCheckForErrorCases	;wreg free
 20682  0015DA  0900               	iorlw	0
 20683  0015DC  A4D8               	btfss	status,2,c
 20684  0015DE  D131               	goto	l687
 20685                           
 20686                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 20687                           
 20688                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 20689  0015E0  C1E6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20690  0015E4  C1E7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20691  0015E8  D801               	call	u7628
 20692  0015EA  D00A               	goto	u7629
 20693  0015EC                     u7628:
 20694  0015EC  0005               	push	
 20695  0015EE  6EFA               	movwf	pclath,c
 20696  0015F0  0101               	movlb	1	; () banked
 20697  0015F2  51E2               	movf	(_LUN+10)& (0+255),w,b
 20698  0015F4  6EFD               	movwf	tosl,c
 20699  0015F6  51E3               	movf	(_LUN+11)& (0+255),w,b
 20700  0015F8  6EFE               	movwf	tosh,c
 20701  0015FA  6AFF               	clrf	tosu,c
 20702  0015FC  50FA               	movf	pclath,w,c
 20703  0015FE  0012               	return		;indir
 20704  001600                     u7629:
 20705  001600  0900               	iorlw	0
 20706  001602  B4D8               	btfsc	status,2,c
 20707  001604  D016               	goto	l688
 20708                           
 20709                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 20710  001606  0E01               	movlw	1
 20711  001608  010D               	movlb	13	; () banked
 20712  00160A  6F8C               	movwf	140,b	;volatile
 20713                           
 20714                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 20715  00160C  0101               	movlb	1	; () banked
 20716  00160E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20717  001610  0BF0               	andlw	-16
 20718  001612  0907               	iorlw	7
 20719  001614  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20720                           
 20721                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 20722  001616  0E27               	movlw	39
 20723  001618  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20724                           
 20725                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 20726  00161A  0E00               	movlw	0
 20727  00161C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20728                           
 20729                           ; BSR set to: 1
 20730                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 20731  00161E  0E00               	movlw	0
 20732  001620  6E01               	movwf	USBStallEndpoint@dir,c
 20733  001622  0E02               	movlw	2
 20734  001624  EC6C  F021         	call	_USBStallEndpoint
 20735                           
 20736                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 20737  001628  0E00               	movlw	0
 20738  00162A  0100               	movlb	0	; () banked
 20739  00162C  6FE6               	movwf	_MSDWriteState& (0+255),b
 20740                           
 20741                           ; BSR set to: 0
 20742                           ;usb_device_msd.c: 1228: return MSDWriteState;
 20743  00162E  51E6               	movf	_MSDWriteState& (0+255),w,b
 20744                           
 20745                           ; BSR set to: 0
 20746  001630  0012               	return	
 20747  001632                     l688:
 20748                           
 20749                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 20750                           
 20751                           ; BSR set to: 0
 20752  001632  0E01               	movlw	1
 20753  001634  0100               	movlb	0	; () banked
 20754  001636  6FE9               	movwf	_MSD_State& (0+255),b
 20755  001638                     
 20756                           ; BSR set to: 0
 20757                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 20758                           
 20759                           ; BSR set to: 0
 20760  001638  51D3               	movf	_TransferLength& (0+255),w,b
 20761  00163A  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 20762  00163C  A4D8               	btfss	status,2,c
 20763  00163E  D002               	goto	l691
 20764                           
 20765                           ; BSR set to: 0
 20766                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 20767  001640  0E00               	movlw	0
 20768  001642  D056               	goto	L20
 20769  001644                     l691:
 20770                           
 20771                           ; BSR set to: 0
 20772                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 20773                           
 20774                           ; BSR set to: 0
 20775  001644  0E03               	movlw	3
 20776  001646  6FE6               	movwf	_MSDWriteState& (0+255),b
 20777                           
 20778                           ; BSR set to: 0
 20779                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 20780  001648  0E00               	movlw	0
 20781  00164A  0101               	movlb	1	; () banked
 20782  00164C  6F82               	movwf	_ptrNextData& (0+255),b
 20783  00164E  0E06               	movlw	6
 20784  001650  6F83               	movwf	(_ptrNextData+1)& (0+255),b
 20785                           
 20786                           ; BSR set to: 1
 20787                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 20788  001652  0E00               	movlw	0
 20789  001654  010D               	movlb	13	; () banked
 20790  001656  6F88               	movwf	136,b	;volatile
 20791  001658  0E02               	movlw	2
 20792  00165A  6F89               	movwf	137,b	;volatile
 20793  00165C  0E00               	movlw	0
 20794  00165E  6F8A               	movwf	138,b	;volatile
 20795  001660  0E00               	movlw	0
 20796  001662  6F8B               	movwf	139,b	;volatile
 20797  001664                     l692:
 20798                           
 20799                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 20800  001664  010D               	movlb	13	; () banked
 20801  001666  5188               	movf	136,w,b	;volatile
 20802  001668  1189               	iorwf	137,w,b	;volatile
 20803  00166A  118A               	iorwf	138,w,b	;volatile
 20804  00166C  118B               	iorwf	139,w,b	;volatile
 20805  00166E  B4D8               	btfsc	status,2,c
 20806  001670  D01E               	goto	l693
 20807                           
 20808                           ; BSR set to: 13
 20809                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 20810  001672  0100               	movlb	0	; () banked
 20811  001674  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 20812  001676  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20813  001678  B4D8               	btfsc	status,2,c
 20814  00167A  D006               	goto	l694
 20815                           
 20816                           ; BSR set to: 0
 20817  00167C  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20818  001680  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20819  001684  BEDF               	btfsc	indf2,7,c
 20820  001686  D0DD               	goto	l687
 20821  001688                     l694:
 20822                           
 20823                           ; BSR set to: 0
 20824                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 20825                           
 20826                           ; BSR set to: 0
 20827  001688  0E00               	movlw	0
 20828  00168A  6E01               	movwf	USBTransferOnePacket@dir,c
 20829  00168C  C182  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20830  001690  C183  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20831  001694  0E40               	movlw	64
 20832  001696  6E04               	movwf	USBTransferOnePacket@len,c
 20833  001698  0E02               	movlw	2
 20834  00169A  EC79  F023         	call	_USBTransferOnePacket
 20835  00169E  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20836  0016A2  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20837                           
 20838                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 20839  0016A6  0E04               	movlw	4
 20840  0016A8  0100               	movlb	0	; () banked
 20841  0016AA  6FE6               	movwf	_MSDWriteState& (0+255),b
 20842                           
 20843                           ;usb_device_msd.c: 1260: }
 20844  0016AC  D023               	goto	l695
 20845  0016AE                     l693:
 20846                           
 20847                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 20848                           
 20849                           ; BSR set to: 0
 20850  0016AE  C1E6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20851  0016B2  C1E7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20852  0016B6  D801               	call	u7688
 20853  0016B8  D00A               	goto	u7689
 20854  0016BA                     u7688:
 20855  0016BA  0005               	push	
 20856  0016BC  6EFA               	movwf	pclath,c
 20857  0016BE  0101               	movlb	1	; () banked
 20858  0016C0  51E2               	movf	(_LUN+10)& (0+255),w,b
 20859  0016C2  6EFD               	movwf	tosl,c
 20860  0016C4  51E3               	movf	(_LUN+11)& (0+255),w,b
 20861  0016C6  6EFE               	movwf	tosh,c
 20862  0016C8  6AFF               	clrf	tosu,c
 20863  0016CA  50FA               	movf	pclath,w,c
 20864  0016CC  0012               	return		;indir
 20865  0016CE                     u7689:
 20866  0016CE  0900               	iorlw	0
 20867  0016D0  B4D8               	btfsc	status,2,c
 20868  0016D2  D00C               	goto	l696
 20869                           
 20870                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 20871  0016D4  0E01               	movlw	1
 20872  0016D6  010D               	movlb	13	; () banked
 20873  0016D8  6F8C               	movwf	140,b	;volatile
 20874                           
 20875                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 20876  0016DA  0101               	movlb	1	; () banked
 20877  0016DC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20878  0016DE  0BF0               	andlw	-16
 20879  0016E0  0902               	iorlw	2
 20880  0016E2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20881                           
 20882                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 20883  0016E4  0E27               	movlw	39
 20884  0016E6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20885                           
 20886                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 20887  0016E8  0E00               	movlw	0
 20888  0016EA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20889  0016EC                     l696:
 20890                           
 20891                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 20892  0016EC  0E02               	movlw	2
 20893  0016EE  D095               	goto	L22
 20894  0016F0                     L20:
 20895  0016F0  6FE6               	movwf	_MSDWriteState& (0+255),b
 20896                           
 20897                           ;usb_device_msd.c: 1280: break;
 20898  0016F2  D0A7               	goto	l687
 20899  0016F4                     l695:
 20900                           
 20901                           ; BSR set to: 0
 20902                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 20903                           
 20904                           ; BSR set to: 0
 20905                           
 20906                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 20907                           
 20908                           ; BSR set to: 0
 20909  0016F4  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 20910  0016F6  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20911  0016F8  B4D8               	btfsc	status,2,c
 20912  0016FA  D006               	goto	l698
 20913                           
 20914                           ; BSR set to: 0
 20915  0016FC  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20916  001700  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20917  001704  BEDF               	btfsc	indf2,7,c
 20918  001706  D09D               	goto	l687
 20919  001708                     l698:
 20920                           
 20921                           ; BSR set to: 0
 20922                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 20923                           
 20924                           ; BSR set to: 0
 20925  001708  EE20 F001          	lfsr	2,1
 20926  00170C  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 20927  00170E  26D9               	addwf	fsr2l,f,c
 20928  001710  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 20929  001712  22DA               	addwfc	fsr2h,f,c
 20930  001714  50DF               	movf	indf2,w,c
 20931  001716  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20932  001718  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 20933  00171C  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20934  00171E  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20935  001720  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 20936  001722  5031               	movf	??_MSDWriteHandler+1,w,c
 20937  001724  0101               	movlb	1	; () banked
 20938  001726  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20939  001728  5032               	movf	??_MSDWriteHandler+2,w,c
 20940  00172A  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20941  00172C  5033               	movf	??_MSDWriteHandler+3,w,c
 20942  00172E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20943  001730  5034               	movf	??_MSDWriteHandler+4,w,c
 20944  001732  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20945                           
 20946                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 20947  001734  0100               	movlb	0	; () banked
 20948  001736  EE20 F001          	lfsr	2,1
 20949  00173A  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 20950  00173C  26D9               	addwf	fsr2l,f,c
 20951  00173E  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 20952  001740  22DA               	addwfc	fsr2h,f,c
 20953  001742  50DF               	movf	indf2,w,c
 20954  001744  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20955  001746  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 20956  00174A  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20957  00174C  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20958  00174E  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 20959  001750  5031               	movf	??_MSDWriteHandler+1,w,c
 20960  001752  010D               	movlb	13	; () banked
 20961  001754  5F88               	subwf	136,f,b	;volatile
 20962  001756  5032               	movf	??_MSDWriteHandler+2,w,c
 20963  001758  5B89               	subwfb	137,f,b	;volatile
 20964  00175A  5033               	movf	??_MSDWriteHandler+3,w,c
 20965  00175C  5B8A               	subwfb	138,f,b	;volatile
 20966  00175E  5034               	movf	??_MSDWriteHandler+4,w,c
 20967  001760  5B8B               	subwfb	139,f,b	;volatile
 20968                           
 20969                           ; BSR set to: 13
 20970                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 20971  001762  0E40               	movlw	64
 20972  001764  0101               	movlb	1	; () banked
 20973  001766  2782               	addwf	_ptrNextData& (0+255),f,b
 20974  001768  0E00               	movlw	0
 20975  00176A  2383               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20976                           
 20977                           ; BSR set to: 1
 20978                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 20979  00176C  0E03               	movlw	3
 20980  00176E  D055               	goto	L22
 20981  001770                     
 20982                           ; BSR set to: 0
 20983                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 20984                           
 20985                           ; BSR set to: 0
 20986  001770  010D               	movlb	13	; () banked
 20987  001772  518C               	movf	140,w,b	;volatile
 20988  001774  A4D8               	btfss	status,2,c
 20989  001776  D03B               	goto	l703
 20990                           
 20991                           ; BSR set to: 13
 20992                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 20993  001778  C1E6  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 20994  00177C  C1E7  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 20995  001780  C15A  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 20996  001784  C15B  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 20997  001788  C15C  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 20998  00178C  C15D  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 20999  001790  0E00               	movlw	0
 21000  001792  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 21001  001794  0E06               	movlw	6
 21002  001796  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 21003  001798  0101               	movlb	1	; () banked
 21004  00179A  515A               	movf	_LBA& (0+255),w,b
 21005  00179C  115B               	iorwf	(_LBA+1)& (0+255),w,b
 21006  00179E  115C               	iorwf	(_LBA+2)& (0+255),w,b
 21007  0017A0  115D               	iorwf	(_LBA+3)& (0+255),w,b
 21008  0017A2  A4D8               	btfss	status,2,c
 21009  0017A4  D002               	goto	u7730
 21010  0017A6  0E01               	movlw	1
 21011  0017A8  D001               	goto	u7740
 21012  0017AA                     u7730:
 21013  0017AA  0E00               	movlw	0
 21014  0017AC                     u7740:
 21015  0017AC  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 21016  0017AE  D801               	call	u7758
 21017  0017B0  D009               	goto	u7759
 21018  0017B2                     u7758:
 21019  0017B2  0005               	push	
 21020  0017B4  6EFA               	movwf	pclath,c
 21021  0017B6  51E4               	movf	(_LUN+12)& (0+255),w,b
 21022  0017B8  6EFD               	movwf	tosl,c
 21023  0017BA  51E5               	movf	(_LUN+13)& (0+255),w,b
 21024  0017BC  6EFE               	movwf	tosh,c
 21025  0017BE  6AFF               	clrf	tosu,c
 21026  0017C0  50FA               	movf	pclath,w,c
 21027  0017C2  0012               	return		;indir
 21028  0017C4                     u7759:
 21029  0017C4  06E8               	decf	wreg,f,c
 21030  0017C6  B4D8               	btfsc	status,2,c
 21031  0017C8  D012               	goto	l703
 21032                           
 21033                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 21034  0017CA  0E64               	movlw	100
 21035  0017CC  0100               	movlb	0	; () banked
 21036  0017CE  61E5               	cpfslt	_MSDRetryAttempt& (0+255),b
 21037  0017D0  D002               	goto	l702
 21038                           
 21039                           ; BSR set to: 0
 21040                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 21041  0017D2  2BE5               	incf	_MSDRetryAttempt& (0+255),f,b
 21042                           
 21043                           ;usb_device_msd.c: 1314: break;
 21044  0017D4  D036               	goto	l687
 21045  0017D6                     l702:
 21046                           
 21047                           ; BSR set to: 0
 21048                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 21049                           
 21050                           ; BSR set to: 0
 21051  0017D6  0E01               	movlw	1
 21052  0017D8  010D               	movlb	13	; () banked
 21053  0017DA  6F8C               	movwf	140,b	;volatile
 21054                           
 21055                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 21056  0017DC  0101               	movlb	1	; () banked
 21057  0017DE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21058  0017E0  0BF0               	andlw	-16
 21059  0017E2  0903               	iorlw	3
 21060  0017E4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21061                           
 21062                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 21063  0017E6  0E00               	movlw	0
 21064  0017E8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21065                           
 21066                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 21067  0017EA  0E00               	movlw	0
 21068  0017EC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21069  0017EE                     l703:
 21070                           
 21071                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 21072                           
 21073                           ; BSR set to: 1
 21074                           
 21075                           ; BSR set to: 1
 21076                           
 21077                           ; BSR set to: 1
 21078  0017EE  0E01               	movlw	1
 21079  0017F0  0101               	movlb	1	; () banked
 21080  0017F2  275A               	addwf	_LBA& (0+255),f,b
 21081  0017F4  0E00               	movlw	0
 21082  0017F6  235B               	addwfc	(_LBA+1)& (0+255),f,b
 21083  0017F8  235C               	addwfc	(_LBA+2)& (0+255),f,b
 21084  0017FA  235D               	addwfc	(_LBA+3)& (0+255),f,b
 21085                           
 21086                           ; BSR set to: 1
 21087                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 21088  0017FC  0100               	movlb	0	; () banked
 21089  0017FE  07D3               	decf	_TransferLength& (0+255),f,b
 21090  001800  A0D8               	btfss	status,0,c
 21091  001802  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 21092                           
 21093                           ; BSR set to: 0
 21094                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 21095  001804  0E01               	movlw	1
 21096  001806  D774               	goto	L20
 21097  001808                     
 21098                           ; BSR set to: 0
 21099                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 21100                           
 21101                           ; BSR set to: 0
 21102  001808  0E02               	movlw	2
 21103  00180A  010D               	movlb	13	; () banked
 21104  00180C  6F8C               	movwf	140,b	;volatile
 21105                           
 21106                           ; BSR set to: 13
 21107                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 21108  00180E  0E00               	movlw	0
 21109  001810  6E01               	movwf	USBStallEndpoint@dir,c
 21110  001812  0E02               	movlw	2
 21111  001814  EC6C  F021         	call	_USBStallEndpoint
 21112                           
 21113                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 21114  001818  0E00               	movlw	0
 21115  00181A                     L22:
 21116  00181A  0100               	movlb	0	; () banked
 21117  00181C  D769               	goto	L20
 21118  00181E                     l684:
 21119                           
 21120                           ; BSR set to: 0
 21121  00181E  0100               	movlb	0	; () banked
 21122  001820  51E6               	movf	_MSDWriteState& (0+255),w,b
 21123                           
 21124                           ; Switch size 1, requested type "space"
 21125                           ; Number of cases is 5, Range of values is 0 to 4
 21126                           ; switch strategies available:
 21127                           ; Name         Instructions Cycles
 21128                           ; simple_byte           16     9 (average)
 21129                           ;	Chosen strategy is simple_byte
 21130  001822  0A00               	xorlw	0	; case 0
 21131  001824  B4D8               	btfsc	status,2,c
 21132  001826  D6B5               	goto	l685
 21133  001828  0A01               	xorlw	1	; case 1
 21134  00182A  B4D8               	btfsc	status,2,c
 21135  00182C  D705               	goto	l690
 21136  00182E  0A03               	xorlw	3	; case 2
 21137  001830  B4D8               	btfsc	status,2,c
 21138  001832  D79E               	goto	l699
 21139  001834  0A01               	xorlw	1	; case 3
 21140  001836  B4D8               	btfsc	status,2,c
 21141  001838  D715               	goto	l692
 21142  00183A  0A07               	xorlw	7	; case 4
 21143  00183C  B4D8               	btfsc	status,2,c
 21144  00183E  D75A               	goto	l695
 21145  001840  D7E3               	goto	l704
 21146  001842                     l687:
 21147                           
 21148                           ;usb_device_msd.c: 1347: return MSDWriteState;
 21149                           
 21150                           ; BSR set to: 0
 21151  001842  0100               	movlb	0	; () banked
 21152  001844  51E6               	movf	_MSDWriteState& (0+255),w,b
 21153  001846  0012               	return	
 21154  001848                     __end_of_MSDWriteHandler:
 21155                           	opt stack 0
 21156                           tosu	equ	0xFFF
 21157                           tosh	equ	0xFFE
 21158                           tosl	equ	0xFFD
 21159                           pclath	equ	0xFFA
 21160                           tblptru	equ	0xFF8
 21161                           tblptrh	equ	0xFF7
 21162                           tblptrl	equ	0xFF6
 21163                           tablat	equ	0xFF5
 21164                           prodh	equ	0xFF4
 21165                           prodl	equ	0xFF3
 21166                           intcon	equ	0xFF2
 21167                           intcon2	equ	0xFF1
 21168                           intcon3	equ	0xFF0
 21169                           indf0	equ	0xFEF
 21170                           postinc0	equ	0xFEE
 21171                           fsr0h	equ	0xFEA
 21172                           fsr0l	equ	0xFE9
 21173                           wreg	equ	0xFE8
 21174                           indf1	equ	0xFE7
 21175                           postdec1	equ	0xFE5
 21176                           plusw1	equ	0xFE3
 21177                           fsr1h	equ	0xFE2
 21178                           fsr1l	equ	0xFE1
 21179                           indf2	equ	0xFDF
 21180                           postinc2	equ	0xFDE
 21181                           postdec2	equ	0xFDD
 21182                           plusw2	equ	0xFDB
 21183                           fsr2h	equ	0xFDA
 21184                           fsr2l	equ	0xFD9
 21185                           status	equ	0xFD8
 21186                           
 21187 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 21188 ;; Defined at:
 21189 ;;		line 34 in file "external_flash.c"
 21190 ;; Parameters:    Size  Location     Type
 21191 ;;  config          2    0[COMRAM] PTR void 
 21192 ;;		 -> NULL(0), 
 21193 ;; Auto vars:     Size  Location     Type
 21194 ;;		None
 21195 ;; Return value:  Size  Location     Type
 21196 ;;                  1    wreg      unsigned char 
 21197 ;; Registers used:
 21198 ;;		wreg
 21199 ;; Tracked objects:
 21200 ;;		On entry : 0/0
 21201 ;;		On exit  : 0/0
 21202 ;;		Unchanged: 0/0
 21203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21208 ;;Total ram usage:        2 bytes
 21209 ;; Hardware stack levels used:    1
 21210 ;; This function calls:
 21211 ;;		Nothing
 21212 ;; This function is called by:
 21213 ;;		_MSDWriteHandler
 21214 ;;		_MSDProcessCommandMediaPresent
 21215 ;; This function uses a non-reentrant model
 21216 ;;
 21217                           
 21218                           	psect	text94
 21219  0081FE                     __ptext94:
 21220                           	opt stack 0
 21221  0081FE                     _ExternalFlash_WriteProtectStateGet:
 21222                           	opt stack 25
 21223                           
 21224                           ;external_flash.c: 37: return 0;
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;incstack = 0
 21228  0081FE  0E00               	movlw	0
 21229  008200  0012               	return	
 21230  008202                     __end_of_ExternalFlash_WriteProtectStateGet:
 21231                           	opt stack 0
 21232                           tosu	equ	0xFFF
 21233                           tosh	equ	0xFFE
 21234                           tosl	equ	0xFFD
 21235                           pclath	equ	0xFFA
 21236                           tblptru	equ	0xFF8
 21237                           tblptrh	equ	0xFF7
 21238                           tblptrl	equ	0xFF6
 21239                           tablat	equ	0xFF5
 21240                           prodh	equ	0xFF4
 21241                           prodl	equ	0xFF3
 21242                           intcon	equ	0xFF2
 21243                           intcon2	equ	0xFF1
 21244                           intcon3	equ	0xFF0
 21245                           indf0	equ	0xFEF
 21246                           postinc0	equ	0xFEE
 21247                           fsr0h	equ	0xFEA
 21248                           fsr0l	equ	0xFE9
 21249                           wreg	equ	0xFE8
 21250                           indf1	equ	0xFE7
 21251                           postdec1	equ	0xFE5
 21252                           plusw1	equ	0xFE3
 21253                           fsr1h	equ	0xFE2
 21254                           fsr1l	equ	0xFE1
 21255                           indf2	equ	0xFDF
 21256                           postinc2	equ	0xFDE
 21257                           postdec2	equ	0xFDD
 21258                           plusw2	equ	0xFDB
 21259                           fsr2h	equ	0xFDA
 21260                           fsr2l	equ	0xFD9
 21261                           status	equ	0xFD8
 21262                           
 21263 ;; *************** function _ExternalFlash_SectorWrite *****************
 21264 ;; Defined at:
 21265 ;;		line 56 in file "external_flash.c"
 21266 ;; Parameters:    Size  Location     Type
 21267 ;;  config          2   36[COMRAM] PTR void 
 21268 ;;		 -> NULL(0), 
 21269 ;;  sector_addr     4   38[COMRAM] unsigned long 
 21270 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 21271 ;;		 -> msd_buffer(512), 
 21272 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 21273 ;; Auto vars:     Size  Location     Type
 21274 ;;  page            2   45[COMRAM] unsigned int 
 21275 ;; Return value:  Size  Location     Type
 21276 ;;                  1    wreg      unsigned char 
 21277 ;; Registers used:
 21278 ;;		wreg, status,2, status,0, cstack
 21279 ;; Tracked objects:
 21280 ;;		On entry : 0/0
 21281 ;;		On exit  : 0/0
 21282 ;;		Unchanged: 0/0
 21283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21284 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21287 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21288 ;;Total ram usage:       11 bytes
 21289 ;; Hardware stack levels used:    1
 21290 ;; Hardware stack levels required when called:    5
 21291 ;; This function calls:
 21292 ;;		_flash_page_write
 21293 ;; This function is called by:
 21294 ;;		_MSDWriteHandler
 21295 ;; This function uses a non-reentrant model
 21296 ;;
 21297                           
 21298                           	psect	text95
 21299  007B70                     __ptext95:
 21300                           	opt stack 0
 21301  007B70                     _ExternalFlash_SectorWrite:
 21302                           	opt stack 20
 21303                           
 21304                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 21305                           
 21306                           ;incstack = 0
 21307  007B70  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 21308  007B74  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 21309                           
 21310                           ;external_flash.c: 61: if(sector_addr >= 8192)
 21311  007B78  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 21312  007B7A  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 21313  007B7C  E104               	bnz	u7280
 21314  007B7E  0E20               	movlw	32
 21315  007B80  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 21316  007B82  A0D8               	btfss	status,0,c
 21317  007B84  D002               	goto	l1877
 21318  007B86                     u7280:
 21319                           
 21320                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 21321  007B86  0E00               	movlw	0
 21322  007B88  0012               	return	
 21323  007B8A                     l1877:
 21324                           
 21325                           ;external_flash.c: 64: };external_flash.c: 67: flash_page_write(page, buffer);
 21326  007B8A  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 21327  007B8E  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 21328  007B92  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 21329  007B96  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 21330  007B9A  EC15  F03A         	call	_flash_page_write	;wreg free
 21331                           
 21332                           ;external_flash.c: 69: return 1;
 21333  007B9E  0E01               	movlw	1
 21334  007BA0  0012               	return	
 21335  007BA2                     __end_of_ExternalFlash_SectorWrite:
 21336                           	opt stack 0
 21337                           tosu	equ	0xFFF
 21338                           tosh	equ	0xFFE
 21339                           tosl	equ	0xFFD
 21340                           pclath	equ	0xFFA
 21341                           tblptru	equ	0xFF8
 21342                           tblptrh	equ	0xFF7
 21343                           tblptrl	equ	0xFF6
 21344                           tablat	equ	0xFF5
 21345                           prodh	equ	0xFF4
 21346                           prodl	equ	0xFF3
 21347                           intcon	equ	0xFF2
 21348                           intcon2	equ	0xFF1
 21349                           intcon3	equ	0xFF0
 21350                           indf0	equ	0xFEF
 21351                           postinc0	equ	0xFEE
 21352                           fsr0h	equ	0xFEA
 21353                           fsr0l	equ	0xFE9
 21354                           wreg	equ	0xFE8
 21355                           indf1	equ	0xFE7
 21356                           postdec1	equ	0xFE5
 21357                           plusw1	equ	0xFE3
 21358                           fsr1h	equ	0xFE2
 21359                           fsr1l	equ	0xFE1
 21360                           indf2	equ	0xFDF
 21361                           postinc2	equ	0xFDE
 21362                           postdec2	equ	0xFDD
 21363                           plusw2	equ	0xFDB
 21364                           fsr2h	equ	0xFDA
 21365                           fsr2l	equ	0xFD9
 21366                           status	equ	0xFD8
 21367                           
 21368 ;; *************** function _flash_page_write *****************
 21369 ;; Defined at:
 21370 ;;		line 433 in file "flash.c"
 21371 ;; Parameters:    Size  Location     Type
 21372 ;;  page            2   31[COMRAM] unsigned int 
 21373 ;;  data            2   33[COMRAM] PTR unsigned char 
 21374 ;;		 -> buffer(512), msd_buffer(512), 
 21375 ;; Auto vars:     Size  Location     Type
 21376 ;;  match           1   35[COMRAM] enum E6894
 21377 ;; Return value:  Size  Location     Type
 21378 ;;                  1    wreg      void 
 21379 ;; Registers used:
 21380 ;;		wreg, status,2, status,0, cstack
 21381 ;; Tracked objects:
 21382 ;;		On entry : 0/0
 21383 ;;		On exit  : 0/0
 21384 ;;		Unchanged: 0/0
 21385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21389 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21390 ;;Total ram usage:        5 bytes
 21391 ;; Hardware stack levels used:    1
 21392 ;; Hardware stack levels required when called:    4
 21393 ;; This function calls:
 21394 ;;		__flash_compare_page_to_buffer
 21395 ;;		__flash_write_page_from_buffer
 21396 ;;		__flash_write_to_buffer
 21397 ;;		_spi_set_configuration
 21398 ;; This function is called by:
 21399 ;;		_ExternalFlash_SectorWrite
 21400 ;;		_fat_format
 21401 ;; This function uses a non-reentrant model
 21402 ;;
 21403                           
 21404                           	psect	text96
 21405  00742A                     __ptext96:
 21406                           	opt stack 0
 21407  00742A                     _flash_page_write:
 21408                           	opt stack 23
 21409                           
 21410                           ;flash.c: 435: flashMatchResult_t match;;flash.c: 438: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 21411                           
 21412                           ;incstack = 0
 21413  00742A  0E00               	movlw	0
 21414  00742C  EC7A  F024         	call	_spi_set_configuration
 21415                           
 21416                           ;flash.c: 441: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 21417  007430  0E00               	movlw	0
 21418  007432  6E15               	movwf	__flash_write_to_buffer@start+1,c
 21419  007434  0E00               	movlw	0
 21420  007436  6E14               	movwf	__flash_write_to_buffer@start,c
 21421  007438  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 21422  00743C  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 21423  007440  0E02               	movlw	2
 21424  007442  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 21425  007444  0E00               	movlw	0
 21426  007446  6E18               	movwf	__flash_write_to_buffer@data_length,c
 21427  007448  0E00               	movlw	0
 21428  00744A  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 21429  00744C  EC65  F03B         	call	__flash_write_to_buffer	;wreg free
 21430                           
 21431                           ;flash.c: 444: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 21432  007450  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 21433  007454  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 21434  007458  0E00               	movlw	0
 21435  00745A  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 21436  00745C  ECF5  F033         	call	__flash_compare_page_to_buffer	;wreg free
 21437  007460  6E24               	movwf	flash_page_write@match,c
 21438                           
 21439                           ;flash.c: 447: if(match==DATA_DOES_NOT_MATCH)
 21440  007462  0424               	decf	flash_page_write@match,w,c
 21441  007464  A4D8               	btfss	status,2,c
 21442  007466  D008               	goto	l1834
 21443                           
 21444                           ;flash.c: 448: {;flash.c: 449: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 21445  007468  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 21446  00746C  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 21447  007470  0E00               	movlw	0
 21448  007472  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 21449  007474  EC3B  F039         	call	__flash_write_page_from_buffer	;wreg free
 21450  007478                     l1834:
 21451                           
 21452                           ;flash.c: 450: };flash.c: 453: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 21453  007478  0E01               	movlw	1
 21454  00747A  EC7A  F024         	call	_spi_set_configuration
 21455  00747E  0012               	return		;funcret
 21456  007480                     __end_of_flash_page_write:
 21457                           	opt stack 0
 21458                           tosu	equ	0xFFF
 21459                           tosh	equ	0xFFE
 21460                           tosl	equ	0xFFD
 21461                           pclath	equ	0xFFA
 21462                           tblptru	equ	0xFF8
 21463                           tblptrh	equ	0xFF7
 21464                           tblptrl	equ	0xFF6
 21465                           tablat	equ	0xFF5
 21466                           prodh	equ	0xFF4
 21467                           prodl	equ	0xFF3
 21468                           intcon	equ	0xFF2
 21469                           intcon2	equ	0xFF1
 21470                           intcon3	equ	0xFF0
 21471                           indf0	equ	0xFEF
 21472                           postinc0	equ	0xFEE
 21473                           fsr0h	equ	0xFEA
 21474                           fsr0l	equ	0xFE9
 21475                           wreg	equ	0xFE8
 21476                           indf1	equ	0xFE7
 21477                           postdec1	equ	0xFE5
 21478                           plusw1	equ	0xFE3
 21479                           fsr1h	equ	0xFE2
 21480                           fsr1l	equ	0xFE1
 21481                           indf2	equ	0xFDF
 21482                           postinc2	equ	0xFDE
 21483                           postdec2	equ	0xFDD
 21484                           plusw2	equ	0xFDB
 21485                           fsr2h	equ	0xFDA
 21486                           fsr2l	equ	0xFD9
 21487                           status	equ	0xFD8
 21488                           
 21489 ;; *************** function _MSDReadHandler *****************
 21490 ;; Defined at:
 21491 ;;		line 1038 in file "usb_device_msd.c"
 21492 ;; Parameters:    Size  Location     Type
 21493 ;;		None
 21494 ;; Auto vars:     Size  Location     Type
 21495 ;;		None
 21496 ;; Return value:  Size  Location     Type
 21497 ;;                  1    wreg      unsigned char 
 21498 ;; Registers used:
 21499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21500 ;; Tracked objects:
 21501 ;;		On entry : 0/0
 21502 ;;		On exit  : 0/0
 21503 ;;		Unchanged: 0/0
 21504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21507 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21508 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21509 ;;Total ram usage:        4 bytes
 21510 ;; Hardware stack levels used:    1
 21511 ;; Hardware stack levels required when called:    6
 21512 ;; This function calls:
 21513 ;;		_ExternalFlash_SectorRead
 21514 ;;		_MSDCheckForErrorCases
 21515 ;;		_USBStallEndpoint
 21516 ;;		_USBTransferOnePacket
 21517 ;; This function is called by:
 21518 ;;		_MSDProcessCommandMediaPresent
 21519 ;; This function uses a non-reentrant model
 21520 ;;
 21521                           
 21522                           	psect	text97
 21523  002DAE                     __ptext97:
 21524                           	opt stack 0
 21525  002DAE                     _MSDReadHandler:
 21526                           	opt stack 20
 21527                           
 21528                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 21529                           
 21530                           ;incstack = 0
 21531  002DAE  D0D7               	goto	l665
 21532  002DB0                     l666:
 21533                           
 21534                           ; BSR set to: 0
 21535                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 21536  002DB0  C111  F15D         	movff	_gblCBW+17,_LBA+3
 21537                           
 21538                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 21539  002DB4  C112  F15C         	movff	_gblCBW+18,_LBA+2
 21540                           
 21541                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 21542  002DB8  C113  F15B         	movff	_gblCBW+19,_LBA+1
 21543                           
 21544                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 21545  002DBC  C114  F15A         	movff	_gblCBW+20,_LBA
 21546                           
 21547                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 21548  002DC0  C116  F0D4         	movff	_gblCBW+22,_TransferLength+1
 21549                           
 21550                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 21551  002DC4  C117  F0D3         	movff	_gblCBW+23,_TransferLength
 21552                           
 21553                           ; BSR set to: 0
 21554                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 21555  002DC8  51D3               	movf	_TransferLength& (0+255),w,b
 21556  002DCA  6E36               	movwf	??_MSDReadHandler& (0+255),c
 21557  002DCC  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 21558  002DCE  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 21559  002DD0  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 21560  002DD2  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 21561  002DD4  0E09               	movlw	9
 21562  002DD6                     u7495:
 21563  002DD6  90D8               	bcf	status,0,c
 21564  002DD8  3636               	rlcf	??_MSDReadHandler,f,c
 21565  002DDA  3637               	rlcf	??_MSDReadHandler+1,f,c
 21566  002DDC  3638               	rlcf	??_MSDReadHandler+2,f,c
 21567  002DDE  3639               	rlcf	??_MSDReadHandler+3,f,c
 21568  002DE0  2EE8               	decfsz	wreg,f,c
 21569  002DE2  D7F9               	goto	u7495
 21570  002DE4  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 21571  002DE8  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 21572  002DEC  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 21573  002DF0  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 21574  002DF4  ECDC  F025         	call	_MSDCheckForErrorCases	;wreg free
 21575  002DF8  0900               	iorlw	0
 21576  002DFA  A4D8               	btfss	status,2,c
 21577  002DFC  D0C2               	goto	l668
 21578                           
 21579                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 21580                           
 21581                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 21582  002DFE  0E01               	movlw	1
 21583  002E00  0100               	movlb	0	; () banked
 21584  002E02  6FE7               	movwf	_MSDReadState& (0+255),b
 21585  002E04                     
 21586                           ; BSR set to: 0
 21587                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 21588                           
 21589                           ; BSR set to: 0
 21590  002E04  51D3               	movf	_TransferLength& (0+255),w,b
 21591  002E06  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 21592  002E08  A4D8               	btfss	status,2,c
 21593  002E0A  D002               	goto	l670
 21594                           
 21595                           ; BSR set to: 0
 21596                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 21597  002E0C  0E00               	movlw	0
 21598  002E0E  D046               	goto	L23
 21599  002E10                     l670:
 21600                           
 21601                           ; BSR set to: 0
 21602                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 21603                           
 21604                           ; BSR set to: 0
 21605  002E10  07D3               	decf	_TransferLength& (0+255),f,b
 21606  002E12  A0D8               	btfss	status,0,c
 21607  002E14  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 21608                           
 21609                           ; BSR set to: 0
 21610                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 21611  002E16  0E02               	movlw	2
 21612  002E18  6FE7               	movwf	_MSDReadState& (0+255),b
 21613  002E1A                     
 21614                           ; BSR set to: 0
 21615                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 21616                           
 21617                           ; BSR set to: 0
 21618  002E1A  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 21619  002E1C  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21620  002E1E  B4D8               	btfsc	status,2,c
 21621  002E20  D006               	goto	l672
 21622                           
 21623                           ; BSR set to: 0
 21624  002E22  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 21625  002E26  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21626  002E2A  BEDF               	btfsc	indf2,7,c
 21627  002E2C  D0AA               	goto	l668
 21628  002E2E                     l672:
 21629                           
 21630                           ; BSR set to: 0
 21631                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 21632                           
 21633                           ; BSR set to: 0
 21634  002E2E  C1E6  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 21635  002E32  C1E7  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 21636  002E36  C15A  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 21637  002E3A  C15B  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 21638  002E3E  C15C  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 21639  002E42  C15D  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 21640  002E46  0E00               	movlw	0
 21641  002E48  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 21642  002E4A  0E06               	movlw	6
 21643  002E4C  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 21644  002E4E  D801               	call	u7548
 21645  002E50  D00A               	goto	u7549
 21646  002E52                     u7548:
 21647  002E52  0005               	push	
 21648  002E54  6EFA               	movwf	pclath,c
 21649  002E56  0101               	movlb	1	; () banked
 21650  002E58  51E0               	movf	(_LUN+8)& (0+255),w,b
 21651  002E5A  6EFD               	movwf	tosl,c
 21652  002E5C  51E1               	movf	(_LUN+9)& (0+255),w,b
 21653  002E5E  6EFE               	movwf	tosh,c
 21654  002E60  6AFF               	clrf	tosu,c
 21655  002E62  50FA               	movf	pclath,w,c
 21656  002E64  0012               	return		;indir
 21657  002E66                     u7549:
 21658  002E66  06E8               	decf	wreg,f,c
 21659  002E68  B4D8               	btfsc	status,2,c
 21660  002E6A  D01A               	goto	l675
 21661                           
 21662                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 21663  002E6C  0E64               	movlw	100
 21664  002E6E  0100               	movlb	0	; () banked
 21665  002E70  61E5               	cpfslt	_MSDRetryAttempt& (0+255),b
 21666  002E72  D002               	goto	l674
 21667                           
 21668                           ; BSR set to: 0
 21669                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 21670  002E74  2BE5               	incf	_MSDRetryAttempt& (0+255),f,b
 21671                           
 21672                           ;usb_device_msd.c: 1088: break;
 21673  002E76  D085               	goto	l668
 21674  002E78                     l674:
 21675                           
 21676                           ; BSR set to: 0
 21677                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 21678                           
 21679                           ; BSR set to: 0
 21680  002E78  0E02               	movlw	2
 21681  002E7A  010D               	movlb	13	; () banked
 21682  002E7C  6F8C               	movwf	140,b	;volatile
 21683                           
 21684                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 21685  002E7E  0101               	movlb	1	; () banked
 21686  002E80  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21687  002E82  0BF0               	andlw	-16
 21688  002E84  0903               	iorlw	3
 21689  002E86  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21690                           
 21691                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 21692  002E88  0E00               	movlw	0
 21693  002E8A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21694                           
 21695                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 21696  002E8C  0E00               	movlw	0
 21697  002E8E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21698                           
 21699                           ; BSR set to: 1
 21700                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 21701  002E90  0E01               	movlw	1
 21702  002E92  6E01               	movwf	USBStallEndpoint@dir,c
 21703  002E94  0E02               	movlw	2
 21704  002E96  EC6C  F021         	call	_USBStallEndpoint
 21705  002E9A  D05E               	goto	l10783
 21706  002E9C                     L23:
 21707  002E9C  6FE7               	movwf	_MSDReadState& (0+255),b
 21708                           
 21709                           ;usb_device_msd.c: 1109: break;
 21710  002E9E  D071               	goto	l668
 21711  002EA0                     l675:
 21712                           
 21713                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 21714                           
 21715                           ; BSR set to: 0
 21716                           
 21717                           ; BSR set to: 0
 21718  002EA0  0E01               	movlw	1
 21719  002EA2  0101               	movlb	1	; () banked
 21720  002EA4  275A               	addwf	_LBA& (0+255),f,b
 21721  002EA6  0E00               	movlw	0
 21722  002EA8  235B               	addwfc	(_LBA+1)& (0+255),f,b
 21723  002EAA  235C               	addwfc	(_LBA+2)& (0+255),f,b
 21724  002EAC  235D               	addwfc	(_LBA+3)& (0+255),f,b
 21725                           
 21726                           ; BSR set to: 1
 21727                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 21728  002EAE  0E00               	movlw	0
 21729  002EB0  010D               	movlb	13	; () banked
 21730  002EB2  6F88               	movwf	136,b	;volatile
 21731  002EB4  0E02               	movlw	2
 21732  002EB6  6F89               	movwf	137,b	;volatile
 21733  002EB8  0E00               	movlw	0
 21734  002EBA  6F8A               	movwf	138,b	;volatile
 21735  002EBC  0E00               	movlw	0
 21736  002EBE  6F8B               	movwf	139,b	;volatile
 21737                           
 21738                           ; BSR set to: 13
 21739                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 21740  002EC0  0E00               	movlw	0
 21741  002EC2  0101               	movlb	1	; () banked
 21742  002EC4  6F82               	movwf	_ptrNextData& (0+255),b
 21743  002EC6  0E06               	movlw	6
 21744  002EC8  6F83               	movwf	(_ptrNextData+1)& (0+255),b
 21745                           
 21746                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 21747  002ECA  0E03               	movlw	3
 21748  002ECC  0100               	movlb	0	; () banked
 21749  002ECE  6FE7               	movwf	_MSDReadState& (0+255),b
 21750  002ED0                     
 21751                           ; BSR set to: 0
 21752                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 21753                           
 21754                           ; BSR set to: 0
 21755  002ED0  010D               	movlb	13	; () banked
 21756  002ED2  5188               	movf	136,w,b	;volatile
 21757  002ED4  1189               	iorwf	137,w,b	;volatile
 21758  002ED6  118A               	iorwf	138,w,b	;volatile
 21759  002ED8  118B               	iorwf	139,w,b	;volatile
 21760  002EDA  A4D8               	btfss	status,2,c
 21761  002EDC  D002               	goto	l677
 21762                           
 21763                           ; BSR set to: 13
 21764                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 21765  002EDE  0E01               	movlw	1
 21766  002EE0  D03C               	goto	L25
 21767  002EE2                     l677:
 21768                           
 21769                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 21770                           
 21771                           ; BSR set to: 0
 21772  002EE2  0E04               	movlw	4
 21773  002EE4  0100               	movlb	0	; () banked
 21774  002EE6  6FE7               	movwf	_MSDReadState& (0+255),b
 21775  002EE8                     
 21776                           ; BSR set to: 0
 21777                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 21778                           
 21779                           ; BSR set to: 0
 21780  002EE8  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 21781  002EEA  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21782  002EEC  B4D8               	btfsc	status,2,c
 21783  002EEE  D006               	goto	l679
 21784                           
 21785                           ; BSR set to: 0
 21786  002EF0  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 21787  002EF4  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21788  002EF8  BEDF               	btfsc	indf2,7,c
 21789  002EFA  D043               	goto	l668
 21790  002EFC                     l679:
 21791                           
 21792                           ; BSR set to: 0
 21793                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 21794                           
 21795                           ; BSR set to: 0
 21796  002EFC  0E01               	movlw	1
 21797  002EFE  6E01               	movwf	USBTransferOnePacket@dir,c
 21798  002F00  C182  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 21799  002F04  C183  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 21800  002F08  0E40               	movlw	64
 21801  002F0A  6E04               	movwf	USBTransferOnePacket@len,c
 21802  002F0C  0E02               	movlw	2
 21803  002F0E  EC79  F023         	call	_USBTransferOnePacket
 21804  002F12  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 21805  002F16  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 21806                           
 21807                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 21808  002F1A  0E03               	movlw	3
 21809  002F1C  0100               	movlb	0	; () banked
 21810  002F1E  6FE7               	movwf	_MSDReadState& (0+255),b
 21811                           
 21812                           ; BSR set to: 0
 21813                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 21814  002F20  0E40               	movlw	64
 21815  002F22  0101               	movlb	1	; () banked
 21816  002F24  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 21817  002F26  0E00               	movlw	0
 21818  002F28  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 21819  002F2A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 21820  002F2C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 21821                           
 21822                           ; BSR set to: 1
 21823                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 21824  002F2E  0E40               	movlw	64
 21825  002F30  010D               	movlb	13	; () banked
 21826  002F32  5F88               	subwf	136,f,b	;volatile
 21827  002F34  0E00               	movlw	0
 21828  002F36  5B89               	subwfb	137,f,b	;volatile
 21829  002F38  5B8A               	subwfb	138,f,b	;volatile
 21830  002F3A  5B8B               	subwfb	139,f,b	;volatile
 21831                           
 21832                           ; BSR set to: 13
 21833                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 21834  002F3C  0E40               	movlw	64
 21835  002F3E  0101               	movlb	1	; () banked
 21836  002F40  2782               	addwf	_ptrNextData& (0+255),f,b
 21837  002F42  0E00               	movlw	0
 21838  002F44  2383               	addwfc	(_ptrNextData+1)& (0+255),f,b
 21839                           
 21840                           ;usb_device_msd.c: 1149: break;
 21841  002F46  D01D               	goto	l668
 21842  002F48                     
 21843                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 21844                           
 21845                           ; BSR set to: 1
 21846  002F48  0E02               	movlw	2
 21847  002F4A  010D               	movlb	13	; () banked
 21848  002F4C  6F8C               	movwf	140,b	;volatile
 21849                           
 21850                           ; BSR set to: 13
 21851                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 21852  002F4E  0E01               	movlw	1
 21853  002F50  6E01               	movwf	USBStallEndpoint@dir,c
 21854  002F52  0E02               	movlw	2
 21855  002F54  EC6C  F021         	call	_USBStallEndpoint
 21856  002F58                     l10783:
 21857                           
 21858                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 21859  002F58  0E00               	movlw	0
 21860  002F5A                     L25:
 21861  002F5A  0100               	movlb	0	; () banked
 21862  002F5C  D79F               	goto	L23
 21863  002F5E                     l665:
 21864                           
 21865                           ; BSR set to: 0
 21866  002F5E  0100               	movlb	0	; () banked
 21867  002F60  51E7               	movf	_MSDReadState& (0+255),w,b
 21868                           
 21869                           ; Switch size 1, requested type "space"
 21870                           ; Number of cases is 5, Range of values is 0 to 4
 21871                           ; switch strategies available:
 21872                           ; Name         Instructions Cycles
 21873                           ; simple_byte           16     9 (average)
 21874                           ;	Chosen strategy is simple_byte
 21875  002F62  0A00               	xorlw	0	; case 0
 21876  002F64  B4D8               	btfsc	status,2,c
 21877  002F66  D724               	goto	l666
 21878  002F68  0A01               	xorlw	1	; case 1
 21879  002F6A  B4D8               	btfsc	status,2,c
 21880  002F6C  D74B               	goto	l669
 21881  002F6E  0A03               	xorlw	3	; case 2
 21882  002F70  B4D8               	btfsc	status,2,c
 21883  002F72  D753               	goto	l671
 21884  002F74  0A01               	xorlw	1	; case 3
 21885  002F76  B4D8               	btfsc	status,2,c
 21886  002F78  D7AB               	goto	l676
 21887  002F7A  0A07               	xorlw	7	; case 4
 21888  002F7C  B4D8               	btfsc	status,2,c
 21889  002F7E  D7B4               	goto	l678
 21890  002F80  D7E3               	goto	l680
 21891  002F82                     l668:
 21892                           
 21893                           ;usb_device_msd.c: 1161: return MSDReadState;
 21894                           
 21895                           ; BSR set to: 0
 21896  002F82  0100               	movlb	0	; () banked
 21897  002F84  51E7               	movf	_MSDReadState& (0+255),w,b
 21898  002F86  0012               	return	
 21899  002F88                     __end_of_MSDReadHandler:
 21900                           	opt stack 0
 21901                           tosu	equ	0xFFF
 21902                           tosh	equ	0xFFE
 21903                           tosl	equ	0xFFD
 21904                           pclath	equ	0xFFA
 21905                           tblptru	equ	0xFF8
 21906                           tblptrh	equ	0xFF7
 21907                           tblptrl	equ	0xFF6
 21908                           tablat	equ	0xFF5
 21909                           prodh	equ	0xFF4
 21910                           prodl	equ	0xFF3
 21911                           intcon	equ	0xFF2
 21912                           intcon2	equ	0xFF1
 21913                           intcon3	equ	0xFF0
 21914                           indf0	equ	0xFEF
 21915                           postinc0	equ	0xFEE
 21916                           fsr0h	equ	0xFEA
 21917                           fsr0l	equ	0xFE9
 21918                           wreg	equ	0xFE8
 21919                           indf1	equ	0xFE7
 21920                           postdec1	equ	0xFE5
 21921                           plusw1	equ	0xFE3
 21922                           fsr1h	equ	0xFE2
 21923                           fsr1l	equ	0xFE1
 21924                           indf2	equ	0xFDF
 21925                           postinc2	equ	0xFDE
 21926                           postdec2	equ	0xFDD
 21927                           plusw2	equ	0xFDB
 21928                           fsr2h	equ	0xFDA
 21929                           fsr2l	equ	0xFD9
 21930                           status	equ	0xFD8
 21931                           
 21932 ;; *************** function _MSDCheckForErrorCases *****************
 21933 ;; Defined at:
 21934 ;;		line 1434 in file "usb_device_msd.c"
 21935 ;; Parameters:    Size  Location     Type
 21936 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 21937 ;; Auto vars:     Size  Location     Type
 21938 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 21939 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 21940 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 21941 ;; Return value:  Size  Location     Type
 21942 ;;                  1    wreg      unsigned char 
 21943 ;; Registers used:
 21944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21945 ;; Tracked objects:
 21946 ;;		On entry : 0/0
 21947 ;;		On exit  : 0/0
 21948 ;;		Unchanged: 0/0
 21949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21951 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21953 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21954 ;;Total ram usage:        7 bytes
 21955 ;; Hardware stack levels used:    1
 21956 ;; Hardware stack levels required when called:    2
 21957 ;; This function calls:
 21958 ;;		_MSDErrorHandler
 21959 ;; This function is called by:
 21960 ;;		_MSDProcessCommandMediaPresent
 21961 ;;		_MSDReadHandler
 21962 ;;		_MSDWriteHandler
 21963 ;; This function uses a non-reentrant model
 21964 ;;
 21965                           
 21966                           	psect	text98
 21967  004BB8                     __ptext98:
 21968                           	opt stack 0
 21969  004BB8                     _MSDCheckForErrorCases:
 21970                           	opt stack 23
 21971                           
 21972                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 21973                           
 21974                           ; BSR set to: 0
 21975                           ;incstack = 0
 21976  004BB8  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 21977  004BBA  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 21978  004BBC  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 21979  004BBE  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 21980  004BC0  A4D8               	btfss	status,2,c
 21981  004BC2  D002               	goto	l710
 21982                           
 21983                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 21984  004BC4  0E01               	movlw	1
 21985  004BC6  D001               	goto	L26
 21986  004BC8                     l710:
 21987                           
 21988                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 21989  004BC8  0E00               	movlw	0
 21990  004BCA                     L26:
 21991  004BCA  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 21992                           
 21993                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 21994  004BCC  0100               	movlb	0	; () banked
 21995  004BCE  05E2               	decf	_MSDHostNoData& (0+255),w,b
 21996  004BD0  A4D8               	btfss	status,2,c
 21997  004BD2  D005               	goto	l712
 21998                           
 21999                           ; BSR set to: 0
 22000  004BD4  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22001  004BD6  A4D8               	btfss	status,2,c
 22002  004BD8  D002               	goto	l712
 22003                           
 22004                           ; BSR set to: 0
 22005                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 22006  004BDA  0E00               	movlw	0
 22007                           
 22008                           ; BSR set to: 0
 22009  004BDC  0012               	return	
 22010  004BDE                     l712:
 22011                           
 22012                           ; BSR set to: 0
 22013                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 22014                           
 22015                           ; BSR set to: 0
 22016  004BDE  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 22017  004BE0  0101               	movlb	1	; () banked
 22018  004BE2  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 22019  004BE4  E11A               	bnz	l10363
 22020  004BE6  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 22021  004BE8  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 22022  004BEA  E117               	bnz	l10363
 22023  004BEC  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 22024  004BEE  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 22025  004BF0  E114               	bnz	l10363
 22026  004BF2  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 22027  004BF4  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 22028  004BF6  A4D8               	btfss	status,2,c
 22029  004BF8  D010               	goto	l718
 22030                           
 22031                           ; BSR set to: 1
 22032                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 22033  004BFA  0100               	movlb	0	; () banked
 22034  004BFC  05E9               	decf	_MSD_State& (0+255),w,b
 22035  004BFE  A4D8               	btfss	status,2,c
 22036  004C00  D006               	goto	l715
 22037                           
 22038                           ; BSR set to: 0
 22039                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 22040  004C02  0E2A               	movlw	42
 22041  004C04  19E8               	xorwf	_MSDCommandState& (0+255),w,b
 22042  004C06  B4D8               	btfsc	status,2,c
 22043  004C08  D008               	goto	l718
 22044                           
 22045                           ; BSR set to: 0
 22046                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 22047  004C0A  0E00               	movlw	0
 22048                           
 22049                           ; BSR set to: 0
 22050  004C0C  0012               	return	
 22051  004C0E                     l715:
 22052                           
 22053                           ; BSR set to: 0
 22054                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 22055                           
 22056                           ; BSR set to: 0
 22057  004C0E  0E2A               	movlw	42
 22058  004C10  19E8               	xorwf	_MSDCommandState& (0+255),w,b
 22059  004C12  A4D8               	btfss	status,2,c
 22060  004C14  D002               	goto	l718
 22061                           
 22062                           ; BSR set to: 0
 22063                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 22064  004C16  0E00               	movlw	0
 22065                           
 22066                           ; BSR set to: 0
 22067  004C18  0012               	return	
 22068  004C1A                     l718:
 22069  004C1A                     l10363:
 22070                           
 22071                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 22072  004C1A  0101               	movlb	1	; () banked
 22073  004C1C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22074  004C1E  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 22075  004C20  5109               	movf	(_gblCBW+9)& (0+255),w,b
 22076  004C22  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 22077  004C24  510A               	movf	(_gblCBW+10)& (0+255),w,b
 22078  004C26  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 22079  004C28  510B               	movf	(_gblCBW+11)& (0+255),w,b
 22080  004C2A  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 22081  004C2C  B0D8               	btfsc	status,0,c
 22082  004C2E  D002               	goto	l719
 22083                           
 22084                           ; BSR set to: 1
 22085                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 22086  004C30  0E01               	movlw	1
 22087  004C32  D001               	goto	L27
 22088  004C34                     l719:
 22089                           
 22090                           ; BSR set to: 1
 22091                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 22092                           
 22093                           ; BSR set to: 1
 22094  004C34  0E00               	movlw	0
 22095  004C36                     L27:
 22096  004C36  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 22097                           
 22098                           ; BSR set to: 1
 22099                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 22100                           
 22101                           ; BSR set to: 1
 22102  004C38  0E02               	movlw	2
 22103  004C3A  0100               	movlb	0	; () banked
 22104  004C3C  19E9               	xorwf	_MSD_State& (0+255),w,b
 22105  004C3E  A4D8               	btfss	status,2,c
 22106  004C40  D014               	goto	l721
 22107                           
 22108                           ; BSR set to: 0
 22109                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 22110  004C42  0E2A               	movlw	42
 22111  004C44  19E8               	xorwf	_MSDCommandState& (0+255),w,b
 22112  004C46  B4D8               	btfsc	status,2,c
 22113  004C48  D005               	goto	l722
 22114                           
 22115                           ; BSR set to: 0
 22116  004C4A  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 22117  004C4C  A4D8               	btfss	status,2,c
 22118  004C4E  D002               	goto	l722
 22119  004C50                     u7080:
 22120                           
 22121                           ; BSR set to: 0
 22122                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 22123  004C50  0E05               	movlw	5
 22124  004C52  D01D               	goto	L30
 22125  004C54                     l722:
 22126                           
 22127                           ; BSR set to: 0
 22128                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 22129                           
 22130                           ; BSR set to: 0
 22131  004C54  05E2               	decf	_MSDHostNoData& (0+255),w,b
 22132  004C56  B4D8               	btfsc	status,2,c
 22133  004C58  D00F               	goto	u7130
 22134                           
 22135                           ; BSR set to: 0
 22136                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 22137                           
 22138                           ; BSR set to: 0
 22139                           
 22140                           ; BSR set to: 0
 22141                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 22142  004C5A  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22143  004C5C  B4D8               	btfsc	status,2,c
 22144  004C5E  D003               	goto	u7110
 22145                           
 22146                           ; BSR set to: 0
 22147                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 22148                           
 22149                           ; BSR set to: 0
 22150                           
 22151                           ; BSR set to: 0
 22152                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 22153  004C60  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 22154  004C62  A4D8               	btfss	status,2,c
 22155  004C64  D7F5               	goto	u7080
 22156  004C66                     u7110:
 22157                           
 22158                           ; BSR set to: 0
 22159                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 22160  004C66  0E04               	movlw	4
 22161  004C68  D012               	goto	L30
 22162  004C6A                     l721:
 22163                           
 22164                           ; BSR set to: 0
 22165                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 22166                           
 22167                           ; BSR set to: 0
 22168  004C6A  0E2A               	movlw	42
 22169  004C6C  19E8               	xorwf	_MSDCommandState& (0+255),w,b
 22170  004C6E  B4D8               	btfsc	status,2,c
 22171  004C70  D00D               	goto	l737
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 22175                           
 22176                           ; BSR set to: 0
 22177                           
 22178                           ; BSR set to: 0
 22179                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 22180  004C72  05E2               	decf	_MSDHostNoData& (0+255),w,b
 22181  004C74  A4D8               	btfss	status,2,c
 22182  004C76  D002               	goto	l733
 22183  004C78                     u7130:
 22184                           
 22185                           ; BSR set to: 0
 22186                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 22187  004C78  0E01               	movlw	1
 22188  004C7A  D009               	goto	L30
 22189  004C7C                     l733:
 22190                           
 22191                           ; BSR set to: 0
 22192                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 22193                           
 22194                           ; BSR set to: 0
 22195  004C7C  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22196  004C7E  B4D8               	btfsc	status,2,c
 22197  004C80  D003               	goto	u7150
 22198                           
 22199                           ; BSR set to: 0
 22200                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 22201                           
 22202                           ; BSR set to: 0
 22203                           
 22204                           ; BSR set to: 0
 22205                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 22206  004C82  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 22207  004C84  A4D8               	btfss	status,2,c
 22208  004C86  D002               	goto	l737
 22209  004C88                     u7150:
 22210                           
 22211                           ; BSR set to: 0
 22212                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 22213  004C88  0E02               	movlw	2
 22214  004C8A  D001               	goto	L30
 22215  004C8C                     l737:
 22216                           
 22217                           ; BSR set to: 0
 22218                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 22219                           
 22220                           ; BSR set to: 0
 22221  004C8C  0E03               	movlw	3
 22222  004C8E                     L30:
 22223  004C8E  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 22224                           
 22225                           ; BSR set to: 0
 22226                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 22227                           
 22228                           ; BSR set to: 0
 22229                           
 22230                           ; BSR set to: 0
 22231                           
 22232                           ; BSR set to: 0
 22233                           
 22234                           ; BSR set to: 0
 22235                           
 22236                           ; BSR set to: 0
 22237  004C90  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 22238  004C92  ECF6  F022         	call	_MSDErrorHandler
 22239                           
 22240                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 22241  004C96  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 22242  004C98  0012               	return	
 22243  004C9A                     __end_of_MSDCheckForErrorCases:
 22244                           	opt stack 0
 22245                           tosu	equ	0xFFF
 22246                           tosh	equ	0xFFE
 22247                           tosl	equ	0xFFD
 22248                           pclath	equ	0xFFA
 22249                           tblptru	equ	0xFF8
 22250                           tblptrh	equ	0xFF7
 22251                           tblptrl	equ	0xFF6
 22252                           tablat	equ	0xFF5
 22253                           prodh	equ	0xFF4
 22254                           prodl	equ	0xFF3
 22255                           intcon	equ	0xFF2
 22256                           intcon2	equ	0xFF1
 22257                           intcon3	equ	0xFF0
 22258                           indf0	equ	0xFEF
 22259                           postinc0	equ	0xFEE
 22260                           fsr0h	equ	0xFEA
 22261                           fsr0l	equ	0xFE9
 22262                           wreg	equ	0xFE8
 22263                           indf1	equ	0xFE7
 22264                           postdec1	equ	0xFE5
 22265                           plusw1	equ	0xFE3
 22266                           fsr1h	equ	0xFE2
 22267                           fsr1l	equ	0xFE1
 22268                           indf2	equ	0xFDF
 22269                           postinc2	equ	0xFDE
 22270                           postdec2	equ	0xFDD
 22271                           plusw2	equ	0xFDB
 22272                           fsr2h	equ	0xFDA
 22273                           fsr2l	equ	0xFD9
 22274                           status	equ	0xFD8
 22275                           
 22276 ;; *************** function _MSDErrorHandler *****************
 22277 ;; Defined at:
 22278 ;;		line 1577 in file "usb_device_msd.c"
 22279 ;; Parameters:    Size  Location     Type
 22280 ;;  ErrorCase       1    wreg     unsigned char 
 22281 ;; Auto vars:     Size  Location     Type
 22282 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 22283 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 22284 ;; Return value:  Size  Location     Type
 22285 ;;                  1    wreg      void 
 22286 ;; Registers used:
 22287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22288 ;; Tracked objects:
 22289 ;;		On entry : 0/0
 22290 ;;		On exit  : 0/0
 22291 ;;		Unchanged: 0/0
 22292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22297 ;;Total ram usage:        2 bytes
 22298 ;; Hardware stack levels used:    1
 22299 ;; Hardware stack levels required when called:    1
 22300 ;; This function calls:
 22301 ;;		_ResetSenseData
 22302 ;;		_USBStallEndpoint
 22303 ;; This function is called by:
 22304 ;;		_MSDProcessCommandMediaAbsent
 22305 ;;		_MSDProcessCommandMediaPresent
 22306 ;;		_MSDCheckForErrorCases
 22307 ;; This function uses a non-reentrant model
 22308 ;;
 22309                           
 22310                           	psect	text99
 22311  0045EC                     __ptext99:
 22312                           	opt stack 0
 22313  0045EC                     _MSDErrorHandler:
 22314                           	opt stack 23
 22315                           
 22316                           ;incstack = 0
 22317                           ;MSDErrorHandler@ErrorCase stored from wreg
 22318  0045EC  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 22319                           
 22320                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 22321  0045EE  0100               	movlb	0	; () banked
 22322  0045F0  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 22323  0045F2  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 22324  0045F4  B4D8               	btfsc	status,2,c
 22325  0045F6  D006               	goto	u6640
 22326                           
 22327                           ; BSR set to: 0
 22328  0045F8  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 22329  0045FC  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 22330  004600  BEDF               	btfsc	indf2,7,c
 22331  004602  0012               	return	
 22332  004604                     u6640:
 22333                           
 22334                           ; BSR set to: 0
 22335                           
 22336                           ; BSR set to: 0
 22337  004604  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 22338  004606  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22339  004608  B4D8               	btfsc	status,2,c
 22340  00460A  D006               	goto	l741
 22341                           
 22342                           ; BSR set to: 0
 22343  00460C  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22344  004610  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22345  004614  BEDF               	btfsc	indf2,7,c
 22346  004616  0012               	return	
 22347  004618                     l741:
 22348                           
 22349                           ; BSR set to: 0
 22350                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 22351  004618  C0E9  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 22352                           
 22353                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 22354  00461C  69E8               	setf	_MSDCommandState& (0+255),b
 22355                           
 22356                           ; BSR set to: 0
 22357                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 22358  00461E  0E00               	movlw	0
 22359  004620  6FE7               	movwf	_MSDReadState& (0+255),b
 22360                           
 22361                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 22362  004622  0E00               	movlw	0
 22363  004624  6FE6               	movwf	_MSDWriteState& (0+255),b
 22364                           
 22365                           ; BSR set to: 0
 22366                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 22367  004626  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 22368  00462A  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 22369  00462E  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 22370  004632  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 22371                           
 22372                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 22373  004636  0E01               	movlw	1
 22374  004638  010D               	movlb	13	; () banked
 22375  00463A  6F8C               	movwf	140,b	;volatile
 22376                           
 22377                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 22378  00463C  0E03               	movlw	3
 22379  00463E  0100               	movlb	0	; () banked
 22380  004640  6FE9               	movwf	_MSD_State& (0+255),b
 22381                           
 22382                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 22383  004642  D043               	goto	l747
 22384  004644                     
 22385                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 22386                           
 22387                           ; BSR set to: 0
 22388  004644  0E02               	movlw	2
 22389  004646  010D               	movlb	13	; () banked
 22390  004648  6F8C               	movwf	140,b	;volatile
 22391                           
 22392                           ;usb_device_msd.c: 1607: break;
 22393  00464A  0012               	return	
 22394  00464C                     
 22395                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 22396                           
 22397                           ; BSR set to: 13
 22398  00464C  0E01               	movlw	1
 22399  00464E  6E01               	movwf	USBStallEndpoint@dir,c
 22400  004650  0E02               	movlw	2
 22401  004652  EC6C  F021         	call	_USBStallEndpoint
 22402                           
 22403                           ;usb_device_msd.c: 1611: break;
 22404  004656  0012               	return	
 22405  004658                     
 22406                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 22407  004658  0E02               	movlw	2
 22408  00465A  010D               	movlb	13	; () banked
 22409  00465C  6F8C               	movwf	140,b	;volatile
 22410                           
 22411                           ; BSR set to: 13
 22412                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 22413  00465E  0E01               	movlw	1
 22414  004660  6E01               	movwf	USBStallEndpoint@dir,c
 22415  004662  0E02               	movlw	2
 22416  004664  EC6C  F021         	call	_USBStallEndpoint
 22417                           
 22418                           ;usb_device_msd.c: 1616: break;
 22419  004668  0012               	return	
 22420  00466A                     
 22421                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 22422  00466A  0E00               	movlw	0
 22423  00466C  6E01               	movwf	USBStallEndpoint@dir,c
 22424  00466E  0E02               	movlw	2
 22425  004670  EC6C  F021         	call	_USBStallEndpoint
 22426                           
 22427                           ;usb_device_msd.c: 1620: break;
 22428  004674  0012               	return	
 22429  004676                     
 22430                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 22431  004676  0E02               	movlw	2
 22432  004678  010D               	movlb	13	; () banked
 22433  00467A  6F8C               	movwf	140,b	;volatile
 22434                           
 22435                           ; BSR set to: 13
 22436                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 22437  00467C  0E00               	movlw	0
 22438  00467E  6E01               	movwf	USBStallEndpoint@dir,c
 22439  004680  0E02               	movlw	2
 22440  004682  EC6C  F021         	call	_USBStallEndpoint
 22441                           
 22442                           ;usb_device_msd.c: 1625: break;
 22443  004686  0012               	return	
 22444  004688                     
 22445                           ;usb_device_msd.c: 1628: ResetSenseData();
 22446  004688  EC9D  F037         	call	_ResetSenseData	;wreg free
 22447                           
 22448                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 22449  00468C  0101               	movlb	1	; () banked
 22450  00468E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 22451  004690  0BF0               	andlw	-16
 22452  004692  0905               	iorlw	5
 22453  004694  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 22454                           
 22455                           ; BSR set to: 1
 22456                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 22457  004696  0E20               	movlw	32
 22458  004698  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22459                           
 22460                           ; BSR set to: 1
 22461                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 22462  00469A  0E00               	movlw	0
 22463  00469C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22464                           
 22465                           ; BSR set to: 1
 22466                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 22467  00469E  0E02               	movlw	2
 22468  0046A0  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 22469  0046A2  A4D8               	btfss	status,2,c
 22470  0046A4  D00C               	goto	l755
 22471                           
 22472                           ; BSR set to: 1
 22473  0046A6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22474  0046A8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 22475  0046AA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22476  0046AC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22477  0046AE  B4D8               	btfsc	status,2,c
 22478  0046B0  D006               	goto	l755
 22479                           
 22480                           ; BSR set to: 1
 22481                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 22482  0046B2  0E00               	movlw	0
 22483  0046B4  6E01               	movwf	USBStallEndpoint@dir,c
 22484  0046B6  0E02               	movlw	2
 22485  0046B8  EC6C  F021         	call	_USBStallEndpoint
 22486                           
 22487                           ;usb_device_msd.c: 1636: }
 22488  0046BC  0012               	return	
 22489  0046BE                     l755:
 22490                           
 22491                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 22492  0046BE  0E01               	movlw	1
 22493  0046C0  6E01               	movwf	USBStallEndpoint@dir,c
 22494  0046C2  0E02               	movlw	2
 22495  0046C4  EC6C  F021         	call	_USBStallEndpoint
 22496                           
 22497                           ;usb_device_msd.c: 1644: }
 22498                           
 22499                           ;usb_device_msd.c: 1643: break;
 22500                           
 22501                           ;usb_device_msd.c: 1642: default:
 22502                           
 22503                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 22504  0046C8  0012               	return	
 22505  0046CA                     l747:
 22506  0046CA  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 22507                           
 22508                           ; Switch size 1, requested type "space"
 22509                           ; Number of cases is 6, Range of values is 1 to 127
 22510                           ; switch strategies available:
 22511                           ; Name         Instructions Cycles
 22512                           ; simple_byte           19    10 (average)
 22513                           ;	Chosen strategy is simple_byte
 22514  0046CC  0A01               	xorlw	1	; case 1
 22515  0046CE  B4D8               	btfsc	status,2,c
 22516  0046D0  D7B9               	goto	l748
 22517  0046D2  0A03               	xorlw	3	; case 2
 22518  0046D4  B4D8               	btfsc	status,2,c
 22519  0046D6  D7BA               	goto	l750
 22520  0046D8  0A01               	xorlw	1	; case 3
 22521  0046DA  B4D8               	btfsc	status,2,c
 22522  0046DC  D7BD               	goto	l751
 22523  0046DE  0A07               	xorlw	7	; case 4
 22524  0046E0  B4D8               	btfsc	status,2,c
 22525  0046E2  D7C3               	goto	l752
 22526  0046E4  0A01               	xorlw	1	; case 5
 22527  0046E6  B4D8               	btfsc	status,2,c
 22528  0046E8  D7C6               	goto	l753
 22529  0046EA  0A7A               	xorlw	122	; case 127
 22530  0046EC  A4D8               	btfss	status,2,c
 22531  0046EE  0012               	return	
 22532  0046F0  D7CB               	goto	l754
 22533  0046F2                     __end_of_MSDErrorHandler:
 22534                           	opt stack 0
 22535                           tosu	equ	0xFFF
 22536                           tosh	equ	0xFFE
 22537                           tosl	equ	0xFFD
 22538                           pclath	equ	0xFFA
 22539                           tblptru	equ	0xFF8
 22540                           tblptrh	equ	0xFF7
 22541                           tblptrl	equ	0xFF6
 22542                           tablat	equ	0xFF5
 22543                           prodh	equ	0xFF4
 22544                           prodl	equ	0xFF3
 22545                           intcon	equ	0xFF2
 22546                           intcon2	equ	0xFF1
 22547                           intcon3	equ	0xFF0
 22548                           indf0	equ	0xFEF
 22549                           postinc0	equ	0xFEE
 22550                           fsr0h	equ	0xFEA
 22551                           fsr0l	equ	0xFE9
 22552                           wreg	equ	0xFE8
 22553                           indf1	equ	0xFE7
 22554                           postdec1	equ	0xFE5
 22555                           plusw1	equ	0xFE3
 22556                           fsr1h	equ	0xFE2
 22557                           fsr1l	equ	0xFE1
 22558                           indf2	equ	0xFDF
 22559                           postinc2	equ	0xFDE
 22560                           postdec2	equ	0xFDD
 22561                           plusw2	equ	0xFDB
 22562                           fsr2h	equ	0xFDA
 22563                           fsr2l	equ	0xFD9
 22564                           status	equ	0xFD8
 22565                           
 22566 ;; *************** function _USBStallEndpoint *****************
 22567 ;; Defined at:
 22568 ;;		line 1073 in file "usb_device.c"
 22569 ;; Parameters:    Size  Location     Type
 22570 ;;  ep              1    wreg     unsigned char 
 22571 ;;  dir             1    0[COMRAM] unsigned char 
 22572 ;; Auto vars:     Size  Location     Type
 22573 ;;  ep              1    5[COMRAM] unsigned char 
 22574 ;;  p               2    6[COMRAM] PTR struct __BDT
 22575 ;;		 -> BDT(48), 
 22576 ;; Return value:  Size  Location     Type
 22577 ;;                  1    wreg      void 
 22578 ;; Registers used:
 22579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22580 ;; Tracked objects:
 22581 ;;		On entry : 0/0
 22582 ;;		On exit  : 0/0
 22583 ;;		Unchanged: 0/0
 22584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22585 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22586 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22587 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22588 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22589 ;;Total ram usage:        8 bytes
 22590 ;; Hardware stack levels used:    1
 22591 ;; This function calls:
 22592 ;;		Nothing
 22593 ;; This function is called by:
 22594 ;;		_MSDTasks
 22595 ;;		_MSDReadHandler
 22596 ;;		_MSDWriteHandler
 22597 ;;		_MSDErrorHandler
 22598 ;;		_MSDTransferTerminated
 22599 ;; This function uses a non-reentrant model
 22600 ;;
 22601                           
 22602                           	psect	text100
 22603  0042D8                     __ptext100:
 22604                           	opt stack 0
 22605  0042D8                     _USBStallEndpoint:
 22606                           	opt stack 27
 22607                           
 22608                           ;incstack = 0
 22609                           ;USBStallEndpoint@ep stored from wreg
 22610  0042D8  6E06               	movwf	USBStallEndpoint@ep,c
 22611                           
 22612                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 22613  0042DA  5006               	movf	USBStallEndpoint@ep,w,c
 22614  0042DC  A4D8               	btfss	status,2,c
 22615  0042DE  D02C               	goto	l191
 22616                           
 22617                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 22618  0042E0  0100               	movlb	0	; () banked
 22619  0042E2  EE20 F001          	lfsr	2,1
 22620  0042E6  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22621  0042E8  26D9               	addwf	fsr2l,f,c
 22622  0042EA  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22623  0042EC  22DA               	addwfc	fsr2h,f,c
 22624  0042EE  0E08               	movlw	8
 22625  0042F0  6EDF               	movwf	indf2,c
 22626                           
 22627                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22628  0042F2  EE20 F002          	lfsr	2,2
 22629  0042F6  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22630  0042F8  26D9               	addwf	fsr2l,f,c
 22631  0042FA  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22632  0042FC  22DA               	addwfc	fsr2h,f,c
 22633  0042FE  0E30               	movlw	48
 22634  004300  6EDE               	movwf	postinc2,c
 22635  004302  0E0D               	movlw	13
 22636  004304  6EDD               	movwf	postdec2,c
 22637                           
 22638                           ; BSR set to: 0
 22639                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22640  004306  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22641  00430A  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22642  00430E  0E0C               	movlw	12
 22643  004310  6EDF               	movwf	indf2,c
 22644                           
 22645                           ; BSR set to: 0
 22646                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22647  004312  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22648  004316  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22649  00431A  0E00               	movlw	0
 22650  00431C  8EDB               	bsf	plusw2,7,c
 22651                           
 22652                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 22653  00431E  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 22654  004322  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22655  004326  0E04               	movlw	4
 22656  004328  6EDF               	movwf	indf2,c
 22657                           
 22658                           ; BSR set to: 0
 22659                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22660  00432A  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 22661  00432E  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22662  004332  0E00               	movlw	0
 22663  004334  8EDB               	bsf	plusw2,7,c
 22664                           
 22665                           ;usb_device.c: 1089: }
 22666  004336  0012               	return	
 22667  004338                     l191:
 22668                           
 22669                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 22670                           
 22671                           ; BSR set to: 0
 22672  004338  5001               	movf	USBStallEndpoint@dir,w,c
 22673  00433A  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 22674  00433C  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 22675  00433E  90D8               	bcf	status,0,c
 22676  004340  3602               	rlcf	??_USBStallEndpoint,f,c
 22677  004342  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22678  004344  5006               	movf	USBStallEndpoint@ep,w,c
 22679  004346  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 22680  004348  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 22681  00434A  90D8               	bcf	status,0,c
 22682  00434C  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22683  00434E  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22684  004350  90D8               	bcf	status,0,c
 22685  004352  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22686  004354  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22687  004356  5002               	movf	??_USBStallEndpoint,w,c
 22688  004358  2604               	addwf	??_USBStallEndpoint+2,f,c
 22689  00435A  5003               	movf	??_USBStallEndpoint+1,w,c
 22690  00435C  2205               	addwfc	??_USBStallEndpoint+3,f,c
 22691  00435E  90D8               	bcf	status,0,c
 22692  004360  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22693  004362  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22694  004364  90D8               	bcf	status,0,c
 22695  004366  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22696  004368  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22697  00436A  0E00               	movlw	0
 22698  00436C  2404               	addwf	??_USBStallEndpoint+2,w,c
 22699  00436E  6E07               	movwf	USBStallEndpoint@p,c
 22700  004370  0E0D               	movlw	13
 22701  004372  2005               	addwfc	??_USBStallEndpoint+3,w,c
 22702  004374  6E08               	movwf	USBStallEndpoint@p+1,c
 22703                           
 22704                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 22705  004376  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22706  00437A  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22707  00437E  0E00               	movlw	0
 22708  004380  84DB               	bsf	plusw2,2,c
 22709                           
 22710                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 22711  004382  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22712  004386  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22713  00438A  0E00               	movlw	0
 22714  00438C  8EDB               	bsf	plusw2,7,c
 22715                           
 22716                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 22717  00438E  5006               	movf	USBStallEndpoint@ep,w,c
 22718  004390  0D04               	mullw	4
 22719  004392  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 22720  004396  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 22721  00439A  5001               	movf	USBStallEndpoint@dir,w,c
 22722  00439C  0D02               	mullw	2
 22723  00439E  50F3               	movf	prodl,w,c
 22724  0043A0  2602               	addwf	??_USBStallEndpoint,f,c
 22725  0043A2  50F4               	movf	prodh,w,c
 22726  0043A4  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22727  0043A6  90D8               	bcf	status,0,c
 22728  0043A8  3602               	rlcf	??_USBStallEndpoint,f,c
 22729  0043AA  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22730  0043AC  90D8               	bcf	status,0,c
 22731  0043AE  3602               	rlcf	??_USBStallEndpoint,f,c
 22732  0043B0  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22733  0043B2  0E04               	movlw	4
 22734  0043B4  2602               	addwf	??_USBStallEndpoint,f,c
 22735  0043B6  0E00               	movlw	0
 22736  0043B8  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22737  0043BA  0E00               	movlw	0
 22738  0043BC  2402               	addwf	??_USBStallEndpoint,w,c
 22739  0043BE  6E07               	movwf	USBStallEndpoint@p,c
 22740  0043C0  0E0D               	movlw	13
 22741  0043C2  2003               	addwfc	??_USBStallEndpoint+1,w,c
 22742  0043C4  6E08               	movwf	USBStallEndpoint@p+1,c
 22743                           
 22744                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 22745  0043C6  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22746  0043CA  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22747  0043CE  0E00               	movlw	0
 22748  0043D0  84DB               	bsf	plusw2,2,c
 22749                           
 22750                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 22751  0043D2  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22752  0043D6  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22753  0043DA  0E00               	movlw	0
 22754  0043DC  8EDB               	bsf	plusw2,7,c
 22755  0043DE  0012               	return	
 22756  0043E0                     __end_of_USBStallEndpoint:
 22757                           	opt stack 0
 22758                           tosu	equ	0xFFF
 22759                           tosh	equ	0xFFE
 22760                           tosl	equ	0xFFD
 22761                           pclath	equ	0xFFA
 22762                           tblptru	equ	0xFF8
 22763                           tblptrh	equ	0xFF7
 22764                           tblptrl	equ	0xFF6
 22765                           tablat	equ	0xFF5
 22766                           prodh	equ	0xFF4
 22767                           prodl	equ	0xFF3
 22768                           intcon	equ	0xFF2
 22769                           intcon2	equ	0xFF1
 22770                           intcon3	equ	0xFF0
 22771                           indf0	equ	0xFEF
 22772                           postinc0	equ	0xFEE
 22773                           fsr0h	equ	0xFEA
 22774                           fsr0l	equ	0xFE9
 22775                           wreg	equ	0xFE8
 22776                           indf1	equ	0xFE7
 22777                           postdec1	equ	0xFE5
 22778                           plusw1	equ	0xFE3
 22779                           fsr1h	equ	0xFE2
 22780                           fsr1l	equ	0xFE1
 22781                           indf2	equ	0xFDF
 22782                           postinc2	equ	0xFDE
 22783                           postdec2	equ	0xFDD
 22784                           plusw2	equ	0xFDB
 22785                           fsr2h	equ	0xFDA
 22786                           fsr2l	equ	0xFD9
 22787                           status	equ	0xFD8
 22788                           
 22789 ;; *************** function _ResetSenseData *****************
 22790 ;; Defined at:
 22791 ;;		line 1373 in file "usb_device_msd.c"
 22792 ;; Parameters:    Size  Location     Type
 22793 ;;		None
 22794 ;; Auto vars:     Size  Location     Type
 22795 ;;		None
 22796 ;; Return value:  Size  Location     Type
 22797 ;;                  1    wreg      void 
 22798 ;; Registers used:
 22799 ;;		wreg, status,2
 22800 ;; Tracked objects:
 22801 ;;		On entry : 0/0
 22802 ;;		On exit  : 0/0
 22803 ;;		Unchanged: 0/0
 22804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22809 ;;Total ram usage:        0 bytes
 22810 ;; Hardware stack levels used:    1
 22811 ;; This function calls:
 22812 ;;		Nothing
 22813 ;; This function is called by:
 22814 ;;		_USBMSDInit
 22815 ;;		_MSDProcessCommandMediaAbsent
 22816 ;;		_MSDProcessCommandMediaPresent
 22817 ;;		_MSDErrorHandler
 22818 ;; This function uses a non-reentrant model
 22819 ;;
 22820                           
 22821                           	psect	text101
 22822  006F3A                     __ptext101:
 22823                           	opt stack 0
 22824  006F3A                     _ResetSenseData:
 22825                           	opt stack 26
 22826                           
 22827                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 22828                           
 22829                           ;incstack = 0
 22830  006F3A  0101               	movlb	1	; () banked
 22831  006F3C  911F               	bcf	_gblSenseData& (0+255),0,b
 22832  006F3E  931F               	bcf	_gblSenseData& (0+255),1,b
 22833  006F40  951F               	bcf	_gblSenseData& (0+255),2,b
 22834  006F42  971F               	bcf	_gblSenseData& (0+255),3,b
 22835  006F44  891F               	bsf	_gblSenseData& (0+255),4,b
 22836  006F46  8B1F               	bsf	_gblSenseData& (0+255),5,b
 22837  006F48  8D1F               	bsf	_gblSenseData& (0+255),6,b
 22838                           
 22839                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 22840  006F4A  9F1F               	bcf	_gblSenseData& (0+255),7,b
 22841                           
 22842                           ; BSR set to: 1
 22843                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 22844  006F4C  0E00               	movlw	0
 22845  006F4E  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 22846                           
 22847                           ; BSR set to: 1
 22848                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 22849  006F50  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 22850  006F52  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 22851  006F54  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 22852  006F56  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 22853                           
 22854                           ; BSR set to: 1
 22855                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 22856  006F58  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 22857                           
 22858                           ; BSR set to: 1
 22859                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 22860  006F5A  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 22861                           
 22862                           ; BSR set to: 1
 22863                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 22864  006F5C  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 22865                           
 22866                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 22867  006F5E  0E00               	movlw	0
 22868  006F60  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 22869                           
 22870                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 22871  006F62  0E00               	movlw	0
 22872  006F64  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 22873                           
 22874                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 22875  006F66  0E00               	movlw	0
 22876  006F68  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 22877                           
 22878                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 22879  006F6A  0E00               	movlw	0
 22880  006F6C  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 22881                           
 22882                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 22883  006F6E  0E0A               	movlw	10
 22884  006F70  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 22885                           
 22886                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 22887  006F72  0E00               	movlw	0
 22888  006F74  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 22889  006F76  0E00               	movlw	0
 22890  006F78  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 22891  006F7A  0E00               	movlw	0
 22892  006F7C  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 22893  006F7E  0E00               	movlw	0
 22894  006F80  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 22895                           
 22896                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 22897  006F82  0E00               	movlw	0
 22898  006F84  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22899                           
 22900                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 22901  006F86  0E00               	movlw	0
 22902  006F88  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22903                           
 22904                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 22905  006F8A  0E00               	movlw	0
 22906  006F8C  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 22907                           
 22908                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 22909  006F8E  0E00               	movlw	0
 22910  006F90  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 22911                           
 22912                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 22913  006F92  0E00               	movlw	0
 22914  006F94  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 22915                           
 22916                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 22917  006F96  0E00               	movlw	0
 22918  006F98  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 22919                           
 22920                           ; BSR set to: 1
 22921  006F9A  0012               	return		;funcret
 22922  006F9C                     __end_of_ResetSenseData:
 22923                           	opt stack 0
 22924                           tosu	equ	0xFFF
 22925                           tosh	equ	0xFFE
 22926                           tosl	equ	0xFFD
 22927                           pclath	equ	0xFFA
 22928                           tblptru	equ	0xFF8
 22929                           tblptrh	equ	0xFF7
 22930                           tblptrl	equ	0xFF6
 22931                           tablat	equ	0xFF5
 22932                           prodh	equ	0xFF4
 22933                           prodl	equ	0xFF3
 22934                           intcon	equ	0xFF2
 22935                           intcon2	equ	0xFF1
 22936                           intcon3	equ	0xFF0
 22937                           indf0	equ	0xFEF
 22938                           postinc0	equ	0xFEE
 22939                           fsr0h	equ	0xFEA
 22940                           fsr0l	equ	0xFE9
 22941                           wreg	equ	0xFE8
 22942                           indf1	equ	0xFE7
 22943                           postdec1	equ	0xFE5
 22944                           plusw1	equ	0xFE3
 22945                           fsr1h	equ	0xFE2
 22946                           fsr1l	equ	0xFE1
 22947                           indf2	equ	0xFDF
 22948                           postinc2	equ	0xFDE
 22949                           postdec2	equ	0xFDD
 22950                           plusw2	equ	0xFDB
 22951                           fsr2h	equ	0xFDA
 22952                           fsr2l	equ	0xFD9
 22953                           status	equ	0xFD8
 22954                           
 22955 ;; *************** function _ExternalFlash_SectorRead *****************
 22956 ;; Defined at:
 22957 ;;		line 40 in file "external_flash.c"
 22958 ;; Parameters:    Size  Location     Type
 22959 ;;  config          2   43[COMRAM] PTR void 
 22960 ;;		 -> NULL(0), 
 22961 ;;  sector_addr     4   45[COMRAM] unsigned long 
 22962 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 22963 ;;		 -> msd_buffer(512), 
 22964 ;; Auto vars:     Size  Location     Type
 22965 ;;  page            2   51[COMRAM] unsigned int 
 22966 ;; Return value:  Size  Location     Type
 22967 ;;                  1    wreg      unsigned char 
 22968 ;; Registers used:
 22969 ;;		wreg, status,2, status,0, cstack
 22970 ;; Tracked objects:
 22971 ;;		On entry : 0/0
 22972 ;;		On exit  : 0/0
 22973 ;;		Unchanged: 0/0
 22974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22975 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22978 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22979 ;;Total ram usage:       10 bytes
 22980 ;; Hardware stack levels used:    1
 22981 ;; Hardware stack levels required when called:    5
 22982 ;; This function calls:
 22983 ;;		_flash_page_read
 22984 ;; This function is called by:
 22985 ;;		_MSDReadHandler
 22986 ;; This function uses a non-reentrant model
 22987 ;;
 22988                           
 22989                           	psect	text102
 22990  007BA2                     __ptext102:
 22991                           	opt stack 0
 22992  007BA2                     _ExternalFlash_SectorRead:
 22993                           	opt stack 20
 22994                           
 22995                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 22996                           
 22997                           ; BSR set to: 1
 22998                           ;incstack = 0
 22999  007BA2  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 23000  007BA6  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 23001                           
 23002                           ;external_flash.c: 45: if(sector_addr >= 8192)
 23003  007BAA  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 23004  007BAC  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 23005  007BAE  E104               	bnz	u7270
 23006  007BB0  0E20               	movlw	32
 23007  007BB2  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 23008  007BB4  A0D8               	btfss	status,0,c
 23009  007BB6  D002               	goto	l1873
 23010  007BB8                     u7270:
 23011                           
 23012                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 23013  007BB8  0E00               	movlw	0
 23014  007BBA  0012               	return	
 23015  007BBC                     l1873:
 23016                           
 23017                           ;external_flash.c: 48: };external_flash.c: 51: flash_page_read(page, buffer);
 23018  007BBC  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 23019  007BC0  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 23020  007BC4  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 23021  007BC8  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 23022  007BCC  ECEA  F03D         	call	_flash_page_read	;wreg free
 23023                           
 23024                           ;external_flash.c: 53: return 1;
 23025  007BD0  0E01               	movlw	1
 23026  007BD2  0012               	return	
 23027  007BD4                     __end_of_ExternalFlash_SectorRead:
 23028                           	opt stack 0
 23029                           tosu	equ	0xFFF
 23030                           tosh	equ	0xFFE
 23031                           tosl	equ	0xFFD
 23032                           pclath	equ	0xFFA
 23033                           tblptru	equ	0xFF8
 23034                           tblptrh	equ	0xFF7
 23035                           tblptrl	equ	0xFF6
 23036                           tablat	equ	0xFF5
 23037                           prodh	equ	0xFF4
 23038                           prodl	equ	0xFF3
 23039                           intcon	equ	0xFF2
 23040                           intcon2	equ	0xFF1
 23041                           intcon3	equ	0xFF0
 23042                           indf0	equ	0xFEF
 23043                           postinc0	equ	0xFEE
 23044                           fsr0h	equ	0xFEA
 23045                           fsr0l	equ	0xFE9
 23046                           wreg	equ	0xFE8
 23047                           indf1	equ	0xFE7
 23048                           postdec1	equ	0xFE5
 23049                           plusw1	equ	0xFE3
 23050                           fsr1h	equ	0xFE2
 23051                           fsr1l	equ	0xFE1
 23052                           indf2	equ	0xFDF
 23053                           postinc2	equ	0xFDE
 23054                           postdec2	equ	0xFDD
 23055                           plusw2	equ	0xFDB
 23056                           fsr2h	equ	0xFDA
 23057                           fsr2l	equ	0xFD9
 23058                           status	equ	0xFD8
 23059                           
 23060 ;; *************** function _flash_page_read *****************
 23061 ;; Defined at:
 23062 ;;		line 419 in file "flash.c"
 23063 ;; Parameters:    Size  Location     Type
 23064 ;;  page            2   39[COMRAM] unsigned int 
 23065 ;;  data            2   41[COMRAM] PTR unsigned char 
 23066 ;;		 -> buffer(512), msd_buffer(512), 
 23067 ;; Auto vars:     Size  Location     Type
 23068 ;;		None
 23069 ;; Return value:  Size  Location     Type
 23070 ;;                  1    wreg      void 
 23071 ;; Registers used:
 23072 ;;		wreg, status,2, status,0, cstack
 23073 ;; Tracked objects:
 23074 ;;		On entry : 0/0
 23075 ;;		On exit  : 0/0
 23076 ;;		Unchanged: 0/0
 23077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23078 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23081 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23082 ;;Total ram usage:        4 bytes
 23083 ;; Hardware stack levels used:    1
 23084 ;; Hardware stack levels required when called:    4
 23085 ;; This function calls:
 23086 ;;		__flash_partial_read
 23087 ;;		_spi_set_configuration
 23088 ;; This function is called by:
 23089 ;;		_ExternalFlash_SectorRead
 23090 ;;		_fat_get_format_status
 23091 ;; This function uses a non-reentrant model
 23092 ;;
 23093                           
 23094                           	psect	text103
 23095  007BD4                     __ptext103:
 23096                           	opt stack 0
 23097  007BD4                     _flash_page_read:
 23098                           	opt stack 23
 23099                           
 23100                           ;flash.c: 422: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 23101                           
 23102                           ;incstack = 0
 23103  007BD4  0E00               	movlw	0
 23104  007BD6  EC7A  F024         	call	_spi_set_configuration
 23105                           
 23106                           ;flash.c: 425: _flash_partial_read(page, 0, 512, data);
 23107  007BDA  C028  F014         	movff	flash_page_read@page,__flash_partial_read@page
 23108  007BDE  C029  F015         	movff	flash_page_read@page+1,__flash_partial_read@page+1
 23109  007BE2  0E00               	movlw	0
 23110  007BE4  6E17               	movwf	__flash_partial_read@start+1,c
 23111  007BE6  0E00               	movlw	0
 23112  007BE8  6E16               	movwf	__flash_partial_read@start,c
 23113  007BEA  0E02               	movlw	2
 23114  007BEC  6E19               	movwf	__flash_partial_read@length+1,c
 23115  007BEE  0E00               	movlw	0
 23116  007BF0  6E18               	movwf	__flash_partial_read@length,c
 23117  007BF2  C02A  F01A         	movff	flash_page_read@data,__flash_partial_read@data
 23118  007BF6  C02B  F01B         	movff	flash_page_read@data+1,__flash_partial_read@data+1
 23119  007BFA  EC31  F034         	call	__flash_partial_read	;wreg free
 23120                           
 23121                           ;flash.c: 428: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 23122  007BFE  0E01               	movlw	1
 23123  007C00  EC7A  F024         	call	_spi_set_configuration
 23124  007C04  0012               	return		;funcret
 23125  007C06                     __end_of_flash_page_read:
 23126                           	opt stack 0
 23127                           tosu	equ	0xFFF
 23128                           tosh	equ	0xFFE
 23129                           tosl	equ	0xFFD
 23130                           pclath	equ	0xFFA
 23131                           tblptru	equ	0xFF8
 23132                           tblptrh	equ	0xFF7
 23133                           tblptrl	equ	0xFF6
 23134                           tablat	equ	0xFF5
 23135                           prodh	equ	0xFF4
 23136                           prodl	equ	0xFF3
 23137                           intcon	equ	0xFF2
 23138                           intcon2	equ	0xFF1
 23139                           intcon3	equ	0xFF0
 23140                           indf0	equ	0xFEF
 23141                           postinc0	equ	0xFEE
 23142                           fsr0h	equ	0xFEA
 23143                           fsr0l	equ	0xFE9
 23144                           wreg	equ	0xFE8
 23145                           indf1	equ	0xFE7
 23146                           postdec1	equ	0xFE5
 23147                           plusw1	equ	0xFE3
 23148                           fsr1h	equ	0xFE2
 23149                           fsr1l	equ	0xFE1
 23150                           indf2	equ	0xFDF
 23151                           postinc2	equ	0xFDE
 23152                           postdec2	equ	0xFDD
 23153                           plusw2	equ	0xFDB
 23154                           fsr2h	equ	0xFDA
 23155                           fsr2l	equ	0xFD9
 23156                           status	equ	0xFD8
 23157                           
 23158 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 23159 ;; Defined at:
 23160 ;;		line 993 in file "usb_device_msd.c"
 23161 ;; Parameters:    Size  Location     Type
 23162 ;;  DiExpected      2    0[COMRAM] unsigned int 
 23163 ;; Auto vars:     Size  Location     Type
 23164 ;;		None
 23165 ;; Return value:  Size  Location     Type
 23166 ;;                  1    wreg      void 
 23167 ;; Registers used:
 23168 ;;		wreg, status,2, status,0
 23169 ;; Tracked objects:
 23170 ;;		On entry : 0/0
 23171 ;;		On exit  : 0/0
 23172 ;;		Unchanged: 0/0
 23173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23176 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23177 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23178 ;;Total ram usage:        6 bytes
 23179 ;; Hardware stack levels used:    1
 23180 ;; This function calls:
 23181 ;;		Nothing
 23182 ;; This function is called by:
 23183 ;;		_MSDProcessCommandMediaPresent
 23184 ;; This function uses a non-reentrant model
 23185 ;;
 23186                           
 23187                           	psect	text104
 23188  005F22                     __ptext104:
 23189                           	opt stack 0
 23190  005F22                     _MSDComputeDeviceInAndResidue:
 23191                           	opt stack 26
 23192                           
 23193                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 23194                           
 23195                           ;incstack = 0
 23196  005F22  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 23197  005F24  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 23198  005F26  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 23199  005F28  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 23200  005F2A  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 23201  005F2C  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 23202  005F2E  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 23203  005F30  0101               	movlb	1	; () banked
 23204  005F32  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 23205  005F34  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 23206  005F36  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 23207  005F38  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 23208  005F3A  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 23209  005F3C  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 23210  005F3E  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 23211  005F40  B0D8               	btfsc	status,0,c
 23212  005F42  D00E               	goto	l659
 23213                           
 23214                           ; BSR set to: 1
 23215                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 23216  005F44  0E00               	movlw	0
 23217  005F46  010D               	movlb	13	; () banked
 23218  005F48  6F88               	movwf	136,b	;volatile
 23219  005F4A  0E00               	movlw	0
 23220  005F4C  6F89               	movwf	137,b	;volatile
 23221  005F4E  0E00               	movlw	0
 23222  005F50  6F8A               	movwf	138,b	;volatile
 23223  005F52  0E00               	movlw	0
 23224  005F54  6F8B               	movwf	139,b	;volatile
 23225                           
 23226                           ; BSR set to: 13
 23227                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 23228  005F56  C108  F0D3         	movff	_gblCBW+8,_TransferLength
 23229  005F5A  C109  F0D4         	movff	_gblCBW+9,_TransferLength+1
 23230                           
 23231                           ;usb_device_msd.c: 1002: }
 23232  005F5E  0012               	return	
 23233  005F60                     l659:
 23234                           
 23235                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 23236                           
 23237                           ; BSR set to: 13
 23238  005F60  0100               	movlb	0	; () banked
 23239  005F62  51D3               	movf	_TransferLength& (0+255),w,b
 23240  005F64  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 23241  005F66  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 23242  005F68  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 23243  005F6A  B0D8               	btfsc	status,0,c
 23244  005F6C  D004               	goto	l661
 23245                           
 23246                           ; BSR set to: 0
 23247                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 23248  005F6E  C001  F0D3         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 23249  005F72  C002  F0D4         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 23250  005F76                     l661:
 23251                           
 23252                           ; BSR set to: 0
 23253                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 23254                           
 23255                           ; BSR set to: 0
 23256  005F76  51D3               	movf	_TransferLength& (0+255),w,b
 23257  005F78  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 23258  005F7A  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 23259  005F7C  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 23260  005F7E  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 23261  005F80  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 23262  005F82  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 23263  005F84  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 23264  005F86  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 23265  005F88  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 23266  005F8A  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 23267  005F8C  0E00               	movlw	0
 23268  005F8E  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 23269  005F90  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 23270  005F92  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 23271  005F94  0101               	movlb	1	; () banked
 23272  005F96  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23273  005F98  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 23274  005F9A  010D               	movlb	13	; () banked
 23275  005F9C  6F88               	movwf	136,b	;volatile
 23276  005F9E  0101               	movlb	1	; () banked
 23277  005FA0  5109               	movf	(_gblCBW+9)& (0+255),w,b
 23278  005FA2  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 23279  005FA4  010D               	movlb	13	; () banked
 23280  005FA6  6F89               	movwf	137,b	;volatile
 23281  005FA8  0101               	movlb	1	; () banked
 23282  005FAA  510A               	movf	(_gblCBW+10)& (0+255),w,b
 23283  005FAC  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 23284  005FAE  010D               	movlb	13	; () banked
 23285  005FB0  6F8A               	movwf	138,b	;volatile
 23286  005FB2  0101               	movlb	1	; () banked
 23287  005FB4  510B               	movf	(_gblCBW+11)& (0+255),w,b
 23288  005FB6  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 23289  005FB8  010D               	movlb	13	; () banked
 23290  005FBA  6F8B               	movwf	139,b	;volatile
 23291  005FBC  0012               	return	
 23292  005FBE                     __end_of_MSDComputeDeviceInAndResidue:
 23293                           	opt stack 0
 23294                           tosu	equ	0xFFF
 23295                           tosh	equ	0xFFE
 23296                           tosl	equ	0xFFD
 23297                           pclath	equ	0xFFA
 23298                           tblptru	equ	0xFF8
 23299                           tblptrh	equ	0xFF7
 23300                           tblptrl	equ	0xFF6
 23301                           tablat	equ	0xFF5
 23302                           prodh	equ	0xFF4
 23303                           prodl	equ	0xFF3
 23304                           intcon	equ	0xFF2
 23305                           intcon2	equ	0xFF1
 23306                           intcon3	equ	0xFF0
 23307                           indf0	equ	0xFEF
 23308                           postinc0	equ	0xFEE
 23309                           fsr0h	equ	0xFEA
 23310                           fsr0l	equ	0xFE9
 23311                           wreg	equ	0xFE8
 23312                           indf1	equ	0xFE7
 23313                           postdec1	equ	0xFE5
 23314                           plusw1	equ	0xFE3
 23315                           fsr1h	equ	0xFE2
 23316                           fsr1l	equ	0xFE1
 23317                           indf2	equ	0xFDF
 23318                           postinc2	equ	0xFDE
 23319                           postdec2	equ	0xFDD
 23320                           plusw2	equ	0xFDB
 23321                           fsr2h	equ	0xFDA
 23322                           fsr2l	equ	0xFD9
 23323                           status	equ	0xFD8
 23324                           
 23325 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 23326 ;; Defined at:
 23327 ;;		line 18 in file "external_flash.c"
 23328 ;; Parameters:    Size  Location     Type
 23329 ;;  config          2    0[COMRAM] PTR void 
 23330 ;;		 -> NULL(0), 
 23331 ;; Auto vars:     Size  Location     Type
 23332 ;;		None
 23333 ;; Return value:  Size  Location     Type
 23334 ;;                  2    0[COMRAM] unsigned int 
 23335 ;; Registers used:
 23336 ;;		wreg, status,2
 23337 ;; Tracked objects:
 23338 ;;		On entry : 0/0
 23339 ;;		On exit  : 0/0
 23340 ;;		Unchanged: 0/0
 23341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23346 ;;Total ram usage:        2 bytes
 23347 ;; Hardware stack levels used:    1
 23348 ;; This function calls:
 23349 ;;		Nothing
 23350 ;; This function is called by:
 23351 ;;		_MSDProcessCommandMediaPresent
 23352 ;; This function uses a non-reentrant model
 23353 ;;
 23354                           
 23355                           	psect	text105
 23356  008172                     __ptext105:
 23357                           	opt stack 0
 23358  008172                     _ExternalFlash_SectorSizeRead:
 23359                           	opt stack 26
 23360                           
 23361                           ;external_flash.c: 20: return 512;
 23362                           
 23363                           ; BSR set to: 13
 23364                           ;incstack = 0
 23365  008172  0E02               	movlw	2
 23366  008174  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 23367  008176  0E00               	movlw	0
 23368  008178  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 23369  00817A  0012               	return	
 23370  00817C                     __end_of_ExternalFlash_SectorSizeRead:
 23371                           	opt stack 0
 23372                           tosu	equ	0xFFF
 23373                           tosh	equ	0xFFE
 23374                           tosl	equ	0xFFD
 23375                           pclath	equ	0xFFA
 23376                           tblptru	equ	0xFF8
 23377                           tblptrh	equ	0xFF7
 23378                           tblptrl	equ	0xFF6
 23379                           tablat	equ	0xFF5
 23380                           prodh	equ	0xFF4
 23381                           prodl	equ	0xFF3
 23382                           intcon	equ	0xFF2
 23383                           intcon2	equ	0xFF1
 23384                           intcon3	equ	0xFF0
 23385                           indf0	equ	0xFEF
 23386                           postinc0	equ	0xFEE
 23387                           fsr0h	equ	0xFEA
 23388                           fsr0l	equ	0xFE9
 23389                           wreg	equ	0xFE8
 23390                           indf1	equ	0xFE7
 23391                           postdec1	equ	0xFE5
 23392                           plusw1	equ	0xFE3
 23393                           fsr1h	equ	0xFE2
 23394                           fsr1l	equ	0xFE1
 23395                           indf2	equ	0xFDF
 23396                           postinc2	equ	0xFDE
 23397                           postdec2	equ	0xFDD
 23398                           plusw2	equ	0xFDB
 23399                           fsr2h	equ	0xFDA
 23400                           fsr2l	equ	0xFD9
 23401                           status	equ	0xFD8
 23402                           
 23403 ;; *************** function _ExternalFlash_CapacityRead *****************
 23404 ;; Defined at:
 23405 ;;		line 23 in file "external_flash.c"
 23406 ;; Parameters:    Size  Location     Type
 23407 ;;  config          2    0[COMRAM] PTR void 
 23408 ;;		 -> NULL(0), 
 23409 ;; Auto vars:     Size  Location     Type
 23410 ;;		None
 23411 ;; Return value:  Size  Location     Type
 23412 ;;                  4    0[COMRAM] unsigned long 
 23413 ;; Registers used:
 23414 ;;		wreg, status,2
 23415 ;; Tracked objects:
 23416 ;;		On entry : 0/0
 23417 ;;		On exit  : 0/0
 23418 ;;		Unchanged: 0/0
 23419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23423 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23424 ;;Total ram usage:        4 bytes
 23425 ;; Hardware stack levels used:    1
 23426 ;; This function calls:
 23427 ;;		Nothing
 23428 ;; This function is called by:
 23429 ;;		_MSDProcessCommandMediaPresent
 23430 ;; This function uses a non-reentrant model
 23431 ;;
 23432                           
 23433                           	psect	text106
 23434  00809A                     __ptext106:
 23435                           	opt stack 0
 23436  00809A                     _ExternalFlash_CapacityRead:
 23437                           	opt stack 26
 23438                           
 23439                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 23440                           
 23441                           ;incstack = 0
 23442  00809A  0EFF               	movlw	255
 23443  00809C  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 23444  00809E  0E1F               	movlw	31
 23445  0080A0  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 23446  0080A2  0E00               	movlw	0
 23447  0080A4  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 23448  0080A6  0E00               	movlw	0
 23449  0080A8  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 23450  0080AA  0012               	return	
 23451  0080AC                     __end_of_ExternalFlash_CapacityRead:
 23452                           	opt stack 0
 23453                           tosu	equ	0xFFF
 23454                           tosh	equ	0xFFE
 23455                           tosl	equ	0xFFD
 23456                           pclath	equ	0xFFA
 23457                           tblptru	equ	0xFF8
 23458                           tblptrh	equ	0xFF7
 23459                           tblptrl	equ	0xFF6
 23460                           tablat	equ	0xFF5
 23461                           prodh	equ	0xFF4
 23462                           prodl	equ	0xFF3
 23463                           intcon	equ	0xFF2
 23464                           intcon2	equ	0xFF1
 23465                           intcon3	equ	0xFF0
 23466                           indf0	equ	0xFEF
 23467                           postinc0	equ	0xFEE
 23468                           fsr0h	equ	0xFEA
 23469                           fsr0l	equ	0xFE9
 23470                           wreg	equ	0xFE8
 23471                           indf1	equ	0xFE7
 23472                           postdec1	equ	0xFE5
 23473                           plusw1	equ	0xFE3
 23474                           fsr1h	equ	0xFE2
 23475                           fsr1l	equ	0xFE1
 23476                           indf2	equ	0xFDF
 23477                           postinc2	equ	0xFDE
 23478                           postdec2	equ	0xFDD
 23479                           plusw2	equ	0xFDB
 23480                           fsr2h	equ	0xFDA
 23481                           fsr2l	equ	0xFD9
 23482                           status	equ	0xFD8
 23483                           
 23484 ;; *************** function _ExternalFlash_MediaInitialize *****************
 23485 ;; Defined at:
 23486 ;;		line 10 in file "external_flash.c"
 23487 ;; Parameters:    Size  Location     Type
 23488 ;;  config          2    0[COMRAM] PTR void 
 23489 ;;		 -> NULL(0), 
 23490 ;; Auto vars:     Size  Location     Type
 23491 ;;		None
 23492 ;; Return value:  Size  Location     Type
 23493 ;;                  2    0[COMRAM] PTR struct .
 23494 ;; Registers used:
 23495 ;;		wreg, status,2, status,0
 23496 ;; Tracked objects:
 23497 ;;		On entry : 0/0
 23498 ;;		On exit  : 0/0
 23499 ;;		Unchanged: 0/0
 23500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23505 ;;Total ram usage:        2 bytes
 23506 ;; Hardware stack levels used:    1
 23507 ;; This function calls:
 23508 ;;		Nothing
 23509 ;; This function is called by:
 23510 ;;		_USBMSDInit
 23511 ;;		_MSDProcessCommand
 23512 ;; This function uses a non-reentrant model
 23513 ;;
 23514                           
 23515                           	psect	text107
 23516  007FFC                     __ptext107:
 23517                           	opt stack 0
 23518  007FFC                     _ExternalFlash_MediaInitialize:
 23519                           	opt stack 26
 23520                           
 23521                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 23522                           
 23523                           ;incstack = 0
 23524  007FFC  0101               	movlb	1	; () banked
 23525  007FFE  81D2               	bsf	(_mediaInformation+1)& (0+255),0,b
 23526                           
 23527                           ; BSR set to: 1
 23528                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 23529  008000  0E02               	movlw	2
 23530  008002  6FD4               	movwf	(_mediaInformation+3)& (0+255),b
 23531  008004  0E00               	movlw	0
 23532  008006  6FD3               	movwf	(_mediaInformation+2)& (0+255),b
 23533                           
 23534                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 23535  008008  0E00               	movlw	0
 23536  00800A  6FD1               	movwf	_mediaInformation& (0+255),b
 23537                           
 23538                           ; BSR set to: 1
 23539                           ;external_flash.c: 15: return &mediaInformation;
 23540  00800C  0ED1               	movlw	low _mediaInformation
 23541  00800E  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 23542  008010  0E01               	movlw	high _mediaInformation
 23543  008012  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 23544  008014  0012               	return	
 23545  008016                     __end_of_ExternalFlash_MediaInitialize:
 23546                           	opt stack 0
 23547                           tosu	equ	0xFFF
 23548                           tosh	equ	0xFFE
 23549                           tosl	equ	0xFFD
 23550                           pclath	equ	0xFFA
 23551                           tblptru	equ	0xFF8
 23552                           tblptrh	equ	0xFF7
 23553                           tblptrl	equ	0xFF6
 23554                           tablat	equ	0xFF5
 23555                           prodh	equ	0xFF4
 23556                           prodl	equ	0xFF3
 23557                           intcon	equ	0xFF2
 23558                           intcon2	equ	0xFF1
 23559                           intcon3	equ	0xFF0
 23560                           indf0	equ	0xFEF
 23561                           postinc0	equ	0xFEE
 23562                           fsr0h	equ	0xFEA
 23563                           fsr0l	equ	0xFE9
 23564                           wreg	equ	0xFE8
 23565                           indf1	equ	0xFE7
 23566                           postdec1	equ	0xFE5
 23567                           plusw1	equ	0xFE3
 23568                           fsr1h	equ	0xFE2
 23569                           fsr1l	equ	0xFE1
 23570                           indf2	equ	0xFDF
 23571                           postinc2	equ	0xFDE
 23572                           postdec2	equ	0xFDD
 23573                           plusw2	equ	0xFDB
 23574                           fsr2h	equ	0xFDA
 23575                           fsr2l	equ	0xFD9
 23576                           status	equ	0xFD8
 23577                           
 23578 ;; *************** function _ExternalFlash_MediaDetect *****************
 23579 ;; Defined at:
 23580 ;;		line 29 in file "external_flash.c"
 23581 ;; Parameters:    Size  Location     Type
 23582 ;;  config          2    0[COMRAM] PTR void 
 23583 ;;		 -> NULL(0), 
 23584 ;; Auto vars:     Size  Location     Type
 23585 ;;		None
 23586 ;; Return value:  Size  Location     Type
 23587 ;;                  1    wreg      unsigned char 
 23588 ;; Registers used:
 23589 ;;		wreg
 23590 ;; Tracked objects:
 23591 ;;		On entry : 0/0
 23592 ;;		On exit  : 0/0
 23593 ;;		Unchanged: 0/0
 23594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23598 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23599 ;;Total ram usage:        2 bytes
 23600 ;; Hardware stack levels used:    1
 23601 ;; This function calls:
 23602 ;;		Nothing
 23603 ;; This function is called by:
 23604 ;;		_USBMSDInit
 23605 ;;		_MSDProcessCommand
 23606 ;; This function uses a non-reentrant model
 23607 ;;
 23608                           
 23609                           	psect	text108
 23610  008202                     __ptext108:
 23611                           	opt stack 0
 23612  008202                     _ExternalFlash_MediaDetect:
 23613                           	opt stack 26
 23614                           
 23615                           ;external_flash.c: 31: return 1;
 23616                           
 23617                           ; BSR set to: 1
 23618                           ;incstack = 0
 23619  008202  0E01               	movlw	1
 23620  008204  0012               	return	
 23621  008206                     __end_of_ExternalFlash_MediaDetect:
 23622                           	opt stack 0
 23623                           tosu	equ	0xFFF
 23624                           tosh	equ	0xFFE
 23625                           tosl	equ	0xFFD
 23626                           pclath	equ	0xFFA
 23627                           tblptru	equ	0xFF8
 23628                           tblptrh	equ	0xFF7
 23629                           tblptrl	equ	0xFF6
 23630                           tablat	equ	0xFF5
 23631                           prodh	equ	0xFF4
 23632                           prodl	equ	0xFF3
 23633                           intcon	equ	0xFF2
 23634                           intcon2	equ	0xFF1
 23635                           intcon3	equ	0xFF0
 23636                           indf0	equ	0xFEF
 23637                           postinc0	equ	0xFEE
 23638                           fsr0h	equ	0xFEA
 23639                           fsr0l	equ	0xFE9
 23640                           wreg	equ	0xFE8
 23641                           indf1	equ	0xFE7
 23642                           postdec1	equ	0xFE5
 23643                           plusw1	equ	0xFE3
 23644                           fsr1h	equ	0xFE2
 23645                           fsr1l	equ	0xFE1
 23646                           indf2	equ	0xFDF
 23647                           postinc2	equ	0xFDE
 23648                           postdec2	equ	0xFDD
 23649                           plusw2	equ	0xFDB
 23650                           fsr2h	equ	0xFDA
 23651                           fsr2l	equ	0xFD9
 23652                           status	equ	0xFD8
 23653                           
 23654 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 23655 ;; Defined at:
 23656 ;;		line 74 in file "app_device_custom_hid.c"
 23657 ;; Parameters:    Size  Location     Type
 23658 ;;		None
 23659 ;; Auto vars:     Size  Location     Type
 23660 ;;  idx             1    0        unsigned char 
 23661 ;; Return value:  Size  Location     Type
 23662 ;;                  1    wreg      void 
 23663 ;; Registers used:
 23664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23665 ;; Tracked objects:
 23666 ;;		On entry : 0/0
 23667 ;;		On exit  : 0/0
 23668 ;;		Unchanged: 0/0
 23669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23672 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23673 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23674 ;;Total ram usage:        4 bytes
 23675 ;; Hardware stack levels used:    1
 23676 ;; Hardware stack levels required when called:   11
 23677 ;; This function calls:
 23678 ;;		_USBTransferOnePacket
 23679 ;;		_api_parse
 23680 ;;		_api_prepare
 23681 ;; This function is called by:
 23682 ;;		_main
 23683 ;; This function uses a non-reentrant model
 23684 ;;
 23685                           
 23686                           	psect	text109
 23687  005AAE                     __ptext109:
 23688                           	opt stack 0
 23689  005AAE                     _APP_DeviceCustomHIDTasks:
 23690                           	opt stack 19
 23691                           
 23692                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 23693                           
 23694                           ;incstack = 0
 23695  005AAE  0E20               	movlw	32
 23696  005AB0  605F               	cpfslt	_USBDeviceState,c
 23697  005AB2  D001               	goto	l963
 23698  005AB4  0012               	return	
 23699  005AB6                     l963:
 23700                           
 23701                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 23702  005AB6  B265               	btfsc	3941,1,c	;volatile
 23703  005AB8  0012               	return	
 23704                           
 23705                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 23706                           
 23707                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 23708  005ABA  0101               	movlb	1	; () banked
 23709  005ABC  517C               	movf	_USBOutHandle& (0+255),w,b
 23710  005ABE  117D               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 23711  005AC0  B4D8               	btfsc	status,2,c
 23712  005AC2  D006               	goto	u11640
 23713                           
 23714                           ; BSR set to: 1
 23715  005AC4  C17C  FFD9         	movff	_USBOutHandle,fsr2l
 23716  005AC8  C17D  FFDA         	movff	_USBOutHandle+1,fsr2h
 23717  005ACC  BEDF               	btfsc	indf2,7,c
 23718  005ACE  0012               	return	
 23719  005AD0                     u11640:
 23720                           
 23721                           ; BSR set to: 1
 23722                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 23723                           
 23724                           ; BSR set to: 1
 23725  005AD0  517A               	movf	_USBInHandle& (0+255),w,b
 23726  005AD2  117B               	iorwf	(_USBInHandle+1)& (0+255),w,b
 23727  005AD4  B4D8               	btfsc	status,2,c
 23728  005AD6  D006               	goto	u11660
 23729                           
 23730                           ; BSR set to: 1
 23731  005AD8  C17A  FFD9         	movff	_USBInHandle,fsr2l
 23732  005ADC  C17B  FFDA         	movff	_USBInHandle+1,fsr2h
 23733  005AE0  BEDF               	btfsc	indf2,7,c
 23734  005AE2  D020               	goto	l969
 23735  005AE4                     u11660:
 23736                           
 23737                           ; BSR set to: 1
 23738                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 23739                           
 23740                           ; BSR set to: 1
 23741  005AE4  0E90               	movlw	_ReceivedDataBuffer& (0+255)
 23742  005AE6  0100               	movlb	0	; () banked
 23743  005AE8  6FAB               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 23744  005AEA  6BAC               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 23745  005AEC  C0AB  F0A7         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 23746  005AF0  C0AC  F0A8         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 23747  005AF4  0E40               	movlw	_ToSendDataBuffer& (0+255)
 23748  005AF6  6FAD               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 23749  005AF8  6BAE               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 23750  005AFA  C0AD  F0A9         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 23751  005AFE  C0AE  F0AA         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 23752  005B02  ECC7  F01F         	call	_api_prepare	;wreg free
 23753                           
 23754                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 23755  005B06  0E01               	movlw	1
 23756  005B08  6E01               	movwf	USBTransferOnePacket@dir,c
 23757  005B0A  0E40               	movlw	low _ToSendDataBuffer
 23758  005B0C  6E02               	movwf	USBTransferOnePacket@data,c
 23759  005B0E  0E03               	movlw	high _ToSendDataBuffer
 23760  005B10  6E03               	movwf	USBTransferOnePacket@data+1,c
 23761  005B12  0E40               	movlw	64
 23762  005B14  6E04               	movwf	USBTransferOnePacket@len,c
 23763  005B16  0E01               	movlw	1
 23764  005B18  EC79  F023         	call	_USBTransferOnePacket
 23765  005B1C  C001  F17A         	movff	?_USBTransferOnePacket,_USBInHandle
 23766  005B20  C002  F17B         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 23767  005B24                     l969:
 23768                           
 23769                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 23770  005B24  0E90               	movlw	low _ReceivedDataBuffer
 23771  005B26  0100               	movlb	0	; () banked
 23772  005B28  6F93               	movwf	api_parse@inBuffer& (0+255),b
 23773  005B2A  0E02               	movlw	high _ReceivedDataBuffer
 23774  005B2C  6F94               	movwf	(api_parse@inBuffer+1)& (0+255),b
 23775  005B2E  0E40               	movlw	64
 23776  005B30  6F95               	movwf	api_parse@receivedDataLength& (0+255),b
 23777  005B32  EC75  F028         	call	_api_parse	;wreg free
 23778                           
 23779                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 23780  005B36  0E00               	movlw	0
 23781  005B38  6E01               	movwf	USBTransferOnePacket@dir,c
 23782  005B3A  0E90               	movlw	low _ReceivedDataBuffer
 23783  005B3C  6E02               	movwf	USBTransferOnePacket@data,c
 23784  005B3E  0E02               	movlw	high _ReceivedDataBuffer
 23785  005B40  6E03               	movwf	USBTransferOnePacket@data+1,c
 23786  005B42  0E40               	movlw	64
 23787  005B44  6E04               	movwf	USBTransferOnePacket@len,c
 23788  005B46  0E01               	movlw	1
 23789  005B48  EC79  F023         	call	_USBTransferOnePacket
 23790  005B4C  C001  F17C         	movff	?_USBTransferOnePacket,_USBOutHandle
 23791  005B50  C002  F17D         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 23792  005B54  0012               	return	
 23793  005B56                     __end_of_APP_DeviceCustomHIDTasks:
 23794                           	opt stack 0
 23795                           tosu	equ	0xFFF
 23796                           tosh	equ	0xFFE
 23797                           tosl	equ	0xFFD
 23798                           pclath	equ	0xFFA
 23799                           tblptru	equ	0xFF8
 23800                           tblptrh	equ	0xFF7
 23801                           tblptrl	equ	0xFF6
 23802                           tablat	equ	0xFF5
 23803                           prodh	equ	0xFF4
 23804                           prodl	equ	0xFF3
 23805                           intcon	equ	0xFF2
 23806                           intcon2	equ	0xFF1
 23807                           intcon3	equ	0xFF0
 23808                           indf0	equ	0xFEF
 23809                           postinc0	equ	0xFEE
 23810                           fsr0h	equ	0xFEA
 23811                           fsr0l	equ	0xFE9
 23812                           wreg	equ	0xFE8
 23813                           indf1	equ	0xFE7
 23814                           postdec1	equ	0xFE5
 23815                           plusw1	equ	0xFE3
 23816                           fsr1h	equ	0xFE2
 23817                           fsr1l	equ	0xFE1
 23818                           indf2	equ	0xFDF
 23819                           postinc2	equ	0xFDE
 23820                           postdec2	equ	0xFDD
 23821                           plusw2	equ	0xFDB
 23822                           fsr2h	equ	0xFDA
 23823                           fsr2l	equ	0xFD9
 23824                           status	equ	0xFD8
 23825                           
 23826 ;; *************** function _api_prepare *****************
 23827 ;; Defined at:
 23828 ;;		line 52 in file "api.c"
 23829 ;; Parameters:    Size  Location     Type
 23830 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 23831 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 23832 ;;  outBuffer       2   73[BANK0 ] PTR unsigned char 
 23833 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23834 ;; Auto vars:     Size  Location     Type
 23835 ;;  command         1   93[COMRAM] enum E6715
 23836 ;; Return value:  Size  Location     Type
 23837 ;;                  1    wreg      void 
 23838 ;; Registers used:
 23839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23840 ;; Tracked objects:
 23841 ;;		On entry : 0/0
 23842 ;;		On exit  : 0/0
 23843 ;;		Unchanged: 0/0
 23844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23848 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23849 ;;Total ram usage:        5 bytes
 23850 ;; Hardware stack levels used:    1
 23851 ;; Hardware stack levels required when called:    9
 23852 ;; This function calls:
 23853 ;;		__fill_buffer_find_file
 23854 ;;		__fill_buffer_get_bootloader_details
 23855 ;;		__fill_buffer_get_configuration
 23856 ;;		__fill_buffer_get_display
 23857 ;;		__fill_buffer_get_file_details
 23858 ;;		__fill_buffer_get_status
 23859 ;;		__fill_buffer_read_file
 23860 ;;		_flash_is_busy
 23861 ;;		_memcpy
 23862 ;; This function is called by:
 23863 ;;		_main
 23864 ;;		_APP_DeviceCustomHIDTasks
 23865 ;; This function uses a non-reentrant model
 23866 ;;
 23867                           
 23868                           	psect	text110
 23869  003F8E                     __ptext110:
 23870                           	opt stack 0
 23871  003F8E                     _api_prepare:
 23872                           	opt stack 21
 23873                           
 23874                           ;api.c: 54: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 23875                           
 23876                           ;incstack = 0
 23877  003F8E  C0A7  FFD9         	movff	api_prepare@inBuffer,fsr2l
 23878  003F92  C0A8  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 23879  003F96  50DF               	movf	indf2,w,c
 23880  003F98  6E5E               	movwf	api_prepare@command,c
 23881                           
 23882                           ;api.c: 56: if(command>0x7F)
 23883  003F9A  0E7F               	movlw	127
 23884  003F9C  645E               	cpfsgt	api_prepare@command,c
 23885  003F9E  D073               	goto	l2584
 23886                           
 23887                           ;api.c: 57: {;api.c: 61: if(flash_is_busy())
 23888  003FA0  EC2F  F040         	call	_flash_is_busy	;wreg free
 23889  003FA4  0900               	iorlw	0
 23890  003FA6  B4D8               	btfsc	status,2,c
 23891  003FA8  D028               	goto	l2578
 23892                           
 23893                           ;api.c: 62: {;api.c: 63: _fill_buffer_get_status(outBuffer);
 23894  003FAA  C0A9  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 23895  003FAE  C0AA  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 23896  003FB2  EC4D  F026         	call	__fill_buffer_get_status	;wreg free
 23897                           
 23898                           ;api.c: 64: return;
 23899  003FB6  0012               	return	
 23900  003FB8                     
 23901                           ;api.c: 72: _fill_buffer_get_file_details(inBuffer, outBuffer);
 23902  003FB8  C0A7  F03F         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 23903  003FBC  C0A8  F040         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 23904  003FC0  C0A9  F041         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 23905  003FC4  C0AA  F042         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 23906  003FC8  ECC5  F035         	call	__fill_buffer_get_file_details	;wreg free
 23907                           
 23908                           ;api.c: 73: break;
 23909  003FCC  0012               	return	
 23910  003FCE                     
 23911                           ;api.c: 77: _fill_buffer_find_file(inBuffer, outBuffer);
 23912  003FCE  C0A7  F044         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 23913  003FD2  C0A8  F045         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 23914  003FD6  C0A9  F046         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 23915  003FDA  C0AA  F047         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 23916  003FDE  ECA2  F02E         	call	__fill_buffer_find_file	;wreg free
 23917                           
 23918                           ;api.c: 78: break;
 23919  003FE2  0012               	return	
 23920  003FE4                     
 23921                           ;api.c: 82: _fill_buffer_read_file(inBuffer, outBuffer);
 23922  003FE4  C0A7  F093         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 23923  003FE8  C0A8  F094         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 23924  003FEC  C0A9  F095         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 23925  003FF0  C0AA  F096         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 23926  003FF4  ECEC  F011         	call	__fill_buffer_read_file	;wreg free
 23927                           
 23928                           ;api.c: 84: }
 23929                           
 23930                           ;api.c: 83: break;
 23931  003FF8  0012               	return	
 23932  003FFA                     l2578:
 23933  003FFA  505E               	movf	api_prepare@command,w,c
 23934                           
 23935                           ; Switch size 1, requested type "space"
 23936                           ; Number of cases is 3, Range of values is 128 to 130
 23937                           ; switch strategies available:
 23938                           ; Name         Instructions Cycles
 23939                           ; simple_byte           10     6 (average)
 23940                           ;	Chosen strategy is simple_byte
 23941  003FFC  0A80               	xorlw	128	; case 128
 23942  003FFE  B4D8               	btfsc	status,2,c
 23943  004000  D7DB               	goto	l2579
 23944  004002  0A01               	xorlw	1	; case 129
 23945  004004  B4D8               	btfsc	status,2,c
 23946  004006  D7E3               	goto	l2581
 23947  004008  0A03               	xorlw	3	; case 130
 23948  00400A  A4D8               	btfss	status,2,c
 23949                           
 23950                           ;api.c: 85: }
 23951  00400C  0012               	return	
 23952  00400E  D7EA               	goto	l2582
 23953  004010                     
 23954                           ;api.c: 93: _fill_buffer_get_status(outBuffer);
 23955  004010  C0A9  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 23956  004014  C0AA  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 23957  004018  EC4D  F026         	call	__fill_buffer_get_status	;wreg free
 23958                           
 23959                           ;api.c: 94: break;
 23960  00401C  0012               	return	
 23961  00401E                     
 23962                           ;api.c: 98: _fill_buffer_get_display(outBuffer, 0);
 23963  00401E  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 23964  004022  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 23965  004026  0E00               	movlw	0
 23966  004028  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 23967  00402A  ECF8  F02B         	call	__fill_buffer_get_display	;wreg free
 23968                           
 23969                           ;api.c: 99: break;
 23970  00402E  0012               	return	
 23971  004030                     
 23972                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 1);
 23973  004030  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 23974  004034  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 23975  004038  0E01               	movlw	1
 23976  00403A  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 23977  00403C  ECF8  F02B         	call	__fill_buffer_get_display	;wreg free
 23978                           
 23979                           ;api.c: 104: break;
 23980  004040  0012               	return	
 23981  004042                     
 23982                           ;api.c: 108: _fill_buffer_get_bootloader_details(outBuffer);
 23983  004042  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 23984  004046  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 23985  00404A  ECF1  F014         	call	__fill_buffer_get_bootloader_details	;wreg free
 23986                           
 23987                           ;api.c: 109: break;
 23988  00404E  0012               	return	
 23989  004050                     
 23990                           ;api.c: 113: _fill_buffer_get_configuration(outBuffer);
 23991  004050  C0A9  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 23992  004054  C0AA  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 23993  004058  EC42  F02F         	call	__fill_buffer_get_configuration	;wreg free
 23994                           
 23995                           ;api.c: 114: break;
 23996  00405C  0012               	return	
 23997  00405E                     
 23998                           ;api.c: 118: memcpy(outBuffer, inBuffer, 64);
 23999  00405E  C0A9  F001         	movff	api_prepare@outBuffer,memcpy@d1
 24000  004062  C0AA  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 24001  004066  C0A7  F003         	movff	api_prepare@inBuffer,memcpy@s1
 24002  00406A  C0A8  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 24003  00406E  5003               	movf	memcpy@s1,w,c
 24004  004070  1004               	iorwf	memcpy@s1+1,w,c
 24005  004072  A4D8               	btfss	status,2,c
 24006  004074  0E20               	movlw	32
 24007  004076  6E05               	movwf	memcpy@s1+2,c
 24008  004078  0E00               	movlw	0
 24009  00407A  6E07               	movwf	memcpy@n+1,c
 24010  00407C  0E40               	movlw	64
 24011  00407E  6E06               	movwf	memcpy@n,c
 24012  004080  EC39  F037         	call	_memcpy	;wreg free
 24013                           
 24014                           ;api.c: 120: }
 24015                           
 24016                           ;api.c: 119: break;
 24017  004084  0012               	return	
 24018  004086                     l2584:
 24019  004086  505E               	movf	api_prepare@command,w,c
 24020                           
 24021                           ; Switch size 1, requested type "space"
 24022                           ; Number of cases is 6, Range of values is 16 to 32
 24023                           ; switch strategies available:
 24024                           ; Name         Instructions Cycles
 24025                           ; simple_byte           19    10 (average)
 24026                           ;	Chosen strategy is simple_byte
 24027  004088  0A10               	xorlw	16	; case 16
 24028  00408A  B4D8               	btfsc	status,2,c
 24029  00408C  D7C1               	goto	l2585
 24030  00408E  0A01               	xorlw	1	; case 17
 24031  004090  B4D8               	btfsc	status,2,c
 24032  004092  D7C5               	goto	l2587
 24033  004094  0A03               	xorlw	3	; case 18
 24034  004096  B4D8               	btfsc	status,2,c
 24035  004098  D7CB               	goto	l2588
 24036  00409A  0A01               	xorlw	1	; case 19
 24037  00409C  B4D8               	btfsc	status,2,c
 24038  00409E  D7D1               	goto	l2589
 24039  0040A0  0A07               	xorlw	7	; case 20
 24040  0040A2  B4D8               	btfsc	status,2,c
 24041  0040A4  D7D5               	goto	l2590
 24042  0040A6  0A34               	xorlw	52	; case 32
 24043  0040A8  A4D8               	btfss	status,2,c
 24044  0040AA  0012               	return	
 24045  0040AC  D7D8               	goto	l2591
 24046  0040AE                     __end_of_api_prepare:
 24047                           	opt stack 0
 24048                           tosu	equ	0xFFF
 24049                           tosh	equ	0xFFE
 24050                           tosl	equ	0xFFD
 24051                           pclath	equ	0xFFA
 24052                           tblptru	equ	0xFF8
 24053                           tblptrh	equ	0xFF7
 24054                           tblptrl	equ	0xFF6
 24055                           tablat	equ	0xFF5
 24056                           prodh	equ	0xFF4
 24057                           prodl	equ	0xFF3
 24058                           intcon	equ	0xFF2
 24059                           intcon2	equ	0xFF1
 24060                           intcon3	equ	0xFF0
 24061                           indf0	equ	0xFEF
 24062                           postinc0	equ	0xFEE
 24063                           fsr0h	equ	0xFEA
 24064                           fsr0l	equ	0xFE9
 24065                           wreg	equ	0xFE8
 24066                           indf1	equ	0xFE7
 24067                           postdec1	equ	0xFE5
 24068                           plusw1	equ	0xFE3
 24069                           fsr1h	equ	0xFE2
 24070                           fsr1l	equ	0xFE1
 24071                           indf2	equ	0xFDF
 24072                           postinc2	equ	0xFDE
 24073                           postdec2	equ	0xFDD
 24074                           plusw2	equ	0xFDB
 24075                           fsr2h	equ	0xFDA
 24076                           fsr2l	equ	0xFD9
 24077                           status	equ	0xFD8
 24078                           
 24079 ;; *************** function __fill_buffer_read_file *****************
 24080 ;; Defined at:
 24081 ;;		line 368 in file "api.c"
 24082 ;; Parameters:    Size  Location     Type
 24083 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 24084 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 24085 ;;  outBuffer       2   53[BANK0 ] PTR unsigned char 
 24086 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24087 ;; Auto vars:     Size  Location     Type
 24088 ;;  start           4   67[BANK0 ] unsigned long 
 24089 ;;  data_length     4   63[BANK0 ] unsigned long 
 24090 ;;  file_size       4   59[BANK0 ] unsigned long 
 24091 ;; Return value:  Size  Location     Type
 24092 ;;                  1    wreg      void 
 24093 ;; Registers used:
 24094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24095 ;; Tracked objects:
 24096 ;;		On entry : 0/0
 24097 ;;		On exit  : 0/0
 24098 ;;		Unchanged: 0/0
 24099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24100 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24101 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24102 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24103 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24104 ;;Total ram usage:       20 bytes
 24105 ;; Hardware stack levels used:    1
 24106 ;; Hardware stack levels required when called:    8
 24107 ;; This function calls:
 24108 ;;		_fat_get_file_size
 24109 ;;		_fat_read_from_file
 24110 ;; This function is called by:
 24111 ;;		_api_prepare
 24112 ;; This function uses a non-reentrant model
 24113 ;;
 24114                           
 24115                           	psect	text111
 24116  0023D8                     __ptext111:
 24117                           	opt stack 0
 24118  0023D8                     __fill_buffer_read_file:
 24119                           	opt stack 21
 24120                           
 24121                           ;api.c: 370: uint32_t start;;api.c: 371: uint32_t file_size;;api.c: 372: uint32_t data_l
      +                          ength;;api.c: 375: outBuffer[0] = DATAREQUEST_FIND_FILE;
 24122                           
 24123                           ;incstack = 0
 24124  0023D8  C095  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 24125  0023DC  C096  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 24126  0023E0  0E81               	movlw	129
 24127  0023E2  6EDF               	movwf	indf2,c
 24128                           
 24129                           ;api.c: 378: outBuffer[1] = 0xC125 >> 8;
 24130  0023E4  0100               	movlb	0	; () banked
 24131  0023E6  EE20 F001          	lfsr	2,1
 24132  0023EA  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24133  0023EC  26D9               	addwf	fsr2l,f,c
 24134  0023EE  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24135  0023F0  22DA               	addwfc	fsr2h,f,c
 24136  0023F2  0EC1               	movlw	193
 24137  0023F4  6EDF               	movwf	indf2,c
 24138                           
 24139                           ; BSR set to: 0
 24140                           ;api.c: 379: outBuffer[2] = (uint8_t) 0xC125;
 24141  0023F6  EE20 F002          	lfsr	2,2
 24142  0023FA  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24143  0023FC  26D9               	addwf	fsr2l,f,c
 24144  0023FE  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24145  002400  22DA               	addwfc	fsr2h,f,c
 24146  002402  0E25               	movlw	37
 24147  002404  6EDF               	movwf	indf2,c
 24148                           
 24149                           ; BSR set to: 0
 24150                           ;api.c: 382: outBuffer[3] = inBuffer[1];
 24151  002406  EE20 F001          	lfsr	2,1
 24152  00240A  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24153  00240C  26D9               	addwf	fsr2l,f,c
 24154  00240E  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24155  002410  22DA               	addwfc	fsr2h,f,c
 24156  002412  EE10 F003          	lfsr	1,3
 24157  002416  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24158  002418  26E1               	addwf	fsr1l,f,c
 24159  00241A  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24160  00241C  22E2               	addwfc	fsr1h,f,c
 24161  00241E  CFDF FFE7          	movff	indf2,indf1
 24162                           
 24163                           ; BSR set to: 0
 24164                           ;api.c: 385: outBuffer[4] = inBuffer[1];
 24165  002422  EE20 F001          	lfsr	2,1
 24166  002426  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24167  002428  26D9               	addwf	fsr2l,f,c
 24168  00242A  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24169  00242C  22DA               	addwfc	fsr2h,f,c
 24170  00242E  EE10 F004          	lfsr	1,4
 24171  002432  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24172  002434  26E1               	addwf	fsr1l,f,c
 24173  002436  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24174  002438  22E2               	addwfc	fsr1h,f,c
 24175  00243A  CFDF FFE7          	movff	indf2,indf1
 24176                           
 24177                           ; BSR set to: 0
 24178                           ;api.c: 386: outBuffer[5] = inBuffer[2];
 24179  00243E  EE20 F002          	lfsr	2,2
 24180  002442  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24181  002444  26D9               	addwf	fsr2l,f,c
 24182  002446  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24183  002448  22DA               	addwfc	fsr2h,f,c
 24184  00244A  EE10 F005          	lfsr	1,5
 24185  00244E  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24186  002450  26E1               	addwf	fsr1l,f,c
 24187  002452  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24188  002454  22E2               	addwfc	fsr1h,f,c
 24189  002456  CFDF FFE7          	movff	indf2,indf1
 24190                           
 24191                           ; BSR set to: 0
 24192                           ;api.c: 387: outBuffer[6] = inBuffer[3];
 24193  00245A  EE20 F003          	lfsr	2,3
 24194  00245E  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24195  002460  26D9               	addwf	fsr2l,f,c
 24196  002462  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24197  002464  22DA               	addwfc	fsr2h,f,c
 24198  002466  EE10 F006          	lfsr	1,6
 24199  00246A  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24200  00246C  26E1               	addwf	fsr1l,f,c
 24201  00246E  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24202  002470  22E2               	addwfc	fsr1h,f,c
 24203  002472  CFDF FFE7          	movff	indf2,indf1
 24204                           
 24205                           ; BSR set to: 0
 24206                           ;api.c: 388: outBuffer[7] = inBuffer[4];
 24207  002476  EE20 F004          	lfsr	2,4
 24208  00247A  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24209  00247C  26D9               	addwf	fsr2l,f,c
 24210  00247E  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24211  002480  22DA               	addwfc	fsr2h,f,c
 24212  002482  EE10 F007          	lfsr	1,7
 24213  002486  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24214  002488  26E1               	addwf	fsr1l,f,c
 24215  00248A  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24216  00248C  22E2               	addwfc	fsr1h,f,c
 24217  00248E  CFDF FFE7          	movff	indf2,indf1
 24218                           
 24219                           ; BSR set to: 0
 24220                           ;api.c: 391: start = inBuffer[4];
 24221  002492  EE20 F004          	lfsr	2,4
 24222  002496  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24223  002498  26D9               	addwf	fsr2l,f,c
 24224  00249A  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24225  00249C  22DA               	addwfc	fsr2h,f,c
 24226  00249E  50DF               	movf	indf2,w,c
 24227  0024A0  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 24228  0024A2  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 24229  0024A4  6FA3               	movwf	__fill_buffer_read_file@start& (0+255),b
 24230  0024A6  6BA4               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 24231  0024A8  6BA5               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 24232  0024AA  6BA6               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 24233                           
 24234                           ; BSR set to: 0
 24235                           ;api.c: 392: start <<= 8;
 24236  0024AC  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 24237  0024B0  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 24238  0024B4  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 24239  0024B8  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 24240                           
 24241                           ; BSR set to: 0
 24242                           ;api.c: 393: start |= inBuffer[3];
 24243  0024BA  EE20 F003          	lfsr	2,3
 24244  0024BE  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24245  0024C0  26D9               	addwf	fsr2l,f,c
 24246  0024C2  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24247  0024C4  22DA               	addwfc	fsr2h,f,c
 24248  0024C6  50DF               	movf	indf2,w,c
 24249  0024C8  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 24250  0024CA  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 24251  0024CC  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 24252                           
 24253                           ; BSR set to: 0
 24254                           ;api.c: 394: start <<= 8;
 24255  0024CE  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 24256  0024D2  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 24257  0024D6  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 24258  0024DA  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 24259                           
 24260                           ; BSR set to: 0
 24261                           ;api.c: 395: start |= inBuffer[2];
 24262  0024DC  EE20 F002          	lfsr	2,2
 24263  0024E0  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24264  0024E2  26D9               	addwf	fsr2l,f,c
 24265  0024E4  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24266  0024E6  22DA               	addwfc	fsr2h,f,c
 24267  0024E8  50DF               	movf	indf2,w,c
 24268  0024EA  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 24269  0024EC  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 24270  0024EE  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 24271                           
 24272                           ; BSR set to: 0
 24273                           ;api.c: 396: start <<= 8;
 24274  0024F0  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 24275  0024F4  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 24276  0024F8  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 24277  0024FC  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 24278                           
 24279                           ; BSR set to: 0
 24280                           ;api.c: 397: start |= inBuffer[1];
 24281  0024FE  EE20 F001          	lfsr	2,1
 24282  002502  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24283  002504  26D9               	addwf	fsr2l,f,c
 24284  002506  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24285  002508  22DA               	addwfc	fsr2h,f,c
 24286  00250A  50DF               	movf	indf2,w,c
 24287  00250C  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 24288  00250E  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 24289  002510  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 24290                           
 24291                           ; BSR set to: 0
 24292                           ;api.c: 400: file_size = fat_get_file_size(inBuffer[1]);
 24293  002512  EE20 F001          	lfsr	2,1
 24294  002516  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24295  002518  26D9               	addwf	fsr2l,f,c
 24296  00251A  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24297  00251C  22DA               	addwfc	fsr2h,f,c
 24298  00251E  50DF               	movf	indf2,w,c
 24299  002520  EC1C  F035         	call	_fat_get_file_size
 24300  002524  C030  F09B         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 24301  002528  C031  F09C         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 24302  00252C  C032  F09D         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 24303  002530  C033  F09E         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 24304                           
 24305                           ;api.c: 401: data_length = file_size - start;
 24306  002534  C0A3  F097         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 24307  002538  C0A4  F098         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 24308  00253C  C0A5  F099         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 24309  002540  C0A6  F09A         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 24310  002544  0100               	movlb	0	; () banked
 24311  002546  1F97               	comf	??__fill_buffer_read_file& (0+255),f,b
 24312  002548  1F98               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 24313  00254A  1F99               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 24314  00254C  1F9A               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 24315  00254E  2B97               	incf	??__fill_buffer_read_file& (0+255),f,b
 24316  002550  0E00               	movlw	0
 24317  002552  2398               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 24318  002554  2399               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 24319  002556  239A               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 24320  002558  519B               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 24321  00255A  2597               	addwf	??__fill_buffer_read_file& (0+255),w,b
 24322  00255C  6F9F               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 24323  00255E  519C               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 24324  002560  2198               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 24325  002562  6FA0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 24326  002564  519D               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 24327  002566  2199               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 24328  002568  6FA1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 24329  00256A  519E               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 24330  00256C  219A               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 24331  00256E  6FA2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 24332                           
 24333                           ; BSR set to: 0
 24334                           ;api.c: 402: if(data_length>54)
 24335  002570  51A2               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 24336  002572  11A1               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 24337  002574  11A0               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 24338  002576  E104               	bnz	u10490
 24339  002578  0E37               	movlw	55
 24340  00257A  5D9F               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 24341  00257C  A0D8               	btfss	status,0,c
 24342  00257E  D008               	goto	l2641
 24343  002580                     u10490:
 24344                           
 24345                           ; BSR set to: 0
 24346                           ;api.c: 403: {;api.c: 405: data_length = 54;
 24347  002580  0E36               	movlw	54
 24348  002582  6F9F               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 24349  002584  0E00               	movlw	0
 24350  002586  6FA0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 24351  002588  0E00               	movlw	0
 24352  00258A  6FA1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 24353  00258C  0E00               	movlw	0
 24354  00258E  6FA2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 24355  002590                     l2641:
 24356                           
 24357                           ; BSR set to: 0
 24358                           ;api.c: 406: };api.c: 409: outBuffer[8] = (uint8_t) data_length;
 24359                           
 24360                           ; BSR set to: 0
 24361  002590  EE20 F008          	lfsr	2,8
 24362  002594  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24363  002596  26D9               	addwf	fsr2l,f,c
 24364  002598  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24365  00259A  22DA               	addwfc	fsr2h,f,c
 24366  00259C  C09F  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 24367                           
 24368                           ; BSR set to: 0
 24369                           ;api.c: 412: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 24370  0025A0  C0A3  F060         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 24371  0025A4  C0A4  F061         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 24372  0025A8  C0A5  F062         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 24373  0025AC  C0A6  F063         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 24374  0025B0  C09F  F064         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 24375  0025B4  C0A0  F065         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 24376  0025B8  C0A1  F066         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 24377  0025BC  C0A2  F067         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 24378  0025C0  0E0A               	movlw	10
 24379  0025C2  2595               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24380  0025C4  6F68               	movwf	fat_read_from_file@data& (0+255),b
 24381  0025C6  0E00               	movlw	0
 24382  0025C8  2196               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24383  0025CA  6F69               	movwf	(fat_read_from_file@data+1)& (0+255),b
 24384  0025CC  EE20 F001          	lfsr	2,1
 24385  0025D0  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24386  0025D2  26D9               	addwf	fsr2l,f,c
 24387  0025D4  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24388  0025D6  22DA               	addwfc	fsr2h,f,c
 24389  0025D8  50DF               	movf	indf2,w,c
 24390  0025DA  EC74  F030         	call	_fat_read_from_file
 24391  0025DE  0100               	movlb	0	; () banked
 24392  0025E0  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 24393  0025E2  EE20 F009          	lfsr	2,9
 24394  0025E6  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24395  0025E8  26D9               	addwf	fsr2l,f,c
 24396  0025EA  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24397  0025EC  22DA               	addwfc	fsr2h,f,c
 24398  0025EE  C097  FFDF         	movff	??__fill_buffer_read_file,indf2
 24399                           
 24400                           ; BSR set to: 0
 24401  0025F2  0012               	return		;funcret
 24402  0025F4                     __end_of__fill_buffer_read_file:
 24403                           	opt stack 0
 24404                           tosu	equ	0xFFF
 24405                           tosh	equ	0xFFE
 24406                           tosl	equ	0xFFD
 24407                           pclath	equ	0xFFA
 24408                           tblptru	equ	0xFF8
 24409                           tblptrh	equ	0xFF7
 24410                           tblptrl	equ	0xFF6
 24411                           tablat	equ	0xFF5
 24412                           prodh	equ	0xFF4
 24413                           prodl	equ	0xFF3
 24414                           intcon	equ	0xFF2
 24415                           intcon2	equ	0xFF1
 24416                           intcon3	equ	0xFF0
 24417                           indf0	equ	0xFEF
 24418                           postinc0	equ	0xFEE
 24419                           fsr0h	equ	0xFEA
 24420                           fsr0l	equ	0xFE9
 24421                           wreg	equ	0xFE8
 24422                           indf1	equ	0xFE7
 24423                           postdec1	equ	0xFE5
 24424                           plusw1	equ	0xFE3
 24425                           fsr1h	equ	0xFE2
 24426                           fsr1l	equ	0xFE1
 24427                           indf2	equ	0xFDF
 24428                           postinc2	equ	0xFDE
 24429                           postdec2	equ	0xFDD
 24430                           plusw2	equ	0xFDB
 24431                           fsr2h	equ	0xFDA
 24432                           fsr2l	equ	0xFD9
 24433                           status	equ	0xFD8
 24434                           
 24435 ;; *************** function _fat_read_from_file *****************
 24436 ;; Defined at:
 24437 ;;		line 559 in file "fat16.c"
 24438 ;; Parameters:    Size  Location     Type
 24439 ;;  file_number     1    wreg     unsigned char 
 24440 ;;  start_byte      4    0[BANK0 ] unsigned long 
 24441 ;;  length          4    4[BANK0 ] unsigned long 
 24442 ;;  data            2    8[BANK0 ] PTR unsigned char 
 24443 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24444 ;; Auto vars:     Size  Location     Type
 24445 ;;  file_number     1   14[BANK0 ] unsigned char 
 24446 ;;  root           32   19[BANK0 ] struct .
 24447 ;;  cluster         2   17[BANK0 ] unsigned int 
 24448 ;;  cluster_numb    2   15[BANK0 ] unsigned int 
 24449 ;; Return value:  Size  Location     Type
 24450 ;;                  1    wreg      unsigned char 
 24451 ;; Registers used:
 24452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24453 ;; Tracked objects:
 24454 ;;		On entry : 0/0
 24455 ;;		On exit  : 0/0
 24456 ;;		Unchanged: 0/0
 24457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24458 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24459 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24460 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24461 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24462 ;;Total ram usage:       51 bytes
 24463 ;; Hardware stack levels used:    1
 24464 ;; Hardware stack levels required when called:    7
 24465 ;; This function calls:
 24466 ;;		_fat_get_file_information
 24467 ;;		_fat_read_from_file_fast
 24468 ;; This function is called by:
 24469 ;;		__fill_buffer_read_file
 24470 ;; This function uses a non-reentrant model
 24471 ;;
 24472                           
 24473                           	psect	text112
 24474  0060E8                     __ptext112:
 24475                           	opt stack 0
 24476  0060E8                     _fat_read_from_file:
 24477                           	opt stack 21
 24478                           
 24479                           ; BSR set to: 0
 24480                           ;incstack = 0
 24481                           ;fat_read_from_file@file_number stored from wreg
 24482  0060E8  0100               	movlb	0	; () banked
 24483  0060EA  6F6E               	movwf	fat_read_from_file@file_number& (0+255),b
 24484                           
 24485                           ;fat16.c: 561: rootEntry_t root;;fat16.c: 562: uint16_t cluster;;fat16.c: 563: uint16_t 
      +                          cluster_number;;fat16.c: 566: fat_get_file_information(file_number, &root);
 24486  0060EC  0E73               	movlw	low fat_read_from_file@root
 24487  0060EE  6E37               	movwf	fat_get_file_information@data,c
 24488  0060F0  0E00               	movlw	high fat_read_from_file@root
 24489  0060F2  6E38               	movwf	fat_get_file_information@data+1,c
 24490  0060F4  0100               	movlb	0	; () banked
 24491  0060F6  516E               	movf	fat_read_from_file@file_number& (0+255),w,b
 24492  0060F8  ECA8  F034         	call	_fat_get_file_information
 24493                           
 24494                           ;fat16.c: 567: cluster = root.firstCluster;
 24495  0060FC  C08D  F071         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 24496  006100  C08E  F072         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 24497                           
 24498                           ;fat16.c: 568: cluster_number = 0;
 24499  006104  0E00               	movlw	0
 24500  006106  0100               	movlb	0	; () banked
 24501  006108  6F70               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 24502  00610A  0E00               	movlw	0
 24503  00610C  6F6F               	movwf	fat_read_from_file@cluster_number& (0+255),b
 24504                           
 24505                           ; BSR set to: 0
 24506                           ;fat16.c: 571: if(start_byte+length > root.fileSize)
 24507  00610E  5164               	movf	fat_read_from_file@length& (0+255),w,b
 24508  006110  2560               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 24509  006112  6F6A               	movwf	??_fat_read_from_file& (0+255),b
 24510  006114  5165               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 24511  006116  2161               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 24512  006118  6F6B               	movwf	(??_fat_read_from_file+1)& (0+255),b
 24513  00611A  5166               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 24514  00611C  2162               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 24515  00611E  6F6C               	movwf	(??_fat_read_from_file+2)& (0+255),b
 24516  006120  5167               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 24517  006122  2163               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 24518  006124  6F6D               	movwf	(??_fat_read_from_file+3)& (0+255),b
 24519  006126  516A               	movf	??_fat_read_from_file& (0+255),w,b
 24520  006128  5D8F               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 24521  00612A  516B               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 24522  00612C  5990               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 24523  00612E  516C               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 24524  006130  5991               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 24525  006132  516D               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 24526  006134  5992               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 24527  006136  B0D8               	btfsc	status,0,c
 24528  006138  D002               	goto	l2020
 24529                           
 24530                           ; BSR set to: 0
 24531                           ;fat16.c: 572: {;fat16.c: 574: return 0xFF;
 24532  00613A  0EFF               	movlw	255
 24533                           
 24534                           ; BSR set to: 0
 24535  00613C  0012               	return	
 24536  00613E                     l2020:
 24537                           
 24538                           ; BSR set to: 0
 24539                           ;fat16.c: 575: };fat16.c: 578: return fat_read_from_file_fast(start_byte, length, data, 
      +                          &cluster, &cluster_number);
 24540                           
 24541                           ; BSR set to: 0
 24542  00613E  C060  F038         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 24543  006142  C061  F039         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 24544  006146  C062  F03A         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 24545  00614A  C063  F03B         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 24546  00614E  C064  F03C         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 24547  006152  C065  F03D         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 24548  006156  C066  F03E         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 24549  00615A  C067  F03F         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 24550  00615E  C068  F040         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 24551  006162  C069  F041         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 24552  006166  0E71               	movlw	low fat_read_from_file@cluster
 24553  006168  6E42               	movwf	fat_read_from_file_fast@cluster,c
 24554  00616A  0E00               	movlw	high fat_read_from_file@cluster
 24555  00616C  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
 24556  00616E  0E6F               	movlw	low fat_read_from_file@cluster_number
 24557  006170  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
 24558  006172  0E00               	movlw	high fat_read_from_file@cluster_number
 24559  006174  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
 24560  006176  ECC4  F00F         	call	_fat_read_from_file_fast	;wreg free
 24561  00617A  0012               	return	
 24562  00617C                     __end_of_fat_read_from_file:
 24563                           	opt stack 0
 24564                           tosu	equ	0xFFF
 24565                           tosh	equ	0xFFE
 24566                           tosl	equ	0xFFD
 24567                           pclath	equ	0xFFA
 24568                           tblptru	equ	0xFF8
 24569                           tblptrh	equ	0xFF7
 24570                           tblptrl	equ	0xFF6
 24571                           tablat	equ	0xFF5
 24572                           prodh	equ	0xFF4
 24573                           prodl	equ	0xFF3
 24574                           intcon	equ	0xFF2
 24575                           intcon2	equ	0xFF1
 24576                           intcon3	equ	0xFF0
 24577                           indf0	equ	0xFEF
 24578                           postinc0	equ	0xFEE
 24579                           fsr0h	equ	0xFEA
 24580                           fsr0l	equ	0xFE9
 24581                           wreg	equ	0xFE8
 24582                           indf1	equ	0xFE7
 24583                           postdec1	equ	0xFE5
 24584                           plusw1	equ	0xFE3
 24585                           fsr1h	equ	0xFE2
 24586                           fsr1l	equ	0xFE1
 24587                           indf2	equ	0xFDF
 24588                           postinc2	equ	0xFDE
 24589                           postdec2	equ	0xFDD
 24590                           plusw2	equ	0xFDB
 24591                           fsr2h	equ	0xFDA
 24592                           fsr2l	equ	0xFD9
 24593                           status	equ	0xFD8
 24594                           
 24595 ;; *************** function _fat_read_from_file_fast *****************
 24596 ;; Defined at:
 24597 ;;		line 581 in file "fat16.c"
 24598 ;; Parameters:    Size  Location     Type
 24599 ;;  start_byte      4   55[COMRAM] unsigned long 
 24600 ;;  length          4   59[COMRAM] unsigned long 
 24601 ;;  data            2   63[COMRAM] PTR unsigned char 
 24602 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 24603 ;;  cluster         2   65[COMRAM] PTR unsigned int 
 24604 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
 24605 ;;  cluster_numb    2   67[COMRAM] PTR unsigned int 
 24606 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
 24607 ;; Auto vars:     Size  Location     Type
 24608 ;;  position        4   89[COMRAM] unsigned long 
 24609 ;;  read_length     2   87[COMRAM] unsigned int 
 24610 ;;  offset          2   85[COMRAM] unsigned int 
 24611 ;;  working_clus    2   83[COMRAM] unsigned int 
 24612 ;;  sector          2   81[COMRAM] unsigned int 
 24613 ;; Return value:  Size  Location     Type
 24614 ;;                  1    wreg      unsigned char 
 24615 ;; Registers used:
 24616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24617 ;; Tracked objects:
 24618 ;;		On entry : 0/0
 24619 ;;		On exit  : 0/0
 24620 ;;		Unchanged: 0/0
 24621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24622 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24623 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24624 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24625 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24626 ;;Total ram usage:       38 bytes
 24627 ;; Hardware stack levels used:    1
 24628 ;; Hardware stack levels required when called:    6
 24629 ;; This function calls:
 24630 ;;		__read_fat
 24631 ;;		__sector_from_cluster
 24632 ;;		_flash_partial_read
 24633 ;; This function is called by:
 24634 ;;		_fat_read_from_file
 24635 ;;		__bootloader_verify_file
 24636 ;;		__bootloader_program
 24637 ;; This function uses a non-reentrant model
 24638 ;;
 24639                           
 24640                           	psect	text113
 24641  001F88                     __ptext113:
 24642                           	opt stack 0
 24643  001F88                     _fat_read_from_file_fast:
 24644                           	opt stack 22
 24645                           
 24646                           ;fat16.c: 583: uint32_t position;;fat16.c: 584: uint16_t offset;;fat16.c: 585: uint16_t 
      +                          sector;;fat16.c: 586: uint16_t read_length;;fat16.c: 587: uint16_t working_cluster;;fat1
      +                          6.c: 590: position = (*cluster_number);
 24647                           
 24648                           ;incstack = 0
 24649  001F88  C044  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 24650  001F8C  C045  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 24651  001F90  CFDE F046          	movff	postinc2,??_fat_read_from_file_fast
 24652  001F94  CFDD F047          	movff	postdec2,??_fat_read_from_file_fast+1
 24653  001F98  C046  F05A         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 24654  001F9C  C047  F05B         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 24655  001FA0  6A5C               	clrf	fat_read_from_file_fast@position+2,c
 24656  001FA2  6A5D               	clrf	fat_read_from_file_fast@position+3,c
 24657                           
 24658                           ;fat16.c: 591: position *= 512;
 24659  001FA4  0E09               	movlw	9
 24660  001FA6                     u9255:
 24661  001FA6  90D8               	bcf	status,0,c
 24662  001FA8  365A               	rlcf	fat_read_from_file_fast@position,f,c
 24663  001FAA  365B               	rlcf	fat_read_from_file_fast@position+1,f,c
 24664  001FAC  365C               	rlcf	fat_read_from_file_fast@position+2,f,c
 24665  001FAE  365D               	rlcf	fat_read_from_file_fast@position+3,f,c
 24666  001FB0  2EE8               	decfsz	wreg,f,c
 24667  001FB2  D7F9               	goto	u9255
 24668                           
 24669                           ;fat16.c: 592: if(position > start_byte)
 24670  001FB4  505A               	movf	fat_read_from_file_fast@position,w,c
 24671  001FB6  5C38               	subwf	fat_read_from_file_fast@start_byte,w,c
 24672  001FB8  505B               	movf	fat_read_from_file_fast@position+1,w,c
 24673  001FBA  5839               	subwfb	fat_read_from_file_fast@start_byte+1,w,c
 24674  001FBC  505C               	movf	fat_read_from_file_fast@position+2,w,c
 24675  001FBE  583A               	subwfb	fat_read_from_file_fast@start_byte+2,w,c
 24676  001FC0  505D               	movf	fat_read_from_file_fast@position+3,w,c
 24677  001FC2  583B               	subwfb	fat_read_from_file_fast@start_byte+3,w,c
 24678  001FC4  B0D8               	btfsc	status,0,c
 24679  001FC6  D023               	goto	l2026
 24680                           
 24681                           ;fat16.c: 593: {;fat16.c: 595: return 0xFF;
 24682  001FC8  0EFF               	movlw	255
 24683  001FCA  0012               	return	
 24684  001FCC                     l12079:
 24685                           
 24686                           ;fat16.c: 598: {;fat16.c: 599: (*cluster) = _read_fat((*cluster));
 24687  001FCC  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 24688  001FD0  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 24689  001FD4  CFDE F030          	movff	postinc2,__read_fat@cluster
 24690  001FD8  CFDD F031          	movff	postdec2,__read_fat@cluster+1
 24691  001FDC  ECD5  F03B         	call	__read_fat	;wreg free
 24692  001FE0  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 24693  001FE4  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 24694  001FE8  C030  FFDE         	movff	?__read_fat,postinc2
 24695  001FEC  C031  FFDD         	movff	?__read_fat+1,postdec2
 24696                           
 24697                           ;fat16.c: 600: ++(*cluster_number);
 24698  001FF0  C044  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 24699  001FF4  C045  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 24700  001FF8  2ADE               	incf	postinc2,f,c
 24701  001FFA  0E00               	movlw	0
 24702  001FFC  22DD               	addwfc	postdec2,f,c
 24703                           
 24704                           ;fat16.c: 601: position += 512;
 24705  001FFE  0E00               	movlw	0
 24706  002000  265A               	addwf	fat_read_from_file_fast@position,f,c
 24707  002002  0E02               	movlw	2
 24708  002004  225B               	addwfc	fat_read_from_file_fast@position+1,f,c
 24709  002006  0E00               	movlw	0
 24710  002008  225C               	addwfc	fat_read_from_file_fast@position+2,f,c
 24711  00200A  0E00               	movlw	0
 24712  00200C  225D               	addwfc	fat_read_from_file_fast@position+3,f,c
 24713  00200E                     l2026:
 24714  00200E  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 24715  002012  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 24716  002016  C05C  F048         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+2
 24717  00201A  C05D  F049         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+3
 24718  00201E  1E46               	comf	??_fat_read_from_file_fast,f,c
 24719  002020  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 24720  002022  1E48               	comf	??_fat_read_from_file_fast+2,f,c
 24721  002024  1E49               	comf	??_fat_read_from_file_fast+3,f,c
 24722  002026  2A46               	incf	??_fat_read_from_file_fast,f,c
 24723  002028  0E00               	movlw	0
 24724  00202A  2247               	addwfc	??_fat_read_from_file_fast+1,f,c
 24725  00202C  2248               	addwfc	??_fat_read_from_file_fast+2,f,c
 24726  00202E  2249               	addwfc	??_fat_read_from_file_fast+3,f,c
 24727  002030  5038               	movf	fat_read_from_file_fast@start_byte,w,c
 24728  002032  2446               	addwf	??_fat_read_from_file_fast,w,c
 24729  002034  6E4A               	movwf	(??_fat_read_from_file_fast+4)& (0+255),c
 24730  002036  5039               	movf	fat_read_from_file_fast@start_byte+1,w,c
 24731  002038  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 24732  00203A  6E4B               	movwf	(??_fat_read_from_file_fast+5)& (0+255),c
 24733  00203C  503A               	movf	fat_read_from_file_fast@start_byte+2,w,c
 24734  00203E  2048               	addwfc	??_fat_read_from_file_fast+2,w,c
 24735  002040  6E4C               	movwf	(??_fat_read_from_file_fast+6)& (0+255),c
 24736  002042  503B               	movf	fat_read_from_file_fast@start_byte+3,w,c
 24737  002044  2049               	addwfc	??_fat_read_from_file_fast+3,w,c
 24738  002046  6E4D               	movwf	(??_fat_read_from_file_fast+7)& (0+255),c
 24739  002048  504D               	movf	??_fat_read_from_file_fast+7,w,c
 24740  00204A  104C               	iorwf	??_fat_read_from_file_fast+6,w,c
 24741  00204C  E1BF               	bnz	l12079
 24742  00204E  0E02               	movlw	2
 24743  002050  5C4B               	subwf	??_fat_read_from_file_fast+5,w,c
 24744  002052  B0D8               	btfsc	status,0,c
 24745  002054  D7BB               	goto	l2027
 24746                           
 24747                           ;fat16.c: 602: };fat16.c: 606: working_cluster = (*cluster);
 24748  002056  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 24749  00205A  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 24750  00205E  CFDE F054          	movff	postinc2,fat_read_from_file_fast@working_cluster
 24751  002062  CFDD F055          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 24752                           
 24753                           ;fat16.c: 609: offset = start_byte - position;
 24754  002066  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 24755  00206A  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 24756  00206E  1E46               	comf	??_fat_read_from_file_fast,f,c
 24757  002070  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 24758  002072  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 24759  002074  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 24760  002076  5038               	movf	fat_read_from_file_fast@start_byte,w,c
 24761  002078  2446               	addwf	??_fat_read_from_file_fast,w,c
 24762  00207A  6E56               	movwf	fat_read_from_file_fast@offset,c
 24763  00207C  5039               	movf	fat_read_from_file_fast@start_byte+1,w,c
 24764  00207E  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 24765  002080  6E57               	movwf	fat_read_from_file_fast@offset+1,c
 24766                           
 24767                           ;fat16.c: 612: position = 0;
 24768  002082  0E00               	movlw	0
 24769  002084  6E5A               	movwf	fat_read_from_file_fast@position,c
 24770  002086  0E00               	movlw	0
 24771  002088  6E5B               	movwf	fat_read_from_file_fast@position+1,c
 24772  00208A  0E00               	movlw	0
 24773  00208C  6E5C               	movwf	fat_read_from_file_fast@position+2,c
 24774  00208E  0E00               	movlw	0
 24775  002090  6E5D               	movwf	fat_read_from_file_fast@position+3,c
 24776                           
 24777                           ;fat16.c: 613: while(position < length)
 24778  002092  D086               	goto	l2029
 24779  002094                     
 24780                           ;fat16.c: 614: {;fat16.c: 616: if(offset==512)
 24781  002094  0E02               	movlw	2
 24782  002096  1857               	xorwf	fat_read_from_file_fast@offset+1,w,c
 24783  002098  1056               	iorwf	fat_read_from_file_fast@offset,w,c
 24784  00209A  A4D8               	btfss	status,2,c
 24785  00209C  D00E               	goto	l2031
 24786                           
 24787                           ;fat16.c: 617: {;fat16.c: 619: working_cluster = _read_fat(working_cluster);
 24788  00209E  C054  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 24789  0020A2  C055  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 24790  0020A6  ECD5  F03B         	call	__read_fat	;wreg free
 24791  0020AA  C030  F054         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 24792  0020AE  C031  F055         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 24793                           
 24794                           ;fat16.c: 620: offset = 0;
 24795  0020B2  0E00               	movlw	0
 24796  0020B4  6E57               	movwf	fat_read_from_file_fast@offset+1,c
 24797  0020B6  0E00               	movlw	0
 24798  0020B8  6E56               	movwf	fat_read_from_file_fast@offset,c
 24799  0020BA                     l2031:
 24800                           
 24801                           ;fat16.c: 621: };fat16.c: 624: sector = _sector_from_cluster(working_cluster);
 24802  0020BA  C054  F001         	movff	fat_read_from_file_fast@working_cluster,__sector_from_cluster@fat_cluster
 24803  0020BE  C055  F002         	movff	fat_read_from_file_fast@working_cluster+1,__sector_from_cluster@fat_cluster+1
 24804  0020C2  EC8E  F040         	call	__sector_from_cluster	;wreg free
 24805  0020C6  C001  F052         	movff	?__sector_from_cluster,fat_read_from_file_fast@sector
 24806  0020CA  C002  F053         	movff	?__sector_from_cluster+1,fat_read_from_file_fast@sector+1
 24807                           
 24808                           ;fat16.c: 627: read_length = 512 - offset;
 24809  0020CE  C056  F046         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 24810  0020D2  C057  F047         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 24811  0020D6  1E46               	comf	??_fat_read_from_file_fast,f,c
 24812  0020D8  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 24813  0020DA  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 24814  0020DC  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 24815  0020DE  0E00               	movlw	0
 24816  0020E0  2446               	addwf	??_fat_read_from_file_fast,w,c
 24817  0020E2  6E58               	movwf	fat_read_from_file_fast@read_length,c
 24818  0020E4  0E02               	movlw	2
 24819  0020E6  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 24820  0020E8  6E59               	movwf	fat_read_from_file_fast@read_length+1,c
 24821                           
 24822                           ;fat16.c: 628: if(read_length > (length-position))
 24823  0020EA  5058               	movf	fat_read_from_file_fast@read_length,w,c
 24824  0020EC  6E46               	movwf	??_fat_read_from_file_fast& (0+255),c
 24825  0020EE  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 24826  0020F0  6E47               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
 24827  0020F2  6A48               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
 24828  0020F4  6A49               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
 24829  0020F6  C05A  F04A         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 24830  0020FA  C05B  F04B         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 24831  0020FE  C05C  F04C         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 24832  002102  C05D  F04D         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 24833  002106  1E4A               	comf	??_fat_read_from_file_fast+4,f,c
 24834  002108  1E4B               	comf	??_fat_read_from_file_fast+5,f,c
 24835  00210A  1E4C               	comf	??_fat_read_from_file_fast+6,f,c
 24836  00210C  1E4D               	comf	??_fat_read_from_file_fast+7,f,c
 24837  00210E  2A4A               	incf	??_fat_read_from_file_fast+4,f,c
 24838  002110  0E00               	movlw	0
 24839  002112  224B               	addwfc	??_fat_read_from_file_fast+5,f,c
 24840  002114  224C               	addwfc	??_fat_read_from_file_fast+6,f,c
 24841  002116  224D               	addwfc	??_fat_read_from_file_fast+7,f,c
 24842  002118  503C               	movf	fat_read_from_file_fast@length,w,c
 24843  00211A  244A               	addwf	??_fat_read_from_file_fast+4,w,c
 24844  00211C  6E4E               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 24845  00211E  503D               	movf	fat_read_from_file_fast@length+1,w,c
 24846  002120  204B               	addwfc	??_fat_read_from_file_fast+5,w,c
 24847  002122  6E4F               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 24848  002124  503E               	movf	fat_read_from_file_fast@length+2,w,c
 24849  002126  204C               	addwfc	??_fat_read_from_file_fast+6,w,c
 24850  002128  6E50               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 24851  00212A  503F               	movf	fat_read_from_file_fast@length+3,w,c
 24852  00212C  204D               	addwfc	??_fat_read_from_file_fast+7,w,c
 24853  00212E  6E51               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 24854  002130  5046               	movf	??_fat_read_from_file_fast,w,c
 24855  002132  5C4E               	subwf	??_fat_read_from_file_fast+8,w,c
 24856  002134  5047               	movf	??_fat_read_from_file_fast+1,w,c
 24857  002136  584F               	subwfb	??_fat_read_from_file_fast+9,w,c
 24858  002138  5048               	movf	??_fat_read_from_file_fast+2,w,c
 24859  00213A  5850               	subwfb	??_fat_read_from_file_fast+10,w,c
 24860  00213C  5049               	movf	??_fat_read_from_file_fast+3,w,c
 24861  00213E  5851               	subwfb	??_fat_read_from_file_fast+11,w,c
 24862  002140  B0D8               	btfsc	status,0,c
 24863  002142  D00E               	goto	l2032
 24864                           
 24865                           ;fat16.c: 629: {;fat16.c: 631: read_length = length - position;
 24866  002144  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 24867  002148  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 24868  00214C  1E46               	comf	??_fat_read_from_file_fast,f,c
 24869  00214E  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 24870  002150  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 24871  002152  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 24872  002154  503C               	movf	fat_read_from_file_fast@length,w,c
 24873  002156  2446               	addwf	??_fat_read_from_file_fast,w,c
 24874  002158  6E58               	movwf	fat_read_from_file_fast@read_length,c
 24875  00215A  503D               	movf	fat_read_from_file_fast@length+1,w,c
 24876  00215C  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 24877  00215E  6E59               	movwf	fat_read_from_file_fast@read_length+1,c
 24878  002160                     l2032:
 24879                           
 24880                           ;fat16.c: 632: };fat16.c: 635: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 24881  002160  C052  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 24882  002164  C053  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 24883  002168  C056  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 24884  00216C  C057  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 24885  002170  C058  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 24886  002174  C059  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 24887  002178  505A               	movf	fat_read_from_file_fast@position,w,c
 24888  00217A  2440               	addwf	fat_read_from_file_fast@data,w,c
 24889  00217C  6E2E               	movwf	flash_partial_read@data,c
 24890  00217E  505B               	movf	fat_read_from_file_fast@position+1,w,c
 24891  002180  2041               	addwfc	fat_read_from_file_fast@data+1,w,c
 24892  002182  6E2F               	movwf	flash_partial_read@data+1,c
 24893  002184  EC1C  F03E         	call	_flash_partial_read	;wreg free
 24894                           
 24895                           ;fat16.c: 638: position += read_length;
 24896  002188  5058               	movf	fat_read_from_file_fast@read_length,w,c
 24897  00218A  265A               	addwf	fat_read_from_file_fast@position,f,c
 24898  00218C  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 24899  00218E  225B               	addwfc	fat_read_from_file_fast@position+1,f,c
 24900  002190  0E00               	movlw	0
 24901  002192  225C               	addwfc	fat_read_from_file_fast@position+2,f,c
 24902  002194  0E00               	movlw	0
 24903  002196  225D               	addwfc	fat_read_from_file_fast@position+3,f,c
 24904                           
 24905                           ;fat16.c: 639: offset += read_length;
 24906  002198  5058               	movf	fat_read_from_file_fast@read_length,w,c
 24907  00219A  2656               	addwf	fat_read_from_file_fast@offset,f,c
 24908  00219C  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 24909  00219E  2257               	addwfc	fat_read_from_file_fast@offset+1,f,c
 24910  0021A0                     l2029:
 24911  0021A0  503C               	movf	fat_read_from_file_fast@length,w,c
 24912  0021A2  5C5A               	subwf	fat_read_from_file_fast@position,w,c
 24913  0021A4  503D               	movf	fat_read_from_file_fast@length+1,w,c
 24914  0021A6  585B               	subwfb	fat_read_from_file_fast@position+1,w,c
 24915  0021A8  503E               	movf	fat_read_from_file_fast@length+2,w,c
 24916  0021AA  585C               	subwfb	fat_read_from_file_fast@position+2,w,c
 24917  0021AC  503F               	movf	fat_read_from_file_fast@length+3,w,c
 24918  0021AE  585D               	subwfb	fat_read_from_file_fast@position+3,w,c
 24919  0021B0  A0D8               	btfss	status,0,c
 24920  0021B2  D770               	goto	l2030
 24921                           
 24922                           ;fat16.c: 640: };fat16.c: 643: return 0x00;
 24923  0021B4  0E00               	movlw	0
 24924  0021B6  0012               	return	
 24925  0021B8                     __end_of_fat_read_from_file_fast:
 24926                           	opt stack 0
 24927                           tosu	equ	0xFFF
 24928                           tosh	equ	0xFFE
 24929                           tosl	equ	0xFFD
 24930                           pclath	equ	0xFFA
 24931                           tblptru	equ	0xFF8
 24932                           tblptrh	equ	0xFF7
 24933                           tblptrl	equ	0xFF6
 24934                           tablat	equ	0xFF5
 24935                           prodh	equ	0xFF4
 24936                           prodl	equ	0xFF3
 24937                           intcon	equ	0xFF2
 24938                           intcon2	equ	0xFF1
 24939                           intcon3	equ	0xFF0
 24940                           indf0	equ	0xFEF
 24941                           postinc0	equ	0xFEE
 24942                           fsr0h	equ	0xFEA
 24943                           fsr0l	equ	0xFE9
 24944                           wreg	equ	0xFE8
 24945                           indf1	equ	0xFE7
 24946                           postdec1	equ	0xFE5
 24947                           plusw1	equ	0xFE3
 24948                           fsr1h	equ	0xFE2
 24949                           fsr1l	equ	0xFE1
 24950                           indf2	equ	0xFDF
 24951                           postinc2	equ	0xFDE
 24952                           postdec2	equ	0xFDD
 24953                           plusw2	equ	0xFDB
 24954                           fsr2h	equ	0xFDA
 24955                           fsr2l	equ	0xFD9
 24956                           status	equ	0xFD8
 24957                           
 24958 ;; *************** function _fat_get_file_size *****************
 24959 ;; Defined at:
 24960 ;;		line 294 in file "fat16.c"
 24961 ;; Parameters:    Size  Location     Type
 24962 ;;  file_number     1    wreg     unsigned char 
 24963 ;; Auto vars:     Size  Location     Type
 24964 ;;  file_number     1   60[COMRAM] unsigned char 
 24965 ;;  file_size       4   54[COMRAM] unsigned long 
 24966 ;;  offset          2   58[COMRAM] unsigned int 
 24967 ;;  sector          2   52[COMRAM] unsigned int 
 24968 ;; Return value:  Size  Location     Type
 24969 ;;                  4   47[COMRAM] unsigned long 
 24970 ;; Registers used:
 24971 ;;		wreg, status,2, status,0, cstack
 24972 ;; Tracked objects:
 24973 ;;		On entry : 0/0
 24974 ;;		On exit  : 0/0
 24975 ;;		Unchanged: 0/0
 24976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24978 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24980 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24981 ;;Total ram usage:       14 bytes
 24982 ;; Hardware stack levels used:    1
 24983 ;; Hardware stack levels required when called:    5
 24984 ;; This function calls:
 24985 ;;		_flash_partial_read
 24986 ;; This function is called by:
 24987 ;;		__bootloader_find_file
 24988 ;;		__bootloader_verify_file
 24989 ;;		__fill_buffer_read_file
 24990 ;; This function uses a non-reentrant model
 24991 ;;
 24992                           
 24993                           	psect	text114
 24994  006A38                     __ptext114:
 24995                           	opt stack 0
 24996  006A38                     _fat_get_file_size:
 24997                           	opt stack 23
 24998                           
 24999                           ;incstack = 0
 25000                           ;fat_get_file_size@file_number stored from wreg
 25001  006A38  6E3D               	movwf	fat_get_file_size@file_number,c
 25002                           
 25003                           ;fat16.c: 296: uint16_t sector;;fat16.c: 297: uint16_t offset;;fat16.c: 298: uint32_t fi
      +                          le_size;;fat16.c: 299: sector = file_number >> 4;
 25004  006A3A  C03D  F034         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 25005  006A3E  3A34               	swapf	??_fat_get_file_size,f,c
 25006  006A40  0E0F               	movlw	15
 25007  006A42  1634               	andwf	??_fat_get_file_size,f,c
 25008  006A44  5034               	movf	??_fat_get_file_size,w,c
 25009  006A46  6E35               	movwf	fat_get_file_size@sector,c
 25010  006A48  6A36               	clrf	fat_get_file_size@sector+1,c
 25011                           
 25012                           ;fat16.c: 300: sector += 34;
 25013  006A4A  0E22               	movlw	34
 25014  006A4C  2635               	addwf	fat_get_file_size@sector,f,c
 25015  006A4E  0E00               	movlw	0
 25016  006A50  2236               	addwfc	fat_get_file_size@sector+1,f,c
 25017                           
 25018                           ;fat16.c: 301: offset = file_number;
 25019  006A52  C03D  F03B         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 25020  006A56  6A3C               	clrf	fat_get_file_size@offset+1,c
 25021                           
 25022                           ;fat16.c: 302: offset <<= 5;
 25023  006A58  0E05               	movlw	5
 25024  006A5A                     u9535:
 25025  006A5A  90D8               	bcf	status,0,c
 25026  006A5C  363B               	rlcf	fat_get_file_size@offset,f,c
 25027  006A5E  363C               	rlcf	fat_get_file_size@offset+1,f,c
 25028  006A60  2EE8               	decfsz	wreg,f,c
 25029  006A62  D7FB               	goto	u9535
 25030                           
 25031                           ;fat16.c: 303: offset &= 0b111111111;
 25032  006A64  0EFF               	movlw	255
 25033  006A66  163B               	andwf	fat_get_file_size@offset,f,c
 25034  006A68  0E01               	movlw	1
 25035  006A6A  163C               	andwf	fat_get_file_size@offset+1,f,c
 25036                           
 25037                           ;fat16.c: 304: offset += 28;
 25038  006A6C  0E1C               	movlw	28
 25039  006A6E  263B               	addwf	fat_get_file_size@offset,f,c
 25040  006A70  0E00               	movlw	0
 25041  006A72  223C               	addwfc	fat_get_file_size@offset+1,f,c
 25042                           
 25043                           ;fat16.c: 305: flash_partial_read(sector, offset, 4, &file_size);
 25044  006A74  C035  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 25045  006A78  C036  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 25046  006A7C  C03B  F02A         	movff	fat_get_file_size@offset,flash_partial_read@start
 25047  006A80  C03C  F02B         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 25048  006A84  0E00               	movlw	0
 25049  006A86  6E2D               	movwf	flash_partial_read@length+1,c
 25050  006A88  0E04               	movlw	4
 25051  006A8A  6E2C               	movwf	flash_partial_read@length,c
 25052  006A8C  0E37               	movlw	low fat_get_file_size@file_size
 25053  006A8E  6E2E               	movwf	flash_partial_read@data,c
 25054  006A90  0E00               	movlw	high fat_get_file_size@file_size
 25055  006A92  6E2F               	movwf	flash_partial_read@data+1,c
 25056  006A94  EC1C  F03E         	call	_flash_partial_read	;wreg free
 25057                           
 25058                           ;fat16.c: 306: return file_size;
 25059  006A98  C037  F030         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 25060  006A9C  C038  F031         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 25061  006AA0  C039  F032         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 25062  006AA4  C03A  F033         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 25063  006AA8  0012               	return	
 25064  006AAA                     __end_of_fat_get_file_size:
 25065                           	opt stack 0
 25066                           tosu	equ	0xFFF
 25067                           tosh	equ	0xFFE
 25068                           tosl	equ	0xFFD
 25069                           pclath	equ	0xFFA
 25070                           tblptru	equ	0xFF8
 25071                           tblptrh	equ	0xFF7
 25072                           tblptrl	equ	0xFF6
 25073                           tablat	equ	0xFF5
 25074                           prodh	equ	0xFF4
 25075                           prodl	equ	0xFF3
 25076                           intcon	equ	0xFF2
 25077                           intcon2	equ	0xFF1
 25078                           intcon3	equ	0xFF0
 25079                           indf0	equ	0xFEF
 25080                           postinc0	equ	0xFEE
 25081                           fsr0h	equ	0xFEA
 25082                           fsr0l	equ	0xFE9
 25083                           wreg	equ	0xFE8
 25084                           indf1	equ	0xFE7
 25085                           postdec1	equ	0xFE5
 25086                           plusw1	equ	0xFE3
 25087                           fsr1h	equ	0xFE2
 25088                           fsr1l	equ	0xFE1
 25089                           indf2	equ	0xFDF
 25090                           postinc2	equ	0xFDE
 25091                           postdec2	equ	0xFDD
 25092                           plusw2	equ	0xFDB
 25093                           fsr2h	equ	0xFDA
 25094                           fsr2l	equ	0xFD9
 25095                           status	equ	0xFD8
 25096                           
 25097 ;; *************** function __fill_buffer_get_status *****************
 25098 ;; Defined at:
 25099 ;;		line 176 in file "api.c"
 25100 ;; Parameters:    Size  Location     Type
 25101 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 25102 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25103 ;; Auto vars:     Size  Location     Type
 25104 ;;		None
 25105 ;; Return value:  Size  Location     Type
 25106 ;;                  1    wreg      void 
 25107 ;; Registers used:
 25108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25109 ;; Tracked objects:
 25110 ;;		On entry : 0/0
 25111 ;;		On exit  : 0/0
 25112 ;;		Unchanged: 0/0
 25113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25118 ;;Total ram usage:        2 bytes
 25119 ;; Hardware stack levels used:    1
 25120 ;; Hardware stack levels required when called:    4
 25121 ;; This function calls:
 25122 ;;		_flash_is_busy
 25123 ;;		_ui_get_status
 25124 ;; This function is called by:
 25125 ;;		_api_prepare
 25126 ;; This function uses a non-reentrant model
 25127 ;;
 25128                           
 25129                           	psect	text115
 25130  004C9A                     __ptext115:
 25131                           	opt stack 0
 25132  004C9A                     __fill_buffer_get_status:
 25133                           	opt stack 25
 25134                           
 25135                           ;api.c: 179: outBuffer[0] = DATAREQUEST_GET_STATUS;
 25136                           
 25137                           ;incstack = 0
 25138  004C9A  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 25139  004C9E  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 25140  004CA2  0E10               	movlw	16
 25141  004CA4  6EDF               	movwf	indf2,c
 25142                           
 25143                           ;api.c: 182: outBuffer[1] = 0xC125 >> 8;
 25144  004CA6  EE20 F001          	lfsr	2,1
 25145  004CAA  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25146  004CAC  26D9               	addwf	fsr2l,f,c
 25147  004CAE  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25148  004CB0  22DA               	addwfc	fsr2h,f,c
 25149  004CB2  0EC1               	movlw	193
 25150  004CB4  6EDF               	movwf	indf2,c
 25151                           
 25152                           ;api.c: 183: outBuffer[2] = (uint8_t) 0xC125;
 25153  004CB6  EE20 F002          	lfsr	2,2
 25154  004CBA  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25155  004CBC  26D9               	addwf	fsr2l,f,c
 25156  004CBE  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25157  004CC0  22DA               	addwfc	fsr2h,f,c
 25158  004CC2  0E25               	movlw	37
 25159  004CC4  6EDF               	movwf	indf2,c
 25160                           
 25161                           ;api.c: 187: outBuffer[3] = (uint8_t) flash_is_busy();
 25162  004CC6  EE20 F003          	lfsr	2,3
 25163  004CCA  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25164  004CCC  26D9               	addwf	fsr2l,f,c
 25165  004CCE  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25166  004CD0  22DA               	addwfc	fsr2h,f,c
 25167  004CD2  EC2F  F040         	call	_flash_is_busy	;wreg free
 25168  004CD6  6EDF               	movwf	indf2,c
 25169                           
 25170                           ;api.c: 190: outBuffer[4] = 0x00;
 25171  004CD8  EE20 F004          	lfsr	2,4
 25172  004CDC  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25173  004CDE  26D9               	addwf	fsr2l,f,c
 25174  004CE0  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25175  004CE2  22DA               	addwfc	fsr2h,f,c
 25176  004CE4  0E00               	movlw	0
 25177  004CE6  6EDF               	movwf	indf2,c
 25178                           
 25179                           ;api.c: 191: outBuffer[5] = 0x01;
 25180  004CE8  EE20 F005          	lfsr	2,5
 25181  004CEC  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25182  004CEE  26D9               	addwf	fsr2l,f,c
 25183  004CF0  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25184  004CF2  22DA               	addwfc	fsr2h,f,c
 25185  004CF4  0E01               	movlw	1
 25186  004CF6  6EDF               	movwf	indf2,c
 25187                           
 25188                           ;api.c: 192: outBuffer[6] = 0x00;
 25189  004CF8  EE20 F006          	lfsr	2,6
 25190  004CFC  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25191  004CFE  26D9               	addwf	fsr2l,f,c
 25192  004D00  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25193  004D02  22DA               	addwfc	fsr2h,f,c
 25194  004D04  0E00               	movlw	0
 25195  004D06  6EDF               	movwf	indf2,c
 25196                           
 25197                           ;api.c: 195: outBuffer[7] = ui_get_status();
 25198  004D08  EE20 F007          	lfsr	2,7
 25199  004D0C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25200  004D0E  26D9               	addwf	fsr2l,f,c
 25201  004D10  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25202  004D12  22DA               	addwfc	fsr2h,f,c
 25203  004D14  ECF9  F040         	call	_ui_get_status	;wreg free
 25204  004D18  6EDF               	movwf	indf2,c
 25205                           
 25206                           ;api.c: 198: outBuffer[8] = os.encoderCount;
 25207  004D1A  EE20 F008          	lfsr	2,8
 25208  004D1E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25209  004D20  26D9               	addwf	fsr2l,f,c
 25210  004D22  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25211  004D24  22DA               	addwfc	fsr2h,f,c
 25212  004D26  C0B9  FFDF         	movff	_os,indf2	;volatile
 25213                           
 25214                           ;api.c: 199: outBuffer[9] = os.buttonCount;
 25215  004D2A  EE20 F009          	lfsr	2,9
 25216  004D2E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25217  004D30  26D9               	addwf	fsr2l,f,c
 25218  004D32  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25219  004D34  22DA               	addwfc	fsr2h,f,c
 25220  004D36  C0BA  FFDF         	movff	_os+1,indf2	;volatile
 25221                           
 25222                           ;api.c: 200: outBuffer[10] = os.timeSlot;
 25223  004D3A  EE20 F00A          	lfsr	2,10
 25224  004D3E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25225  004D40  26D9               	addwf	fsr2l,f,c
 25226  004D42  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25227  004D44  22DA               	addwfc	fsr2h,f,c
 25228  004D46  C0BB  FFDF         	movff	_os+2,indf2	;volatile
 25229                           
 25230                           ;api.c: 201: outBuffer[11] = os.done;
 25231  004D4A  EE20 F00B          	lfsr	2,11
 25232  004D4E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25233  004D50  26D9               	addwf	fsr2l,f,c
 25234  004D52  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25235  004D54  22DA               	addwfc	fsr2h,f,c
 25236  004D56  C0BC  FFDF         	movff	_os+3,indf2	;volatile
 25237                           
 25238                           ;api.c: 202: outBuffer[12] = os.bootloader_mode;
 25239  004D5A  EE20 F00C          	lfsr	2,12
 25240  004D5E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25241  004D60  26D9               	addwf	fsr2l,f,c
 25242  004D62  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25243  004D64  22DA               	addwfc	fsr2h,f,c
 25244  004D66  C0BD  FFDF         	movff	_os+4,indf2	;volatile
 25245                           
 25246                           ;api.c: 203: outBuffer[13] = os.display_mode;
 25247  004D6A  EE20 F00D          	lfsr	2,13
 25248  004D6E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25249  004D70  26D9               	addwf	fsr2l,f,c
 25250  004D72  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25251  004D74  22DA               	addwfc	fsr2h,f,c
 25252  004D76  C0BE  FFDF         	movff	_os+5,indf2	;volatile
 25253  004D7A  0012               	return		;funcret
 25254  004D7C                     __end_of__fill_buffer_get_status:
 25255                           	opt stack 0
 25256                           tosu	equ	0xFFF
 25257                           tosh	equ	0xFFE
 25258                           tosl	equ	0xFFD
 25259                           pclath	equ	0xFFA
 25260                           tblptru	equ	0xFF8
 25261                           tblptrh	equ	0xFF7
 25262                           tblptrl	equ	0xFF6
 25263                           tablat	equ	0xFF5
 25264                           prodh	equ	0xFF4
 25265                           prodl	equ	0xFF3
 25266                           intcon	equ	0xFF2
 25267                           intcon2	equ	0xFF1
 25268                           intcon3	equ	0xFF0
 25269                           indf0	equ	0xFEF
 25270                           postinc0	equ	0xFEE
 25271                           fsr0h	equ	0xFEA
 25272                           fsr0l	equ	0xFE9
 25273                           wreg	equ	0xFE8
 25274                           indf1	equ	0xFE7
 25275                           postdec1	equ	0xFE5
 25276                           plusw1	equ	0xFE3
 25277                           fsr1h	equ	0xFE2
 25278                           fsr1l	equ	0xFE1
 25279                           indf2	equ	0xFDF
 25280                           postinc2	equ	0xFDE
 25281                           postdec2	equ	0xFDD
 25282                           plusw2	equ	0xFDB
 25283                           fsr2h	equ	0xFDA
 25284                           fsr2l	equ	0xFD9
 25285                           status	equ	0xFD8
 25286                           
 25287 ;; *************** function __fill_buffer_get_file_details *****************
 25288 ;; Defined at:
 25289 ;;		line 329 in file "api.c"
 25290 ;; Parameters:    Size  Location     Type
 25291 ;;  inBuffer        2   62[COMRAM] PTR unsigned char 
 25292 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 25293 ;;  outBuffer       2   64[COMRAM] PTR unsigned char 
 25294 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25295 ;; Auto vars:     Size  Location     Type
 25296 ;;  file_number     1   66[COMRAM] unsigned char 
 25297 ;; Return value:  Size  Location     Type
 25298 ;;                  1    wreg      void 
 25299 ;; Registers used:
 25300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25301 ;; Tracked objects:
 25302 ;;		On entry : 0/0
 25303 ;;		On exit  : 0/0
 25304 ;;		Unchanged: 0/0
 25305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25309 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25310 ;;Total ram usage:        5 bytes
 25311 ;; Hardware stack levels used:    1
 25312 ;; Hardware stack levels required when called:    7
 25313 ;; This function calls:
 25314 ;;		_fat_get_file_information
 25315 ;; This function is called by:
 25316 ;;		_api_prepare
 25317 ;; This function uses a non-reentrant model
 25318 ;;
 25319                           
 25320                           	psect	text116
 25321  006B8A                     __ptext116:
 25322                           	opt stack 0
 25323  006B8A                     __fill_buffer_get_file_details:
 25324                           	opt stack 22
 25325                           
 25326                           ;api.c: 331: uint8_t file_number = inBuffer[1];
 25327                           
 25328                           ;incstack = 0
 25329  006B8A  EE20 F001          	lfsr	2,1
 25330  006B8E  503F               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 25331  006B90  26D9               	addwf	fsr2l,f,c
 25332  006B92  5040               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 25333  006B94  22DA               	addwfc	fsr2h,f,c
 25334  006B96  50DF               	movf	indf2,w,c
 25335  006B98  6E43               	movwf	__fill_buffer_get_file_details@file_number,c
 25336                           
 25337                           ;api.c: 334: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 25338  006B9A  C041  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 25339  006B9E  C042  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 25340  006BA2  0E80               	movlw	128
 25341  006BA4  6EDF               	movwf	indf2,c
 25342                           
 25343                           ;api.c: 337: outBuffer[1] = 0xC125 >> 8;
 25344  006BA6  EE20 F001          	lfsr	2,1
 25345  006BAA  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25346  006BAC  26D9               	addwf	fsr2l,f,c
 25347  006BAE  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25348  006BB0  22DA               	addwfc	fsr2h,f,c
 25349  006BB2  0EC1               	movlw	193
 25350  006BB4  6EDF               	movwf	indf2,c
 25351                           
 25352                           ;api.c: 338: outBuffer[2] = (uint8_t) 0xC125;
 25353  006BB6  EE20 F002          	lfsr	2,2
 25354  006BBA  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25355  006BBC  26D9               	addwf	fsr2l,f,c
 25356  006BBE  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25357  006BC0  22DA               	addwfc	fsr2h,f,c
 25358  006BC2  0E25               	movlw	37
 25359  006BC4  6EDF               	movwf	indf2,c
 25360                           
 25361                           ;api.c: 341: outBuffer[3] = file_number;
 25362  006BC6  EE20 F003          	lfsr	2,3
 25363  006BCA  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25364  006BCC  26D9               	addwf	fsr2l,f,c
 25365  006BCE  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25366  006BD0  22DA               	addwfc	fsr2h,f,c
 25367  006BD2  C043  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 25368                           
 25369                           ;api.c: 344: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 25370  006BD6  EE20 F004          	lfsr	2,4
 25371  006BDA  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25372  006BDC  26D9               	addwf	fsr2l,f,c
 25373  006BDE  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25374  006BE0  22DA               	addwfc	fsr2h,f,c
 25375  006BE2  0E05               	movlw	5
 25376  006BE4  2441               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 25377  006BE6  6E37               	movwf	fat_get_file_information@data,c
 25378  006BE8  0E00               	movlw	0
 25379  006BEA  2042               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 25380  006BEC  6E38               	movwf	fat_get_file_information@data+1,c
 25381  006BEE  5043               	movf	__fill_buffer_get_file_details@file_number,w,c
 25382  006BF0  ECA8  F034         	call	_fat_get_file_information
 25383  006BF4  6EDF               	movwf	indf2,c
 25384  006BF6  0012               	return		;funcret
 25385  006BF8                     __end_of__fill_buffer_get_file_details:
 25386                           	opt stack 0
 25387                           tosu	equ	0xFFF
 25388                           tosh	equ	0xFFE
 25389                           tosl	equ	0xFFD
 25390                           pclath	equ	0xFFA
 25391                           tblptru	equ	0xFF8
 25392                           tblptrh	equ	0xFF7
 25393                           tblptrl	equ	0xFF6
 25394                           tablat	equ	0xFF5
 25395                           prodh	equ	0xFF4
 25396                           prodl	equ	0xFF3
 25397                           intcon	equ	0xFF2
 25398                           intcon2	equ	0xFF1
 25399                           intcon3	equ	0xFF0
 25400                           indf0	equ	0xFEF
 25401                           postinc0	equ	0xFEE
 25402                           fsr0h	equ	0xFEA
 25403                           fsr0l	equ	0xFE9
 25404                           wreg	equ	0xFE8
 25405                           indf1	equ	0xFE7
 25406                           postdec1	equ	0xFE5
 25407                           plusw1	equ	0xFE3
 25408                           fsr1h	equ	0xFE2
 25409                           fsr1l	equ	0xFE1
 25410                           indf2	equ	0xFDF
 25411                           postinc2	equ	0xFDE
 25412                           postdec2	equ	0xFDD
 25413                           plusw2	equ	0xFDB
 25414                           fsr2h	equ	0xFDA
 25415                           fsr2l	equ	0xFD9
 25416                           status	equ	0xFD8
 25417                           
 25418 ;; *************** function __fill_buffer_get_display *****************
 25419 ;; Defined at:
 25420 ;;		line 207 in file "api.c"
 25421 ;; Parameters:    Size  Location     Type
 25422 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 25423 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25424 ;;  secondHalf      1    6[COMRAM] unsigned char 
 25425 ;; Auto vars:     Size  Location     Type
 25426 ;;  position        1   15[COMRAM] unsigned char 
 25427 ;;  start_line      1   14[COMRAM] unsigned char 
 25428 ;;  line            1   13[COMRAM] unsigned char 
 25429 ;;  cntr            1   12[COMRAM] unsigned char 
 25430 ;; Return value:  Size  Location     Type
 25431 ;;                  1    wreg      void 
 25432 ;; Registers used:
 25433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25434 ;; Tracked objects:
 25435 ;;		On entry : 0/0
 25436 ;;		On exit  : 0/0
 25437 ;;		Unchanged: 0/0
 25438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25439 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25440 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25441 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25442 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25443 ;;Total ram usage:       12 bytes
 25444 ;; Hardware stack levels used:    1
 25445 ;; Hardware stack levels required when called:    1
 25446 ;; This function calls:
 25447 ;;		_display_get_character
 25448 ;; This function is called by:
 25449 ;;		_api_prepare
 25450 ;; This function uses a non-reentrant model
 25451 ;;
 25452                           
 25453                           	psect	text117
 25454  0057F0                     __ptext117:
 25455                           	opt stack 0
 25456  0057F0                     __fill_buffer_get_display:
 25457                           	opt stack 28
 25458                           
 25459                           ;api.c: 209: uint8_t cntr;;api.c: 210: uint8_t line;;api.c: 211: uint8_t start_line;;api
      +                          .c: 212: uint8_t position;;api.c: 215: if(secondHalf)
 25460                           
 25461                           ;incstack = 0
 25462  0057F0  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 25463  0057F2  B4D8               	btfsc	status,2,c
 25464  0057F4  D006               	goto	l2611
 25465                           
 25466                           ;api.c: 216: {;api.c: 217: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 25467  0057F6  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 25468  0057FA  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 25469  0057FE  0E12               	movlw	18
 25470  005800  D005               	goto	L31
 25471  005802                     l2611:
 25472                           
 25473                           ;api.c: 219: else;api.c: 220: {;api.c: 221: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 25474  005802  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 25475  005806  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 25476  00580A  0E11               	movlw	17
 25477  00580C                     L31:
 25478  00580C  6EDF               	movwf	indf2,c
 25479                           
 25480                           ;api.c: 222: };api.c: 225: outBuffer[1] = 0xC125 >> 8;
 25481  00580E  EE20 F001          	lfsr	2,1
 25482  005812  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 25483  005814  26D9               	addwf	fsr2l,f,c
 25484  005816  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 25485  005818  22DA               	addwfc	fsr2h,f,c
 25486  00581A  0EC1               	movlw	193
 25487  00581C  6EDF               	movwf	indf2,c
 25488                           
 25489                           ;api.c: 226: outBuffer[2] = (uint8_t) 0xC125;
 25490  00581E  EE20 F002          	lfsr	2,2
 25491  005822  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 25492  005824  26D9               	addwf	fsr2l,f,c
 25493  005826  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 25494  005828  22DA               	addwfc	fsr2h,f,c
 25495  00582A  0E25               	movlw	37
 25496  00582C  6EDF               	movwf	indf2,c
 25497                           
 25498                           ;api.c: 229: cntr = 3;
 25499  00582E  0E03               	movlw	3
 25500  005830  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 25501                           
 25502                           ;api.c: 230: if(secondHalf)
 25503  005832  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 25504  005834  B4D8               	btfsc	status,2,c
 25505  005836  D002               	goto	l2613
 25506                           
 25507                           ;api.c: 231: {;api.c: 232: start_line = 2;
 25508  005838  0E02               	movlw	2
 25509  00583A  D001               	goto	L32
 25510  00583C                     l2613:
 25511                           
 25512                           ;api.c: 234: else;api.c: 235: {;api.c: 236: start_line = 0;
 25513  00583C  0E00               	movlw	0
 25514  00583E                     L32:
 25515  00583E  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 25516                           
 25517                           ;api.c: 237: };api.c: 238: for(line=start_line; line<start_line+2; ++line)
 25518  005840  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 25519  005844  D01A               	goto	l2615
 25520  005846                     
 25521                           ;api.c: 239: {;api.c: 240: for(position=0; position<20; ++position)
 25522  005846  0E00               	movlw	0
 25523  005848  6E10               	movwf	__fill_buffer_get_display@position,c
 25524  00584A                     l13615:
 25525  00584A  0E13               	movlw	19
 25526  00584C  6410               	cpfsgt	__fill_buffer_get_display@position,c
 25527  00584E  D001               	goto	l2617
 25528  005850  D013               	goto	u10530
 25529  005852                     l2617:
 25530                           
 25531                           ;api.c: 241: {;api.c: 242: outBuffer[cntr] = display_get_character(line, position);
 25532  005852  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 25533  005856  500E               	movf	__fill_buffer_get_display@line,w,c
 25534  005858  ECD5  F03E         	call	_display_get_character
 25535  00585C  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 25536  00585E  500D               	movf	__fill_buffer_get_display@cntr,w,c
 25537  005860  0D01               	mullw	1
 25538  005862  50F3               	movf	prodl,w,c
 25539  005864  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 25540  005866  6ED9               	movwf	fsr2l,c
 25541  005868  50F4               	movf	prodh,w,c
 25542  00586A  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 25543  00586C  6EDA               	movwf	fsr2h,c
 25544  00586E  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 25545                           
 25546                           ;api.c: 243: ++cntr;
 25547  005872  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 25548  005874  2A10               	incf	__fill_buffer_get_display@position,f,c
 25549  005876  D7E9               	goto	l13615
 25550  005878                     u10530:
 25551  005878  2A0E               	incf	__fill_buffer_get_display@line,f,c
 25552  00587A                     l2615:
 25553  00587A  500F               	movf	__fill_buffer_get_display@start_line,w,c
 25554  00587C  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 25555  00587E  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 25556  005880  0E02               	movlw	2
 25557  005882  2608               	addwf	??__fill_buffer_get_display,f,c
 25558  005884  0E00               	movlw	0
 25559  005886  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 25560  005888  500E               	movf	__fill_buffer_get_display@line,w,c
 25561  00588A  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 25562  00588C  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 25563  00588E  5008               	movf	??__fill_buffer_get_display,w,c
 25564  005890  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 25565  005892  500B               	movf	??__fill_buffer_get_display+3,w,c
 25566  005894  0A80               	xorlw	128
 25567  005896  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 25568  005898  5009               	movf	??__fill_buffer_get_display+1,w,c
 25569  00589A  0A80               	xorlw	128
 25570  00589C  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 25571  00589E  B0D8               	btfsc	status,0,c
 25572  0058A0  0012               	return	
 25573  0058A2  D7D1               	goto	l2616
 25574  0058A4                     __end_of__fill_buffer_get_display:
 25575                           	opt stack 0
 25576                           tosu	equ	0xFFF
 25577                           tosh	equ	0xFFE
 25578                           tosl	equ	0xFFD
 25579                           pclath	equ	0xFFA
 25580                           tblptru	equ	0xFF8
 25581                           tblptrh	equ	0xFF7
 25582                           tblptrl	equ	0xFF6
 25583                           tablat	equ	0xFF5
 25584                           prodh	equ	0xFF4
 25585                           prodl	equ	0xFF3
 25586                           intcon	equ	0xFF2
 25587                           intcon2	equ	0xFF1
 25588                           intcon3	equ	0xFF0
 25589                           indf0	equ	0xFEF
 25590                           postinc0	equ	0xFEE
 25591                           fsr0h	equ	0xFEA
 25592                           fsr0l	equ	0xFE9
 25593                           wreg	equ	0xFE8
 25594                           indf1	equ	0xFE7
 25595                           postdec1	equ	0xFE5
 25596                           plusw1	equ	0xFE3
 25597                           fsr1h	equ	0xFE2
 25598                           fsr1l	equ	0xFE1
 25599                           indf2	equ	0xFDF
 25600                           postinc2	equ	0xFDE
 25601                           postdec2	equ	0xFDD
 25602                           plusw2	equ	0xFDB
 25603                           fsr2h	equ	0xFDA
 25604                           fsr2l	equ	0xFD9
 25605                           status	equ	0xFD8
 25606                           
 25607 ;; *************** function _display_get_character *****************
 25608 ;; Defined at:
 25609 ;;		line 70 in file "display.c"
 25610 ;; Parameters:    Size  Location     Type
 25611 ;;  line            1    wreg     unsigned char 
 25612 ;;  position        1    0[COMRAM] unsigned char 
 25613 ;; Auto vars:     Size  Location     Type
 25614 ;;  line            1    3[COMRAM] unsigned char 
 25615 ;; Return value:  Size  Location     Type
 25616 ;;                  1    wreg      unsigned char 
 25617 ;; Registers used:
 25618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25619 ;; Tracked objects:
 25620 ;;		On entry : 0/0
 25621 ;;		On exit  : 0/0
 25622 ;;		Unchanged: 0/0
 25623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25628 ;;Total ram usage:        4 bytes
 25629 ;; Hardware stack levels used:    1
 25630 ;; This function calls:
 25631 ;;		Nothing
 25632 ;; This function is called by:
 25633 ;;		__fill_buffer_get_display
 25634 ;; This function uses a non-reentrant model
 25635 ;;
 25636                           
 25637                           	psect	text118
 25638  007DAA                     __ptext118:
 25639                           	opt stack 0
 25640  007DAA                     _display_get_character:
 25641                           	opt stack 28
 25642                           
 25643                           ;incstack = 0
 25644                           ;display_get_character@line stored from wreg
 25645  007DAA  6E04               	movwf	display_get_character@line,c
 25646                           
 25647                           ;display.c: 72: return display_content[line][position];
 25648  007DAC  5004               	movf	display_get_character@line,w,c
 25649  007DAE  0D14               	mullw	20
 25650  007DB0  0E00               	movlw	low _display_content
 25651  007DB2  6E02               	movwf	??_display_get_character& (0+255),c
 25652  007DB4  0E02               	movlw	high _display_content
 25653  007DB6  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 25654  007DB8  50F3               	movf	prodl,w,c
 25655  007DBA  2602               	addwf	??_display_get_character,f,c
 25656  007DBC  50F4               	movf	prodh,w,c
 25657  007DBE  2203               	addwfc	??_display_get_character+1,f,c
 25658  007DC0  5001               	movf	display_get_character@position,w,c
 25659  007DC2  0D01               	mullw	1
 25660  007DC4  50F3               	movf	prodl,w,c
 25661  007DC6  2402               	addwf	??_display_get_character,w,c
 25662  007DC8  6ED9               	movwf	fsr2l,c
 25663  007DCA  50F4               	movf	prodh,w,c
 25664  007DCC  2003               	addwfc	??_display_get_character+1,w,c
 25665  007DCE  6EDA               	movwf	fsr2h,c
 25666  007DD0  50DF               	movf	indf2,w,c
 25667  007DD2  0012               	return	
 25668  007DD4                     __end_of_display_get_character:
 25669                           	opt stack 0
 25670                           tosu	equ	0xFFF
 25671                           tosh	equ	0xFFE
 25672                           tosl	equ	0xFFD
 25673                           pclath	equ	0xFFA
 25674                           tblptru	equ	0xFF8
 25675                           tblptrh	equ	0xFF7
 25676                           tblptrl	equ	0xFF6
 25677                           tablat	equ	0xFF5
 25678                           prodh	equ	0xFF4
 25679                           prodl	equ	0xFF3
 25680                           intcon	equ	0xFF2
 25681                           intcon2	equ	0xFF1
 25682                           intcon3	equ	0xFF0
 25683                           indf0	equ	0xFEF
 25684                           postinc0	equ	0xFEE
 25685                           fsr0h	equ	0xFEA
 25686                           fsr0l	equ	0xFE9
 25687                           wreg	equ	0xFE8
 25688                           indf1	equ	0xFE7
 25689                           postdec1	equ	0xFE5
 25690                           plusw1	equ	0xFE3
 25691                           fsr1h	equ	0xFE2
 25692                           fsr1l	equ	0xFE1
 25693                           indf2	equ	0xFDF
 25694                           postinc2	equ	0xFDE
 25695                           postdec2	equ	0xFDD
 25696                           plusw2	equ	0xFDB
 25697                           fsr2h	equ	0xFDA
 25698                           fsr2l	equ	0xFD9
 25699                           status	equ	0xFD8
 25700                           
 25701 ;; *************** function __fill_buffer_get_configuration *****************
 25702 ;; Defined at:
 25703 ;;		line 308 in file "api.c"
 25704 ;; Parameters:    Size  Location     Type
 25705 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 25706 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25707 ;; Auto vars:     Size  Location     Type
 25708 ;;		None
 25709 ;; Return value:  Size  Location     Type
 25710 ;;                  1    wreg      void 
 25711 ;; Registers used:
 25712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25713 ;; Tracked objects:
 25714 ;;		On entry : 0/0
 25715 ;;		On exit  : 0/0
 25716 ;;		Unchanged: 0/0
 25717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25722 ;;Total ram usage:        2 bytes
 25723 ;; Hardware stack levels used:    1
 25724 ;; This function calls:
 25725 ;;		Nothing
 25726 ;; This function is called by:
 25727 ;;		_api_prepare
 25728 ;; This function uses a non-reentrant model
 25729 ;;
 25730                           
 25731                           	psect	text119
 25732  005E84                     __ptext119:
 25733                           	opt stack 0
 25734  005E84                     __fill_buffer_get_configuration:
 25735                           	opt stack 29
 25736                           
 25737                           ;api.c: 311: outBuffer[0] = DATAREQUEST_GET_STATUS;
 25738                           
 25739                           ;incstack = 0
 25740  005E84  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 25741  005E88  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 25742  005E8C  0E10               	movlw	16
 25743  005E8E  6EDF               	movwf	indf2,c
 25744                           
 25745                           ;api.c: 314: outBuffer[1] = 0xC125 >> 8;
 25746  005E90  EE20 F001          	lfsr	2,1
 25747  005E94  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25748  005E96  26D9               	addwf	fsr2l,f,c
 25749  005E98  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25750  005E9A  22DA               	addwfc	fsr2h,f,c
 25751  005E9C  0EC1               	movlw	193
 25752  005E9E  6EDF               	movwf	indf2,c
 25753                           
 25754                           ;api.c: 315: outBuffer[2] = (uint8_t) 0xC125;
 25755  005EA0  EE20 F002          	lfsr	2,2
 25756  005EA4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25757  005EA6  26D9               	addwf	fsr2l,f,c
 25758  005EA8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25759  005EAA  22DA               	addwfc	fsr2h,f,c
 25760  005EAC  0E25               	movlw	37
 25761  005EAE  6EDF               	movwf	indf2,c
 25762                           
 25763                           ;api.c: 318: outBuffer[3] = communicationSettings.spiMode;
 25764  005EB0  EE20 F003          	lfsr	2,3
 25765  005EB4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25766  005EB6  26D9               	addwf	fsr2l,f,c
 25767  005EB8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25768  005EBA  22DA               	addwfc	fsr2h,f,c
 25769  005EBC  C139  FFDF         	movff	_communicationSettings,indf2
 25770                           
 25771                           ;api.c: 319: outBuffer[4] = communicationSettings.spiFrequency;
 25772  005EC0  EE20 F004          	lfsr	2,4
 25773  005EC4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25774  005EC6  26D9               	addwf	fsr2l,f,c
 25775  005EC8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25776  005ECA  22DA               	addwfc	fsr2h,f,c
 25777  005ECC  C13A  FFDF         	movff	_communicationSettings+1,indf2
 25778                           
 25779                           ;api.c: 320: outBuffer[5] = communicationSettings.spiPolarity;
 25780  005ED0  EE20 F005          	lfsr	2,5
 25781  005ED4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25782  005ED6  26D9               	addwf	fsr2l,f,c
 25783  005ED8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25784  005EDA  22DA               	addwfc	fsr2h,f,c
 25785  005EDC  C13B  FFDF         	movff	_communicationSettings+2,indf2
 25786                           
 25787                           ;api.c: 323: outBuffer[6] = communicationSettings.i2cMode;
 25788  005EE0  EE20 F006          	lfsr	2,6
 25789  005EE4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25790  005EE6  26D9               	addwf	fsr2l,f,c
 25791  005EE8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25792  005EEA  22DA               	addwfc	fsr2h,f,c
 25793  005EEC  C13C  FFDF         	movff	_communicationSettings+3,indf2
 25794                           
 25795                           ;api.c: 324: outBuffer[7] = communicationSettings.i2cFrequency;
 25796  005EF0  EE20 F007          	lfsr	2,7
 25797  005EF4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25798  005EF6  26D9               	addwf	fsr2l,f,c
 25799  005EF8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25800  005EFA  22DA               	addwfc	fsr2h,f,c
 25801  005EFC  C13D  FFDF         	movff	_communicationSettings+4,indf2
 25802                           
 25803                           ;api.c: 325: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 25804  005F00  EE20 F008          	lfsr	2,8
 25805  005F04  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25806  005F06  26D9               	addwf	fsr2l,f,c
 25807  005F08  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25808  005F0A  22DA               	addwfc	fsr2h,f,c
 25809  005F0C  C13E  FFDF         	movff	_communicationSettings+5,indf2
 25810                           
 25811                           ;api.c: 326: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 25812  005F10  EE20 F009          	lfsr	2,9
 25813  005F14  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25814  005F16  26D9               	addwf	fsr2l,f,c
 25815  005F18  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25816  005F1A  22DA               	addwfc	fsr2h,f,c
 25817  005F1C  C13F  FFDF         	movff	_communicationSettings+6,indf2
 25818  005F20  0012               	return		;funcret
 25819  005F22                     __end_of__fill_buffer_get_configuration:
 25820                           	opt stack 0
 25821                           tosu	equ	0xFFF
 25822                           tosh	equ	0xFFE
 25823                           tosl	equ	0xFFD
 25824                           pclath	equ	0xFFA
 25825                           tblptru	equ	0xFF8
 25826                           tblptrh	equ	0xFF7
 25827                           tblptrl	equ	0xFF6
 25828                           tablat	equ	0xFF5
 25829                           prodh	equ	0xFF4
 25830                           prodl	equ	0xFF3
 25831                           intcon	equ	0xFF2
 25832                           intcon2	equ	0xFF1
 25833                           intcon3	equ	0xFF0
 25834                           indf0	equ	0xFEF
 25835                           postinc0	equ	0xFEE
 25836                           fsr0h	equ	0xFEA
 25837                           fsr0l	equ	0xFE9
 25838                           wreg	equ	0xFE8
 25839                           indf1	equ	0xFE7
 25840                           postdec1	equ	0xFE5
 25841                           plusw1	equ	0xFE3
 25842                           fsr1h	equ	0xFE2
 25843                           fsr1l	equ	0xFE1
 25844                           indf2	equ	0xFDF
 25845                           postinc2	equ	0xFDE
 25846                           postdec2	equ	0xFDD
 25847                           plusw2	equ	0xFDB
 25848                           fsr2h	equ	0xFDA
 25849                           fsr2l	equ	0xFD9
 25850                           status	equ	0xFD8
 25851                           
 25852 ;; *************** function __fill_buffer_get_bootloader_details *****************
 25853 ;; Defined at:
 25854 ;;		line 248 in file "api.c"
 25855 ;; Parameters:    Size  Location     Type
 25856 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 25857 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25858 ;; Auto vars:     Size  Location     Type
 25859 ;;  buffer_large    4   11[COMRAM] unsigned long 
 25860 ;;  buffer_small    2   15[COMRAM] unsigned int 
 25861 ;;  cntr            1   10[COMRAM] unsigned char 
 25862 ;;  data_length     1    9[COMRAM] unsigned char 
 25863 ;; Return value:  Size  Location     Type
 25864 ;;                  1    wreg      void 
 25865 ;; Registers used:
 25866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25867 ;; Tracked objects:
 25868 ;;		On entry : 0/0
 25869 ;;		On exit  : 0/0
 25870 ;;		Unchanged: 0/0
 25871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25873 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25874 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25875 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25876 ;;Total ram usage:       13 bytes
 25877 ;; Hardware stack levels used:    1
 25878 ;; Hardware stack levels required when called:    1
 25879 ;; This function calls:
 25880 ;;		_bootloader_get_entries
 25881 ;;		_bootloader_get_error
 25882 ;;		_bootloader_get_file_size
 25883 ;;		_bootloader_get_flashPagesWritten
 25884 ;;		_bootloader_get_rec_address
 25885 ;;		_bootloader_get_rec_checksum
 25886 ;;		_bootloader_get_rec_checksumCheck
 25887 ;;		_bootloader_get_rec_data
 25888 ;;		_bootloader_get_rec_dataLength
 25889 ;;		_bootloader_get_rec_recordType
 25890 ;;		_bootloader_get_total_entries
 25891 ;; This function is called by:
 25892 ;;		_api_prepare
 25893 ;; This function uses a non-reentrant model
 25894 ;;
 25895                           
 25896                           	psect	text120
 25897  0029E2                     __ptext120:
 25898                           	opt stack 0
 25899  0029E2                     __fill_buffer_get_bootloader_details:
 25900                           	opt stack 28
 25901                           
 25902                           ;api.c: 250: uint8_t cntr;;api.c: 251: uint8_t data_length;;api.c: 252: uint16_t buffer_
      +                          small;;api.c: 253: uint32_t buffer_large;;api.c: 256: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 25903                           
 25904                           ;incstack = 0
 25905  0029E2  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 25906  0029E6  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 25907  0029EA  0E13               	movlw	19
 25908  0029EC  6EDF               	movwf	indf2,c
 25909                           
 25910                           ;api.c: 259: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 25911  0029EE  EE20 F001          	lfsr	2,1
 25912  0029F2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25913  0029F4  26D9               	addwf	fsr2l,f,c
 25914  0029F6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25915  0029F8  22DA               	addwfc	fsr2h,f,c
 25916  0029FA  0EC1               	movlw	193
 25917  0029FC  6EDF               	movwf	indf2,c
 25918                           
 25919                           ;api.c: 260: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 25920  0029FE  EE20 F002          	lfsr	2,2
 25921  002A02  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25922  002A04  26D9               	addwf	fsr2l,f,c
 25923  002A06  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25924  002A08  22DA               	addwfc	fsr2h,f,c
 25925  002A0A  0E25               	movlw	37
 25926  002A0C  6EDF               	movwf	indf2,c
 25927                           
 25928                           ;api.c: 263: buffer_large = bootloader_get_file_size();
 25929  002A0E  EC56  F040         	call	_bootloader_get_file_size	;wreg free
 25930  002A12  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 25931  002A16  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 25932  002A1A  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 25933  002A1E  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 25934                           
 25935                           ;api.c: 264: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 25936  002A22  EE20 F003          	lfsr	2,3
 25937  002A26  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25938  002A28  26D9               	addwf	fsr2l,f,c
 25939  002A2A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25940  002A2C  22DA               	addwfc	fsr2h,f,c
 25941  002A2E  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 25942  002A30  6EDF               	movwf	indf2,c
 25943                           
 25944                           ;api.c: 265: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 25945  002A32  EE20 F004          	lfsr	2,4
 25946  002A36  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25947  002A38  26D9               	addwf	fsr2l,f,c
 25948  002A3A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25949  002A3C  22DA               	addwfc	fsr2h,f,c
 25950  002A3E  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 25951                           
 25952                           ;api.c: 266: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 25953  002A42  EE20 F005          	lfsr	2,5
 25954  002A46  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25955  002A48  26D9               	addwf	fsr2l,f,c
 25956  002A4A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25957  002A4C  22DA               	addwfc	fsr2h,f,c
 25958  002A4E  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 25959  002A50  6EDF               	movwf	indf2,c
 25960                           
 25961                           ;api.c: 267: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 25962  002A52  EE20 F006          	lfsr	2,6
 25963  002A56  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25964  002A58  26D9               	addwf	fsr2l,f,c
 25965  002A5A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25966  002A5C  22DA               	addwfc	fsr2h,f,c
 25967  002A5E  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 25968                           
 25969                           ;api.c: 269: buffer_small = bootloader_get_entries();
 25970  002A62  ECC8  F040         	call	_bootloader_get_entries	;wreg free
 25971  002A66  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 25972  002A6A  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 25973                           
 25974                           ;api.c: 270: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25975  002A6E  EE20 F007          	lfsr	2,7
 25976  002A72  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25977  002A74  26D9               	addwf	fsr2l,f,c
 25978  002A76  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25979  002A78  22DA               	addwfc	fsr2h,f,c
 25980  002A7A  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25981  002A7C  6EDF               	movwf	indf2,c
 25982                           
 25983                           ;api.c: 271: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 25984  002A7E  EE20 F008          	lfsr	2,8
 25985  002A82  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25986  002A84  26D9               	addwf	fsr2l,f,c
 25987  002A86  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25988  002A88  22DA               	addwfc	fsr2h,f,c
 25989  002A8A  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25990                           
 25991                           ;api.c: 273: buffer_small = bootloader_get_total_entries();
 25992  002A8E  ECD2  F040         	call	_bootloader_get_total_entries	;wreg free
 25993  002A92  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 25994  002A96  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 25995                           
 25996                           ;api.c: 274: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25997  002A9A  EE20 F009          	lfsr	2,9
 25998  002A9E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25999  002AA0  26D9               	addwf	fsr2l,f,c
 26000  002AA2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26001  002AA4  22DA               	addwfc	fsr2h,f,c
 26002  002AA6  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 26003  002AA8  6EDF               	movwf	indf2,c
 26004                           
 26005                           ;api.c: 275: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 26006  002AAA  EE20 F00A          	lfsr	2,10
 26007  002AAE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26008  002AB0  26D9               	addwf	fsr2l,f,c
 26009  002AB2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26010  002AB4  22DA               	addwfc	fsr2h,f,c
 26011  002AB6  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 26012                           
 26013                           ;api.c: 277: outBuffer[11] = (uint8_t) bootloader_get_error();
 26014  002ABA  EE20 F00B          	lfsr	2,11
 26015  002ABE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26016  002AC0  26D9               	addwf	fsr2l,f,c
 26017  002AC2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26018  002AC4  22DA               	addwfc	fsr2h,f,c
 26019  002AC6  ECFC  F040         	call	_bootloader_get_error	;wreg free
 26020  002ACA  6EDF               	movwf	indf2,c
 26021                           
 26022                           ;api.c: 279: buffer_small = bootloader_get_flashPagesWritten();
 26023  002ACC  ECCD  F040         	call	_bootloader_get_flashPagesWritten	;wreg free
 26024  002AD0  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 26025  002AD4  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 26026                           
 26027                           ;api.c: 280: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 26028  002AD8  EE20 F00C          	lfsr	2,12
 26029  002ADC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26030  002ADE  26D9               	addwf	fsr2l,f,c
 26031  002AE0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26032  002AE2  22DA               	addwfc	fsr2h,f,c
 26033  002AE4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 26034  002AE6  6EDF               	movwf	indf2,c
 26035                           
 26036                           ;api.c: 281: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 26037  002AE8  EE20 F00D          	lfsr	2,13
 26038  002AEC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26039  002AEE  26D9               	addwf	fsr2l,f,c
 26040  002AF0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26041  002AF2  22DA               	addwfc	fsr2h,f,c
 26042  002AF4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 26043                           
 26044                           ;api.c: 284: buffer_small = bootloader_get_rec_dataLength();
 26045  002AF8  ECBE  F040         	call	_bootloader_get_rec_dataLength	;wreg free
 26046  002AFC  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 26047  002B00  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 26048                           
 26049                           ;api.c: 285: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 26050  002B04  EE20 F00E          	lfsr	2,14
 26051  002B08  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26052  002B0A  26D9               	addwf	fsr2l,f,c
 26053  002B0C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26054  002B0E  22DA               	addwfc	fsr2h,f,c
 26055  002B10  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 26056  002B12  6EDF               	movwf	indf2,c
 26057                           
 26058                           ;api.c: 286: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 26059  002B14  EE20 F00F          	lfsr	2,15
 26060  002B18  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26061  002B1A  26D9               	addwf	fsr2l,f,c
 26062  002B1C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26063  002B1E  22DA               	addwfc	fsr2h,f,c
 26064  002B20  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 26065                           
 26066                           ;api.c: 288: buffer_small = bootloader_get_rec_address();
 26067  002B24  ECC3  F040         	call	_bootloader_get_rec_address	;wreg free
 26068  002B28  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 26069  002B2C  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 26070                           
 26071                           ;api.c: 289: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 26072  002B30  EE20 F010          	lfsr	2,16
 26073  002B34  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26074  002B36  26D9               	addwf	fsr2l,f,c
 26075  002B38  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26076  002B3A  22DA               	addwfc	fsr2h,f,c
 26077  002B3C  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 26078  002B3E  6EDF               	movwf	indf2,c
 26079                           
 26080                           ;api.c: 290: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 26081  002B40  EE20 F011          	lfsr	2,17
 26082  002B44  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26083  002B46  26D9               	addwf	fsr2l,f,c
 26084  002B48  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26085  002B4A  22DA               	addwfc	fsr2h,f,c
 26086  002B4C  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 26087                           
 26088                           ;api.c: 292: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 26089  002B50  EE20 F012          	lfsr	2,18
 26090  002B54  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26091  002B56  26D9               	addwf	fsr2l,f,c
 26092  002B58  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26093  002B5A  22DA               	addwfc	fsr2h,f,c
 26094  002B5C  ECF0  F040         	call	_bootloader_get_rec_recordType	;wreg free
 26095  002B60  6EDF               	movwf	indf2,c
 26096                           
 26097                           ;api.c: 293: outBuffer[19] = bootloader_get_rec_checksum();
 26098  002B62  EE20 F013          	lfsr	2,19
 26099  002B66  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26100  002B68  26D9               	addwf	fsr2l,f,c
 26101  002B6A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26102  002B6C  22DA               	addwfc	fsr2h,f,c
 26103  002B6E  ECF6  F040         	call	_bootloader_get_rec_checksum	;wreg free
 26104  002B72  6EDF               	movwf	indf2,c
 26105                           
 26106                           ;api.c: 294: outBuffer[20] = bootloader_get_rec_checksumCheck();
 26107  002B74  EE20 F014          	lfsr	2,20
 26108  002B78  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26109  002B7A  26D9               	addwf	fsr2l,f,c
 26110  002B7C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26111  002B7E  22DA               	addwfc	fsr2h,f,c
 26112  002B80  ECF3  F040         	call	_bootloader_get_rec_checksumCheck	;wreg free
 26113  002B84  6EDF               	movwf	indf2,c
 26114                           
 26115                           ;api.c: 296: data_length = (uint8_t) bootloader_get_rec_dataLength();
 26116  002B86  ECBE  F040         	call	_bootloader_get_rec_dataLength	;wreg free
 26117  002B8A  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 26118  002B8C  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 26119                           
 26120                           ;api.c: 297: if(data_length>43)
 26121  002B8E  0E2B               	movlw	43
 26122  002B90  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 26123  002B92  D002               	goto	l2623
 26124                           
 26125                           ;api.c: 298: {;api.c: 300: data_length = 43;
 26126  002B94  0E2B               	movlw	43
 26127  002B96  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 26128  002B98                     l2623:
 26129                           
 26130                           ;api.c: 301: };api.c: 302: for(cntr=0; cntr<data_length; ++cntr)
 26131  002B98  0E00               	movlw	0
 26132  002B9A  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 26133  002B9C  D014               	goto	l2624
 26134  002B9E                     
 26135                           ;api.c: 303: {;api.c: 304: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 26136  002B9E  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 26137  002BA0  EC24  F040         	call	_bootloader_get_rec_data
 26138  002BA4  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 26139  002BA6  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 26140  002BA8  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 26141  002BAA  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 26142  002BAC  0E15               	movlw	21
 26143  002BAE  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 26144  002BB0  0E00               	movlw	0
 26145  002BB2  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 26146  002BB4  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 26147  002BB6  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26148  002BB8  6ED9               	movwf	fsr2l,c
 26149  002BBA  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 26150  002BBC  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26151  002BBE  6EDA               	movwf	fsr2h,c
 26152  002BC0  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 26153  002BC4  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 26154  002BC6                     l2624:
 26155  002BC6  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 26156  002BC8  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 26157  002BCA  B0D8               	btfsc	status,0,c
 26158  002BCC  0012               	return	
 26159  002BCE  D7E7               	goto	l2625
 26160  002BD0                     __end_of__fill_buffer_get_bootloader_details:
 26161                           	opt stack 0
 26162                           tosu	equ	0xFFF
 26163                           tosh	equ	0xFFE
 26164                           tosl	equ	0xFFD
 26165                           pclath	equ	0xFFA
 26166                           tblptru	equ	0xFF8
 26167                           tblptrh	equ	0xFF7
 26168                           tblptrl	equ	0xFF6
 26169                           tablat	equ	0xFF5
 26170                           prodh	equ	0xFF4
 26171                           prodl	equ	0xFF3
 26172                           intcon	equ	0xFF2
 26173                           intcon2	equ	0xFF1
 26174                           intcon3	equ	0xFF0
 26175                           indf0	equ	0xFEF
 26176                           postinc0	equ	0xFEE
 26177                           fsr0h	equ	0xFEA
 26178                           fsr0l	equ	0xFE9
 26179                           wreg	equ	0xFE8
 26180                           indf1	equ	0xFE7
 26181                           postdec1	equ	0xFE5
 26182                           plusw1	equ	0xFE3
 26183                           fsr1h	equ	0xFE2
 26184                           fsr1l	equ	0xFE1
 26185                           indf2	equ	0xFDF
 26186                           postinc2	equ	0xFDE
 26187                           postdec2	equ	0xFDD
 26188                           plusw2	equ	0xFDB
 26189                           fsr2h	equ	0xFDA
 26190                           fsr2l	equ	0xFD9
 26191                           status	equ	0xFD8
 26192                           
 26193 ;; *************** function _bootloader_get_rec_recordType *****************
 26194 ;; Defined at:
 26195 ;;		line 488 in file "bootloader.c"
 26196 ;; Parameters:    Size  Location     Type
 26197 ;;		None
 26198 ;; Auto vars:     Size  Location     Type
 26199 ;;		None
 26200 ;; Return value:  Size  Location     Type
 26201 ;;                  1    wreg      enum E6772
 26202 ;; Registers used:
 26203 ;;		wreg, status,2
 26204 ;; Tracked objects:
 26205 ;;		On entry : 0/0
 26206 ;;		On exit  : 0/0
 26207 ;;		Unchanged: 0/0
 26208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26213 ;;Total ram usage:        0 bytes
 26214 ;; Hardware stack levels used:    1
 26215 ;; This function calls:
 26216 ;;		Nothing
 26217 ;; This function is called by:
 26218 ;;		__fill_buffer_get_bootloader_details
 26219 ;; This function uses a non-reentrant model
 26220 ;;
 26221                           
 26222                           	psect	text121
 26223  0081E0                     __ptext121:
 26224                           	opt stack 0
 26225  0081E0                     _bootloader_get_rec_recordType:
 26226                           	opt stack 28
 26227                           
 26228                           ;bootloader.c: 490: return hex_file_entry.recordType;
 26229                           
 26230                           ;incstack = 0
 26231  0081E0  0101               	movlb	1	; () banked
 26232  0081E2  51BE               	movf	(_hex_file_entry+4)& (0+255),w,b
 26233  0081E4  0012               	return	
 26234  0081E6                     __end_of_bootloader_get_rec_recordType:
 26235                           	opt stack 0
 26236                           tosu	equ	0xFFF
 26237                           tosh	equ	0xFFE
 26238                           tosl	equ	0xFFD
 26239                           pclath	equ	0xFFA
 26240                           tblptru	equ	0xFF8
 26241                           tblptrh	equ	0xFF7
 26242                           tblptrl	equ	0xFF6
 26243                           tablat	equ	0xFF5
 26244                           prodh	equ	0xFF4
 26245                           prodl	equ	0xFF3
 26246                           intcon	equ	0xFF2
 26247                           intcon2	equ	0xFF1
 26248                           intcon3	equ	0xFF0
 26249                           indf0	equ	0xFEF
 26250                           postinc0	equ	0xFEE
 26251                           fsr0h	equ	0xFEA
 26252                           fsr0l	equ	0xFE9
 26253                           wreg	equ	0xFE8
 26254                           indf1	equ	0xFE7
 26255                           postdec1	equ	0xFE5
 26256                           plusw1	equ	0xFE3
 26257                           fsr1h	equ	0xFE2
 26258                           fsr1l	equ	0xFE1
 26259                           indf2	equ	0xFDF
 26260                           postinc2	equ	0xFDE
 26261                           postdec2	equ	0xFDD
 26262                           plusw2	equ	0xFDB
 26263                           fsr2h	equ	0xFDA
 26264                           fsr2l	equ	0xFD9
 26265                           status	equ	0xFD8
 26266                           
 26267 ;; *************** function _bootloader_get_rec_dataLength *****************
 26268 ;; Defined at:
 26269 ;;		line 477 in file "bootloader.c"
 26270 ;; Parameters:    Size  Location     Type
 26271 ;;		None
 26272 ;; Auto vars:     Size  Location     Type
 26273 ;;		None
 26274 ;; Return value:  Size  Location     Type
 26275 ;;                  2    0[COMRAM] unsigned int 
 26276 ;; Registers used:
 26277 ;;		None
 26278 ;; Tracked objects:
 26279 ;;		On entry : 0/0
 26280 ;;		On exit  : 0/0
 26281 ;;		Unchanged: 0/0
 26282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26287 ;;Total ram usage:        2 bytes
 26288 ;; Hardware stack levels used:    1
 26289 ;; This function calls:
 26290 ;;		Nothing
 26291 ;; This function is called by:
 26292 ;;		__fill_buffer_get_bootloader_details
 26293 ;; This function uses a non-reentrant model
 26294 ;;
 26295                           
 26296                           	psect	text122
 26297  00817C                     __ptext122:
 26298                           	opt stack 0
 26299  00817C                     _bootloader_get_rec_dataLength:
 26300                           	opt stack 28
 26301                           
 26302                           ;bootloader.c: 479: return hex_file_entry.dataLength;
 26303                           
 26304                           ; BSR set to: 1
 26305                           ;incstack = 0
 26306  00817C  C1BA  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 26307  008180  C1BB  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 26308  008184  0012               	return		;funcret
 26309  008186                     __end_of_bootloader_get_rec_dataLength:
 26310                           	opt stack 0
 26311                           tosu	equ	0xFFF
 26312                           tosh	equ	0xFFE
 26313                           tosl	equ	0xFFD
 26314                           pclath	equ	0xFFA
 26315                           tblptru	equ	0xFF8
 26316                           tblptrh	equ	0xFF7
 26317                           tblptrl	equ	0xFF6
 26318                           tablat	equ	0xFF5
 26319                           prodh	equ	0xFF4
 26320                           prodl	equ	0xFF3
 26321                           intcon	equ	0xFF2
 26322                           intcon2	equ	0xFF1
 26323                           intcon3	equ	0xFF0
 26324                           indf0	equ	0xFEF
 26325                           postinc0	equ	0xFEE
 26326                           fsr0h	equ	0xFEA
 26327                           fsr0l	equ	0xFE9
 26328                           wreg	equ	0xFE8
 26329                           indf1	equ	0xFE7
 26330                           postdec1	equ	0xFE5
 26331                           plusw1	equ	0xFE3
 26332                           fsr1h	equ	0xFE2
 26333                           fsr1l	equ	0xFE1
 26334                           indf2	equ	0xFDF
 26335                           postinc2	equ	0xFDE
 26336                           postdec2	equ	0xFDD
 26337                           plusw2	equ	0xFDB
 26338                           fsr2h	equ	0xFDA
 26339                           fsr2l	equ	0xFD9
 26340                           status	equ	0xFD8
 26341                           
 26342 ;; *************** function _bootloader_get_rec_data *****************
 26343 ;; Defined at:
 26344 ;;		line 493 in file "bootloader.c"
 26345 ;; Parameters:    Size  Location     Type
 26346 ;;  index           1    wreg     unsigned char 
 26347 ;; Auto vars:     Size  Location     Type
 26348 ;;  index           1    0[COMRAM] unsigned char 
 26349 ;; Return value:  Size  Location     Type
 26350 ;;                  1    wreg      unsigned char 
 26351 ;; Registers used:
 26352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26353 ;; Tracked objects:
 26354 ;;		On entry : 0/0
 26355 ;;		On exit  : 0/0
 26356 ;;		Unchanged: 0/0
 26357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26362 ;;Total ram usage:        1 bytes
 26363 ;; Hardware stack levels used:    1
 26364 ;; This function calls:
 26365 ;;		Nothing
 26366 ;; This function is called by:
 26367 ;;		__fill_buffer_get_bootloader_details
 26368 ;; This function uses a non-reentrant model
 26369 ;;
 26370                           
 26371                           	psect	text123
 26372  008048                     __ptext123:
 26373                           	opt stack 0
 26374  008048                     _bootloader_get_rec_data:
 26375                           	opt stack 28
 26376                           
 26377                           ;incstack = 0
 26378                           ;bootloader_get_rec_data@index stored from wreg
 26379  008048  6E01               	movwf	bootloader_get_rec_data@index,c
 26380                           
 26381                           ;bootloader.c: 495: return hex_file_entry.data[index];
 26382  00804A  5001               	movf	bootloader_get_rec_data@index,w,c
 26383  00804C  0D01               	mullw	1
 26384  00804E  0EBF               	movlw	low (_hex_file_entry+5)
 26385  008050  24F3               	addwf	prodl,w,c
 26386  008052  6ED9               	movwf	fsr2l,c
 26387  008054  0E01               	movlw	high (_hex_file_entry+5)
 26388  008056  20F4               	addwfc	prodh,w,c
 26389  008058  6EDA               	movwf	fsr2h,c
 26390  00805A  50DF               	movf	indf2,w,c
 26391  00805C  0012               	return	
 26392  00805E                     __end_of_bootloader_get_rec_data:
 26393                           	opt stack 0
 26394                           tosu	equ	0xFFF
 26395                           tosh	equ	0xFFE
 26396                           tosl	equ	0xFFD
 26397                           pclath	equ	0xFFA
 26398                           tblptru	equ	0xFF8
 26399                           tblptrh	equ	0xFF7
 26400                           tblptrl	equ	0xFF6
 26401                           tablat	equ	0xFF5
 26402                           prodh	equ	0xFF4
 26403                           prodl	equ	0xFF3
 26404                           intcon	equ	0xFF2
 26405                           intcon2	equ	0xFF1
 26406                           intcon3	equ	0xFF0
 26407                           indf0	equ	0xFEF
 26408                           postinc0	equ	0xFEE
 26409                           fsr0h	equ	0xFEA
 26410                           fsr0l	equ	0xFE9
 26411                           wreg	equ	0xFE8
 26412                           indf1	equ	0xFE7
 26413                           postdec1	equ	0xFE5
 26414                           plusw1	equ	0xFE3
 26415                           fsr1h	equ	0xFE2
 26416                           fsr1l	equ	0xFE1
 26417                           indf2	equ	0xFDF
 26418                           postinc2	equ	0xFDE
 26419                           postdec2	equ	0xFDD
 26420                           plusw2	equ	0xFDB
 26421                           fsr2h	equ	0xFDA
 26422                           fsr2l	equ	0xFD9
 26423                           status	equ	0xFD8
 26424                           
 26425 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 26426 ;; Defined at:
 26427 ;;		line 503 in file "bootloader.c"
 26428 ;; Parameters:    Size  Location     Type
 26429 ;;		None
 26430 ;; Auto vars:     Size  Location     Type
 26431 ;;		None
 26432 ;; Return value:  Size  Location     Type
 26433 ;;                  1    wreg      unsigned char 
 26434 ;; Registers used:
 26435 ;;		wreg, status,2
 26436 ;; Tracked objects:
 26437 ;;		On entry : 0/0
 26438 ;;		On exit  : 0/0
 26439 ;;		Unchanged: 0/0
 26440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26445 ;;Total ram usage:        0 bytes
 26446 ;; Hardware stack levels used:    1
 26447 ;; This function calls:
 26448 ;;		Nothing
 26449 ;; This function is called by:
 26450 ;;		__fill_buffer_get_bootloader_details
 26451 ;; This function uses a non-reentrant model
 26452 ;;
 26453                           
 26454                           	psect	text124
 26455  0081E6                     __ptext124:
 26456                           	opt stack 0
 26457  0081E6                     _bootloader_get_rec_checksumCheck:
 26458                           	opt stack 28
 26459                           
 26460                           ;bootloader.c: 505: return hex_file_entry.checksumCheck;
 26461                           
 26462                           ;incstack = 0
 26463  0081E6  0101               	movlb	1	; () banked
 26464  0081E8  51D0               	movf	(_hex_file_entry+22)& (0+255),w,b
 26465  0081EA  0012               	return	
 26466  0081EC                     __end_of_bootloader_get_rec_checksumCheck:
 26467                           	opt stack 0
 26468                           tosu	equ	0xFFF
 26469                           tosh	equ	0xFFE
 26470                           tosl	equ	0xFFD
 26471                           pclath	equ	0xFFA
 26472                           tblptru	equ	0xFF8
 26473                           tblptrh	equ	0xFF7
 26474                           tblptrl	equ	0xFF6
 26475                           tablat	equ	0xFF5
 26476                           prodh	equ	0xFF4
 26477                           prodl	equ	0xFF3
 26478                           intcon	equ	0xFF2
 26479                           intcon2	equ	0xFF1
 26480                           intcon3	equ	0xFF0
 26481                           indf0	equ	0xFEF
 26482                           postinc0	equ	0xFEE
 26483                           fsr0h	equ	0xFEA
 26484                           fsr0l	equ	0xFE9
 26485                           wreg	equ	0xFE8
 26486                           indf1	equ	0xFE7
 26487                           postdec1	equ	0xFE5
 26488                           plusw1	equ	0xFE3
 26489                           fsr1h	equ	0xFE2
 26490                           fsr1l	equ	0xFE1
 26491                           indf2	equ	0xFDF
 26492                           postinc2	equ	0xFDE
 26493                           postdec2	equ	0xFDD
 26494                           plusw2	equ	0xFDB
 26495                           fsr2h	equ	0xFDA
 26496                           fsr2l	equ	0xFD9
 26497                           status	equ	0xFD8
 26498                           
 26499 ;; *************** function _bootloader_get_rec_checksum *****************
 26500 ;; Defined at:
 26501 ;;		line 498 in file "bootloader.c"
 26502 ;; Parameters:    Size  Location     Type
 26503 ;;		None
 26504 ;; Auto vars:     Size  Location     Type
 26505 ;;		None
 26506 ;; Return value:  Size  Location     Type
 26507 ;;                  1    wreg      unsigned char 
 26508 ;; Registers used:
 26509 ;;		wreg, status,2
 26510 ;; Tracked objects:
 26511 ;;		On entry : 0/0
 26512 ;;		On exit  : 0/0
 26513 ;;		Unchanged: 0/0
 26514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26519 ;;Total ram usage:        0 bytes
 26520 ;; Hardware stack levels used:    1
 26521 ;; This function calls:
 26522 ;;		Nothing
 26523 ;; This function is called by:
 26524 ;;		__fill_buffer_get_bootloader_details
 26525 ;; This function uses a non-reentrant model
 26526 ;;
 26527                           
 26528                           	psect	text125
 26529  0081EC                     __ptext125:
 26530                           	opt stack 0
 26531  0081EC                     _bootloader_get_rec_checksum:
 26532                           	opt stack 28
 26533                           
 26534                           ;bootloader.c: 500: return hex_file_entry.checksum;
 26535                           
 26536                           ; BSR set to: 1
 26537                           ;incstack = 0
 26538  0081EC  0101               	movlb	1	; () banked
 26539  0081EE  51CF               	movf	(_hex_file_entry+21)& (0+255),w,b
 26540  0081F0  0012               	return	
 26541  0081F2                     __end_of_bootloader_get_rec_checksum:
 26542                           	opt stack 0
 26543                           tosu	equ	0xFFF
 26544                           tosh	equ	0xFFE
 26545                           tosl	equ	0xFFD
 26546                           pclath	equ	0xFFA
 26547                           tblptru	equ	0xFF8
 26548                           tblptrh	equ	0xFF7
 26549                           tblptrl	equ	0xFF6
 26550                           tablat	equ	0xFF5
 26551                           prodh	equ	0xFF4
 26552                           prodl	equ	0xFF3
 26553                           intcon	equ	0xFF2
 26554                           intcon2	equ	0xFF1
 26555                           intcon3	equ	0xFF0
 26556                           indf0	equ	0xFEF
 26557                           postinc0	equ	0xFEE
 26558                           fsr0h	equ	0xFEA
 26559                           fsr0l	equ	0xFE9
 26560                           wreg	equ	0xFE8
 26561                           indf1	equ	0xFE7
 26562                           postdec1	equ	0xFE5
 26563                           plusw1	equ	0xFE3
 26564                           fsr1h	equ	0xFE2
 26565                           fsr1l	equ	0xFE1
 26566                           indf2	equ	0xFDF
 26567                           postinc2	equ	0xFDE
 26568                           postdec2	equ	0xFDD
 26569                           plusw2	equ	0xFDB
 26570                           fsr2h	equ	0xFDA
 26571                           fsr2l	equ	0xFD9
 26572                           status	equ	0xFD8
 26573                           
 26574 ;; *************** function __fill_buffer_find_file *****************
 26575 ;; Defined at:
 26576 ;;		line 347 in file "api.c"
 26577 ;; Parameters:    Size  Location     Type
 26578 ;;  inBuffer        2   67[COMRAM] PTR unsigned char 
 26579 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 26580 ;;  outBuffer       2   69[COMRAM] PTR unsigned char 
 26581 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 26582 ;; Auto vars:     Size  Location     Type
 26583 ;;  cntr            1   75[COMRAM] unsigned char 
 26584 ;; Return value:  Size  Location     Type
 26585 ;;                  1    wreg      void 
 26586 ;; Registers used:
 26587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26588 ;; Tracked objects:
 26589 ;;		On entry : 0/0
 26590 ;;		On exit  : 0/0
 26591 ;;		Unchanged: 0/0
 26592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26595 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26596 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26597 ;;Total ram usage:        9 bytes
 26598 ;; Hardware stack levels used:    1
 26599 ;; Hardware stack levels required when called:    6
 26600 ;; This function calls:
 26601 ;;		_fat_find_file
 26602 ;; This function is called by:
 26603 ;;		_api_prepare
 26604 ;; This function uses a non-reentrant model
 26605 ;;
 26606                           
 26607                           	psect	text126
 26608  005D44                     __ptext126:
 26609                           	opt stack 0
 26610  005D44                     __fill_buffer_find_file:
 26611                           	opt stack 23
 26612                           
 26613                           ;api.c: 349: uint8_t cntr;;api.c: 352: outBuffer[0] = DATAREQUEST_FIND_FILE;
 26614                           
 26615                           ; BSR set to: 1
 26616                           ;incstack = 0
 26617  005D44  C046  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 26618  005D48  C047  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 26619  005D4C  0E81               	movlw	129
 26620  005D4E  6EDF               	movwf	indf2,c
 26621                           
 26622                           ;api.c: 355: outBuffer[1] = 0xC125 >> 8;
 26623  005D50  EE20 F001          	lfsr	2,1
 26624  005D54  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 26625  005D56  26D9               	addwf	fsr2l,f,c
 26626  005D58  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26627  005D5A  22DA               	addwfc	fsr2h,f,c
 26628  005D5C  0EC1               	movlw	193
 26629  005D5E  6EDF               	movwf	indf2,c
 26630                           
 26631                           ;api.c: 356: outBuffer[2] = (uint8_t) 0xC125;
 26632  005D60  EE20 F002          	lfsr	2,2
 26633  005D64  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 26634  005D66  26D9               	addwf	fsr2l,f,c
 26635  005D68  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26636  005D6A  22DA               	addwfc	fsr2h,f,c
 26637  005D6C  0E25               	movlw	37
 26638  005D6E  6EDF               	movwf	indf2,c
 26639                           
 26640                           ;api.c: 359: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 26641  005D70  0E01               	movlw	1
 26642  005D72  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26643  005D74  6E30               	movwf	fat_find_file@name,c
 26644  005D76  0E00               	movlw	0
 26645  005D78  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26646  005D7A  6E31               	movwf	fat_find_file@name+1,c
 26647  005D7C  0E09               	movlw	9
 26648  005D7E  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26649  005D80  6E32               	movwf	fat_find_file@extension,c
 26650  005D82  0E00               	movlw	0
 26651  005D84  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26652  005D86  6E33               	movwf	fat_find_file@extension+1,c
 26653  005D88  EC98  F02B         	call	_fat_find_file	;wreg free
 26654  005D8C  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 26655  005D8E  EE20 F003          	lfsr	2,3
 26656  005D92  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 26657  005D94  26D9               	addwf	fsr2l,f,c
 26658  005D96  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26659  005D98  22DA               	addwfc	fsr2h,f,c
 26660  005D9A  C048  FFDF         	movff	??__fill_buffer_find_file,indf2
 26661                           
 26662                           ;api.c: 362: for(cntr=0; cntr<11; ++cntr)
 26663  005D9E  0E00               	movlw	0
 26664  005DA0  6E4C               	movwf	__fill_buffer_find_file@cntr,c
 26665  005DA2                     l13541:
 26666  005DA2  0E0A               	movlw	10
 26667  005DA4  644C               	cpfsgt	__fill_buffer_find_file@cntr,c
 26668  005DA6  D001               	goto	l2636
 26669  005DA8  0012               	return	
 26670  005DAA                     l2636:
 26671                           
 26672                           ;api.c: 363: {;api.c: 364: outBuffer[cntr+12] = inBuffer[cntr+1];
 26673  005DAA  504C               	movf	__fill_buffer_find_file@cntr,w,c
 26674  005DAC  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 26675  005DAE  6A49               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 26676  005DB0  0E01               	movlw	1
 26677  005DB2  2648               	addwf	??__fill_buffer_find_file,f,c
 26678  005DB4  0E00               	movlw	0
 26679  005DB6  2249               	addwfc	??__fill_buffer_find_file+1,f,c
 26680  005DB8  5048               	movf	??__fill_buffer_find_file,w,c
 26681  005DBA  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26682  005DBC  6ED9               	movwf	fsr2l,c
 26683  005DBE  5049               	movf	??__fill_buffer_find_file+1,w,c
 26684  005DC0  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26685  005DC2  6EDA               	movwf	fsr2h,c
 26686  005DC4  504C               	movf	__fill_buffer_find_file@cntr,w,c
 26687  005DC6  6E4A               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 26688  005DC8  6A4B               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 26689  005DCA  0E0C               	movlw	12
 26690  005DCC  264A               	addwf	??__fill_buffer_find_file+2,f,c
 26691  005DCE  0E00               	movlw	0
 26692  005DD0  224B               	addwfc	??__fill_buffer_find_file+3,f,c
 26693  005DD2  504A               	movf	??__fill_buffer_find_file+2,w,c
 26694  005DD4  2446               	addwf	__fill_buffer_find_file@outBuffer,w,c
 26695  005DD6  6EE1               	movwf	fsr1l,c
 26696  005DD8  504B               	movf	??__fill_buffer_find_file+3,w,c
 26697  005DDA  2047               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 26698  005DDC  6EE2               	movwf	fsr1h,c
 26699  005DDE  CFDF FFE7          	movff	indf2,indf1
 26700  005DE2  2A4C               	incf	__fill_buffer_find_file@cntr,f,c
 26701  005DE4  D7DE               	goto	l13541
 26702  005DE6                     __end_of__fill_buffer_find_file:
 26703                           	opt stack 0
 26704                           tosu	equ	0xFFF
 26705                           tosh	equ	0xFFE
 26706                           tosl	equ	0xFFD
 26707                           pclath	equ	0xFFA
 26708                           tblptru	equ	0xFF8
 26709                           tblptrh	equ	0xFF7
 26710                           tblptrl	equ	0xFF6
 26711                           tablat	equ	0xFF5
 26712                           prodh	equ	0xFF4
 26713                           prodl	equ	0xFF3
 26714                           intcon	equ	0xFF2
 26715                           intcon2	equ	0xFF1
 26716                           intcon3	equ	0xFF0
 26717                           indf0	equ	0xFEF
 26718                           postinc0	equ	0xFEE
 26719                           fsr0h	equ	0xFEA
 26720                           fsr0l	equ	0xFE9
 26721                           wreg	equ	0xFE8
 26722                           indf1	equ	0xFE7
 26723                           postdec1	equ	0xFE5
 26724                           plusw1	equ	0xFE3
 26725                           fsr1h	equ	0xFE2
 26726                           fsr1l	equ	0xFE1
 26727                           indf2	equ	0xFDF
 26728                           postinc2	equ	0xFDE
 26729                           postdec2	equ	0xFDD
 26730                           plusw2	equ	0xFDB
 26731                           fsr2h	equ	0xFDA
 26732                           fsr2l	equ	0xFD9
 26733                           status	equ	0xFD8
 26734                           
 26735 ;; *************** function _api_parse *****************
 26736 ;; Defined at:
 26737 ;;		line 124 in file "api.c"
 26738 ;; Parameters:    Size  Location     Type
 26739 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 26740 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 26741 ;;  receivedData    1   53[BANK0 ] unsigned char 
 26742 ;; Auto vars:     Size  Location     Type
 26743 ;;  idx             1   87[COMRAM] unsigned char 
 26744 ;; Return value:  Size  Location     Type
 26745 ;;                  1    wreg      void 
 26746 ;; Registers used:
 26747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26748 ;; Tracked objects:
 26749 ;;		On entry : 0/0
 26750 ;;		On exit  : 0/0
 26751 ;;		Unchanged: 0/0
 26752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26753 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26756 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26757 ;;Total ram usage:        6 bytes
 26758 ;; Hardware stack levels used:    1
 26759 ;; Hardware stack levels required when called:   10
 26760 ;; This function calls:
 26761 ;;		__parse_command_long
 26762 ;;		__parse_command_short
 26763 ;; This function is called by:
 26764 ;;		_main
 26765 ;;		_APP_DeviceCustomHIDTasks
 26766 ;; This function uses a non-reentrant model
 26767 ;;
 26768                           
 26769                           	psect	text127
 26770  0050EA                     __ptext127:
 26771                           	opt stack 0
 26772  0050EA                     _api_parse:
 26773                           	opt stack 20
 26774                           
 26775                           ;api.c: 128: uint8_t idx;;api.c: 130: if(inBuffer[0]>0x7F)
 26776                           
 26777                           ;incstack = 0
 26778  0050EA  C093  FFD9         	movff	api_parse@inBuffer,fsr2l
 26779  0050EE  C094  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26780  0050F2  0E7F               	movlw	127
 26781  0050F4  64DF               	cpfsgt	indf2,c
 26782  0050F6  D001               	goto	l2594
 26783  0050F8  0012               	return	
 26784  0050FA                     l2594:
 26785                           
 26786                           ;api.c: 135: };api.c: 137: idx = 1;
 26787  0050FA  0E01               	movlw	1
 26788  0050FC  6E58               	movwf	api_parse@idx,c
 26789                           
 26790                           ;api.c: 138: while(idx<receivedDataLength)
 26791  0050FE  D058               	goto	l2601
 26792  005100                     
 26793                           ;api.c: 139: {;api.c: 141: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 26794  005100  5058               	movf	api_parse@idx,w,c
 26795  005102  0D01               	mullw	1
 26796  005104  50F3               	movf	prodl,w,c
 26797  005106  0100               	movlb	0	; () banked
 26798  005108  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 26799  00510A  6ED9               	movwf	fsr2l,c
 26800  00510C  50F4               	movf	prodh,w,c
 26801  00510E  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26802  005110  6EDA               	movwf	fsr2h,c
 26803  005112  0E99               	movlw	153
 26804  005114  18DE               	xorwf	postinc2,w,c
 26805  005116  B4D8               	btfsc	status,2,c
 26806  005118  0012               	return	
 26807  00511A  D02E               	goto	l2599
 26808  00511C                     
 26809                           ; BSR set to: 0
 26810                           ;api.c: 149: _parse_command_short(inBuffer[idx]);
 26811                           
 26812                           ; BSR set to: 0
 26813  00511C  5058               	movf	api_parse@idx,w,c
 26814  00511E  0D01               	mullw	1
 26815  005120  50F3               	movf	prodl,w,c
 26816  005122  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 26817  005124  6ED9               	movwf	fsr2l,c
 26818  005126  50F4               	movf	prodh,w,c
 26819  005128  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26820  00512A  6EDA               	movwf	fsr2h,c
 26821  00512C  50DF               	movf	indf2,w,c
 26822  00512E  EC52  F02C         	call	__parse_command_short
 26823  005132  D00C               	goto	l14073
 26824  005134                     
 26825                           ;api.c: 154: _parse_command_short(inBuffer[idx]);
 26826  005134  5058               	movf	api_parse@idx,w,c
 26827  005136  0D01               	mullw	1
 26828  005138  50F3               	movf	prodl,w,c
 26829  00513A  0100               	movlb	0	; () banked
 26830  00513C  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 26831  00513E  6ED9               	movwf	fsr2l,c
 26832  005140  50F4               	movf	prodh,w,c
 26833  005142  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26834  005144  6EDA               	movwf	fsr2h,c
 26835  005146  50DF               	movf	indf2,w,c
 26836  005148  EC52  F02C         	call	__parse_command_short
 26837  00514C                     l14073:
 26838                           
 26839                           ;api.c: 155: ++idx;
 26840  00514C  2A58               	incf	api_parse@idx,f,c
 26841                           
 26842                           ;api.c: 156: break;
 26843  00514E  D030               	goto	l2601
 26844  005150                     
 26845                           ;api.c: 159: idx += _parse_command_long(inBuffer[idx]);
 26846  005150  5058               	movf	api_parse@idx,w,c
 26847  005152  0D01               	mullw	1
 26848  005154  50F3               	movf	prodl,w,c
 26849  005156  0100               	movlb	0	; () banked
 26850  005158  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 26851  00515A  6ED9               	movwf	fsr2l,c
 26852  00515C  50F4               	movf	prodh,w,c
 26853  00515E  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26854  005160  6EDA               	movwf	fsr2h,c
 26855  005162  50DF               	movf	indf2,w,c
 26856  005164  6E56               	movwf	??_api_parse& (0+255),c
 26857  005166  6A57               	clrf	(??_api_parse+1)& (0+255),c
 26858  005168  C056  F053         	movff	??_api_parse,__parse_command_long@data
 26859  00516C  C057  F054         	movff	??_api_parse+1,__parse_command_long@data+1
 26860  005170  EC9A  F031         	call	__parse_command_long	;wreg free
 26861  005174  2658               	addwf	api_parse@idx,f,c
 26862                           
 26863                           ;api.c: 160: break;
 26864  005176  D01C               	goto	l2601
 26865  005178                     l2599:
 26866  005178  5058               	movf	api_parse@idx,w,c
 26867  00517A  0D01               	mullw	1
 26868  00517C  50F3               	movf	prodl,w,c
 26869  00517E  0100               	movlb	0	; () banked
 26870  005180  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 26871  005182  6ED9               	movwf	fsr2l,c
 26872  005184  50F4               	movf	prodh,w,c
 26873  005186  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26874  005188  6EDA               	movwf	fsr2h,c
 26875  00518A  50DF               	movf	indf2,w,c
 26876  00518C  0BF0               	andlw	240
 26877  00518E  6E56               	movwf	??_api_parse& (0+255),c
 26878  005190  6A57               	clrf	(??_api_parse+1)& (0+255),c
 26879                           
 26880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26881                           ; Switch size 1, requested type "space"
 26882                           ; Number of cases is 1, Range of values is 0 to 0
 26883                           ; switch strategies available:
 26884                           ; Name         Instructions Cycles
 26885                           ; simple_byte            4     3 (average)
 26886                           ;	Chosen strategy is simple_byte
 26887  005192  5057               	movf	??_api_parse+1,w,c
 26888  005194  0A00               	xorlw	0	; case 0
 26889  005196  A4D8               	btfss	status,2,c
 26890  005198  0012               	return	
 26891                           
 26892                           ; BSR set to: 0
 26893                           ; Switch size 1, requested type "space"
 26894                           ; Number of cases is 3, Range of values is 32 to 80
 26895                           ; switch strategies available:
 26896                           ; Name         Instructions Cycles
 26897                           ; simple_byte           10     6 (average)
 26898                           ;	Chosen strategy is simple_byte
 26899  00519A  5056               	movf	??_api_parse,w,c
 26900  00519C  0A20               	xorlw	32	; case 32
 26901  00519E  B4D8               	btfsc	status,2,c
 26902  0051A0  D7BD               	goto	l2600
 26903  0051A2  0A10               	xorlw	16	; case 48
 26904  0051A4  B4D8               	btfsc	status,2,c
 26905  0051A6  D7C6               	goto	l2602
 26906  0051A8  0A60               	xorlw	96	; case 80
 26907  0051AA  A4D8               	btfss	status,2,c
 26908  0051AC  0012               	return	
 26909  0051AE  D7D0               	goto	l2603
 26910  0051B0                     l2601:
 26911                           
 26912                           ; BSR set to: 0
 26913                           
 26914                           ; BSR set to: 0
 26915  0051B0  0100               	movlb	0	; () banked
 26916  0051B2  5195               	movf	api_parse@receivedDataLength& (0+255),w,b
 26917  0051B4  5C58               	subwf	api_parse@idx,w,c
 26918  0051B6  B0D8               	btfsc	status,0,c
 26919  0051B8  0012               	return	
 26920  0051BA  D7A2               	goto	l2597
 26921  0051BC                     __end_of_api_parse:
 26922                           	opt stack 0
 26923                           tosu	equ	0xFFF
 26924                           tosh	equ	0xFFE
 26925                           tosl	equ	0xFFD
 26926                           pclath	equ	0xFFA
 26927                           tblptru	equ	0xFF8
 26928                           tblptrh	equ	0xFF7
 26929                           tblptrl	equ	0xFF6
 26930                           tablat	equ	0xFF5
 26931                           prodh	equ	0xFF4
 26932                           prodl	equ	0xFF3
 26933                           intcon	equ	0xFF2
 26934                           intcon2	equ	0xFF1
 26935                           intcon3	equ	0xFF0
 26936                           indf0	equ	0xFEF
 26937                           postinc0	equ	0xFEE
 26938                           fsr0h	equ	0xFEA
 26939                           fsr0l	equ	0xFE9
 26940                           wreg	equ	0xFE8
 26941                           indf1	equ	0xFE7
 26942                           postdec1	equ	0xFE5
 26943                           plusw1	equ	0xFE3
 26944                           fsr1h	equ	0xFE2
 26945                           fsr1l	equ	0xFE1
 26946                           indf2	equ	0xFDF
 26947                           postinc2	equ	0xFDE
 26948                           postdec2	equ	0xFDD
 26949                           plusw2	equ	0xFDB
 26950                           fsr2h	equ	0xFDA
 26951                           fsr2l	equ	0xFD9
 26952                           status	equ	0xFD8
 26953                           
 26954 ;; *************** function __parse_command_short *****************
 26955 ;; Defined at:
 26956 ;;		line 416 in file "api.c"
 26957 ;; Parameters:    Size  Location     Type
 26958 ;;  cmd             1    wreg     unsigned char 
 26959 ;; Auto vars:     Size  Location     Type
 26960 ;;  cmd             1   43[COMRAM] unsigned char 
 26961 ;; Return value:  Size  Location     Type
 26962 ;;                  1    wreg      void 
 26963 ;; Registers used:
 26964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26965 ;; Tracked objects:
 26966 ;;		On entry : 0/0
 26967 ;;		On exit  : 0/0
 26968 ;;		Unchanged: 0/0
 26969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26974 ;;Total ram usage:        1 bytes
 26975 ;; Hardware stack levels used:    1
 26976 ;; Hardware stack levels required when called:    8
 26977 ;; This function calls:
 26978 ;;		_i2c_eeprom_writeByte
 26979 ;;		_reboot
 26980 ;;		_system_delay_ms
 26981 ;; This function is called by:
 26982 ;;		_api_parse
 26983 ;; This function uses a non-reentrant model
 26984 ;;
 26985                           
 26986                           	psect	text128
 26987  0058A4                     __ptext128:
 26988                           	opt stack 0
 26989  0058A4                     __parse_command_short:
 26990                           	opt stack 21
 26991                           
 26992                           ;incstack = 0
 26993                           ;__parse_command_short@cmd stored from wreg
 26994  0058A4  6E2C               	movwf	__parse_command_short@cmd,c
 26995                           
 26996                           ;api.c: 418: switch(cmd)
 26997  0058A6  D041               	goto	l2645
 26998  0058A8                     
 26999                           ;api.c: 421: i2c_eeprom_writeByte(0x100, 0x00);
 27000  0058A8  0E01               	movlw	1
 27001  0058AA  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 27002  0058AC  0E00               	movlw	0
 27003  0058AE  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 27004  0058B0  0E00               	movlw	0
 27005  0058B2  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 27006  0058B4  EC7E  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 27007                           
 27008                           ;api.c: 422: system_delay_ms(10);
 27009  0058B8  0E0A               	movlw	10
 27010  0058BA  EC4B  F03F         	call	_system_delay_ms
 27011                           
 27012                           ;api.c: 423: reboot();
 27013  0058BE  EC0B  F040         	call	_reboot	;wreg free
 27014                           
 27015                           ;api.c: 424: break;
 27016  0058C2  0012               	return	
 27017  0058C4                     
 27018                           ;api.c: 427: i2c_eeprom_writeByte(0x100, 0x94);
 27019  0058C4  0E01               	movlw	1
 27020  0058C6  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 27021  0058C8  0E00               	movlw	0
 27022  0058CA  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 27023  0058CC  0E94               	movlw	148
 27024  0058CE  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 27025  0058D0  EC7E  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 27026                           
 27027                           ;api.c: 428: system_delay_ms(10);
 27028  0058D4  0E0A               	movlw	10
 27029  0058D6  EC4B  F03F         	call	_system_delay_ms
 27030                           
 27031                           ;api.c: 429: reboot();
 27032  0058DA  EC0B  F040         	call	_reboot	;wreg free
 27033                           
 27034                           ;api.c: 430: break;
 27035  0058DE  0012               	return	
 27036  0058E0                     
 27037                           ;api.c: 433: i2c_eeprom_writeByte(0x100, 0x78);
 27038  0058E0  0E01               	movlw	1
 27039  0058E2  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 27040  0058E4  0E00               	movlw	0
 27041  0058E6  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 27042  0058E8  0E78               	movlw	120
 27043  0058EA  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 27044  0058EC  EC7E  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 27045                           
 27046                           ;api.c: 434: system_delay_ms(10);
 27047  0058F0  0E0A               	movlw	10
 27048  0058F2  EC4B  F03F         	call	_system_delay_ms
 27049                           
 27050                           ;api.c: 435: reboot();
 27051  0058F6  EC0B  F040         	call	_reboot	;wreg free
 27052                           
 27053                           ;api.c: 436: break;
 27054  0058FA  0012               	return	
 27055  0058FC                     
 27056                           ;api.c: 440: i2c_eeprom_writeByte(0x100, 0x78);
 27057  0058FC  0E01               	movlw	1
 27058  0058FE  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 27059  005900  0E00               	movlw	0
 27060  005902  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 27061  005904  0E78               	movlw	120
 27062  005906  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 27063  005908  EC7E  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 27064                           
 27065                           ;api.c: 441: system_delay_ms(10);
 27066  00590C  0E0A               	movlw	10
 27067  00590E  EC4B  F03F         	call	_system_delay_ms
 27068                           
 27069                           ;api.c: 442: reboot();
 27070  005912  EC0B  F040         	call	_reboot	;wreg free
 27071                           
 27072                           ;api.c: 443: break;
 27073  005916  0012               	return	
 27074  005918                     
 27075                           ;api.c: 446: --os.encoderCount;
 27076  005918  0100               	movlb	0	; () banked
 27077  00591A  07B9               	decf	_os& (0+255),f,b	;volatile
 27078                           
 27079                           ;api.c: 447: break;
 27080  00591C  0012               	return	
 27081  00591E                     
 27082                           ;api.c: 450: ++os.encoderCount;
 27083                           
 27084                           ; BSR set to: 0
 27085  00591E  0100               	movlb	0	; () banked
 27086  005920  2BB9               	incf	_os& (0+255),f,b	;volatile
 27087                           
 27088                           ;api.c: 451: break;
 27089  005922  0012               	return	
 27090  005924                     
 27091                           ;api.c: 454: ++os.buttonCount;
 27092                           
 27093                           ; BSR set to: 0
 27094  005924  0100               	movlb	0	; () banked
 27095  005926  2BBA               	incf	(_os+1)& (0+255),f,b	;volatile
 27096                           
 27097                           ; BSR set to: 0
 27098                           ;api.c: 456: }
 27099                           
 27100                           ;api.c: 455: break;
 27101  005928  0012               	return	
 27102  00592A                     l2645:
 27103                           
 27104                           ; BSR set to: 0
 27105  00592A  502C               	movf	__parse_command_short@cmd,w,c
 27106                           
 27107                           ; Switch size 1, requested type "space"
 27108                           ; Number of cases is 7, Range of values is 32 to 62
 27109                           ; switch strategies available:
 27110                           ; Name         Instructions Cycles
 27111                           ; simple_byte           22    12 (average)
 27112                           ;	Chosen strategy is simple_byte
 27113  00592C  0A20               	xorlw	32	; case 32
 27114  00592E  B4D8               	btfsc	status,2,c
 27115  005930  D7BB               	goto	l2646
 27116  005932  0A01               	xorlw	1	; case 33
 27117  005934  B4D8               	btfsc	status,2,c
 27118  005936  D7C6               	goto	l2648
 27119  005938  0A03               	xorlw	3	; case 34
 27120  00593A  B4D8               	btfsc	status,2,c
 27121  00593C  D7D1               	goto	l2649
 27122  00593E  0A01               	xorlw	1	; case 35
 27123  005940  B4D8               	btfsc	status,2,c
 27124  005942  D7DC               	goto	l2650
 27125  005944  0A1F               	xorlw	31	; case 60
 27126  005946  B4D8               	btfsc	status,2,c
 27127  005948  D7E7               	goto	l2651
 27128  00594A  0A01               	xorlw	1	; case 61
 27129  00594C  B4D8               	btfsc	status,2,c
 27130  00594E  D7E7               	goto	l2652
 27131  005950  0A03               	xorlw	3	; case 62
 27132  005952  A4D8               	btfss	status,2,c
 27133  005954  0012               	return	
 27134  005956  D7E6               	goto	l2653
 27135  005958                     __end_of__parse_command_short:
 27136                           	opt stack 0
 27137                           tosu	equ	0xFFF
 27138                           tosh	equ	0xFFE
 27139                           tosl	equ	0xFFD
 27140                           pclath	equ	0xFFA
 27141                           tblptru	equ	0xFF8
 27142                           tblptrh	equ	0xFF7
 27143                           tblptrl	equ	0xFF6
 27144                           tablat	equ	0xFF5
 27145                           prodh	equ	0xFF4
 27146                           prodl	equ	0xFF3
 27147                           intcon	equ	0xFF2
 27148                           intcon2	equ	0xFF1
 27149                           intcon3	equ	0xFF0
 27150                           indf0	equ	0xFEF
 27151                           postinc0	equ	0xFEE
 27152                           fsr0h	equ	0xFEA
 27153                           fsr0l	equ	0xFE9
 27154                           wreg	equ	0xFE8
 27155                           indf1	equ	0xFE7
 27156                           postdec1	equ	0xFE5
 27157                           plusw1	equ	0xFE3
 27158                           fsr1h	equ	0xFE2
 27159                           fsr1l	equ	0xFE1
 27160                           indf2	equ	0xFDF
 27161                           postinc2	equ	0xFDE
 27162                           postdec2	equ	0xFDD
 27163                           plusw2	equ	0xFDB
 27164                           fsr2h	equ	0xFDA
 27165                           fsr2l	equ	0xFD9
 27166                           status	equ	0xFD8
 27167                           
 27168 ;; *************** function _system_delay_ms *****************
 27169 ;; Defined at:
 27170 ;;		line 63 in file "os.c"
 27171 ;; Parameters:    Size  Location     Type
 27172 ;;  ms              1    wreg     unsigned char 
 27173 ;; Auto vars:     Size  Location     Type
 27174 ;;  ms              1    1[COMRAM] unsigned char 
 27175 ;;  cntr            1    2[COMRAM] unsigned char 
 27176 ;; Return value:  Size  Location     Type
 27177 ;;                  1    wreg      void 
 27178 ;; Registers used:
 27179 ;;		wreg, status,2, status,0, cstack
 27180 ;; Tracked objects:
 27181 ;;		On entry : 0/0
 27182 ;;		On exit  : 0/0
 27183 ;;		Unchanged: 0/0
 27184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27187 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27188 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27189 ;;Total ram usage:        3 bytes
 27190 ;; Hardware stack levels used:    1
 27191 ;; This function calls:
 27192 ;;		Nothing
 27193 ;; This function is called by:
 27194 ;;		__ui_encoder
 27195 ;;		__parse_command_short
 27196 ;; This function uses a non-reentrant model
 27197 ;;
 27198                           
 27199                           	psect	text129
 27200  007E96                     __ptext129:
 27201                           	opt stack 0
 27202  007E96                     _system_delay_ms:
 27203                           	opt stack 28
 27204                           
 27205                           ;incstack = 0
 27206                           ;system_delay_ms@ms stored from wreg
 27207  007E96  6E02               	movwf	system_delay_ms@ms,c
 27208                           
 27209                           ;os.c: 65: uint8_t cntr;;os.c: 66: for(cntr=0; cntr<ms; ++cntr)
 27210  007E98  0E00               	movlw	0
 27211  007E9A  6E03               	movwf	system_delay_ms@cntr,c
 27212  007E9C  D009               	goto	l1087
 27213  007E9E                     
 27214                           ;os.c: 67: {;os.c: 68: _delay((unsigned long)((6)*(8000000/4000.0)));
 27215  007E9E  0E10               	movlw	16
 27216  007EA0  6E01               	movwf	??_system_delay_ms& (0+255),c
 27217  007EA2  0E94               	movlw	148
 27218  007EA4                     u12157:
 27219  007EA4  2EE8               	decfsz	wreg,f,c
 27220  007EA6  D7FE               	bra	u12157
 27221  007EA8  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 27222  007EAA  D7FC               	bra	u12157
 27223  007EAC  D000               	nop2	
 27224  007EAE  2A03               	incf	system_delay_ms@cntr,f,c
 27225  007EB0                     l1087:
 27226  007EB0  5002               	movf	system_delay_ms@ms,w,c
 27227  007EB2  5C03               	subwf	system_delay_ms@cntr,w,c
 27228  007EB4  B0D8               	btfsc	status,0,c
 27229  007EB6  0012               	return	
 27230  007EB8  D7F2               	goto	l1088
 27231  007EBA                     __end_of_system_delay_ms:
 27232                           	opt stack 0
 27233                           tosu	equ	0xFFF
 27234                           tosh	equ	0xFFE
 27235                           tosl	equ	0xFFD
 27236                           pclath	equ	0xFFA
 27237                           tblptru	equ	0xFF8
 27238                           tblptrh	equ	0xFF7
 27239                           tblptrl	equ	0xFF6
 27240                           tablat	equ	0xFF5
 27241                           prodh	equ	0xFF4
 27242                           prodl	equ	0xFF3
 27243                           intcon	equ	0xFF2
 27244                           intcon2	equ	0xFF1
 27245                           intcon3	equ	0xFF0
 27246                           indf0	equ	0xFEF
 27247                           postinc0	equ	0xFEE
 27248                           fsr0h	equ	0xFEA
 27249                           fsr0l	equ	0xFE9
 27250                           wreg	equ	0xFE8
 27251                           indf1	equ	0xFE7
 27252                           postdec1	equ	0xFE5
 27253                           plusw1	equ	0xFE3
 27254                           fsr1h	equ	0xFE2
 27255                           fsr1l	equ	0xFE1
 27256                           indf2	equ	0xFDF
 27257                           postinc2	equ	0xFDE
 27258                           postdec2	equ	0xFDD
 27259                           plusw2	equ	0xFDB
 27260                           fsr2h	equ	0xFDA
 27261                           fsr2l	equ	0xFD9
 27262                           status	equ	0xFD8
 27263                           
 27264 ;; *************** function _reboot *****************
 27265 ;; Defined at:
 27266 ;;		line 256 in file "os.c"
 27267 ;; Parameters:    Size  Location     Type
 27268 ;;		None
 27269 ;; Auto vars:     Size  Location     Type
 27270 ;;		None
 27271 ;; Return value:  Size  Location     Type
 27272 ;;                  1    wreg      void 
 27273 ;; Registers used:
 27274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27275 ;; Tracked objects:
 27276 ;;		On entry : 0/0
 27277 ;;		On exit  : 0/0
 27278 ;;		Unchanged: 0/0
 27279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27284 ;;Total ram usage:        0 bytes
 27285 ;; Hardware stack levels used:    1
 27286 ;; Hardware stack levels required when called:    7
 27287 ;; This function calls:
 27288 ;;		_display_prepare
 27289 ;;		_display_update
 27290 ;;		_ui_get_status
 27291 ;; This function is called by:
 27292 ;;		__ui_encoder
 27293 ;;		__parse_command_short
 27294 ;; This function uses a non-reentrant model
 27295 ;;
 27296                           
 27297                           	psect	text130
 27298  008016                     __ptext130:
 27299                           	opt stack 0
 27300  008016                     _reboot:
 27301                           	opt stack 21
 27302                           
 27303                           ;os.c: 259: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 27304                           
 27305                           ;incstack = 0
 27306  008016  0E80               	movlw	128
 27307  008018  0100               	movlb	0	; () banked
 27308  00801A  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 27309                           
 27310                           ; BSR set to: 0
 27311                           ;os.c: 260: display_prepare(os.display_mode);
 27312  00801C  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
 27313  00801E  ECDE  F028         	call	_display_prepare
 27314                           
 27315                           ;os.c: 261: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 27316  008022  ECF9  F040         	call	_ui_get_status	;wreg free
 27317  008026  0A05               	xorlw	5
 27318  008028  B4D8               	btfsc	status,2,c
 27319                           
 27320                           ;os.c: 262: {;os.c: 263: display_update();
 27321  00802A  EC32  F036         	call	_display_update	;wreg free
 27322  00802E                     
 27323                           ;os.c: 264: };os.c: 267: while(1);
 27324  00802E  D7FF               	goto	l1114
 27325  008030                     __end_of_reboot:
 27326                           	opt stack 0
 27327                           tosu	equ	0xFFF
 27328                           tosh	equ	0xFFE
 27329                           tosl	equ	0xFFD
 27330                           pclath	equ	0xFFA
 27331                           tblptru	equ	0xFF8
 27332                           tblptrh	equ	0xFF7
 27333                           tblptrl	equ	0xFF6
 27334                           tablat	equ	0xFF5
 27335                           prodh	equ	0xFF4
 27336                           prodl	equ	0xFF3
 27337                           intcon	equ	0xFF2
 27338                           intcon2	equ	0xFF1
 27339                           intcon3	equ	0xFF0
 27340                           indf0	equ	0xFEF
 27341                           postinc0	equ	0xFEE
 27342                           fsr0h	equ	0xFEA
 27343                           fsr0l	equ	0xFE9
 27344                           wreg	equ	0xFE8
 27345                           indf1	equ	0xFE7
 27346                           postdec1	equ	0xFE5
 27347                           plusw1	equ	0xFE3
 27348                           fsr1h	equ	0xFE2
 27349                           fsr1l	equ	0xFE1
 27350                           indf2	equ	0xFDF
 27351                           postinc2	equ	0xFDE
 27352                           postdec2	equ	0xFDD
 27353                           plusw2	equ	0xFDB
 27354                           fsr2h	equ	0xFDA
 27355                           fsr2l	equ	0xFD9
 27356                           status	equ	0xFD8
 27357                           
 27358 ;; *************** function _ui_get_status *****************
 27359 ;; Defined at:
 27360 ;;		line 95 in file "ui.c"
 27361 ;; Parameters:    Size  Location     Type
 27362 ;;		None
 27363 ;; Auto vars:     Size  Location     Type
 27364 ;;		None
 27365 ;; Return value:  Size  Location     Type
 27366 ;;                  1    wreg      enum E7928
 27367 ;; Registers used:
 27368 ;;		wreg, status,2
 27369 ;; Tracked objects:
 27370 ;;		On entry : 0/0
 27371 ;;		On exit  : 0/0
 27372 ;;		Unchanged: 0/0
 27373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27378 ;;Total ram usage:        0 bytes
 27379 ;; Hardware stack levels used:    1
 27380 ;; This function calls:
 27381 ;;		Nothing
 27382 ;; This function is called by:
 27383 ;;		_main
 27384 ;;		_reboot
 27385 ;;		__fill_buffer_get_status
 27386 ;; This function uses a non-reentrant model
 27387 ;;
 27388                           
 27389                           	psect	text131
 27390  0081F2                     __ptext131:
 27391                           	opt stack 0
 27392  0081F2                     _ui_get_status:
 27393                           	opt stack 27
 27394                           
 27395                           ;ui.c: 97: return userInterfaceStatus;
 27396                           
 27397                           ;incstack = 0
 27398  0081F2  0100               	movlb	0	; () banked
 27399  0081F4  51E0               	movf	_userInterfaceStatus& (0+255),w,b
 27400  0081F6  0012               	return	
 27401  0081F8                     __end_of_ui_get_status:
 27402                           	opt stack 0
 27403                           tosu	equ	0xFFF
 27404                           tosh	equ	0xFFE
 27405                           tosl	equ	0xFFD
 27406                           pclath	equ	0xFFA
 27407                           tblptru	equ	0xFF8
 27408                           tblptrh	equ	0xFF7
 27409                           tblptrl	equ	0xFF6
 27410                           tablat	equ	0xFF5
 27411                           prodh	equ	0xFF4
 27412                           prodl	equ	0xFF3
 27413                           intcon	equ	0xFF2
 27414                           intcon2	equ	0xFF1
 27415                           intcon3	equ	0xFF0
 27416                           indf0	equ	0xFEF
 27417                           postinc0	equ	0xFEE
 27418                           fsr0h	equ	0xFEA
 27419                           fsr0l	equ	0xFE9
 27420                           wreg	equ	0xFE8
 27421                           indf1	equ	0xFE7
 27422                           postdec1	equ	0xFE5
 27423                           plusw1	equ	0xFE3
 27424                           fsr1h	equ	0xFE2
 27425                           fsr1l	equ	0xFE1
 27426                           indf2	equ	0xFDF
 27427                           postinc2	equ	0xFDE
 27428                           postdec2	equ	0xFDD
 27429                           plusw2	equ	0xFDB
 27430                           fsr2h	equ	0xFDA
 27431                           fsr2l	equ	0xFD9
 27432                           status	equ	0xFD8
 27433                           
 27434 ;; *************** function _display_update *****************
 27435 ;; Defined at:
 27436 ;;		line 555 in file "display.c"
 27437 ;; Parameters:    Size  Location     Type
 27438 ;;		None
 27439 ;; Auto vars:     Size  Location     Type
 27440 ;;		None
 27441 ;; Return value:  Size  Location     Type
 27442 ;;                  1    wreg      void 
 27443 ;; Registers used:
 27444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27445 ;; Tracked objects:
 27446 ;;		On entry : 0/0
 27447 ;;		On exit  : 0/0
 27448 ;;		Unchanged: 0/0
 27449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27454 ;;Total ram usage:        0 bytes
 27455 ;; Hardware stack levels used:    1
 27456 ;; Hardware stack levels required when called:    4
 27457 ;; This function calls:
 27458 ;;		_i2c_display_cursor
 27459 ;;		_i2c_display_write_fixed
 27460 ;; This function is called by:
 27461 ;;		_main
 27462 ;;		_reboot
 27463 ;; This function uses a non-reentrant model
 27464 ;;
 27465                           
 27466                           	psect	text132
 27467  006C64                     __ptext132:
 27468                           	opt stack 0
 27469  006C64                     _display_update:
 27470                           	opt stack 23
 27471                           
 27472                           ;display.c: 557: i2c_display_cursor(0, 0);
 27473                           
 27474                           ; BSR set to: 0
 27475                           ;incstack = 0
 27476  006C64  0E00               	movlw	0
 27477  006C66  6E0E               	movwf	i2c_display_cursor@position,c
 27478  006C68  0E00               	movlw	0
 27479  006C6A  EC5D  F03F         	call	_i2c_display_cursor
 27480                           
 27481                           ;display.c: 558: i2c_display_write_fixed(&display_content[0][0], 20);
 27482  006C6E  0E00               	movlw	low _display_content
 27483  006C70  6E06               	movwf	i2c_display_write_fixed@data,c
 27484  006C72  0E02               	movlw	high _display_content
 27485  006C74  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27486  006C76  0E14               	movlw	20
 27487  006C78  6E08               	movwf	i2c_display_write_fixed@length,c
 27488  006C7A  EC40  F03A         	call	_i2c_display_write_fixed	;wreg free
 27489                           
 27490                           ;display.c: 559: i2c_display_cursor(1, 0);
 27491  006C7E  0E00               	movlw	0
 27492  006C80  6E0E               	movwf	i2c_display_cursor@position,c
 27493  006C82  0E01               	movlw	1
 27494  006C84  EC5D  F03F         	call	_i2c_display_cursor
 27495                           
 27496                           ;display.c: 560: i2c_display_write_fixed(&display_content[1][0], 20);
 27497  006C88  0E14               	movlw	low (_display_content+20)
 27498  006C8A  6E06               	movwf	i2c_display_write_fixed@data,c
 27499  006C8C  0E02               	movlw	high (_display_content+20)
 27500  006C8E  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27501  006C90  0E14               	movlw	20
 27502  006C92  6E08               	movwf	i2c_display_write_fixed@length,c
 27503  006C94  EC40  F03A         	call	_i2c_display_write_fixed	;wreg free
 27504                           
 27505                           ;display.c: 561: i2c_display_cursor(2, 0);
 27506  006C98  0E00               	movlw	0
 27507  006C9A  6E0E               	movwf	i2c_display_cursor@position,c
 27508  006C9C  0E02               	movlw	2
 27509  006C9E  EC5D  F03F         	call	_i2c_display_cursor
 27510                           
 27511                           ;display.c: 562: i2c_display_write_fixed(&display_content[2][0], 20);
 27512  006CA2  0E28               	movlw	low (_display_content+40)
 27513  006CA4  6E06               	movwf	i2c_display_write_fixed@data,c
 27514  006CA6  0E02               	movlw	high (_display_content+40)
 27515  006CA8  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27516  006CAA  0E14               	movlw	20
 27517  006CAC  6E08               	movwf	i2c_display_write_fixed@length,c
 27518  006CAE  EC40  F03A         	call	_i2c_display_write_fixed	;wreg free
 27519                           
 27520                           ;display.c: 563: i2c_display_cursor(3, 0);
 27521  006CB2  0E00               	movlw	0
 27522  006CB4  6E0E               	movwf	i2c_display_cursor@position,c
 27523  006CB6  0E03               	movlw	3
 27524  006CB8  EC5D  F03F         	call	_i2c_display_cursor
 27525                           
 27526                           ;display.c: 564: i2c_display_write_fixed(&display_content[3][0], 20);
 27527  006CBC  0E3C               	movlw	low (_display_content+60)
 27528  006CBE  6E06               	movwf	i2c_display_write_fixed@data,c
 27529  006CC0  0E02               	movlw	high (_display_content+60)
 27530  006CC2  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27531  006CC4  0E14               	movlw	20
 27532  006CC6  6E08               	movwf	i2c_display_write_fixed@length,c
 27533  006CC8  EC40  F03A         	call	_i2c_display_write_fixed	;wreg free
 27534  006CCC  0012               	return		;funcret
 27535  006CCE                     __end_of_display_update:
 27536                           	opt stack 0
 27537                           tosu	equ	0xFFF
 27538                           tosh	equ	0xFFE
 27539                           tosl	equ	0xFFD
 27540                           pclath	equ	0xFFA
 27541                           tblptru	equ	0xFF8
 27542                           tblptrh	equ	0xFF7
 27543                           tblptrl	equ	0xFF6
 27544                           tablat	equ	0xFF5
 27545                           prodh	equ	0xFF4
 27546                           prodl	equ	0xFF3
 27547                           intcon	equ	0xFF2
 27548                           intcon2	equ	0xFF1
 27549                           intcon3	equ	0xFF0
 27550                           indf0	equ	0xFEF
 27551                           postinc0	equ	0xFEE
 27552                           fsr0h	equ	0xFEA
 27553                           fsr0l	equ	0xFE9
 27554                           wreg	equ	0xFE8
 27555                           indf1	equ	0xFE7
 27556                           postdec1	equ	0xFE5
 27557                           plusw1	equ	0xFE3
 27558                           fsr1h	equ	0xFE2
 27559                           fsr1l	equ	0xFE1
 27560                           indf2	equ	0xFDF
 27561                           postinc2	equ	0xFDE
 27562                           postdec2	equ	0xFDD
 27563                           plusw2	equ	0xFDB
 27564                           fsr2h	equ	0xFDA
 27565                           fsr2l	equ	0xFD9
 27566                           status	equ	0xFD8
 27567                           
 27568 ;; *************** function _i2c_display_write_fixed *****************
 27569 ;; Defined at:
 27570 ;;		line 270 in file "i2c.c"
 27571 ;; Parameters:    Size  Location     Type
 27572 ;;  data            2    5[COMRAM] PTR unsigned char 
 27573 ;;		 -> display_content(80), 
 27574 ;;  length          1    7[COMRAM] unsigned char 
 27575 ;; Auto vars:     Size  Location     Type
 27576 ;;  pos             1    8[COMRAM] unsigned char 
 27577 ;; Return value:  Size  Location     Type
 27578 ;;                  1    wreg      void 
 27579 ;; Registers used:
 27580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27581 ;; Tracked objects:
 27582 ;;		On entry : 0/0
 27583 ;;		On exit  : 0/0
 27584 ;;		Unchanged: 0/0
 27585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27586 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27589 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27590 ;;Total ram usage:        4 bytes
 27591 ;; Hardware stack levels used:    1
 27592 ;; Hardware stack levels required when called:    1
 27593 ;; This function calls:
 27594 ;;		__i2c_send
 27595 ;;		__i2c_start
 27596 ;;		__i2c_stop
 27597 ;;		__i2c_wait_idle
 27598 ;;		_i2c_set_frequency
 27599 ;; This function is called by:
 27600 ;;		_display_update
 27601 ;; This function uses a non-reentrant model
 27602 ;;
 27603                           
 27604                           	psect	text133
 27605  007480                     __ptext133:
 27606                           	opt stack 0
 27607  007480                     _i2c_display_write_fixed:
 27608                           	opt stack 25
 27609                           
 27610                           ;i2c.c: 272: uint8_t pos;;i2c.c: 275: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27611                           
 27612                           ;incstack = 0
 27613  007480  0E02               	movlw	2
 27614  007482  ECBF  F03E         	call	_i2c_set_frequency
 27615                           
 27616                           ;i2c.c: 277: _i2c_wait_idle();
 27617  007486  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 27618                           
 27619                           ;i2c.c: 278: _i2c_start();
 27620  00748A  ECE5  F040         	call	__i2c_start	;wreg free
 27621                           
 27622                           ;i2c.c: 279: _i2c_wait_idle();
 27623  00748E  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 27624                           
 27625                           ;i2c.c: 280: _i2c_send(0b01111000);
 27626  007492  0E78               	movlw	120
 27627  007494  ECE9  F040         	call	__i2c_send
 27628                           
 27629                           ;i2c.c: 281: _i2c_wait_idle();
 27630  007498  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 27631                           
 27632                           ;i2c.c: 282: _i2c_send(0b01000000);
 27633  00749C  0E40               	movlw	64
 27634  00749E  ECE9  F040         	call	__i2c_send
 27635                           
 27636                           ;i2c.c: 283: _i2c_wait_idle();
 27637  0074A2  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 27638                           
 27639                           ;i2c.c: 286: for(pos=0; pos<length; ++pos)
 27640  0074A6  0E00               	movlw	0
 27641  0074A8  6E09               	movwf	i2c_display_write_fixed@pos,c
 27642  0074AA  D00E               	goto	l1229
 27643  0074AC                     
 27644                           ;i2c.c: 287: {;i2c.c: 288: _i2c_send(data[pos]);
 27645  0074AC  5009               	movf	i2c_display_write_fixed@pos,w,c
 27646  0074AE  0D01               	mullw	1
 27647  0074B0  50F3               	movf	prodl,w,c
 27648  0074B2  2406               	addwf	i2c_display_write_fixed@data,w,c
 27649  0074B4  6ED9               	movwf	fsr2l,c
 27650  0074B6  50F4               	movf	prodh,w,c
 27651  0074B8  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 27652  0074BA  6EDA               	movwf	fsr2h,c
 27653  0074BC  50DF               	movf	indf2,w,c
 27654  0074BE  ECE9  F040         	call	__i2c_send
 27655                           
 27656                           ;i2c.c: 289: _i2c_wait_idle();
 27657  0074C2  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 27658  0074C6  2A09               	incf	i2c_display_write_fixed@pos,f,c
 27659  0074C8                     l1229:
 27660  0074C8  5008               	movf	i2c_display_write_fixed@length,w,c
 27661  0074CA  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 27662  0074CC  A0D8               	btfss	status,0,c
 27663  0074CE  D7EE               	goto	l1230
 27664                           
 27665                           ;i2c.c: 290: };i2c.c: 292: _i2c_stop();
 27666  0074D0  ECE1  F040         	call	__i2c_stop	;wreg free
 27667  0074D4  0012               	return		;funcret
 27668  0074D6                     __end_of_i2c_display_write_fixed:
 27669                           	opt stack 0
 27670                           tosu	equ	0xFFF
 27671                           tosh	equ	0xFFE
 27672                           tosl	equ	0xFFD
 27673                           pclath	equ	0xFFA
 27674                           tblptru	equ	0xFF8
 27675                           tblptrh	equ	0xFF7
 27676                           tblptrl	equ	0xFF6
 27677                           tablat	equ	0xFF5
 27678                           prodh	equ	0xFF4
 27679                           prodl	equ	0xFF3
 27680                           intcon	equ	0xFF2
 27681                           intcon2	equ	0xFF1
 27682                           intcon3	equ	0xFF0
 27683                           indf0	equ	0xFEF
 27684                           postinc0	equ	0xFEE
 27685                           fsr0h	equ	0xFEA
 27686                           fsr0l	equ	0xFE9
 27687                           wreg	equ	0xFE8
 27688                           indf1	equ	0xFE7
 27689                           postdec1	equ	0xFE5
 27690                           plusw1	equ	0xFE3
 27691                           fsr1h	equ	0xFE2
 27692                           fsr1l	equ	0xFE1
 27693                           indf2	equ	0xFDF
 27694                           postinc2	equ	0xFDE
 27695                           postdec2	equ	0xFDD
 27696                           plusw2	equ	0xFDB
 27697                           fsr2h	equ	0xFDA
 27698                           fsr2l	equ	0xFD9
 27699                           status	equ	0xFD8
 27700                           
 27701 ;; *************** function _i2c_display_cursor *****************
 27702 ;; Defined at:
 27703 ;;		line 230 in file "i2c.c"
 27704 ;; Parameters:    Size  Location     Type
 27705 ;;  line            1    wreg     unsigned char 
 27706 ;;  position        1   13[COMRAM] unsigned char 
 27707 ;; Auto vars:     Size  Location     Type
 27708 ;;  line            1   14[COMRAM] unsigned char 
 27709 ;;  address         1   15[COMRAM] unsigned char 
 27710 ;; Return value:  Size  Location     Type
 27711 ;;                  1    wreg      void 
 27712 ;; Registers used:
 27713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27714 ;; Tracked objects:
 27715 ;;		On entry : 0/0
 27716 ;;		On exit  : 0/0
 27717 ;;		Unchanged: 0/0
 27718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27719 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27722 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27723 ;;Total ram usage:        3 bytes
 27724 ;; Hardware stack levels used:    1
 27725 ;; Hardware stack levels required when called:    3
 27726 ;; This function calls:
 27727 ;;		__ic2_display_set_address
 27728 ;;		_i2c_set_frequency
 27729 ;; This function is called by:
 27730 ;;		_display_update
 27731 ;; This function uses a non-reentrant model
 27732 ;;
 27733                           
 27734                           	psect	text134
 27735  007EBA                     __ptext134:
 27736                           	opt stack 0
 27737  007EBA                     _i2c_display_cursor:
 27738                           	opt stack 23
 27739                           
 27740                           ;incstack = 0
 27741                           ;i2c_display_cursor@line stored from wreg
 27742  007EBA  6E0F               	movwf	i2c_display_cursor@line,c
 27743                           
 27744                           ;i2c.c: 232: uint8_t address;;i2c.c: 235: line &= 0b11;
 27745  007EBC  0E03               	movlw	3
 27746  007EBE  160F               	andwf	i2c_display_cursor@line,f,c
 27747                           
 27748                           ;i2c.c: 236: address = line<<5;
 27749  007EC0  380F               	swapf	i2c_display_cursor@line,w,c
 27750  007EC2  46E8               	rlncf	wreg,f,c
 27751  007EC4  0BE0               	andlw	224
 27752  007EC6  6E10               	movwf	i2c_display_cursor@address,c
 27753                           
 27754                           ;i2c.c: 237: position &= 0b11111;
 27755  007EC8  0E1F               	movlw	31
 27756  007ECA  160E               	andwf	i2c_display_cursor@position,f,c
 27757                           
 27758                           ;i2c.c: 238: address |= position;
 27759  007ECC  500E               	movf	i2c_display_cursor@position,w,c
 27760  007ECE  1210               	iorwf	i2c_display_cursor@address,f,c
 27761                           
 27762                           ;i2c.c: 241: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27763  007ED0  0E02               	movlw	2
 27764  007ED2  ECBF  F03E         	call	_i2c_set_frequency
 27765                           
 27766                           ;i2c.c: 244: _ic2_display_set_address(address);
 27767  007ED6  5010               	movf	i2c_display_cursor@address,w,c
 27768  007ED8  EC25  F03F         	call	__ic2_display_set_address
 27769  007EDC  0012               	return		;funcret
 27770  007EDE                     __end_of_i2c_display_cursor:
 27771                           	opt stack 0
 27772                           tosu	equ	0xFFF
 27773                           tosh	equ	0xFFE
 27774                           tosl	equ	0xFFD
 27775                           pclath	equ	0xFFA
 27776                           tblptru	equ	0xFF8
 27777                           tblptrh	equ	0xFF7
 27778                           tblptrl	equ	0xFF6
 27779                           tablat	equ	0xFF5
 27780                           prodh	equ	0xFF4
 27781                           prodl	equ	0xFF3
 27782                           intcon	equ	0xFF2
 27783                           intcon2	equ	0xFF1
 27784                           intcon3	equ	0xFF0
 27785                           indf0	equ	0xFEF
 27786                           postinc0	equ	0xFEE
 27787                           fsr0h	equ	0xFEA
 27788                           fsr0l	equ	0xFE9
 27789                           wreg	equ	0xFE8
 27790                           indf1	equ	0xFE7
 27791                           postdec1	equ	0xFE5
 27792                           plusw1	equ	0xFE3
 27793                           fsr1h	equ	0xFE2
 27794                           fsr1l	equ	0xFE1
 27795                           indf2	equ	0xFDF
 27796                           postinc2	equ	0xFDE
 27797                           postdec2	equ	0xFDD
 27798                           plusw2	equ	0xFDB
 27799                           fsr2h	equ	0xFDA
 27800                           fsr2l	equ	0xFD9
 27801                           status	equ	0xFD8
 27802                           
 27803 ;; *************** function __ic2_display_set_address *****************
 27804 ;; Defined at:
 27805 ;;		line 194 in file "i2c.c"
 27806 ;; Parameters:    Size  Location     Type
 27807 ;;  address         1    wreg     unsigned char 
 27808 ;; Auto vars:     Size  Location     Type
 27809 ;;  address         1   10[COMRAM] unsigned char 
 27810 ;;  data_array      2   11[COMRAM] unsigned char [2]
 27811 ;; Return value:  Size  Location     Type
 27812 ;;                  1    wreg      void 
 27813 ;; Registers used:
 27814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27815 ;; Tracked objects:
 27816 ;;		On entry : 0/0
 27817 ;;		On exit  : 0/0
 27818 ;;		Unchanged: 0/0
 27819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27821 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27823 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27824 ;;Total ram usage:        3 bytes
 27825 ;; Hardware stack levels used:    1
 27826 ;; Hardware stack levels required when called:    2
 27827 ;; This function calls:
 27828 ;;		__i2c_write
 27829 ;;		_i2c_set_frequency
 27830 ;; This function is called by:
 27831 ;;		_i2c_display_cursor
 27832 ;; This function uses a non-reentrant model
 27833 ;;
 27834                           
 27835                           	psect	text135
 27836  007E4A                     __ptext135:
 27837                           	opt stack 0
 27838  007E4A                     __ic2_display_set_address:
 27839                           	opt stack 23
 27840                           
 27841                           ;incstack = 0
 27842                           ;__ic2_display_set_address@address stored from wreg
 27843  007E4A  6E0B               	movwf	__ic2_display_set_address@address,c
 27844                           
 27845                           ;i2c.c: 196: uint8_t data_array[2];;i2c.c: 197: data_array[0] = 0b00000000;
 27846  007E4C  0E00               	movlw	0
 27847  007E4E  6E0C               	movwf	__ic2_display_set_address@data_array,c
 27848                           
 27849                           ;i2c.c: 198: data_array[1] = 0b10000000 | address;
 27850  007E50  500B               	movf	__ic2_display_set_address@address,w,c
 27851  007E52  0980               	iorlw	128
 27852  007E54  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 27853                           
 27854                           ;i2c.c: 201: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27855  007E56  0E02               	movlw	2
 27856  007E58  ECBF  F03E         	call	_i2c_set_frequency
 27857                           
 27858                           ;i2c.c: 204: _i2c_write(0b01111000, &data_array[0], 2);
 27859  007E5C  0E0C               	movlw	low __ic2_display_set_address@data_array
 27860  007E5E  6E06               	movwf	__i2c_write@data,c
 27861  007E60  0E00               	movlw	high __ic2_display_set_address@data_array
 27862  007E62  6E07               	movwf	__i2c_write@data+1,c
 27863  007E64  0E02               	movlw	2
 27864  007E66  6E08               	movwf	__i2c_write@length,c
 27865  007E68  0E78               	movlw	120
 27866  007E6A  ECB1  F03B         	call	__i2c_write
 27867  007E6E  0012               	return		;funcret
 27868  007E70                     __end_of__ic2_display_set_address:
 27869                           	opt stack 0
 27870                           tosu	equ	0xFFF
 27871                           tosh	equ	0xFFE
 27872                           tosl	equ	0xFFD
 27873                           pclath	equ	0xFFA
 27874                           tblptru	equ	0xFF8
 27875                           tblptrh	equ	0xFF7
 27876                           tblptrl	equ	0xFF6
 27877                           tablat	equ	0xFF5
 27878                           prodh	equ	0xFF4
 27879                           prodl	equ	0xFF3
 27880                           intcon	equ	0xFF2
 27881                           intcon2	equ	0xFF1
 27882                           intcon3	equ	0xFF0
 27883                           indf0	equ	0xFEF
 27884                           postinc0	equ	0xFEE
 27885                           fsr0h	equ	0xFEA
 27886                           fsr0l	equ	0xFE9
 27887                           wreg	equ	0xFE8
 27888                           indf1	equ	0xFE7
 27889                           postdec1	equ	0xFE5
 27890                           plusw1	equ	0xFE3
 27891                           fsr1h	equ	0xFE2
 27892                           fsr1l	equ	0xFE1
 27893                           indf2	equ	0xFDF
 27894                           postinc2	equ	0xFDE
 27895                           postdec2	equ	0xFDD
 27896                           plusw2	equ	0xFDB
 27897                           fsr2h	equ	0xFDA
 27898                           fsr2l	equ	0xFD9
 27899                           status	equ	0xFD8
 27900                           
 27901 ;; *************** function _display_prepare *****************
 27902 ;; Defined at:
 27903 ;;		line 286 in file "display.c"
 27904 ;; Parameters:    Size  Location     Type
 27905 ;;  mode            1    wreg     unsigned char 
 27906 ;; Auto vars:     Size  Location     Type
 27907 ;;  mode            1   42[COMRAM] unsigned char 
 27908 ;; Return value:  Size  Location     Type
 27909 ;;                  1    wreg      void 
 27910 ;; Registers used:
 27911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27912 ;; Tracked objects:
 27913 ;;		On entry : 0/0
 27914 ;;		On exit  : 0/0
 27915 ;;		Unchanged: 0/0
 27916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27920 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27921 ;;Total ram usage:        3 bytes
 27922 ;; Hardware stack levels used:    1
 27923 ;; Hardware stack levels required when called:    6
 27924 ;; This function calls:
 27925 ;;		__display_checked
 27926 ;;		__display_clear
 27927 ;;		__display_done
 27928 ;;		__display_failed
 27929 ;;		__display_found
 27930 ;;		__display_programming
 27931 ;;		__display_rebooting
 27932 ;;		__display_search
 27933 ;;		__display_start
 27934 ;;		__display_verify
 27935 ;; This function is called by:
 27936 ;;		_main
 27937 ;;		_reboot
 27938 ;; This function uses a non-reentrant model
 27939 ;;
 27940                           
 27941                           	psect	text136
 27942  0051BC                     __ptext136:
 27943                           	opt stack 0
 27944  0051BC                     _display_prepare:
 27945                           	opt stack 21
 27946                           
 27947                           ;incstack = 0
 27948                           ;display_prepare@mode stored from wreg
 27949  0051BC  6E2B               	movwf	display_prepare@mode,c
 27950                           
 27951                           ;display.c: 288: _display_clear();
 27952  0051BE  EC8D  F03B         	call	__display_clear	;wreg free
 27953                           
 27954                           ;display.c: 290: switch(mode&0xF0)
 27955  0051C2  D01B               	goto	l1539
 27956  0051C4                     
 27957                           ;display.c: 293: _display_start();
 27958  0051C4  ECF9  F013         	call	__display_start	;wreg free
 27959                           
 27960                           ;display.c: 294: break;
 27961  0051C8  D047               	goto	l1550
 27962  0051CA                     
 27963                           ;display.c: 297: _display_search();
 27964  0051CA  EC44  F01D         	call	__display_search	;wreg free
 27965                           
 27966                           ;display.c: 298: break;
 27967  0051CE  D044               	goto	l1550
 27968  0051D0                     
 27969                           ;display.c: 301: _display_found();
 27970  0051D0  ECE8  F015         	call	__display_found	;wreg free
 27971                           
 27972                           ;display.c: 302: break;
 27973  0051D4  D041               	goto	l1550
 27974  0051D6                     
 27975                           ;display.c: 305: _display_verify();
 27976  0051D6  EC31  F01F         	call	__display_verify	;wreg free
 27977                           
 27978                           ;display.c: 306: break;
 27979  0051DA  D03E               	goto	l1550
 27980  0051DC                     
 27981                           ;display.c: 309: _display_checked();
 27982  0051DC  EC58  F01A         	call	__display_checked	;wreg free
 27983                           
 27984                           ;display.c: 310: break;
 27985  0051E0  D03B               	goto	l1550
 27986  0051E2                     
 27987                           ;display.c: 313: _display_failed();
 27988  0051E2  EC4D  F009         	call	__display_failed	;wreg free
 27989                           
 27990                           ;display.c: 314: break;
 27991  0051E6  D038               	goto	l1550
 27992  0051E8                     
 27993                           ;display.c: 317: _display_programming();
 27994  0051E8  ECC4  F017         	call	__display_programming	;wreg free
 27995                           
 27996                           ;display.c: 318: break;
 27997  0051EC  D035               	goto	l1550
 27998  0051EE                     
 27999                           ;display.c: 321: _display_done();
 28000  0051EE  ECD1  F01B         	call	__display_done	;wreg free
 28001                           
 28002                           ;display.c: 322: break;
 28003  0051F2  D032               	goto	l1550
 28004  0051F4                     
 28005                           ;display.c: 325: _display_rebooting();
 28006  0051F4  EC6B  F03A         	call	__display_rebooting	;wreg free
 28007                           
 28008                           ;display.c: 327: }
 28009                           
 28010                           ;display.c: 326: break;
 28011  0051F8  D02F               	goto	l1550
 28012  0051FA                     l1539:
 28013  0051FA  502B               	movf	display_prepare@mode,w,c
 28014  0051FC  0BF0               	andlw	240
 28015  0051FE  6E29               	movwf	??_display_prepare& (0+255),c
 28016  005200  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 28017                           
 28018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28019                           ; Switch size 1, requested type "space"
 28020                           ; Number of cases is 1, Range of values is 0 to 0
 28021                           ; switch strategies available:
 28022                           ; Name         Instructions Cycles
 28023                           ; simple_byte            4     3 (average)
 28024                           ;	Chosen strategy is simple_byte
 28025  005202  502A               	movf	??_display_prepare+1,w,c
 28026  005204  0A00               	xorlw	0	; case 0
 28027  005206  A4D8               	btfss	status,2,c
 28028  005208  D027               	goto	l1550
 28029                           
 28030                           ; Switch size 1, requested type "space"
 28031                           ; Number of cases is 9, Range of values is 0 to 128
 28032                           ; switch strategies available:
 28033                           ; Name         Instructions Cycles
 28034                           ; simple_byte           28    15 (average)
 28035                           ;	Chosen strategy is simple_byte
 28036  00520A  5029               	movf	??_display_prepare,w,c
 28037  00520C  0A00               	xorlw	0	; case 0
 28038  00520E  B4D8               	btfsc	status,2,c
 28039  005210  D7D9               	goto	l1540
 28040  005212  0A10               	xorlw	16	; case 16
 28041  005214  B4D8               	btfsc	status,2,c
 28042  005216  D7D9               	goto	l1542
 28043  005218  0A30               	xorlw	48	; case 32
 28044  00521A  B4D8               	btfsc	status,2,c
 28045  00521C  D7D9               	goto	l1543
 28046  00521E  0A10               	xorlw	16	; case 48
 28047  005220  B4D8               	btfsc	status,2,c
 28048  005222  D7D9               	goto	l1544
 28049  005224  0A70               	xorlw	112	; case 64
 28050  005226  B4D8               	btfsc	status,2,c
 28051  005228  D7D9               	goto	l1545
 28052  00522A  0A10               	xorlw	16	; case 80
 28053  00522C  B4D8               	btfsc	status,2,c
 28054  00522E  D7D9               	goto	l1546
 28055  005230  0A30               	xorlw	48	; case 96
 28056  005232  B4D8               	btfsc	status,2,c
 28057  005234  D7D9               	goto	l1547
 28058  005236  0A10               	xorlw	16	; case 112
 28059  005238  B4D8               	btfsc	status,2,c
 28060  00523A  D7D9               	goto	l1548
 28061  00523C  0AF0               	xorlw	240	; case 128
 28062  00523E  B4D8               	btfsc	status,2,c
 28063  005240  D7D9               	goto	l1549
 28064                           
 28065                           ;display.c: 330: switch((os.timeSlot>>5)&0b11)
 28066  005242  D00A               	goto	l1550
 28067  005244                     
 28068                           ;display.c: 333: display_content[0][17] = '.';
 28069  005244  0E2E               	movlw	46
 28070  005246  0102               	movlb	2	; () banked
 28071  005248  6F11               	movwf	(_display_content+17)& (0+255),b
 28072  00524A                     l1552:
 28073                           
 28074                           ;display.c: 336: display_content[0][16] = '.';
 28075  00524A  0E2E               	movlw	46
 28076  00524C  0102               	movlb	2	; () banked
 28077  00524E  6F10               	movwf	(_display_content+16)& (0+255),b
 28078  005250                     l1553:
 28079                           
 28080                           ;display.c: 339: display_content[0][15] = '.';
 28081  005250  0E2E               	movlw	46
 28082  005252  0102               	movlb	2	; () banked
 28083  005254  6F0F               	movwf	(_display_content+15)& (0+255),b
 28084                           
 28085                           ;display.c: 341: }
 28086  005256  D015               	goto	l1554
 28087  005258                     l1550:
 28088                           
 28089                           ; BSR set to: 2
 28090  005258  0100               	movlb	0	; () banked
 28091  00525A  39BB               	swapf	(_os+2)& (0+255),w,b	;volatile
 28092  00525C  42E8               	rrncf	wreg,f,c
 28093  00525E  0B07               	andlw	7
 28094  005260  0B03               	andlw	3
 28095  005262  6E29               	movwf	??_display_prepare& (0+255),c
 28096  005264  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 28097                           
 28098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28099                           ; Switch size 1, requested type "space"
 28100                           ; Number of cases is 1, Range of values is 0 to 0
 28101                           ; switch strategies available:
 28102                           ; Name         Instructions Cycles
 28103                           ; simple_byte            4     3 (average)
 28104                           ;	Chosen strategy is simple_byte
 28105  005266  502A               	movf	??_display_prepare+1,w,c
 28106  005268  0A00               	xorlw	0	; case 0
 28107  00526A  A4D8               	btfss	status,2,c
 28108  00526C  D00A               	goto	l1554
 28109                           
 28110                           ; BSR set to: 0
 28111                           ; Switch size 1, requested type "space"
 28112                           ; Number of cases is 3, Range of values is 1 to 3
 28113                           ; switch strategies available:
 28114                           ; Name         Instructions Cycles
 28115                           ; simple_byte           10     6 (average)
 28116                           ;	Chosen strategy is simple_byte
 28117  00526E  5029               	movf	??_display_prepare,w,c
 28118  005270  0A01               	xorlw	1	; case 1
 28119  005272  B4D8               	btfsc	status,2,c
 28120  005274  D7ED               	goto	l1553
 28121  005276  0A03               	xorlw	3	; case 2
 28122  005278  B4D8               	btfsc	status,2,c
 28123  00527A  D7E7               	goto	l1552
 28124  00527C  0A01               	xorlw	1	; case 3
 28125  00527E  B4D8               	btfsc	status,2,c
 28126  005280  D7E1               	goto	l1551
 28127  005282                     l1554:
 28128                           
 28129                           ;display.c: 345: if(INTCONbits.GIE)
 28130  005282  AEF2               	btfss	intcon,7,c	;volatile
 28131  005284  0012               	return	
 28132                           
 28133                           ;display.c: 346: {;display.c: 347: display_content[0][18] = 'I';
 28134  005286  0E49               	movlw	73
 28135  005288  0102               	movlb	2	; () banked
 28136  00528A  6F12               	movwf	(_display_content+18)& (0+255),b
 28137  00528C  0012               	return	
 28138  00528E                     __end_of_display_prepare:
 28139                           	opt stack 0
 28140                           tosu	equ	0xFFF
 28141                           tosh	equ	0xFFE
 28142                           tosl	equ	0xFFD
 28143                           pclath	equ	0xFFA
 28144                           tblptru	equ	0xFF8
 28145                           tblptrh	equ	0xFF7
 28146                           tblptrl	equ	0xFF6
 28147                           tablat	equ	0xFF5
 28148                           prodh	equ	0xFF4
 28149                           prodl	equ	0xFF3
 28150                           intcon	equ	0xFF2
 28151                           intcon2	equ	0xFF1
 28152                           intcon3	equ	0xFF0
 28153                           indf0	equ	0xFEF
 28154                           postinc0	equ	0xFEE
 28155                           fsr0h	equ	0xFEA
 28156                           fsr0l	equ	0xFE9
 28157                           wreg	equ	0xFE8
 28158                           indf1	equ	0xFE7
 28159                           postdec1	equ	0xFE5
 28160                           plusw1	equ	0xFE3
 28161                           fsr1h	equ	0xFE2
 28162                           fsr1l	equ	0xFE1
 28163                           indf2	equ	0xFDF
 28164                           postinc2	equ	0xFDE
 28165                           postdec2	equ	0xFDD
 28166                           plusw2	equ	0xFDB
 28167                           fsr2h	equ	0xFDA
 28168                           fsr2l	equ	0xFD9
 28169                           status	equ	0xFD8
 28170                           
 28171 ;; *************** function __display_verify *****************
 28172 ;; Defined at:
 28173 ;;		line 417 in file "display.c"
 28174 ;; Parameters:    Size  Location     Type
 28175 ;;		None
 28176 ;; Auto vars:     Size  Location     Type
 28177 ;;  cntr            1   32[COMRAM] unsigned char 
 28178 ;;  start           1    0        unsigned char 
 28179 ;; Return value:  Size  Location     Type
 28180 ;;                  1    wreg      void 
 28181 ;; Registers used:
 28182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28183 ;; Tracked objects:
 28184 ;;		On entry : 0/0
 28185 ;;		On exit  : 0/0
 28186 ;;		Unchanged: 0/0
 28187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28191 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28192 ;;Total ram usage:        3 bytes
 28193 ;; Hardware stack levels used:    1
 28194 ;; Hardware stack levels required when called:    4
 28195 ;; This function calls:
 28196 ;;		__display_itoa_u16
 28197 ;;		_bootloader_get_entries
 28198 ;; This function is called by:
 28199 ;;		_display_prepare
 28200 ;; This function uses a non-reentrant model
 28201 ;;
 28202                           
 28203                           	psect	text137
 28204  003E62                     __ptext137:
 28205                           	opt stack 0
 28206  003E62                     __display_verify:
 28207                           	opt stack 22
 28208                           
 28209                           ;display.c: 419: uint8_t cntr;;display.c: 420: uint8_t start;;display.c: 421: cntr = 0;
 28210                           
 28211                           ;incstack = 0
 28212  003E62  0E00               	movlw	0
 28213  003E64  6E21               	movwf	__display_verify@cntr,c
 28214                           
 28215                           ;display.c: 422: while(verify_line1[cntr])
 28216  003E66  D017               	goto	l1607
 28217  003E68                     
 28218                           ;display.c: 423: display_content[0][cntr] = verify_line1[cntr++];
 28219  003E68  5021               	movf	__display_verify@cntr,w,c
 28220  003E6A  0D01               	mullw	1
 28221  003E6C  0EC4               	movlw	low _verify_line1
 28222  003E6E  24F3               	addwf	prodl,w,c
 28223  003E70  6EF6               	movwf	tblptrl,c
 28224  003E72  0E8D               	movlw	high _verify_line1
 28225  003E74  20F4               	addwfc	prodh,w,c
 28226  003E76  6EF7               	movwf	tblptrh,c
 28227  003E78                     	if	1	;There are 3 active tblptr bytes
 28228  003E78  6AF8               	clrf	tblptru,c
 28229  003E7A  0E00               	movlw	low (__mediumconst shr (0+16))
 28230  003E7C  22F8               	addwfc	tblptru,f,c
 28231  003E7E                     	endif
 28232  003E7E  5021               	movf	__display_verify@cntr,w,c
 28233  003E80  0D01               	mullw	1
 28234  003E82  0E00               	movlw	low _display_content
 28235  003E84  24F3               	addwf	prodl,w,c
 28236  003E86  6ED9               	movwf	fsr2l,c
 28237  003E88  0E02               	movlw	high _display_content
 28238  003E8A  20F4               	addwfc	prodh,w,c
 28239  003E8C  6EDA               	movwf	fsr2h,c
 28240  003E8E  0008               	tblrd		*
 28241  003E90  CFF5 FFDF          	movff	tablat,indf2
 28242  003E94  2A21               	incf	__display_verify@cntr,f,c
 28243  003E96                     l1607:
 28244  003E96  5021               	movf	__display_verify@cntr,w,c
 28245  003E98  0D01               	mullw	1
 28246  003E9A  0EC4               	movlw	low _verify_line1
 28247  003E9C  24F3               	addwf	prodl,w,c
 28248  003E9E  6EF6               	movwf	tblptrl,c
 28249  003EA0  0E8D               	movlw	high _verify_line1
 28250  003EA2  20F4               	addwfc	prodh,w,c
 28251  003EA4  6EF7               	movwf	tblptrh,c
 28252  003EA6                     	if	1	;There are 3 active tblptr bytes
 28253  003EA6  6AF8               	clrf	tblptru,c
 28254  003EA8  0E00               	movlw	low (__mediumconst shr (0+16))
 28255  003EAA  22F8               	addwfc	tblptru,f,c
 28256  003EAC                     	endif
 28257  003EAC  0008               	tblrd		*
 28258  003EAE  50F5               	movf	tablat,w,c
 28259  003EB0  0900               	iorlw	0
 28260  003EB2  A4D8               	btfss	status,2,c
 28261  003EB4  D7D9               	goto	l1608
 28262                           
 28263                           ;display.c: 424: cntr = 0;
 28264  003EB6  0E00               	movlw	0
 28265  003EB8  6E21               	movwf	__display_verify@cntr,c
 28266                           
 28267                           ;display.c: 425: while(verify_line2[cntr])
 28268  003EBA  D017               	goto	l1610
 28269  003EBC                     
 28270                           ;display.c: 426: display_content[1][cntr] = verify_line2[cntr++];
 28271  003EBC  5021               	movf	__display_verify@cntr,w,c
 28272  003EBE  0D01               	mullw	1
 28273  003EC0  0E4C               	movlw	low _verify_line2
 28274  003EC2  24F3               	addwf	prodl,w,c
 28275  003EC4  6EF6               	movwf	tblptrl,c
 28276  003EC6  0E8E               	movlw	high _verify_line2
 28277  003EC8  20F4               	addwfc	prodh,w,c
 28278  003ECA  6EF7               	movwf	tblptrh,c
 28279  003ECC                     	if	1	;There are 3 active tblptr bytes
 28280  003ECC  6AF8               	clrf	tblptru,c
 28281  003ECE  0E00               	movlw	low (__mediumconst shr (0+16))
 28282  003ED0  22F8               	addwfc	tblptru,f,c
 28283  003ED2                     	endif
 28284  003ED2  5021               	movf	__display_verify@cntr,w,c
 28285  003ED4  0D01               	mullw	1
 28286  003ED6  0E14               	movlw	low (_display_content+20)
 28287  003ED8  24F3               	addwf	prodl,w,c
 28288  003EDA  6ED9               	movwf	fsr2l,c
 28289  003EDC  0E02               	movlw	high (_display_content+20)
 28290  003EDE  20F4               	addwfc	prodh,w,c
 28291  003EE0  6EDA               	movwf	fsr2h,c
 28292  003EE2  0008               	tblrd		*
 28293  003EE4  CFF5 FFDF          	movff	tablat,indf2
 28294  003EE8  2A21               	incf	__display_verify@cntr,f,c
 28295  003EEA                     l1610:
 28296  003EEA  5021               	movf	__display_verify@cntr,w,c
 28297  003EEC  0D01               	mullw	1
 28298  003EEE  0E4C               	movlw	low _verify_line2
 28299  003EF0  24F3               	addwf	prodl,w,c
 28300  003EF2  6EF6               	movwf	tblptrl,c
 28301  003EF4  0E8E               	movlw	high _verify_line2
 28302  003EF6  20F4               	addwfc	prodh,w,c
 28303  003EF8  6EF7               	movwf	tblptrh,c
 28304  003EFA                     	if	1	;There are 3 active tblptr bytes
 28305  003EFA  6AF8               	clrf	tblptru,c
 28306  003EFC  0E00               	movlw	low (__mediumconst shr (0+16))
 28307  003EFE  22F8               	addwfc	tblptru,f,c
 28308  003F00                     	endif
 28309  003F00  0008               	tblrd		*
 28310  003F02  50F5               	movf	tablat,w,c
 28311  003F04  0900               	iorlw	0
 28312  003F06  A4D8               	btfss	status,2,c
 28313  003F08  D7D9               	goto	l1611
 28314                           
 28315                           ;display.c: 427: cntr = 0;
 28316  003F0A  0E00               	movlw	0
 28317  003F0C  6E21               	movwf	__display_verify@cntr,c
 28318                           
 28319                           ;display.c: 428: while(verify_line3[cntr])
 28320  003F0E  D017               	goto	l1613
 28321  003F10                     
 28322                           ;display.c: 429: display_content[2][cntr] = verify_line3[cntr++];
 28323  003F10  5021               	movf	__display_verify@cntr,w,c
 28324  003F12  0D01               	mullw	1
 28325  003F14  0E8A               	movlw	low _verify_line3
 28326  003F16  24F3               	addwf	prodl,w,c
 28327  003F18  6EF6               	movwf	tblptrl,c
 28328  003F1A  0E8E               	movlw	high _verify_line3
 28329  003F1C  20F4               	addwfc	prodh,w,c
 28330  003F1E  6EF7               	movwf	tblptrh,c
 28331  003F20                     	if	1	;There are 3 active tblptr bytes
 28332  003F20  6AF8               	clrf	tblptru,c
 28333  003F22  0E00               	movlw	low (__mediumconst shr (0+16))
 28334  003F24  22F8               	addwfc	tblptru,f,c
 28335  003F26                     	endif
 28336  003F26  5021               	movf	__display_verify@cntr,w,c
 28337  003F28  0D01               	mullw	1
 28338  003F2A  0E28               	movlw	low (_display_content+40)
 28339  003F2C  24F3               	addwf	prodl,w,c
 28340  003F2E  6ED9               	movwf	fsr2l,c
 28341  003F30  0E02               	movlw	high (_display_content+40)
 28342  003F32  20F4               	addwfc	prodh,w,c
 28343  003F34  6EDA               	movwf	fsr2h,c
 28344  003F36  0008               	tblrd		*
 28345  003F38  CFF5 FFDF          	movff	tablat,indf2
 28346  003F3C  2A21               	incf	__display_verify@cntr,f,c
 28347  003F3E                     l1613:
 28348  003F3E  5021               	movf	__display_verify@cntr,w,c
 28349  003F40  0D01               	mullw	1
 28350  003F42  0E8A               	movlw	low _verify_line3
 28351  003F44  24F3               	addwf	prodl,w,c
 28352  003F46  6EF6               	movwf	tblptrl,c
 28353  003F48  0E8E               	movlw	high _verify_line3
 28354  003F4A  20F4               	addwfc	prodh,w,c
 28355  003F4C  6EF7               	movwf	tblptrh,c
 28356  003F4E                     	if	1	;There are 3 active tblptr bytes
 28357  003F4E  6AF8               	clrf	tblptru,c
 28358  003F50  0E00               	movlw	low (__mediumconst shr (0+16))
 28359  003F52  22F8               	addwfc	tblptru,f,c
 28360  003F54                     	endif
 28361  003F54  0008               	tblrd		*
 28362  003F56  50F5               	movf	tablat,w,c
 28363  003F58  0900               	iorlw	0
 28364  003F5A  A4D8               	btfss	status,2,c
 28365  003F5C  D7D9               	goto	l1614
 28366                           
 28367                           ;display.c: 430: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 28368  003F5E  ECC8  F040         	call	_bootloader_get_entries	;wreg free
 28369  003F62  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28370  003F66  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28371  003F6A  6A1B               	clrf	__display_itoa_u16@value+2,c
 28372  003F6C  6A1C               	clrf	__display_itoa_u16@value+3,c
 28373  003F6E  5021               	movf	__display_verify@cntr,w,c
 28374  003F70  6E1F               	movwf	??__display_verify& (0+255),c
 28375  003F72  6A20               	clrf	(??__display_verify+1)& (0+255),c
 28376  003F74  0E01               	movlw	1
 28377  003F76  261F               	addwf	??__display_verify,f,c
 28378  003F78  0E00               	movlw	0
 28379  003F7A  2220               	addwfc	??__display_verify+1,f,c
 28380  003F7C  0E28               	movlw	low (_display_content+40)
 28381  003F7E  241F               	addwf	??__display_verify,w,c
 28382  003F80  6E1D               	movwf	__display_itoa_u16@text,c
 28383  003F82  0E02               	movlw	high (_display_content+40)
 28384  003F84  2020               	addwfc	??__display_verify+1,w,c
 28385  003F86  6E1E               	movwf	__display_itoa_u16@text+1,c
 28386  003F88  EC74  F02A         	call	__display_itoa_u16	;wreg free
 28387  003F8C  0012               	return		;funcret
 28388  003F8E                     __end_of__display_verify:
 28389                           	opt stack 0
 28390                           tosu	equ	0xFFF
 28391                           tosh	equ	0xFFE
 28392                           tosl	equ	0xFFD
 28393                           pclath	equ	0xFFA
 28394                           tblptru	equ	0xFF8
 28395                           tblptrh	equ	0xFF7
 28396                           tblptrl	equ	0xFF6
 28397                           tablat	equ	0xFF5
 28398                           prodh	equ	0xFF4
 28399                           prodl	equ	0xFF3
 28400                           intcon	equ	0xFF2
 28401                           intcon2	equ	0xFF1
 28402                           intcon3	equ	0xFF0
 28403                           indf0	equ	0xFEF
 28404                           postinc0	equ	0xFEE
 28405                           fsr0h	equ	0xFEA
 28406                           fsr0l	equ	0xFE9
 28407                           wreg	equ	0xFE8
 28408                           indf1	equ	0xFE7
 28409                           postdec1	equ	0xFE5
 28410                           plusw1	equ	0xFE3
 28411                           fsr1h	equ	0xFE2
 28412                           fsr1l	equ	0xFE1
 28413                           indf2	equ	0xFDF
 28414                           postinc2	equ	0xFDE
 28415                           postdec2	equ	0xFDD
 28416                           plusw2	equ	0xFDB
 28417                           fsr2h	equ	0xFDA
 28418                           fsr2l	equ	0xFD9
 28419                           status	equ	0xFD8
 28420                           
 28421 ;; *************** function __display_start *****************
 28422 ;; Defined at:
 28423 ;;		line 351 in file "display.c"
 28424 ;; Parameters:    Size  Location     Type
 28425 ;;		None
 28426 ;; Auto vars:     Size  Location     Type
 28427 ;;  cntr            1   36[COMRAM] unsigned char 
 28428 ;; Return value:  Size  Location     Type
 28429 ;;                  1    wreg      void 
 28430 ;; Registers used:
 28431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28432 ;; Tracked objects:
 28433 ;;		On entry : 0/0
 28434 ;;		On exit  : 0/0
 28435 ;;		Unchanged: 0/0
 28436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28441 ;;Total ram usage:        1 bytes
 28442 ;; Hardware stack levels used:    1
 28443 ;; Hardware stack levels required when called:    5
 28444 ;; This function calls:
 28445 ;;		__display_itoa_u32
 28446 ;; This function is called by:
 28447 ;;		_display_prepare
 28448 ;; This function uses a non-reentrant model
 28449 ;;
 28450                           
 28451                           	psect	text138
 28452  0027F2                     __ptext138:
 28453                           	opt stack 0
 28454  0027F2                     __display_start:
 28455                           	opt stack 21
 28456                           
 28457                           ;display.c: 353: uint8_t cntr;;display.c: 354: cntr = 0;
 28458                           
 28459                           ;incstack = 0
 28460  0027F2  0E00               	movlw	0
 28461  0027F4  6E25               	movwf	__display_start@cntr,c
 28462                           
 28463                           ;display.c: 355: while(start_line1[cntr])
 28464  0027F6  D017               	goto	l1559
 28465  0027F8                     
 28466                           ;display.c: 356: display_content[0][cntr] = start_line1[cntr++];
 28467  0027F8  5025               	movf	__display_start@cntr,w,c
 28468  0027FA  0D01               	mullw	1
 28469  0027FC  0EF4               	movlw	low _start_line1
 28470  0027FE  24F3               	addwf	prodl,w,c
 28471  002800  6EF6               	movwf	tblptrl,c
 28472  002802  0E8D               	movlw	high _start_line1
 28473  002804  20F4               	addwfc	prodh,w,c
 28474  002806  6EF7               	movwf	tblptrh,c
 28475  002808                     	if	1	;There are 3 active tblptr bytes
 28476  002808  6AF8               	clrf	tblptru,c
 28477  00280A  0E00               	movlw	low (__mediumconst shr (0+16))
 28478  00280C  22F8               	addwfc	tblptru,f,c
 28479  00280E                     	endif
 28480  00280E  5025               	movf	__display_start@cntr,w,c
 28481  002810  0D01               	mullw	1
 28482  002812  0E00               	movlw	low _display_content
 28483  002814  24F3               	addwf	prodl,w,c
 28484  002816  6ED9               	movwf	fsr2l,c
 28485  002818  0E02               	movlw	high _display_content
 28486  00281A  20F4               	addwfc	prodh,w,c
 28487  00281C  6EDA               	movwf	fsr2h,c
 28488  00281E  0008               	tblrd		*
 28489  002820  CFF5 FFDF          	movff	tablat,indf2
 28490  002824  2A25               	incf	__display_start@cntr,f,c
 28491  002826                     l1559:
 28492  002826  5025               	movf	__display_start@cntr,w,c
 28493  002828  0D01               	mullw	1
 28494  00282A  0EF4               	movlw	low _start_line1
 28495  00282C  24F3               	addwf	prodl,w,c
 28496  00282E  6EF6               	movwf	tblptrl,c
 28497  002830  0E8D               	movlw	high _start_line1
 28498  002832  20F4               	addwfc	prodh,w,c
 28499  002834  6EF7               	movwf	tblptrh,c
 28500  002836                     	if	1	;There are 3 active tblptr bytes
 28501  002836  6AF8               	clrf	tblptru,c
 28502  002838  0E00               	movlw	low (__mediumconst shr (0+16))
 28503  00283A  22F8               	addwfc	tblptru,f,c
 28504  00283C                     	endif
 28505  00283C  0008               	tblrd		*
 28506  00283E  50F5               	movf	tablat,w,c
 28507  002840  0900               	iorlw	0
 28508  002842  A4D8               	btfss	status,2,c
 28509  002844  D7D9               	goto	l1560
 28510                           
 28511                           ;display.c: 357: cntr = 0;
 28512  002846  0E00               	movlw	0
 28513  002848  6E25               	movwf	__display_start@cntr,c
 28514                           
 28515                           ;display.c: 358: while(start_line2[cntr])
 28516  00284A  D017               	goto	l1562
 28517  00284C                     
 28518                           ;display.c: 359: display_content[1][cntr] = start_line2[cntr++];
 28519  00284C  5025               	movf	__display_start@cntr,w,c
 28520  00284E  0D01               	mullw	1
 28521  002850  0E62               	movlw	low _start_line2
 28522  002852  24F3               	addwf	prodl,w,c
 28523  002854  6EF6               	movwf	tblptrl,c
 28524  002856  0E8E               	movlw	high _start_line2
 28525  002858  20F4               	addwfc	prodh,w,c
 28526  00285A  6EF7               	movwf	tblptrh,c
 28527  00285C                     	if	1	;There are 3 active tblptr bytes
 28528  00285C  6AF8               	clrf	tblptru,c
 28529  00285E  0E00               	movlw	low (__mediumconst shr (0+16))
 28530  002860  22F8               	addwfc	tblptru,f,c
 28531  002862                     	endif
 28532  002862  5025               	movf	__display_start@cntr,w,c
 28533  002864  0D01               	mullw	1
 28534  002866  0E14               	movlw	low (_display_content+20)
 28535  002868  24F3               	addwf	prodl,w,c
 28536  00286A  6ED9               	movwf	fsr2l,c
 28537  00286C  0E02               	movlw	high (_display_content+20)
 28538  00286E  20F4               	addwfc	prodh,w,c
 28539  002870  6EDA               	movwf	fsr2h,c
 28540  002872  0008               	tblrd		*
 28541  002874  CFF5 FFDF          	movff	tablat,indf2
 28542  002878  2A25               	incf	__display_start@cntr,f,c
 28543  00287A                     l1562:
 28544  00287A  5025               	movf	__display_start@cntr,w,c
 28545  00287C  0D01               	mullw	1
 28546  00287E  0E62               	movlw	low _start_line2
 28547  002880  24F3               	addwf	prodl,w,c
 28548  002882  6EF6               	movwf	tblptrl,c
 28549  002884  0E8E               	movlw	high _start_line2
 28550  002886  20F4               	addwfc	prodh,w,c
 28551  002888  6EF7               	movwf	tblptrh,c
 28552  00288A                     	if	1	;There are 3 active tblptr bytes
 28553  00288A  6AF8               	clrf	tblptru,c
 28554  00288C  0E00               	movlw	low (__mediumconst shr (0+16))
 28555  00288E  22F8               	addwfc	tblptru,f,c
 28556  002890                     	endif
 28557  002890  0008               	tblrd		*
 28558  002892  50F5               	movf	tablat,w,c
 28559  002894  0900               	iorlw	0
 28560  002896  A4D8               	btfss	status,2,c
 28561  002898  D7D9               	goto	l1563
 28562                           
 28563                           ;display.c: 360: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 28564  00289A  0E00               	movlw	0
 28565  00289C  6E1F               	movwf	__display_itoa_u32@value,c
 28566  00289E  0E00               	movlw	0
 28567  0028A0  6E20               	movwf	__display_itoa_u32@value+1,c
 28568  0028A2  0E00               	movlw	0
 28569  0028A4  6E21               	movwf	__display_itoa_u32@value+2,c
 28570  0028A6  0E00               	movlw	0
 28571  0028A8  6E22               	movwf	__display_itoa_u32@value+3,c
 28572  0028AA  5025               	movf	__display_start@cntr,w,c
 28573  0028AC  0D01               	mullw	1
 28574  0028AE  0E14               	movlw	low (_display_content+20)
 28575  0028B0  24F3               	addwf	prodl,w,c
 28576  0028B2  6E23               	movwf	__display_itoa_u32@text,c
 28577  0028B4  0E02               	movlw	high (_display_content+20)
 28578  0028B6  20F4               	addwfc	prodh,w,c
 28579  0028B8  6E24               	movwf	__display_itoa_u32@text+1,c
 28580  0028BA  EC07  F006         	call	__display_itoa_u32	;wreg free
 28581  0028BE  2625               	addwf	__display_start@cntr,f,c
 28582                           
 28583                           ;display.c: 361: display_content[1][cntr++] = '.';
 28584  0028C0  5025               	movf	__display_start@cntr,w,c
 28585  0028C2  0D01               	mullw	1
 28586  0028C4  0E14               	movlw	low (_display_content+20)
 28587  0028C6  24F3               	addwf	prodl,w,c
 28588  0028C8  6ED9               	movwf	fsr2l,c
 28589  0028CA  0E02               	movlw	high (_display_content+20)
 28590  0028CC  20F4               	addwfc	prodh,w,c
 28591  0028CE  6EDA               	movwf	fsr2h,c
 28592  0028D0  0E2E               	movlw	46
 28593  0028D2  6EDF               	movwf	indf2,c
 28594  0028D4  2A25               	incf	__display_start@cntr,f,c
 28595                           
 28596                           ;display.c: 362: cntr += _display_itoa_u32(0x01, &display_content[1][cntr]);
 28597  0028D6  0E01               	movlw	1
 28598  0028D8  6E1F               	movwf	__display_itoa_u32@value,c
 28599  0028DA  0E00               	movlw	0
 28600  0028DC  6E20               	movwf	__display_itoa_u32@value+1,c
 28601  0028DE  0E00               	movlw	0
 28602  0028E0  6E21               	movwf	__display_itoa_u32@value+2,c
 28603  0028E2  0E00               	movlw	0
 28604  0028E4  6E22               	movwf	__display_itoa_u32@value+3,c
 28605  0028E6  5025               	movf	__display_start@cntr,w,c
 28606  0028E8  0D01               	mullw	1
 28607  0028EA  0E14               	movlw	low (_display_content+20)
 28608  0028EC  24F3               	addwf	prodl,w,c
 28609  0028EE  6E23               	movwf	__display_itoa_u32@text,c
 28610  0028F0  0E02               	movlw	high (_display_content+20)
 28611  0028F2  20F4               	addwfc	prodh,w,c
 28612  0028F4  6E24               	movwf	__display_itoa_u32@text+1,c
 28613  0028F6  EC07  F006         	call	__display_itoa_u32	;wreg free
 28614  0028FA  2625               	addwf	__display_start@cntr,f,c
 28615                           
 28616                           ;display.c: 363: display_content[1][cntr++] = '.';
 28617  0028FC  5025               	movf	__display_start@cntr,w,c
 28618  0028FE  0D01               	mullw	1
 28619  002900  0E14               	movlw	low (_display_content+20)
 28620  002902  24F3               	addwf	prodl,w,c
 28621  002904  6ED9               	movwf	fsr2l,c
 28622  002906  0E02               	movlw	high (_display_content+20)
 28623  002908  20F4               	addwfc	prodh,w,c
 28624  00290A  6EDA               	movwf	fsr2h,c
 28625  00290C  0E2E               	movlw	46
 28626  00290E  6EDF               	movwf	indf2,c
 28627  002910  2A25               	incf	__display_start@cntr,f,c
 28628                           
 28629                           ;display.c: 364: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 28630  002912  0E00               	movlw	0
 28631  002914  6E1F               	movwf	__display_itoa_u32@value,c
 28632  002916  0E00               	movlw	0
 28633  002918  6E20               	movwf	__display_itoa_u32@value+1,c
 28634  00291A  0E00               	movlw	0
 28635  00291C  6E21               	movwf	__display_itoa_u32@value+2,c
 28636  00291E  0E00               	movlw	0
 28637  002920  6E22               	movwf	__display_itoa_u32@value+3,c
 28638  002922  5025               	movf	__display_start@cntr,w,c
 28639  002924  0D01               	mullw	1
 28640  002926  0E14               	movlw	low (_display_content+20)
 28641  002928  24F3               	addwf	prodl,w,c
 28642  00292A  6E23               	movwf	__display_itoa_u32@text,c
 28643  00292C  0E02               	movlw	high (_display_content+20)
 28644  00292E  20F4               	addwfc	prodh,w,c
 28645  002930  6E24               	movwf	__display_itoa_u32@text+1,c
 28646  002932  EC07  F006         	call	__display_itoa_u32	;wreg free
 28647  002936  2625               	addwf	__display_start@cntr,f,c
 28648                           
 28649                           ;display.c: 365: cntr = 0;
 28650  002938  0E00               	movlw	0
 28651  00293A  6E25               	movwf	__display_start@cntr,c
 28652                           
 28653                           ;display.c: 366: while(start_line3[cntr])
 28654  00293C  D017               	goto	l1565
 28655  00293E                     
 28656                           ;display.c: 367: display_content[2][cntr] = start_line3[cntr++];
 28657  00293E  5025               	movf	__display_start@cntr,w,c
 28658  002940  0D01               	mullw	1
 28659  002942  0EA7               	movlw	low _start_line3
 28660  002944  24F3               	addwf	prodl,w,c
 28661  002946  6EF6               	movwf	tblptrl,c
 28662  002948  0E8E               	movlw	high _start_line3
 28663  00294A  20F4               	addwfc	prodh,w,c
 28664  00294C  6EF7               	movwf	tblptrh,c
 28665  00294E                     	if	1	;There are 3 active tblptr bytes
 28666  00294E  6AF8               	clrf	tblptru,c
 28667  002950  0E00               	movlw	low (__mediumconst shr (0+16))
 28668  002952  22F8               	addwfc	tblptru,f,c
 28669  002954                     	endif
 28670  002954  5025               	movf	__display_start@cntr,w,c
 28671  002956  0D01               	mullw	1
 28672  002958  0E28               	movlw	low (_display_content+40)
 28673  00295A  24F3               	addwf	prodl,w,c
 28674  00295C  6ED9               	movwf	fsr2l,c
 28675  00295E  0E02               	movlw	high (_display_content+40)
 28676  002960  20F4               	addwfc	prodh,w,c
 28677  002962  6EDA               	movwf	fsr2h,c
 28678  002964  0008               	tblrd		*
 28679  002966  CFF5 FFDF          	movff	tablat,indf2
 28680  00296A  2A25               	incf	__display_start@cntr,f,c
 28681  00296C                     l1565:
 28682  00296C  5025               	movf	__display_start@cntr,w,c
 28683  00296E  0D01               	mullw	1
 28684  002970  0EA7               	movlw	low _start_line3
 28685  002972  24F3               	addwf	prodl,w,c
 28686  002974  6EF6               	movwf	tblptrl,c
 28687  002976  0E8E               	movlw	high _start_line3
 28688  002978  20F4               	addwfc	prodh,w,c
 28689  00297A  6EF7               	movwf	tblptrh,c
 28690  00297C                     	if	1	;There are 3 active tblptr bytes
 28691  00297C  6AF8               	clrf	tblptru,c
 28692  00297E  0E00               	movlw	low (__mediumconst shr (0+16))
 28693  002980  22F8               	addwfc	tblptru,f,c
 28694  002982                     	endif
 28695  002982  0008               	tblrd		*
 28696  002984  50F5               	movf	tablat,w,c
 28697  002986  0900               	iorlw	0
 28698  002988  A4D8               	btfss	status,2,c
 28699  00298A  D7D9               	goto	l1566
 28700                           
 28701                           ;display.c: 368: cntr = 0;
 28702  00298C  0E00               	movlw	0
 28703  00298E  6E25               	movwf	__display_start@cntr,c
 28704                           
 28705                           ;display.c: 369: while(start_line4[cntr])
 28706  002990  D017               	goto	l1568
 28707  002992                     
 28708                           ;display.c: 370: display_content[3][cntr] = start_line4[cntr++];
 28709  002992  5025               	movf	__display_start@cntr,w,c
 28710  002994  0D01               	mullw	1
 28711  002996  0E22               	movlw	low _start_line4
 28712  002998  24F3               	addwf	prodl,w,c
 28713  00299A  6EF6               	movwf	tblptrl,c
 28714  00299C  0E8E               	movlw	high _start_line4
 28715  00299E  20F4               	addwfc	prodh,w,c
 28716  0029A0  6EF7               	movwf	tblptrh,c
 28717  0029A2                     	if	1	;There are 3 active tblptr bytes
 28718  0029A2  6AF8               	clrf	tblptru,c
 28719  0029A4  0E00               	movlw	low (__mediumconst shr (0+16))
 28720  0029A6  22F8               	addwfc	tblptru,f,c
 28721  0029A8                     	endif
 28722  0029A8  5025               	movf	__display_start@cntr,w,c
 28723  0029AA  0D01               	mullw	1
 28724  0029AC  0E3C               	movlw	low (_display_content+60)
 28725  0029AE  24F3               	addwf	prodl,w,c
 28726  0029B0  6ED9               	movwf	fsr2l,c
 28727  0029B2  0E02               	movlw	high (_display_content+60)
 28728  0029B4  20F4               	addwfc	prodh,w,c
 28729  0029B6  6EDA               	movwf	fsr2h,c
 28730  0029B8  0008               	tblrd		*
 28731  0029BA  CFF5 FFDF          	movff	tablat,indf2
 28732  0029BE  2A25               	incf	__display_start@cntr,f,c
 28733  0029C0                     l1568:
 28734  0029C0  5025               	movf	__display_start@cntr,w,c
 28735  0029C2  0D01               	mullw	1
 28736  0029C4  0E22               	movlw	low _start_line4
 28737  0029C6  24F3               	addwf	prodl,w,c
 28738  0029C8  6EF6               	movwf	tblptrl,c
 28739  0029CA  0E8E               	movlw	high _start_line4
 28740  0029CC  20F4               	addwfc	prodh,w,c
 28741  0029CE  6EF7               	movwf	tblptrh,c
 28742  0029D0                     	if	1	;There are 3 active tblptr bytes
 28743  0029D0  6AF8               	clrf	tblptru,c
 28744  0029D2  0E00               	movlw	low (__mediumconst shr (0+16))
 28745  0029D4  22F8               	addwfc	tblptru,f,c
 28746  0029D6                     	endif
 28747  0029D6  0008               	tblrd		*
 28748  0029D8  50F5               	movf	tablat,w,c
 28749  0029DA  0900               	iorlw	0
 28750  0029DC  B4D8               	btfsc	status,2,c
 28751  0029DE  0012               	return	
 28752  0029E0  D7D8               	goto	l1569
 28753  0029E2                     __end_of__display_start:
 28754                           	opt stack 0
 28755                           tosu	equ	0xFFF
 28756                           tosh	equ	0xFFE
 28757                           tosl	equ	0xFFD
 28758                           pclath	equ	0xFFA
 28759                           tblptru	equ	0xFF8
 28760                           tblptrh	equ	0xFF7
 28761                           tblptrl	equ	0xFF6
 28762                           tablat	equ	0xFF5
 28763                           prodh	equ	0xFF4
 28764                           prodl	equ	0xFF3
 28765                           intcon	equ	0xFF2
 28766                           intcon2	equ	0xFF1
 28767                           intcon3	equ	0xFF0
 28768                           indf0	equ	0xFEF
 28769                           postinc0	equ	0xFEE
 28770                           fsr0h	equ	0xFEA
 28771                           fsr0l	equ	0xFE9
 28772                           wreg	equ	0xFE8
 28773                           indf1	equ	0xFE7
 28774                           postdec1	equ	0xFE5
 28775                           plusw1	equ	0xFE3
 28776                           fsr1h	equ	0xFE2
 28777                           fsr1l	equ	0xFE1
 28778                           indf2	equ	0xFDF
 28779                           postinc2	equ	0xFDE
 28780                           postdec2	equ	0xFDD
 28781                           plusw2	equ	0xFDB
 28782                           fsr2h	equ	0xFDA
 28783                           fsr2l	equ	0xFD9
 28784                           status	equ	0xFD8
 28785                           
 28786 ;; *************** function __display_search *****************
 28787 ;; Defined at:
 28788 ;;		line 373 in file "display.c"
 28789 ;; Parameters:    Size  Location     Type
 28790 ;;		None
 28791 ;; Auto vars:     Size  Location     Type
 28792 ;;  cntr            1    0[COMRAM] unsigned char 
 28793 ;; Return value:  Size  Location     Type
 28794 ;;                  1    wreg      void 
 28795 ;; Registers used:
 28796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28797 ;; Tracked objects:
 28798 ;;		On entry : 0/0
 28799 ;;		On exit  : 0/0
 28800 ;;		Unchanged: 0/0
 28801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28806 ;;Total ram usage:        1 bytes
 28807 ;; Hardware stack levels used:    1
 28808 ;; This function calls:
 28809 ;;		Nothing
 28810 ;; This function is called by:
 28811 ;;		_display_prepare
 28812 ;; This function uses a non-reentrant model
 28813 ;;
 28814                           
 28815                           	psect	text139
 28816  003A88                     __ptext139:
 28817                           	opt stack 0
 28818  003A88                     __display_search:
 28819                           	opt stack 26
 28820                           
 28821                           ;display.c: 375: uint8_t cntr;;display.c: 376: cntr = 0;
 28822                           
 28823                           ;incstack = 0
 28824  003A88  0E00               	movlw	0
 28825  003A8A  6E01               	movwf	__display_search@cntr,c
 28826                           
 28827                           ;display.c: 377: while(search_line1[cntr])
 28828  003A8C  D017               	goto	l1574
 28829  003A8E                     
 28830                           ;display.c: 378: display_content[0][cntr] = search_line1[cntr++];
 28831  003A8E  5001               	movf	__display_search@cntr,w,c
 28832  003A90  0D01               	mullw	1
 28833  003A92  0EE4               	movlw	low _search_line1
 28834  003A94  24F3               	addwf	prodl,w,c
 28835  003A96  6EF6               	movwf	tblptrl,c
 28836  003A98  0E8D               	movlw	high _search_line1
 28837  003A9A  20F4               	addwfc	prodh,w,c
 28838  003A9C  6EF7               	movwf	tblptrh,c
 28839  003A9E                     	if	1	;There are 3 active tblptr bytes
 28840  003A9E  6AF8               	clrf	tblptru,c
 28841  003AA0  0E00               	movlw	low (__mediumconst shr (0+16))
 28842  003AA2  22F8               	addwfc	tblptru,f,c
 28843  003AA4                     	endif
 28844  003AA4  5001               	movf	__display_search@cntr,w,c
 28845  003AA6  0D01               	mullw	1
 28846  003AA8  0E00               	movlw	low _display_content
 28847  003AAA  24F3               	addwf	prodl,w,c
 28848  003AAC  6ED9               	movwf	fsr2l,c
 28849  003AAE  0E02               	movlw	high _display_content
 28850  003AB0  20F4               	addwfc	prodh,w,c
 28851  003AB2  6EDA               	movwf	fsr2h,c
 28852  003AB4  0008               	tblrd		*
 28853  003AB6  CFF5 FFDF          	movff	tablat,indf2
 28854  003ABA  2A01               	incf	__display_search@cntr,f,c
 28855  003ABC                     l1574:
 28856  003ABC  5001               	movf	__display_search@cntr,w,c
 28857  003ABE  0D01               	mullw	1
 28858  003AC0  0EE4               	movlw	low _search_line1
 28859  003AC2  24F3               	addwf	prodl,w,c
 28860  003AC4  6EF6               	movwf	tblptrl,c
 28861  003AC6  0E8D               	movlw	high _search_line1
 28862  003AC8  20F4               	addwfc	prodh,w,c
 28863  003ACA  6EF7               	movwf	tblptrh,c
 28864  003ACC                     	if	1	;There are 3 active tblptr bytes
 28865  003ACC  6AF8               	clrf	tblptru,c
 28866  003ACE  0E00               	movlw	low (__mediumconst shr (0+16))
 28867  003AD0  22F8               	addwfc	tblptru,f,c
 28868  003AD2                     	endif
 28869  003AD2  0008               	tblrd		*
 28870  003AD4  50F5               	movf	tablat,w,c
 28871  003AD6  0900               	iorlw	0
 28872  003AD8  A4D8               	btfss	status,2,c
 28873  003ADA  D7D9               	goto	l1575
 28874                           
 28875                           ;display.c: 379: cntr = 0;
 28876  003ADC  0E00               	movlw	0
 28877  003ADE  6E01               	movwf	__display_search@cntr,c
 28878                           
 28879                           ;display.c: 380: while(search_line2[cntr])
 28880  003AE0  D017               	goto	l1577
 28881  003AE2                     
 28882                           ;display.c: 381: display_content[1][cntr] = search_line2[cntr++];
 28883  003AE2  5001               	movf	__display_search@cntr,w,c
 28884  003AE4  0D01               	mullw	1
 28885  003AE6  0E43               	movlw	low _search_line2
 28886  003AE8  24F3               	addwf	prodl,w,c
 28887  003AEA  6EF6               	movwf	tblptrl,c
 28888  003AEC  0E8D               	movlw	high _search_line2
 28889  003AEE  20F4               	addwfc	prodh,w,c
 28890  003AF0  6EF7               	movwf	tblptrh,c
 28891  003AF2                     	if	1	;There are 3 active tblptr bytes
 28892  003AF2  6AF8               	clrf	tblptru,c
 28893  003AF4  0E00               	movlw	low (__mediumconst shr (0+16))
 28894  003AF6  22F8               	addwfc	tblptru,f,c
 28895  003AF8                     	endif
 28896  003AF8  5001               	movf	__display_search@cntr,w,c
 28897  003AFA  0D01               	mullw	1
 28898  003AFC  0E14               	movlw	low (_display_content+20)
 28899  003AFE  24F3               	addwf	prodl,w,c
 28900  003B00  6ED9               	movwf	fsr2l,c
 28901  003B02  0E02               	movlw	high (_display_content+20)
 28902  003B04  20F4               	addwfc	prodh,w,c
 28903  003B06  6EDA               	movwf	fsr2h,c
 28904  003B08  0008               	tblrd		*
 28905  003B0A  CFF5 FFDF          	movff	tablat,indf2
 28906  003B0E  2A01               	incf	__display_search@cntr,f,c
 28907  003B10                     l1577:
 28908  003B10  5001               	movf	__display_search@cntr,w,c
 28909  003B12  0D01               	mullw	1
 28910  003B14  0E43               	movlw	low _search_line2
 28911  003B16  24F3               	addwf	prodl,w,c
 28912  003B18  6EF6               	movwf	tblptrl,c
 28913  003B1A  0E8D               	movlw	high _search_line2
 28914  003B1C  20F4               	addwfc	prodh,w,c
 28915  003B1E  6EF7               	movwf	tblptrh,c
 28916  003B20                     	if	1	;There are 3 active tblptr bytes
 28917  003B20  6AF8               	clrf	tblptru,c
 28918  003B22  0E00               	movlw	low (__mediumconst shr (0+16))
 28919  003B24  22F8               	addwfc	tblptru,f,c
 28920  003B26                     	endif
 28921  003B26  0008               	tblrd		*
 28922  003B28  50F5               	movf	tablat,w,c
 28923  003B2A  0900               	iorlw	0
 28924  003B2C  A4D8               	btfss	status,2,c
 28925  003B2E  D7D9               	goto	l1578
 28926                           
 28927                           ;display.c: 382: cntr = 0;
 28928  003B30  0E00               	movlw	0
 28929  003B32  6E01               	movwf	__display_search@cntr,c
 28930                           
 28931                           ;display.c: 383: while(search_line3[cntr])
 28932  003B34  D017               	goto	l1580
 28933  003B36                     
 28934                           ;display.c: 384: display_content[2][cntr] = search_line3[cntr++];
 28935  003B36  5001               	movf	__display_search@cntr,w,c
 28936  003B38  0D01               	mullw	1
 28937  003B3A  0EC2               	movlw	low _search_line3
 28938  003B3C  24F3               	addwf	prodl,w,c
 28939  003B3E  6EF6               	movwf	tblptrl,c
 28940  003B40  0E8C               	movlw	high _search_line3
 28941  003B42  20F4               	addwfc	prodh,w,c
 28942  003B44  6EF7               	movwf	tblptrh,c
 28943  003B46                     	if	1	;There are 3 active tblptr bytes
 28944  003B46  6AF8               	clrf	tblptru,c
 28945  003B48  0E00               	movlw	low (__mediumconst shr (0+16))
 28946  003B4A  22F8               	addwfc	tblptru,f,c
 28947  003B4C                     	endif
 28948  003B4C  5001               	movf	__display_search@cntr,w,c
 28949  003B4E  0D01               	mullw	1
 28950  003B50  0E28               	movlw	low (_display_content+40)
 28951  003B52  24F3               	addwf	prodl,w,c
 28952  003B54  6ED9               	movwf	fsr2l,c
 28953  003B56  0E02               	movlw	high (_display_content+40)
 28954  003B58  20F4               	addwfc	prodh,w,c
 28955  003B5A  6EDA               	movwf	fsr2h,c
 28956  003B5C  0008               	tblrd		*
 28957  003B5E  CFF5 FFDF          	movff	tablat,indf2
 28958  003B62  2A01               	incf	__display_search@cntr,f,c
 28959  003B64                     l1580:
 28960  003B64  5001               	movf	__display_search@cntr,w,c
 28961  003B66  0D01               	mullw	1
 28962  003B68  0EC2               	movlw	low _search_line3
 28963  003B6A  24F3               	addwf	prodl,w,c
 28964  003B6C  6EF6               	movwf	tblptrl,c
 28965  003B6E  0E8C               	movlw	high _search_line3
 28966  003B70  20F4               	addwfc	prodh,w,c
 28967  003B72  6EF7               	movwf	tblptrh,c
 28968  003B74                     	if	1	;There are 3 active tblptr bytes
 28969  003B74  6AF8               	clrf	tblptru,c
 28970  003B76  0E00               	movlw	low (__mediumconst shr (0+16))
 28971  003B78  22F8               	addwfc	tblptru,f,c
 28972  003B7A                     	endif
 28973  003B7A  0008               	tblrd		*
 28974  003B7C  50F5               	movf	tablat,w,c
 28975  003B7E  0900               	iorlw	0
 28976  003B80  A4D8               	btfss	status,2,c
 28977  003B82  D7D9               	goto	l1581
 28978                           
 28979                           ;display.c: 385: cntr = 0;
 28980  003B84  0E00               	movlw	0
 28981  003B86  6E01               	movwf	__display_search@cntr,c
 28982                           
 28983                           ;display.c: 386: while(search_line4[cntr])
 28984  003B88  D017               	goto	l1583
 28985  003B8A                     
 28986                           ;display.c: 387: display_content[3][cntr] = search_line4[cntr++];
 28987  003B8A  5001               	movf	__display_search@cntr,w,c
 28988  003B8C  0D01               	mullw	1
 28989  003B8E  0E59               	movlw	low _search_line4
 28990  003B90  24F3               	addwf	prodl,w,c
 28991  003B92  6EF6               	movwf	tblptrl,c
 28992  003B94  0E8E               	movlw	high _search_line4
 28993  003B96  20F4               	addwfc	prodh,w,c
 28994  003B98  6EF7               	movwf	tblptrh,c
 28995  003B9A                     	if	1	;There are 3 active tblptr bytes
 28996  003B9A  6AF8               	clrf	tblptru,c
 28997  003B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 28998  003B9E  22F8               	addwfc	tblptru,f,c
 28999  003BA0                     	endif
 29000  003BA0  5001               	movf	__display_search@cntr,w,c
 29001  003BA2  0D01               	mullw	1
 29002  003BA4  0E3C               	movlw	low (_display_content+60)
 29003  003BA6  24F3               	addwf	prodl,w,c
 29004  003BA8  6ED9               	movwf	fsr2l,c
 29005  003BAA  0E02               	movlw	high (_display_content+60)
 29006  003BAC  20F4               	addwfc	prodh,w,c
 29007  003BAE  6EDA               	movwf	fsr2h,c
 29008  003BB0  0008               	tblrd		*
 29009  003BB2  CFF5 FFDF          	movff	tablat,indf2
 29010  003BB6  2A01               	incf	__display_search@cntr,f,c
 29011  003BB8                     l1583:
 29012  003BB8  5001               	movf	__display_search@cntr,w,c
 29013  003BBA  0D01               	mullw	1
 29014  003BBC  0E59               	movlw	low _search_line4
 29015  003BBE  24F3               	addwf	prodl,w,c
 29016  003BC0  6EF6               	movwf	tblptrl,c
 29017  003BC2  0E8E               	movlw	high _search_line4
 29018  003BC4  20F4               	addwfc	prodh,w,c
 29019  003BC6  6EF7               	movwf	tblptrh,c
 29020  003BC8                     	if	1	;There are 3 active tblptr bytes
 29021  003BC8  6AF8               	clrf	tblptru,c
 29022  003BCA  0E00               	movlw	low (__mediumconst shr (0+16))
 29023  003BCC  22F8               	addwfc	tblptru,f,c
 29024  003BCE                     	endif
 29025  003BCE  0008               	tblrd		*
 29026  003BD0  50F5               	movf	tablat,w,c
 29027  003BD2  0900               	iorlw	0
 29028  003BD4  B4D8               	btfsc	status,2,c
 29029  003BD6  0012               	return	
 29030  003BD8  D7D8               	goto	l1584
 29031  003BDA                     __end_of__display_search:
 29032                           	opt stack 0
 29033                           tosu	equ	0xFFF
 29034                           tosh	equ	0xFFE
 29035                           tosl	equ	0xFFD
 29036                           pclath	equ	0xFFA
 29037                           tblptru	equ	0xFF8
 29038                           tblptrh	equ	0xFF7
 29039                           tblptrl	equ	0xFF6
 29040                           tablat	equ	0xFF5
 29041                           prodh	equ	0xFF4
 29042                           prodl	equ	0xFF3
 29043                           intcon	equ	0xFF2
 29044                           intcon2	equ	0xFF1
 29045                           intcon3	equ	0xFF0
 29046                           indf0	equ	0xFEF
 29047                           postinc0	equ	0xFEE
 29048                           fsr0h	equ	0xFEA
 29049                           fsr0l	equ	0xFE9
 29050                           wreg	equ	0xFE8
 29051                           indf1	equ	0xFE7
 29052                           postdec1	equ	0xFE5
 29053                           plusw1	equ	0xFE3
 29054                           fsr1h	equ	0xFE2
 29055                           fsr1l	equ	0xFE1
 29056                           indf2	equ	0xFDF
 29057                           postinc2	equ	0xFDE
 29058                           postdec2	equ	0xFDD
 29059                           plusw2	equ	0xFDB
 29060                           fsr2h	equ	0xFDA
 29061                           fsr2l	equ	0xFD9
 29062                           status	equ	0xFD8
 29063                           
 29064 ;; *************** function __display_rebooting *****************
 29065 ;; Defined at:
 29066 ;;		line 547 in file "display.c"
 29067 ;; Parameters:    Size  Location     Type
 29068 ;;		None
 29069 ;; Auto vars:     Size  Location     Type
 29070 ;;  cntr            1    0[COMRAM] unsigned char 
 29071 ;; Return value:  Size  Location     Type
 29072 ;;                  1    wreg      void 
 29073 ;; Registers used:
 29074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 29075 ;; Tracked objects:
 29076 ;;		On entry : 0/0
 29077 ;;		On exit  : 0/0
 29078 ;;		Unchanged: 0/0
 29079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29084 ;;Total ram usage:        1 bytes
 29085 ;; Hardware stack levels used:    1
 29086 ;; This function calls:
 29087 ;;		Nothing
 29088 ;; This function is called by:
 29089 ;;		_display_prepare
 29090 ;; This function uses a non-reentrant model
 29091 ;;
 29092                           
 29093                           	psect	text140
 29094  0074D6                     __ptext140:
 29095                           	opt stack 0
 29096  0074D6                     __display_rebooting:
 29097                           	opt stack 26
 29098                           
 29099                           ;display.c: 549: uint8_t cntr;;display.c: 550: cntr = 0;
 29100                           
 29101                           ;incstack = 0
 29102  0074D6  0E00               	movlw	0
 29103  0074D8  6E01               	movwf	__display_rebooting@cntr,c
 29104                           
 29105                           ;display.c: 551: while(reboot_line1[cntr])
 29106  0074DA  D017               	goto	l1698
 29107  0074DC                     
 29108                           ;display.c: 552: display_content[0][cntr] = reboot_line1[cntr++];
 29109  0074DC  5001               	movf	__display_rebooting@cntr,w,c
 29110  0074DE  0D01               	mullw	1
 29111  0074E0  0E3F               	movlw	low _reboot_line1
 29112  0074E2  24F3               	addwf	prodl,w,c
 29113  0074E4  6EF6               	movwf	tblptrl,c
 29114  0074E6  0E8E               	movlw	high _reboot_line1
 29115  0074E8  20F4               	addwfc	prodh,w,c
 29116  0074EA  6EF7               	movwf	tblptrh,c
 29117  0074EC                     	if	1	;There are 3 active tblptr bytes
 29118  0074EC  6AF8               	clrf	tblptru,c
 29119  0074EE  0E00               	movlw	low (__mediumconst shr (0+16))
 29120  0074F0  22F8               	addwfc	tblptru,f,c
 29121  0074F2                     	endif
 29122  0074F2  5001               	movf	__display_rebooting@cntr,w,c
 29123  0074F4  0D01               	mullw	1
 29124  0074F6  0E00               	movlw	low _display_content
 29125  0074F8  24F3               	addwf	prodl,w,c
 29126  0074FA  6ED9               	movwf	fsr2l,c
 29127  0074FC  0E02               	movlw	high _display_content
 29128  0074FE  20F4               	addwfc	prodh,w,c
 29129  007500  6EDA               	movwf	fsr2h,c
 29130  007502  0008               	tblrd		*
 29131  007504  CFF5 FFDF          	movff	tablat,indf2
 29132  007508  2A01               	incf	__display_rebooting@cntr,f,c
 29133  00750A                     l1698:
 29134  00750A  5001               	movf	__display_rebooting@cntr,w,c
 29135  00750C  0D01               	mullw	1
 29136  00750E  0E3F               	movlw	low _reboot_line1
 29137  007510  24F3               	addwf	prodl,w,c
 29138  007512  6EF6               	movwf	tblptrl,c
 29139  007514  0E8E               	movlw	high _reboot_line1
 29140  007516  20F4               	addwfc	prodh,w,c
 29141  007518  6EF7               	movwf	tblptrh,c
 29142  00751A                     	if	1	;There are 3 active tblptr bytes
 29143  00751A  6AF8               	clrf	tblptru,c
 29144  00751C  0E00               	movlw	low (__mediumconst shr (0+16))
 29145  00751E  22F8               	addwfc	tblptru,f,c
 29146  007520                     	endif
 29147  007520  0008               	tblrd		*
 29148  007522  50F5               	movf	tablat,w,c
 29149  007524  0900               	iorlw	0
 29150  007526  B4D8               	btfsc	status,2,c
 29151  007528  0012               	return	
 29152  00752A  D7D8               	goto	l1699
 29153  00752C                     __end_of__display_rebooting:
 29154                           	opt stack 0
 29155                           tosu	equ	0xFFF
 29156                           tosh	equ	0xFFE
 29157                           tosl	equ	0xFFD
 29158                           pclath	equ	0xFFA
 29159                           tblptru	equ	0xFF8
 29160                           tblptrh	equ	0xFF7
 29161                           tblptrl	equ	0xFF6
 29162                           tablat	equ	0xFF5
 29163                           prodh	equ	0xFF4
 29164                           prodl	equ	0xFF3
 29165                           intcon	equ	0xFF2
 29166                           intcon2	equ	0xFF1
 29167                           intcon3	equ	0xFF0
 29168                           indf0	equ	0xFEF
 29169                           postinc0	equ	0xFEE
 29170                           fsr0h	equ	0xFEA
 29171                           fsr0l	equ	0xFE9
 29172                           wreg	equ	0xFE8
 29173                           indf1	equ	0xFE7
 29174                           postdec1	equ	0xFE5
 29175                           plusw1	equ	0xFE3
 29176                           fsr1h	equ	0xFE2
 29177                           fsr1l	equ	0xFE1
 29178                           indf2	equ	0xFDF
 29179                           postinc2	equ	0xFDE
 29180                           postdec2	equ	0xFDD
 29181                           plusw2	equ	0xFDB
 29182                           fsr2h	equ	0xFDA
 29183                           fsr2l	equ	0xFD9
 29184                           status	equ	0xFD8
 29185                           
 29186 ;; *************** function __display_programming *****************
 29187 ;; Defined at:
 29188 ;;		line 505 in file "display.c"
 29189 ;; Parameters:    Size  Location     Type
 29190 ;;		None
 29191 ;; Auto vars:     Size  Location     Type
 29192 ;;  cntr            1   30[COMRAM] unsigned char 
 29193 ;; Return value:  Size  Location     Type
 29194 ;;                  1    wreg      void 
 29195 ;; Registers used:
 29196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29197 ;; Tracked objects:
 29198 ;;		On entry : 0/0
 29199 ;;		On exit  : 0/0
 29200 ;;		Unchanged: 0/0
 29201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29206 ;;Total ram usage:        1 bytes
 29207 ;; Hardware stack levels used:    1
 29208 ;; Hardware stack levels required when called:    4
 29209 ;; This function calls:
 29210 ;;		__display_itoa_u16
 29211 ;;		_bootloader_get_entries
 29212 ;;		_bootloader_get_flashPagesWritten
 29213 ;;		_bootloader_get_total_entries
 29214 ;; This function is called by:
 29215 ;;		_display_prepare
 29216 ;; This function uses a non-reentrant model
 29217 ;;
 29218                           
 29219                           	psect	text141
 29220  002F88                     __ptext141:
 29221                           	opt stack 0
 29222  002F88                     __display_programming:
 29223                           	opt stack 22
 29224                           
 29225                           ;display.c: 507: uint8_t cntr;;display.c: 508: cntr = 0;
 29226                           
 29227                           ;incstack = 0
 29228  002F88  0E00               	movlw	0
 29229  002F8A  6E1F               	movwf	__display_programming@cntr,c
 29230                           
 29231                           ;display.c: 509: while(programming_line1[cntr])
 29232  002F8C  D017               	goto	l1668
 29233  002F8E                     
 29234                           ;display.c: 510: display_content[0][cntr] = programming_line1[cntr++];
 29235  002F8E  501F               	movf	__display_programming@cntr,w,c
 29236  002F90  0D01               	mullw	1
 29237  002F92  0E94               	movlw	low _programming_line1
 29238  002F94  24F3               	addwf	prodl,w,c
 29239  002F96  6EF6               	movwf	tblptrl,c
 29240  002F98  0E8D               	movlw	high _programming_line1
 29241  002F9A  20F4               	addwfc	prodh,w,c
 29242  002F9C  6EF7               	movwf	tblptrh,c
 29243  002F9E                     	if	1	;There are 3 active tblptr bytes
 29244  002F9E  6AF8               	clrf	tblptru,c
 29245  002FA0  0E00               	movlw	low (__mediumconst shr (0+16))
 29246  002FA2  22F8               	addwfc	tblptru,f,c
 29247  002FA4                     	endif
 29248  002FA4  501F               	movf	__display_programming@cntr,w,c
 29249  002FA6  0D01               	mullw	1
 29250  002FA8  0E00               	movlw	low _display_content
 29251  002FAA  24F3               	addwf	prodl,w,c
 29252  002FAC  6ED9               	movwf	fsr2l,c
 29253  002FAE  0E02               	movlw	high _display_content
 29254  002FB0  20F4               	addwfc	prodh,w,c
 29255  002FB2  6EDA               	movwf	fsr2h,c
 29256  002FB4  0008               	tblrd		*
 29257  002FB6  CFF5 FFDF          	movff	tablat,indf2
 29258  002FBA  2A1F               	incf	__display_programming@cntr,f,c
 29259  002FBC                     l1668:
 29260  002FBC  501F               	movf	__display_programming@cntr,w,c
 29261  002FBE  0D01               	mullw	1
 29262  002FC0  0E94               	movlw	low _programming_line1
 29263  002FC2  24F3               	addwf	prodl,w,c
 29264  002FC4  6EF6               	movwf	tblptrl,c
 29265  002FC6  0E8D               	movlw	high _programming_line1
 29266  002FC8  20F4               	addwfc	prodh,w,c
 29267  002FCA  6EF7               	movwf	tblptrh,c
 29268  002FCC                     	if	1	;There are 3 active tblptr bytes
 29269  002FCC  6AF8               	clrf	tblptru,c
 29270  002FCE  0E00               	movlw	low (__mediumconst shr (0+16))
 29271  002FD0  22F8               	addwfc	tblptru,f,c
 29272  002FD2                     	endif
 29273  002FD2  0008               	tblrd		*
 29274  002FD4  50F5               	movf	tablat,w,c
 29275  002FD6  0900               	iorlw	0
 29276  002FD8  A4D8               	btfss	status,2,c
 29277  002FDA  D7D9               	goto	l1669
 29278                           
 29279                           ;display.c: 512: cntr = 0;
 29280  002FDC  0E00               	movlw	0
 29281  002FDE  6E1F               	movwf	__display_programming@cntr,c
 29282                           
 29283                           ;display.c: 513: while(programming_line2[cntr])
 29284  002FE0  D017               	goto	l1671
 29285  002FE2                     
 29286                           ;display.c: 514: display_content[1][cntr] = programming_line2[cntr++];
 29287  002FE2  501F               	movf	__display_programming@cntr,w,c
 29288  002FE4  0D01               	mullw	1
 29289  002FE6  0EFC               	movlw	low _programming_line2
 29290  002FE8  24F3               	addwf	prodl,w,c
 29291  002FEA  6EF6               	movwf	tblptrl,c
 29292  002FEC  0E8C               	movlw	high _programming_line2
 29293  002FEE  20F4               	addwfc	prodh,w,c
 29294  002FF0  6EF7               	movwf	tblptrh,c
 29295  002FF2                     	if	1	;There are 3 active tblptr bytes
 29296  002FF2  6AF8               	clrf	tblptru,c
 29297  002FF4  0E00               	movlw	low (__mediumconst shr (0+16))
 29298  002FF6  22F8               	addwfc	tblptru,f,c
 29299  002FF8                     	endif
 29300  002FF8  501F               	movf	__display_programming@cntr,w,c
 29301  002FFA  0D01               	mullw	1
 29302  002FFC  0E14               	movlw	low (_display_content+20)
 29303  002FFE  24F3               	addwf	prodl,w,c
 29304  003000  6ED9               	movwf	fsr2l,c
 29305  003002  0E02               	movlw	high (_display_content+20)
 29306  003004  20F4               	addwfc	prodh,w,c
 29307  003006  6EDA               	movwf	fsr2h,c
 29308  003008  0008               	tblrd		*
 29309  00300A  CFF5 FFDF          	movff	tablat,indf2
 29310  00300E  2A1F               	incf	__display_programming@cntr,f,c
 29311  003010                     l1671:
 29312  003010  501F               	movf	__display_programming@cntr,w,c
 29313  003012  0D01               	mullw	1
 29314  003014  0EFC               	movlw	low _programming_line2
 29315  003016  24F3               	addwf	prodl,w,c
 29316  003018  6EF6               	movwf	tblptrl,c
 29317  00301A  0E8C               	movlw	high _programming_line2
 29318  00301C  20F4               	addwfc	prodh,w,c
 29319  00301E  6EF7               	movwf	tblptrh,c
 29320  003020                     	if	1	;There are 3 active tblptr bytes
 29321  003020  6AF8               	clrf	tblptru,c
 29322  003022  0E00               	movlw	low (__mediumconst shr (0+16))
 29323  003024  22F8               	addwfc	tblptru,f,c
 29324  003026                     	endif
 29325  003026  0008               	tblrd		*
 29326  003028  50F5               	movf	tablat,w,c
 29327  00302A  0900               	iorlw	0
 29328  00302C  A4D8               	btfss	status,2,c
 29329  00302E  D7D9               	goto	l1672
 29330                           
 29331                           ;display.c: 516: cntr = 0;
 29332  003030  0E00               	movlw	0
 29333  003032  6E1F               	movwf	__display_programming@cntr,c
 29334                           
 29335                           ;display.c: 517: while(programming_line3[cntr])
 29336  003034  D017               	goto	l1674
 29337  003036                     
 29338                           ;display.c: 518: display_content[2][cntr] = programming_line3[cntr++];
 29339  003036  501F               	movf	__display_programming@cntr,w,c
 29340  003038  0D01               	mullw	1
 29341  00303A  0E83               	movlw	low _programming_line3
 29342  00303C  24F3               	addwf	prodl,w,c
 29343  00303E  6EF6               	movwf	tblptrl,c
 29344  003040  0E8E               	movlw	high _programming_line3
 29345  003042  20F4               	addwfc	prodh,w,c
 29346  003044  6EF7               	movwf	tblptrh,c
 29347  003046                     	if	1	;There are 3 active tblptr bytes
 29348  003046  6AF8               	clrf	tblptru,c
 29349  003048  0E00               	movlw	low (__mediumconst shr (0+16))
 29350  00304A  22F8               	addwfc	tblptru,f,c
 29351  00304C                     	endif
 29352  00304C  501F               	movf	__display_programming@cntr,w,c
 29353  00304E  0D01               	mullw	1
 29354  003050  0E28               	movlw	low (_display_content+40)
 29355  003052  24F3               	addwf	prodl,w,c
 29356  003054  6ED9               	movwf	fsr2l,c
 29357  003056  0E02               	movlw	high (_display_content+40)
 29358  003058  20F4               	addwfc	prodh,w,c
 29359  00305A  6EDA               	movwf	fsr2h,c
 29360  00305C  0008               	tblrd		*
 29361  00305E  CFF5 FFDF          	movff	tablat,indf2
 29362  003062  2A1F               	incf	__display_programming@cntr,f,c
 29363  003064                     l1674:
 29364  003064  501F               	movf	__display_programming@cntr,w,c
 29365  003066  0D01               	mullw	1
 29366  003068  0E83               	movlw	low _programming_line3
 29367  00306A  24F3               	addwf	prodl,w,c
 29368  00306C  6EF6               	movwf	tblptrl,c
 29369  00306E  0E8E               	movlw	high _programming_line3
 29370  003070  20F4               	addwfc	prodh,w,c
 29371  003072  6EF7               	movwf	tblptrh,c
 29372  003074                     	if	1	;There are 3 active tblptr bytes
 29373  003074  6AF8               	clrf	tblptru,c
 29374  003076  0E00               	movlw	low (__mediumconst shr (0+16))
 29375  003078  22F8               	addwfc	tblptru,f,c
 29376  00307A                     	endif
 29377  00307A  0008               	tblrd		*
 29378  00307C  50F5               	movf	tablat,w,c
 29379  00307E  0900               	iorlw	0
 29380  003080  A4D8               	btfss	status,2,c
 29381  003082  D7D9               	goto	l1675
 29382                           
 29383                           ;display.c: 519: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 29384  003084  ECC8  F040         	call	_bootloader_get_entries	;wreg free
 29385  003088  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29386  00308C  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29387  003090  6A1B               	clrf	__display_itoa_u16@value+2,c
 29388  003092  6A1C               	clrf	__display_itoa_u16@value+3,c
 29389  003094  501F               	movf	__display_programming@cntr,w,c
 29390  003096  0D01               	mullw	1
 29391  003098  0E28               	movlw	low (_display_content+40)
 29392  00309A  24F3               	addwf	prodl,w,c
 29393  00309C  6E1D               	movwf	__display_itoa_u16@text,c
 29394  00309E  0E02               	movlw	high (_display_content+40)
 29395  0030A0  20F4               	addwfc	prodh,w,c
 29396  0030A2  6E1E               	movwf	__display_itoa_u16@text+1,c
 29397  0030A4  EC74  F02A         	call	__display_itoa_u16	;wreg free
 29398  0030A8  261F               	addwf	__display_programming@cntr,f,c
 29399                           
 29400                           ;display.c: 520: display_content[2][cntr++] = '/';
 29401  0030AA  501F               	movf	__display_programming@cntr,w,c
 29402  0030AC  0D01               	mullw	1
 29403  0030AE  0E28               	movlw	low (_display_content+40)
 29404  0030B0  24F3               	addwf	prodl,w,c
 29405  0030B2  6ED9               	movwf	fsr2l,c
 29406  0030B4  0E02               	movlw	high (_display_content+40)
 29407  0030B6  20F4               	addwfc	prodh,w,c
 29408  0030B8  6EDA               	movwf	fsr2h,c
 29409  0030BA  0E2F               	movlw	47
 29410  0030BC  6EDF               	movwf	indf2,c
 29411  0030BE  2A1F               	incf	__display_programming@cntr,f,c
 29412                           
 29413                           ;display.c: 521: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 29414  0030C0  ECD2  F040         	call	_bootloader_get_total_entries	;wreg free
 29415  0030C4  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 29416  0030C8  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 29417  0030CC  6A1B               	clrf	__display_itoa_u16@value+2,c
 29418  0030CE  6A1C               	clrf	__display_itoa_u16@value+3,c
 29419  0030D0  501F               	movf	__display_programming@cntr,w,c
 29420  0030D2  0D01               	mullw	1
 29421  0030D4  0E28               	movlw	low (_display_content+40)
 29422  0030D6  24F3               	addwf	prodl,w,c
 29423  0030D8  6E1D               	movwf	__display_itoa_u16@text,c
 29424  0030DA  0E02               	movlw	high (_display_content+40)
 29425  0030DC  20F4               	addwfc	prodh,w,c
 29426  0030DE  6E1E               	movwf	__display_itoa_u16@text+1,c
 29427  0030E0  EC74  F02A         	call	__display_itoa_u16	;wreg free
 29428                           
 29429                           ;display.c: 523: cntr = 0;
 29430  0030E4  0E00               	movlw	0
 29431  0030E6  6E1F               	movwf	__display_programming@cntr,c
 29432                           
 29433                           ;display.c: 524: while(programming_line4[cntr])
 29434  0030E8  D017               	goto	l1677
 29435  0030EA                     
 29436                           ;display.c: 525: display_content[3][cntr] = programming_line4[cntr++];
 29437  0030EA  501F               	movf	__display_programming@cntr,w,c
 29438  0030EC  0D01               	mullw	1
 29439  0030EE  0E84               	movlw	low _programming_line4
 29440  0030F0  24F3               	addwf	prodl,w,c
 29441  0030F2  6EF6               	movwf	tblptrl,c
 29442  0030F4  0E8D               	movlw	high _programming_line4
 29443  0030F6  20F4               	addwfc	prodh,w,c
 29444  0030F8  6EF7               	movwf	tblptrh,c
 29445  0030FA                     	if	1	;There are 3 active tblptr bytes
 29446  0030FA  6AF8               	clrf	tblptru,c
 29447  0030FC  0E00               	movlw	low (__mediumconst shr (0+16))
 29448  0030FE  22F8               	addwfc	tblptru,f,c
 29449  003100                     	endif
 29450  003100  501F               	movf	__display_programming@cntr,w,c
 29451  003102  0D01               	mullw	1
 29452  003104  0E3C               	movlw	low (_display_content+60)
 29453  003106  24F3               	addwf	prodl,w,c
 29454  003108  6ED9               	movwf	fsr2l,c
 29455  00310A  0E02               	movlw	high (_display_content+60)
 29456  00310C  20F4               	addwfc	prodh,w,c
 29457  00310E  6EDA               	movwf	fsr2h,c
 29458  003110  0008               	tblrd		*
 29459  003112  CFF5 FFDF          	movff	tablat,indf2
 29460  003116  2A1F               	incf	__display_programming@cntr,f,c
 29461  003118                     l1677:
 29462  003118  501F               	movf	__display_programming@cntr,w,c
 29463  00311A  0D01               	mullw	1
 29464  00311C  0E84               	movlw	low _programming_line4
 29465  00311E  24F3               	addwf	prodl,w,c
 29466  003120  6EF6               	movwf	tblptrl,c
 29467  003122  0E8D               	movlw	high _programming_line4
 29468  003124  20F4               	addwfc	prodh,w,c
 29469  003126  6EF7               	movwf	tblptrh,c
 29470  003128                     	if	1	;There are 3 active tblptr bytes
 29471  003128  6AF8               	clrf	tblptru,c
 29472  00312A  0E00               	movlw	low (__mediumconst shr (0+16))
 29473  00312C  22F8               	addwfc	tblptru,f,c
 29474  00312E                     	endif
 29475  00312E  0008               	tblrd		*
 29476  003130  50F5               	movf	tablat,w,c
 29477  003132  0900               	iorlw	0
 29478  003134  A4D8               	btfss	status,2,c
 29479  003136  D7D9               	goto	l1678
 29480                           
 29481                           ;display.c: 526: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 29482  003138  ECCD  F040         	call	_bootloader_get_flashPagesWritten	;wreg free
 29483  00313C  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 29484  003140  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 29485  003144  6A1B               	clrf	__display_itoa_u16@value+2,c
 29486  003146  6A1C               	clrf	__display_itoa_u16@value+3,c
 29487  003148  501F               	movf	__display_programming@cntr,w,c
 29488  00314A  0D01               	mullw	1
 29489  00314C  0E3C               	movlw	low (_display_content+60)
 29490  00314E  24F3               	addwf	prodl,w,c
 29491  003150  6E1D               	movwf	__display_itoa_u16@text,c
 29492  003152  0E02               	movlw	high (_display_content+60)
 29493  003154  20F4               	addwfc	prodh,w,c
 29494  003156  6E1E               	movwf	__display_itoa_u16@text+1,c
 29495  003158  EC74  F02A         	call	__display_itoa_u16	;wreg free
 29496  00315C  0012               	return		;funcret
 29497  00315E                     __end_of__display_programming:
 29498                           	opt stack 0
 29499                           tosu	equ	0xFFF
 29500                           tosh	equ	0xFFE
 29501                           tosl	equ	0xFFD
 29502                           pclath	equ	0xFFA
 29503                           tblptru	equ	0xFF8
 29504                           tblptrh	equ	0xFF7
 29505                           tblptrl	equ	0xFF6
 29506                           tablat	equ	0xFF5
 29507                           prodh	equ	0xFF4
 29508                           prodl	equ	0xFF3
 29509                           intcon	equ	0xFF2
 29510                           intcon2	equ	0xFF1
 29511                           intcon3	equ	0xFF0
 29512                           indf0	equ	0xFEF
 29513                           postinc0	equ	0xFEE
 29514                           fsr0h	equ	0xFEA
 29515                           fsr0l	equ	0xFE9
 29516                           wreg	equ	0xFE8
 29517                           indf1	equ	0xFE7
 29518                           postdec1	equ	0xFE5
 29519                           plusw1	equ	0xFE3
 29520                           fsr1h	equ	0xFE2
 29521                           fsr1l	equ	0xFE1
 29522                           indf2	equ	0xFDF
 29523                           postinc2	equ	0xFDE
 29524                           postdec2	equ	0xFDD
 29525                           plusw2	equ	0xFDB
 29526                           fsr2h	equ	0xFDA
 29527                           fsr2l	equ	0xFD9
 29528                           status	equ	0xFD8
 29529                           
 29530 ;; *************** function __display_found *****************
 29531 ;; Defined at:
 29532 ;;		line 390 in file "display.c"
 29533 ;; Parameters:    Size  Location     Type
 29534 ;;		None
 29535 ;; Auto vars:     Size  Location     Type
 29536 ;;  cntr            1   39[COMRAM] unsigned char 
 29537 ;;  start           1   38[COMRAM] unsigned char 
 29538 ;; Return value:  Size  Location     Type
 29539 ;;                  1    wreg      void 
 29540 ;; Registers used:
 29541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29542 ;; Tracked objects:
 29543 ;;		On entry : 0/0
 29544 ;;		On exit  : 0/0
 29545 ;;		Unchanged: 0/0
 29546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29548 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29550 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29551 ;;Total ram usage:        4 bytes
 29552 ;; Hardware stack levels used:    1
 29553 ;; Hardware stack levels required when called:    5
 29554 ;; This function calls:
 29555 ;;		__display_itoa_u32
 29556 ;;		_bootloader_get_file_size
 29557 ;; This function is called by:
 29558 ;;		_display_prepare
 29559 ;; This function uses a non-reentrant model
 29560 ;;
 29561                           
 29562                           	psect	text142
 29563  002BD0                     __ptext142:
 29564                           	opt stack 0
 29565  002BD0                     __display_found:
 29566                           	opt stack 21
 29567                           
 29568                           ;display.c: 392: uint8_t cntr;;display.c: 393: uint8_t start;;display.c: 395: cntr = 0;
 29569                           
 29570                           ;incstack = 0
 29571  002BD0  0E00               	movlw	0
 29572  002BD2  6E28               	movwf	__display_found@cntr,c
 29573                           
 29574                           ;display.c: 396: while(found_line1[cntr])
 29575  002BD4  D017               	goto	l1589
 29576  002BD6                     
 29577                           ;display.c: 397: display_content[0][cntr] = found_line1[cntr++];
 29578  002BD6  5028               	movf	__display_found@cntr,w,c
 29579  002BD8  0D01               	mullw	1
 29580  002BDA  0ED4               	movlw	low _found_line1
 29581  002BDC  24F3               	addwf	prodl,w,c
 29582  002BDE  6EF6               	movwf	tblptrl,c
 29583  002BE0  0E8D               	movlw	high _found_line1
 29584  002BE2  20F4               	addwfc	prodh,w,c
 29585  002BE4  6EF7               	movwf	tblptrh,c
 29586  002BE6                     	if	1	;There are 3 active tblptr bytes
 29587  002BE6  6AF8               	clrf	tblptru,c
 29588  002BE8  0E00               	movlw	low (__mediumconst shr (0+16))
 29589  002BEA  22F8               	addwfc	tblptru,f,c
 29590  002BEC                     	endif
 29591  002BEC  5028               	movf	__display_found@cntr,w,c
 29592  002BEE  0D01               	mullw	1
 29593  002BF0  0E00               	movlw	low _display_content
 29594  002BF2  24F3               	addwf	prodl,w,c
 29595  002BF4  6ED9               	movwf	fsr2l,c
 29596  002BF6  0E02               	movlw	high _display_content
 29597  002BF8  20F4               	addwfc	prodh,w,c
 29598  002BFA  6EDA               	movwf	fsr2h,c
 29599  002BFC  0008               	tblrd		*
 29600  002BFE  CFF5 FFDF          	movff	tablat,indf2
 29601  002C02  2A28               	incf	__display_found@cntr,f,c
 29602  002C04                     l1589:
 29603  002C04  5028               	movf	__display_found@cntr,w,c
 29604  002C06  0D01               	mullw	1
 29605  002C08  0ED4               	movlw	low _found_line1
 29606  002C0A  24F3               	addwf	prodl,w,c
 29607  002C0C  6EF6               	movwf	tblptrl,c
 29608  002C0E  0E8D               	movlw	high _found_line1
 29609  002C10  20F4               	addwfc	prodh,w,c
 29610  002C12  6EF7               	movwf	tblptrh,c
 29611  002C14                     	if	1	;There are 3 active tblptr bytes
 29612  002C14  6AF8               	clrf	tblptru,c
 29613  002C16  0E00               	movlw	low (__mediumconst shr (0+16))
 29614  002C18  22F8               	addwfc	tblptru,f,c
 29615  002C1A                     	endif
 29616  002C1A  0008               	tblrd		*
 29617  002C1C  50F5               	movf	tablat,w,c
 29618  002C1E  0900               	iorlw	0
 29619  002C20  A4D8               	btfss	status,2,c
 29620  002C22  D7D9               	goto	l1590
 29621                           
 29622                           ;display.c: 399: cntr = 0;
 29623  002C24  0E00               	movlw	0
 29624  002C26  6E28               	movwf	__display_found@cntr,c
 29625                           
 29626                           ;display.c: 400: while(found_line2[cntr])
 29627  002C28  D017               	goto	l1592
 29628  002C2A                     
 29629                           ;display.c: 401: display_content[1][cntr] = found_line2[cntr++];
 29630  002C2A  5028               	movf	__display_found@cntr,w,c
 29631  002C2C  0D01               	mullw	1
 29632  002C2E  0EE9               	movlw	low _found_line2
 29633  002C30  24F3               	addwf	prodl,w,c
 29634  002C32  6EF6               	movwf	tblptrl,c
 29635  002C34  0E8C               	movlw	high _found_line2
 29636  002C36  20F4               	addwfc	prodh,w,c
 29637  002C38  6EF7               	movwf	tblptrh,c
 29638  002C3A                     	if	1	;There are 3 active tblptr bytes
 29639  002C3A  6AF8               	clrf	tblptru,c
 29640  002C3C  0E00               	movlw	low (__mediumconst shr (0+16))
 29641  002C3E  22F8               	addwfc	tblptru,f,c
 29642  002C40                     	endif
 29643  002C40  5028               	movf	__display_found@cntr,w,c
 29644  002C42  0D01               	mullw	1
 29645  002C44  0E14               	movlw	low (_display_content+20)
 29646  002C46  24F3               	addwf	prodl,w,c
 29647  002C48  6ED9               	movwf	fsr2l,c
 29648  002C4A  0E02               	movlw	high (_display_content+20)
 29649  002C4C  20F4               	addwfc	prodh,w,c
 29650  002C4E  6EDA               	movwf	fsr2h,c
 29651  002C50  0008               	tblrd		*
 29652  002C52  CFF5 FFDF          	movff	tablat,indf2
 29653  002C56  2A28               	incf	__display_found@cntr,f,c
 29654  002C58                     l1592:
 29655  002C58  5028               	movf	__display_found@cntr,w,c
 29656  002C5A  0D01               	mullw	1
 29657  002C5C  0EE9               	movlw	low _found_line2
 29658  002C5E  24F3               	addwf	prodl,w,c
 29659  002C60  6EF6               	movwf	tblptrl,c
 29660  002C62  0E8C               	movlw	high _found_line2
 29661  002C64  20F4               	addwfc	prodh,w,c
 29662  002C66  6EF7               	movwf	tblptrh,c
 29663  002C68                     	if	1	;There are 3 active tblptr bytes
 29664  002C68  6AF8               	clrf	tblptru,c
 29665  002C6A  0E00               	movlw	low (__mediumconst shr (0+16))
 29666  002C6C  22F8               	addwfc	tblptru,f,c
 29667  002C6E                     	endif
 29668  002C6E  0008               	tblrd		*
 29669  002C70  50F5               	movf	tablat,w,c
 29670  002C72  0900               	iorlw	0
 29671  002C74  A4D8               	btfss	status,2,c
 29672  002C76  D7D9               	goto	l1593
 29673                           
 29674                           ;display.c: 403: cntr = 0;
 29675  002C78  0E00               	movlw	0
 29676  002C7A  6E28               	movwf	__display_found@cntr,c
 29677                           
 29678                           ;display.c: 404: while(found_line3[cntr])
 29679  002C7C  D017               	goto	l1595
 29680  002C7E                     
 29681                           ;display.c: 405: display_content[2][cntr] = found_line3[cntr++];
 29682  002C7E  5028               	movf	__display_found@cntr,w,c
 29683  002C80  0D01               	mullw	1
 29684  002C82  0E98               	movlw	low _found_line3
 29685  002C84  24F3               	addwf	prodl,w,c
 29686  002C86  6EF6               	movwf	tblptrl,c
 29687  002C88  0E8E               	movlw	high _found_line3
 29688  002C8A  20F4               	addwfc	prodh,w,c
 29689  002C8C  6EF7               	movwf	tblptrh,c
 29690  002C8E                     	if	1	;There are 3 active tblptr bytes
 29691  002C8E  6AF8               	clrf	tblptru,c
 29692  002C90  0E00               	movlw	low (__mediumconst shr (0+16))
 29693  002C92  22F8               	addwfc	tblptru,f,c
 29694  002C94                     	endif
 29695  002C94  5028               	movf	__display_found@cntr,w,c
 29696  002C96  0D01               	mullw	1
 29697  002C98  0E28               	movlw	low (_display_content+40)
 29698  002C9A  24F3               	addwf	prodl,w,c
 29699  002C9C  6ED9               	movwf	fsr2l,c
 29700  002C9E  0E02               	movlw	high (_display_content+40)
 29701  002CA0  20F4               	addwfc	prodh,w,c
 29702  002CA2  6EDA               	movwf	fsr2h,c
 29703  002CA4  0008               	tblrd		*
 29704  002CA6  CFF5 FFDF          	movff	tablat,indf2
 29705  002CAA  2A28               	incf	__display_found@cntr,f,c
 29706  002CAC                     l1595:
 29707  002CAC  5028               	movf	__display_found@cntr,w,c
 29708  002CAE  0D01               	mullw	1
 29709  002CB0  0E98               	movlw	low _found_line3
 29710  002CB2  24F3               	addwf	prodl,w,c
 29711  002CB4  6EF6               	movwf	tblptrl,c
 29712  002CB6  0E8E               	movlw	high _found_line3
 29713  002CB8  20F4               	addwfc	prodh,w,c
 29714  002CBA  6EF7               	movwf	tblptrh,c
 29715  002CBC                     	if	1	;There are 3 active tblptr bytes
 29716  002CBC  6AF8               	clrf	tblptru,c
 29717  002CBE  0E00               	movlw	low (__mediumconst shr (0+16))
 29718  002CC0  22F8               	addwfc	tblptru,f,c
 29719  002CC2                     	endif
 29720  002CC2  0008               	tblrd		*
 29721  002CC4  50F5               	movf	tablat,w,c
 29722  002CC6  0900               	iorlw	0
 29723  002CC8  A4D8               	btfss	status,2,c
 29724  002CCA  D7D9               	goto	l1596
 29725                           
 29726                           ;display.c: 406: start = cntr;
 29727  002CCC  C028  F027         	movff	__display_found@cntr,__display_found@start
 29728                           
 29729                           ;display.c: 407: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 29730  002CD0  EC56  F040         	call	_bootloader_get_file_size	;wreg free
 29731  002CD4  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 29732  002CD8  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 29733  002CDC  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 29734  002CE0  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 29735  002CE4  5028               	movf	__display_found@cntr,w,c
 29736  002CE6  0D01               	mullw	1
 29737  002CE8  0E28               	movlw	low (_display_content+40)
 29738  002CEA  24F3               	addwf	prodl,w,c
 29739  002CEC  6E23               	movwf	__display_itoa_u32@text,c
 29740  002CEE  0E02               	movlw	high (_display_content+40)
 29741  002CF0  20F4               	addwfc	prodh,w,c
 29742  002CF2  6E24               	movwf	__display_itoa_u32@text+1,c
 29743  002CF4  EC07  F006         	call	__display_itoa_u32	;wreg free
 29744  002CF8  2627               	addwf	__display_found@start,f,c
 29745                           
 29746                           ;display.c: 408: cntr = 0;
 29747  002CFA  0E00               	movlw	0
 29748  002CFC  6E28               	movwf	__display_found@cntr,c
 29749                           
 29750                           ;display.c: 409: while(found_line3b[cntr])
 29751  002CFE  D01C               	goto	l1598
 29752  002D00                     
 29753                           ;display.c: 410: display_content[2][start+cntr] = found_line3b[cntr++];
 29754  002D00  5028               	movf	__display_found@cntr,w,c
 29755  002D02  0D01               	mullw	1
 29756  002D04  0E91               	movlw	low _found_line3b
 29757  002D06  24F3               	addwf	prodl,w,c
 29758  002D08  6EF6               	movwf	tblptrl,c
 29759  002D0A  0E8E               	movlw	high _found_line3b
 29760  002D0C  20F4               	addwfc	prodh,w,c
 29761  002D0E  6EF7               	movwf	tblptrh,c
 29762  002D10                     	if	1	;There are 3 active tblptr bytes
 29763  002D10  6AF8               	clrf	tblptru,c
 29764  002D12  0E00               	movlw	low (__mediumconst shr (0+16))
 29765  002D14  22F8               	addwfc	tblptru,f,c
 29766  002D16                     	endif
 29767  002D16  5028               	movf	__display_found@cntr,w,c
 29768  002D18  C027  F025         	movff	__display_found@start,??__display_found
 29769  002D1C  6A26               	clrf	(??__display_found+1)& (0+255),c
 29770  002D1E  2625               	addwf	??__display_found,f,c
 29771  002D20  0E00               	movlw	0
 29772  002D22  2226               	addwfc	??__display_found+1,f,c
 29773  002D24  0E28               	movlw	low (_display_content+40)
 29774  002D26  2425               	addwf	??__display_found,w,c
 29775  002D28  6ED9               	movwf	fsr2l,c
 29776  002D2A  0E02               	movlw	high (_display_content+40)
 29777  002D2C  2026               	addwfc	??__display_found+1,w,c
 29778  002D2E  6EDA               	movwf	fsr2h,c
 29779  002D30  0008               	tblrd		*
 29780  002D32  CFF5 FFDF          	movff	tablat,indf2
 29781  002D36  2A28               	incf	__display_found@cntr,f,c
 29782  002D38                     l1598:
 29783  002D38  5028               	movf	__display_found@cntr,w,c
 29784  002D3A  0D01               	mullw	1
 29785  002D3C  0E91               	movlw	low _found_line3b
 29786  002D3E  24F3               	addwf	prodl,w,c
 29787  002D40  6EF6               	movwf	tblptrl,c
 29788  002D42  0E8E               	movlw	high _found_line3b
 29789  002D44  20F4               	addwfc	prodh,w,c
 29790  002D46  6EF7               	movwf	tblptrh,c
 29791  002D48                     	if	1	;There are 3 active tblptr bytes
 29792  002D48  6AF8               	clrf	tblptru,c
 29793  002D4A  0E00               	movlw	low (__mediumconst shr (0+16))
 29794  002D4C  22F8               	addwfc	tblptru,f,c
 29795  002D4E                     	endif
 29796  002D4E  0008               	tblrd		*
 29797  002D50  50F5               	movf	tablat,w,c
 29798  002D52  0900               	iorlw	0
 29799  002D54  A4D8               	btfss	status,2,c
 29800  002D56  D7D4               	goto	l1599
 29801                           
 29802                           ;display.c: 412: cntr = 0;
 29803  002D58  0E00               	movlw	0
 29804  002D5A  6E28               	movwf	__display_found@cntr,c
 29805                           
 29806                           ;display.c: 413: while(found_line4[cntr])
 29807  002D5C  D017               	goto	l1601
 29808  002D5E                     
 29809                           ;display.c: 414: display_content[3][cntr] = found_line4[cntr++];
 29810  002D5E  5028               	movf	__display_found@cntr,w,c
 29811  002D60  0D01               	mullw	1
 29812  002D62  0E20               	movlw	low _found_line4
 29813  002D64  24F3               	addwf	prodl,w,c
 29814  002D66  6EF6               	movwf	tblptrl,c
 29815  002D68  0E8D               	movlw	high _found_line4
 29816  002D6A  20F4               	addwfc	prodh,w,c
 29817  002D6C  6EF7               	movwf	tblptrh,c
 29818  002D6E                     	if	1	;There are 3 active tblptr bytes
 29819  002D6E  6AF8               	clrf	tblptru,c
 29820  002D70  0E00               	movlw	low (__mediumconst shr (0+16))
 29821  002D72  22F8               	addwfc	tblptru,f,c
 29822  002D74                     	endif
 29823  002D74  5028               	movf	__display_found@cntr,w,c
 29824  002D76  0D01               	mullw	1
 29825  002D78  0E3C               	movlw	low (_display_content+60)
 29826  002D7A  24F3               	addwf	prodl,w,c
 29827  002D7C  6ED9               	movwf	fsr2l,c
 29828  002D7E  0E02               	movlw	high (_display_content+60)
 29829  002D80  20F4               	addwfc	prodh,w,c
 29830  002D82  6EDA               	movwf	fsr2h,c
 29831  002D84  0008               	tblrd		*
 29832  002D86  CFF5 FFDF          	movff	tablat,indf2
 29833  002D8A  2A28               	incf	__display_found@cntr,f,c
 29834  002D8C                     l1601:
 29835  002D8C  5028               	movf	__display_found@cntr,w,c
 29836  002D8E  0D01               	mullw	1
 29837  002D90  0E20               	movlw	low _found_line4
 29838  002D92  24F3               	addwf	prodl,w,c
 29839  002D94  6EF6               	movwf	tblptrl,c
 29840  002D96  0E8D               	movlw	high _found_line4
 29841  002D98  20F4               	addwfc	prodh,w,c
 29842  002D9A  6EF7               	movwf	tblptrh,c
 29843  002D9C                     	if	1	;There are 3 active tblptr bytes
 29844  002D9C  6AF8               	clrf	tblptru,c
 29845  002D9E  0E00               	movlw	low (__mediumconst shr (0+16))
 29846  002DA0  22F8               	addwfc	tblptru,f,c
 29847  002DA2                     	endif
 29848  002DA2  0008               	tblrd		*
 29849  002DA4  50F5               	movf	tablat,w,c
 29850  002DA6  0900               	iorlw	0
 29851  002DA8  B4D8               	btfsc	status,2,c
 29852  002DAA  0012               	return	
 29853  002DAC  D7D8               	goto	l1602
 29854  002DAE                     __end_of__display_found:
 29855                           	opt stack 0
 29856                           tosu	equ	0xFFF
 29857                           tosh	equ	0xFFE
 29858                           tosl	equ	0xFFD
 29859                           pclath	equ	0xFFA
 29860                           tblptru	equ	0xFF8
 29861                           tblptrh	equ	0xFF7
 29862                           tblptrl	equ	0xFF6
 29863                           tablat	equ	0xFF5
 29864                           prodh	equ	0xFF4
 29865                           prodl	equ	0xFF3
 29866                           intcon	equ	0xFF2
 29867                           intcon2	equ	0xFF1
 29868                           intcon3	equ	0xFF0
 29869                           indf0	equ	0xFEF
 29870                           postinc0	equ	0xFEE
 29871                           fsr0h	equ	0xFEA
 29872                           fsr0l	equ	0xFE9
 29873                           wreg	equ	0xFE8
 29874                           indf1	equ	0xFE7
 29875                           postdec1	equ	0xFE5
 29876                           plusw1	equ	0xFE3
 29877                           fsr1h	equ	0xFE2
 29878                           fsr1l	equ	0xFE1
 29879                           indf2	equ	0xFDF
 29880                           postinc2	equ	0xFDE
 29881                           postdec2	equ	0xFDD
 29882                           plusw2	equ	0xFDB
 29883                           fsr2h	equ	0xFDA
 29884                           fsr2l	equ	0xFD9
 29885                           status	equ	0xFD8
 29886                           
 29887 ;; *************** function _bootloader_get_file_size *****************
 29888 ;; Defined at:
 29889 ;;		line 457 in file "bootloader.c"
 29890 ;; Parameters:    Size  Location     Type
 29891 ;;		None
 29892 ;; Auto vars:     Size  Location     Type
 29893 ;;		None
 29894 ;; Return value:  Size  Location     Type
 29895 ;;                  4    0[COMRAM] unsigned long 
 29896 ;; Registers used:
 29897 ;;		None
 29898 ;; Tracked objects:
 29899 ;;		On entry : 0/0
 29900 ;;		On exit  : 0/0
 29901 ;;		Unchanged: 0/0
 29902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29906 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29907 ;;Total ram usage:        4 bytes
 29908 ;; Hardware stack levels used:    1
 29909 ;; This function calls:
 29910 ;;		Nothing
 29911 ;; This function is called by:
 29912 ;;		__display_found
 29913 ;;		__fill_buffer_get_bootloader_details
 29914 ;; This function uses a non-reentrant model
 29915 ;;
 29916                           
 29917                           	psect	text143
 29918  0080AC                     __ptext143:
 29919                           	opt stack 0
 29920  0080AC                     _bootloader_get_file_size:
 29921                           	opt stack 25
 29922                           
 29923                           ;bootloader.c: 459: return hex_file_size;
 29924                           
 29925                           ;incstack = 0
 29926  0080AC  C0CB  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 29927  0080B0  C0CC  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 29928  0080B4  C0CD  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 29929  0080B8  C0CE  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 29930  0080BC  0012               	return		;funcret
 29931  0080BE                     __end_of_bootloader_get_file_size:
 29932                           	opt stack 0
 29933                           tosu	equ	0xFFF
 29934                           tosh	equ	0xFFE
 29935                           tosl	equ	0xFFD
 29936                           pclath	equ	0xFFA
 29937                           tblptru	equ	0xFF8
 29938                           tblptrh	equ	0xFF7
 29939                           tblptrl	equ	0xFF6
 29940                           tablat	equ	0xFF5
 29941                           prodh	equ	0xFF4
 29942                           prodl	equ	0xFF3
 29943                           intcon	equ	0xFF2
 29944                           intcon2	equ	0xFF1
 29945                           intcon3	equ	0xFF0
 29946                           indf0	equ	0xFEF
 29947                           postinc0	equ	0xFEE
 29948                           fsr0h	equ	0xFEA
 29949                           fsr0l	equ	0xFE9
 29950                           wreg	equ	0xFE8
 29951                           indf1	equ	0xFE7
 29952                           postdec1	equ	0xFE5
 29953                           plusw1	equ	0xFE3
 29954                           fsr1h	equ	0xFE2
 29955                           fsr1l	equ	0xFE1
 29956                           indf2	equ	0xFDF
 29957                           postinc2	equ	0xFDE
 29958                           postdec2	equ	0xFDD
 29959                           plusw2	equ	0xFDB
 29960                           fsr2h	equ	0xFDA
 29961                           fsr2l	equ	0xFD9
 29962                           status	equ	0xFD8
 29963                           
 29964 ;; *************** function __display_failed *****************
 29965 ;; Defined at:
 29966 ;;		line 455 in file "display.c"
 29967 ;; Parameters:    Size  Location     Type
 29968 ;;		None
 29969 ;; Auto vars:     Size  Location     Type
 29970 ;;  cntr            1   36[COMRAM] unsigned char 
 29971 ;;  start           1    0        unsigned char 
 29972 ;; Return value:  Size  Location     Type
 29973 ;;                  1    wreg      void 
 29974 ;; Registers used:
 29975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29976 ;; Tracked objects:
 29977 ;;		On entry : 0/0
 29978 ;;		On exit  : 0/0
 29979 ;;		Unchanged: 0/0
 29980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29985 ;;Total ram usage:        1 bytes
 29986 ;; Hardware stack levels used:    1
 29987 ;; Hardware stack levels required when called:    5
 29988 ;; This function calls:
 29989 ;;		__display_itoa_u16
 29990 ;;		__display_itoa_u32
 29991 ;;		_bootloader_get_entries
 29992 ;;		_bootloader_get_error
 29993 ;;		_bootloader_get_rec_address
 29994 ;; This function is called by:
 29995 ;;		_display_prepare
 29996 ;; This function uses a non-reentrant model
 29997 ;;
 29998                           
 29999                           	psect	text144
 30000  00129A                     __ptext144:
 30001                           	opt stack 0
 30002  00129A                     __display_failed:
 30003                           	opt stack 21
 30004                           
 30005                           ;display.c: 457: uint8_t cntr;;display.c: 458: uint8_t start;;display.c: 459: cntr = 0;
 30006                           
 30007                           ;incstack = 0
 30008  00129A  0E00               	movlw	0
 30009  00129C  6E25               	movwf	__display_failed@cntr,c
 30010                           
 30011                           ;display.c: 460: while(failed_line1[cntr])
 30012  00129E  D017               	goto	l1634
 30013  0012A0                     
 30014                           ;display.c: 461: display_content[0][cntr] = failed_line1[cntr++];
 30015  0012A0  5025               	movf	__display_failed@cntr,w,c
 30016  0012A2  0D01               	mullw	1
 30017  0012A4  0EA4               	movlw	low _failed_line1
 30018  0012A6  24F3               	addwf	prodl,w,c
 30019  0012A8  6EF6               	movwf	tblptrl,c
 30020  0012AA  0E8D               	movlw	high _failed_line1
 30021  0012AC  20F4               	addwfc	prodh,w,c
 30022  0012AE  6EF7               	movwf	tblptrh,c
 30023  0012B0                     	if	1	;There are 3 active tblptr bytes
 30024  0012B0  6AF8               	clrf	tblptru,c
 30025  0012B2  0E00               	movlw	low (__mediumconst shr (0+16))
 30026  0012B4  22F8               	addwfc	tblptru,f,c
 30027  0012B6                     	endif
 30028  0012B6  5025               	movf	__display_failed@cntr,w,c
 30029  0012B8  0D01               	mullw	1
 30030  0012BA  0E00               	movlw	low _display_content
 30031  0012BC  24F3               	addwf	prodl,w,c
 30032  0012BE  6ED9               	movwf	fsr2l,c
 30033  0012C0  0E02               	movlw	high _display_content
 30034  0012C2  20F4               	addwfc	prodh,w,c
 30035  0012C4  6EDA               	movwf	fsr2h,c
 30036  0012C6  0008               	tblrd		*
 30037  0012C8  CFF5 FFDF          	movff	tablat,indf2
 30038  0012CC  2A25               	incf	__display_failed@cntr,f,c
 30039  0012CE                     l1634:
 30040  0012CE  5025               	movf	__display_failed@cntr,w,c
 30041  0012D0  0D01               	mullw	1
 30042  0012D2  0EA4               	movlw	low _failed_line1
 30043  0012D4  24F3               	addwf	prodl,w,c
 30044  0012D6  6EF6               	movwf	tblptrl,c
 30045  0012D8  0E8D               	movlw	high _failed_line1
 30046  0012DA  20F4               	addwfc	prodh,w,c
 30047  0012DC  6EF7               	movwf	tblptrh,c
 30048  0012DE                     	if	1	;There are 3 active tblptr bytes
 30049  0012DE  6AF8               	clrf	tblptru,c
 30050  0012E0  0E00               	movlw	low (__mediumconst shr (0+16))
 30051  0012E2  22F8               	addwfc	tblptru,f,c
 30052  0012E4                     	endif
 30053  0012E4  0008               	tblrd		*
 30054  0012E6  50F5               	movf	tablat,w,c
 30055  0012E8  0900               	iorlw	0
 30056  0012EA  A4D8               	btfss	status,2,c
 30057  0012EC  D7D9               	goto	l1635
 30058                           
 30059                           ;display.c: 462: cntr = 0;
 30060  0012EE  0E00               	movlw	0
 30061  0012F0  6E25               	movwf	__display_failed@cntr,c
 30062                           
 30063                           ;display.c: 463: while(failed_line2[cntr])
 30064  0012F2  D017               	goto	l1637
 30065  0012F4                     
 30066                           ;display.c: 464: display_content[1][cntr] = failed_line2[cntr++];
 30067  0012F4  5025               	movf	__display_failed@cntr,w,c
 30068  0012F6  0D01               	mullw	1
 30069  0012F8  0E0E               	movlw	low _failed_line2
 30070  0012FA  24F3               	addwf	prodl,w,c
 30071  0012FC  6EF6               	movwf	tblptrl,c
 30072  0012FE  0E8D               	movlw	high _failed_line2
 30073  001300  20F4               	addwfc	prodh,w,c
 30074  001302  6EF7               	movwf	tblptrh,c
 30075  001304                     	if	1	;There are 3 active tblptr bytes
 30076  001304  6AF8               	clrf	tblptru,c
 30077  001306  0E00               	movlw	low (__mediumconst shr (0+16))
 30078  001308  22F8               	addwfc	tblptru,f,c
 30079  00130A                     	endif
 30080  00130A  5025               	movf	__display_failed@cntr,w,c
 30081  00130C  0D01               	mullw	1
 30082  00130E  0E14               	movlw	low (_display_content+20)
 30083  001310  24F3               	addwf	prodl,w,c
 30084  001312  6ED9               	movwf	fsr2l,c
 30085  001314  0E02               	movlw	high (_display_content+20)
 30086  001316  20F4               	addwfc	prodh,w,c
 30087  001318  6EDA               	movwf	fsr2h,c
 30088  00131A  0008               	tblrd		*
 30089  00131C  CFF5 FFDF          	movff	tablat,indf2
 30090  001320  2A25               	incf	__display_failed@cntr,f,c
 30091  001322                     l1637:
 30092  001322  5025               	movf	__display_failed@cntr,w,c
 30093  001324  0D01               	mullw	1
 30094  001326  0E0E               	movlw	low _failed_line2
 30095  001328  24F3               	addwf	prodl,w,c
 30096  00132A  6EF6               	movwf	tblptrl,c
 30097  00132C  0E8D               	movlw	high _failed_line2
 30098  00132E  20F4               	addwfc	prodh,w,c
 30099  001330  6EF7               	movwf	tblptrh,c
 30100  001332                     	if	1	;There are 3 active tblptr bytes
 30101  001332  6AF8               	clrf	tblptru,c
 30102  001334  0E00               	movlw	low (__mediumconst shr (0+16))
 30103  001336  22F8               	addwfc	tblptru,f,c
 30104  001338                     	endif
 30105  001338  0008               	tblrd		*
 30106  00133A  50F5               	movf	tablat,w,c
 30107  00133C  0900               	iorlw	0
 30108  00133E  A4D8               	btfss	status,2,c
 30109  001340  D7D9               	goto	l1638
 30110                           
 30111                           ;display.c: 466: cntr = 0;
 30112  001342  0E00               	movlw	0
 30113  001344  6E25               	movwf	__display_failed@cntr,c
 30114                           
 30115                           ;display.c: 467: switch(bootloader_get_error())
 30116  001346  D0D6               	goto	l1640
 30117  001348                     
 30118                           ;display.c: 471: display_content[2][cntr] = failed_line3_startCode[cntr++];
 30119  001348  5025               	movf	__display_failed@cntr,w,c
 30120  00134A  0D01               	mullw	1
 30121  00134C  0ED6               	movlw	low _failed_line3_startCode
 30122  00134E  24F3               	addwf	prodl,w,c
 30123  001350  6EF6               	movwf	tblptrl,c
 30124  001352  0E8C               	movlw	high _failed_line3_startCode
 30125  001354  20F4               	addwfc	prodh,w,c
 30126  001356  6EF7               	movwf	tblptrh,c
 30127  001358                     	if	1	;There are 3 active tblptr bytes
 30128  001358  6AF8               	clrf	tblptru,c
 30129  00135A  0E00               	movlw	low (__mediumconst shr (0+16))
 30130  00135C  22F8               	addwfc	tblptru,f,c
 30131  00135E                     	endif
 30132  00135E  5025               	movf	__display_failed@cntr,w,c
 30133  001360  0D01               	mullw	1
 30134  001362  0E28               	movlw	low (_display_content+40)
 30135  001364  24F3               	addwf	prodl,w,c
 30136  001366  6ED9               	movwf	fsr2l,c
 30137  001368  0E02               	movlw	high (_display_content+40)
 30138  00136A  20F4               	addwfc	prodh,w,c
 30139  00136C  6EDA               	movwf	fsr2h,c
 30140  00136E  0008               	tblrd		*
 30141  001370  CFF5 FFDF          	movff	tablat,indf2
 30142  001374  2A25               	incf	__display_failed@cntr,f,c
 30143  001376  5025               	movf	__display_failed@cntr,w,c
 30144  001378  0D01               	mullw	1
 30145  00137A  0ED6               	movlw	low _failed_line3_startCode
 30146  00137C  24F3               	addwf	prodl,w,c
 30147  00137E  6EF6               	movwf	tblptrl,c
 30148  001380  0E8C               	movlw	high _failed_line3_startCode
 30149  001382  20F4               	addwfc	prodh,w,c
 30150  001384  6EF7               	movwf	tblptrh,c
 30151  001386                     	if	1	;There are 3 active tblptr bytes
 30152  001386  6AF8               	clrf	tblptru,c
 30153  001388  0E00               	movlw	low (__mediumconst shr (0+16))
 30154  00138A  22F8               	addwfc	tblptru,f,c
 30155  00138C                     	endif
 30156  00138C  0008               	tblrd		*
 30157  00138E  50F5               	movf	tablat,w,c
 30158  001390  0900               	iorlw	0
 30159  001392  B4D8               	btfsc	status,2,c
 30160  001394  D0C0               	goto	l1645
 30161  001396  D7D8               	goto	l1643
 30162  001398                     
 30163                           ;display.c: 476: display_content[2][cntr] = failed_line3_checksum[cntr++];
 30164  001398  5025               	movf	__display_failed@cntr,w,c
 30165  00139A  0D01               	mullw	1
 30166  00139C  0E04               	movlw	low _failed_line3_checksum
 30167  00139E  24F3               	addwf	prodl,w,c
 30168  0013A0  6EF6               	movwf	tblptrl,c
 30169  0013A2  0E8E               	movlw	high _failed_line3_checksum
 30170  0013A4  20F4               	addwfc	prodh,w,c
 30171  0013A6  6EF7               	movwf	tblptrh,c
 30172  0013A8                     	if	1	;There are 3 active tblptr bytes
 30173  0013A8  6AF8               	clrf	tblptru,c
 30174  0013AA  0E00               	movlw	low (__mediumconst shr (0+16))
 30175  0013AC  22F8               	addwfc	tblptru,f,c
 30176  0013AE                     	endif
 30177  0013AE  5025               	movf	__display_failed@cntr,w,c
 30178  0013B0  0D01               	mullw	1
 30179  0013B2  0E28               	movlw	low (_display_content+40)
 30180  0013B4  24F3               	addwf	prodl,w,c
 30181  0013B6  6ED9               	movwf	fsr2l,c
 30182  0013B8  0E02               	movlw	high (_display_content+40)
 30183  0013BA  20F4               	addwfc	prodh,w,c
 30184  0013BC  6EDA               	movwf	fsr2h,c
 30185  0013BE  0008               	tblrd		*
 30186  0013C0  CFF5 FFDF          	movff	tablat,indf2
 30187  0013C4  2A25               	incf	__display_failed@cntr,f,c
 30188  0013C6  5025               	movf	__display_failed@cntr,w,c
 30189  0013C8  0D01               	mullw	1
 30190  0013CA  0E04               	movlw	low _failed_line3_checksum
 30191  0013CC  24F3               	addwf	prodl,w,c
 30192  0013CE  6EF6               	movwf	tblptrl,c
 30193  0013D0  0E8E               	movlw	high _failed_line3_checksum
 30194  0013D2  20F4               	addwfc	prodh,w,c
 30195  0013D4  6EF7               	movwf	tblptrh,c
 30196  0013D6                     	if	1	;There are 3 active tblptr bytes
 30197  0013D6  6AF8               	clrf	tblptru,c
 30198  0013D8  0E00               	movlw	low (__mediumconst shr (0+16))
 30199  0013DA  22F8               	addwfc	tblptru,f,c
 30200  0013DC                     	endif
 30201  0013DC  0008               	tblrd		*
 30202  0013DE  50F5               	movf	tablat,w,c
 30203  0013E0  0900               	iorlw	0
 30204  0013E2  B4D8               	btfsc	status,2,c
 30205  0013E4  D098               	goto	l1645
 30206  0013E6  D7D8               	goto	l1648
 30207  0013E8                     
 30208                           ;display.c: 483: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 30209  0013E8  5025               	movf	__display_failed@cntr,w,c
 30210  0013EA  0D01               	mullw	1
 30211  0013EC  0E13               	movlw	low _failed_line3_noNextRecord
 30212  0013EE  24F3               	addwf	prodl,w,c
 30213  0013F0  6EF6               	movwf	tblptrl,c
 30214  0013F2  0E8E               	movlw	high _failed_line3_noNextRecord
 30215  0013F4  20F4               	addwfc	prodh,w,c
 30216  0013F6  6EF7               	movwf	tblptrh,c
 30217  0013F8                     	if	1	;There are 3 active tblptr bytes
 30218  0013F8  6AF8               	clrf	tblptru,c
 30219  0013FA  0E00               	movlw	low (__mediumconst shr (0+16))
 30220  0013FC  22F8               	addwfc	tblptru,f,c
 30221  0013FE                     	endif
 30222  0013FE  5025               	movf	__display_failed@cntr,w,c
 30223  001400  0D01               	mullw	1
 30224  001402  0E28               	movlw	low (_display_content+40)
 30225  001404  24F3               	addwf	prodl,w,c
 30226  001406  6ED9               	movwf	fsr2l,c
 30227  001408  0E02               	movlw	high (_display_content+40)
 30228  00140A  20F4               	addwfc	prodh,w,c
 30229  00140C  6EDA               	movwf	fsr2h,c
 30230  00140E  0008               	tblrd		*
 30231  001410  CFF5 FFDF          	movff	tablat,indf2
 30232  001414  2A25               	incf	__display_failed@cntr,f,c
 30233  001416  5025               	movf	__display_failed@cntr,w,c
 30234  001418  0D01               	mullw	1
 30235  00141A  0E13               	movlw	low _failed_line3_noNextRecord
 30236  00141C  24F3               	addwf	prodl,w,c
 30237  00141E  6EF6               	movwf	tblptrl,c
 30238  001420  0E8E               	movlw	high _failed_line3_noNextRecord
 30239  001422  20F4               	addwfc	prodh,w,c
 30240  001424  6EF7               	movwf	tblptrh,c
 30241  001426                     	if	1	;There are 3 active tblptr bytes
 30242  001426  6AF8               	clrf	tblptru,c
 30243  001428  0E00               	movlw	low (__mediumconst shr (0+16))
 30244  00142A  22F8               	addwfc	tblptru,f,c
 30245  00142C                     	endif
 30246  00142C  0008               	tblrd		*
 30247  00142E  50F5               	movf	tablat,w,c
 30248  001430  0900               	iorlw	0
 30249  001432  B4D8               	btfsc	status,2,c
 30250  001434  D070               	goto	l1645
 30251  001436  D7D8               	goto	l1652
 30252  001438                     
 30253                           ;display.c: 488: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 30254  001438  5025               	movf	__display_failed@cntr,w,c
 30255  00143A  0D01               	mullw	1
 30256  00143C  0E31               	movlw	low _failed_line3_dataTooLong
 30257  00143E  24F3               	addwf	prodl,w,c
 30258  001440  6EF6               	movwf	tblptrl,c
 30259  001442  0E8E               	movlw	high _failed_line3_dataTooLong
 30260  001444  20F4               	addwfc	prodh,w,c
 30261  001446  6EF7               	movwf	tblptrh,c
 30262  001448                     	if	1	;There are 3 active tblptr bytes
 30263  001448  6AF8               	clrf	tblptru,c
 30264  00144A  0E00               	movlw	low (__mediumconst shr (0+16))
 30265  00144C  22F8               	addwfc	tblptru,f,c
 30266  00144E                     	endif
 30267  00144E  5025               	movf	__display_failed@cntr,w,c
 30268  001450  0D01               	mullw	1
 30269  001452  0E28               	movlw	low (_display_content+40)
 30270  001454  24F3               	addwf	prodl,w,c
 30271  001456  6ED9               	movwf	fsr2l,c
 30272  001458  0E02               	movlw	high (_display_content+40)
 30273  00145A  20F4               	addwfc	prodh,w,c
 30274  00145C  6EDA               	movwf	fsr2h,c
 30275  00145E  0008               	tblrd		*
 30276  001460  CFF5 FFDF          	movff	tablat,indf2
 30277  001464  2A25               	incf	__display_failed@cntr,f,c
 30278  001466  5025               	movf	__display_failed@cntr,w,c
 30279  001468  0D01               	mullw	1
 30280  00146A  0E31               	movlw	low _failed_line3_dataTooLong
 30281  00146C  24F3               	addwf	prodl,w,c
 30282  00146E  6EF6               	movwf	tblptrl,c
 30283  001470  0E8E               	movlw	high _failed_line3_dataTooLong
 30284  001472  20F4               	addwfc	prodh,w,c
 30285  001474  6EF7               	movwf	tblptrh,c
 30286  001476                     	if	1	;There are 3 active tblptr bytes
 30287  001476  6AF8               	clrf	tblptru,c
 30288  001478  0E00               	movlw	low (__mediumconst shr (0+16))
 30289  00147A  22F8               	addwfc	tblptru,f,c
 30290  00147C                     	endif
 30291  00147C  0008               	tblrd		*
 30292  00147E  50F5               	movf	tablat,w,c
 30293  001480  0900               	iorlw	0
 30294  001482  B4D8               	btfsc	status,2,c
 30295  001484  D048               	goto	l1645
 30296  001486  D7D8               	goto	l1656
 30297  001488                     
 30298                           ;display.c: 493: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 30299  001488  5025               	movf	__display_failed@cntr,w,c
 30300  00148A  0D01               	mullw	1
 30301  00148C  0EAE               	movlw	low _failed_line3_addressRange
 30302  00148E  24F3               	addwf	prodl,w,c
 30303  001490  6EF6               	movwf	tblptrl,c
 30304  001492  0E8C               	movlw	high _failed_line3_addressRange
 30305  001494  20F4               	addwfc	prodh,w,c
 30306  001496  6EF7               	movwf	tblptrh,c
 30307  001498                     	if	1	;There are 3 active tblptr bytes
 30308  001498  6AF8               	clrf	tblptru,c
 30309  00149A  0E00               	movlw	low (__mediumconst shr (0+16))
 30310  00149C  22F8               	addwfc	tblptru,f,c
 30311  00149E                     	endif
 30312  00149E  5025               	movf	__display_failed@cntr,w,c
 30313  0014A0  0D01               	mullw	1
 30314  0014A2  0E28               	movlw	low (_display_content+40)
 30315  0014A4  24F3               	addwf	prodl,w,c
 30316  0014A6  6ED9               	movwf	fsr2l,c
 30317  0014A8  0E02               	movlw	high (_display_content+40)
 30318  0014AA  20F4               	addwfc	prodh,w,c
 30319  0014AC  6EDA               	movwf	fsr2h,c
 30320  0014AE  0008               	tblrd		*
 30321  0014B0  CFF5 FFDF          	movff	tablat,indf2
 30322  0014B4  2A25               	incf	__display_failed@cntr,f,c
 30323  0014B6  5025               	movf	__display_failed@cntr,w,c
 30324  0014B8  0D01               	mullw	1
 30325  0014BA  0EAE               	movlw	low _failed_line3_addressRange
 30326  0014BC  24F3               	addwf	prodl,w,c
 30327  0014BE  6EF6               	movwf	tblptrl,c
 30328  0014C0  0E8C               	movlw	high _failed_line3_addressRange
 30329  0014C2  20F4               	addwfc	prodh,w,c
 30330  0014C4  6EF7               	movwf	tblptrh,c
 30331  0014C6                     	if	1	;There are 3 active tblptr bytes
 30332  0014C6  6AF8               	clrf	tblptru,c
 30333  0014C8  0E00               	movlw	low (__mediumconst shr (0+16))
 30334  0014CA  22F8               	addwfc	tblptru,f,c
 30335  0014CC                     	endif
 30336  0014CC  0008               	tblrd		*
 30337  0014CE  50F5               	movf	tablat,w,c
 30338  0014D0  0900               	iorlw	0
 30339  0014D2  A4D8               	btfss	status,2,c
 30340  0014D4  D7D9               	goto	l1660
 30341                           
 30342                           ;display.c: 494: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 30343  0014D6  ECC3  F040         	call	_bootloader_get_rec_address	;wreg free
 30344  0014DA  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 30345  0014DE  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 30346  0014E2  6A21               	clrf	__display_itoa_u32@value+2,c
 30347  0014E4  6A22               	clrf	__display_itoa_u32@value+3,c
 30348  0014E6  0E4A               	movlw	low (_display_content+74)
 30349  0014E8  6E23               	movwf	__display_itoa_u32@text,c
 30350  0014EA  0E02               	movlw	high (_display_content+74)
 30351  0014EC  6E24               	movwf	__display_itoa_u32@text+1,c
 30352  0014EE  EC07  F006         	call	__display_itoa_u32	;wreg free
 30353                           
 30354                           ;display.c: 497: }
 30355                           
 30356                           ;display.c: 495: break;
 30357  0014F2  D011               	goto	l1645
 30358  0014F4                     l1640:
 30359  0014F4  ECFC  F040         	call	_bootloader_get_error	;wreg free
 30360                           
 30361                           ; Switch size 1, requested type "space"
 30362                           ; Number of cases is 5, Range of values is 11 to 15
 30363                           ; switch strategies available:
 30364                           ; Name         Instructions Cycles
 30365                           ; simple_byte           16     9 (average)
 30366                           ;	Chosen strategy is simple_byte
 30367  0014F8  0A0B               	xorlw	11	; case 11
 30368  0014FA  B4D8               	btfsc	status,2,c
 30369  0014FC  D7DC               	goto	l1659
 30370  0014FE  0A07               	xorlw	7	; case 12
 30371  001500  B4D8               	btfsc	status,2,c
 30372  001502  D7B1               	goto	l1655
 30373  001504  0A01               	xorlw	1	; case 13
 30374  001506  B4D8               	btfsc	status,2,c
 30375  001508  D786               	goto	l1651
 30376  00150A  0A03               	xorlw	3	; case 14
 30377  00150C  B4D8               	btfsc	status,2,c
 30378  00150E  D75B               	goto	l1647
 30379  001510  0A01               	xorlw	1	; case 15
 30380  001512  B4D8               	btfsc	status,2,c
 30381  001514  D730               	goto	l1642
 30382  001516                     l1645:
 30383                           
 30384                           ;display.c: 499: cntr = 0;
 30385  001516  0E00               	movlw	0
 30386  001518  6E25               	movwf	__display_failed@cntr,c
 30387                           
 30388                           ;display.c: 500: while(failed_line4[cntr])
 30389  00151A  D017               	goto	l1662
 30390  00151C                     
 30391                           ;display.c: 501: display_content[3][cntr] = failed_line4[cntr++];
 30392  00151C  5025               	movf	__display_failed@cntr,w,c
 30393  00151E  0D01               	mullw	1
 30394  001520  0E6B               	movlw	low _failed_line4
 30395  001522  24F3               	addwf	prodl,w,c
 30396  001524  6EF6               	movwf	tblptrl,c
 30397  001526  0E8E               	movlw	high _failed_line4
 30398  001528  20F4               	addwfc	prodh,w,c
 30399  00152A  6EF7               	movwf	tblptrh,c
 30400  00152C                     	if	1	;There are 3 active tblptr bytes
 30401  00152C  6AF8               	clrf	tblptru,c
 30402  00152E  0E00               	movlw	low (__mediumconst shr (0+16))
 30403  001530  22F8               	addwfc	tblptru,f,c
 30404  001532                     	endif
 30405  001532  5025               	movf	__display_failed@cntr,w,c
 30406  001534  0D01               	mullw	1
 30407  001536  0E3C               	movlw	low (_display_content+60)
 30408  001538  24F3               	addwf	prodl,w,c
 30409  00153A  6ED9               	movwf	fsr2l,c
 30410  00153C  0E02               	movlw	high (_display_content+60)
 30411  00153E  20F4               	addwfc	prodh,w,c
 30412  001540  6EDA               	movwf	fsr2h,c
 30413  001542  0008               	tblrd		*
 30414  001544  CFF5 FFDF          	movff	tablat,indf2
 30415  001548  2A25               	incf	__display_failed@cntr,f,c
 30416  00154A                     l1662:
 30417  00154A  5025               	movf	__display_failed@cntr,w,c
 30418  00154C  0D01               	mullw	1
 30419  00154E  0E6B               	movlw	low _failed_line4
 30420  001550  24F3               	addwf	prodl,w,c
 30421  001552  6EF6               	movwf	tblptrl,c
 30422  001554  0E8E               	movlw	high _failed_line4
 30423  001556  20F4               	addwfc	prodh,w,c
 30424  001558  6EF7               	movwf	tblptrh,c
 30425  00155A                     	if	1	;There are 3 active tblptr bytes
 30426  00155A  6AF8               	clrf	tblptru,c
 30427  00155C  0E00               	movlw	low (__mediumconst shr (0+16))
 30428  00155E  22F8               	addwfc	tblptru,f,c
 30429  001560                     	endif
 30430  001560  0008               	tblrd		*
 30431  001562  50F5               	movf	tablat,w,c
 30432  001564  0900               	iorlw	0
 30433  001566  A4D8               	btfss	status,2,c
 30434  001568  D7D9               	goto	l1663
 30435                           
 30436                           ;display.c: 502: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 30437  00156A  ECC8  F040         	call	_bootloader_get_entries	;wreg free
 30438  00156E  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 30439  001572  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 30440  001576  6A1B               	clrf	__display_itoa_u16@value+2,c
 30441  001578  6A1C               	clrf	__display_itoa_u16@value+3,c
 30442  00157A  5025               	movf	__display_failed@cntr,w,c
 30443  00157C  0D01               	mullw	1
 30444  00157E  0E3C               	movlw	low (_display_content+60)
 30445  001580  24F3               	addwf	prodl,w,c
 30446  001582  6E1D               	movwf	__display_itoa_u16@text,c
 30447  001584  0E02               	movlw	high (_display_content+60)
 30448  001586  20F4               	addwfc	prodh,w,c
 30449  001588  6E1E               	movwf	__display_itoa_u16@text+1,c
 30450  00158A  EC74  F02A         	call	__display_itoa_u16	;wreg free
 30451  00158E  0012               	return		;funcret
 30452  001590                     __end_of__display_failed:
 30453                           	opt stack 0
 30454                           tosu	equ	0xFFF
 30455                           tosh	equ	0xFFE
 30456                           tosl	equ	0xFFD
 30457                           pclath	equ	0xFFA
 30458                           tblptru	equ	0xFF8
 30459                           tblptrh	equ	0xFF7
 30460                           tblptrl	equ	0xFF6
 30461                           tablat	equ	0xFF5
 30462                           prodh	equ	0xFF4
 30463                           prodl	equ	0xFF3
 30464                           intcon	equ	0xFF2
 30465                           intcon2	equ	0xFF1
 30466                           intcon3	equ	0xFF0
 30467                           indf0	equ	0xFEF
 30468                           postinc0	equ	0xFEE
 30469                           fsr0h	equ	0xFEA
 30470                           fsr0l	equ	0xFE9
 30471                           wreg	equ	0xFE8
 30472                           indf1	equ	0xFE7
 30473                           postdec1	equ	0xFE5
 30474                           plusw1	equ	0xFE3
 30475                           fsr1h	equ	0xFE2
 30476                           fsr1l	equ	0xFE1
 30477                           indf2	equ	0xFDF
 30478                           postinc2	equ	0xFDE
 30479                           postdec2	equ	0xFDD
 30480                           plusw2	equ	0xFDB
 30481                           fsr2h	equ	0xFDA
 30482                           fsr2l	equ	0xFD9
 30483                           status	equ	0xFD8
 30484                           
 30485 ;; *************** function _bootloader_get_rec_address *****************
 30486 ;; Defined at:
 30487 ;;		line 482 in file "bootloader.c"
 30488 ;; Parameters:    Size  Location     Type
 30489 ;;		None
 30490 ;; Auto vars:     Size  Location     Type
 30491 ;;		None
 30492 ;; Return value:  Size  Location     Type
 30493 ;;                  2    0[COMRAM] unsigned int 
 30494 ;; Registers used:
 30495 ;;		None
 30496 ;; Tracked objects:
 30497 ;;		On entry : 0/0
 30498 ;;		On exit  : 0/0
 30499 ;;		Unchanged: 0/0
 30500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30505 ;;Total ram usage:        2 bytes
 30506 ;; Hardware stack levels used:    1
 30507 ;; This function calls:
 30508 ;;		Nothing
 30509 ;; This function is called by:
 30510 ;;		__display_failed
 30511 ;;		__fill_buffer_get_bootloader_details
 30512 ;; This function uses a non-reentrant model
 30513 ;;
 30514                           
 30515                           	psect	text145
 30516  008186                     __ptext145:
 30517                           	opt stack 0
 30518  008186                     _bootloader_get_rec_address:
 30519                           	opt stack 25
 30520                           
 30521                           ;bootloader.c: 485: return hex_file_entry.address;
 30522                           
 30523                           ;incstack = 0
 30524  008186  C1BC  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 30525  00818A  C1BD  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 30526  00818E  0012               	return		;funcret
 30527  008190                     __end_of_bootloader_get_rec_address:
 30528                           	opt stack 0
 30529                           tosu	equ	0xFFF
 30530                           tosh	equ	0xFFE
 30531                           tosl	equ	0xFFD
 30532                           pclath	equ	0xFFA
 30533                           tblptru	equ	0xFF8
 30534                           tblptrh	equ	0xFF7
 30535                           tblptrl	equ	0xFF6
 30536                           tablat	equ	0xFF5
 30537                           prodh	equ	0xFF4
 30538                           prodl	equ	0xFF3
 30539                           intcon	equ	0xFF2
 30540                           intcon2	equ	0xFF1
 30541                           intcon3	equ	0xFF0
 30542                           indf0	equ	0xFEF
 30543                           postinc0	equ	0xFEE
 30544                           fsr0h	equ	0xFEA
 30545                           fsr0l	equ	0xFE9
 30546                           wreg	equ	0xFE8
 30547                           indf1	equ	0xFE7
 30548                           postdec1	equ	0xFE5
 30549                           plusw1	equ	0xFE3
 30550                           fsr1h	equ	0xFE2
 30551                           fsr1l	equ	0xFE1
 30552                           indf2	equ	0xFDF
 30553                           postinc2	equ	0xFDE
 30554                           postdec2	equ	0xFDD
 30555                           plusw2	equ	0xFDB
 30556                           fsr2h	equ	0xFDA
 30557                           fsr2l	equ	0xFD9
 30558                           status	equ	0xFD8
 30559                           
 30560 ;; *************** function _bootloader_get_error *****************
 30561 ;; Defined at:
 30562 ;;		line 472 in file "bootloader.c"
 30563 ;; Parameters:    Size  Location     Type
 30564 ;;		None
 30565 ;; Auto vars:     Size  Location     Type
 30566 ;;		None
 30567 ;; Return value:  Size  Location     Type
 30568 ;;                  1    wreg      enum E7014
 30569 ;; Registers used:
 30570 ;;		wreg, status,2
 30571 ;; Tracked objects:
 30572 ;;		On entry : 0/0
 30573 ;;		On exit  : 0/0
 30574 ;;		Unchanged: 0/0
 30575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30580 ;;Total ram usage:        0 bytes
 30581 ;; Hardware stack levels used:    1
 30582 ;; This function calls:
 30583 ;;		Nothing
 30584 ;; This function is called by:
 30585 ;;		__display_failed
 30586 ;;		__fill_buffer_get_bootloader_details
 30587 ;; This function uses a non-reentrant model
 30588 ;;
 30589                           
 30590                           	psect	text146
 30591  0081F8                     __ptext146:
 30592                           	opt stack 0
 30593  0081F8                     _bootloader_get_error:
 30594                           	opt stack 25
 30595                           
 30596                           ;bootloader.c: 474: return last_error;
 30597                           
 30598                           ;incstack = 0
 30599  0081F8  0100               	movlb	0	; () banked
 30600  0081FA  51DE               	movf	_last_error& (0+255),w,b
 30601  0081FC  0012               	return	
 30602  0081FE                     __end_of_bootloader_get_error:
 30603                           	opt stack 0
 30604                           tosu	equ	0xFFF
 30605                           tosh	equ	0xFFE
 30606                           tosl	equ	0xFFD
 30607                           pclath	equ	0xFFA
 30608                           tblptru	equ	0xFF8
 30609                           tblptrh	equ	0xFF7
 30610                           tblptrl	equ	0xFF6
 30611                           tablat	equ	0xFF5
 30612                           prodh	equ	0xFF4
 30613                           prodl	equ	0xFF3
 30614                           intcon	equ	0xFF2
 30615                           intcon2	equ	0xFF1
 30616                           intcon3	equ	0xFF0
 30617                           indf0	equ	0xFEF
 30618                           postinc0	equ	0xFEE
 30619                           fsr0h	equ	0xFEA
 30620                           fsr0l	equ	0xFE9
 30621                           wreg	equ	0xFE8
 30622                           indf1	equ	0xFE7
 30623                           postdec1	equ	0xFE5
 30624                           plusw1	equ	0xFE3
 30625                           fsr1h	equ	0xFE2
 30626                           fsr1l	equ	0xFE1
 30627                           indf2	equ	0xFDF
 30628                           postinc2	equ	0xFDE
 30629                           postdec2	equ	0xFDD
 30630                           plusw2	equ	0xFDB
 30631                           fsr2h	equ	0xFDA
 30632                           fsr2l	equ	0xFD9
 30633                           status	equ	0xFD8
 30634                           
 30635 ;; *************** function _bootloader_get_entries *****************
 30636 ;; Defined at:
 30637 ;;		line 462 in file "bootloader.c"
 30638 ;; Parameters:    Size  Location     Type
 30639 ;;		None
 30640 ;; Auto vars:     Size  Location     Type
 30641 ;;		None
 30642 ;; Return value:  Size  Location     Type
 30643 ;;                  2    0[COMRAM] unsigned int 
 30644 ;; Registers used:
 30645 ;;		None
 30646 ;; Tracked objects:
 30647 ;;		On entry : 0/0
 30648 ;;		On exit  : 0/0
 30649 ;;		Unchanged: 0/0
 30650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30655 ;;Total ram usage:        2 bytes
 30656 ;; Hardware stack levels used:    1
 30657 ;; This function calls:
 30658 ;;		Nothing
 30659 ;; This function is called by:
 30660 ;;		__display_verify
 30661 ;;		__display_failed
 30662 ;;		__display_programming
 30663 ;;		__fill_buffer_get_bootloader_details
 30664 ;; This function uses a non-reentrant model
 30665 ;;
 30666                           
 30667                           	psect	text147
 30668  008190                     __ptext147:
 30669                           	opt stack 0
 30670  008190                     _bootloader_get_entries:
 30671                           	opt stack 25
 30672                           
 30673                           ;bootloader.c: 464: return hex_file_entries;
 30674                           
 30675                           ; BSR set to: 0
 30676                           ;incstack = 0
 30677  008190  C174  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30678  008194  C175  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30679  008198  0012               	return		;funcret
 30680  00819A                     __end_of_bootloader_get_entries:
 30681                           	opt stack 0
 30682                           tosu	equ	0xFFF
 30683                           tosh	equ	0xFFE
 30684                           tosl	equ	0xFFD
 30685                           pclath	equ	0xFFA
 30686                           tblptru	equ	0xFF8
 30687                           tblptrh	equ	0xFF7
 30688                           tblptrl	equ	0xFF6
 30689                           tablat	equ	0xFF5
 30690                           prodh	equ	0xFF4
 30691                           prodl	equ	0xFF3
 30692                           intcon	equ	0xFF2
 30693                           intcon2	equ	0xFF1
 30694                           intcon3	equ	0xFF0
 30695                           indf0	equ	0xFEF
 30696                           postinc0	equ	0xFEE
 30697                           fsr0h	equ	0xFEA
 30698                           fsr0l	equ	0xFE9
 30699                           wreg	equ	0xFE8
 30700                           indf1	equ	0xFE7
 30701                           postdec1	equ	0xFE5
 30702                           plusw1	equ	0xFE3
 30703                           fsr1h	equ	0xFE2
 30704                           fsr1l	equ	0xFE1
 30705                           indf2	equ	0xFDF
 30706                           postinc2	equ	0xFDE
 30707                           postdec2	equ	0xFDD
 30708                           plusw2	equ	0xFDB
 30709                           fsr2h	equ	0xFDA
 30710                           fsr2l	equ	0xFD9
 30711                           status	equ	0xFD8
 30712                           
 30713 ;; *************** function __display_itoa_u32 *****************
 30714 ;; Defined at:
 30715 ;;		line 172 in file "display.c"
 30716 ;; Parameters:    Size  Location     Type
 30717 ;;  value           4   30[COMRAM] unsigned long 
 30718 ;;  text            2   34[COMRAM] PTR unsigned char 
 30719 ;;		 -> display_content(80), 
 30720 ;; Auto vars:     Size  Location     Type
 30721 ;;		None
 30722 ;; Return value:  Size  Location     Type
 30723 ;;                  1    wreg      unsigned char 
 30724 ;; Registers used:
 30725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30726 ;; Tracked objects:
 30727 ;;		On entry : 0/0
 30728 ;;		On exit  : 0/0
 30729 ;;		Unchanged: 0/0
 30730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30731 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30734 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30735 ;;Total ram usage:        6 bytes
 30736 ;; Hardware stack levels used:    1
 30737 ;; Hardware stack levels required when called:    4
 30738 ;; This function calls:
 30739 ;;		___lldiv
 30740 ;;		___llmod
 30741 ;;		__display_itoa_u16
 30742 ;;		_itoa
 30743 ;; This function is called by:
 30744 ;;		__display_start
 30745 ;;		__display_found
 30746 ;;		__display_failed
 30747 ;; This function uses a non-reentrant model
 30748 ;;
 30749                           
 30750                           	psect	text148
 30751  000C0E                     __ptext148:
 30752                           	opt stack 0
 30753  000C0E                     __display_itoa_u32:
 30754                           	opt stack 21
 30755                           
 30756                           ;display.c: 175: if(value<=0x7FFF)
 30757                           
 30758                           ;incstack = 0
 30759  000C0E  5022               	movf	__display_itoa_u32@value+3,w,c
 30760  000C10  1021               	iorwf	__display_itoa_u32@value+2,w,c
 30761  000C12  E111               	bnz	l10465
 30762  000C14  0E80               	movlw	128
 30763  000C16  5C20               	subwf	__display_itoa_u32@value+1,w,c
 30764  000C18  B0D8               	btfsc	status,0,c
 30765  000C1A  D00D               	goto	l1505
 30766                           
 30767                           ;display.c: 176: {;display.c: 177: return _display_itoa_u16((uint16_t) value, text);
 30768  000C1C  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 30769  000C20  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 30770  000C24  6A1B               	clrf	__display_itoa_u16@value+2,c
 30771  000C26  6A1C               	clrf	__display_itoa_u16@value+3,c
 30772  000C28  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 30773  000C2C  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 30774  000C30  EC74  F02A         	call	__display_itoa_u16	;wreg free
 30775  000C34  0012               	return	
 30776  000C36                     l1505:
 30777  000C36                     l10465:
 30778                           
 30779                           ;display.c: 178: };display.c: 181: if(value>100000000)
 30780  000C36  041F               	decf	__display_itoa_u32@value,w,c
 30781  000C38  0EE1               	movlw	225
 30782  000C3A  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30783  000C3C  0EF5               	movlw	245
 30784  000C3E  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30785  000C40  0E05               	movlw	5
 30786  000C42  5822               	subwfb	__display_itoa_u32@value+3,w,c
 30787  000C44  A0D8               	btfss	status,0,c
 30788  000C46  D04C               	goto	l1507
 30789                           
 30790                           ;display.c: 182: {;display.c: 183: itoa(text, (uint16_t)(value/10000), 10);
 30791  000C48  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30792  000C4C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30793  000C50  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30794  000C54  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30795  000C58  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30796  000C5C  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30797  000C60  0E10               	movlw	16
 30798  000C62  6E05               	movwf	___lldiv@divisor,c
 30799  000C64  0E27               	movlw	39
 30800  000C66  6E06               	movwf	___lldiv@divisor+1,c
 30801  000C68  0E00               	movlw	0
 30802  000C6A  6E07               	movwf	___lldiv@divisor+2,c
 30803  000C6C  0E00               	movlw	0
 30804  000C6E  6E08               	movwf	___lldiv@divisor+3,c
 30805  000C70  ECF7  F032         	call	___lldiv	;wreg free
 30806  000C74  C001  F013         	movff	?___lldiv,itoa@val
 30807  000C78  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30808  000C7C  0E00               	movlw	0
 30809  000C7E  6E16               	movwf	itoa@base+1,c
 30810  000C80  0E0A               	movlw	10
 30811  000C82  6E15               	movwf	itoa@base,c
 30812  000C84  EC3C  F03C         	call	_itoa	;wreg free
 30813                           
 30814                           ;display.c: 184: itoa(text+5, (uint16_t)(value%10000), 10);
 30815  000C88  0E05               	movlw	5
 30816  000C8A  2423               	addwf	__display_itoa_u32@text,w,c
 30817  000C8C  6E11               	movwf	itoa@buf,c
 30818  000C8E  0E00               	movlw	0
 30819  000C90  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30820  000C92  6E12               	movwf	itoa@buf+1,c
 30821  000C94  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30822  000C98  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30823  000C9C  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30824  000CA0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30825  000CA4  0E10               	movlw	16
 30826  000CA6  6E05               	movwf	___llmod@divisor,c
 30827  000CA8  0E27               	movlw	39
 30828  000CAA  6E06               	movwf	___llmod@divisor+1,c
 30829  000CAC  0E00               	movlw	0
 30830  000CAE  6E07               	movwf	___llmod@divisor+2,c
 30831  000CB0  0E00               	movlw	0
 30832  000CB2  6E08               	movwf	___llmod@divisor+3,c
 30833  000CB4  EC06  F037         	call	___llmod	;wreg free
 30834  000CB8  C001  F013         	movff	?___llmod,itoa@val
 30835  000CBC  C002  F014         	movff	?___llmod+1,itoa@val+1
 30836  000CC0  0E00               	movlw	0
 30837  000CC2  6E16               	movwf	itoa@base+1,c
 30838  000CC4  0E0A               	movlw	10
 30839  000CC6  6E15               	movwf	itoa@base,c
 30840  000CC8  EC3C  F03C         	call	_itoa	;wreg free
 30841                           
 30842                           ;display.c: 185: *(text+9) = ' ';
 30843  000CCC  EE20 F009          	lfsr	2,9
 30844  000CD0  5023               	movf	__display_itoa_u32@text,w,c
 30845  000CD2  26D9               	addwf	fsr2l,f,c
 30846  000CD4  5024               	movf	__display_itoa_u32@text+1,w,c
 30847  000CD6  22DA               	addwfc	fsr2h,f,c
 30848  000CD8  0E20               	movlw	32
 30849  000CDA  6EDF               	movwf	indf2,c
 30850                           
 30851                           ;display.c: 186: return 9;
 30852  000CDC  0E09               	movlw	9
 30853                           
 30854                           ;display.c: 187: }
 30855  000CDE  0012               	return	
 30856  000CE0                     l1507:
 30857                           
 30858                           ;display.c: 188: else if(value>10000000)
 30859  000CE0  5022               	movf	__display_itoa_u32@value+3,w,c
 30860  000CE2  E108               	bnz	u7220
 30861  000CE4  0E81               	movlw	129
 30862  000CE6  5C1F               	subwf	__display_itoa_u32@value,w,c
 30863  000CE8  0E96               	movlw	150
 30864  000CEA  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30865  000CEC  0E98               	movlw	152
 30866  000CEE  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30867  000CF0  A0D8               	btfss	status,0,c
 30868  000CF2  D04C               	goto	l1509
 30869  000CF4                     u7220:
 30870                           
 30871                           ;display.c: 189: {;display.c: 190: itoa(text, (uint16_t)(value/10000), 10);
 30872  000CF4  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30873  000CF8  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30874  000CFC  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30875  000D00  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30876  000D04  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30877  000D08  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30878  000D0C  0E10               	movlw	16
 30879  000D0E  6E05               	movwf	___lldiv@divisor,c
 30880  000D10  0E27               	movlw	39
 30881  000D12  6E06               	movwf	___lldiv@divisor+1,c
 30882  000D14  0E00               	movlw	0
 30883  000D16  6E07               	movwf	___lldiv@divisor+2,c
 30884  000D18  0E00               	movlw	0
 30885  000D1A  6E08               	movwf	___lldiv@divisor+3,c
 30886  000D1C  ECF7  F032         	call	___lldiv	;wreg free
 30887  000D20  C001  F013         	movff	?___lldiv,itoa@val
 30888  000D24  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30889  000D28  0E00               	movlw	0
 30890  000D2A  6E16               	movwf	itoa@base+1,c
 30891  000D2C  0E0A               	movlw	10
 30892  000D2E  6E15               	movwf	itoa@base,c
 30893  000D30  EC3C  F03C         	call	_itoa	;wreg free
 30894                           
 30895                           ;display.c: 191: itoa(text+4, (uint16_t)(value%10000), 10);
 30896  000D34  0E04               	movlw	4
 30897  000D36  2423               	addwf	__display_itoa_u32@text,w,c
 30898  000D38  6E11               	movwf	itoa@buf,c
 30899  000D3A  0E00               	movlw	0
 30900  000D3C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30901  000D3E  6E12               	movwf	itoa@buf+1,c
 30902  000D40  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30903  000D44  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30904  000D48  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30905  000D4C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30906  000D50  0E10               	movlw	16
 30907  000D52  6E05               	movwf	___llmod@divisor,c
 30908  000D54  0E27               	movlw	39
 30909  000D56  6E06               	movwf	___llmod@divisor+1,c
 30910  000D58  0E00               	movlw	0
 30911  000D5A  6E07               	movwf	___llmod@divisor+2,c
 30912  000D5C  0E00               	movlw	0
 30913  000D5E  6E08               	movwf	___llmod@divisor+3,c
 30914  000D60  EC06  F037         	call	___llmod	;wreg free
 30915  000D64  C001  F013         	movff	?___llmod,itoa@val
 30916  000D68  C002  F014         	movff	?___llmod+1,itoa@val+1
 30917  000D6C  0E00               	movlw	0
 30918  000D6E  6E16               	movwf	itoa@base+1,c
 30919  000D70  0E0A               	movlw	10
 30920  000D72  6E15               	movwf	itoa@base,c
 30921  000D74  EC3C  F03C         	call	_itoa	;wreg free
 30922                           
 30923                           ;display.c: 192: *(text+8) = ' ';
 30924  000D78  EE20 F008          	lfsr	2,8
 30925  000D7C  5023               	movf	__display_itoa_u32@text,w,c
 30926  000D7E  26D9               	addwf	fsr2l,f,c
 30927  000D80  5024               	movf	__display_itoa_u32@text+1,w,c
 30928  000D82  22DA               	addwfc	fsr2h,f,c
 30929  000D84  0E20               	movlw	32
 30930  000D86  6EDF               	movwf	indf2,c
 30931                           
 30932                           ;display.c: 193: return 8;
 30933  000D88  0E08               	movlw	8
 30934                           
 30935                           ;display.c: 194: }
 30936  000D8A  0012               	return	
 30937  000D8C                     l1509:
 30938                           
 30939                           ;display.c: 195: else if(value>1000000)
 30940  000D8C  5022               	movf	__display_itoa_u32@value+3,w,c
 30941  000D8E  E108               	bnz	u7230
 30942  000D90  0E41               	movlw	65
 30943  000D92  5C1F               	subwf	__display_itoa_u32@value,w,c
 30944  000D94  0E42               	movlw	66
 30945  000D96  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30946  000D98  0E0F               	movlw	15
 30947  000D9A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30948  000D9C  A0D8               	btfss	status,0,c
 30949  000D9E  D04C               	goto	l1511
 30950  000DA0                     u7230:
 30951                           
 30952                           ;display.c: 196: {;display.c: 197: itoa(text, (uint16_t)(value/10000), 10);
 30953  000DA0  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30954  000DA4  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30955  000DA8  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30956  000DAC  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30957  000DB0  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30958  000DB4  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30959  000DB8  0E10               	movlw	16
 30960  000DBA  6E05               	movwf	___lldiv@divisor,c
 30961  000DBC  0E27               	movlw	39
 30962  000DBE  6E06               	movwf	___lldiv@divisor+1,c
 30963  000DC0  0E00               	movlw	0
 30964  000DC2  6E07               	movwf	___lldiv@divisor+2,c
 30965  000DC4  0E00               	movlw	0
 30966  000DC6  6E08               	movwf	___lldiv@divisor+3,c
 30967  000DC8  ECF7  F032         	call	___lldiv	;wreg free
 30968  000DCC  C001  F013         	movff	?___lldiv,itoa@val
 30969  000DD0  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30970  000DD4  0E00               	movlw	0
 30971  000DD6  6E16               	movwf	itoa@base+1,c
 30972  000DD8  0E0A               	movlw	10
 30973  000DDA  6E15               	movwf	itoa@base,c
 30974  000DDC  EC3C  F03C         	call	_itoa	;wreg free
 30975                           
 30976                           ;display.c: 198: itoa(text+3, (uint16_t)(value%10000), 10);
 30977  000DE0  0E03               	movlw	3
 30978  000DE2  2423               	addwf	__display_itoa_u32@text,w,c
 30979  000DE4  6E11               	movwf	itoa@buf,c
 30980  000DE6  0E00               	movlw	0
 30981  000DE8  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30982  000DEA  6E12               	movwf	itoa@buf+1,c
 30983  000DEC  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30984  000DF0  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30985  000DF4  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30986  000DF8  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30987  000DFC  0E10               	movlw	16
 30988  000DFE  6E05               	movwf	___llmod@divisor,c
 30989  000E00  0E27               	movlw	39
 30990  000E02  6E06               	movwf	___llmod@divisor+1,c
 30991  000E04  0E00               	movlw	0
 30992  000E06  6E07               	movwf	___llmod@divisor+2,c
 30993  000E08  0E00               	movlw	0
 30994  000E0A  6E08               	movwf	___llmod@divisor+3,c
 30995  000E0C  EC06  F037         	call	___llmod	;wreg free
 30996  000E10  C001  F013         	movff	?___llmod,itoa@val
 30997  000E14  C002  F014         	movff	?___llmod+1,itoa@val+1
 30998  000E18  0E00               	movlw	0
 30999  000E1A  6E16               	movwf	itoa@base+1,c
 31000  000E1C  0E0A               	movlw	10
 31001  000E1E  6E15               	movwf	itoa@base,c
 31002  000E20  EC3C  F03C         	call	_itoa	;wreg free
 31003                           
 31004                           ;display.c: 199: *(text+7) = ' ';
 31005  000E24  EE20 F007          	lfsr	2,7
 31006  000E28  5023               	movf	__display_itoa_u32@text,w,c
 31007  000E2A  26D9               	addwf	fsr2l,f,c
 31008  000E2C  5024               	movf	__display_itoa_u32@text+1,w,c
 31009  000E2E  22DA               	addwfc	fsr2h,f,c
 31010  000E30  0E20               	movlw	32
 31011  000E32  6EDF               	movwf	indf2,c
 31012                           
 31013                           ;display.c: 200: return 7;
 31014  000E34  0E07               	movlw	7
 31015                           
 31016                           ;display.c: 201: }
 31017  000E36  0012               	return	
 31018  000E38                     l1511:
 31019                           
 31020                           ;display.c: 202: else if(value>100000)
 31021  000E38  5022               	movf	__display_itoa_u32@value+3,w,c
 31022  000E3A  E108               	bnz	u7240
 31023  000E3C  0EA1               	movlw	161
 31024  000E3E  5C1F               	subwf	__display_itoa_u32@value,w,c
 31025  000E40  0E86               	movlw	134
 31026  000E42  5820               	subwfb	__display_itoa_u32@value+1,w,c
 31027  000E44  0E01               	movlw	1
 31028  000E46  5821               	subwfb	__display_itoa_u32@value+2,w,c
 31029  000E48  A0D8               	btfss	status,0,c
 31030  000E4A  D04C               	goto	l1513
 31031  000E4C                     u7240:
 31032                           
 31033                           ;display.c: 203: {;display.c: 204: itoa(text, (uint16_t)(value/10000), 10);
 31034  000E4C  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 31035  000E50  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 31036  000E54  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 31037  000E58  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 31038  000E5C  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 31039  000E60  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 31040  000E64  0E10               	movlw	16
 31041  000E66  6E05               	movwf	___lldiv@divisor,c
 31042  000E68  0E27               	movlw	39
 31043  000E6A  6E06               	movwf	___lldiv@divisor+1,c
 31044  000E6C  0E00               	movlw	0
 31045  000E6E  6E07               	movwf	___lldiv@divisor+2,c
 31046  000E70  0E00               	movlw	0
 31047  000E72  6E08               	movwf	___lldiv@divisor+3,c
 31048  000E74  ECF7  F032         	call	___lldiv	;wreg free
 31049  000E78  C001  F013         	movff	?___lldiv,itoa@val
 31050  000E7C  C002  F014         	movff	?___lldiv+1,itoa@val+1
 31051  000E80  0E00               	movlw	0
 31052  000E82  6E16               	movwf	itoa@base+1,c
 31053  000E84  0E0A               	movlw	10
 31054  000E86  6E15               	movwf	itoa@base,c
 31055  000E88  EC3C  F03C         	call	_itoa	;wreg free
 31056                           
 31057                           ;display.c: 205: itoa(text+2, (uint16_t)(value%10000), 10);
 31058  000E8C  0E02               	movlw	2
 31059  000E8E  2423               	addwf	__display_itoa_u32@text,w,c
 31060  000E90  6E11               	movwf	itoa@buf,c
 31061  000E92  0E00               	movlw	0
 31062  000E94  2024               	addwfc	__display_itoa_u32@text+1,w,c
 31063  000E96  6E12               	movwf	itoa@buf+1,c
 31064  000E98  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 31065  000E9C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 31066  000EA0  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 31067  000EA4  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 31068  000EA8  0E10               	movlw	16
 31069  000EAA  6E05               	movwf	___llmod@divisor,c
 31070  000EAC  0E27               	movlw	39
 31071  000EAE  6E06               	movwf	___llmod@divisor+1,c
 31072  000EB0  0E00               	movlw	0
 31073  000EB2  6E07               	movwf	___llmod@divisor+2,c
 31074  000EB4  0E00               	movlw	0
 31075  000EB6  6E08               	movwf	___llmod@divisor+3,c
 31076  000EB8  EC06  F037         	call	___llmod	;wreg free
 31077  000EBC  C001  F013         	movff	?___llmod,itoa@val
 31078  000EC0  C002  F014         	movff	?___llmod+1,itoa@val+1
 31079  000EC4  0E00               	movlw	0
 31080  000EC6  6E16               	movwf	itoa@base+1,c
 31081  000EC8  0E0A               	movlw	10
 31082  000ECA  6E15               	movwf	itoa@base,c
 31083  000ECC  EC3C  F03C         	call	_itoa	;wreg free
 31084                           
 31085                           ;display.c: 206: *(text+6) = ' ';
 31086  000ED0  EE20 F006          	lfsr	2,6
 31087  000ED4  5023               	movf	__display_itoa_u32@text,w,c
 31088  000ED6  26D9               	addwf	fsr2l,f,c
 31089  000ED8  5024               	movf	__display_itoa_u32@text+1,w,c
 31090  000EDA  22DA               	addwfc	fsr2h,f,c
 31091  000EDC  0E20               	movlw	32
 31092  000EDE  6EDF               	movwf	indf2,c
 31093                           
 31094                           ;display.c: 207: return 6;
 31095  000EE0  0E06               	movlw	6
 31096                           
 31097                           ;display.c: 208: }
 31098  000EE2  0012               	return	
 31099  000EE4                     l1513:
 31100                           
 31101                           ;display.c: 209: else;display.c: 210: {;display.c: 211: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 31102  000EE4  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 31103  000EE8  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 31104  000EEC  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 31105  000EF0  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 31106  000EF4  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 31107  000EF8  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 31108  000EFC  0E10               	movlw	16
 31109  000EFE  6E05               	movwf	___lldiv@divisor,c
 31110  000F00  0E27               	movlw	39
 31111  000F02  6E06               	movwf	___lldiv@divisor+1,c
 31112  000F04  0E00               	movlw	0
 31113  000F06  6E07               	movwf	___lldiv@divisor+2,c
 31114  000F08  0E00               	movlw	0
 31115  000F0A  6E08               	movwf	___lldiv@divisor+3,c
 31116  000F0C  ECF7  F032         	call	___lldiv	;wreg free
 31117  000F10  C001  F013         	movff	?___lldiv,itoa@val
 31118  000F14  C002  F014         	movff	?___lldiv+1,itoa@val+1
 31119  000F18  0E00               	movlw	0
 31120  000F1A  6E16               	movwf	itoa@base+1,c
 31121  000F1C  0E0A               	movlw	10
 31122  000F1E  6E15               	movwf	itoa@base,c
 31123  000F20  EC3C  F03C         	call	_itoa	;wreg free
 31124                           
 31125                           ;display.c: 212: itoa(text+1, (uint16_t)(value%10000), 10);
 31126  000F24  0E01               	movlw	1
 31127  000F26  2423               	addwf	__display_itoa_u32@text,w,c
 31128  000F28  6E11               	movwf	itoa@buf,c
 31129  000F2A  0E00               	movlw	0
 31130  000F2C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 31131  000F2E  6E12               	movwf	itoa@buf+1,c
 31132  000F30  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 31133  000F34  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 31134  000F38  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 31135  000F3C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 31136  000F40  0E10               	movlw	16
 31137  000F42  6E05               	movwf	___llmod@divisor,c
 31138  000F44  0E27               	movlw	39
 31139  000F46  6E06               	movwf	___llmod@divisor+1,c
 31140  000F48  0E00               	movlw	0
 31141  000F4A  6E07               	movwf	___llmod@divisor+2,c
 31142  000F4C  0E00               	movlw	0
 31143  000F4E  6E08               	movwf	___llmod@divisor+3,c
 31144  000F50  EC06  F037         	call	___llmod	;wreg free
 31145  000F54  C001  F013         	movff	?___llmod,itoa@val
 31146  000F58  C002  F014         	movff	?___llmod+1,itoa@val+1
 31147  000F5C  0E00               	movlw	0
 31148  000F5E  6E16               	movwf	itoa@base+1,c
 31149  000F60  0E0A               	movlw	10
 31150  000F62  6E15               	movwf	itoa@base,c
 31151  000F64  EC3C  F03C         	call	_itoa	;wreg free
 31152                           
 31153                           ;display.c: 213: *(text+5) = ' ';
 31154  000F68  EE20 F005          	lfsr	2,5
 31155  000F6C  5023               	movf	__display_itoa_u32@text,w,c
 31156  000F6E  26D9               	addwf	fsr2l,f,c
 31157  000F70  5024               	movf	__display_itoa_u32@text+1,w,c
 31158  000F72  22DA               	addwfc	fsr2h,f,c
 31159  000F74  0E20               	movlw	32
 31160  000F76  6EDF               	movwf	indf2,c
 31161                           
 31162                           ;display.c: 214: return 5;
 31163  000F78  0E05               	movlw	5
 31164  000F7A  0012               	return	
 31165  000F7C                     __end_of__display_itoa_u32:
 31166                           	opt stack 0
 31167                           tosu	equ	0xFFF
 31168                           tosh	equ	0xFFE
 31169                           tosl	equ	0xFFD
 31170                           pclath	equ	0xFFA
 31171                           tblptru	equ	0xFF8
 31172                           tblptrh	equ	0xFF7
 31173                           tblptrl	equ	0xFF6
 31174                           tablat	equ	0xFF5
 31175                           prodh	equ	0xFF4
 31176                           prodl	equ	0xFF3
 31177                           intcon	equ	0xFF2
 31178                           intcon2	equ	0xFF1
 31179                           intcon3	equ	0xFF0
 31180                           indf0	equ	0xFEF
 31181                           postinc0	equ	0xFEE
 31182                           fsr0h	equ	0xFEA
 31183                           fsr0l	equ	0xFE9
 31184                           wreg	equ	0xFE8
 31185                           indf1	equ	0xFE7
 31186                           postdec1	equ	0xFE5
 31187                           plusw1	equ	0xFE3
 31188                           fsr1h	equ	0xFE2
 31189                           fsr1l	equ	0xFE1
 31190                           indf2	equ	0xFDF
 31191                           postinc2	equ	0xFDE
 31192                           postdec2	equ	0xFDD
 31193                           plusw2	equ	0xFDB
 31194                           fsr2h	equ	0xFDA
 31195                           fsr2l	equ	0xFD9
 31196                           status	equ	0xFD8
 31197                           
 31198 ;; *************** function ___llmod *****************
 31199 ;; Defined at:
 31200 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 31201 ;; Parameters:    Size  Location     Type
 31202 ;;  dividend        4    0[COMRAM] unsigned long 
 31203 ;;  divisor         4    4[COMRAM] unsigned long 
 31204 ;; Auto vars:     Size  Location     Type
 31205 ;;  counter         1    8[COMRAM] unsigned char 
 31206 ;; Return value:  Size  Location     Type
 31207 ;;                  4    0[COMRAM] unsigned long 
 31208 ;; Registers used:
 31209 ;;		wreg, status,2, status,0
 31210 ;; Tracked objects:
 31211 ;;		On entry : 0/0
 31212 ;;		On exit  : 0/0
 31213 ;;		Unchanged: 0/0
 31214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31215 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31218 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31219 ;;Total ram usage:        9 bytes
 31220 ;; Hardware stack levels used:    1
 31221 ;; This function calls:
 31222 ;;		Nothing
 31223 ;; This function is called by:
 31224 ;;		__display_itoa_u32
 31225 ;; This function uses a non-reentrant model
 31226 ;;
 31227                           
 31228                           	psect	text149
 31229  006E0C                     __ptext149:
 31230                           	opt stack 0
 31231  006E0C                     ___llmod:
 31232                           	opt stack 24
 31233                           
 31234                           ;incstack = 0
 31235  006E0C  5005               	movf	___llmod@divisor,w,c
 31236  006E0E  1006               	iorwf	___llmod@divisor+1,w,c
 31237  006E10  1007               	iorwf	___llmod@divisor+2,w,c
 31238  006E12  1008               	iorwf	___llmod@divisor+3,w,c
 31239  006E14  B4D8               	btfsc	status,2,c
 31240  006E16  D024               	goto	l3257
 31241  006E18  0E01               	movlw	1
 31242  006E1A  6E09               	movwf	___llmod@counter,c
 31243  006E1C  D006               	goto	l3252
 31244  006E1E  90D8               	bcf	status,0,c
 31245  006E20  3605               	rlcf	___llmod@divisor,f,c
 31246  006E22  3606               	rlcf	___llmod@divisor+1,f,c
 31247  006E24  3607               	rlcf	___llmod@divisor+2,f,c
 31248  006E26  3608               	rlcf	___llmod@divisor+3,f,c
 31249  006E28  2A09               	incf	___llmod@counter,f,c
 31250  006E2A                     l3252:
 31251  006E2A  AE08               	btfss	___llmod@divisor+3,7,c
 31252  006E2C  D7F8               	goto	l3253
 31253  006E2E                     u6830:
 31254  006E2E  5005               	movf	___llmod@divisor,w,c
 31255  006E30  5C01               	subwf	___llmod@dividend,w,c
 31256  006E32  5006               	movf	___llmod@divisor+1,w,c
 31257  006E34  5802               	subwfb	___llmod@dividend+1,w,c
 31258  006E36  5007               	movf	___llmod@divisor+2,w,c
 31259  006E38  5803               	subwfb	___llmod@dividend+2,w,c
 31260  006E3A  5008               	movf	___llmod@divisor+3,w,c
 31261  006E3C  5804               	subwfb	___llmod@dividend+3,w,c
 31262  006E3E  A0D8               	btfss	status,0,c
 31263  006E40  D008               	goto	l3256
 31264  006E42  5005               	movf	___llmod@divisor,w,c
 31265  006E44  5E01               	subwf	___llmod@dividend,f,c
 31266  006E46  5006               	movf	___llmod@divisor+1,w,c
 31267  006E48  5A02               	subwfb	___llmod@dividend+1,f,c
 31268  006E4A  5007               	movf	___llmod@divisor+2,w,c
 31269  006E4C  5A03               	subwfb	___llmod@dividend+2,f,c
 31270  006E4E  5008               	movf	___llmod@divisor+3,w,c
 31271  006E50  5A04               	subwfb	___llmod@dividend+3,f,c
 31272  006E52                     l3256:
 31273  006E52  90D8               	bcf	status,0,c
 31274  006E54  3208               	rrcf	___llmod@divisor+3,f,c
 31275  006E56  3207               	rrcf	___llmod@divisor+2,f,c
 31276  006E58  3206               	rrcf	___llmod@divisor+1,f,c
 31277  006E5A  3205               	rrcf	___llmod@divisor,f,c
 31278  006E5C  2E09               	decfsz	___llmod@counter,f,c
 31279  006E5E  D7E7               	goto	u6830
 31280  006E60                     l3257:
 31281  006E60  C001  F001         	movff	___llmod@dividend,?___llmod
 31282  006E64  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 31283  006E68  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 31284  006E6C  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 31285  006E70  0012               	return		;funcret
 31286  006E72                     __end_of___llmod:
 31287                           	opt stack 0
 31288                           tosu	equ	0xFFF
 31289                           tosh	equ	0xFFE
 31290                           tosl	equ	0xFFD
 31291                           pclath	equ	0xFFA
 31292                           tblptru	equ	0xFF8
 31293                           tblptrh	equ	0xFF7
 31294                           tblptrl	equ	0xFF6
 31295                           tablat	equ	0xFF5
 31296                           prodh	equ	0xFF4
 31297                           prodl	equ	0xFF3
 31298                           intcon	equ	0xFF2
 31299                           intcon2	equ	0xFF1
 31300                           intcon3	equ	0xFF0
 31301                           indf0	equ	0xFEF
 31302                           postinc0	equ	0xFEE
 31303                           fsr0h	equ	0xFEA
 31304                           fsr0l	equ	0xFE9
 31305                           wreg	equ	0xFE8
 31306                           indf1	equ	0xFE7
 31307                           postdec1	equ	0xFE5
 31308                           plusw1	equ	0xFE3
 31309                           fsr1h	equ	0xFE2
 31310                           fsr1l	equ	0xFE1
 31311                           indf2	equ	0xFDF
 31312                           postinc2	equ	0xFDE
 31313                           postdec2	equ	0xFDD
 31314                           plusw2	equ	0xFDB
 31315                           fsr2h	equ	0xFDA
 31316                           fsr2l	equ	0xFD9
 31317                           status	equ	0xFD8
 31318                           
 31319 ;; *************** function ___lldiv *****************
 31320 ;; Defined at:
 31321 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 31322 ;; Parameters:    Size  Location     Type
 31323 ;;  dividend        4    0[COMRAM] unsigned long 
 31324 ;;  divisor         4    4[COMRAM] unsigned long 
 31325 ;; Auto vars:     Size  Location     Type
 31326 ;;  quotient        4    8[COMRAM] unsigned long 
 31327 ;;  counter         1   12[COMRAM] unsigned char 
 31328 ;; Return value:  Size  Location     Type
 31329 ;;                  4    0[COMRAM] unsigned long 
 31330 ;; Registers used:
 31331 ;;		wreg, status,2, status,0
 31332 ;; Tracked objects:
 31333 ;;		On entry : 0/0
 31334 ;;		On exit  : 0/0
 31335 ;;		Unchanged: 0/0
 31336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31337 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31338 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31340 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31341 ;;Total ram usage:       13 bytes
 31342 ;; Hardware stack levels used:    1
 31343 ;; This function calls:
 31344 ;;		Nothing
 31345 ;; This function is called by:
 31346 ;;		__display_itoa_u32
 31347 ;; This function uses a non-reentrant model
 31348 ;;
 31349                           
 31350                           	psect	text150
 31351  0065EE                     __ptext150:
 31352                           	opt stack 0
 31353  0065EE                     ___lldiv:
 31354                           	opt stack 24
 31355                           
 31356                           ;incstack = 0
 31357  0065EE  0E00               	movlw	0
 31358  0065F0  6E09               	movwf	___lldiv@quotient,c
 31359  0065F2  0E00               	movlw	0
 31360  0065F4  6E0A               	movwf	___lldiv@quotient+1,c
 31361  0065F6  0E00               	movlw	0
 31362  0065F8  6E0B               	movwf	___lldiv@quotient+2,c
 31363  0065FA  0E00               	movlw	0
 31364  0065FC  6E0C               	movwf	___lldiv@quotient+3,c
 31365  0065FE  5005               	movf	___lldiv@divisor,w,c
 31366  006600  1006               	iorwf	___lldiv@divisor+1,w,c
 31367  006602  1007               	iorwf	___lldiv@divisor+2,w,c
 31368  006604  1008               	iorwf	___lldiv@divisor+3,w,c
 31369  006606  B4D8               	btfsc	status,2,c
 31370  006608  D02A               	goto	l2876
 31371  00660A  0E01               	movlw	1
 31372  00660C  6E0D               	movwf	___lldiv@counter,c
 31373  00660E  D006               	goto	l2871
 31374  006610  90D8               	bcf	status,0,c
 31375  006612  3605               	rlcf	___lldiv@divisor,f,c
 31376  006614  3606               	rlcf	___lldiv@divisor+1,f,c
 31377  006616  3607               	rlcf	___lldiv@divisor+2,f,c
 31378  006618  3608               	rlcf	___lldiv@divisor+3,f,c
 31379  00661A  2A0D               	incf	___lldiv@counter,f,c
 31380  00661C                     l2871:
 31381  00661C  AE08               	btfss	___lldiv@divisor+3,7,c
 31382  00661E  D7F8               	goto	l2872
 31383  006620                     u6800:
 31384  006620  90D8               	bcf	status,0,c
 31385  006622  3609               	rlcf	___lldiv@quotient,f,c
 31386  006624  360A               	rlcf	___lldiv@quotient+1,f,c
 31387  006626  360B               	rlcf	___lldiv@quotient+2,f,c
 31388  006628  360C               	rlcf	___lldiv@quotient+3,f,c
 31389  00662A  5005               	movf	___lldiv@divisor,w,c
 31390  00662C  5C01               	subwf	___lldiv@dividend,w,c
 31391  00662E  5006               	movf	___lldiv@divisor+1,w,c
 31392  006630  5802               	subwfb	___lldiv@dividend+1,w,c
 31393  006632  5007               	movf	___lldiv@divisor+2,w,c
 31394  006634  5803               	subwfb	___lldiv@dividend+2,w,c
 31395  006636  5008               	movf	___lldiv@divisor+3,w,c
 31396  006638  5804               	subwfb	___lldiv@dividend+3,w,c
 31397  00663A  A0D8               	btfss	status,0,c
 31398  00663C  D009               	goto	l2875
 31399  00663E  5005               	movf	___lldiv@divisor,w,c
 31400  006640  5E01               	subwf	___lldiv@dividend,f,c
 31401  006642  5006               	movf	___lldiv@divisor+1,w,c
 31402  006644  5A02               	subwfb	___lldiv@dividend+1,f,c
 31403  006646  5007               	movf	___lldiv@divisor+2,w,c
 31404  006648  5A03               	subwfb	___lldiv@dividend+2,f,c
 31405  00664A  5008               	movf	___lldiv@divisor+3,w,c
 31406  00664C  5A04               	subwfb	___lldiv@dividend+3,f,c
 31407  00664E  8009               	bsf	___lldiv@quotient,0,c
 31408  006650                     l2875:
 31409  006650  90D8               	bcf	status,0,c
 31410  006652  3208               	rrcf	___lldiv@divisor+3,f,c
 31411  006654  3207               	rrcf	___lldiv@divisor+2,f,c
 31412  006656  3206               	rrcf	___lldiv@divisor+1,f,c
 31413  006658  3205               	rrcf	___lldiv@divisor,f,c
 31414  00665A  2E0D               	decfsz	___lldiv@counter,f,c
 31415  00665C  D7E1               	goto	u6800
 31416  00665E                     l2876:
 31417  00665E  C009  F001         	movff	___lldiv@quotient,?___lldiv
 31418  006662  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 31419  006666  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 31420  00666A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 31421  00666E  0012               	return		;funcret
 31422  006670                     __end_of___lldiv:
 31423                           	opt stack 0
 31424                           tosu	equ	0xFFF
 31425                           tosh	equ	0xFFE
 31426                           tosl	equ	0xFFD
 31427                           pclath	equ	0xFFA
 31428                           tblptru	equ	0xFF8
 31429                           tblptrh	equ	0xFF7
 31430                           tblptrl	equ	0xFF6
 31431                           tablat	equ	0xFF5
 31432                           prodh	equ	0xFF4
 31433                           prodl	equ	0xFF3
 31434                           intcon	equ	0xFF2
 31435                           intcon2	equ	0xFF1
 31436                           intcon3	equ	0xFF0
 31437                           indf0	equ	0xFEF
 31438                           postinc0	equ	0xFEE
 31439                           fsr0h	equ	0xFEA
 31440                           fsr0l	equ	0xFE9
 31441                           wreg	equ	0xFE8
 31442                           indf1	equ	0xFE7
 31443                           postdec1	equ	0xFE5
 31444                           plusw1	equ	0xFE3
 31445                           fsr1h	equ	0xFE2
 31446                           fsr1l	equ	0xFE1
 31447                           indf2	equ	0xFDF
 31448                           postinc2	equ	0xFDE
 31449                           postdec2	equ	0xFDD
 31450                           plusw2	equ	0xFDB
 31451                           fsr2h	equ	0xFDA
 31452                           fsr2l	equ	0xFD9
 31453                           status	equ	0xFD8
 31454                           
 31455 ;; *************** function __display_done *****************
 31456 ;; Defined at:
 31457 ;;		line 529 in file "display.c"
 31458 ;; Parameters:    Size  Location     Type
 31459 ;;		None
 31460 ;; Auto vars:     Size  Location     Type
 31461 ;;  cntr            1   30[COMRAM] unsigned char 
 31462 ;; Return value:  Size  Location     Type
 31463 ;;                  1    wreg      void 
 31464 ;; Registers used:
 31465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31466 ;; Tracked objects:
 31467 ;;		On entry : 0/0
 31468 ;;		On exit  : 0/0
 31469 ;;		Unchanged: 0/0
 31470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31475 ;;Total ram usage:        1 bytes
 31476 ;; Hardware stack levels used:    1
 31477 ;; Hardware stack levels required when called:    4
 31478 ;; This function calls:
 31479 ;;		__display_itoa_u16
 31480 ;;		_bootloader_get_flashPagesWritten
 31481 ;; This function is called by:
 31482 ;;		_display_prepare
 31483 ;; This function uses a non-reentrant model
 31484 ;;
 31485                           
 31486                           	psect	text151
 31487  0037A2                     __ptext151:
 31488                           	opt stack 0
 31489  0037A2                     __display_done:
 31490                           	opt stack 22
 31491                           
 31492                           ;display.c: 531: uint8_t cntr;;display.c: 532: cntr = 0;
 31493                           
 31494                           ;incstack = 0
 31495  0037A2  0E00               	movlw	0
 31496  0037A4  6E1F               	movwf	__display_done@cntr,c
 31497                           
 31498                           ;display.c: 533: while(done_line1[cntr])
 31499  0037A6  D017               	goto	l1683
 31500  0037A8                     
 31501                           ;display.c: 534: display_content[0][cntr] = done_line1[cntr++];
 31502  0037A8  501F               	movf	__display_done@cntr,w,c
 31503  0037AA  0D01               	mullw	1
 31504  0037AC  0E74               	movlw	low _done_line1
 31505  0037AE  24F3               	addwf	prodl,w,c
 31506  0037B0  6EF6               	movwf	tblptrl,c
 31507  0037B2  0E8D               	movlw	high _done_line1
 31508  0037B4  20F4               	addwfc	prodh,w,c
 31509  0037B6  6EF7               	movwf	tblptrh,c
 31510  0037B8                     	if	1	;There are 3 active tblptr bytes
 31511  0037B8  6AF8               	clrf	tblptru,c
 31512  0037BA  0E00               	movlw	low (__mediumconst shr (0+16))
 31513  0037BC  22F8               	addwfc	tblptru,f,c
 31514  0037BE                     	endif
 31515  0037BE  501F               	movf	__display_done@cntr,w,c
 31516  0037C0  0D01               	mullw	1
 31517  0037C2  0E00               	movlw	low _display_content
 31518  0037C4  24F3               	addwf	prodl,w,c
 31519  0037C6  6ED9               	movwf	fsr2l,c
 31520  0037C8  0E02               	movlw	high _display_content
 31521  0037CA  20F4               	addwfc	prodh,w,c
 31522  0037CC  6EDA               	movwf	fsr2h,c
 31523  0037CE  0008               	tblrd		*
 31524  0037D0  CFF5 FFDF          	movff	tablat,indf2
 31525  0037D4  2A1F               	incf	__display_done@cntr,f,c
 31526  0037D6                     l1683:
 31527  0037D6  501F               	movf	__display_done@cntr,w,c
 31528  0037D8  0D01               	mullw	1
 31529  0037DA  0E74               	movlw	low _done_line1
 31530  0037DC  24F3               	addwf	prodl,w,c
 31531  0037DE  6EF6               	movwf	tblptrl,c
 31532  0037E0  0E8D               	movlw	high _done_line1
 31533  0037E2  20F4               	addwfc	prodh,w,c
 31534  0037E4  6EF7               	movwf	tblptrh,c
 31535  0037E6                     	if	1	;There are 3 active tblptr bytes
 31536  0037E6  6AF8               	clrf	tblptru,c
 31537  0037E8  0E00               	movlw	low (__mediumconst shr (0+16))
 31538  0037EA  22F8               	addwfc	tblptru,f,c
 31539  0037EC                     	endif
 31540  0037EC  0008               	tblrd		*
 31541  0037EE  50F5               	movf	tablat,w,c
 31542  0037F0  0900               	iorlw	0
 31543  0037F2  A4D8               	btfss	status,2,c
 31544  0037F4  D7D9               	goto	l1684
 31545                           
 31546                           ;display.c: 535: cntr = 0;
 31547  0037F6  0E00               	movlw	0
 31548  0037F8  6E1F               	movwf	__display_done@cntr,c
 31549                           
 31550                           ;display.c: 536: while(done_line2[cntr])
 31551  0037FA  D017               	goto	l1686
 31552  0037FC                     
 31553                           ;display.c: 537: display_content[1][cntr] = done_line2[cntr++];
 31554  0037FC  501F               	movf	__display_done@cntr,w,c
 31555  0037FE  0D01               	mullw	1
 31556  003800  0E9F               	movlw	low _done_line2
 31557  003802  24F3               	addwf	prodl,w,c
 31558  003804  6EF6               	movwf	tblptrl,c
 31559  003806  0E8E               	movlw	high _done_line2
 31560  003808  20F4               	addwfc	prodh,w,c
 31561  00380A  6EF7               	movwf	tblptrh,c
 31562  00380C                     	if	1	;There are 3 active tblptr bytes
 31563  00380C  6AF8               	clrf	tblptru,c
 31564  00380E  0E00               	movlw	low (__mediumconst shr (0+16))
 31565  003810  22F8               	addwfc	tblptru,f,c
 31566  003812                     	endif
 31567  003812  501F               	movf	__display_done@cntr,w,c
 31568  003814  0D01               	mullw	1
 31569  003816  0E14               	movlw	low (_display_content+20)
 31570  003818  24F3               	addwf	prodl,w,c
 31571  00381A  6ED9               	movwf	fsr2l,c
 31572  00381C  0E02               	movlw	high (_display_content+20)
 31573  00381E  20F4               	addwfc	prodh,w,c
 31574  003820  6EDA               	movwf	fsr2h,c
 31575  003822  0008               	tblrd		*
 31576  003824  CFF5 FFDF          	movff	tablat,indf2
 31577  003828  2A1F               	incf	__display_done@cntr,f,c
 31578  00382A                     l1686:
 31579  00382A  501F               	movf	__display_done@cntr,w,c
 31580  00382C  0D01               	mullw	1
 31581  00382E  0E9F               	movlw	low _done_line2
 31582  003830  24F3               	addwf	prodl,w,c
 31583  003832  6EF6               	movwf	tblptrl,c
 31584  003834  0E8E               	movlw	high _done_line2
 31585  003836  20F4               	addwfc	prodh,w,c
 31586  003838  6EF7               	movwf	tblptrh,c
 31587  00383A                     	if	1	;There are 3 active tblptr bytes
 31588  00383A  6AF8               	clrf	tblptru,c
 31589  00383C  0E00               	movlw	low (__mediumconst shr (0+16))
 31590  00383E  22F8               	addwfc	tblptru,f,c
 31591  003840                     	endif
 31592  003840  0008               	tblrd		*
 31593  003842  50F5               	movf	tablat,w,c
 31594  003844  0900               	iorlw	0
 31595  003846  A4D8               	btfss	status,2,c
 31596  003848  D7D9               	goto	l1687
 31597                           
 31598                           ;display.c: 538: cntr = 0;
 31599  00384A  0E00               	movlw	0
 31600  00384C  6E1F               	movwf	__display_done@cntr,c
 31601                           
 31602                           ;display.c: 539: while(done_line3[cntr])
 31603  00384E  D017               	goto	l1689
 31604  003850                     
 31605                           ;display.c: 540: display_content[2][cntr] = done_line3[cntr++];
 31606  003850  501F               	movf	__display_done@cntr,w,c
 31607  003852  0D01               	mullw	1
 31608  003854  0E64               	movlw	low _done_line3
 31609  003856  24F3               	addwf	prodl,w,c
 31610  003858  6EF6               	movwf	tblptrl,c
 31611  00385A  0E8D               	movlw	high _done_line3
 31612  00385C  20F4               	addwfc	prodh,w,c
 31613  00385E  6EF7               	movwf	tblptrh,c
 31614  003860                     	if	1	;There are 3 active tblptr bytes
 31615  003860  6AF8               	clrf	tblptru,c
 31616  003862  0E00               	movlw	low (__mediumconst shr (0+16))
 31617  003864  22F8               	addwfc	tblptru,f,c
 31618  003866                     	endif
 31619  003866  501F               	movf	__display_done@cntr,w,c
 31620  003868  0D01               	mullw	1
 31621  00386A  0E28               	movlw	low (_display_content+40)
 31622  00386C  24F3               	addwf	prodl,w,c
 31623  00386E  6ED9               	movwf	fsr2l,c
 31624  003870  0E02               	movlw	high (_display_content+40)
 31625  003872  20F4               	addwfc	prodh,w,c
 31626  003874  6EDA               	movwf	fsr2h,c
 31627  003876  0008               	tblrd		*
 31628  003878  CFF5 FFDF          	movff	tablat,indf2
 31629  00387C  2A1F               	incf	__display_done@cntr,f,c
 31630  00387E                     l1689:
 31631  00387E  501F               	movf	__display_done@cntr,w,c
 31632  003880  0D01               	mullw	1
 31633  003882  0E64               	movlw	low _done_line3
 31634  003884  24F3               	addwf	prodl,w,c
 31635  003886  6EF6               	movwf	tblptrl,c
 31636  003888  0E8D               	movlw	high _done_line3
 31637  00388A  20F4               	addwfc	prodh,w,c
 31638  00388C  6EF7               	movwf	tblptrh,c
 31639  00388E                     	if	1	;There are 3 active tblptr bytes
 31640  00388E  6AF8               	clrf	tblptru,c
 31641  003890  0E00               	movlw	low (__mediumconst shr (0+16))
 31642  003892  22F8               	addwfc	tblptru,f,c
 31643  003894                     	endif
 31644  003894  0008               	tblrd		*
 31645  003896  50F5               	movf	tablat,w,c
 31646  003898  0900               	iorlw	0
 31647  00389A  A4D8               	btfss	status,2,c
 31648  00389C  D7D9               	goto	l1690
 31649                           
 31650                           ;display.c: 541: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 31651  00389E  ECCD  F040         	call	_bootloader_get_flashPagesWritten	;wreg free
 31652  0038A2  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 31653  0038A6  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 31654  0038AA  6A1B               	clrf	__display_itoa_u16@value+2,c
 31655  0038AC  6A1C               	clrf	__display_itoa_u16@value+3,c
 31656  0038AE  501F               	movf	__display_done@cntr,w,c
 31657  0038B0  0D01               	mullw	1
 31658  0038B2  0E28               	movlw	low (_display_content+40)
 31659  0038B4  24F3               	addwf	prodl,w,c
 31660  0038B6  6E1D               	movwf	__display_itoa_u16@text,c
 31661  0038B8  0E02               	movlw	high (_display_content+40)
 31662  0038BA  20F4               	addwfc	prodh,w,c
 31663  0038BC  6E1E               	movwf	__display_itoa_u16@text+1,c
 31664  0038BE  EC74  F02A         	call	__display_itoa_u16	;wreg free
 31665                           
 31666                           ;display.c: 542: cntr = 0;
 31667  0038C2  0E00               	movlw	0
 31668  0038C4  6E1F               	movwf	__display_done@cntr,c
 31669                           
 31670                           ;display.c: 543: while(done_line4[cntr])
 31671  0038C6  D017               	goto	l1692
 31672  0038C8                     
 31673                           ;display.c: 544: display_content[3][cntr] = done_line4[cntr++];
 31674  0038C8  501F               	movf	__display_done@cntr,w,c
 31675  0038CA  0D01               	mullw	1
 31676  0038CC  0E54               	movlw	low _done_line4
 31677  0038CE  24F3               	addwf	prodl,w,c
 31678  0038D0  6EF6               	movwf	tblptrl,c
 31679  0038D2  0E8D               	movlw	high _done_line4
 31680  0038D4  20F4               	addwfc	prodh,w,c
 31681  0038D6  6EF7               	movwf	tblptrh,c
 31682  0038D8                     	if	1	;There are 3 active tblptr bytes
 31683  0038D8  6AF8               	clrf	tblptru,c
 31684  0038DA  0E00               	movlw	low (__mediumconst shr (0+16))
 31685  0038DC  22F8               	addwfc	tblptru,f,c
 31686  0038DE                     	endif
 31687  0038DE  501F               	movf	__display_done@cntr,w,c
 31688  0038E0  0D01               	mullw	1
 31689  0038E2  0E3C               	movlw	low (_display_content+60)
 31690  0038E4  24F3               	addwf	prodl,w,c
 31691  0038E6  6ED9               	movwf	fsr2l,c
 31692  0038E8  0E02               	movlw	high (_display_content+60)
 31693  0038EA  20F4               	addwfc	prodh,w,c
 31694  0038EC  6EDA               	movwf	fsr2h,c
 31695  0038EE  0008               	tblrd		*
 31696  0038F0  CFF5 FFDF          	movff	tablat,indf2
 31697  0038F4  2A1F               	incf	__display_done@cntr,f,c
 31698  0038F6                     l1692:
 31699  0038F6  501F               	movf	__display_done@cntr,w,c
 31700  0038F8  0D01               	mullw	1
 31701  0038FA  0E54               	movlw	low _done_line4
 31702  0038FC  24F3               	addwf	prodl,w,c
 31703  0038FE  6EF6               	movwf	tblptrl,c
 31704  003900  0E8D               	movlw	high _done_line4
 31705  003902  20F4               	addwfc	prodh,w,c
 31706  003904  6EF7               	movwf	tblptrh,c
 31707  003906                     	if	1	;There are 3 active tblptr bytes
 31708  003906  6AF8               	clrf	tblptru,c
 31709  003908  0E00               	movlw	low (__mediumconst shr (0+16))
 31710  00390A  22F8               	addwfc	tblptru,f,c
 31711  00390C                     	endif
 31712  00390C  0008               	tblrd		*
 31713  00390E  50F5               	movf	tablat,w,c
 31714  003910  0900               	iorlw	0
 31715  003912  B4D8               	btfsc	status,2,c
 31716  003914  0012               	return	
 31717  003916  D7D8               	goto	l1693
 31718  003918                     __end_of__display_done:
 31719                           	opt stack 0
 31720                           tosu	equ	0xFFF
 31721                           tosh	equ	0xFFE
 31722                           tosl	equ	0xFFD
 31723                           pclath	equ	0xFFA
 31724                           tblptru	equ	0xFF8
 31725                           tblptrh	equ	0xFF7
 31726                           tblptrl	equ	0xFF6
 31727                           tablat	equ	0xFF5
 31728                           prodh	equ	0xFF4
 31729                           prodl	equ	0xFF3
 31730                           intcon	equ	0xFF2
 31731                           intcon2	equ	0xFF1
 31732                           intcon3	equ	0xFF0
 31733                           indf0	equ	0xFEF
 31734                           postinc0	equ	0xFEE
 31735                           fsr0h	equ	0xFEA
 31736                           fsr0l	equ	0xFE9
 31737                           wreg	equ	0xFE8
 31738                           indf1	equ	0xFE7
 31739                           postdec1	equ	0xFE5
 31740                           plusw1	equ	0xFE3
 31741                           fsr1h	equ	0xFE2
 31742                           fsr1l	equ	0xFE1
 31743                           indf2	equ	0xFDF
 31744                           postinc2	equ	0xFDE
 31745                           postdec2	equ	0xFDD
 31746                           plusw2	equ	0xFDB
 31747                           fsr2h	equ	0xFDA
 31748                           fsr2l	equ	0xFD9
 31749                           status	equ	0xFD8
 31750                           
 31751 ;; *************** function _bootloader_get_flashPagesWritten *****************
 31752 ;; Defined at:
 31753 ;;		line 508 in file "bootloader.c"
 31754 ;; Parameters:    Size  Location     Type
 31755 ;;		None
 31756 ;; Auto vars:     Size  Location     Type
 31757 ;;		None
 31758 ;; Return value:  Size  Location     Type
 31759 ;;                  2    0[COMRAM] unsigned int 
 31760 ;; Registers used:
 31761 ;;		None
 31762 ;; Tracked objects:
 31763 ;;		On entry : 0/0
 31764 ;;		On exit  : 0/0
 31765 ;;		Unchanged: 0/0
 31766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31771 ;;Total ram usage:        2 bytes
 31772 ;; Hardware stack levels used:    1
 31773 ;; This function calls:
 31774 ;;		Nothing
 31775 ;; This function is called by:
 31776 ;;		__display_programming
 31777 ;;		__display_done
 31778 ;;		__fill_buffer_get_bootloader_details
 31779 ;; This function uses a non-reentrant model
 31780 ;;
 31781                           
 31782                           	psect	text152
 31783  00819A                     __ptext152:
 31784                           	opt stack 0
 31785  00819A                     _bootloader_get_flashPagesWritten:
 31786                           	opt stack 25
 31787                           
 31788                           ;bootloader.c: 510: return flash_pages_written;
 31789                           
 31790                           ;incstack = 0
 31791  00819A  C170  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 31792  00819E  C171  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 31793  0081A2  0012               	return		;funcret
 31794  0081A4                     __end_of_bootloader_get_flashPagesWritten:
 31795                           	opt stack 0
 31796                           tosu	equ	0xFFF
 31797                           tosh	equ	0xFFE
 31798                           tosl	equ	0xFFD
 31799                           pclath	equ	0xFFA
 31800                           tblptru	equ	0xFF8
 31801                           tblptrh	equ	0xFF7
 31802                           tblptrl	equ	0xFF6
 31803                           tablat	equ	0xFF5
 31804                           prodh	equ	0xFF4
 31805                           prodl	equ	0xFF3
 31806                           intcon	equ	0xFF2
 31807                           intcon2	equ	0xFF1
 31808                           intcon3	equ	0xFF0
 31809                           indf0	equ	0xFEF
 31810                           postinc0	equ	0xFEE
 31811                           fsr0h	equ	0xFEA
 31812                           fsr0l	equ	0xFE9
 31813                           wreg	equ	0xFE8
 31814                           indf1	equ	0xFE7
 31815                           postdec1	equ	0xFE5
 31816                           plusw1	equ	0xFE3
 31817                           fsr1h	equ	0xFE2
 31818                           fsr1l	equ	0xFE1
 31819                           indf2	equ	0xFDF
 31820                           postinc2	equ	0xFDE
 31821                           postdec2	equ	0xFDD
 31822                           plusw2	equ	0xFDB
 31823                           fsr2h	equ	0xFDA
 31824                           fsr2l	equ	0xFD9
 31825                           status	equ	0xFD8
 31826                           
 31827 ;; *************** function __display_clear *****************
 31828 ;; Defined at:
 31829 ;;		line 75 in file "display.c"
 31830 ;; Parameters:    Size  Location     Type
 31831 ;;		None
 31832 ;; Auto vars:     Size  Location     Type
 31833 ;;  col             1    3[COMRAM] unsigned char 
 31834 ;;  row             1    2[COMRAM] unsigned char 
 31835 ;; Return value:  Size  Location     Type
 31836 ;;                  1    wreg      void 
 31837 ;; Registers used:
 31838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31839 ;; Tracked objects:
 31840 ;;		On entry : 0/0
 31841 ;;		On exit  : 0/0
 31842 ;;		Unchanged: 0/0
 31843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31845 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31847 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31848 ;;Total ram usage:        4 bytes
 31849 ;; Hardware stack levels used:    1
 31850 ;; This function calls:
 31851 ;;		Nothing
 31852 ;; This function is called by:
 31853 ;;		_display_prepare
 31854 ;; This function uses a non-reentrant model
 31855 ;;
 31856                           
 31857                           	psect	text153
 31858  00771A                     __ptext153:
 31859                           	opt stack 0
 31860  00771A                     __display_clear:
 31861                           	opt stack 26
 31862                           
 31863                           ;display.c: 77: uint8_t row;;display.c: 78: uint8_t col;;display.c: 79: for(row=0;row<4;
      +                          ++row)
 31864                           
 31865                           ;incstack = 0
 31866  00771A  0E00               	movlw	0
 31867  00771C  6E03               	movwf	__display_clear@row,c
 31868  00771E                     l10927:
 31869  00771E  0E03               	movlw	3
 31870  007720  6403               	cpfsgt	__display_clear@row,c
 31871  007722  D001               	goto	l1461
 31872  007724  0012               	return	
 31873  007726                     l1461:
 31874                           
 31875                           ;display.c: 80: {;display.c: 81: for(col=0;col<20;++col)
 31876  007726  0E00               	movlw	0
 31877  007728  6E04               	movwf	__display_clear@col,c
 31878  00772A                     l10933:
 31879  00772A  0E13               	movlw	19
 31880  00772C  6404               	cpfsgt	__display_clear@col,c
 31881  00772E  D001               	goto	l1463
 31882  007730  D016               	goto	u7830
 31883  007732                     l1463:
 31884                           
 31885                           ;display.c: 82: {;display.c: 83: display_content[row][col] = ' ';
 31886  007732  5003               	movf	__display_clear@row,w,c
 31887  007734  0D14               	mullw	20
 31888  007736  0E00               	movlw	low _display_content
 31889  007738  6E01               	movwf	??__display_clear& (0+255),c
 31890  00773A  0E02               	movlw	high _display_content
 31891  00773C  6E02               	movwf	(??__display_clear+1)& (0+255),c
 31892  00773E  50F3               	movf	prodl,w,c
 31893  007740  2601               	addwf	??__display_clear,f,c
 31894  007742  50F4               	movf	prodh,w,c
 31895  007744  2202               	addwfc	??__display_clear+1,f,c
 31896  007746  5004               	movf	__display_clear@col,w,c
 31897  007748  0D01               	mullw	1
 31898  00774A  50F3               	movf	prodl,w,c
 31899  00774C  2401               	addwf	??__display_clear,w,c
 31900  00774E  6ED9               	movwf	fsr2l,c
 31901  007750  50F4               	movf	prodh,w,c
 31902  007752  2002               	addwfc	??__display_clear+1,w,c
 31903  007754  6EDA               	movwf	fsr2h,c
 31904  007756  0E20               	movlw	32
 31905  007758  6EDF               	movwf	indf2,c
 31906  00775A  2A04               	incf	__display_clear@col,f,c
 31907  00775C  D7E6               	goto	l10933
 31908  00775E                     u7830:
 31909  00775E  2A03               	incf	__display_clear@row,f,c
 31910  007760  D7DE               	goto	l10927
 31911  007762                     __end_of__display_clear:
 31912                           	opt stack 0
 31913                           tosu	equ	0xFFF
 31914                           tosh	equ	0xFFE
 31915                           tosl	equ	0xFFD
 31916                           pclath	equ	0xFFA
 31917                           tblptru	equ	0xFF8
 31918                           tblptrh	equ	0xFF7
 31919                           tblptrl	equ	0xFF6
 31920                           tablat	equ	0xFF5
 31921                           prodh	equ	0xFF4
 31922                           prodl	equ	0xFF3
 31923                           intcon	equ	0xFF2
 31924                           intcon2	equ	0xFF1
 31925                           intcon3	equ	0xFF0
 31926                           indf0	equ	0xFEF
 31927                           postinc0	equ	0xFEE
 31928                           fsr0h	equ	0xFEA
 31929                           fsr0l	equ	0xFE9
 31930                           wreg	equ	0xFE8
 31931                           indf1	equ	0xFE7
 31932                           postdec1	equ	0xFE5
 31933                           plusw1	equ	0xFE3
 31934                           fsr1h	equ	0xFE2
 31935                           fsr1l	equ	0xFE1
 31936                           indf2	equ	0xFDF
 31937                           postinc2	equ	0xFDE
 31938                           postdec2	equ	0xFDD
 31939                           plusw2	equ	0xFDB
 31940                           fsr2h	equ	0xFDA
 31941                           fsr2l	equ	0xFD9
 31942                           status	equ	0xFD8
 31943                           
 31944 ;; *************** function __display_checked *****************
 31945 ;; Defined at:
 31946 ;;		line 433 in file "display.c"
 31947 ;; Parameters:    Size  Location     Type
 31948 ;;		None
 31949 ;; Auto vars:     Size  Location     Type
 31950 ;;  cntr            1   33[COMRAM] unsigned char 
 31951 ;;  start           1   32[COMRAM] unsigned char 
 31952 ;; Return value:  Size  Location     Type
 31953 ;;                  1    wreg      void 
 31954 ;; Registers used:
 31955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31956 ;; Tracked objects:
 31957 ;;		On entry : 0/0
 31958 ;;		On exit  : 0/0
 31959 ;;		Unchanged: 0/0
 31960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31963 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31964 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31965 ;;Total ram usage:        4 bytes
 31966 ;; Hardware stack levels used:    1
 31967 ;; Hardware stack levels required when called:    4
 31968 ;; This function calls:
 31969 ;;		__display_itoa_u16
 31970 ;;		_bootloader_get_total_entries
 31971 ;; This function is called by:
 31972 ;;		_display_prepare
 31973 ;; This function uses a non-reentrant model
 31974 ;;
 31975                           
 31976                           	psect	text154
 31977  0034B0                     __ptext154:
 31978                           	opt stack 0
 31979  0034B0                     __display_checked:
 31980                           	opt stack 22
 31981                           
 31982                           ;display.c: 435: uint8_t cntr;;display.c: 436: uint8_t start;;display.c: 437: cntr = 0;
 31983                           
 31984                           ;incstack = 0
 31985  0034B0  0E00               	movlw	0
 31986  0034B2  6E22               	movwf	__display_checked@cntr,c
 31987                           
 31988                           ;display.c: 438: while(checked_line1[cntr])
 31989  0034B4  D017               	goto	l1619
 31990  0034B6                     
 31991                           ;display.c: 439: display_content[0][cntr] = checked_line1[cntr++];
 31992  0034B6  5022               	movf	__display_checked@cntr,w,c
 31993  0034B8  0D01               	mullw	1
 31994  0034BA  0EB4               	movlw	low _checked_line1
 31995  0034BC  24F3               	addwf	prodl,w,c
 31996  0034BE  6EF6               	movwf	tblptrl,c
 31997  0034C0  0E8D               	movlw	high _checked_line1
 31998  0034C2  20F4               	addwfc	prodh,w,c
 31999  0034C4  6EF7               	movwf	tblptrh,c
 32000  0034C6                     	if	1	;There are 3 active tblptr bytes
 32001  0034C6  6AF8               	clrf	tblptru,c
 32002  0034C8  0E00               	movlw	low (__mediumconst shr (0+16))
 32003  0034CA  22F8               	addwfc	tblptru,f,c
 32004  0034CC                     	endif
 32005  0034CC  5022               	movf	__display_checked@cntr,w,c
 32006  0034CE  0D01               	mullw	1
 32007  0034D0  0E00               	movlw	low _display_content
 32008  0034D2  24F3               	addwf	prodl,w,c
 32009  0034D4  6ED9               	movwf	fsr2l,c
 32010  0034D6  0E02               	movlw	high _display_content
 32011  0034D8  20F4               	addwfc	prodh,w,c
 32012  0034DA  6EDA               	movwf	fsr2h,c
 32013  0034DC  0008               	tblrd		*
 32014  0034DE  CFF5 FFDF          	movff	tablat,indf2
 32015  0034E2  2A22               	incf	__display_checked@cntr,f,c
 32016  0034E4                     l1619:
 32017  0034E4  5022               	movf	__display_checked@cntr,w,c
 32018  0034E6  0D01               	mullw	1
 32019  0034E8  0EB4               	movlw	low _checked_line1
 32020  0034EA  24F3               	addwf	prodl,w,c
 32021  0034EC  6EF6               	movwf	tblptrl,c
 32022  0034EE  0E8D               	movlw	high _checked_line1
 32023  0034F0  20F4               	addwfc	prodh,w,c
 32024  0034F2  6EF7               	movwf	tblptrh,c
 32025  0034F4                     	if	1	;There are 3 active tblptr bytes
 32026  0034F4  6AF8               	clrf	tblptru,c
 32027  0034F6  0E00               	movlw	low (__mediumconst shr (0+16))
 32028  0034F8  22F8               	addwfc	tblptru,f,c
 32029  0034FA                     	endif
 32030  0034FA  0008               	tblrd		*
 32031  0034FC  50F5               	movf	tablat,w,c
 32032  0034FE  0900               	iorlw	0
 32033  003500  A4D8               	btfss	status,2,c
 32034  003502  D7D9               	goto	l1620
 32035                           
 32036                           ;display.c: 440: cntr = 0;
 32037  003504  0E00               	movlw	0
 32038  003506  6E22               	movwf	__display_checked@cntr,c
 32039                           
 32040                           ;display.c: 441: while(checked_line2[cntr])
 32041  003508  D017               	goto	l1622
 32042  00350A                     
 32043                           ;display.c: 442: display_content[1][cntr] = checked_line2[cntr++];
 32044  00350A  5022               	movf	__display_checked@cntr,w,c
 32045  00350C  0D01               	mullw	1
 32046  00350E  0E99               	movlw	low _checked_line2
 32047  003510  24F3               	addwf	prodl,w,c
 32048  003512  6EF6               	movwf	tblptrl,c
 32049  003514  0E8C               	movlw	high _checked_line2
 32050  003516  20F4               	addwfc	prodh,w,c
 32051  003518  6EF7               	movwf	tblptrh,c
 32052  00351A                     	if	1	;There are 3 active tblptr bytes
 32053  00351A  6AF8               	clrf	tblptru,c
 32054  00351C  0E00               	movlw	low (__mediumconst shr (0+16))
 32055  00351E  22F8               	addwfc	tblptru,f,c
 32056  003520                     	endif
 32057  003520  5022               	movf	__display_checked@cntr,w,c
 32058  003522  0D01               	mullw	1
 32059  003524  0E14               	movlw	low (_display_content+20)
 32060  003526  24F3               	addwf	prodl,w,c
 32061  003528  6ED9               	movwf	fsr2l,c
 32062  00352A  0E02               	movlw	high (_display_content+20)
 32063  00352C  20F4               	addwfc	prodh,w,c
 32064  00352E  6EDA               	movwf	fsr2h,c
 32065  003530  0008               	tblrd		*
 32066  003532  CFF5 FFDF          	movff	tablat,indf2
 32067  003536  2A22               	incf	__display_checked@cntr,f,c
 32068  003538                     l1622:
 32069  003538  5022               	movf	__display_checked@cntr,w,c
 32070  00353A  0D01               	mullw	1
 32071  00353C  0E99               	movlw	low _checked_line2
 32072  00353E  24F3               	addwf	prodl,w,c
 32073  003540  6EF6               	movwf	tblptrl,c
 32074  003542  0E8C               	movlw	high _checked_line2
 32075  003544  20F4               	addwfc	prodh,w,c
 32076  003546  6EF7               	movwf	tblptrh,c
 32077  003548                     	if	1	;There are 3 active tblptr bytes
 32078  003548  6AF8               	clrf	tblptru,c
 32079  00354A  0E00               	movlw	low (__mediumconst shr (0+16))
 32080  00354C  22F8               	addwfc	tblptru,f,c
 32081  00354E                     	endif
 32082  00354E  0008               	tblrd		*
 32083  003550  50F5               	movf	tablat,w,c
 32084  003552  0900               	iorlw	0
 32085  003554  A4D8               	btfss	status,2,c
 32086  003556  D7D9               	goto	l1623
 32087                           
 32088                           ;display.c: 444: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 32089  003558  ECD2  F040         	call	_bootloader_get_total_entries	;wreg free
 32090  00355C  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 32091  003560  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 32092  003564  6A1B               	clrf	__display_itoa_u16@value+2,c
 32093  003566  6A1C               	clrf	__display_itoa_u16@value+3,c
 32094  003568  0E28               	movlw	low (_display_content+40)
 32095  00356A  6E1D               	movwf	__display_itoa_u16@text,c
 32096  00356C  0E02               	movlw	high (_display_content+40)
 32097  00356E  6E1E               	movwf	__display_itoa_u16@text+1,c
 32098  003570  EC74  F02A         	call	__display_itoa_u16	;wreg free
 32099  003574  6E21               	movwf	__display_checked@start,c
 32100                           
 32101                           ;display.c: 445: start++;
 32102  003576  2A21               	incf	__display_checked@start,f,c
 32103                           
 32104                           ;display.c: 446: cntr = 0;
 32105  003578  0E00               	movlw	0
 32106  00357A  6E22               	movwf	__display_checked@cntr,c
 32107                           
 32108                           ;display.c: 447: while(checked_line3[cntr])
 32109  00357C  D01C               	goto	l1625
 32110  00357E                     
 32111                           ;display.c: 448: display_content[2][start+cntr] = checked_line3[cntr++];
 32112  00357E  5022               	movf	__display_checked@cntr,w,c
 32113  003580  0D01               	mullw	1
 32114  003582  0E73               	movlw	low _checked_line3
 32115  003584  24F3               	addwf	prodl,w,c
 32116  003586  6EF6               	movwf	tblptrl,c
 32117  003588  0E8E               	movlw	high _checked_line3
 32118  00358A  20F4               	addwfc	prodh,w,c
 32119  00358C  6EF7               	movwf	tblptrh,c
 32120  00358E                     	if	1	;There are 3 active tblptr bytes
 32121  00358E  6AF8               	clrf	tblptru,c
 32122  003590  0E00               	movlw	low (__mediumconst shr (0+16))
 32123  003592  22F8               	addwfc	tblptru,f,c
 32124  003594                     	endif
 32125  003594  5022               	movf	__display_checked@cntr,w,c
 32126  003596  C021  F01F         	movff	__display_checked@start,??__display_checked
 32127  00359A  6A20               	clrf	(??__display_checked+1)& (0+255),c
 32128  00359C  261F               	addwf	??__display_checked,f,c
 32129  00359E  0E00               	movlw	0
 32130  0035A0  2220               	addwfc	??__display_checked+1,f,c
 32131  0035A2  0E28               	movlw	low (_display_content+40)
 32132  0035A4  241F               	addwf	??__display_checked,w,c
 32133  0035A6  6ED9               	movwf	fsr2l,c
 32134  0035A8  0E02               	movlw	high (_display_content+40)
 32135  0035AA  2020               	addwfc	??__display_checked+1,w,c
 32136  0035AC  6EDA               	movwf	fsr2h,c
 32137  0035AE  0008               	tblrd		*
 32138  0035B0  CFF5 FFDF          	movff	tablat,indf2
 32139  0035B4  2A22               	incf	__display_checked@cntr,f,c
 32140  0035B6                     l1625:
 32141  0035B6  5022               	movf	__display_checked@cntr,w,c
 32142  0035B8  0D01               	mullw	1
 32143  0035BA  0E73               	movlw	low _checked_line3
 32144  0035BC  24F3               	addwf	prodl,w,c
 32145  0035BE  6EF6               	movwf	tblptrl,c
 32146  0035C0  0E8E               	movlw	high _checked_line3
 32147  0035C2  20F4               	addwfc	prodh,w,c
 32148  0035C4  6EF7               	movwf	tblptrh,c
 32149  0035C6                     	if	1	;There are 3 active tblptr bytes
 32150  0035C6  6AF8               	clrf	tblptru,c
 32151  0035C8  0E00               	movlw	low (__mediumconst shr (0+16))
 32152  0035CA  22F8               	addwfc	tblptru,f,c
 32153  0035CC                     	endif
 32154  0035CC  0008               	tblrd		*
 32155  0035CE  50F5               	movf	tablat,w,c
 32156  0035D0  0900               	iorlw	0
 32157  0035D2  A4D8               	btfss	status,2,c
 32158  0035D4  D7D4               	goto	l1626
 32159                           
 32160                           ;display.c: 450: cntr = 0;
 32161  0035D6  0E00               	movlw	0
 32162  0035D8  6E22               	movwf	__display_checked@cntr,c
 32163                           
 32164                           ;display.c: 451: while(checked_line4[cntr])
 32165  0035DA  D017               	goto	l1628
 32166  0035DC                     
 32167                           ;display.c: 452: display_content[3][cntr] = checked_line4[cntr++];
 32168  0035DC  5022               	movf	__display_checked@cntr,w,c
 32169  0035DE  0D01               	mullw	1
 32170  0035E0  0E32               	movlw	low _checked_line4
 32171  0035E2  24F3               	addwf	prodl,w,c
 32172  0035E4  6EF6               	movwf	tblptrl,c
 32173  0035E6  0E8D               	movlw	high _checked_line4
 32174  0035E8  20F4               	addwfc	prodh,w,c
 32175  0035EA  6EF7               	movwf	tblptrh,c
 32176  0035EC                     	if	1	;There are 3 active tblptr bytes
 32177  0035EC  6AF8               	clrf	tblptru,c
 32178  0035EE  0E00               	movlw	low (__mediumconst shr (0+16))
 32179  0035F0  22F8               	addwfc	tblptru,f,c
 32180  0035F2                     	endif
 32181  0035F2  5022               	movf	__display_checked@cntr,w,c
 32182  0035F4  0D01               	mullw	1
 32183  0035F6  0E3C               	movlw	low (_display_content+60)
 32184  0035F8  24F3               	addwf	prodl,w,c
 32185  0035FA  6ED9               	movwf	fsr2l,c
 32186  0035FC  0E02               	movlw	high (_display_content+60)
 32187  0035FE  20F4               	addwfc	prodh,w,c
 32188  003600  6EDA               	movwf	fsr2h,c
 32189  003602  0008               	tblrd		*
 32190  003604  CFF5 FFDF          	movff	tablat,indf2
 32191  003608  2A22               	incf	__display_checked@cntr,f,c
 32192  00360A                     l1628:
 32193  00360A  5022               	movf	__display_checked@cntr,w,c
 32194  00360C  0D01               	mullw	1
 32195  00360E  0E32               	movlw	low _checked_line4
 32196  003610  24F3               	addwf	prodl,w,c
 32197  003612  6EF6               	movwf	tblptrl,c
 32198  003614  0E8D               	movlw	high _checked_line4
 32199  003616  20F4               	addwfc	prodh,w,c
 32200  003618  6EF7               	movwf	tblptrh,c
 32201  00361A                     	if	1	;There are 3 active tblptr bytes
 32202  00361A  6AF8               	clrf	tblptru,c
 32203  00361C  0E00               	movlw	low (__mediumconst shr (0+16))
 32204  00361E  22F8               	addwfc	tblptru,f,c
 32205  003620                     	endif
 32206  003620  0008               	tblrd		*
 32207  003622  50F5               	movf	tablat,w,c
 32208  003624  0900               	iorlw	0
 32209  003626  B4D8               	btfsc	status,2,c
 32210  003628  0012               	return	
 32211  00362A  D7D8               	goto	l1629
 32212  00362C                     __end_of__display_checked:
 32213                           	opt stack 0
 32214                           tosu	equ	0xFFF
 32215                           tosh	equ	0xFFE
 32216                           tosl	equ	0xFFD
 32217                           pclath	equ	0xFFA
 32218                           tblptru	equ	0xFF8
 32219                           tblptrh	equ	0xFF7
 32220                           tblptrl	equ	0xFF6
 32221                           tablat	equ	0xFF5
 32222                           prodh	equ	0xFF4
 32223                           prodl	equ	0xFF3
 32224                           intcon	equ	0xFF2
 32225                           intcon2	equ	0xFF1
 32226                           intcon3	equ	0xFF0
 32227                           indf0	equ	0xFEF
 32228                           postinc0	equ	0xFEE
 32229                           fsr0h	equ	0xFEA
 32230                           fsr0l	equ	0xFE9
 32231                           wreg	equ	0xFE8
 32232                           indf1	equ	0xFE7
 32233                           postdec1	equ	0xFE5
 32234                           plusw1	equ	0xFE3
 32235                           fsr1h	equ	0xFE2
 32236                           fsr1l	equ	0xFE1
 32237                           indf2	equ	0xFDF
 32238                           postinc2	equ	0xFDE
 32239                           postdec2	equ	0xFDD
 32240                           plusw2	equ	0xFDB
 32241                           fsr2h	equ	0xFDA
 32242                           fsr2l	equ	0xFD9
 32243                           status	equ	0xFD8
 32244                           
 32245 ;; *************** function _bootloader_get_total_entries *****************
 32246 ;; Defined at:
 32247 ;;		line 467 in file "bootloader.c"
 32248 ;; Parameters:    Size  Location     Type
 32249 ;;		None
 32250 ;; Auto vars:     Size  Location     Type
 32251 ;;		None
 32252 ;; Return value:  Size  Location     Type
 32253 ;;                  2    0[COMRAM] unsigned int 
 32254 ;; Registers used:
 32255 ;;		None
 32256 ;; Tracked objects:
 32257 ;;		On entry : 0/0
 32258 ;;		On exit  : 0/0
 32259 ;;		Unchanged: 0/0
 32260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32265 ;;Total ram usage:        2 bytes
 32266 ;; Hardware stack levels used:    1
 32267 ;; This function calls:
 32268 ;;		Nothing
 32269 ;; This function is called by:
 32270 ;;		__display_checked
 32271 ;;		__display_programming
 32272 ;;		__fill_buffer_get_bootloader_details
 32273 ;; This function uses a non-reentrant model
 32274 ;;
 32275                           
 32276                           	psect	text155
 32277  0081A4                     __ptext155:
 32278                           	opt stack 0
 32279  0081A4                     _bootloader_get_total_entries:
 32280                           	opt stack 25
 32281                           
 32282                           ;bootloader.c: 469: return total_hex_file_entries;
 32283                           
 32284                           ;incstack = 0
 32285  0081A4  C172  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 32286  0081A8  C173  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 32287  0081AC  0012               	return		;funcret
 32288  0081AE                     __end_of_bootloader_get_total_entries:
 32289                           	opt stack 0
 32290                           tosu	equ	0xFFF
 32291                           tosh	equ	0xFFE
 32292                           tosl	equ	0xFFD
 32293                           pclath	equ	0xFFA
 32294                           tblptru	equ	0xFF8
 32295                           tblptrh	equ	0xFF7
 32296                           tblptrl	equ	0xFF6
 32297                           tablat	equ	0xFF5
 32298                           prodh	equ	0xFF4
 32299                           prodl	equ	0xFF3
 32300                           intcon	equ	0xFF2
 32301                           intcon2	equ	0xFF1
 32302                           intcon3	equ	0xFF0
 32303                           indf0	equ	0xFEF
 32304                           postinc0	equ	0xFEE
 32305                           fsr0h	equ	0xFEA
 32306                           fsr0l	equ	0xFE9
 32307                           wreg	equ	0xFE8
 32308                           indf1	equ	0xFE7
 32309                           postdec1	equ	0xFE5
 32310                           plusw1	equ	0xFE3
 32311                           fsr1h	equ	0xFE2
 32312                           fsr1l	equ	0xFE1
 32313                           indf2	equ	0xFDF
 32314                           postinc2	equ	0xFDE
 32315                           postdec2	equ	0xFDD
 32316                           plusw2	equ	0xFDB
 32317                           fsr2h	equ	0xFDA
 32318                           fsr2l	equ	0xFD9
 32319                           status	equ	0xFD8
 32320                           
 32321 ;; *************** function __display_itoa_u16 *****************
 32322 ;; Defined at:
 32323 ;;		line 88 in file "display.c"
 32324 ;; Parameters:    Size  Location     Type
 32325 ;;  value           4   24[COMRAM] unsigned long 
 32326 ;;  text            2   28[COMRAM] PTR unsigned char 
 32327 ;;		 -> display_content(80), 
 32328 ;; Auto vars:     Size  Location     Type
 32329 ;;		None
 32330 ;; Return value:  Size  Location     Type
 32331 ;;                  1    wreg      unsigned char 
 32332 ;; Registers used:
 32333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32334 ;; Tracked objects:
 32335 ;;		On entry : 0/0
 32336 ;;		On exit  : 0/0
 32337 ;;		Unchanged: 0/0
 32338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32339 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32342 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32343 ;;Total ram usage:        6 bytes
 32344 ;; Hardware stack levels used:    1
 32345 ;; Hardware stack levels required when called:    3
 32346 ;; This function calls:
 32347 ;;		_itoa
 32348 ;; This function is called by:
 32349 ;;		__display_itoa_u32
 32350 ;;		__display_verify
 32351 ;;		__display_checked
 32352 ;;		__display_failed
 32353 ;;		__display_programming
 32354 ;;		__display_done
 32355 ;; This function uses a non-reentrant model
 32356 ;;
 32357                           
 32358                           	psect	text156
 32359  0054E8                     __ptext156:
 32360                           	opt stack 0
 32361  0054E8                     __display_itoa_u16:
 32362                           	opt stack 22
 32363                           
 32364                           ;display.c: 90: itoa(text, value, 10);
 32365                           
 32366                           ;incstack = 0
 32367  0054E8  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 32368  0054EC  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 32369  0054F0  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 32370  0054F4  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 32371  0054F8  0E00               	movlw	0
 32372  0054FA  6E16               	movwf	itoa@base+1,c
 32373  0054FC  0E0A               	movlw	10
 32374  0054FE  6E15               	movwf	itoa@base,c
 32375  005500  EC3C  F03C         	call	_itoa	;wreg free
 32376                           
 32377                           ;display.c: 91: if(value>9999)
 32378  005504  501C               	movf	__display_itoa_u16@value+3,w,c
 32379  005506  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32380  005508  E106               	bnz	u6700
 32381  00550A  0E10               	movlw	16
 32382  00550C  5C19               	subwf	__display_itoa_u16@value,w,c
 32383  00550E  0E27               	movlw	39
 32384  005510  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32385  005512  A0D8               	btfss	status,0,c
 32386  005514  D00A               	goto	l1468
 32387  005516                     u6700:
 32388                           
 32389                           ;display.c: 92: {;display.c: 93: *(text+5) = ' ';
 32390  005516  EE20 F005          	lfsr	2,5
 32391  00551A  501D               	movf	__display_itoa_u16@text,w,c
 32392  00551C  26D9               	addwf	fsr2l,f,c
 32393  00551E  501E               	movf	__display_itoa_u16@text+1,w,c
 32394  005520  22DA               	addwfc	fsr2h,f,c
 32395  005522  0E20               	movlw	32
 32396  005524  6EDF               	movwf	indf2,c
 32397                           
 32398                           ;display.c: 94: return 5;
 32399  005526  0E05               	movlw	5
 32400                           
 32401                           ;display.c: 95: }
 32402  005528  0012               	return	
 32403  00552A                     l1468:
 32404                           
 32405                           ;display.c: 96: else if (value>999)
 32406  00552A  501C               	movf	__display_itoa_u16@value+3,w,c
 32407  00552C  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32408  00552E  E106               	bnz	u6710
 32409  005530  0EE8               	movlw	232
 32410  005532  5C19               	subwf	__display_itoa_u16@value,w,c
 32411  005534  0E03               	movlw	3
 32412  005536  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32413  005538  A0D8               	btfss	status,0,c
 32414  00553A  D00A               	goto	l1471
 32415  00553C                     u6710:
 32416                           
 32417                           ;display.c: 97: {;display.c: 98: *(text+4) = ' ';
 32418  00553C  EE20 F004          	lfsr	2,4
 32419  005540  501D               	movf	__display_itoa_u16@text,w,c
 32420  005542  26D9               	addwf	fsr2l,f,c
 32421  005544  501E               	movf	__display_itoa_u16@text+1,w,c
 32422  005546  22DA               	addwfc	fsr2h,f,c
 32423  005548  0E20               	movlw	32
 32424  00554A  6EDF               	movwf	indf2,c
 32425                           
 32426                           ;display.c: 99: return 4;
 32427  00554C  0E04               	movlw	4
 32428                           
 32429                           ;display.c: 100: }
 32430  00554E  0012               	return	
 32431  005550                     l1471:
 32432                           
 32433                           ;display.c: 101: else if (value>99)
 32434  005550  501C               	movf	__display_itoa_u16@value+3,w,c
 32435  005552  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32436  005554  101A               	iorwf	__display_itoa_u16@value+1,w,c
 32437  005556  E104               	bnz	u6720
 32438  005558  0E64               	movlw	100
 32439  00555A  5C19               	subwf	__display_itoa_u16@value,w,c
 32440  00555C  A0D8               	btfss	status,0,c
 32441  00555E  D00A               	goto	l1473
 32442  005560                     u6720:
 32443                           
 32444                           ;display.c: 102: {;display.c: 103: *(text+3) = ' ';
 32445  005560  EE20 F003          	lfsr	2,3
 32446  005564  501D               	movf	__display_itoa_u16@text,w,c
 32447  005566  26D9               	addwf	fsr2l,f,c
 32448  005568  501E               	movf	__display_itoa_u16@text+1,w,c
 32449  00556A  22DA               	addwfc	fsr2h,f,c
 32450  00556C  0E20               	movlw	32
 32451  00556E  6EDF               	movwf	indf2,c
 32452                           
 32453                           ;display.c: 104: return 3;
 32454  005570  0E03               	movlw	3
 32455                           
 32456                           ;display.c: 105: }
 32457  005572  0012               	return	
 32458  005574                     l1473:
 32459                           
 32460                           ;display.c: 106: else if (value>9)
 32461  005574  501C               	movf	__display_itoa_u16@value+3,w,c
 32462  005576  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32463  005578  101A               	iorwf	__display_itoa_u16@value+1,w,c
 32464  00557A  E104               	bnz	u6730
 32465  00557C  0E0A               	movlw	10
 32466  00557E  5C19               	subwf	__display_itoa_u16@value,w,c
 32467  005580  A0D8               	btfss	status,0,c
 32468  005582  D00A               	goto	l1475
 32469  005584                     u6730:
 32470                           
 32471                           ;display.c: 107: {;display.c: 108: *(text+2) = ' ';
 32472  005584  EE20 F002          	lfsr	2,2
 32473  005588  501D               	movf	__display_itoa_u16@text,w,c
 32474  00558A  26D9               	addwf	fsr2l,f,c
 32475  00558C  501E               	movf	__display_itoa_u16@text+1,w,c
 32476  00558E  22DA               	addwfc	fsr2h,f,c
 32477  005590  0E20               	movlw	32
 32478  005592  6EDF               	movwf	indf2,c
 32479                           
 32480                           ;display.c: 109: return 2;
 32481  005594  0E02               	movlw	2
 32482                           
 32483                           ;display.c: 110: }
 32484  005596  0012               	return	
 32485  005598                     l1475:
 32486                           
 32487                           ;display.c: 111: else;display.c: 112: {;display.c: 113: *(text+1) = ' ';
 32488  005598  EE20 F001          	lfsr	2,1
 32489  00559C  501D               	movf	__display_itoa_u16@text,w,c
 32490  00559E  26D9               	addwf	fsr2l,f,c
 32491  0055A0  501E               	movf	__display_itoa_u16@text+1,w,c
 32492  0055A2  22DA               	addwfc	fsr2h,f,c
 32493  0055A4  0E20               	movlw	32
 32494  0055A6  6EDF               	movwf	indf2,c
 32495                           
 32496                           ;display.c: 114: return 1;
 32497  0055A8  0E01               	movlw	1
 32498  0055AA  0012               	return	
 32499  0055AC                     __end_of__display_itoa_u16:
 32500                           	opt stack 0
 32501                           tosu	equ	0xFFF
 32502                           tosh	equ	0xFFE
 32503                           tosl	equ	0xFFD
 32504                           pclath	equ	0xFFA
 32505                           tblptru	equ	0xFF8
 32506                           tblptrh	equ	0xFF7
 32507                           tblptrl	equ	0xFF6
 32508                           tablat	equ	0xFF5
 32509                           prodh	equ	0xFF4
 32510                           prodl	equ	0xFF3
 32511                           intcon	equ	0xFF2
 32512                           intcon2	equ	0xFF1
 32513                           intcon3	equ	0xFF0
 32514                           indf0	equ	0xFEF
 32515                           postinc0	equ	0xFEE
 32516                           fsr0h	equ	0xFEA
 32517                           fsr0l	equ	0xFE9
 32518                           wreg	equ	0xFE8
 32519                           indf1	equ	0xFE7
 32520                           postdec1	equ	0xFE5
 32521                           plusw1	equ	0xFE3
 32522                           fsr1h	equ	0xFE2
 32523                           fsr1l	equ	0xFE1
 32524                           indf2	equ	0xFDF
 32525                           postinc2	equ	0xFDE
 32526                           postdec2	equ	0xFDD
 32527                           plusw2	equ	0xFDB
 32528                           fsr2h	equ	0xFDA
 32529                           fsr2l	equ	0xFD9
 32530                           status	equ	0xFD8
 32531                           
 32532 ;; *************** function _itoa *****************
 32533 ;; Defined at:
 32534 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32535 ;; Parameters:    Size  Location     Type
 32536 ;;  buf             2   16[COMRAM] PTR unsigned char 
 32537 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32538 ;;  val             2   18[COMRAM] int 
 32539 ;;  base            2   20[COMRAM] int 
 32540 ;; Auto vars:     Size  Location     Type
 32541 ;;  cp              2   22[COMRAM] PTR unsigned char 
 32542 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32543 ;; Return value:  Size  Location     Type
 32544 ;;                  2   16[COMRAM] PTR unsigned char 
 32545 ;; Registers used:
 32546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32547 ;; Tracked objects:
 32548 ;;		On entry : 0/0
 32549 ;;		On exit  : 0/0
 32550 ;;		Unchanged: 0/0
 32551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32552 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32555 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32556 ;;Total ram usage:        8 bytes
 32557 ;; Hardware stack levels used:    1
 32558 ;; Hardware stack levels required when called:    2
 32559 ;; This function calls:
 32560 ;;		_utoa
 32561 ;; This function is called by:
 32562 ;;		__display_itoa_u16
 32563 ;;		__display_itoa_u32
 32564 ;;		__display_itoa
 32565 ;; This function uses a non-reentrant model
 32566 ;;
 32567                           
 32568                           	psect	text157
 32569  007878                     __ptext157:
 32570                           	opt stack 0
 32571  007878                     _itoa:
 32572                           	opt stack 22
 32573                           
 32574                           ;incstack = 0
 32575  007878  C011  F017         	movff	itoa@buf,itoa@cp
 32576  00787C  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 32577  007880  AE14               	btfss	itoa@val+1,7,c
 32578  007882  D00C               	goto	l3507
 32579  007884  C011  FFD9         	movff	itoa@buf,fsr2l
 32580  007888  C012  FFDA         	movff	itoa@buf+1,fsr2h
 32581  00788C  0E2D               	movlw	45
 32582  00788E  6EDF               	movwf	indf2,c
 32583  007890  4A11               	infsnz	itoa@buf,f,c
 32584  007892  2A12               	incf	itoa@buf+1,f,c
 32585  007894  6C13               	negf	itoa@val,c
 32586  007896  1E14               	comf	itoa@val+1,f,c
 32587  007898  B0D8               	btfsc	status,0,c
 32588  00789A  2A14               	incf	itoa@val+1,f,c
 32589  00789C                     l3507:
 32590  00789C  C011  F008         	movff	itoa@buf,utoa@buf
 32591  0078A0  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 32592  0078A4  C013  F00A         	movff	itoa@val,utoa@val
 32593  0078A8  C014  F00B         	movff	itoa@val+1,utoa@val+1
 32594  0078AC  C015  F00C         	movff	itoa@base,utoa@base
 32595  0078B0  C016  F00D         	movff	itoa@base+1,utoa@base+1
 32596  0078B4  EC50  F02E         	call	_utoa	;wreg free
 32597  0078B8  0012               	return	
 32598  0078BA                     __end_of_itoa:
 32599                           	opt stack 0
 32600                           tosu	equ	0xFFF
 32601                           tosh	equ	0xFFE
 32602                           tosl	equ	0xFFD
 32603                           pclath	equ	0xFFA
 32604                           tblptru	equ	0xFF8
 32605                           tblptrh	equ	0xFF7
 32606                           tblptrl	equ	0xFF6
 32607                           tablat	equ	0xFF5
 32608                           prodh	equ	0xFF4
 32609                           prodl	equ	0xFF3
 32610                           intcon	equ	0xFF2
 32611                           intcon2	equ	0xFF1
 32612                           intcon3	equ	0xFF0
 32613                           indf0	equ	0xFEF
 32614                           postinc0	equ	0xFEE
 32615                           fsr0h	equ	0xFEA
 32616                           fsr0l	equ	0xFE9
 32617                           wreg	equ	0xFE8
 32618                           indf1	equ	0xFE7
 32619                           postdec1	equ	0xFE5
 32620                           plusw1	equ	0xFE3
 32621                           fsr1h	equ	0xFE2
 32622                           fsr1l	equ	0xFE1
 32623                           indf2	equ	0xFDF
 32624                           postinc2	equ	0xFDE
 32625                           postdec2	equ	0xFDD
 32626                           plusw2	equ	0xFDB
 32627                           fsr2h	equ	0xFDA
 32628                           fsr2l	equ	0xFD9
 32629                           status	equ	0xFD8
 32630                           
 32631 ;; *************** function _utoa *****************
 32632 ;; Defined at:
 32633 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32634 ;; Parameters:    Size  Location     Type
 32635 ;;  buf             2    7[COMRAM] PTR unsigned char 
 32636 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32637 ;;  val             2    9[COMRAM] unsigned int 
 32638 ;;  base            2   11[COMRAM] int 
 32639 ;; Auto vars:     Size  Location     Type
 32640 ;;  v               2   13[COMRAM] unsigned int 
 32641 ;;  c               1   15[COMRAM] unsigned char 
 32642 ;; Return value:  Size  Location     Type
 32643 ;;                  2    7[COMRAM] PTR unsigned char 
 32644 ;; Registers used:
 32645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32646 ;; Tracked objects:
 32647 ;;		On entry : 0/0
 32648 ;;		On exit  : 0/0
 32649 ;;		Unchanged: 0/0
 32650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32651 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32652 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32654 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32655 ;;Total ram usage:        9 bytes
 32656 ;; Hardware stack levels used:    1
 32657 ;; Hardware stack levels required when called:    1
 32658 ;; This function calls:
 32659 ;;		___lwdiv
 32660 ;;		___lwmod
 32661 ;; This function is called by:
 32662 ;;		_itoa
 32663 ;; This function uses a non-reentrant model
 32664 ;;
 32665                           
 32666                           	psect	text158
 32667  005CA0                     __ptext158:
 32668                           	opt stack 0
 32669  005CA0                     _utoa:
 32670                           	opt stack 22
 32671                           
 32672                           ;incstack = 0
 32673  005CA0  C00A  F00E         	movff	utoa@val,utoa@v
 32674  005CA4  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 32675  005CA8  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 32676  005CAC  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 32677  005CB0  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32678  005CB4  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32679  005CB8  ECEB  F03A         	call	___lwdiv	;wreg free
 32680  005CBC  C001  F00E         	movff	?___lwdiv,utoa@v
 32681  005CC0  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 32682  005CC4  4A08               	infsnz	utoa@buf,f,c
 32683  005CC6  2A09               	incf	utoa@buf+1,f,c
 32684  005CC8  500E               	movf	utoa@v,w,c
 32685  005CCA  100F               	iorwf	utoa@v+1,w,c
 32686  005CCC  A4D8               	btfss	status,2,c
 32687  005CCE  D7EC               	goto	l3511
 32688  005CD0  C008  FFD9         	movff	utoa@buf,fsr2l
 32689  005CD4  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32690  005CD8  0E00               	movlw	0
 32691  005CDA  6EDF               	movwf	indf2,c
 32692  005CDC  0608               	decf	utoa@buf,f,c
 32693  005CDE  A0D8               	btfss	status,0,c
 32694  005CE0  0609               	decf	utoa@buf+1,f,c
 32695  005CE2  C00A  F001         	movff	utoa@val,___lwmod@dividend
 32696  005CE6  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 32697  005CEA  C00C  F003         	movff	utoa@base,___lwmod@divisor
 32698  005CEE  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 32699  005CF2  EC5D  F03C         	call	___lwmod	;wreg free
 32700  005CF6  5001               	movf	?___lwmod,w,c
 32701  005CF8  6E10               	movwf	utoa@c,c
 32702  005CFA  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 32703  005CFE  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 32704  005D02  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32705  005D06  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32706  005D0A  ECEB  F03A         	call	___lwdiv	;wreg free
 32707  005D0E  C001  F00A         	movff	?___lwdiv,utoa@val
 32708  005D12  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 32709  005D16  0E09               	movlw	9
 32710  005D18  6410               	cpfsgt	utoa@c,c
 32711  005D1A  D002               	goto	l3514
 32712  005D1C  0E07               	movlw	7
 32713  005D1E  2610               	addwf	utoa@c,f,c
 32714  005D20                     l3514:
 32715  005D20  0E30               	movlw	48
 32716  005D22  2610               	addwf	utoa@c,f,c
 32717  005D24  C008  FFD9         	movff	utoa@buf,fsr2l
 32718  005D28  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32719  005D2C  C010  FFDF         	movff	utoa@c,indf2
 32720  005D30  0608               	decf	utoa@buf,f,c
 32721  005D32  A0D8               	btfss	status,0,c
 32722  005D34  0609               	decf	utoa@buf+1,f,c
 32723  005D36  500A               	movf	utoa@val,w,c
 32724  005D38  100B               	iorwf	utoa@val+1,w,c
 32725  005D3A  A4D8               	btfss	status,2,c
 32726  005D3C  D7D2               	goto	l3513
 32727                           
 32728                           ;	Return value of _utoa is never used
 32729  005D3E  4A08               	infsnz	utoa@buf,f,c
 32730  005D40  2A09               	incf	utoa@buf+1,f,c
 32731  005D42  0012               	return	
 32732  005D44                     __end_of_utoa:
 32733                           	opt stack 0
 32734                           tosu	equ	0xFFF
 32735                           tosh	equ	0xFFE
 32736                           tosl	equ	0xFFD
 32737                           pclath	equ	0xFFA
 32738                           tblptru	equ	0xFF8
 32739                           tblptrh	equ	0xFF7
 32740                           tblptrl	equ	0xFF6
 32741                           tablat	equ	0xFF5
 32742                           prodh	equ	0xFF4
 32743                           prodl	equ	0xFF3
 32744                           intcon	equ	0xFF2
 32745                           intcon2	equ	0xFF1
 32746                           intcon3	equ	0xFF0
 32747                           indf0	equ	0xFEF
 32748                           postinc0	equ	0xFEE
 32749                           fsr0h	equ	0xFEA
 32750                           fsr0l	equ	0xFE9
 32751                           wreg	equ	0xFE8
 32752                           indf1	equ	0xFE7
 32753                           postdec1	equ	0xFE5
 32754                           plusw1	equ	0xFE3
 32755                           fsr1h	equ	0xFE2
 32756                           fsr1l	equ	0xFE1
 32757                           indf2	equ	0xFDF
 32758                           postinc2	equ	0xFDE
 32759                           postdec2	equ	0xFDD
 32760                           plusw2	equ	0xFDB
 32761                           fsr2h	equ	0xFDA
 32762                           fsr2l	equ	0xFD9
 32763                           status	equ	0xFD8
 32764                           
 32765 ;; *************** function ___lwmod *****************
 32766 ;; Defined at:
 32767 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 32768 ;; Parameters:    Size  Location     Type
 32769 ;;  dividend        2    0[COMRAM] unsigned int 
 32770 ;;  divisor         2    2[COMRAM] unsigned int 
 32771 ;; Auto vars:     Size  Location     Type
 32772 ;;  counter         1    4[COMRAM] unsigned char 
 32773 ;; Return value:  Size  Location     Type
 32774 ;;                  2    0[COMRAM] unsigned int 
 32775 ;; Registers used:
 32776 ;;		wreg, status,2, status,0
 32777 ;; Tracked objects:
 32778 ;;		On entry : 0/0
 32779 ;;		On exit  : 0/0
 32780 ;;		Unchanged: 0/0
 32781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32785 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32786 ;;Total ram usage:        5 bytes
 32787 ;; Hardware stack levels used:    1
 32788 ;; This function calls:
 32789 ;;		Nothing
 32790 ;; This function is called by:
 32791 ;;		_utoa
 32792 ;; This function uses a non-reentrant model
 32793 ;;
 32794                           
 32795                           	psect	text159
 32796  0078BA                     __ptext159:
 32797                           	opt stack 0
 32798  0078BA                     ___lwmod:
 32799                           	opt stack 22
 32800                           
 32801                           ;incstack = 0
 32802  0078BA  5003               	movf	___lwmod@divisor,w,c
 32803  0078BC  1004               	iorwf	___lwmod@divisor+1,w,c
 32804  0078BE  B4D8               	btfsc	status,2,c
 32805  0078C0  D018               	goto	l3338
 32806  0078C2  0E01               	movlw	1
 32807  0078C4  6E05               	movwf	___lwmod@counter,c
 32808  0078C6  D004               	goto	l3333
 32809  0078C8  90D8               	bcf	status,0,c
 32810  0078CA  3603               	rlcf	___lwmod@divisor,f,c
 32811  0078CC  3604               	rlcf	___lwmod@divisor+1,f,c
 32812  0078CE  2A05               	incf	___lwmod@counter,f,c
 32813  0078D0                     l3333:
 32814  0078D0  AE04               	btfss	___lwmod@divisor+1,7,c
 32815  0078D2  D7FA               	goto	l3334
 32816  0078D4                     u6160:
 32817  0078D4  5003               	movf	___lwmod@divisor,w,c
 32818  0078D6  5C01               	subwf	___lwmod@dividend,w,c
 32819  0078D8  5004               	movf	___lwmod@divisor+1,w,c
 32820  0078DA  5802               	subwfb	___lwmod@dividend+1,w,c
 32821  0078DC  A0D8               	btfss	status,0,c
 32822  0078DE  D004               	goto	l3337
 32823  0078E0  5003               	movf	___lwmod@divisor,w,c
 32824  0078E2  5E01               	subwf	___lwmod@dividend,f,c
 32825  0078E4  5004               	movf	___lwmod@divisor+1,w,c
 32826  0078E6  5A02               	subwfb	___lwmod@dividend+1,f,c
 32827  0078E8                     l3337:
 32828  0078E8  90D8               	bcf	status,0,c
 32829  0078EA  3204               	rrcf	___lwmod@divisor+1,f,c
 32830  0078EC  3203               	rrcf	___lwmod@divisor,f,c
 32831  0078EE  2E05               	decfsz	___lwmod@counter,f,c
 32832  0078F0  D7F1               	goto	u6160
 32833  0078F2                     l3338:
 32834  0078F2  C001  F001         	movff	___lwmod@dividend,?___lwmod
 32835  0078F6  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 32836  0078FA  0012               	return		;funcret
 32837  0078FC                     __end_of___lwmod:
 32838                           	opt stack 0
 32839                           tosu	equ	0xFFF
 32840                           tosh	equ	0xFFE
 32841                           tosl	equ	0xFFD
 32842                           pclath	equ	0xFFA
 32843                           tblptru	equ	0xFF8
 32844                           tblptrh	equ	0xFF7
 32845                           tblptrl	equ	0xFF6
 32846                           tablat	equ	0xFF5
 32847                           prodh	equ	0xFF4
 32848                           prodl	equ	0xFF3
 32849                           intcon	equ	0xFF2
 32850                           intcon2	equ	0xFF1
 32851                           intcon3	equ	0xFF0
 32852                           indf0	equ	0xFEF
 32853                           postinc0	equ	0xFEE
 32854                           fsr0h	equ	0xFEA
 32855                           fsr0l	equ	0xFE9
 32856                           wreg	equ	0xFE8
 32857                           indf1	equ	0xFE7
 32858                           postdec1	equ	0xFE5
 32859                           plusw1	equ	0xFE3
 32860                           fsr1h	equ	0xFE2
 32861                           fsr1l	equ	0xFE1
 32862                           indf2	equ	0xFDF
 32863                           postinc2	equ	0xFDE
 32864                           postdec2	equ	0xFDD
 32865                           plusw2	equ	0xFDB
 32866                           fsr2h	equ	0xFDA
 32867                           fsr2l	equ	0xFD9
 32868                           status	equ	0xFD8
 32869                           
 32870 ;; *************** function ___lwdiv *****************
 32871 ;; Defined at:
 32872 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 32873 ;; Parameters:    Size  Location     Type
 32874 ;;  dividend        2    0[COMRAM] unsigned int 
 32875 ;;  divisor         2    2[COMRAM] unsigned int 
 32876 ;; Auto vars:     Size  Location     Type
 32877 ;;  quotient        2    4[COMRAM] unsigned int 
 32878 ;;  counter         1    6[COMRAM] unsigned char 
 32879 ;; Return value:  Size  Location     Type
 32880 ;;                  2    0[COMRAM] unsigned int 
 32881 ;; Registers used:
 32882 ;;		wreg, status,2, status,0
 32883 ;; Tracked objects:
 32884 ;;		On entry : 0/0
 32885 ;;		On exit  : 0/0
 32886 ;;		Unchanged: 0/0
 32887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32889 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32891 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32892 ;;Total ram usage:        7 bytes
 32893 ;; Hardware stack levels used:    1
 32894 ;; This function calls:
 32895 ;;		Nothing
 32896 ;; This function is called by:
 32897 ;;		_utoa
 32898 ;; This function uses a non-reentrant model
 32899 ;;
 32900                           
 32901                           	psect	text160
 32902  0075D6                     __ptext160:
 32903                           	opt stack 0
 32904  0075D6                     ___lwdiv:
 32905                           	opt stack 22
 32906                           
 32907                           ;incstack = 0
 32908  0075D6  0E00               	movlw	0
 32909  0075D8  6E06               	movwf	___lwdiv@quotient+1,c
 32910  0075DA  0E00               	movlw	0
 32911  0075DC  6E05               	movwf	___lwdiv@quotient,c
 32912  0075DE  5003               	movf	___lwdiv@divisor,w,c
 32913  0075E0  1004               	iorwf	___lwdiv@divisor+1,w,c
 32914  0075E2  B4D8               	btfsc	status,2,c
 32915  0075E4  D01C               	goto	l3328
 32916  0075E6  0E01               	movlw	1
 32917  0075E8  6E07               	movwf	___lwdiv@counter,c
 32918  0075EA  D004               	goto	l3323
 32919  0075EC  90D8               	bcf	status,0,c
 32920  0075EE  3603               	rlcf	___lwdiv@divisor,f,c
 32921  0075F0  3604               	rlcf	___lwdiv@divisor+1,f,c
 32922  0075F2  2A07               	incf	___lwdiv@counter,f,c
 32923  0075F4                     l3323:
 32924  0075F4  AE04               	btfss	___lwdiv@divisor+1,7,c
 32925  0075F6  D7FA               	goto	l3324
 32926  0075F8                     u6130:
 32927  0075F8  90D8               	bcf	status,0,c
 32928  0075FA  3605               	rlcf	___lwdiv@quotient,f,c
 32929  0075FC  3606               	rlcf	___lwdiv@quotient+1,f,c
 32930  0075FE  5003               	movf	___lwdiv@divisor,w,c
 32931  007600  5C01               	subwf	___lwdiv@dividend,w,c
 32932  007602  5004               	movf	___lwdiv@divisor+1,w,c
 32933  007604  5802               	subwfb	___lwdiv@dividend+1,w,c
 32934  007606  A0D8               	btfss	status,0,c
 32935  007608  D005               	goto	l3327
 32936  00760A  5003               	movf	___lwdiv@divisor,w,c
 32937  00760C  5E01               	subwf	___lwdiv@dividend,f,c
 32938  00760E  5004               	movf	___lwdiv@divisor+1,w,c
 32939  007610  5A02               	subwfb	___lwdiv@dividend+1,f,c
 32940  007612  8005               	bsf	___lwdiv@quotient,0,c
 32941  007614                     l3327:
 32942  007614  90D8               	bcf	status,0,c
 32943  007616  3204               	rrcf	___lwdiv@divisor+1,f,c
 32944  007618  3203               	rrcf	___lwdiv@divisor,f,c
 32945  00761A  2E07               	decfsz	___lwdiv@counter,f,c
 32946  00761C  D7ED               	goto	u6130
 32947  00761E                     l3328:
 32948  00761E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 32949  007622  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32950  007626  0012               	return		;funcret
 32951  007628                     __end_of___lwdiv:
 32952                           	opt stack 0
 32953                           tosu	equ	0xFFF
 32954                           tosh	equ	0xFFE
 32955                           tosl	equ	0xFFD
 32956                           pclath	equ	0xFFA
 32957                           tblptru	equ	0xFF8
 32958                           tblptrh	equ	0xFF7
 32959                           tblptrl	equ	0xFF6
 32960                           tablat	equ	0xFF5
 32961                           prodh	equ	0xFF4
 32962                           prodl	equ	0xFF3
 32963                           intcon	equ	0xFF2
 32964                           intcon2	equ	0xFF1
 32965                           intcon3	equ	0xFF0
 32966                           indf0	equ	0xFEF
 32967                           postinc0	equ	0xFEE
 32968                           fsr0h	equ	0xFEA
 32969                           fsr0l	equ	0xFE9
 32970                           wreg	equ	0xFE8
 32971                           indf1	equ	0xFE7
 32972                           postdec1	equ	0xFE5
 32973                           plusw1	equ	0xFE3
 32974                           fsr1h	equ	0xFE2
 32975                           fsr1l	equ	0xFE1
 32976                           indf2	equ	0xFDF
 32977                           postinc2	equ	0xFDE
 32978                           postdec2	equ	0xFDD
 32979                           plusw2	equ	0xFDB
 32980                           fsr2h	equ	0xFDA
 32981                           fsr2l	equ	0xFD9
 32982                           status	equ	0xFD8
 32983                           
 32984 ;; *************** function _i2c_eeprom_writeByte *****************
 32985 ;; Defined at:
 32986 ;;		line 352 in file "i2c.c"
 32987 ;; Parameters:    Size  Location     Type
 32988 ;;  address         2   10[COMRAM] unsigned int 
 32989 ;;  data            1   12[COMRAM] unsigned char 
 32990 ;; Auto vars:     Size  Location     Type
 32991 ;;  dat             2   16[COMRAM] unsigned char [2]
 32992 ;;  slave_addres    1   18[COMRAM] unsigned char 
 32993 ;; Return value:  Size  Location     Type
 32994 ;;                  1    wreg      void 
 32995 ;; Registers used:
 32996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32997 ;; Tracked objects:
 32998 ;;		On entry : 0/0
 32999 ;;		On exit  : 0/0
 33000 ;;		Unchanged: 0/0
 33001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33002 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33003 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33004 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33005 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33006 ;;Total ram usage:        9 bytes
 33007 ;; Hardware stack levels used:    1
 33008 ;; Hardware stack levels required when called:    2
 33009 ;; This function calls:
 33010 ;;		__i2c_write
 33011 ;;		_i2c_set_frequency
 33012 ;; This function is called by:
 33013 ;;		__normal_mode
 33014 ;;		__ui_encoder
 33015 ;;		__parse_command_short
 33016 ;; This function uses a non-reentrant model
 33017 ;;
 33018                           
 33019                           	psect	text161
 33020  0078FC                     __ptext161:
 33021                           	opt stack 0
 33022  0078FC                     _i2c_eeprom_writeByte:
 33023                           	opt stack 26
 33024                           
 33025                           ;i2c.c: 354: uint8_t slave_address;;i2c.c: 355: uint8_t dat[2];;i2c.c: 357: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 33026                           
 33027                           ;incstack = 0
 33028  0078FC  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 33029  007900  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 33030  007904  0E07               	movlw	7
 33031  007906  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 33032  007908                     u9475:
 33033  007908  90D8               	bcf	status,0,c
 33034  00790A  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 33035  00790C  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 33036  00790E  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 33037  007910  D7FB               	goto	u9475
 33038  007912  500E               	movf	??_i2c_eeprom_writeByte,w,c
 33039  007914  0B0E               	andlw	14
 33040  007916  09A0               	iorlw	160
 33041  007918  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 33042                           
 33043                           ;i2c.c: 358: dat[0] = address & 0xFF;
 33044  00791A  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 33045                           
 33046                           ;i2c.c: 359: dat[1] = data;
 33047  00791E  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 33048                           
 33049                           ;i2c.c: 362: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 33050  007922  0E02               	movlw	2
 33051  007924  ECBF  F03E         	call	_i2c_set_frequency
 33052                           
 33053                           ;i2c.c: 364: _i2c_write(slave_address, &dat[0], 2);
 33054  007928  0E11               	movlw	low i2c_eeprom_writeByte@dat
 33055  00792A  6E06               	movwf	__i2c_write@data,c
 33056  00792C  0E00               	movlw	high i2c_eeprom_writeByte@dat
 33057  00792E  6E07               	movwf	__i2c_write@data+1,c
 33058  007930  0E02               	movlw	2
 33059  007932  6E08               	movwf	__i2c_write@length,c
 33060  007934  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 33061  007936  ECB1  F03B         	call	__i2c_write
 33062  00793A  0012               	return		;funcret
 33063  00793C                     __end_of_i2c_eeprom_writeByte:
 33064                           	opt stack 0
 33065                           tosu	equ	0xFFF
 33066                           tosh	equ	0xFFE
 33067                           tosl	equ	0xFFD
 33068                           pclath	equ	0xFFA
 33069                           tblptru	equ	0xFF8
 33070                           tblptrh	equ	0xFF7
 33071                           tblptrl	equ	0xFF6
 33072                           tablat	equ	0xFF5
 33073                           prodh	equ	0xFF4
 33074                           prodl	equ	0xFF3
 33075                           intcon	equ	0xFF2
 33076                           intcon2	equ	0xFF1
 33077                           intcon3	equ	0xFF0
 33078                           indf0	equ	0xFEF
 33079                           postinc0	equ	0xFEE
 33080                           fsr0h	equ	0xFEA
 33081                           fsr0l	equ	0xFE9
 33082                           wreg	equ	0xFE8
 33083                           indf1	equ	0xFE7
 33084                           postdec1	equ	0xFE5
 33085                           plusw1	equ	0xFE3
 33086                           fsr1h	equ	0xFE2
 33087                           fsr1l	equ	0xFE1
 33088                           indf2	equ	0xFDF
 33089                           postinc2	equ	0xFDE
 33090                           postdec2	equ	0xFDD
 33091                           plusw2	equ	0xFDB
 33092                           fsr2h	equ	0xFDA
 33093                           fsr2l	equ	0xFD9
 33094                           status	equ	0xFD8
 33095                           
 33096 ;; *************** function _i2c_set_frequency *****************
 33097 ;; Defined at:
 33098 ;;		line 123 in file "i2c.c"
 33099 ;; Parameters:    Size  Location     Type
 33100 ;;  frequency       1    wreg     enum E6622
 33101 ;; Auto vars:     Size  Location     Type
 33102 ;;  frequency       1    0[COMRAM] enum E6622
 33103 ;; Return value:  Size  Location     Type
 33104 ;;                  1    wreg      void 
 33105 ;; Registers used:
 33106 ;;		wreg, status,2, status,0
 33107 ;; Tracked objects:
 33108 ;;		On entry : 0/0
 33109 ;;		On exit  : 0/0
 33110 ;;		Unchanged: 0/0
 33111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33116 ;;Total ram usage:        1 bytes
 33117 ;; Hardware stack levels used:    1
 33118 ;; This function calls:
 33119 ;;		Nothing
 33120 ;; This function is called by:
 33121 ;;		_i2c_init
 33122 ;;		__ic2_display_set_address
 33123 ;;		_i2c_display_send_init_sequence
 33124 ;;		_i2c_display_cursor
 33125 ;;		_i2c_display_write_fixed
 33126 ;;		_i2c_digipot_reset_on
 33127 ;;		_i2c_digipot_reset_off
 33128 ;;		_i2c_digipot_backlight
 33129 ;;		_i2c_eeprom_writeByte
 33130 ;;		_i2c_eeprom_readByte
 33131 ;;		_i2c_display_write
 33132 ;;		_i2c_eeprom_write
 33133 ;;		_i2c_eeprom_read
 33134 ;; This function uses a non-reentrant model
 33135 ;;
 33136                           
 33137                           	psect	text162
 33138  007D7E                     __ptext162:
 33139                           	opt stack 0
 33140  007D7E                     _i2c_set_frequency:
 33141                           	opt stack 28
 33142                           
 33143                           ;incstack = 0
 33144                           ;i2c_set_frequency@frequency stored from wreg
 33145  007D7E  6E01               	movwf	i2c_set_frequency@frequency,c
 33146                           
 33147                           ;i2c.c: 125: switch(frequency)
 33148  007D80  D007               	goto	l1192
 33149  007D82                     
 33150                           ;i2c.c: 128: SSP1ADD = 119;
 33151  007D82  0E77               	movlw	119
 33152  007D84  D003               	goto	L34
 33153  007D86                     
 33154                           ;i2c.c: 131: SSP1ADD = 59;
 33155  007D86  0E3B               	movlw	59
 33156  007D88  D001               	goto	L34
 33157  007D8A                     
 33158                           ;i2c.c: 134: SSP1ADD = 29;
 33159  007D8A  0E1D               	movlw	29
 33160  007D8C                     L34:
 33161  007D8C  6EC8               	movwf	4040,c	;volatile
 33162                           
 33163                           ;i2c.c: 136: }
 33164                           
 33165                           ;i2c.c: 135: break;
 33166  007D8E  D00A               	goto	l1194
 33167  007D90                     l1192:
 33168  007D90  5001               	movf	i2c_set_frequency@frequency,w,c
 33169                           
 33170                           ; Switch size 1, requested type "space"
 33171                           ; Number of cases is 3, Range of values is 0 to 2
 33172                           ; switch strategies available:
 33173                           ; Name         Instructions Cycles
 33174                           ; simple_byte           10     6 (average)
 33175                           ;	Chosen strategy is simple_byte
 33176  007D92  0A00               	xorlw	0	; case 0
 33177  007D94  B4D8               	btfsc	status,2,c
 33178  007D96  D7F5               	goto	l1193
 33179  007D98  0A01               	xorlw	1	; case 1
 33180  007D9A  B4D8               	btfsc	status,2,c
 33181  007D9C  D7F4               	goto	l1195
 33182  007D9E  0A03               	xorlw	3	; case 2
 33183  007DA0  B4D8               	btfsc	status,2,c
 33184  007DA2  D7F3               	goto	l1196
 33185  007DA4                     l1194:
 33186                           
 33187                           ;i2c.c: 138: i2c_frequency = frequency;
 33188  007DA4  C001  F187         	movff	i2c_set_frequency@frequency,_i2c_frequency
 33189  007DA8  0012               	return		;funcret
 33190  007DAA                     __end_of_i2c_set_frequency:
 33191                           	opt stack 0
 33192                           tosu	equ	0xFFF
 33193                           tosh	equ	0xFFE
 33194                           tosl	equ	0xFFD
 33195                           pclath	equ	0xFFA
 33196                           tblptru	equ	0xFF8
 33197                           tblptrh	equ	0xFF7
 33198                           tblptrl	equ	0xFF6
 33199                           tablat	equ	0xFF5
 33200                           prodh	equ	0xFF4
 33201                           prodl	equ	0xFF3
 33202                           intcon	equ	0xFF2
 33203                           intcon2	equ	0xFF1
 33204                           intcon3	equ	0xFF0
 33205                           indf0	equ	0xFEF
 33206                           postinc0	equ	0xFEE
 33207                           fsr0h	equ	0xFEA
 33208                           fsr0l	equ	0xFE9
 33209                           wreg	equ	0xFE8
 33210                           indf1	equ	0xFE7
 33211                           postdec1	equ	0xFE5
 33212                           plusw1	equ	0xFE3
 33213                           fsr1h	equ	0xFE2
 33214                           fsr1l	equ	0xFE1
 33215                           indf2	equ	0xFDF
 33216                           postinc2	equ	0xFDE
 33217                           postdec2	equ	0xFDD
 33218                           plusw2	equ	0xFDB
 33219                           fsr2h	equ	0xFDA
 33220                           fsr2l	equ	0xFD9
 33221                           status	equ	0xFD8
 33222                           
 33223 ;; *************** function __i2c_write *****************
 33224 ;; Defined at:
 33225 ;;		line 142 in file "i2c.c"
 33226 ;; Parameters:    Size  Location     Type
 33227 ;;  slave_addres    1    wreg     unsigned char 
 33228 ;;  data            2    5[COMRAM] PTR unsigned char 
 33229 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 33230 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 33231 ;;		 -> _ic2_display_set_address@data_array(2), 
 33232 ;;  length          1    7[COMRAM] unsigned char 
 33233 ;; Auto vars:     Size  Location     Type
 33234 ;;  slave_addres    1    8[COMRAM] unsigned char 
 33235 ;;  cntr            1    9[COMRAM] unsigned char 
 33236 ;; Return value:  Size  Location     Type
 33237 ;;                  1    wreg      void 
 33238 ;; Registers used:
 33239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33240 ;; Tracked objects:
 33241 ;;		On entry : 0/0
 33242 ;;		On exit  : 0/0
 33243 ;;		Unchanged: 0/0
 33244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33245 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33248 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33249 ;;Total ram usage:        5 bytes
 33250 ;; Hardware stack levels used:    1
 33251 ;; Hardware stack levels required when called:    1
 33252 ;; This function calls:
 33253 ;;		__i2c_send
 33254 ;;		__i2c_start
 33255 ;;		__i2c_stop
 33256 ;;		__i2c_wait_idle
 33257 ;; This function is called by:
 33258 ;;		__ic2_display_set_address
 33259 ;;		_i2c_display_send_init_sequence
 33260 ;;		_i2c_digipot_reset_on
 33261 ;;		_i2c_digipot_reset_off
 33262 ;;		_i2c_digipot_backlight
 33263 ;;		_i2c_eeprom_writeByte
 33264 ;;		_i2c_eeprom_readByte
 33265 ;;		_i2c_eeprom_write
 33266 ;;		_i2c_eeprom_read
 33267 ;; This function uses a non-reentrant model
 33268 ;;
 33269                           
 33270                           	psect	text163
 33271  007762                     __ptext163:
 33272                           	opt stack 0
 33273  007762                     __i2c_write:
 33274                           	opt stack 27
 33275                           
 33276                           ;incstack = 0
 33277                           ;__i2c_write@slave_address stored from wreg
 33278  007762  6E09               	movwf	__i2c_write@slave_address,c
 33279                           
 33280                           ;i2c.c: 144: uint8_t cntr;;i2c.c: 146: _i2c_wait_idle();
 33281  007764  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 33282                           
 33283                           ;i2c.c: 147: _i2c_start();
 33284  007768  ECE5  F040         	call	__i2c_start	;wreg free
 33285                           
 33286                           ;i2c.c: 148: _i2c_wait_idle();
 33287  00776C  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 33288                           
 33289                           ;i2c.c: 149: _i2c_send(slave_address);
 33290  007770  5009               	movf	__i2c_write@slave_address,w,c
 33291  007772  ECE9  F040         	call	__i2c_send
 33292                           
 33293                           ;i2c.c: 150: _i2c_wait_idle();
 33294  007776  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 33295                           
 33296                           ;i2c.c: 152: for(cntr=0; cntr<length; ++cntr)
 33297  00777A  0E00               	movlw	0
 33298  00777C  6E0A               	movwf	__i2c_write@cntr,c
 33299  00777E  D00E               	goto	l1200
 33300  007780                     
 33301                           ;i2c.c: 153: {;i2c.c: 154: _i2c_send(data[cntr]);
 33302  007780  500A               	movf	__i2c_write@cntr,w,c
 33303  007782  0D01               	mullw	1
 33304  007784  50F3               	movf	prodl,w,c
 33305  007786  2406               	addwf	__i2c_write@data,w,c
 33306  007788  6ED9               	movwf	fsr2l,c
 33307  00778A  50F4               	movf	prodh,w,c
 33308  00778C  2007               	addwfc	__i2c_write@data+1,w,c
 33309  00778E  6EDA               	movwf	fsr2h,c
 33310  007790  50DF               	movf	indf2,w,c
 33311  007792  ECE9  F040         	call	__i2c_send
 33312                           
 33313                           ;i2c.c: 155: _i2c_wait_idle();
 33314  007796  ECE3  F038         	call	__i2c_wait_idle	;wreg free
 33315  00779A  2A0A               	incf	__i2c_write@cntr,f,c
 33316  00779C                     l1200:
 33317  00779C  5008               	movf	__i2c_write@length,w,c
 33318  00779E  5C0A               	subwf	__i2c_write@cntr,w,c
 33319  0077A0  A0D8               	btfss	status,0,c
 33320  0077A2  D7EE               	goto	l1201
 33321                           
 33322                           ;i2c.c: 156: };i2c.c: 158: _i2c_stop();
 33323  0077A4  ECE1  F040         	call	__i2c_stop	;wreg free
 33324  0077A8  0012               	return		;funcret
 33325  0077AA                     __end_of__i2c_write:
 33326                           	opt stack 0
 33327                           tosu	equ	0xFFF
 33328                           tosh	equ	0xFFE
 33329                           tosl	equ	0xFFD
 33330                           pclath	equ	0xFFA
 33331                           tblptru	equ	0xFF8
 33332                           tblptrh	equ	0xFF7
 33333                           tblptrl	equ	0xFF6
 33334                           tablat	equ	0xFF5
 33335                           prodh	equ	0xFF4
 33336                           prodl	equ	0xFF3
 33337                           intcon	equ	0xFF2
 33338                           intcon2	equ	0xFF1
 33339                           intcon3	equ	0xFF0
 33340                           indf0	equ	0xFEF
 33341                           postinc0	equ	0xFEE
 33342                           fsr0h	equ	0xFEA
 33343                           fsr0l	equ	0xFE9
 33344                           wreg	equ	0xFE8
 33345                           indf1	equ	0xFE7
 33346                           postdec1	equ	0xFE5
 33347                           plusw1	equ	0xFE3
 33348                           fsr1h	equ	0xFE2
 33349                           fsr1l	equ	0xFE1
 33350                           indf2	equ	0xFDF
 33351                           postinc2	equ	0xFDE
 33352                           postdec2	equ	0xFDD
 33353                           plusw2	equ	0xFDB
 33354                           fsr2h	equ	0xFDA
 33355                           fsr2l	equ	0xFD9
 33356                           status	equ	0xFD8
 33357                           
 33358 ;; *************** function __i2c_wait_idle *****************
 33359 ;; Defined at:
 33360 ;;		line 48 in file "i2c.c"
 33361 ;; Parameters:    Size  Location     Type
 33362 ;;		None
 33363 ;; Auto vars:     Size  Location     Type
 33364 ;;		None
 33365 ;; Return value:  Size  Location     Type
 33366 ;;                  1    wreg      void 
 33367 ;; Registers used:
 33368 ;;		wreg, status,2, status,0
 33369 ;; Tracked objects:
 33370 ;;		On entry : 0/0
 33371 ;;		On exit  : 0/0
 33372 ;;		Unchanged: 0/0
 33373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33376 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33377 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33378 ;;Total ram usage:        5 bytes
 33379 ;; Hardware stack levels used:    1
 33380 ;; This function calls:
 33381 ;;		Nothing
 33382 ;; This function is called by:
 33383 ;;		__i2c_write
 33384 ;;		__i2c_read
 33385 ;;		_i2c_display_write_fixed
 33386 ;;		_i2c_display_write
 33387 ;; This function uses a non-reentrant model
 33388 ;;
 33389                           
 33390                           	psect	text164
 33391  0071C6                     __ptext164:
 33392                           	opt stack 0
 33393  0071C6                     __i2c_wait_idle:
 33394                           	opt stack 27
 33395                           
 33396                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 33397                           
 33398                           ;incstack = 0
 33399  0071C6  A4C7               	btfss	4039,2,c	;volatile
 33400  0071C8  D003               	goto	u6300
 33401  0071CA  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33402  0071CC  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 33403  0071CE  D001               	goto	u6308
 33404  0071D0                     u6300:
 33405  0071D0  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33406  0071D2                     u6308:
 33407  0071D2  A0C5               	btfss	4037,0,c	;volatile
 33408  0071D4  D003               	goto	u6310
 33409  0071D6  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33410  0071D8  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 33411  0071DA  D001               	goto	u6318
 33412  0071DC                     u6310:
 33413  0071DC  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33414  0071DE                     u6318:
 33415  0071DE  A2C5               	btfss	4037,1,c	;volatile
 33416  0071E0  D003               	goto	u6320
 33417  0071E2  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33418  0071E4  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 33419  0071E6  D001               	goto	u6328
 33420  0071E8                     u6320:
 33421  0071E8  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33422  0071EA                     u6328:
 33423  0071EA  A4C5               	btfss	4037,2,c	;volatile
 33424  0071EC  D003               	goto	u6330
 33425  0071EE  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33426  0071F0  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 33427  0071F2  D001               	goto	u6338
 33428  0071F4                     u6330:
 33429  0071F4  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33430  0071F6                     u6338:
 33431  0071F6  A6C5               	btfss	4037,3,c	;volatile
 33432  0071F8  D003               	goto	u6340
 33433  0071FA  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33434  0071FC  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 33435  0071FE  D001               	goto	u6348
 33436  007200                     u6340:
 33437  007200  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33438  007202                     u6348:
 33439  007202  A8C5               	btfss	4037,4,c	;volatile
 33440  007204  D002               	goto	u6350
 33441  007206  0E01               	movlw	1
 33442  007208  D001               	goto	u6356
 33443  00720A                     u6350:
 33444  00720A  0E00               	movlw	0
 33445  00720C                     u6356:
 33446  00720C  1005               	iorwf	??__i2c_wait_idle+4,w,c
 33447  00720E  1004               	iorwf	??__i2c_wait_idle+3,w,c
 33448  007210  1003               	iorwf	??__i2c_wait_idle+2,w,c
 33449  007212  1002               	iorwf	??__i2c_wait_idle+1,w,c
 33450  007214  1001               	iorwf	??__i2c_wait_idle,w,c
 33451  007216  0900               	iorlw	0
 33452  007218  B4D8               	btfsc	status,2,c
 33453  00721A  0012               	return	
 33454  00721C  D7D4               	goto	__i2c_wait_idle
 33455  00721E                     __end_of__i2c_wait_idle:
 33456                           	opt stack 0
 33457                           tosu	equ	0xFFF
 33458                           tosh	equ	0xFFE
 33459                           tosl	equ	0xFFD
 33460                           pclath	equ	0xFFA
 33461                           tblptru	equ	0xFF8
 33462                           tblptrh	equ	0xFF7
 33463                           tblptrl	equ	0xFF6
 33464                           tablat	equ	0xFF5
 33465                           prodh	equ	0xFF4
 33466                           prodl	equ	0xFF3
 33467                           intcon	equ	0xFF2
 33468                           intcon2	equ	0xFF1
 33469                           intcon3	equ	0xFF0
 33470                           indf0	equ	0xFEF
 33471                           postinc0	equ	0xFEE
 33472                           fsr0h	equ	0xFEA
 33473                           fsr0l	equ	0xFE9
 33474                           wreg	equ	0xFE8
 33475                           indf1	equ	0xFE7
 33476                           postdec1	equ	0xFE5
 33477                           plusw1	equ	0xFE3
 33478                           fsr1h	equ	0xFE2
 33479                           fsr1l	equ	0xFE1
 33480                           indf2	equ	0xFDF
 33481                           postinc2	equ	0xFDE
 33482                           postdec2	equ	0xFDD
 33483                           plusw2	equ	0xFDB
 33484                           fsr2h	equ	0xFDA
 33485                           fsr2l	equ	0xFD9
 33486                           status	equ	0xFD8
 33487                           
 33488 ;; *************** function __i2c_stop *****************
 33489 ;; Defined at:
 33490 ;;		line 75 in file "i2c.c"
 33491 ;; Parameters:    Size  Location     Type
 33492 ;;		None
 33493 ;; Auto vars:     Size  Location     Type
 33494 ;;		None
 33495 ;; Return value:  Size  Location     Type
 33496 ;;                  1    wreg      void 
 33497 ;; Registers used:
 33498 ;;		None
 33499 ;; Tracked objects:
 33500 ;;		On entry : 0/0
 33501 ;;		On exit  : 0/0
 33502 ;;		Unchanged: 0/0
 33503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33508 ;;Total ram usage:        0 bytes
 33509 ;; Hardware stack levels used:    1
 33510 ;; This function calls:
 33511 ;;		Nothing
 33512 ;; This function is called by:
 33513 ;;		__i2c_write
 33514 ;;		__i2c_read
 33515 ;;		_i2c_display_write_fixed
 33516 ;;		_i2c_display_write
 33517 ;; This function uses a non-reentrant model
 33518 ;;
 33519                           
 33520                           	psect	text165
 33521  0081C2                     __ptext165:
 33522                           	opt stack 0
 33523  0081C2                     __i2c_stop:
 33524                           	opt stack 27
 33525                           
 33526                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 33527                           
 33528                           ;incstack = 0
 33529  0081C2  84C5               	bsf	4037,2,c	;volatile
 33530  0081C4  A4C5               	btfss	4037,2,c	;volatile
 33531  0081C6  0012               	return	
 33532  0081C8  D7FD               	goto	l1166
 33533  0081CA                     __end_of__i2c_stop:
 33534                           	opt stack 0
 33535                           tosu	equ	0xFFF
 33536                           tosh	equ	0xFFE
 33537                           tosl	equ	0xFFD
 33538                           pclath	equ	0xFFA
 33539                           tblptru	equ	0xFF8
 33540                           tblptrh	equ	0xFF7
 33541                           tblptrl	equ	0xFF6
 33542                           tablat	equ	0xFF5
 33543                           prodh	equ	0xFF4
 33544                           prodl	equ	0xFF3
 33545                           intcon	equ	0xFF2
 33546                           intcon2	equ	0xFF1
 33547                           intcon3	equ	0xFF0
 33548                           indf0	equ	0xFEF
 33549                           postinc0	equ	0xFEE
 33550                           fsr0h	equ	0xFEA
 33551                           fsr0l	equ	0xFE9
 33552                           wreg	equ	0xFE8
 33553                           indf1	equ	0xFE7
 33554                           postdec1	equ	0xFE5
 33555                           plusw1	equ	0xFE3
 33556                           fsr1h	equ	0xFE2
 33557                           fsr1l	equ	0xFE1
 33558                           indf2	equ	0xFDF
 33559                           postinc2	equ	0xFDE
 33560                           postdec2	equ	0xFDD
 33561                           plusw2	equ	0xFDB
 33562                           fsr2h	equ	0xFDA
 33563                           fsr2l	equ	0xFD9
 33564                           status	equ	0xFD8
 33565                           
 33566 ;; *************** function __i2c_start *****************
 33567 ;; Defined at:
 33568 ;;		line 54 in file "i2c.c"
 33569 ;; Parameters:    Size  Location     Type
 33570 ;;		None
 33571 ;; Auto vars:     Size  Location     Type
 33572 ;;		None
 33573 ;; Return value:  Size  Location     Type
 33574 ;;                  1    wreg      void 
 33575 ;; Registers used:
 33576 ;;		None
 33577 ;; Tracked objects:
 33578 ;;		On entry : 0/0
 33579 ;;		On exit  : 0/0
 33580 ;;		Unchanged: 0/0
 33581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33586 ;;Total ram usage:        0 bytes
 33587 ;; Hardware stack levels used:    1
 33588 ;; This function calls:
 33589 ;;		Nothing
 33590 ;; This function is called by:
 33591 ;;		__i2c_write
 33592 ;;		__i2c_read
 33593 ;;		_i2c_display_write_fixed
 33594 ;;		_i2c_display_write
 33595 ;; This function uses a non-reentrant model
 33596 ;;
 33597                           
 33598                           	psect	text166
 33599  0081CA                     __ptext166:
 33600                           	opt stack 0
 33601  0081CA                     __i2c_start:
 33602                           	opt stack 27
 33603                           
 33604                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 33605                           
 33606                           ;incstack = 0
 33607  0081CA  80C5               	bsf	4037,0,c	;volatile
 33608  0081CC  A0C5               	btfss	4037,0,c	;volatile
 33609  0081CE  0012               	return	
 33610  0081D0  D7FD               	goto	l1151
 33611  0081D2                     __end_of__i2c_start:
 33612                           	opt stack 0
 33613                           tosu	equ	0xFFF
 33614                           tosh	equ	0xFFE
 33615                           tosl	equ	0xFFD
 33616                           pclath	equ	0xFFA
 33617                           tblptru	equ	0xFF8
 33618                           tblptrh	equ	0xFF7
 33619                           tblptrl	equ	0xFF6
 33620                           tablat	equ	0xFF5
 33621                           prodh	equ	0xFF4
 33622                           prodl	equ	0xFF3
 33623                           intcon	equ	0xFF2
 33624                           intcon2	equ	0xFF1
 33625                           intcon3	equ	0xFF0
 33626                           indf0	equ	0xFEF
 33627                           postinc0	equ	0xFEE
 33628                           fsr0h	equ	0xFEA
 33629                           fsr0l	equ	0xFE9
 33630                           wreg	equ	0xFE8
 33631                           indf1	equ	0xFE7
 33632                           postdec1	equ	0xFE5
 33633                           plusw1	equ	0xFE3
 33634                           fsr1h	equ	0xFE2
 33635                           fsr1l	equ	0xFE1
 33636                           indf2	equ	0xFDF
 33637                           postinc2	equ	0xFDE
 33638                           postdec2	equ	0xFDD
 33639                           plusw2	equ	0xFDB
 33640                           fsr2h	equ	0xFDA
 33641                           fsr2l	equ	0xFD9
 33642                           status	equ	0xFD8
 33643                           
 33644 ;; *************** function __i2c_send *****************
 33645 ;; Defined at:
 33646 ;;		line 61 in file "i2c.c"
 33647 ;; Parameters:    Size  Location     Type
 33648 ;;  dat             1    wreg     unsigned char 
 33649 ;; Auto vars:     Size  Location     Type
 33650 ;;  dat             1    0[COMRAM] unsigned char 
 33651 ;; Return value:  Size  Location     Type
 33652 ;;                  1    wreg      void 
 33653 ;; Registers used:
 33654 ;;		wreg
 33655 ;; Tracked objects:
 33656 ;;		On entry : 0/0
 33657 ;;		On exit  : 0/0
 33658 ;;		Unchanged: 0/0
 33659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33664 ;;Total ram usage:        1 bytes
 33665 ;; Hardware stack levels used:    1
 33666 ;; This function calls:
 33667 ;;		Nothing
 33668 ;; This function is called by:
 33669 ;;		__i2c_write
 33670 ;;		__i2c_read
 33671 ;;		_i2c_display_write_fixed
 33672 ;;		_i2c_display_write
 33673 ;; This function uses a non-reentrant model
 33674 ;;
 33675                           
 33676                           	psect	text167
 33677  0081D2                     __ptext167:
 33678                           	opt stack 0
 33679  0081D2                     __i2c_send:
 33680                           	opt stack 27
 33681                           
 33682                           ;incstack = 0
 33683                           ;__i2c_send@dat stored from wreg
 33684  0081D2  6E01               	movwf	__i2c_send@dat,c
 33685                           
 33686                           ;i2c.c: 63: SSP1BUF = dat;
 33687  0081D4  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 33688  0081D8  0012               	return		;funcret
 33689  0081DA                     __end_of__i2c_send:
 33690                           	opt stack 0
 33691                           tosu	equ	0xFFF
 33692                           tosh	equ	0xFFE
 33693                           tosl	equ	0xFFD
 33694                           pclath	equ	0xFFA
 33695                           tblptru	equ	0xFF8
 33696                           tblptrh	equ	0xFF7
 33697                           tblptrl	equ	0xFF6
 33698                           tablat	equ	0xFF5
 33699                           prodh	equ	0xFF4
 33700                           prodl	equ	0xFF3
 33701                           intcon	equ	0xFF2
 33702                           intcon2	equ	0xFF1
 33703                           intcon3	equ	0xFF0
 33704                           indf0	equ	0xFEF
 33705                           postinc0	equ	0xFEE
 33706                           fsr0h	equ	0xFEA
 33707                           fsr0l	equ	0xFE9
 33708                           wreg	equ	0xFE8
 33709                           indf1	equ	0xFE7
 33710                           postdec1	equ	0xFE5
 33711                           plusw1	equ	0xFE3
 33712                           fsr1h	equ	0xFE2
 33713                           fsr1l	equ	0xFE1
 33714                           indf2	equ	0xFDF
 33715                           postinc2	equ	0xFDE
 33716                           postdec2	equ	0xFDD
 33717                           plusw2	equ	0xFDB
 33718                           fsr2h	equ	0xFDA
 33719                           fsr2l	equ	0xFD9
 33720                           status	equ	0xFD8
 33721                           
 33722 ;; *************** function __parse_command_long *****************
 33723 ;; Defined at:
 33724 ;;		line 459 in file "api.c"
 33725 ;; Parameters:    Size  Location     Type
 33726 ;;  data            2   82[COMRAM] PTR unsigned char 
 33727 ;;		 -> RAM(3759), 
 33728 ;; Auto vars:     Size  Location     Type
 33729 ;;  length          1   84[COMRAM] unsigned char 
 33730 ;; Return value:  Size  Location     Type
 33731 ;;                  1    wreg      unsigned char 
 33732 ;; Registers used:
 33733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33734 ;; Tracked objects:
 33735 ;;		On entry : 0/0
 33736 ;;		On exit  : 0/0
 33737 ;;		Unchanged: 0/0
 33738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33742 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33743 ;;Total ram usage:        3 bytes
 33744 ;; Hardware stack levels used:    1
 33745 ;; Hardware stack levels required when called:    9
 33746 ;; This function calls:
 33747 ;;		__parse_file_append
 33748 ;;		__parse_file_create
 33749 ;;		__parse_file_delete
 33750 ;;		__parse_file_modify
 33751 ;;		__parse_file_rename
 33752 ;;		__parse_file_truncate
 33753 ;; This function is called by:
 33754 ;;		_api_parse
 33755 ;; This function uses a non-reentrant model
 33756 ;;
 33757                           
 33758                           	psect	text168
 33759  006334                     __ptext168:
 33760                           	opt stack 0
 33761  006334                     __parse_command_long:
 33762                           	opt stack 20
 33763                           
 33764                           ;api.c: 461: uint8_t length = 65;
 33765                           
 33766                           ;incstack = 0
 33767  006334  0E41               	movlw	65
 33768  006336  6E55               	movwf	__parse_command_long@length,c
 33769                           
 33770                           ;api.c: 463: switch(data[0])
 33771  006338  D02B               	goto	l2657
 33772  00633A                     
 33773                           ;api.c: 466: length = _parse_file_truncate(data);
 33774  00633A  C053  F001         	movff	__parse_command_long@data,__parse_file_truncate@data
 33775  00633E  C054  F002         	movff	__parse_command_long@data+1,__parse_file_truncate@data+1
 33776  006342  EC03  F041         	call	__parse_file_truncate	;wreg free
 33777  006346  D022               	goto	L39
 33778  006348                     
 33779                           ;api.c: 470: length = _parse_file_delete(data);
 33780  006348  C053  F03F         	movff	__parse_command_long@data,__parse_file_delete@data
 33781  00634C  C054  F040         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 33782  006350  EC14  F03B         	call	__parse_file_delete	;wreg free
 33783  006354  D01B               	goto	L39
 33784  006356                     
 33785                           ;api.c: 474: length = _parse_file_create(data);
 33786  006356  C053  F050         	movff	__parse_command_long@data,__parse_file_create@data
 33787  00635A  C054  F051         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 33788  00635E  ECFC  F035         	call	__parse_file_create	;wreg free
 33789  006362  D014               	goto	L39
 33790  006364                     
 33791                           ;api.c: 478: length = _parse_file_rename(data);
 33792  006364  C053  F043         	movff	__parse_command_long@data,__parse_file_rename@data
 33793  006368  C054  F044         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 33794  00636C  EC67  F036         	call	__parse_file_rename	;wreg free
 33795  006370  D00D               	goto	L39
 33796  006372                     
 33797                           ;api.c: 482: length = _parse_file_append(data);
 33798  006372  C053  F04B         	movff	__parse_command_long@data,__parse_file_append@data
 33799  006376  C054  F04C         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 33800  00637A  EC38  F033         	call	__parse_file_append	;wreg free
 33801  00637E  D006               	goto	L39
 33802  006380                     
 33803                           ;api.c: 486: length = _parse_file_modify(data);
 33804  006380  C053  F001         	movff	__parse_command_long@data,__parse_file_modify@data
 33805  006384  C054  F002         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 33806  006388  EC05  F041         	call	__parse_file_modify	;wreg free
 33807  00638C                     L39:
 33808  00638C  6E55               	movwf	__parse_command_long@length,c
 33809                           
 33810                           ;api.c: 488: }
 33811                           
 33812                           ;api.c: 487: break;
 33813  00638E  D017               	goto	l2659
 33814  006390                     l2657:
 33815  006390  C053  FFD9         	movff	__parse_command_long@data,fsr2l
 33816  006394  C054  FFDA         	movff	__parse_command_long@data+1,fsr2h
 33817  006398  50DF               	movf	indf2,w,c
 33818                           
 33819                           ; Switch size 1, requested type "space"
 33820                           ; Number of cases is 6, Range of values is 80 to 85
 33821                           ; switch strategies available:
 33822                           ; Name         Instructions Cycles
 33823                           ; simple_byte           19    10 (average)
 33824                           ;	Chosen strategy is simple_byte
 33825  00639A  0A50               	xorlw	80	; case 80
 33826  00639C  B4D8               	btfsc	status,2,c
 33827  00639E  D7CD               	goto	l2658
 33828  0063A0  0A01               	xorlw	1	; case 81
 33829  0063A2  B4D8               	btfsc	status,2,c
 33830  0063A4  D7D1               	goto	l2660
 33831  0063A6  0A03               	xorlw	3	; case 82
 33832  0063A8  B4D8               	btfsc	status,2,c
 33833  0063AA  D7D5               	goto	l2661
 33834  0063AC  0A01               	xorlw	1	; case 83
 33835  0063AE  B4D8               	btfsc	status,2,c
 33836  0063B0  D7D9               	goto	l2662
 33837  0063B2  0A07               	xorlw	7	; case 84
 33838  0063B4  B4D8               	btfsc	status,2,c
 33839  0063B6  D7DD               	goto	l2663
 33840  0063B8  0A01               	xorlw	1	; case 85
 33841  0063BA  B4D8               	btfsc	status,2,c
 33842  0063BC  D7E1               	goto	l2664
 33843  0063BE                     l2659:
 33844                           
 33845                           ;api.c: 490: return length;
 33846  0063BE  5055               	movf	__parse_command_long@length,w,c
 33847  0063C0  0012               	return	
 33848  0063C2                     __end_of__parse_command_long:
 33849                           	opt stack 0
 33850                           tosu	equ	0xFFF
 33851                           tosh	equ	0xFFE
 33852                           tosl	equ	0xFFD
 33853                           pclath	equ	0xFFA
 33854                           tblptru	equ	0xFF8
 33855                           tblptrh	equ	0xFF7
 33856                           tblptrl	equ	0xFF6
 33857                           tablat	equ	0xFF5
 33858                           prodh	equ	0xFF4
 33859                           prodl	equ	0xFF3
 33860                           intcon	equ	0xFF2
 33861                           intcon2	equ	0xFF1
 33862                           intcon3	equ	0xFF0
 33863                           indf0	equ	0xFEF
 33864                           postinc0	equ	0xFEE
 33865                           fsr0h	equ	0xFEA
 33866                           fsr0l	equ	0xFE9
 33867                           wreg	equ	0xFE8
 33868                           indf1	equ	0xFE7
 33869                           postdec1	equ	0xFE5
 33870                           plusw1	equ	0xFE3
 33871                           fsr1h	equ	0xFE2
 33872                           fsr1l	equ	0xFE1
 33873                           indf2	equ	0xFDF
 33874                           postinc2	equ	0xFDE
 33875                           postdec2	equ	0xFDD
 33876                           plusw2	equ	0xFDB
 33877                           fsr2h	equ	0xFDA
 33878                           fsr2l	equ	0xFD9
 33879                           status	equ	0xFD8
 33880                           
 33881 ;; *************** function __parse_file_truncate *****************
 33882 ;; Defined at:
 33883 ;;		line 493 in file "api.c"
 33884 ;; Parameters:    Size  Location     Type
 33885 ;;  data            2    0[COMRAM] PTR unsigned char 
 33886 ;;		 -> RAM(3759), 
 33887 ;; Auto vars:     Size  Location     Type
 33888 ;;		None
 33889 ;; Return value:  Size  Location     Type
 33890 ;;                  1    wreg      unsigned char 
 33891 ;; Registers used:
 33892 ;;		wreg
 33893 ;; Tracked objects:
 33894 ;;		On entry : 0/0
 33895 ;;		On exit  : 0/0
 33896 ;;		Unchanged: 0/0
 33897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33902 ;;Total ram usage:        2 bytes
 33903 ;; Hardware stack levels used:    1
 33904 ;; This function calls:
 33905 ;;		Nothing
 33906 ;; This function is called by:
 33907 ;;		__parse_command_long
 33908 ;; This function uses a non-reentrant model
 33909 ;;
 33910                           
 33911                           	psect	text169
 33912  008206                     __ptext169:
 33913                           	opt stack 0
 33914  008206                     __parse_file_truncate:
 33915                           	opt stack 28
 33916                           
 33917                           ;api.c: 497: return 65;
 33918                           
 33919                           ;incstack = 0
 33920  008206  0E41               	movlw	65
 33921  008208  0012               	return	
 33922  00820A                     __end_of__parse_file_truncate:
 33923                           	opt stack 0
 33924                           tosu	equ	0xFFF
 33925                           tosh	equ	0xFFE
 33926                           tosl	equ	0xFFD
 33927                           pclath	equ	0xFFA
 33928                           tblptru	equ	0xFF8
 33929                           tblptrh	equ	0xFF7
 33930                           tblptrl	equ	0xFF6
 33931                           tablat	equ	0xFF5
 33932                           prodh	equ	0xFF4
 33933                           prodl	equ	0xFF3
 33934                           intcon	equ	0xFF2
 33935                           intcon2	equ	0xFF1
 33936                           intcon3	equ	0xFF0
 33937                           indf0	equ	0xFEF
 33938                           postinc0	equ	0xFEE
 33939                           fsr0h	equ	0xFEA
 33940                           fsr0l	equ	0xFE9
 33941                           wreg	equ	0xFE8
 33942                           indf1	equ	0xFE7
 33943                           postdec1	equ	0xFE5
 33944                           plusw1	equ	0xFE3
 33945                           fsr1h	equ	0xFE2
 33946                           fsr1l	equ	0xFE1
 33947                           indf2	equ	0xFDF
 33948                           postinc2	equ	0xFDE
 33949                           postdec2	equ	0xFDD
 33950                           plusw2	equ	0xFDB
 33951                           fsr2h	equ	0xFDA
 33952                           fsr2l	equ	0xFD9
 33953                           status	equ	0xFD8
 33954                           
 33955 ;; *************** function __parse_file_rename *****************
 33956 ;; Defined at:
 33957 ;;		line 526 in file "api.c"
 33958 ;; Parameters:    Size  Location     Type
 33959 ;;  data            2   66[COMRAM] PTR unsigned char 
 33960 ;;		 -> RAM(3759), 
 33961 ;; Auto vars:     Size  Location     Type
 33962 ;;		None
 33963 ;; Return value:  Size  Location     Type
 33964 ;;                  1    wreg      unsigned char 
 33965 ;; Registers used:
 33966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33967 ;; Tracked objects:
 33968 ;;		On entry : 0/0
 33969 ;;		On exit  : 0/0
 33970 ;;		Unchanged: 0/0
 33971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33975 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33976 ;;Total ram usage:        3 bytes
 33977 ;; Hardware stack levels used:    1
 33978 ;; Hardware stack levels required when called:    8
 33979 ;; This function calls:
 33980 ;;		_fat_rename_file
 33981 ;; This function is called by:
 33982 ;;		__parse_command_long
 33983 ;; This function uses a non-reentrant model
 33984 ;;
 33985                           
 33986                           	psect	text170
 33987  006CCE                     __ptext170:
 33988                           	opt stack 0
 33989  006CCE                     __parse_file_rename:
 33990                           	opt stack 20
 33991                           
 33992                           ;api.c: 529: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 33993                           
 33994                           ;incstack = 0
 33995  006CCE  C043  FFD9         	movff	__parse_file_rename@data,fsr2l
 33996  006CD2  C044  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 33997  006CD6  0E53               	movlw	83
 33998  006CD8  18DE               	xorwf	postinc2,w,c
 33999  006CDA  A4D8               	btfss	status,2,c
 34000  006CDC  D014               	goto	u9750
 34001  006CDE  EE20 F00D          	lfsr	2,13
 34002  006CE2  5043               	movf	__parse_file_rename@data,w,c
 34003  006CE4  26D9               	addwf	fsr2l,f,c
 34004  006CE6  5044               	movf	__parse_file_rename@data+1,w,c
 34005  006CE8  22DA               	addwfc	fsr2h,f,c
 34006  006CEA  0E7E               	movlw	126
 34007  006CEC  18DE               	xorwf	postinc2,w,c
 34008  006CEE  A4D8               	btfss	status,2,c
 34009  006CF0  D00A               	goto	u9750
 34010  006CF2  EE20 F00E          	lfsr	2,14
 34011  006CF6  5043               	movf	__parse_file_rename@data,w,c
 34012  006CF8  26D9               	addwf	fsr2l,f,c
 34013  006CFA  5044               	movf	__parse_file_rename@data+1,w,c
 34014  006CFC  22DA               	addwfc	fsr2h,f,c
 34015  006CFE  0E18               	movlw	24
 34016  006D00  18DE               	xorwf	postinc2,w,c
 34017  006D02  B4D8               	btfsc	status,2,c
 34018  006D04  D002               	goto	l2683
 34019  006D06                     u9750:
 34020                           
 34021                           ;api.c: 530: {;api.c: 531: return 15;
 34022  006D06  0E0F               	movlw	15
 34023  006D08  0012               	return	
 34024  006D0A                     l2683:
 34025                           
 34026                           ;api.c: 532: };api.c: 535: fat_rename_file(data[1], &data[2], &data[10]);
 34027  006D0A  0E02               	movlw	2
 34028  006D0C  2443               	addwf	__parse_file_rename@data,w,c
 34029  006D0E  6E3F               	movwf	fat_rename_file@name,c
 34030  006D10  0E00               	movlw	0
 34031  006D12  2044               	addwfc	__parse_file_rename@data+1,w,c
 34032  006D14  6E40               	movwf	fat_rename_file@name+1,c
 34033  006D16  0E0A               	movlw	10
 34034  006D18  2443               	addwf	__parse_file_rename@data,w,c
 34035  006D1A  6E41               	movwf	fat_rename_file@extension,c
 34036  006D1C  0E00               	movlw	0
 34037  006D1E  2044               	addwfc	__parse_file_rename@data+1,w,c
 34038  006D20  6E42               	movwf	fat_rename_file@extension+1,c
 34039  006D22  EE20 F001          	lfsr	2,1
 34040  006D26  5043               	movf	__parse_file_rename@data,w,c
 34041  006D28  26D9               	addwf	fsr2l,f,c
 34042  006D2A  5044               	movf	__parse_file_rename@data+1,w,c
 34043  006D2C  22DA               	addwfc	fsr2h,f,c
 34044  006D2E  50DF               	movf	indf2,w,c
 34045  006D30  ECDF  F02F         	call	_fat_rename_file
 34046                           
 34047                           ;api.c: 536: return 15;
 34048  006D34  0E0F               	movlw	15
 34049  006D36  0012               	return	
 34050  006D38                     __end_of__parse_file_rename:
 34051                           	opt stack 0
 34052                           tosu	equ	0xFFF
 34053                           tosh	equ	0xFFE
 34054                           tosl	equ	0xFFD
 34055                           pclath	equ	0xFFA
 34056                           tblptru	equ	0xFF8
 34057                           tblptrh	equ	0xFF7
 34058                           tblptrl	equ	0xFF6
 34059                           tablat	equ	0xFF5
 34060                           prodh	equ	0xFF4
 34061                           prodl	equ	0xFF3
 34062                           intcon	equ	0xFF2
 34063                           intcon2	equ	0xFF1
 34064                           intcon3	equ	0xFF0
 34065                           indf0	equ	0xFEF
 34066                           postinc0	equ	0xFEE
 34067                           fsr0h	equ	0xFEA
 34068                           fsr0l	equ	0xFE9
 34069                           wreg	equ	0xFE8
 34070                           indf1	equ	0xFE7
 34071                           postdec1	equ	0xFE5
 34072                           plusw1	equ	0xFE3
 34073                           fsr1h	equ	0xFE2
 34074                           fsr1l	equ	0xFE1
 34075                           indf2	equ	0xFDF
 34076                           postinc2	equ	0xFDE
 34077                           postdec2	equ	0xFDD
 34078                           plusw2	equ	0xFDB
 34079                           fsr2h	equ	0xFDA
 34080                           fsr2l	equ	0xFD9
 34081                           status	equ	0xFD8
 34082                           
 34083 ;; *************** function _fat_rename_file *****************
 34084 ;; Defined at:
 34085 ;;		line 536 in file "fat16.c"
 34086 ;; Parameters:    Size  Location     Type
 34087 ;;  file_number     1    wreg     unsigned char 
 34088 ;;  name            2   62[COMRAM] PTR unsigned char 
 34089 ;;		 -> RAM(3759), 
 34090 ;;  extension       2   64[COMRAM] PTR unsigned char 
 34091 ;;		 -> RAM(3759), 
 34092 ;; Auto vars:     Size  Location     Type
 34093 ;;  file_number     1    0[BANK0 ] unsigned char 
 34094 ;;  root           32    1[BANK0 ] struct .
 34095 ;;  cntr            1   33[BANK0 ] unsigned char 
 34096 ;; Return value:  Size  Location     Type
 34097 ;;                  1    wreg      void 
 34098 ;; Registers used:
 34099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34100 ;; Tracked objects:
 34101 ;;		On entry : 0/0
 34102 ;;		On exit  : 0/0
 34103 ;;		Unchanged: 0/0
 34104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34106 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34108 ;;      Totals:         4      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34109 ;;Total ram usage:       38 bytes
 34110 ;; Hardware stack levels used:    1
 34111 ;; Hardware stack levels required when called:    7
 34112 ;; This function calls:
 34113 ;;		__write_root
 34114 ;;		_fat_get_file_information
 34115 ;; This function is called by:
 34116 ;;		__parse_file_rename
 34117 ;; This function uses a non-reentrant model
 34118 ;;
 34119                           
 34120                           	psect	text171
 34121  005FBE                     __ptext171:
 34122                           	opt stack 0
 34123  005FBE                     _fat_rename_file:
 34124                           	opt stack 20
 34125                           
 34126                           ;incstack = 0
 34127                           ;fat_rename_file@file_number stored from wreg
 34128  005FBE  0100               	movlb	0	; () banked
 34129  005FC0  6F60               	movwf	fat_rename_file@file_number& (0+255),b
 34130                           
 34131                           ;fat16.c: 538: rootEntry_t root;;fat16.c: 539: uint8_t cntr;;fat16.c: 542: fat_get_file_
      +                          information(file_number, &root);
 34132  005FC2  0E61               	movlw	low fat_rename_file@root
 34133  005FC4  6E37               	movwf	fat_get_file_information@data,c
 34134  005FC6  0E00               	movlw	high fat_rename_file@root
 34135  005FC8  6E38               	movwf	fat_get_file_information@data+1,c
 34136  005FCA  0100               	movlb	0	; () banked
 34137  005FCC  5160               	movf	fat_rename_file@file_number& (0+255),w,b
 34138  005FCE  ECA8  F034         	call	_fat_get_file_information
 34139                           
 34140                           ;fat16.c: 545: for(cntr=0; cntr<8; ++cntr)
 34141  005FD2  0E00               	movlw	0
 34142  005FD4  0100               	movlb	0	; () banked
 34143  005FD6  6F81               	movwf	fat_rename_file@cntr& (0+255),b
 34144  005FD8                     l12045:
 34145                           
 34146                           ; BSR set to: 0
 34147  005FD8  0E07               	movlw	7
 34148  005FDA  6581               	cpfsgt	fat_rename_file@cntr& (0+255),b
 34149  005FDC  D001               	goto	l2013
 34150  005FDE  D014               	goto	u9220
 34151  005FE0                     l2013:
 34152                           
 34153                           ; BSR set to: 0
 34154                           ;fat16.c: 546: {;fat16.c: 547: root.fileName[cntr] = name[cntr];
 34155                           
 34156                           ; BSR set to: 0
 34157  005FE0  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 34158  005FE2  0D01               	mullw	1
 34159  005FE4  50F3               	movf	prodl,w,c
 34160  005FE6  243F               	addwf	fat_rename_file@name,w,c
 34161  005FE8  6ED9               	movwf	fsr2l,c
 34162  005FEA  50F4               	movf	prodh,w,c
 34163  005FEC  2040               	addwfc	fat_rename_file@name+1,w,c
 34164  005FEE  6EDA               	movwf	fsr2h,c
 34165  005FF0  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 34166  005FF2  0D01               	mullw	1
 34167  005FF4  0E61               	movlw	low fat_rename_file@root
 34168  005FF6  24F3               	addwf	prodl,w,c
 34169  005FF8  6EE1               	movwf	fsr1l,c
 34170  005FFA  0E00               	movlw	high fat_rename_file@root
 34171  005FFC  20F4               	addwfc	prodh,w,c
 34172  005FFE  6EE2               	movwf	fsr1h,c
 34173  006000  CFDF FFE7          	movff	indf2,indf1
 34174                           
 34175                           ; BSR set to: 0
 34176  006004  2B81               	incf	fat_rename_file@cntr& (0+255),f,b
 34177  006006  D7E8               	goto	l12045
 34178  006008                     u9220:
 34179                           
 34180                           ; BSR set to: 0
 34181                           ;fat16.c: 548: };fat16.c: 551: for(cntr=0; cntr<3; ++cntr)
 34182                           
 34183                           ; BSR set to: 0
 34184  006008  0E00               	movlw	0
 34185  00600A  6F81               	movwf	fat_rename_file@cntr& (0+255),b
 34186  00600C                     l12057:
 34187                           
 34188                           ; BSR set to: 0
 34189  00600C  0E02               	movlw	2
 34190  00600E  6581               	cpfsgt	fat_rename_file@cntr& (0+255),b
 34191  006010  D001               	goto	l2015
 34192  006012  D018               	goto	u9240
 34193  006014                     l2015:
 34194                           
 34195                           ; BSR set to: 0
 34196                           ;fat16.c: 552: {;fat16.c: 553: root.fileExtension[cntr] = extension[cntr];
 34197                           
 34198                           ; BSR set to: 0
 34199  006014  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 34200  006016  0D01               	mullw	1
 34201  006018  50F3               	movf	prodl,w,c
 34202  00601A  2441               	addwf	fat_rename_file@extension,w,c
 34203  00601C  6ED9               	movwf	fsr2l,c
 34204  00601E  50F4               	movf	prodh,w,c
 34205  006020  2042               	addwfc	fat_rename_file@extension+1,w,c
 34206  006022  6EDA               	movwf	fsr2h,c
 34207  006024  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 34208  006026  0D01               	mullw	1
 34209  006028  0E08               	movlw	8
 34210  00602A  26F3               	addwf	prodl,f,c
 34211  00602C  0E00               	movlw	0
 34212  00602E  22F4               	addwfc	prodh,f,c
 34213  006030  0E61               	movlw	low fat_rename_file@root
 34214  006032  24F3               	addwf	prodl,w,c
 34215  006034  6EE1               	movwf	fsr1l,c
 34216  006036  0E00               	movlw	high fat_rename_file@root
 34217  006038  20F4               	addwfc	prodh,w,c
 34218  00603A  6EE2               	movwf	fsr1h,c
 34219  00603C  CFDF FFE7          	movff	indf2,indf1
 34220                           
 34221                           ; BSR set to: 0
 34222  006040  2B81               	incf	fat_rename_file@cntr& (0+255),f,b
 34223  006042  D7E4               	goto	l12057
 34224  006044                     u9240:
 34225                           
 34226                           ; BSR set to: 0
 34227                           ;fat16.c: 554: };fat16.c: 556: _write_root(file_number, &root);
 34228                           
 34229                           ; BSR set to: 0
 34230  006044  0E61               	movlw	low fat_rename_file@root
 34231  006046  6E29               	movwf	__write_root@data,c
 34232  006048  0E00               	movlw	high fat_rename_file@root
 34233  00604A  6E2A               	movwf	__write_root@data+1,c
 34234  00604C  5160               	movf	fat_rename_file@file_number& (0+255),w,b
 34235  00604E  EC0F  F039         	call	__write_root
 34236  006052  0012               	return		;funcret
 34237  006054                     __end_of_fat_rename_file:
 34238                           	opt stack 0
 34239                           tosu	equ	0xFFF
 34240                           tosh	equ	0xFFE
 34241                           tosl	equ	0xFFD
 34242                           pclath	equ	0xFFA
 34243                           tblptru	equ	0xFF8
 34244                           tblptrh	equ	0xFF7
 34245                           tblptrl	equ	0xFF6
 34246                           tablat	equ	0xFF5
 34247                           prodh	equ	0xFF4
 34248                           prodl	equ	0xFF3
 34249                           intcon	equ	0xFF2
 34250                           intcon2	equ	0xFF1
 34251                           intcon3	equ	0xFF0
 34252                           indf0	equ	0xFEF
 34253                           postinc0	equ	0xFEE
 34254                           fsr0h	equ	0xFEA
 34255                           fsr0l	equ	0xFE9
 34256                           wreg	equ	0xFE8
 34257                           indf1	equ	0xFE7
 34258                           postdec1	equ	0xFE5
 34259                           plusw1	equ	0xFE3
 34260                           fsr1h	equ	0xFE2
 34261                           fsr1l	equ	0xFE1
 34262                           indf2	equ	0xFDF
 34263                           postinc2	equ	0xFDE
 34264                           postdec2	equ	0xFDD
 34265                           plusw2	equ	0xFDB
 34266                           fsr2h	equ	0xFDA
 34267                           fsr2l	equ	0xFD9
 34268                           status	equ	0xFD8
 34269                           
 34270 ;; *************** function __parse_file_modify *****************
 34271 ;; Defined at:
 34272 ;;		line 552 in file "api.c"
 34273 ;; Parameters:    Size  Location     Type
 34274 ;;  data            2    0[COMRAM] PTR unsigned char 
 34275 ;;		 -> RAM(3759), 
 34276 ;; Auto vars:     Size  Location     Type
 34277 ;;		None
 34278 ;; Return value:  Size  Location     Type
 34279 ;;                  1    wreg      unsigned char 
 34280 ;; Registers used:
 34281 ;;		wreg
 34282 ;; Tracked objects:
 34283 ;;		On entry : 0/0
 34284 ;;		On exit  : 0/0
 34285 ;;		Unchanged: 0/0
 34286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34291 ;;Total ram usage:        2 bytes
 34292 ;; Hardware stack levels used:    1
 34293 ;; This function calls:
 34294 ;;		Nothing
 34295 ;; This function is called by:
 34296 ;;		__parse_command_long
 34297 ;; This function uses a non-reentrant model
 34298 ;;
 34299                           
 34300                           	psect	text172
 34301  00820A                     __ptext172:
 34302                           	opt stack 0
 34303  00820A                     __parse_file_modify:
 34304                           	opt stack 28
 34305                           
 34306                           ;api.c: 556: return 65;
 34307                           
 34308                           ;incstack = 0
 34309  00820A  0E41               	movlw	65
 34310  00820C  0012               	return	
 34311  00820E                     __end_of__parse_file_modify:
 34312                           	opt stack 0
 34313                           tosu	equ	0xFFF
 34314                           tosh	equ	0xFFE
 34315                           tosl	equ	0xFFD
 34316                           pclath	equ	0xFFA
 34317                           tblptru	equ	0xFF8
 34318                           tblptrh	equ	0xFF7
 34319                           tblptrl	equ	0xFF6
 34320                           tablat	equ	0xFF5
 34321                           prodh	equ	0xFF4
 34322                           prodl	equ	0xFF3
 34323                           intcon	equ	0xFF2
 34324                           intcon2	equ	0xFF1
 34325                           intcon3	equ	0xFF0
 34326                           indf0	equ	0xFEF
 34327                           postinc0	equ	0xFEE
 34328                           fsr0h	equ	0xFEA
 34329                           fsr0l	equ	0xFE9
 34330                           wreg	equ	0xFE8
 34331                           indf1	equ	0xFE7
 34332                           postdec1	equ	0xFE5
 34333                           plusw1	equ	0xFE3
 34334                           fsr1h	equ	0xFE2
 34335                           fsr1l	equ	0xFE1
 34336                           indf2	equ	0xFDF
 34337                           postinc2	equ	0xFDE
 34338                           postdec2	equ	0xFDD
 34339                           plusw2	equ	0xFDB
 34340                           fsr2h	equ	0xFDA
 34341                           fsr2l	equ	0xFD9
 34342                           status	equ	0xFD8
 34343                           
 34344 ;; *************** function __parse_file_delete *****************
 34345 ;; Defined at:
 34346 ;;		line 500 in file "api.c"
 34347 ;; Parameters:    Size  Location     Type
 34348 ;;  data            2   62[COMRAM] PTR unsigned char 
 34349 ;;		 -> RAM(3759), 
 34350 ;; Auto vars:     Size  Location     Type
 34351 ;;		None
 34352 ;; Return value:  Size  Location     Type
 34353 ;;                  1    wreg      unsigned char 
 34354 ;; Registers used:
 34355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34356 ;; Tracked objects:
 34357 ;;		On entry : 0/0
 34358 ;;		On exit  : 0/0
 34359 ;;		Unchanged: 0/0
 34360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34363 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34364 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34365 ;;Total ram usage:        3 bytes
 34366 ;; Hardware stack levels used:    1
 34367 ;; Hardware stack levels required when called:    7
 34368 ;; This function calls:
 34369 ;;		_fat_delete_file
 34370 ;; This function is called by:
 34371 ;;		__parse_command_long
 34372 ;; This function uses a non-reentrant model
 34373 ;;
 34374                           
 34375                           	psect	text173
 34376  007628                     __ptext173:
 34377                           	opt stack 0
 34378  007628                     __parse_file_delete:
 34379                           	opt stack 21
 34380                           
 34381                           ;api.c: 503: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 34382                           
 34383                           ;incstack = 0
 34384  007628  C03F  FFD9         	movff	__parse_file_delete@data,fsr2l
 34385  00762C  C040  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 34386  007630  0E51               	movlw	81
 34387  007632  18DE               	xorwf	postinc2,w,c
 34388  007634  A4D8               	btfss	status,2,c
 34389  007636  D014               	goto	u9690
 34390  007638  EE20 F002          	lfsr	2,2
 34391  00763C  503F               	movf	__parse_file_delete@data,w,c
 34392  00763E  26D9               	addwf	fsr2l,f,c
 34393  007640  5040               	movf	__parse_file_delete@data+1,w,c
 34394  007642  22DA               	addwfc	fsr2h,f,c
 34395  007644  0E66               	movlw	102
 34396  007646  18DE               	xorwf	postinc2,w,c
 34397  007648  A4D8               	btfss	status,2,c
 34398  00764A  D00A               	goto	u9690
 34399  00764C  EE20 F003          	lfsr	2,3
 34400  007650  503F               	movf	__parse_file_delete@data,w,c
 34401  007652  26D9               	addwf	fsr2l,f,c
 34402  007654  5040               	movf	__parse_file_delete@data+1,w,c
 34403  007656  22DA               	addwfc	fsr2h,f,c
 34404  007658  0EA0               	movlw	160
 34405  00765A  18DE               	xorwf	postinc2,w,c
 34406  00765C  B4D8               	btfsc	status,2,c
 34407  00765E  D002               	goto	l2671
 34408  007660                     u9690:
 34409                           
 34410                           ;api.c: 504: {;api.c: 505: return 4;
 34411  007660  0E04               	movlw	4
 34412  007662  0012               	return	
 34413  007664                     l2671:
 34414                           
 34415                           ;api.c: 506: };api.c: 509: fat_delete_file(data[1]);
 34416  007664  EE20 F001          	lfsr	2,1
 34417  007668  503F               	movf	__parse_file_delete@data,w,c
 34418  00766A  26D9               	addwf	fsr2l,f,c
 34419  00766C  5040               	movf	__parse_file_delete@data+1,w,c
 34420  00766E  22DA               	addwfc	fsr2h,f,c
 34421  007670  50DF               	movf	indf2,w,c
 34422  007672  EC9C  F036         	call	_fat_delete_file
 34423                           
 34424                           ;api.c: 510: return 4;
 34425  007676  0E04               	movlw	4
 34426  007678  0012               	return	
 34427  00767A                     __end_of__parse_file_delete:
 34428                           	opt stack 0
 34429                           tosu	equ	0xFFF
 34430                           tosh	equ	0xFFE
 34431                           tosl	equ	0xFFD
 34432                           pclath	equ	0xFFA
 34433                           tblptru	equ	0xFF8
 34434                           tblptrh	equ	0xFF7
 34435                           tblptrl	equ	0xFF6
 34436                           tablat	equ	0xFF5
 34437                           prodh	equ	0xFF4
 34438                           prodl	equ	0xFF3
 34439                           intcon	equ	0xFF2
 34440                           intcon2	equ	0xFF1
 34441                           intcon3	equ	0xFF0
 34442                           indf0	equ	0xFEF
 34443                           postinc0	equ	0xFEE
 34444                           fsr0h	equ	0xFEA
 34445                           fsr0l	equ	0xFE9
 34446                           wreg	equ	0xFE8
 34447                           indf1	equ	0xFE7
 34448                           postdec1	equ	0xFE5
 34449                           plusw1	equ	0xFE3
 34450                           fsr1h	equ	0xFE2
 34451                           fsr1l	equ	0xFE1
 34452                           indf2	equ	0xFDF
 34453                           postinc2	equ	0xFDE
 34454                           postdec2	equ	0xFDD
 34455                           plusw2	equ	0xFDB
 34456                           fsr2h	equ	0xFDA
 34457                           fsr2l	equ	0xFD9
 34458                           status	equ	0xFD8
 34459                           
 34460 ;; *************** function _fat_delete_file *****************
 34461 ;; Defined at:
 34462 ;;		line 391 in file "fat16.c"
 34463 ;; Parameters:    Size  Location     Type
 34464 ;;  file_number     1    wreg     unsigned char 
 34465 ;; Auto vars:     Size  Location     Type
 34466 ;;  file_number     1   61[COMRAM] unsigned char 
 34467 ;;  first_cluste    2   59[COMRAM] unsigned int 
 34468 ;;  next_cluster    2   57[COMRAM] unsigned int 
 34469 ;; Return value:  Size  Location     Type
 34470 ;;                  1    wreg      void 
 34471 ;; Registers used:
 34472 ;;		wreg, status,2, status,0, cstack
 34473 ;; Tracked objects:
 34474 ;;		On entry : 0/0
 34475 ;;		On exit  : 0/0
 34476 ;;		Unchanged: 0/0
 34477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34479 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34481 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34482 ;;Total ram usage:        5 bytes
 34483 ;; Hardware stack levels used:    1
 34484 ;; Hardware stack levels required when called:    6
 34485 ;; This function calls:
 34486 ;;		__delete_root
 34487 ;;		__get_first_cluster
 34488 ;;		__read_fat
 34489 ;;		__root_is_available
 34490 ;;		__write_fat
 34491 ;; This function is called by:
 34492 ;;		__parse_file_delete
 34493 ;; This function uses a non-reentrant model
 34494 ;;
 34495                           
 34496                           	psect	text174
 34497  006D38                     __ptext174:
 34498                           	opt stack 0
 34499  006D38                     _fat_delete_file:
 34500                           	opt stack 21
 34501                           
 34502                           ;incstack = 0
 34503                           ;fat_delete_file@file_number stored from wreg
 34504  006D38  6E3E               	movwf	fat_delete_file@file_number,c
 34505                           
 34506                           ;fat16.c: 393: uint16_t first_cluster;;fat16.c: 394: uint16_t next_cluster;;fat16.c: 397
      +                          : if(file_number>=64)
 34507  006D3A  0E3F               	movlw	63
 34508  006D3C  643E               	cpfsgt	fat_delete_file@file_number,c
 34509  006D3E  D001               	goto	l1987
 34510  006D40  0012               	return	
 34511  006D42                     l1987:
 34512                           
 34513                           ;fat16.c: 401: };fat16.c: 404: if(_root_is_available(file_number))
 34514  006D42  503E               	movf	fat_delete_file@file_number,w,c
 34515  006D44  EC6D  F034         	call	__root_is_available
 34516  006D48  0900               	iorlw	0
 34517  006D4A  A4D8               	btfss	status,2,c
 34518  006D4C  0012               	return	
 34519                           
 34520                           ;fat16.c: 408: };fat16.c: 411: first_cluster = _get_first_cluster(file_number);
 34521                           
 34522                           ;fat16.c: 405: {;fat16.c: 407: return;
 34523  006D4E  503E               	movf	fat_delete_file@file_number,w,c
 34524  006D50  ECD1  F036         	call	__get_first_cluster
 34525  006D54  C030  F03C         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 34526  006D58  C031  F03D         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 34527  006D5C                     l1990:
 34528                           
 34529                           ;fat16.c: 415: {;fat16.c: 418: next_cluster = _read_fat(first_cluster);
 34530  006D5C  C03C  F030         	movff	fat_delete_file@first_cluster,__read_fat@cluster
 34531  006D60  C03D  F031         	movff	fat_delete_file@first_cluster+1,__read_fat@cluster+1
 34532  006D64  ECD5  F03B         	call	__read_fat	;wreg free
 34533  006D68  C030  F03A         	movff	?__read_fat,fat_delete_file@next_cluster
 34534  006D6C  C031  F03B         	movff	?__read_fat+1,fat_delete_file@next_cluster+1
 34535                           
 34536                           ;fat16.c: 425: _write_fat(first_cluster, 0x0000);
 34537  006D70  C03C  F029         	movff	fat_delete_file@first_cluster,__write_fat@cluster
 34538  006D74  C03D  F02A         	movff	fat_delete_file@first_cluster+1,__write_fat@cluster+1
 34539  006D78  0E00               	movlw	0
 34540  006D7A  6E2C               	movwf	__write_fat@value+1,c
 34541  006D7C  0E00               	movlw	0
 34542  006D7E  6E2B               	movwf	__write_fat@value,c
 34543  006D80  EC9E  F03C         	call	__write_fat	;wreg free
 34544                           
 34545                           ;fat16.c: 427: if(next_cluster>0xFFF0)
 34546  006D84  0EF1               	movlw	241
 34547  006D86  5C3A               	subwf	fat_delete_file@next_cluster,w,c
 34548  006D88  0EFF               	movlw	255
 34549  006D8A  583B               	subwfb	fat_delete_file@next_cluster+1,w,c
 34550  006D8C  B0D8               	btfsc	status,0,c
 34551  006D8E  D005               	goto	l1992
 34552                           
 34553                           ;fat16.c: 432: else;fat16.c: 433: {;fat16.c: 434: first_cluster = next_cluster;
 34554                           
 34555                           ;fat16.c: 430: }
 34556                           
 34557                           ;fat16.c: 428: {;fat16.c: 429: break;
 34558  006D90  C03A  F03C         	movff	fat_delete_file@next_cluster,fat_delete_file@first_cluster
 34559  006D94  C03B  F03D         	movff	fat_delete_file@next_cluster+1,fat_delete_file@first_cluster+1
 34560  006D98  D7E1               	goto	l1990
 34561  006D9A                     l1992:
 34562                           
 34563                           ;fat16.c: 435: };fat16.c: 436: };fat16.c: 440: _delete_root(file_number);
 34564  006D9A  503E               	movf	fat_delete_file@file_number,w,c
 34565  006D9C  EC5C  F038         	call	__delete_root
 34566  006DA0  0012               	return		;funcret
 34567  006DA2                     __end_of_fat_delete_file:
 34568                           	opt stack 0
 34569                           tosu	equ	0xFFF
 34570                           tosh	equ	0xFFE
 34571                           tosl	equ	0xFFD
 34572                           pclath	equ	0xFFA
 34573                           tblptru	equ	0xFF8
 34574                           tblptrh	equ	0xFF7
 34575                           tblptrl	equ	0xFF6
 34576                           tablat	equ	0xFF5
 34577                           prodh	equ	0xFF4
 34578                           prodl	equ	0xFF3
 34579                           intcon	equ	0xFF2
 34580                           intcon2	equ	0xFF1
 34581                           intcon3	equ	0xFF0
 34582                           indf0	equ	0xFEF
 34583                           postinc0	equ	0xFEE
 34584                           fsr0h	equ	0xFEA
 34585                           fsr0l	equ	0xFE9
 34586                           wreg	equ	0xFE8
 34587                           indf1	equ	0xFE7
 34588                           postdec1	equ	0xFE5
 34589                           plusw1	equ	0xFE3
 34590                           fsr1h	equ	0xFE2
 34591                           fsr1l	equ	0xFE1
 34592                           indf2	equ	0xFDF
 34593                           postinc2	equ	0xFDE
 34594                           postdec2	equ	0xFDD
 34595                           plusw2	equ	0xFDB
 34596                           fsr2h	equ	0xFDA
 34597                           fsr2l	equ	0xFD9
 34598                           status	equ	0xFD8
 34599                           
 34600 ;; *************** function __get_first_cluster *****************
 34601 ;; Defined at:
 34602 ;;		line 205 in file "fat16.c"
 34603 ;; Parameters:    Size  Location     Type
 34604 ;;  slot            1    wreg     unsigned char 
 34605 ;; Auto vars:     Size  Location     Type
 34606 ;;  slot            1   56[COMRAM] unsigned char 
 34607 ;;  first_cluste    2   54[COMRAM] unsigned int 
 34608 ;;  offset          2   52[COMRAM] unsigned int 
 34609 ;;  sector          2   50[COMRAM] unsigned int 
 34610 ;; Return value:  Size  Location     Type
 34611 ;;                  2   47[COMRAM] unsigned int 
 34612 ;; Registers used:
 34613 ;;		wreg, status,2, status,0, cstack
 34614 ;; Tracked objects:
 34615 ;;		On entry : 0/0
 34616 ;;		On exit  : 0/0
 34617 ;;		Unchanged: 0/0
 34618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34620 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34621 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34622 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34623 ;;Total ram usage:       10 bytes
 34624 ;; Hardware stack levels used:    1
 34625 ;; Hardware stack levels required when called:    5
 34626 ;; This function calls:
 34627 ;;		_flash_partial_read
 34628 ;; This function is called by:
 34629 ;;		_fat_delete_file
 34630 ;; This function uses a non-reentrant model
 34631 ;;
 34632                           
 34633                           	psect	text175
 34634  006DA2                     __ptext175:
 34635                           	opt stack 0
 34636  006DA2                     __get_first_cluster:
 34637                           	opt stack 21
 34638                           
 34639                           ;incstack = 0
 34640                           ;__get_first_cluster@slot stored from wreg
 34641  006DA2  6E39               	movwf	__get_first_cluster@slot,c
 34642                           
 34643                           ;fat16.c: 207: uint16_t sector;;fat16.c: 208: uint16_t offset;;fat16.c: 209: uint16_t fi
      +                          rst_cluster;;fat16.c: 210: sector = slot >> 4;
 34644  006DA4  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 34645  006DA8  3A32               	swapf	??__get_first_cluster,f,c
 34646  006DAA  0E0F               	movlw	15
 34647  006DAC  1632               	andwf	??__get_first_cluster,f,c
 34648  006DAE  5032               	movf	??__get_first_cluster,w,c
 34649  006DB0  6E33               	movwf	__get_first_cluster@sector,c
 34650  006DB2  6A34               	clrf	__get_first_cluster@sector+1,c
 34651                           
 34652                           ;fat16.c: 211: sector += 34;
 34653  006DB4  0E22               	movlw	34
 34654  006DB6  2633               	addwf	__get_first_cluster@sector,f,c
 34655  006DB8  0E00               	movlw	0
 34656  006DBA  2234               	addwfc	__get_first_cluster@sector+1,f,c
 34657                           
 34658                           ;fat16.c: 212: offset = slot & 0b1111;
 34659  006DBC  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 34660  006DC0  0E0F               	movlw	15
 34661  006DC2  1632               	andwf	??__get_first_cluster,f,c
 34662  006DC4  5032               	movf	??__get_first_cluster,w,c
 34663  006DC6  6E35               	movwf	__get_first_cluster@offset,c
 34664  006DC8  6A36               	clrf	__get_first_cluster@offset+1,c
 34665                           
 34666                           ;fat16.c: 213: offset <<= 5;
 34667  006DCA  0E05               	movlw	5
 34668  006DCC                     u8345:
 34669  006DCC  90D8               	bcf	status,0,c
 34670  006DCE  3635               	rlcf	__get_first_cluster@offset,f,c
 34671  006DD0  3636               	rlcf	__get_first_cluster@offset+1,f,c
 34672  006DD2  2EE8               	decfsz	wreg,f,c
 34673  006DD4  D7FB               	goto	u8345
 34674                           
 34675                           ;fat16.c: 214: offset += 26;
 34676  006DD6  0E1A               	movlw	26
 34677  006DD8  2635               	addwf	__get_first_cluster@offset,f,c
 34678  006DDA  0E00               	movlw	0
 34679  006DDC  2236               	addwfc	__get_first_cluster@offset+1,f,c
 34680                           
 34681                           ;fat16.c: 215: flash_partial_read(sector, offset, 2, &first_cluster);
 34682  006DDE  C033  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 34683  006DE2  C034  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 34684  006DE6  C035  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 34685  006DEA  C036  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 34686  006DEE  0E00               	movlw	0
 34687  006DF0  6E2D               	movwf	flash_partial_read@length+1,c
 34688  006DF2  0E02               	movlw	2
 34689  006DF4  6E2C               	movwf	flash_partial_read@length,c
 34690  006DF6  0E37               	movlw	low __get_first_cluster@first_cluster
 34691  006DF8  6E2E               	movwf	flash_partial_read@data,c
 34692  006DFA  0E00               	movlw	high __get_first_cluster@first_cluster
 34693  006DFC  6E2F               	movwf	flash_partial_read@data+1,c
 34694  006DFE  EC1C  F03E         	call	_flash_partial_read	;wreg free
 34695                           
 34696                           ;fat16.c: 216: return first_cluster;
 34697  006E02  C037  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 34698  006E06  C038  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 34699  006E0A  0012               	return	
 34700  006E0C                     __end_of__get_first_cluster:
 34701                           	opt stack 0
 34702                           tosu	equ	0xFFF
 34703                           tosh	equ	0xFFE
 34704                           tosl	equ	0xFFD
 34705                           pclath	equ	0xFFA
 34706                           tblptru	equ	0xFF8
 34707                           tblptrh	equ	0xFF7
 34708                           tblptrl	equ	0xFF6
 34709                           tablat	equ	0xFF5
 34710                           prodh	equ	0xFF4
 34711                           prodl	equ	0xFF3
 34712                           intcon	equ	0xFF2
 34713                           intcon2	equ	0xFF1
 34714                           intcon3	equ	0xFF0
 34715                           indf0	equ	0xFEF
 34716                           postinc0	equ	0xFEE
 34717                           fsr0h	equ	0xFEA
 34718                           fsr0l	equ	0xFE9
 34719                           wreg	equ	0xFE8
 34720                           indf1	equ	0xFE7
 34721                           postdec1	equ	0xFE5
 34722                           plusw1	equ	0xFE3
 34723                           fsr1h	equ	0xFE2
 34724                           fsr1l	equ	0xFE1
 34725                           indf2	equ	0xFDF
 34726                           postinc2	equ	0xFDE
 34727                           postdec2	equ	0xFDD
 34728                           plusw2	equ	0xFDB
 34729                           fsr2h	equ	0xFDA
 34730                           fsr2l	equ	0xFD9
 34731                           status	equ	0xFD8
 34732                           
 34733 ;; *************** function __delete_root *****************
 34734 ;; Defined at:
 34735 ;;		line 192 in file "fat16.c"
 34736 ;; Parameters:    Size  Location     Type
 34737 ;;  slot            1    wreg     unsigned char 
 34738 ;; Auto vars:     Size  Location     Type
 34739 ;;  slot            1   46[COMRAM] unsigned char 
 34740 ;;  offset          2   43[COMRAM] unsigned int 
 34741 ;;  root_sector     2   41[COMRAM] unsigned int 
 34742 ;;  deleted_valu    1   45[COMRAM] unsigned char 
 34743 ;; Return value:  Size  Location     Type
 34744 ;;                  1    wreg      void 
 34745 ;; Registers used:
 34746 ;;		wreg, status,2, status,0, cstack
 34747 ;; Tracked objects:
 34748 ;;		On entry : 0/0
 34749 ;;		On exit  : 0/0
 34750 ;;		Unchanged: 0/0
 34751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34753 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34754 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34755 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34756 ;;Total ram usage:        7 bytes
 34757 ;; Hardware stack levels used:    1
 34758 ;; Hardware stack levels required when called:    5
 34759 ;; This function calls:
 34760 ;;		_flash_partial_write
 34761 ;; This function is called by:
 34762 ;;		_fat_delete_file
 34763 ;; This function uses a non-reentrant model
 34764 ;;
 34765                           
 34766                           	psect	text176
 34767  0070B8                     __ptext176:
 34768                           	opt stack 0
 34769  0070B8                     __delete_root:
 34770                           	opt stack 21
 34771                           
 34772                           ;incstack = 0
 34773                           ;__delete_root@slot stored from wreg
 34774  0070B8  6E2F               	movwf	__delete_root@slot,c
 34775                           
 34776                           ;fat16.c: 194: uint16_t root_sector;;fat16.c: 195: uint16_t offset;;fat16.c: 196: uint8_
      +                          t deleted_value;;fat16.c: 198: root_sector = (slot >> 4) + 34;
 34777  0070BA  C02F  F029         	movff	__delete_root@slot,??__delete_root
 34778  0070BE  3A29               	swapf	??__delete_root,f,c
 34779  0070C0  0E0F               	movlw	15
 34780  0070C2  1629               	andwf	??__delete_root,f,c
 34781  0070C4  0E22               	movlw	34
 34782  0070C6  2429               	addwf	??__delete_root,w,c
 34783  0070C8  6E2A               	movwf	__delete_root@root_sector,c
 34784  0070CA  6A2B               	clrf	__delete_root@root_sector+1,c
 34785  0070CC  0E00               	movlw	0
 34786  0070CE  222B               	addwfc	__delete_root@root_sector+1,f,c
 34787                           
 34788                           ;fat16.c: 199: offset = (slot & 0b1111);
 34789  0070D0  C02F  F029         	movff	__delete_root@slot,??__delete_root
 34790  0070D4  0E0F               	movlw	15
 34791  0070D6  1629               	andwf	??__delete_root,f,c
 34792  0070D8  5029               	movf	??__delete_root,w,c
 34793  0070DA  6E2C               	movwf	__delete_root@offset,c
 34794  0070DC  6A2D               	clrf	__delete_root@offset+1,c
 34795                           
 34796                           ;fat16.c: 200: offset <<= 5;
 34797  0070DE  0E05               	movlw	5
 34798  0070E0                     u8335:
 34799  0070E0  90D8               	bcf	status,0,c
 34800  0070E2  362C               	rlcf	__delete_root@offset,f,c
 34801  0070E4  362D               	rlcf	__delete_root@offset+1,f,c
 34802  0070E6  2EE8               	decfsz	wreg,f,c
 34803  0070E8  D7FB               	goto	u8335
 34804                           
 34805                           ;fat16.c: 201: deleted_value = 0xE5;
 34806  0070EA  0EE5               	movlw	229
 34807  0070EC  6E2E               	movwf	__delete_root@deleted_value,c
 34808                           
 34809                           ;fat16.c: 202: flash_partial_write(root_sector, offset, 1, &deleted_value);
 34810  0070EE  C02A  F020         	movff	__delete_root@root_sector,flash_partial_write@page
 34811  0070F2  C02B  F021         	movff	__delete_root@root_sector+1,flash_partial_write@page+1
 34812  0070F6  C02C  F022         	movff	__delete_root@offset,flash_partial_write@start
 34813  0070FA  C02D  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 34814  0070FE  0E00               	movlw	0
 34815  007100  6E25               	movwf	flash_partial_write@length+1,c
 34816  007102  0E01               	movlw	1
 34817  007104  6E24               	movwf	flash_partial_write@length,c
 34818  007106  0E2E               	movlw	low __delete_root@deleted_value
 34819  007108  6E26               	movwf	flash_partial_write@data,c
 34820  00710A  0E00               	movlw	high __delete_root@deleted_value
 34821  00710C  6E27               	movwf	flash_partial_write@data+1,c
 34822  00710E  EC8D  F035         	call	_flash_partial_write	;wreg free
 34823  007112  0012               	return		;funcret
 34824  007114                     __end_of__delete_root:
 34825                           	opt stack 0
 34826                           tosu	equ	0xFFF
 34827                           tosh	equ	0xFFE
 34828                           tosl	equ	0xFFD
 34829                           pclath	equ	0xFFA
 34830                           tblptru	equ	0xFF8
 34831                           tblptrh	equ	0xFF7
 34832                           tblptrl	equ	0xFF6
 34833                           tablat	equ	0xFF5
 34834                           prodh	equ	0xFF4
 34835                           prodl	equ	0xFF3
 34836                           intcon	equ	0xFF2
 34837                           intcon2	equ	0xFF1
 34838                           intcon3	equ	0xFF0
 34839                           indf0	equ	0xFEF
 34840                           postinc0	equ	0xFEE
 34841                           fsr0h	equ	0xFEA
 34842                           fsr0l	equ	0xFE9
 34843                           wreg	equ	0xFE8
 34844                           indf1	equ	0xFE7
 34845                           postdec1	equ	0xFE5
 34846                           plusw1	equ	0xFE3
 34847                           fsr1h	equ	0xFE2
 34848                           fsr1l	equ	0xFE1
 34849                           indf2	equ	0xFDF
 34850                           postinc2	equ	0xFDE
 34851                           postdec2	equ	0xFDD
 34852                           plusw2	equ	0xFDB
 34853                           fsr2h	equ	0xFDA
 34854                           fsr2l	equ	0xFD9
 34855                           status	equ	0xFD8
 34856                           
 34857 ;; *************** function __parse_file_create *****************
 34858 ;; Defined at:
 34859 ;;		line 513 in file "api.c"
 34860 ;; Parameters:    Size  Location     Type
 34861 ;;  data            2   79[COMRAM] PTR unsigned char 
 34862 ;;		 -> RAM(3759), 
 34863 ;; Auto vars:     Size  Location     Type
 34864 ;;		None
 34865 ;; Return value:  Size  Location     Type
 34866 ;;                  1    wreg      unsigned char 
 34867 ;; Registers used:
 34868 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34869 ;; Tracked objects:
 34870 ;;		On entry : 0/0
 34871 ;;		On exit  : 0/0
 34872 ;;		Unchanged: 0/0
 34873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34877 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34878 ;;Total ram usage:        3 bytes
 34879 ;; Hardware stack levels used:    1
 34880 ;; Hardware stack levels required when called:    8
 34881 ;; This function calls:
 34882 ;;		_fat_create_file
 34883 ;; This function is called by:
 34884 ;;		__parse_command_long
 34885 ;; This function uses a non-reentrant model
 34886 ;;
 34887                           
 34888                           	psect	text177
 34889  006BF8                     __ptext177:
 34890                           	opt stack 0
 34891  006BF8                     __parse_file_create:
 34892                           	opt stack 20
 34893                           
 34894                           ;api.c: 516: if((data[0]!=COMMAND_FILE_CREATE) || (data[12]!=0xBD) || (data[13]!=0x4F))
 34895                           
 34896                           ;incstack = 0
 34897  006BF8  C050  FFD9         	movff	__parse_file_create@data,fsr2l
 34898  006BFC  C051  FFDA         	movff	__parse_file_create@data+1,fsr2h
 34899  006C00  0E52               	movlw	82
 34900  006C02  18DE               	xorwf	postinc2,w,c
 34901  006C04  A4D8               	btfss	status,2,c
 34902  006C06  D014               	goto	u9720
 34903  006C08  EE20 F00C          	lfsr	2,12
 34904  006C0C  5050               	movf	__parse_file_create@data,w,c
 34905  006C0E  26D9               	addwf	fsr2l,f,c
 34906  006C10  5051               	movf	__parse_file_create@data+1,w,c
 34907  006C12  22DA               	addwfc	fsr2h,f,c
 34908  006C14  0EBD               	movlw	189
 34909  006C16  18DE               	xorwf	postinc2,w,c
 34910  006C18  A4D8               	btfss	status,2,c
 34911  006C1A  D00A               	goto	u9720
 34912  006C1C  EE20 F00D          	lfsr	2,13
 34913  006C20  5050               	movf	__parse_file_create@data,w,c
 34914  006C22  26D9               	addwf	fsr2l,f,c
 34915  006C24  5051               	movf	__parse_file_create@data+1,w,c
 34916  006C26  22DA               	addwfc	fsr2h,f,c
 34917  006C28  0E4F               	movlw	79
 34918  006C2A  18DE               	xorwf	postinc2,w,c
 34919  006C2C  B4D8               	btfsc	status,2,c
 34920  006C2E  D002               	goto	l2677
 34921  006C30                     u9720:
 34922                           
 34923                           ;api.c: 517: {;api.c: 518: return 14;
 34924  006C30  0E0E               	movlw	14
 34925  006C32  0012               	return	
 34926  006C34                     l2677:
 34927                           
 34928                           ;api.c: 519: };api.c: 522: fat_create_file(&data[1], &data[9], 0);
 34929  006C34  0E01               	movlw	1
 34930  006C36  2450               	addwf	__parse_file_create@data,w,c
 34931  006C38  6E44               	movwf	fat_create_file@name,c
 34932  006C3A  0E00               	movlw	0
 34933  006C3C  2051               	addwfc	__parse_file_create@data+1,w,c
 34934  006C3E  6E45               	movwf	fat_create_file@name+1,c
 34935  006C40  0E09               	movlw	9
 34936  006C42  2450               	addwf	__parse_file_create@data,w,c
 34937  006C44  6E46               	movwf	fat_create_file@extension,c
 34938  006C46  0E00               	movlw	0
 34939  006C48  2051               	addwfc	__parse_file_create@data+1,w,c
 34940  006C4A  6E47               	movwf	fat_create_file@extension+1,c
 34941  006C4C  0E00               	movlw	0
 34942  006C4E  6E48               	movwf	fat_create_file@size,c
 34943  006C50  0E00               	movlw	0
 34944  006C52  6E49               	movwf	fat_create_file@size+1,c
 34945  006C54  0E00               	movlw	0
 34946  006C56  6E4A               	movwf	fat_create_file@size+2,c
 34947  006C58  0E00               	movlw	0
 34948  006C5A  6E4B               	movwf	fat_create_file@size+3,c
 34949  006C5C  ECAF  F018         	call	_fat_create_file	;wreg free
 34950                           
 34951                           ;api.c: 523: return 14;
 34952  006C60  0E0E               	movlw	14
 34953  006C62  0012               	return	
 34954  006C64                     __end_of__parse_file_create:
 34955                           	opt stack 0
 34956                           tosu	equ	0xFFF
 34957                           tosh	equ	0xFFE
 34958                           tosl	equ	0xFFD
 34959                           pclath	equ	0xFFA
 34960                           tblptru	equ	0xFF8
 34961                           tblptrh	equ	0xFF7
 34962                           tblptrl	equ	0xFF6
 34963                           tablat	equ	0xFF5
 34964                           prodh	equ	0xFF4
 34965                           prodl	equ	0xFF3
 34966                           intcon	equ	0xFF2
 34967                           intcon2	equ	0xFF1
 34968                           intcon3	equ	0xFF0
 34969                           indf0	equ	0xFEF
 34970                           postinc0	equ	0xFEE
 34971                           fsr0h	equ	0xFEA
 34972                           fsr0l	equ	0xFE9
 34973                           wreg	equ	0xFE8
 34974                           indf1	equ	0xFE7
 34975                           postdec1	equ	0xFE5
 34976                           plusw1	equ	0xFE3
 34977                           fsr1h	equ	0xFE2
 34978                           fsr1l	equ	0xFE1
 34979                           indf2	equ	0xFDF
 34980                           postinc2	equ	0xFDE
 34981                           postdec2	equ	0xFDD
 34982                           plusw2	equ	0xFDB
 34983                           fsr2h	equ	0xFDA
 34984                           fsr2l	equ	0xFD9
 34985                           status	equ	0xFD8
 34986                           
 34987 ;; *************** function _fat_create_file *****************
 34988 ;; Defined at:
 34989 ;;		line 309 in file "fat16.c"
 34990 ;; Parameters:    Size  Location     Type
 34991 ;;  name            2   67[COMRAM] PTR unsigned char 
 34992 ;;		 -> RAM(3759), 
 34993 ;;  extension       2   69[COMRAM] PTR unsigned char 
 34994 ;;		 -> RAM(3759), 
 34995 ;;  size            4   71[COMRAM] unsigned long 
 34996 ;; Auto vars:     Size  Location     Type
 34997 ;;  root_entry     32    9[BANK0 ] struct .
 34998 ;;  cluster         2    7[BANK0 ] unsigned int 
 34999 ;;  number_of_cl    2    5[BANK0 ] unsigned int 
 35000 ;;  cluster_coun    2    2[BANK0 ] unsigned int 
 35001 ;;  next_cluster    2    0[BANK0 ] unsigned int 
 35002 ;;  root_slot       1    4[BANK0 ] unsigned char 
 35003 ;; Return value:  Size  Location     Type
 35004 ;;                  1    wreg      unsigned char 
 35005 ;; Registers used:
 35006 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35007 ;; Tracked objects:
 35008 ;;		On entry : 0/0
 35009 ;;		On exit  : 0/0
 35010 ;;		Unchanged: 0/0
 35011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35012 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35013 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35014 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35015 ;;      Totals:        12      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35016 ;;Total ram usage:       53 bytes
 35017 ;; Hardware stack levels used:    1
 35018 ;; Hardware stack levels required when called:    7
 35019 ;; This function calls:
 35020 ;;		__get_available_root_entry
 35021 ;;		__get_date
 35022 ;;		__get_empty_cluster
 35023 ;;		__get_time
 35024 ;;		__write_fat
 35025 ;;		__write_root
 35026 ;;		_fat_find_file
 35027 ;;		_fat_get_empty_clusters
 35028 ;;		_memcpy
 35029 ;; This function is called by:
 35030 ;;		__parse_file_create
 35031 ;; This function uses a non-reentrant model
 35032 ;;
 35033                           
 35034                           	psect	text178
 35035  00315E                     __ptext178:
 35036                           	opt stack 0
 35037  00315E                     _fat_create_file:
 35038                           	opt stack 20
 35039                           
 35040                           ;fat16.c: 311: uint8_t root_slot;;fat16.c: 312: rootEntry_t root_entry;;fat16.c: 313: ui
      +                          nt16_t cluster;;fat16.c: 314: uint16_t next_cluster;;fat16.c: 315: uint16_t number_of_cl
      +                          usters;;fat16.c: 316: uint16_t cluster_count;;fat16.c: 320: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 35041                           
 35042                           ;incstack = 0
 35043  00315E  C044  F030         	movff	fat_create_file@name,fat_find_file@name
 35044  003162  C045  F031         	movff	fat_create_file@name+1,fat_find_file@name+1
 35045  003166  C046  F032         	movff	fat_create_file@extension,fat_find_file@extension
 35046  00316A  C047  F033         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 35047  00316E  EC98  F02B         	call	_fat_find_file	;wreg free
 35048  003172  0AFF               	xorlw	255
 35049  003174  A4D8               	btfss	status,2,c
 35050  003176  0012               	return	
 35051                           
 35052                           ;fat16.c: 325: };fat16.c: 329: root_slot = _get_available_root_entry();
 35053                           
 35054                           ;fat16.c: 321: {;fat16.c: 324: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 35055  003178  EC6F  F03F         	call	__get_available_root_entry	;wreg free
 35056  00317C  0100               	movlb	0	; () banked
 35057  00317E  6F64               	movwf	fat_create_file@root_slot& (0+255),b
 35058                           
 35059                           ; BSR set to: 0
 35060                           ;fat16.c: 330: if(root_slot == 0xFF)
 35061  003180  2964               	incf	fat_create_file@root_slot& (0+255),w,b
 35062  003182  B4D8               	btfsc	status,2,c
 35063  003184  0012               	return	
 35064                           
 35065                           ; BSR set to: 0
 35066                           ;fat16.c: 335: };fat16.c: 338: number_of_clusters = (size>>9) + 1;
 35067                           
 35068                           ; BSR set to: 0
 35069                           
 35070                           ; BSR set to: 0
 35071                           ;fat16.c: 331: {;fat16.c: 334: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 35072  003186  C048  F04C         	movff	fat_create_file@size,??_fat_create_file
 35073  00318A  C049  F04D         	movff	fat_create_file@size+1,??_fat_create_file+1
 35074  00318E  C04A  F04E         	movff	fat_create_file@size+2,??_fat_create_file+2
 35075  003192  C04B  F04F         	movff	fat_create_file@size+3,??_fat_create_file+3
 35076  003196  0E0A               	movlw	10
 35077  003198  D005               	goto	u9080
 35078  00319A                     u9085:
 35079  00319A  90D8               	bcf	status,0,c
 35080  00319C  324F               	rrcf	??_fat_create_file+3,f,c
 35081  00319E  324E               	rrcf	??_fat_create_file+2,f,c
 35082  0031A0  324D               	rrcf	??_fat_create_file+1,f,c
 35083  0031A2  324C               	rrcf	??_fat_create_file,f,c
 35084  0031A4                     u9080:
 35085  0031A4  2EE8               	decfsz	wreg,f,c
 35086  0031A6  D7F9               	goto	u9085
 35087  0031A8  0E01               	movlw	1
 35088  0031AA  244C               	addwf	??_fat_create_file,w,c
 35089  0031AC  6F65               	movwf	fat_create_file@number_of_clusters& (0+255),b
 35090  0031AE  0E00               	movlw	0
 35091  0031B0  204D               	addwfc	??_fat_create_file+1,w,c
 35092  0031B2  6F66               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 35093                           
 35094                           ; BSR set to: 0
 35095                           ;fat16.c: 339: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 35096  0031B4  C065  F030         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 35097  0031B8  C066  F031         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 35098  0031BC  ECE1  F031         	call	_fat_get_empty_clusters	;wreg free
 35099  0031C0  0100               	movlb	0	; () banked
 35100  0031C2  5165               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 35101  0031C4  1830               	xorwf	?_fat_get_empty_clusters,w,c
 35102  0031C6  E105               	bnz	u9090
 35103  0031C8  5166               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 35104  0031CA  1831               	xorwf	?_fat_get_empty_clusters+1,w,c
 35105  0031CC  A4D8               	btfss	status,2,c
 35106  0031CE  0012               	return	
 35107  0031D0  D001               	goto	l1979
 35108  0031D2                     u9090:
 35109                           
 35110                           ; BSR set to: 0
 35111                           ;fat16.c: 340: {;fat16.c: 343: return 0xFD;;	Return value of _fat_create_file is never u
      +                          sed
 35112  0031D2  0012               	return	
 35113  0031D4                     l1979:
 35114                           
 35115                           ; BSR set to: 0
 35116                           ;fat16.c: 344: };fat16.c: 347: cluster = _get_empty_cluster(2);
 35117                           
 35118                           ; BSR set to: 0
 35119  0031D4  0E00               	movlw	0
 35120  0031D6  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 35121  0031D8  0E02               	movlw	2
 35122  0031DA  6E30               	movwf	__get_empty_cluster@first_cluster,c
 35123  0031DC  ECE2  F034         	call	__get_empty_cluster	;wreg free
 35124  0031E0  C030  F067         	movff	?__get_empty_cluster,fat_create_file@cluster
 35125  0031E4  C031  F068         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 35126                           
 35127                           ;fat16.c: 350: memcpy(root_entry.fileName, name, 8);
 35128  0031E8  0E69               	movlw	low fat_create_file@root_entry
 35129  0031EA  6E01               	movwf	memcpy@d1,c
 35130  0031EC  0E00               	movlw	high fat_create_file@root_entry
 35131  0031EE  6E02               	movwf	memcpy@d1+1,c
 35132  0031F0  C044  F003         	movff	fat_create_file@name,memcpy@s1
 35133  0031F4  C045  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 35134  0031F8  5003               	movf	memcpy@s1,w,c
 35135  0031FA  1004               	iorwf	memcpy@s1+1,w,c
 35136  0031FC  A4D8               	btfss	status,2,c
 35137  0031FE  0E20               	movlw	32
 35138  003200  6E05               	movwf	memcpy@s1+2,c
 35139  003202  0E00               	movlw	0
 35140  003204  6E07               	movwf	memcpy@n+1,c
 35141  003206  0E08               	movlw	8
 35142  003208  6E06               	movwf	memcpy@n,c
 35143  00320A  EC39  F037         	call	_memcpy	;wreg free
 35144                           
 35145                           ;fat16.c: 351: memcpy(root_entry.fileExtension, extension, 3);
 35146  00320E  0E71               	movlw	low (fat_create_file@root_entry+8)
 35147  003210  6E01               	movwf	memcpy@d1,c
 35148  003212  0E00               	movlw	high (fat_create_file@root_entry+8)
 35149  003214  6E02               	movwf	memcpy@d1+1,c
 35150  003216  C046  F003         	movff	fat_create_file@extension,memcpy@s1
 35151  00321A  C047  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 35152  00321E  5003               	movf	memcpy@s1,w,c
 35153  003220  1004               	iorwf	memcpy@s1+1,w,c
 35154  003222  A4D8               	btfss	status,2,c
 35155  003224  0E20               	movlw	32
 35156  003226  6E05               	movwf	memcpy@s1+2,c
 35157  003228  0E00               	movlw	0
 35158  00322A  6E07               	movwf	memcpy@n+1,c
 35159  00322C  0E03               	movlw	3
 35160  00322E  6E06               	movwf	memcpy@n,c
 35161  003230  EC39  F037         	call	_memcpy	;wreg free
 35162                           
 35163                           ;fat16.c: 352: root_entry.attributes = 0x00;
 35164  003234  0E00               	movlw	0
 35165  003236  0100               	movlb	0	; () banked
 35166  003238  6F74               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 35167                           
 35168                           ; BSR set to: 0
 35169                           ;fat16.c: 353: root_entry.reserved1 = 0x00;
 35170  00323A  0E00               	movlw	0
 35171  00323C  6F75               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 35172                           
 35173                           ; BSR set to: 0
 35174                           ;fat16.c: 354: root_entry.secondFractions = 0x00;
 35175  00323E  0E00               	movlw	0
 35176  003240  6F76               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 35177                           
 35178                           ; BSR set to: 0
 35179                           ;fat16.c: 355: root_entry.createdTime = _get_time();
 35180  003242  ECD7  F040         	call	__get_time	;wreg free
 35181  003246  C001  F077         	movff	?__get_time,fat_create_file@root_entry+14
 35182  00324A  C002  F078         	movff	?__get_time+1,fat_create_file@root_entry+15
 35183                           
 35184                           ;fat16.c: 356: root_entry.createdDate = _get_date();
 35185  00324E  ECDC  F040         	call	__get_date	;wreg free
 35186  003252  C001  F079         	movff	?__get_date,fat_create_file@root_entry+16
 35187  003256  C002  F07A         	movff	?__get_date+1,fat_create_file@root_entry+17
 35188                           
 35189                           ;fat16.c: 357: root_entry.lastAccessDate = root_entry.createdDate;
 35190  00325A  C079  F07B         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 35191  00325E  C07A  F07C         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 35192                           
 35193                           ;fat16.c: 358: root_entry.reserved2 = 0x00;
 35194  003262  0E00               	movlw	0
 35195  003264  0100               	movlb	0	; () banked
 35196  003266  6F7E               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 35197  003268  0E00               	movlw	0
 35198  00326A  6F7D               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 35199                           
 35200                           ; BSR set to: 0
 35201                           ;fat16.c: 359: root_entry.modifiedTime = root_entry.createdTime;
 35202  00326C  C077  F07F         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 35203  003270  C078  F080         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 35204                           
 35205                           ; BSR set to: 0
 35206                           ;fat16.c: 360: root_entry.modifiedDate = root_entry.createdDate;
 35207  003274  C079  F081         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 35208  003278  C07A  F082         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 35209                           
 35210                           ; BSR set to: 0
 35211                           ;fat16.c: 361: root_entry.firstCluster = cluster;
 35212  00327C  C067  F083         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 35213  003280  C068  F084         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 35214                           
 35215                           ; BSR set to: 0
 35216                           ;fat16.c: 362: root_entry.fileSize = size;
 35217  003284  C048  F085         	movff	fat_create_file@size,fat_create_file@root_entry+28
 35218  003288  C049  F086         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 35219  00328C  C04A  F087         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 35220  003290  C04B  F088         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 35221                           
 35222                           ;fat16.c: 365: _write_root(root_slot, &root_entry);
 35223  003294  0E69               	movlw	low fat_create_file@root_entry
 35224  003296  6E29               	movwf	__write_root@data,c
 35225  003298  0E00               	movlw	high fat_create_file@root_entry
 35226  00329A  6E2A               	movwf	__write_root@data+1,c
 35227  00329C  5164               	movf	fat_create_file@root_slot& (0+255),w,b
 35228  00329E  EC0F  F039         	call	__write_root
 35229                           
 35230                           ;fat16.c: 370: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 35231  0032A2  0E00               	movlw	0
 35232  0032A4  0100               	movlb	0	; () banked
 35233  0032A6  6F63               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 35234  0032A8  0E01               	movlw	1
 35235  0032AA  6F62               	movwf	fat_create_file@cluster_count& (0+255),b
 35236  0032AC  D02F               	goto	l1980
 35237  0032AE                     
 35238                           ; BSR set to: 0
 35239                           ;fat16.c: 371: {;fat16.c: 373: if(cluster_count==number_of_clusters)
 35240                           
 35241                           ; BSR set to: 0
 35242  0032AE  5165               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 35243  0032B0  1962               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 35244  0032B2  E10E               	bnz	l11957
 35245  0032B4  5166               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 35246  0032B6  1963               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 35247  0032B8  A4D8               	btfss	status,2,c
 35248  0032BA  D00A               	goto	l1982
 35249                           
 35250                           ; BSR set to: 0
 35251                           ;fat16.c: 374: {;fat16.c: 376: _write_fat(cluster, 0xFFFF);
 35252  0032BC  C067  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 35253  0032C0  C068  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 35254  0032C4  0EFF               	movlw	255
 35255  0032C6  6E2C               	movwf	__write_fat@value+1,c
 35256  0032C8  682B               	setf	__write_fat@value,c
 35257  0032CA  EC9E  F03C         	call	__write_fat	;wreg free
 35258                           
 35259                           ;fat16.c: 377: }
 35260  0032CE  D01B               	goto	l1983
 35261  0032D0                     l1982:
 35262  0032D0                     l11957:
 35263                           
 35264                           ;fat16.c: 378: else;fat16.c: 379: {;fat16.c: 381: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 35265  0032D0  0E01               	movlw	1
 35266  0032D2  0100               	movlb	0	; () banked
 35267  0032D4  2567               	addwf	fat_create_file@cluster& (0+255),w,b
 35268  0032D6  6E30               	movwf	__get_empty_cluster@first_cluster,c
 35269  0032D8  0E00               	movlw	0
 35270  0032DA  2168               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 35271  0032DC  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 35272  0032DE  ECE2  F034         	call	__get_empty_cluster	;wreg free
 35273  0032E2  C030  F060         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 35274  0032E6  C031  F061         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 35275                           
 35276                           ;fat16.c: 383: _write_fat(cluster, next_cluster);
 35277  0032EA  C067  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 35278  0032EE  C068  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 35279  0032F2  C060  F02B         	movff	fat_create_file@next_cluster,__write_fat@value
 35280  0032F6  C061  F02C         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 35281  0032FA  EC9E  F03C         	call	__write_fat	;wreg free
 35282                           
 35283                           ;fat16.c: 385: cluster = next_cluster;
 35284  0032FE  C060  F067         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 35285  003302  C061  F068         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 35286  003306                     l1983:
 35287  003306  0100               	movlb	0	; () banked
 35288  003308  4B62               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 35289  00330A  2B63               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 35290  00330C                     l1980:
 35291                           
 35292                           ; BSR set to: 0
 35293                           
 35294                           ; BSR set to: 0
 35295  00330C  5162               	movf	fat_create_file@cluster_count& (0+255),w,b
 35296  00330E  5D65               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 35297  003310  5163               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 35298  003312  5966               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 35299  003314  A0D8               	btfss	status,0,c
 35300  003316  0012               	return	
 35301  003318  D7CA               	goto	l1981
 35302  00331A                     __end_of_fat_create_file:
 35303                           	opt stack 0
 35304                           tosu	equ	0xFFF
 35305                           tosh	equ	0xFFE
 35306                           tosl	equ	0xFFD
 35307                           pclath	equ	0xFFA
 35308                           tblptru	equ	0xFF8
 35309                           tblptrh	equ	0xFF7
 35310                           tblptrl	equ	0xFF6
 35311                           tablat	equ	0xFF5
 35312                           prodh	equ	0xFF4
 35313                           prodl	equ	0xFF3
 35314                           intcon	equ	0xFF2
 35315                           intcon2	equ	0xFF1
 35316                           intcon3	equ	0xFF0
 35317                           indf0	equ	0xFEF
 35318                           postinc0	equ	0xFEE
 35319                           fsr0h	equ	0xFEA
 35320                           fsr0l	equ	0xFE9
 35321                           wreg	equ	0xFE8
 35322                           indf1	equ	0xFE7
 35323                           postdec1	equ	0xFE5
 35324                           plusw1	equ	0xFE3
 35325                           fsr1h	equ	0xFE2
 35326                           fsr1l	equ	0xFE1
 35327                           indf2	equ	0xFDF
 35328                           postinc2	equ	0xFDE
 35329                           postdec2	equ	0xFDD
 35330                           plusw2	equ	0xFDB
 35331                           fsr2h	equ	0xFDA
 35332                           fsr2l	equ	0xFD9
 35333                           status	equ	0xFD8
 35334                           
 35335 ;; *************** function _memcpy *****************
 35336 ;; Defined at:
 35337 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 35338 ;; Parameters:    Size  Location     Type
 35339 ;;  d1              2    0[COMRAM] PTR void 
 35340 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 35341 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 35342 ;;  s1              3    2[COMRAM] PTR const void 
 35343 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 35344 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 35345 ;;  n               2    5[COMRAM] unsigned int 
 35346 ;; Auto vars:     Size  Location     Type
 35347 ;;  s               3    7[COMRAM] PTR const unsigned char 
 35348 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 35349 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 35350 ;;  d               2   10[COMRAM] PTR unsigned char 
 35351 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 35352 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 35353 ;;  tmp             1   12[COMRAM] unsigned char 
 35354 ;; Return value:  Size  Location     Type
 35355 ;;                  2    0[COMRAM] PTR void 
 35356 ;; Registers used:
 35357 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 35358 ;; Tracked objects:
 35359 ;;		On entry : 0/0
 35360 ;;		On exit  : 0/0
 35361 ;;		Unchanged: 0/0
 35362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35363 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35364 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35366 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35367 ;;Total ram usage:       13 bytes
 35368 ;; Hardware stack levels used:    1
 35369 ;; This function calls:
 35370 ;;		Nothing
 35371 ;; This function is called by:
 35372 ;;		_USBCtrlEPService
 35373 ;;		_MSDProcessCommandMediaPresent
 35374 ;;		__flash_set_page_size
 35375 ;;		_fat_create_file
 35376 ;;		_internalFlash_read
 35377 ;;		_api_prepare
 35378 ;; This function uses a non-reentrant model
 35379 ;;
 35380                           
 35381                           	psect	text179
 35382  006E72                     __ptext179:
 35383                           	opt stack 0
 35384  006E72                     _memcpy:
 35385                           	opt stack 27
 35386                           
 35387                           ;incstack = 0
 35388  006E72  C003  F008         	movff	memcpy@s1,memcpy@s
 35389  006E76  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 35390  006E7A  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 35391  006E7E  C001  F00B         	movff	memcpy@d1,memcpy@d
 35392  006E82  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 35393  006E86  D01F               	goto	l3519
 35394  006E88                     l10705:
 35395  006E88  C008  FFF6         	movff	memcpy@s,tblptrl
 35396  006E8C  C009  FFF7         	movff	memcpy@s+1,tblptrh
 35397  006E90  C00A  FFF8         	movff	memcpy@s+2,tblptru
 35398  006E94  BAF8               	btfsc	tblptru,5,c
 35399  006E96  D003               	bra	u7477
 35400  006E98  0008               	tblrd		*
 35401  006E9A  50F5               	movf	tablat,w,c
 35402  006E9C  D005               	bra	u7470
 35403  006E9E                     u7477:
 35404  006E9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 35405  006EA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 35406  006EA6  50EF               	movf	indf0,w,c
 35407  006EA8                     u7470:
 35408  006EA8  6E0D               	movwf	memcpy@tmp,c
 35409  006EAA  0E01               	movlw	1
 35410  006EAC  2608               	addwf	memcpy@s,f,c
 35411  006EAE  0E00               	movlw	0
 35412  006EB0  2209               	addwfc	memcpy@s+1,f,c
 35413  006EB2  0E00               	movlw	0
 35414  006EB4  220A               	addwfc	memcpy@s+2,f,c
 35415  006EB6  C00B  FFD9         	movff	memcpy@d,fsr2l
 35416  006EBA  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 35417  006EBE  C00D  FFDF         	movff	memcpy@tmp,indf2
 35418  006EC2  4A0B               	infsnz	memcpy@d,f,c
 35419  006EC4  2A0C               	incf	memcpy@d+1,f,c
 35420  006EC6                     l3519:
 35421  006EC6  0606               	decf	memcpy@n,f,c
 35422  006EC8  A0D8               	btfss	status,0,c
 35423  006ECA  0607               	decf	memcpy@n+1,f,c
 35424  006ECC  2806               	incf	memcpy@n,w,c
 35425  006ECE  E1DC               	bnz	l10705
 35426  006ED0  2807               	incf	memcpy@n+1,w,c
 35427  006ED2  B4D8               	btfsc	status,2,c
 35428  006ED4  0012               	return	
 35429  006ED6  D7D8               	goto	l3520
 35430  006ED8                     __end_of_memcpy:
 35431                           	opt stack 0
 35432                           tosu	equ	0xFFF
 35433                           tosh	equ	0xFFE
 35434                           tosl	equ	0xFFD
 35435                           pclath	equ	0xFFA
 35436                           tblptru	equ	0xFF8
 35437                           tblptrh	equ	0xFF7
 35438                           tblptrl	equ	0xFF6
 35439                           tablat	equ	0xFF5
 35440                           prodh	equ	0xFF4
 35441                           prodl	equ	0xFF3
 35442                           intcon	equ	0xFF2
 35443                           intcon2	equ	0xFF1
 35444                           intcon3	equ	0xFF0
 35445                           indf0	equ	0xFEF
 35446                           postinc0	equ	0xFEE
 35447                           fsr0h	equ	0xFEA
 35448                           fsr0l	equ	0xFE9
 35449                           wreg	equ	0xFE8
 35450                           indf1	equ	0xFE7
 35451                           postdec1	equ	0xFE5
 35452                           plusw1	equ	0xFE3
 35453                           fsr1h	equ	0xFE2
 35454                           fsr1l	equ	0xFE1
 35455                           indf2	equ	0xFDF
 35456                           postinc2	equ	0xFDE
 35457                           postdec2	equ	0xFDD
 35458                           plusw2	equ	0xFDB
 35459                           fsr2h	equ	0xFDA
 35460                           fsr2l	equ	0xFD9
 35461                           status	equ	0xFD8
 35462                           
 35463 ;; *************** function _fat_get_empty_clusters *****************
 35464 ;; Defined at:
 35465 ;;		line 130 in file "fat16.c"
 35466 ;; Parameters:    Size  Location     Type
 35467 ;;  maximum         2   47[COMRAM] unsigned int 
 35468 ;; Auto vars:     Size  Location     Type
 35469 ;;  cluster         2   57[COMRAM] unsigned int 
 35470 ;;  empty_cluste    2   55[COMRAM] unsigned int 
 35471 ;;  value           2   53[COMRAM] unsigned int 
 35472 ;;  offset          2   51[COMRAM] unsigned int 
 35473 ;;  fat_sector      2   49[COMRAM] unsigned int 
 35474 ;; Return value:  Size  Location     Type
 35475 ;;                  2   47[COMRAM] unsigned int 
 35476 ;; Registers used:
 35477 ;;		wreg, status,2, status,0, cstack
 35478 ;; Tracked objects:
 35479 ;;		On entry : 0/0
 35480 ;;		On exit  : 0/0
 35481 ;;		Unchanged: 0/0
 35482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35484 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35486 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35487 ;;Total ram usage:       12 bytes
 35488 ;; Hardware stack levels used:    1
 35489 ;; Hardware stack levels required when called:    5
 35490 ;; This function calls:
 35491 ;;		_flash_partial_read
 35492 ;; This function is called by:
 35493 ;;		_fat_create_file
 35494 ;; This function uses a non-reentrant model
 35495 ;;
 35496                           
 35497                           	psect	text180
 35498  0063C2                     __ptext180:
 35499                           	opt stack 0
 35500  0063C2                     _fat_get_empty_clusters:
 35501                           	opt stack 21
 35502                           
 35503                           ;fat16.c: 132: uint16_t empty_clusters = 0;
 35504                           
 35505                           ;incstack = 0
 35506  0063C2  0E00               	movlw	0
 35507  0063C4  6E39               	movwf	fat_get_empty_clusters@empty_clusters+1,c
 35508  0063C6  0E00               	movlw	0
 35509  0063C8  6E38               	movwf	fat_get_empty_clusters@empty_clusters,c
 35510                           
 35511                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t fat_sector;;fat16.c: 135: uint16
      +                          _t offset;;fat16.c: 136: uint16_t value;;fat16.c: 139: for(cluster=2; cluster<(8154+2); 
      +                          ++cluster)
 35512  0063CA  0E00               	movlw	0
 35513  0063CC  6E3B               	movwf	fat_get_empty_clusters@cluster+1,c
 35514  0063CE  0E02               	movlw	2
 35515  0063D0  6E3A               	movwf	fat_get_empty_clusters@cluster,c
 35516  0063D2  D033               	goto	l11359
 35517  0063D4                     
 35518                           ;fat16.c: 140: {;fat16.c: 141: fat_sector = cluster>>8;
 35519  0063D4  503B               	movf	fat_get_empty_clusters@cluster+1,w,c
 35520  0063D6  6E32               	movwf	fat_get_empty_clusters@fat_sector,c
 35521  0063D8  6A33               	clrf	fat_get_empty_clusters@fat_sector+1,c
 35522                           
 35523                           ;fat16.c: 142: fat_sector += 2;
 35524  0063DA  0E02               	movlw	2
 35525  0063DC  2632               	addwf	fat_get_empty_clusters@fat_sector,f,c
 35526  0063DE  0E00               	movlw	0
 35527  0063E0  2233               	addwfc	fat_get_empty_clusters@fat_sector+1,f,c
 35528                           
 35529                           ;fat16.c: 143: offset = cluster & 0xFF;
 35530  0063E2  503A               	movf	fat_get_empty_clusters@cluster,w,c
 35531  0063E4  6E34               	movwf	fat_get_empty_clusters@offset,c
 35532  0063E6  6A35               	clrf	fat_get_empty_clusters@offset+1,c
 35533                           
 35534                           ;fat16.c: 144: offset <<= 1;
 35535  0063E8  90D8               	bcf	status,0,c
 35536  0063EA  3634               	rlcf	fat_get_empty_clusters@offset,f,c
 35537  0063EC  3635               	rlcf	fat_get_empty_clusters@offset+1,f,c
 35538                           
 35539                           ;fat16.c: 145: flash_partial_read(fat_sector, offset, 2, &value);
 35540  0063EE  C032  F028         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 35541  0063F2  C033  F029         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 35542  0063F6  C034  F02A         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 35543  0063FA  C035  F02B         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 35544  0063FE  0E00               	movlw	0
 35545  006400  6E2D               	movwf	flash_partial_read@length+1,c
 35546  006402  0E02               	movlw	2
 35547  006404  6E2C               	movwf	flash_partial_read@length,c
 35548  006406  0E36               	movlw	low fat_get_empty_clusters@value
 35549  006408  6E2E               	movwf	flash_partial_read@data,c
 35550  00640A  0E00               	movlw	high fat_get_empty_clusters@value
 35551  00640C  6E2F               	movwf	flash_partial_read@data+1,c
 35552  00640E  EC1C  F03E         	call	_flash_partial_read	;wreg free
 35553                           
 35554                           ;fat16.c: 146: if(value==0x0000)
 35555  006412  5036               	movf	fat_get_empty_clusters@value,w,c
 35556  006414  1037               	iorwf	fat_get_empty_clusters@value+1,w,c
 35557  006416  A4D8               	btfss	status,2,c
 35558  006418  D00E               	goto	l1935
 35559                           
 35560                           ;fat16.c: 147: {;fat16.c: 148: ++empty_clusters;
 35561  00641A  4A38               	infsnz	fat_get_empty_clusters@empty_clusters,f,c
 35562  00641C  2A39               	incf	fat_get_empty_clusters@empty_clusters+1,f,c
 35563                           
 35564                           ;fat16.c: 149: if(empty_clusters==maximum)
 35565  00641E  5030               	movf	fat_get_empty_clusters@maximum,w,c
 35566  006420  1838               	xorwf	fat_get_empty_clusters@empty_clusters,w,c
 35567  006422  E109               	bnz	l11357
 35568  006424  5031               	movf	fat_get_empty_clusters@maximum+1,w,c
 35569  006426  1839               	xorwf	fat_get_empty_clusters@empty_clusters+1,w,c
 35570  006428  A4D8               	btfss	status,2,c
 35571  00642A  D005               	goto	l1935
 35572                           
 35573                           ;fat16.c: 150: {;fat16.c: 151: return empty_clusters;
 35574  00642C  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 35575  006430  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 35576  006434  0012               	return	
 35577  006436                     l1935:
 35578  006436                     l11357:
 35579  006436  4A3A               	infsnz	fat_get_empty_clusters@cluster,f,c
 35580  006438  2A3B               	incf	fat_get_empty_clusters@cluster+1,f,c
 35581  00643A                     l11359:
 35582  00643A  0EDC               	movlw	220
 35583  00643C  5C3A               	subwf	fat_get_empty_clusters@cluster,w,c
 35584  00643E  0E1F               	movlw	31
 35585  006440  583B               	subwfb	fat_get_empty_clusters@cluster+1,w,c
 35586  006442  A0D8               	btfss	status,0,c
 35587  006444  D7C7               	goto	l1932
 35588                           
 35589                           ;fat16.c: 152: };fat16.c: 153: };fat16.c: 154: };fat16.c: 155: return empty_clusters;
 35590  006446  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 35591  00644A  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 35592  00644E  0012               	return		;funcret
 35593  006450                     __end_of_fat_get_empty_clusters:
 35594                           	opt stack 0
 35595                           tosu	equ	0xFFF
 35596                           tosh	equ	0xFFE
 35597                           tosl	equ	0xFFD
 35598                           pclath	equ	0xFFA
 35599                           tblptru	equ	0xFF8
 35600                           tblptrh	equ	0xFF7
 35601                           tblptrl	equ	0xFF6
 35602                           tablat	equ	0xFF5
 35603                           prodh	equ	0xFF4
 35604                           prodl	equ	0xFF3
 35605                           intcon	equ	0xFF2
 35606                           intcon2	equ	0xFF1
 35607                           intcon3	equ	0xFF0
 35608                           indf0	equ	0xFEF
 35609                           postinc0	equ	0xFEE
 35610                           fsr0h	equ	0xFEA
 35611                           fsr0l	equ	0xFE9
 35612                           wreg	equ	0xFE8
 35613                           indf1	equ	0xFE7
 35614                           postdec1	equ	0xFE5
 35615                           plusw1	equ	0xFE3
 35616                           fsr1h	equ	0xFE2
 35617                           fsr1l	equ	0xFE1
 35618                           indf2	equ	0xFDF
 35619                           postinc2	equ	0xFDE
 35620                           postdec2	equ	0xFDD
 35621                           plusw2	equ	0xFDB
 35622                           fsr2h	equ	0xFDA
 35623                           fsr2l	equ	0xFD9
 35624                           status	equ	0xFD8
 35625                           
 35626 ;; *************** function _fat_find_file *****************
 35627 ;; Defined at:
 35628 ;;		line 250 in file "fat16.c"
 35629 ;; Parameters:    Size  Location     Type
 35630 ;;  name            2   47[COMRAM] PTR unsigned char 
 35631 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), RAM(3759), 
 35632 ;;  extension       2   49[COMRAM] PTR unsigned char 
 35633 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), RAM(3759), 
 35634 ;; Auto vars:     Size  Location     Type
 35635 ;;  buffer         11   51[COMRAM] unsigned char [11]
 35636 ;;  offset          2   65[COMRAM] unsigned int 
 35637 ;;  sector          2   63[COMRAM] unsigned int 
 35638 ;;  slot            1   62[COMRAM] unsigned char 
 35639 ;; Return value:  Size  Location     Type
 35640 ;;                  1    wreg      unsigned char 
 35641 ;; Registers used:
 35642 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35643 ;; Tracked objects:
 35644 ;;		On entry : 0/0
 35645 ;;		On exit  : 0/0
 35646 ;;		Unchanged: 0/0
 35647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35649 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35651 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35652 ;;Total ram usage:       20 bytes
 35653 ;; Hardware stack levels used:    1
 35654 ;; Hardware stack levels required when called:    5
 35655 ;; This function calls:
 35656 ;;		_flash_partial_read
 35657 ;;		_strncmp
 35658 ;; This function is called by:
 35659 ;;		_fat_create_file
 35660 ;;		__bootloader_find_file
 35661 ;;		__fill_buffer_find_file
 35662 ;; This function uses a non-reentrant model
 35663 ;;
 35664                           
 35665                           	psect	text181
 35666  005730                     __ptext181:
 35667                           	opt stack 0
 35668  005730                     _fat_find_file:
 35669                           	opt stack 23
 35670                           
 35671                           ;fat16.c: 252: uint8_t slot;;fat16.c: 253: uint16_t sector;;fat16.c: 254: uint16_t offse
      +                          t;;fat16.c: 255: uint8_t buffer[11];;fat16.c: 256: slot = 0;
 35672                           
 35673                           ;incstack = 0
 35674  005730  0E00               	movlw	0
 35675  005732  6E3F               	movwf	fat_find_file@slot,c
 35676                           
 35677                           ;fat16.c: 257: for(sector = 34; sector <= 37; ++sector)
 35678  005734  0E00               	movlw	0
 35679  005736  6E41               	movwf	fat_find_file@sector+1,c
 35680  005738  0E22               	movlw	34
 35681  00573A  6E40               	movwf	fat_find_file@sector,c
 35682  00573C                     l11405:
 35683  00573C  5041               	movf	fat_find_file@sector+1,w,c
 35684  00573E  E156               	bnz	l11447
 35685  005740  0E26               	movlw	38
 35686  005742  5C40               	subwf	fat_find_file@sector,w,c
 35687  005744  B0D8               	btfsc	status,0,c
 35688  005746  D052               	goto	u8420
 35689                           
 35690                           ;fat16.c: 258: {;fat16.c: 259: for(offset = 0; offset<512; offset += 32)
 35691  005748  0E00               	movlw	0
 35692  00574A  6E43               	movwf	fat_find_file@offset+1,c
 35693  00574C  0E00               	movlw	0
 35694  00574E  6E42               	movwf	fat_find_file@offset,c
 35695  005750                     l11411:
 35696  005750  0E02               	movlw	2
 35697  005752  5C43               	subwf	fat_find_file@offset+1,w,c
 35698  005754  B0D8               	btfsc	status,0,c
 35699  005756  D047               	goto	u8410
 35700                           
 35701                           ;fat16.c: 260: {;fat16.c: 261: flash_partial_read(sector, offset, 11, &buffer);
 35702  005758  C040  F028         	movff	fat_find_file@sector,flash_partial_read@page
 35703  00575C  C041  F029         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 35704  005760  C042  F02A         	movff	fat_find_file@offset,flash_partial_read@start
 35705  005764  C043  F02B         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 35706  005768  0E00               	movlw	0
 35707  00576A  6E2D               	movwf	flash_partial_read@length+1,c
 35708  00576C  0E0B               	movlw	11
 35709  00576E  6E2C               	movwf	flash_partial_read@length,c
 35710  005770  0E34               	movlw	low fat_find_file@buffer
 35711  005772  6E2E               	movwf	flash_partial_read@data,c
 35712  005774  0E00               	movlw	high fat_find_file@buffer
 35713  005776  6E2F               	movwf	flash_partial_read@data+1,c
 35714  005778  EC1C  F03E         	call	_flash_partial_read	;wreg free
 35715                           
 35716                           ;fat16.c: 262: if(buffer[0]==0x00)
 35717  00577C  5034               	movf	fat_find_file@buffer,w,c
 35718  00577E  A4D8               	btfss	status,2,c
 35719  005780  D002               	goto	l1964
 35720                           
 35721                           ;fat16.c: 263: {;fat16.c: 266: return 0xFF;
 35722  005782  0EFF               	movlw	255
 35723  005784  0012               	return	
 35724  005786                     l1964:
 35725                           
 35726                           ;fat16.c: 268: else if(buffer[0]==0xE5)
 35727  005786  0EE5               	movlw	229
 35728  005788  1834               	xorwf	fat_find_file@buffer,w,c
 35729  00578A  B4D8               	btfsc	status,2,c
 35730  00578C  D026               	goto	l1970
 35731                           
 35732                           ;fat16.c: 274: else;fat16.c: 275: {;fat16.c: 277: if(strncmp(name, &buffer[0], 8) == 0)
 35733                           
 35734                           ;fat16.c: 269: {;fat16.c: 273: }
 35735  00578E  C030  F001         	movff	fat_find_file@name,strncmp@s1
 35736  005792  C031  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 35737  005796  0E34               	movlw	low fat_find_file@buffer
 35738  005798  6E03               	movwf	strncmp@s2,c
 35739  00579A  0E00               	movlw	high fat_find_file@buffer
 35740  00579C  6E04               	movwf	strncmp@s2+1,c
 35741  00579E  0E00               	movlw	0
 35742  0057A0  6E06               	movwf	strncmp@len+1,c
 35743  0057A2  0E08               	movlw	8
 35744  0057A4  6E05               	movwf	strncmp@len,c
 35745  0057A6  EC37  F02B         	call	_strncmp	;wreg free
 35746  0057AA  5001               	movf	?_strncmp,w,c
 35747  0057AC  1002               	iorwf	?_strncmp+1,w,c
 35748  0057AE  A4D8               	btfss	status,2,c
 35749  0057B0  D014               	goto	l1970
 35750                           
 35751                           ;fat16.c: 278: {;fat16.c: 280: if(strncmp(extension, &buffer[8], 3) == 0)
 35752  0057B2  C032  F001         	movff	fat_find_file@extension,strncmp@s1
 35753  0057B6  C033  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 35754  0057BA  0E3C               	movlw	low (fat_find_file@buffer+8)
 35755  0057BC  6E03               	movwf	strncmp@s2,c
 35756  0057BE  0E00               	movlw	high (fat_find_file@buffer+8)
 35757  0057C0  6E04               	movwf	strncmp@s2+1,c
 35758  0057C2  0E00               	movlw	0
 35759  0057C4  6E06               	movwf	strncmp@len+1,c
 35760  0057C6  0E03               	movlw	3
 35761  0057C8  6E05               	movwf	strncmp@len,c
 35762  0057CA  EC37  F02B         	call	_strncmp	;wreg free
 35763  0057CE  5001               	movf	?_strncmp,w,c
 35764  0057D0  1002               	iorwf	?_strncmp+1,w,c
 35765  0057D2  A4D8               	btfss	status,2,c
 35766  0057D4  D002               	goto	l1970
 35767                           
 35768                           ;fat16.c: 281: {;fat16.c: 284: return slot;
 35769  0057D6  503F               	movf	fat_find_file@slot,w,c
 35770  0057D8  0012               	return	
 35771  0057DA                     l1970:
 35772                           
 35773                           ;fat16.c: 285: };fat16.c: 286: };fat16.c: 287: };fat16.c: 288: ++slot;
 35774  0057DA  2A3F               	incf	fat_find_file@slot,f,c
 35775  0057DC  0E20               	movlw	32
 35776  0057DE  2642               	addwf	fat_find_file@offset,f,c
 35777  0057E0  0E00               	movlw	0
 35778  0057E2  2243               	addwfc	fat_find_file@offset+1,f,c
 35779  0057E4  D7B5               	goto	l11411
 35780  0057E6                     u8410:
 35781  0057E6  4A40               	infsnz	fat_find_file@sector,f,c
 35782  0057E8  2A41               	incf	fat_find_file@sector+1,f,c
 35783  0057EA  D7A8               	goto	l11405
 35784  0057EC                     u8420:
 35785  0057EC                     l11447:
 35786                           
 35787                           ;fat16.c: 289: };fat16.c: 290: };fat16.c: 291: return 0xFF;
 35788  0057EC  0EFF               	movlw	255
 35789  0057EE  0012               	return	
 35790  0057F0                     __end_of_fat_find_file:
 35791                           	opt stack 0
 35792                           tosu	equ	0xFFF
 35793                           tosh	equ	0xFFE
 35794                           tosl	equ	0xFFD
 35795                           pclath	equ	0xFFA
 35796                           tblptru	equ	0xFF8
 35797                           tblptrh	equ	0xFF7
 35798                           tblptrl	equ	0xFF6
 35799                           tablat	equ	0xFF5
 35800                           prodh	equ	0xFF4
 35801                           prodl	equ	0xFF3
 35802                           intcon	equ	0xFF2
 35803                           intcon2	equ	0xFF1
 35804                           intcon3	equ	0xFF0
 35805                           indf0	equ	0xFEF
 35806                           postinc0	equ	0xFEE
 35807                           fsr0h	equ	0xFEA
 35808                           fsr0l	equ	0xFE9
 35809                           wreg	equ	0xFE8
 35810                           indf1	equ	0xFE7
 35811                           postdec1	equ	0xFE5
 35812                           plusw1	equ	0xFE3
 35813                           fsr1h	equ	0xFE2
 35814                           fsr1l	equ	0xFE1
 35815                           indf2	equ	0xFDF
 35816                           postinc2	equ	0xFDE
 35817                           postdec2	equ	0xFDD
 35818                           plusw2	equ	0xFDB
 35819                           fsr2h	equ	0xFDA
 35820                           fsr2l	equ	0xFD9
 35821                           status	equ	0xFD8
 35822                           
 35823 ;; *************** function _strncmp *****************
 35824 ;; Defined at:
 35825 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 35826 ;; Parameters:    Size  Location     Type
 35827 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 35828 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), RAM(3759), 
 35829 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 35830 ;;		 -> fat_find_file@buffer(11), 
 35831 ;;  len             2    4[COMRAM] unsigned int 
 35832 ;; Auto vars:     Size  Location     Type
 35833 ;;		None
 35834 ;; Return value:  Size  Location     Type
 35835 ;;                  2    0[COMRAM] int 
 35836 ;; Registers used:
 35837 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 35838 ;; Tracked objects:
 35839 ;;		On entry : 0/0
 35840 ;;		On exit  : 0/0
 35841 ;;		Unchanged: 0/0
 35842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35843 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35845 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35846 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35847 ;;Total ram usage:        9 bytes
 35848 ;; Hardware stack levels used:    1
 35849 ;; This function calls:
 35850 ;;		Nothing
 35851 ;; This function is called by:
 35852 ;;		_fat_find_file
 35853 ;; This function uses a non-reentrant model
 35854 ;;
 35855                           
 35856                           	psect	text182
 35857  00566E                     __ptext182:
 35858                           	opt stack 0
 35859  00566E                     _strncmp:
 35860                           	opt stack 27
 35861                           
 35862                           ;incstack = 0
 35863  00566E  D053               	goto	l3537
 35864  005670                     l10607:
 35865  005670  C001  FFF6         	movff	strncmp@s1,tblptrl
 35866  005674  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35867  005678  6AF8               	clrf	tblptru,c
 35868  00567A  0E0E               	movlw	(high __ramtop+-1)
 35869  00567C  64F7               	cpfsgt	tblptrh,c
 35870  00567E  D003               	bra	u7337
 35871  005680  0008               	tblrd		*
 35872  005682  50F5               	movf	tablat,w,c
 35873  005684  D005               	bra	u7330
 35874  005686                     u7337:
 35875  005686  CFF6 FFE9          	movff	tblptrl,fsr0l
 35876  00568A  CFF7 FFEA          	movff	tblptrh,fsr0h
 35877  00568E  50EF               	movf	indf0,w,c
 35878  005690                     u7330:
 35879  005690  0900               	iorlw	0
 35880  005692  B4D8               	btfsc	status,2,c
 35881  005694  D019               	goto	u7350
 35882  005696  C003  FFD9         	movff	strncmp@s2,fsr2l
 35883  00569A  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 35884  00569E  50DF               	movf	indf2,w,c
 35885  0056A0  6E07               	movwf	??_strncmp& (0+255),c
 35886  0056A2  C001  FFF6         	movff	strncmp@s1,tblptrl
 35887  0056A6  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35888  0056AA  6AF8               	clrf	tblptru,c
 35889  0056AC  0E0E               	movlw	(high __ramtop+-1)
 35890  0056AE  64F7               	cpfsgt	tblptrh,c
 35891  0056B0  D003               	bra	u7357
 35892  0056B2  0008               	tblrd		*
 35893  0056B4  50F5               	movf	tablat,w,c
 35894  0056B6  D005               	bra	u7355
 35895  0056B8                     u7357:
 35896  0056B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 35897  0056BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 35898  0056C0  50EF               	movf	indf0,w,c
 35899  0056C2                     u7355:
 35900  0056C2  1807               	xorwf	??_strncmp,w,c
 35901  0056C4  B4D8               	btfsc	status,2,c
 35902  0056C6  D023               	goto	l3539
 35903  0056C8                     u7350:
 35904  0056C8  C003  FFD9         	movff	strncmp@s2,fsr2l
 35905  0056CC  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 35906  0056D0  50DF               	movf	indf2,w,c
 35907  0056D2  6E07               	movwf	??_strncmp& (0+255),c
 35908  0056D4  6A08               	clrf	(??_strncmp+1)& (0+255),c
 35909  0056D6  1E07               	comf	??_strncmp,f,c
 35910  0056D8  1E08               	comf	??_strncmp+1,f,c
 35911  0056DA  4A07               	infsnz	??_strncmp,f,c
 35912  0056DC  2A08               	incf	??_strncmp+1,f,c
 35913  0056DE  C001  FFF6         	movff	strncmp@s1,tblptrl
 35914  0056E2  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35915  0056E6  6AF8               	clrf	tblptru,c
 35916  0056E8  0E0E               	movlw	(high __ramtop+-1)
 35917  0056EA  64F7               	cpfsgt	tblptrh,c
 35918  0056EC  D003               	bra	u7367
 35919  0056EE  0008               	tblrd		*
 35920  0056F0  50F5               	movf	tablat,w,c
 35921  0056F2  D005               	bra	u7360
 35922  0056F4                     u7367:
 35923  0056F4  CFF6 FFE9          	movff	tblptrl,fsr0l
 35924  0056F8  CFF7 FFEA          	movff	tblptrh,fsr0h
 35925  0056FC  50EF               	movf	indf0,w,c
 35926  0056FE                     u7360:
 35927  0056FE  6E09               	movwf	(??_strncmp+2)& (0+255),c
 35928  005700  5009               	movf	??_strncmp+2,w,c
 35929  005702  2407               	addwf	??_strncmp,w,c
 35930  005704  6E01               	movwf	?_strncmp,c
 35931  005706  0E00               	movlw	0
 35932  005708  2008               	addwfc	??_strncmp+1,w,c
 35933  00570A  6E02               	movwf	?_strncmp+1,c
 35934  00570C  0012               	return	
 35935  00570E                     l3539:
 35936  00570E  4A01               	infsnz	strncmp@s1,f,c
 35937  005710  2A02               	incf	strncmp@s1+1,f,c
 35938  005712  4A03               	infsnz	strncmp@s2,f,c
 35939  005714  2A04               	incf	strncmp@s2+1,f,c
 35940  005716                     l3537:
 35941  005716  0605               	decf	strncmp@len,f,c
 35942  005718  A0D8               	btfss	status,0,c
 35943  00571A  0606               	decf	strncmp@len+1,f,c
 35944  00571C  2805               	incf	strncmp@len,w,c
 35945  00571E  E1A8               	bnz	l10607
 35946  005720  2806               	incf	strncmp@len+1,w,c
 35947  005722  A4D8               	btfss	status,2,c
 35948  005724  D7A5               	goto	l3538
 35949  005726  0E00               	movlw	0
 35950  005728  6E02               	movwf	?_strncmp+1,c
 35951  00572A  0E00               	movlw	0
 35952  00572C  6E01               	movwf	?_strncmp,c
 35953  00572E  0012               	return	
 35954  005730                     __end_of_strncmp:
 35955                           	opt stack 0
 35956                           tosu	equ	0xFFF
 35957                           tosh	equ	0xFFE
 35958                           tosl	equ	0xFFD
 35959                           pclath	equ	0xFFA
 35960                           tblptru	equ	0xFF8
 35961                           tblptrh	equ	0xFF7
 35962                           tblptrl	equ	0xFF6
 35963                           tablat	equ	0xFF5
 35964                           prodh	equ	0xFF4
 35965                           prodl	equ	0xFF3
 35966                           intcon	equ	0xFF2
 35967                           intcon2	equ	0xFF1
 35968                           intcon3	equ	0xFF0
 35969                           indf0	equ	0xFEF
 35970                           postinc0	equ	0xFEE
 35971                           fsr0h	equ	0xFEA
 35972                           fsr0l	equ	0xFE9
 35973                           wreg	equ	0xFE8
 35974                           indf1	equ	0xFE7
 35975                           postdec1	equ	0xFE5
 35976                           plusw1	equ	0xFE3
 35977                           fsr1h	equ	0xFE2
 35978                           fsr1l	equ	0xFE1
 35979                           indf2	equ	0xFDF
 35980                           postinc2	equ	0xFDE
 35981                           postdec2	equ	0xFDD
 35982                           plusw2	equ	0xFDB
 35983                           fsr2h	equ	0xFDA
 35984                           fsr2l	equ	0xFD9
 35985                           status	equ	0xFD8
 35986                           
 35987 ;; *************** function __get_available_root_entry *****************
 35988 ;; Defined at:
 35989 ;;		line 94 in file "fat16.c"
 35990 ;; Parameters:    Size  Location     Type
 35991 ;;		None
 35992 ;; Auto vars:     Size  Location     Type
 35993 ;;  file_number     1   54[COMRAM] unsigned char 
 35994 ;; Return value:  Size  Location     Type
 35995 ;;                  1    wreg      unsigned char 
 35996 ;; Registers used:
 35997 ;;		wreg, status,2, status,0, cstack
 35998 ;; Tracked objects:
 35999 ;;		On entry : 0/0
 36000 ;;		On exit  : 0/0
 36001 ;;		Unchanged: 0/0
 36002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36007 ;;Total ram usage:        1 bytes
 36008 ;; Hardware stack levels used:    1
 36009 ;; Hardware stack levels required when called:    6
 36010 ;; This function calls:
 36011 ;;		__root_is_available
 36012 ;; This function is called by:
 36013 ;;		_fat_create_file
 36014 ;; This function uses a non-reentrant model
 36015 ;;
 36016                           
 36017                           	psect	text183
 36018  007EDE                     __ptext183:
 36019                           	opt stack 0
 36020  007EDE                     __get_available_root_entry:
 36021                           	opt stack 20
 36022                           
 36023                           ;fat16.c: 96: uint8_t file_number;;fat16.c: 97: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 36024                           
 36025                           ;incstack = 0
 36026  007EDE  0E00               	movlw	0
 36027  007EE0  6E37               	movwf	__get_available_root_entry@file_number,c
 36028  007EE2                     l11287:
 36029  007EE2  0E3F               	movlw	63
 36030  007EE4  6437               	cpfsgt	__get_available_root_entry@file_number,c
 36031  007EE6  D001               	goto	l1920
 36032  007EE8  D00A               	goto	u8240
 36033  007EEA                     l1920:
 36034                           
 36035                           ;fat16.c: 98: {;fat16.c: 99: if(_root_is_available(file_number))
 36036  007EEA  5037               	movf	__get_available_root_entry@file_number,w,c
 36037  007EEC  EC6D  F034         	call	__root_is_available
 36038  007EF0  0900               	iorlw	0
 36039  007EF2  B4D8               	btfsc	status,2,c
 36040  007EF4  D002               	goto	l1922
 36041                           
 36042                           ;fat16.c: 100: {;fat16.c: 101: return file_number;
 36043  007EF6  5037               	movf	__get_available_root_entry@file_number,w,c
 36044  007EF8  0012               	return	
 36045  007EFA                     l1922:
 36046  007EFA  2A37               	incf	__get_available_root_entry@file_number,f,c
 36047  007EFC  D7F2               	goto	l11287
 36048  007EFE                     u8240:
 36049                           
 36050                           ;fat16.c: 102: };fat16.c: 103: };fat16.c: 104: return 0xFF;
 36051  007EFE  0EFF               	movlw	255
 36052  007F00  0012               	return	
 36053  007F02                     __end_of__get_available_root_entry:
 36054                           	opt stack 0
 36055                           tosu	equ	0xFFF
 36056                           tosh	equ	0xFFE
 36057                           tosl	equ	0xFFD
 36058                           pclath	equ	0xFFA
 36059                           tblptru	equ	0xFF8
 36060                           tblptrh	equ	0xFF7
 36061                           tblptrl	equ	0xFF6
 36062                           tablat	equ	0xFF5
 36063                           prodh	equ	0xFF4
 36064                           prodl	equ	0xFF3
 36065                           intcon	equ	0xFF2
 36066                           intcon2	equ	0xFF1
 36067                           intcon3	equ	0xFF0
 36068                           indf0	equ	0xFEF
 36069                           postinc0	equ	0xFEE
 36070                           fsr0h	equ	0xFEA
 36071                           fsr0l	equ	0xFE9
 36072                           wreg	equ	0xFE8
 36073                           indf1	equ	0xFE7
 36074                           postdec1	equ	0xFE5
 36075                           plusw1	equ	0xFE3
 36076                           fsr1h	equ	0xFE2
 36077                           fsr1l	equ	0xFE1
 36078                           indf2	equ	0xFDF
 36079                           postinc2	equ	0xFDE
 36080                           postdec2	equ	0xFDD
 36081                           plusw2	equ	0xFDB
 36082                           fsr2h	equ	0xFDA
 36083                           fsr2l	equ	0xFD9
 36084                           status	equ	0xFD8
 36085                           
 36086 ;; *************** function __parse_file_append *****************
 36087 ;; Defined at:
 36088 ;;		line 539 in file "api.c"
 36089 ;; Parameters:    Size  Location     Type
 36090 ;;  data            2   74[COMRAM] PTR unsigned char 
 36091 ;;		 -> RAM(3759), 
 36092 ;; Auto vars:     Size  Location     Type
 36093 ;;		None
 36094 ;; Return value:  Size  Location     Type
 36095 ;;                  1    wreg      unsigned char 
 36096 ;; Registers used:
 36097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36098 ;; Tracked objects:
 36099 ;;		On entry : 0/0
 36100 ;;		On exit  : 0/0
 36101 ;;		Unchanged: 0/0
 36102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36105 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36106 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36107 ;;Total ram usage:        3 bytes
 36108 ;; Hardware stack levels used:    1
 36109 ;; Hardware stack levels required when called:    8
 36110 ;; This function calls:
 36111 ;;		_fat_append_to_file
 36112 ;; This function is called by:
 36113 ;;		__parse_command_long
 36114 ;; This function uses a non-reentrant model
 36115 ;;
 36116                           
 36117                           	psect	text184
 36118  006670                     __ptext184:
 36119                           	opt stack 0
 36120  006670                     __parse_file_append:
 36121                           	opt stack 20
 36122                           
 36123                           ;api.c: 542: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 36124                           
 36125                           ;incstack = 0
 36126  006670  C04B  FFD9         	movff	__parse_file_append@data,fsr2l
 36127  006674  C04C  FFDA         	movff	__parse_file_append@data+1,fsr2h
 36128  006678  0E54               	movlw	84
 36129  00667A  18DE               	xorwf	postinc2,w,c
 36130  00667C  A4D8               	btfss	status,2,c
 36131  00667E  D014               	goto	u9780
 36132  006680  EE20 F003          	lfsr	2,3
 36133  006684  504B               	movf	__parse_file_append@data,w,c
 36134  006686  26D9               	addwf	fsr2l,f,c
 36135  006688  504C               	movf	__parse_file_append@data+1,w,c
 36136  00668A  22DA               	addwfc	fsr2h,f,c
 36137  00668C  0EFE               	movlw	254
 36138  00668E  18DE               	xorwf	postinc2,w,c
 36139  006690  A4D8               	btfss	status,2,c
 36140  006692  D00A               	goto	u9780
 36141  006694  EE20 F004          	lfsr	2,4
 36142  006698  504B               	movf	__parse_file_append@data,w,c
 36143  00669A  26D9               	addwf	fsr2l,f,c
 36144  00669C  504C               	movf	__parse_file_append@data+1,w,c
 36145  00669E  22DA               	addwfc	fsr2h,f,c
 36146  0066A0  0E4B               	movlw	75
 36147  0066A2  18DE               	xorwf	postinc2,w,c
 36148  0066A4  B4D8               	btfsc	status,2,c
 36149  0066A6  D002               	goto	l2689
 36150  0066A8                     u9780:
 36151                           
 36152                           ;api.c: 543: {;api.c: 544: return 15;
 36153  0066A8  0E0F               	movlw	15
 36154  0066AA  0012               	return	
 36155  0066AC                     l2689:
 36156                           
 36157                           ;api.c: 545: };api.c: 548: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 36158  0066AC  EE20 F002          	lfsr	2,2
 36159  0066B0  504B               	movf	__parse_file_append@data,w,c
 36160  0066B2  26D9               	addwf	fsr2l,f,c
 36161  0066B4  504C               	movf	__parse_file_append@data+1,w,c
 36162  0066B6  22DA               	addwfc	fsr2h,f,c
 36163  0066B8  50DF               	movf	indf2,w,c
 36164  0066BA  6E4D               	movwf	??__parse_file_append& (0+255),c
 36165  0066BC  504D               	movf	??__parse_file_append,w,c
 36166  0066BE  6E3F               	movwf	fat_append_to_file@number_of_bytes,c
 36167  0066C0  6A40               	clrf	fat_append_to_file@number_of_bytes+1,c
 36168  0066C2  0E05               	movlw	5
 36169  0066C4  244B               	addwf	__parse_file_append@data,w,c
 36170  0066C6  6E41               	movwf	fat_append_to_file@data,c
 36171  0066C8  0E00               	movlw	0
 36172  0066CA  204C               	addwfc	__parse_file_append@data+1,w,c
 36173  0066CC  6E42               	movwf	fat_append_to_file@data+1,c
 36174  0066CE  EE20 F001          	lfsr	2,1
 36175  0066D2  504B               	movf	__parse_file_append@data,w,c
 36176  0066D4  26D9               	addwf	fsr2l,f,c
 36177  0066D6  504C               	movf	__parse_file_append@data+1,w,c
 36178  0066D8  22DA               	addwfc	fsr2h,f,c
 36179  0066DA  50DF               	movf	indf2,w,c
 36180  0066DC  ECDC  F010         	call	_fat_append_to_file
 36181                           
 36182                           ;api.c: 549: return data[2] + 5;
 36183  0066E0  EE20 F002          	lfsr	2,2
 36184  0066E4  504B               	movf	__parse_file_append@data,w,c
 36185  0066E6  26D9               	addwf	fsr2l,f,c
 36186  0066E8  504C               	movf	__parse_file_append@data+1,w,c
 36187  0066EA  22DA               	addwfc	fsr2h,f,c
 36188  0066EC  50DF               	movf	indf2,w,c
 36189  0066EE  0F05               	addlw	5
 36190  0066F0  0012               	return	
 36191  0066F2                     __end_of__parse_file_append:
 36192                           	opt stack 0
 36193                           tosu	equ	0xFFF
 36194                           tosh	equ	0xFFE
 36195                           tosl	equ	0xFFD
 36196                           pclath	equ	0xFFA
 36197                           tblptru	equ	0xFF8
 36198                           tblptrh	equ	0xFF7
 36199                           tblptrl	equ	0xFF6
 36200                           tablat	equ	0xFF5
 36201                           prodh	equ	0xFF4
 36202                           prodl	equ	0xFF3
 36203                           intcon	equ	0xFF2
 36204                           intcon2	equ	0xFF1
 36205                           intcon3	equ	0xFF0
 36206                           indf0	equ	0xFEF
 36207                           postinc0	equ	0xFEE
 36208                           fsr0h	equ	0xFEA
 36209                           fsr0l	equ	0xFE9
 36210                           wreg	equ	0xFE8
 36211                           indf1	equ	0xFE7
 36212                           postdec1	equ	0xFE5
 36213                           plusw1	equ	0xFE3
 36214                           fsr1h	equ	0xFE2
 36215                           fsr1l	equ	0xFE1
 36216                           indf2	equ	0xFDF
 36217                           postinc2	equ	0xFDE
 36218                           postdec2	equ	0xFDD
 36219                           plusw2	equ	0xFDB
 36220                           fsr2h	equ	0xFDA
 36221                           fsr2l	equ	0xFD9
 36222                           status	equ	0xFD8
 36223                           
 36224 ;; *************** function _fat_append_to_file *****************
 36225 ;; Defined at:
 36226 ;;		line 448 in file "fat16.c"
 36227 ;; Parameters:    Size  Location     Type
 36228 ;;  file_number     1    wreg     unsigned char 
 36229 ;;  number_of_by    2   62[COMRAM] unsigned int 
 36230 ;;  data            2   64[COMRAM] PTR unsigned char 
 36231 ;;		 -> RAM(3759), 
 36232 ;; Auto vars:     Size  Location     Type
 36233 ;;  file_number     1   12[BANK0 ] unsigned char 
 36234 ;;  root           32   19[BANK0 ] struct .
 36235 ;;  position        4   15[BANK0 ] unsigned long 
 36236 ;;  file_size       4    2[BANK0 ] unsigned long 
 36237 ;;  length          2   13[BANK0 ] unsigned int 
 36238 ;;  offset          2   10[BANK0 ] unsigned int 
 36239 ;;  fat_cluster     2    8[BANK0 ] unsigned int 
 36240 ;;  new_cluster     2    6[BANK0 ] unsigned int 
 36241 ;;  sector          2    0[BANK0 ] unsigned int 
 36242 ;; Return value:  Size  Location     Type
 36243 ;;                  1    wreg      unsigned char 
 36244 ;; Registers used:
 36245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36246 ;; Tracked objects:
 36247 ;;		On entry : 0/0
 36248 ;;		On exit  : 0/0
 36249 ;;		Unchanged: 0/0
 36250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36252 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36253 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36254 ;;      Totals:        12      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36255 ;;Total ram usage:       63 bytes
 36256 ;; Hardware stack levels used:    1
 36257 ;; Hardware stack levels required when called:    7
 36258 ;; This function calls:
 36259 ;;		__get_empty_cluster
 36260 ;;		__read_fat
 36261 ;;		__root_is_available
 36262 ;;		__sector_from_cluster
 36263 ;;		__update_modified_time
 36264 ;;		__write_fat
 36265 ;;		__write_root
 36266 ;;		_fat_get_file_information
 36267 ;;		_flash_partial_write
 36268 ;; This function is called by:
 36269 ;;		__parse_file_append
 36270 ;; This function uses a non-reentrant model
 36271 ;;
 36272                           
 36273                           	psect	text185
 36274  0021B8                     __ptext185:
 36275                           	opt stack 0
 36276  0021B8                     _fat_append_to_file:
 36277                           	opt stack 20
 36278                           
 36279                           ;incstack = 0
 36280                           ;fat_append_to_file@file_number stored from wreg
 36281  0021B8  0100               	movlb	0	; () banked
 36282  0021BA  6F6C               	movwf	fat_append_to_file@file_number& (0+255),b
 36283                           
 36284                           ;fat16.c: 450: rootEntry_t root;;fat16.c: 451: uint32_t file_size;;fat16.c: 452: uint16_
      +                          t fat_cluster;;fat16.c: 453: uint16_t new_cluster;;fat16.c: 454: uint32_t position;;fat1
      +                          6.c: 455: uint16_t offset;;fat16.c: 456: uint16_t sector;;fat16.c: 457: uint16_t length;
      +                          ;fat16.c: 460: if(file_number>=64)
 36285  0021BC  0E3F               	movlw	63
 36286  0021BE  0100               	movlb	0	; () banked
 36287  0021C0  656C               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 36288  0021C2  D001               	goto	l2000
 36289  0021C4  0012               	return	
 36290  0021C6                     l2000:
 36291                           
 36292                           ; BSR set to: 0
 36293                           ;fat16.c: 464: };fat16.c: 467: if(_root_is_available(file_number))
 36294                           
 36295                           ; BSR set to: 0
 36296  0021C6  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 36297  0021C8  EC6D  F034         	call	__root_is_available
 36298  0021CC  0900               	iorlw	0
 36299  0021CE  A4D8               	btfss	status,2,c
 36300  0021D0  0012               	return	
 36301                           
 36302                           ;fat16.c: 471: };fat16.c: 474: fat_get_file_information(file_number, &root);
 36303                           
 36304                           ;fat16.c: 468: {;fat16.c: 470: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 36305  0021D2  0E73               	movlw	low fat_append_to_file@root
 36306  0021D4  6E37               	movwf	fat_get_file_information@data,c
 36307  0021D6  0E00               	movlw	high fat_append_to_file@root
 36308  0021D8  6E38               	movwf	fat_get_file_information@data+1,c
 36309  0021DA  0100               	movlb	0	; () banked
 36310  0021DC  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 36311  0021DE  ECA8  F034         	call	_fat_get_file_information
 36312                           
 36313                           ;fat16.c: 475: file_size = root.fileSize;
 36314  0021E2  C08F  F062         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 36315  0021E6  C090  F063         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 36316  0021EA  C091  F064         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 36317  0021EE  C092  F065         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 36318                           
 36319                           ;fat16.c: 476: fat_cluster = root.firstCluster;
 36320  0021F2  C08D  F068         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 36321  0021F6  C08E  F069         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 36322                           
 36323                           ;fat16.c: 479: position = 0;
 36324  0021FA  0E00               	movlw	0
 36325  0021FC  0100               	movlb	0	; () banked
 36326  0021FE  6F6F               	movwf	fat_append_to_file@position& (0+255),b
 36327  002200  0E00               	movlw	0
 36328  002202  6F70               	movwf	(fat_append_to_file@position+1)& (0+255),b
 36329  002204  0E00               	movlw	0
 36330  002206  6F71               	movwf	(fat_append_to_file@position+2)& (0+255),b
 36331  002208  0E00               	movlw	0
 36332  00220A  6F72               	movwf	(fat_append_to_file@position+3)& (0+255),b
 36333                           
 36334                           ;fat16.c: 480: while((file_size-position)>512)
 36335  00220C  D013               	goto	l2003
 36336  00220E                     l11999:
 36337                           
 36338                           ; BSR set to: 0
 36339                           ;fat16.c: 481: {;fat16.c: 482: fat_cluster = _read_fat(fat_cluster);
 36340  00220E  C068  F030         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 36341  002212  C069  F031         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 36342  002216  ECD5  F03B         	call	__read_fat	;wreg free
 36343  00221A  C030  F068         	movff	?__read_fat,fat_append_to_file@fat_cluster
 36344  00221E  C031  F069         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 36345                           
 36346                           ;fat16.c: 483: position += 512;
 36347  002222  0E00               	movlw	0
 36348  002224  0100               	movlb	0	; () banked
 36349  002226  276F               	addwf	fat_append_to_file@position& (0+255),f,b
 36350  002228  0E02               	movlw	2
 36351  00222A  2370               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 36352  00222C  0E00               	movlw	0
 36353  00222E  2371               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 36354  002230  0E00               	movlw	0
 36355  002232  2372               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 36356  002234                     l2003:
 36357                           
 36358                           ; BSR set to: 0
 36359                           
 36360                           ; BSR set to: 0
 36361  002234  C06F  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 36362  002238  C070  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 36363  00223C  C071  F045         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 36364  002240  C072  F046         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 36365  002244  1E43               	comf	??_fat_append_to_file,f,c
 36366  002246  1E44               	comf	??_fat_append_to_file+1,f,c
 36367  002248  1E45               	comf	??_fat_append_to_file+2,f,c
 36368  00224A  1E46               	comf	??_fat_append_to_file+3,f,c
 36369  00224C  2A43               	incf	??_fat_append_to_file,f,c
 36370  00224E  0E00               	movlw	0
 36371  002250  2244               	addwfc	??_fat_append_to_file+1,f,c
 36372  002252  2245               	addwfc	??_fat_append_to_file+2,f,c
 36373  002254  2246               	addwfc	??_fat_append_to_file+3,f,c
 36374  002256  5162               	movf	fat_append_to_file@file_size& (0+255),w,b
 36375  002258  2443               	addwf	??_fat_append_to_file,w,c
 36376  00225A  6E47               	movwf	(??_fat_append_to_file+4)& (0+255),c
 36377  00225C  5163               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 36378  00225E  2044               	addwfc	??_fat_append_to_file+1,w,c
 36379  002260  6E48               	movwf	(??_fat_append_to_file+5)& (0+255),c
 36380  002262  5164               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 36381  002264  2045               	addwfc	??_fat_append_to_file+2,w,c
 36382  002266  6E49               	movwf	(??_fat_append_to_file+6)& (0+255),c
 36383  002268  5165               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 36384  00226A  2046               	addwfc	??_fat_append_to_file+3,w,c
 36385  00226C  6E4A               	movwf	(??_fat_append_to_file+7)& (0+255),c
 36386  00226E  504A               	movf	??_fat_append_to_file+7,w,c
 36387  002270  1049               	iorwf	??_fat_append_to_file+6,w,c
 36388  002272  E1CD               	bnz	l11999
 36389  002274  0447               	decf	??_fat_append_to_file+4,w,c
 36390  002276  0E02               	movlw	2
 36391  002278  5848               	subwfb	??_fat_append_to_file+5,w,c
 36392  00227A  B0D8               	btfsc	status,0,c
 36393  00227C  D7C8               	goto	l2004
 36394                           
 36395                           ; BSR set to: 0
 36396                           ;fat16.c: 484: };fat16.c: 487: offset = file_size - position;
 36397                           
 36398                           ; BSR set to: 0
 36399  00227E  C06F  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 36400  002282  C070  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 36401  002286  1E43               	comf	??_fat_append_to_file,f,c
 36402  002288  1E44               	comf	??_fat_append_to_file+1,f,c
 36403  00228A  4A43               	infsnz	??_fat_append_to_file,f,c
 36404  00228C  2A44               	incf	??_fat_append_to_file+1,f,c
 36405  00228E  5162               	movf	fat_append_to_file@file_size& (0+255),w,b
 36406  002290  2443               	addwf	??_fat_append_to_file,w,c
 36407  002292  6F6A               	movwf	fat_append_to_file@offset& (0+255),b
 36408  002294  5163               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 36409  002296  2044               	addwfc	??_fat_append_to_file+1,w,c
 36410  002298  6F6B               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 36411                           
 36412                           ; BSR set to: 0
 36413                           ;fat16.c: 490: position = 0;
 36414  00229A  0E00               	movlw	0
 36415  00229C  6F6F               	movwf	fat_append_to_file@position& (0+255),b
 36416  00229E  0E00               	movlw	0
 36417  0022A0  6F70               	movwf	(fat_append_to_file@position+1)& (0+255),b
 36418  0022A2  0E00               	movlw	0
 36419  0022A4  6F71               	movwf	(fat_append_to_file@position+2)& (0+255),b
 36420  0022A6  0E00               	movlw	0
 36421  0022A8  6F72               	movwf	(fat_append_to_file@position+3)& (0+255),b
 36422                           
 36423                           ;fat16.c: 491: while(position < number_of_bytes)
 36424  0022AA  D06F               	goto	l2006
 36425  0022AC                     
 36426                           ; BSR set to: 0
 36427                           ;fat16.c: 492: {;fat16.c: 494: if(offset==512)
 36428                           
 36429                           ; BSR set to: 0
 36430  0022AC  0E02               	movlw	2
 36431  0022AE  196B               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 36432  0022B0  116A               	iorwf	fat_append_to_file@offset& (0+255),w,b
 36433  0022B2  A4D8               	btfss	status,2,c
 36434  0022B4  D026               	goto	l2008
 36435                           
 36436                           ; BSR set to: 0
 36437                           ;fat16.c: 495: {;fat16.c: 498: new_cluster = _get_empty_cluster(0x0000);
 36438  0022B6  0E00               	movlw	0
 36439  0022B8  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 36440  0022BA  0E00               	movlw	0
 36441  0022BC  6E30               	movwf	__get_empty_cluster@first_cluster,c
 36442  0022BE  ECE2  F034         	call	__get_empty_cluster	;wreg free
 36443  0022C2  C030  F066         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 36444  0022C6  C031  F067         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 36445                           
 36446                           ;fat16.c: 500: _write_fat(fat_cluster, new_cluster);
 36447  0022CA  C068  F029         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 36448  0022CE  C069  F02A         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 36449  0022D2  C066  F02B         	movff	fat_append_to_file@new_cluster,__write_fat@value
 36450  0022D6  C067  F02C         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 36451  0022DA  EC9E  F03C         	call	__write_fat	;wreg free
 36452                           
 36453                           ;fat16.c: 502: _write_fat(new_cluster, 0xFFFF);
 36454  0022DE  C066  F029         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 36455  0022E2  C067  F02A         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 36456  0022E6  0EFF               	movlw	255
 36457  0022E8  6E2C               	movwf	__write_fat@value+1,c
 36458  0022EA  682B               	setf	__write_fat@value,c
 36459  0022EC  EC9E  F03C         	call	__write_fat	;wreg free
 36460                           
 36461                           ;fat16.c: 504: fat_cluster = new_cluster;
 36462  0022F0  C066  F068         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 36463  0022F4  C067  F069         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 36464                           
 36465                           ;fat16.c: 505: offset = 0;
 36466  0022F8  0E00               	movlw	0
 36467  0022FA  0100               	movlb	0	; () banked
 36468  0022FC  6F6B               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 36469  0022FE  0E00               	movlw	0
 36470  002300  6F6A               	movwf	fat_append_to_file@offset& (0+255),b
 36471  002302                     l2008:
 36472                           
 36473                           ; BSR set to: 0
 36474                           ;fat16.c: 506: };fat16.c: 509: sector = _sector_from_cluster(fat_cluster);
 36475                           
 36476                           ; BSR set to: 0
 36477  002302  C068  F001         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 36478  002306  C069  F002         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 36479  00230A  EC8E  F040         	call	__sector_from_cluster	;wreg free
 36480  00230E  C001  F060         	movff	?__sector_from_cluster,fat_append_to_file@sector
 36481  002312  C002  F061         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 36482                           
 36483                           ;fat16.c: 512: length = 512 - offset;
 36484  002316  C06A  F043         	movff	fat_append_to_file@offset,??_fat_append_to_file
 36485  00231A  C06B  F044         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 36486  00231E  1E43               	comf	??_fat_append_to_file,f,c
 36487  002320  1E44               	comf	??_fat_append_to_file+1,f,c
 36488  002322  4A43               	infsnz	??_fat_append_to_file,f,c
 36489  002324  2A44               	incf	??_fat_append_to_file+1,f,c
 36490  002326  0E00               	movlw	0
 36491  002328  2443               	addwf	??_fat_append_to_file,w,c
 36492  00232A  0100               	movlb	0	; () banked
 36493  00232C  6F6D               	movwf	fat_append_to_file@length& (0+255),b
 36494  00232E  0E02               	movlw	2
 36495  002330  2044               	addwfc	??_fat_append_to_file+1,w,c
 36496  002332  6F6E               	movwf	(fat_append_to_file@length+1)& (0+255),b
 36497                           
 36498                           ; BSR set to: 0
 36499                           ;fat16.c: 513: if(length>number_of_bytes)
 36500  002334  516D               	movf	fat_append_to_file@length& (0+255),w,b
 36501  002336  5C3F               	subwf	fat_append_to_file@number_of_bytes,w,c
 36502  002338  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 36503  00233A  5840               	subwfb	fat_append_to_file@number_of_bytes+1,w,c
 36504  00233C  B0D8               	btfsc	status,0,c
 36505  00233E  D004               	goto	l2009
 36506                           
 36507                           ; BSR set to: 0
 36508                           ;fat16.c: 514: {;fat16.c: 515: length = number_of_bytes;
 36509  002340  C03F  F06D         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 36510  002344  C040  F06E         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 36511  002348                     l2009:
 36512                           
 36513                           ; BSR set to: 0
 36514                           ;fat16.c: 516: };fat16.c: 519: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 36515                           
 36516                           ; BSR set to: 0
 36517  002348  C060  F020         	movff	fat_append_to_file@sector,flash_partial_write@page
 36518  00234C  C061  F021         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 36519  002350  C06A  F022         	movff	fat_append_to_file@offset,flash_partial_write@start
 36520  002354  C06B  F023         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 36521  002358  C06D  F024         	movff	fat_append_to_file@length,flash_partial_write@length
 36522  00235C  C06E  F025         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 36523  002360  516F               	movf	fat_append_to_file@position& (0+255),w,b
 36524  002362  2441               	addwf	fat_append_to_file@data,w,c
 36525  002364  6E26               	movwf	flash_partial_write@data,c
 36526  002366  5170               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 36527  002368  2042               	addwfc	fat_append_to_file@data+1,w,c
 36528  00236A  6E27               	movwf	flash_partial_write@data+1,c
 36529  00236C  EC8D  F035         	call	_flash_partial_write	;wreg free
 36530                           
 36531                           ;fat16.c: 522: position += length;
 36532  002370  0100               	movlb	0	; () banked
 36533  002372  516D               	movf	fat_append_to_file@length& (0+255),w,b
 36534  002374  276F               	addwf	fat_append_to_file@position& (0+255),f,b
 36535  002376  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 36536  002378  2370               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 36537  00237A  0E00               	movlw	0
 36538  00237C  2371               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 36539  00237E  0E00               	movlw	0
 36540  002380  2372               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 36541                           
 36542                           ; BSR set to: 0
 36543                           ;fat16.c: 523: offset += length;
 36544  002382  516D               	movf	fat_append_to_file@length& (0+255),w,b
 36545  002384  276A               	addwf	fat_append_to_file@offset& (0+255),f,b
 36546  002386  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 36547  002388  236B               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 36548  00238A                     l2006:
 36549                           
 36550                           ; BSR set to: 0
 36551                           
 36552                           ; BSR set to: 0
 36553  00238A  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 36554  00238C  6E43               	movwf	??_fat_append_to_file& (0+255),c
 36555  00238E  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 36556  002390  6E44               	movwf	(??_fat_append_to_file+1)& (0+255),c
 36557  002392  6A45               	clrf	(??_fat_append_to_file+2)& (0+255),c
 36558  002394  6A46               	clrf	(??_fat_append_to_file+3)& (0+255),c
 36559  002396  5043               	movf	??_fat_append_to_file,w,c
 36560  002398  5D6F               	subwf	fat_append_to_file@position& (0+255),w,b
 36561  00239A  5044               	movf	??_fat_append_to_file+1,w,c
 36562  00239C  5970               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 36563  00239E  5045               	movf	??_fat_append_to_file+2,w,c
 36564  0023A0  5971               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 36565  0023A2  5046               	movf	??_fat_append_to_file+3,w,c
 36566  0023A4  5972               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 36567  0023A6  A0D8               	btfss	status,0,c
 36568  0023A8  D781               	goto	l2007
 36569                           
 36570                           ; BSR set to: 0
 36571                           ;fat16.c: 524: };fat16.c: 528: root.fileSize += number_of_bytes;
 36572                           
 36573                           ; BSR set to: 0
 36574  0023AA  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 36575  0023AC  278F               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 36576  0023AE  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 36577  0023B0  2390               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 36578  0023B2  0E00               	movlw	0
 36579  0023B4  2391               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 36580  0023B6  0E00               	movlw	0
 36581  0023B8  2392               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 36582                           
 36583                           ; BSR set to: 0
 36584                           ;fat16.c: 529: _update_modified_time(&root);
 36585  0023BA  0E73               	movlw	low fat_append_to_file@root
 36586  0023BC  6E05               	movwf	__update_modified_time@root,c
 36587  0023BE  0E00               	movlw	high fat_append_to_file@root
 36588  0023C0  6E06               	movwf	__update_modified_time@root+1,c
 36589  0023C2  EC03  F03E         	call	__update_modified_time	;wreg free
 36590                           
 36591                           ;fat16.c: 530: _write_root(file_number, &root);
 36592  0023C6  0E73               	movlw	low fat_append_to_file@root
 36593  0023C8  6E29               	movwf	__write_root@data,c
 36594  0023CA  0E00               	movlw	high fat_append_to_file@root
 36595  0023CC  6E2A               	movwf	__write_root@data+1,c
 36596  0023CE  0100               	movlb	0	; () banked
 36597  0023D0  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 36598  0023D2  EC0F  F039         	call	__write_root
 36599  0023D6  0012               	return	
 36600  0023D8                     __end_of_fat_append_to_file:
 36601                           	opt stack 0
 36602                           tosu	equ	0xFFF
 36603                           tosh	equ	0xFFE
 36604                           tosl	equ	0xFFD
 36605                           pclath	equ	0xFFA
 36606                           tblptru	equ	0xFF8
 36607                           tblptrh	equ	0xFF7
 36608                           tblptrl	equ	0xFF6
 36609                           tablat	equ	0xFF5
 36610                           prodh	equ	0xFF4
 36611                           prodl	equ	0xFF3
 36612                           intcon	equ	0xFF2
 36613                           intcon2	equ	0xFF1
 36614                           intcon3	equ	0xFF0
 36615                           indf0	equ	0xFEF
 36616                           postinc0	equ	0xFEE
 36617                           fsr0h	equ	0xFEA
 36618                           fsr0l	equ	0xFE9
 36619                           wreg	equ	0xFE8
 36620                           indf1	equ	0xFE7
 36621                           postdec1	equ	0xFE5
 36622                           plusw1	equ	0xFE3
 36623                           fsr1h	equ	0xFE2
 36624                           fsr1l	equ	0xFE1
 36625                           indf2	equ	0xFDF
 36626                           postinc2	equ	0xFDE
 36627                           postdec2	equ	0xFDD
 36628                           plusw2	equ	0xFDB
 36629                           fsr2h	equ	0xFDA
 36630                           fsr2l	equ	0xFD9
 36631                           status	equ	0xFD8
 36632                           
 36633 ;; *************** function _fat_get_file_information *****************
 36634 ;; Defined at:
 36635 ;;		line 1002 in file "fat16.c"
 36636 ;; Parameters:    Size  Location     Type
 36637 ;;  file_number     1    wreg     unsigned char 
 36638 ;;  data            2   54[COMRAM] PTR struct .
 36639 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_read_from_file@
      +root(32), 
 36640 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), RAM(3759), 
 36641 ;; Auto vars:     Size  Location     Type
 36642 ;;  file_number     1   61[COMRAM] unsigned char 
 36643 ;;  offset          2   59[COMRAM] unsigned int 
 36644 ;;  root_sector     2   57[COMRAM] unsigned int 
 36645 ;; Return value:  Size  Location     Type
 36646 ;;                  1    wreg      unsigned char 
 36647 ;; Registers used:
 36648 ;;		wreg, status,2, status,0, cstack
 36649 ;; Tracked objects:
 36650 ;;		On entry : 0/0
 36651 ;;		On exit  : 0/0
 36652 ;;		Unchanged: 0/0
 36653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36655 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36657 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36658 ;;Total ram usage:        8 bytes
 36659 ;; Hardware stack levels used:    1
 36660 ;; Hardware stack levels required when called:    6
 36661 ;; This function calls:
 36662 ;;		__root_is_available
 36663 ;;		_flash_partial_read
 36664 ;; This function is called by:
 36665 ;;		_fat_append_to_file
 36666 ;;		_fat_rename_file
 36667 ;;		_fat_read_from_file
 36668 ;;		__bootloader_verify_file
 36669 ;;		__bootloader_program
 36670 ;;		__fill_buffer_get_file_details
 36671 ;; This function uses a non-reentrant model
 36672 ;;
 36673                           
 36674                           	psect	text186
 36675  006950                     __ptext186:
 36676                           	opt stack 0
 36677  006950                     _fat_get_file_information:
 36678                           	opt stack 22
 36679                           
 36680                           ;incstack = 0
 36681                           ;fat_get_file_information@file_number stored from wreg
 36682  006950  6E3E               	movwf	fat_get_file_information@file_number,c
 36683                           
 36684                           ;fat16.c: 1004: uint16_t root_sector;;fat16.c: 1005: uint16_t offset;;fat16.c: 1007: if(
      +                          file_number>=64)
 36685  006952  0E3F               	movlw	63
 36686  006954  643E               	cpfsgt	fat_get_file_information@file_number,c
 36687  006956  D002               	goto	l2196
 36688                           
 36689                           ;fat16.c: 1008: {;fat16.c: 1010: return 0x01;
 36690  006958  0E01               	movlw	1
 36691  00695A  0012               	return	
 36692  00695C                     l2196:
 36693                           
 36694                           ;fat16.c: 1011: };fat16.c: 1012: if(_root_is_available(file_number))
 36695  00695C  503E               	movf	fat_get_file_information@file_number,w,c
 36696  00695E  EC6D  F034         	call	__root_is_available
 36697  006962  0900               	iorlw	0
 36698  006964  B4D8               	btfsc	status,2,c
 36699  006966  D002               	goto	l2198
 36700                           
 36701                           ;fat16.c: 1013: {;fat16.c: 1015: return 0x02;
 36702  006968  0E02               	movlw	2
 36703  00696A  0012               	return	
 36704  00696C                     l2198:
 36705                           
 36706                           ;fat16.c: 1016: };fat16.c: 1018: root_sector = (file_number >> 4) + 34;
 36707  00696C  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 36708  006970  3A39               	swapf	??_fat_get_file_information,f,c
 36709  006972  0E0F               	movlw	15
 36710  006974  1639               	andwf	??_fat_get_file_information,f,c
 36711  006976  0E22               	movlw	34
 36712  006978  2439               	addwf	??_fat_get_file_information,w,c
 36713  00697A  6E3A               	movwf	fat_get_file_information@root_sector,c
 36714  00697C  6A3B               	clrf	fat_get_file_information@root_sector+1,c
 36715  00697E  0E00               	movlw	0
 36716  006980  223B               	addwfc	fat_get_file_information@root_sector+1,f,c
 36717                           
 36718                           ;fat16.c: 1019: offset = (file_number & 0b1111);
 36719  006982  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 36720  006986  0E0F               	movlw	15
 36721  006988  1639               	andwf	??_fat_get_file_information,f,c
 36722  00698A  5039               	movf	??_fat_get_file_information,w,c
 36723  00698C  6E3C               	movwf	fat_get_file_information@offset,c
 36724  00698E  6A3D               	clrf	fat_get_file_information@offset+1,c
 36725                           
 36726                           ;fat16.c: 1020: offset <<= 5;
 36727  006990  0E05               	movlw	5
 36728  006992                     u8455:
 36729  006992  90D8               	bcf	status,0,c
 36730  006994  363C               	rlcf	fat_get_file_information@offset,f,c
 36731  006996  363D               	rlcf	fat_get_file_information@offset+1,f,c
 36732  006998  2EE8               	decfsz	wreg,f,c
 36733  00699A  D7FB               	goto	u8455
 36734                           
 36735                           ;fat16.c: 1021: flash_partial_read(root_sector, offset, 32, data);
 36736  00699C  C03A  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 36737  0069A0  C03B  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 36738  0069A4  C03C  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 36739  0069A8  C03D  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 36740  0069AC  0E00               	movlw	0
 36741  0069AE  6E2D               	movwf	flash_partial_read@length+1,c
 36742  0069B0  0E20               	movlw	32
 36743  0069B2  6E2C               	movwf	flash_partial_read@length,c
 36744  0069B4  C037  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 36745  0069B8  C038  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 36746  0069BC  EC1C  F03E         	call	_flash_partial_read	;wreg free
 36747                           
 36748                           ;fat16.c: 1024: return 0x00;
 36749  0069C0  0E00               	movlw	0
 36750  0069C2  0012               	return	
 36751  0069C4                     __end_of_fat_get_file_information:
 36752                           	opt stack 0
 36753                           tosu	equ	0xFFF
 36754                           tosh	equ	0xFFE
 36755                           tosl	equ	0xFFD
 36756                           pclath	equ	0xFFA
 36757                           tblptru	equ	0xFF8
 36758                           tblptrh	equ	0xFF7
 36759                           tblptrl	equ	0xFF6
 36760                           tablat	equ	0xFF5
 36761                           prodh	equ	0xFF4
 36762                           prodl	equ	0xFF3
 36763                           intcon	equ	0xFF2
 36764                           intcon2	equ	0xFF1
 36765                           intcon3	equ	0xFF0
 36766                           indf0	equ	0xFEF
 36767                           postinc0	equ	0xFEE
 36768                           fsr0h	equ	0xFEA
 36769                           fsr0l	equ	0xFE9
 36770                           wreg	equ	0xFE8
 36771                           indf1	equ	0xFE7
 36772                           postdec1	equ	0xFE5
 36773                           plusw1	equ	0xFE3
 36774                           fsr1h	equ	0xFE2
 36775                           fsr1l	equ	0xFE1
 36776                           indf2	equ	0xFDF
 36777                           postinc2	equ	0xFDE
 36778                           postdec2	equ	0xFDD
 36779                           plusw2	equ	0xFDB
 36780                           fsr2h	equ	0xFDA
 36781                           fsr2l	equ	0xFD9
 36782                           status	equ	0xFD8
 36783                           
 36784 ;; *************** function __root_is_available *****************
 36785 ;; Defined at:
 36786 ;;		line 59 in file "fat16.c"
 36787 ;; Parameters:    Size  Location     Type
 36788 ;;  file_number     1    wreg     unsigned char 
 36789 ;; Auto vars:     Size  Location     Type
 36790 ;;  file_number     1   52[COMRAM] unsigned char 
 36791 ;;  offset          2   50[COMRAM] unsigned int 
 36792 ;;  root_sector     2   48[COMRAM] unsigned int 
 36793 ;;  first_byte      1   53[COMRAM] unsigned char 
 36794 ;; Return value:  Size  Location     Type
 36795 ;;                  1    wreg      unsigned char 
 36796 ;; Registers used:
 36797 ;;		wreg, status,2, status,0, cstack
 36798 ;; Tracked objects:
 36799 ;;		On entry : 0/0
 36800 ;;		On exit  : 0/0
 36801 ;;		Unchanged: 0/0
 36802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36804 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36805 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36806 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36807 ;;Total ram usage:        7 bytes
 36808 ;; Hardware stack levels used:    1
 36809 ;; Hardware stack levels required when called:    5
 36810 ;; This function calls:
 36811 ;;		_flash_partial_read
 36812 ;; This function is called by:
 36813 ;;		__get_available_root_entry
 36814 ;;		_fat_delete_file
 36815 ;;		_fat_append_to_file
 36816 ;;		_fat_get_file_information
 36817 ;; This function uses a non-reentrant model
 36818 ;;
 36819                           
 36820                           	psect	text187
 36821  0068DA                     __ptext187:
 36822                           	opt stack 0
 36823  0068DA                     __root_is_available:
 36824                           	opt stack 22
 36825                           
 36826                           ;incstack = 0
 36827                           ;__root_is_available@file_number stored from wreg
 36828  0068DA  6E35               	movwf	__root_is_available@file_number,c
 36829                           
 36830                           ;fat16.c: 61: uint16_t root_sector;;fat16.c: 62: uint16_t offset;;fat16.c: 63: uint8_t f
      +                          irst_byte;;fat16.c: 67: if(file_number>=64)
 36831  0068DC  0E3F               	movlw	63
 36832  0068DE  6435               	cpfsgt	__root_is_available@file_number,c
 36833  0068E0  D002               	goto	l1912
 36834                           
 36835                           ;fat16.c: 68: {;fat16.c: 70: return 0;
 36836  0068E2  0E00               	movlw	0
 36837  0068E4  0012               	return	
 36838  0068E6                     l1912:
 36839                           
 36840                           ;fat16.c: 71: };fat16.c: 74: root_sector = (file_number >> 4) + 34;
 36841  0068E6  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 36842  0068EA  3A30               	swapf	??__root_is_available,f,c
 36843  0068EC  0E0F               	movlw	15
 36844  0068EE  1630               	andwf	??__root_is_available,f,c
 36845  0068F0  0E22               	movlw	34
 36846  0068F2  2430               	addwf	??__root_is_available,w,c
 36847  0068F4  6E31               	movwf	__root_is_available@root_sector,c
 36848  0068F6  6A32               	clrf	__root_is_available@root_sector+1,c
 36849  0068F8  0E00               	movlw	0
 36850  0068FA  2232               	addwfc	__root_is_available@root_sector+1,f,c
 36851                           
 36852                           ;fat16.c: 75: offset = (file_number & 0b1111);
 36853  0068FC  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 36854  006900  0E0F               	movlw	15
 36855  006902  1630               	andwf	??__root_is_available,f,c
 36856  006904  5030               	movf	??__root_is_available,w,c
 36857  006906  6E33               	movwf	__root_is_available@offset,c
 36858  006908  6A34               	clrf	__root_is_available@offset+1,c
 36859                           
 36860                           ;fat16.c: 76: offset <<= 5;
 36861  00690A  0E05               	movlw	5
 36862  00690C                     u7305:
 36863  00690C  90D8               	bcf	status,0,c
 36864  00690E  3633               	rlcf	__root_is_available@offset,f,c
 36865  006910  3634               	rlcf	__root_is_available@offset+1,f,c
 36866  006912  2EE8               	decfsz	wreg,f,c
 36867  006914  D7FB               	goto	u7305
 36868                           
 36869                           ;fat16.c: 79: flash_partial_read(root_sector, offset, 1, &first_byte);
 36870  006916  C031  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 36871  00691A  C032  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 36872  00691E  C033  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 36873  006922  C034  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 36874  006926  0E00               	movlw	0
 36875  006928  6E2D               	movwf	flash_partial_read@length+1,c
 36876  00692A  0E01               	movlw	1
 36877  00692C  6E2C               	movwf	flash_partial_read@length,c
 36878  00692E  0E36               	movlw	low __root_is_available@first_byte
 36879  006930  6E2E               	movwf	flash_partial_read@data,c
 36880  006932  0E00               	movlw	high __root_is_available@first_byte
 36881  006934  6E2F               	movwf	flash_partial_read@data+1,c
 36882  006936  EC1C  F03E         	call	_flash_partial_read	;wreg free
 36883                           
 36884                           ;fat16.c: 82: if((first_byte==0x00) || (first_byte==0xE5))
 36885  00693A  5036               	movf	__root_is_available@first_byte,w,c
 36886  00693C  B4D8               	btfsc	status,2,c
 36887  00693E  D004               	goto	u7320
 36888  006940  0EE5               	movlw	229
 36889  006942  1836               	xorwf	__root_is_available@first_byte,w,c
 36890  006944  A4D8               	btfss	status,2,c
 36891  006946  D002               	goto	l1914
 36892  006948                     u7320:
 36893                           
 36894                           ;fat16.c: 83: {;fat16.c: 85: return 1;
 36895  006948  0E01               	movlw	1
 36896                           
 36897                           ;fat16.c: 86: }
 36898  00694A  0012               	return	
 36899  00694C                     l1914:
 36900                           
 36901                           ;fat16.c: 87: else;fat16.c: 88: {;fat16.c: 90: return 0;
 36902  00694C  0E00               	movlw	0
 36903  00694E  0012               	return	
 36904  006950                     __end_of__root_is_available:
 36905                           	opt stack 0
 36906                           tosu	equ	0xFFF
 36907                           tosh	equ	0xFFE
 36908                           tosl	equ	0xFFD
 36909                           pclath	equ	0xFFA
 36910                           tblptru	equ	0xFF8
 36911                           tblptrh	equ	0xFF7
 36912                           tblptrl	equ	0xFF6
 36913                           tablat	equ	0xFF5
 36914                           prodh	equ	0xFF4
 36915                           prodl	equ	0xFF3
 36916                           intcon	equ	0xFF2
 36917                           intcon2	equ	0xFF1
 36918                           intcon3	equ	0xFF0
 36919                           indf0	equ	0xFEF
 36920                           postinc0	equ	0xFEE
 36921                           fsr0h	equ	0xFEA
 36922                           fsr0l	equ	0xFE9
 36923                           wreg	equ	0xFE8
 36924                           indf1	equ	0xFE7
 36925                           postdec1	equ	0xFE5
 36926                           plusw1	equ	0xFE3
 36927                           fsr1h	equ	0xFE2
 36928                           fsr1l	equ	0xFE1
 36929                           indf2	equ	0xFDF
 36930                           postinc2	equ	0xFDE
 36931                           postdec2	equ	0xFDD
 36932                           plusw2	equ	0xFDB
 36933                           fsr2h	equ	0xFDA
 36934                           fsr2l	equ	0xFD9
 36935                           status	equ	0xFD8
 36936                           
 36937 ;; *************** function __write_root *****************
 36938 ;; Defined at:
 36939 ;;		line 182 in file "fat16.c"
 36940 ;; Parameters:    Size  Location     Type
 36941 ;;  slot            1    wreg     unsigned char 
 36942 ;;  data            2   40[COMRAM] PTR struct .
 36943 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 36944 ;; Auto vars:     Size  Location     Type
 36945 ;;  slot            1   47[COMRAM] unsigned char 
 36946 ;;  offset          2   45[COMRAM] unsigned int 
 36947 ;;  root_sector     2   43[COMRAM] unsigned int 
 36948 ;; Return value:  Size  Location     Type
 36949 ;;                  1    wreg      void 
 36950 ;; Registers used:
 36951 ;;		wreg, status,2, status,0, cstack
 36952 ;; Tracked objects:
 36953 ;;		On entry : 0/0
 36954 ;;		On exit  : 0/0
 36955 ;;		Unchanged: 0/0
 36956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36958 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36960 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36961 ;;Total ram usage:        8 bytes
 36962 ;; Hardware stack levels used:    1
 36963 ;; Hardware stack levels required when called:    5
 36964 ;; This function calls:
 36965 ;;		_flash_partial_write
 36966 ;; This function is called by:
 36967 ;;		_fat_create_file
 36968 ;;		_fat_append_to_file
 36969 ;;		_fat_rename_file
 36970 ;; This function uses a non-reentrant model
 36971 ;;
 36972                           
 36973                           	psect	text188
 36974  00721E                     __ptext188:
 36975                           	opt stack 0
 36976  00721E                     __write_root:
 36977                           	opt stack 21
 36978                           
 36979                           ;incstack = 0
 36980                           ;__write_root@slot stored from wreg
 36981  00721E  6E30               	movwf	__write_root@slot,c
 36982                           
 36983                           ;fat16.c: 184: uint16_t root_sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: root_s
      +                          ector = (slot >> 4) + 34;
 36984  007220  C030  F02B         	movff	__write_root@slot,??__write_root
 36985  007224  3A2B               	swapf	??__write_root,f,c
 36986  007226  0E0F               	movlw	15
 36987  007228  162B               	andwf	??__write_root,f,c
 36988  00722A  0E22               	movlw	34
 36989  00722C  242B               	addwf	??__write_root,w,c
 36990  00722E  6E2C               	movwf	__write_root@root_sector,c
 36991  007230  6A2D               	clrf	__write_root@root_sector+1,c
 36992  007232  0E00               	movlw	0
 36993  007234  222D               	addwfc	__write_root@root_sector+1,f,c
 36994                           
 36995                           ;fat16.c: 187: offset = (slot & 0b1111);
 36996  007236  C030  F02B         	movff	__write_root@slot,??__write_root
 36997  00723A  0E0F               	movlw	15
 36998  00723C  162B               	andwf	??__write_root,f,c
 36999  00723E  502B               	movf	??__write_root,w,c
 37000  007240  6E2E               	movwf	__write_root@offset,c
 37001  007242  6A2F               	clrf	__write_root@offset+1,c
 37002                           
 37003                           ;fat16.c: 188: offset <<= 5;
 37004  007244  0E05               	movlw	5
 37005  007246                     u8325:
 37006  007246  90D8               	bcf	status,0,c
 37007  007248  362E               	rlcf	__write_root@offset,f,c
 37008  00724A  362F               	rlcf	__write_root@offset+1,f,c
 37009  00724C  2EE8               	decfsz	wreg,f,c
 37010  00724E  D7FB               	goto	u8325
 37011                           
 37012                           ;fat16.c: 189: flash_partial_write(root_sector, offset, 32, data);
 37013  007250  C02C  F020         	movff	__write_root@root_sector,flash_partial_write@page
 37014  007254  C02D  F021         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 37015  007258  C02E  F022         	movff	__write_root@offset,flash_partial_write@start
 37016  00725C  C02F  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 37017  007260  0E00               	movlw	0
 37018  007262  6E25               	movwf	flash_partial_write@length+1,c
 37019  007264  0E20               	movlw	32
 37020  007266  6E24               	movwf	flash_partial_write@length,c
 37021  007268  C029  F026         	movff	__write_root@data,flash_partial_write@data
 37022  00726C  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 37023  007270  EC8D  F035         	call	_flash_partial_write	;wreg free
 37024  007274  0012               	return		;funcret
 37025  007276                     __end_of__write_root:
 37026                           	opt stack 0
 37027                           tosu	equ	0xFFF
 37028                           tosh	equ	0xFFE
 37029                           tosl	equ	0xFFD
 37030                           pclath	equ	0xFFA
 37031                           tblptru	equ	0xFF8
 37032                           tblptrh	equ	0xFF7
 37033                           tblptrl	equ	0xFF6
 37034                           tablat	equ	0xFF5
 37035                           prodh	equ	0xFF4
 37036                           prodl	equ	0xFF3
 37037                           intcon	equ	0xFF2
 37038                           intcon2	equ	0xFF1
 37039                           intcon3	equ	0xFF0
 37040                           indf0	equ	0xFEF
 37041                           postinc0	equ	0xFEE
 37042                           fsr0h	equ	0xFEA
 37043                           fsr0l	equ	0xFE9
 37044                           wreg	equ	0xFE8
 37045                           indf1	equ	0xFE7
 37046                           postdec1	equ	0xFE5
 37047                           plusw1	equ	0xFE3
 37048                           fsr1h	equ	0xFE2
 37049                           fsr1l	equ	0xFE1
 37050                           indf2	equ	0xFDF
 37051                           postinc2	equ	0xFDE
 37052                           postdec2	equ	0xFDD
 37053                           plusw2	equ	0xFDB
 37054                           fsr2h	equ	0xFDA
 37055                           fsr2l	equ	0xFD9
 37056                           status	equ	0xFD8
 37057                           
 37058 ;; *************** function __write_fat *****************
 37059 ;; Defined at:
 37060 ;;		line 158 in file "fat16.c"
 37061 ;; Parameters:    Size  Location     Type
 37062 ;;  cluster         2   40[COMRAM] unsigned int 
 37063 ;;  value           2   42[COMRAM] unsigned int 
 37064 ;; Auto vars:     Size  Location     Type
 37065 ;;  offset          2   46[COMRAM] unsigned int 
 37066 ;;  fat_sector      2   44[COMRAM] unsigned int 
 37067 ;; Return value:  Size  Location     Type
 37068 ;;                  1    wreg      void 
 37069 ;; Registers used:
 37070 ;;		wreg, status,2, status,0, cstack
 37071 ;; Tracked objects:
 37072 ;;		On entry : 0/0
 37073 ;;		On exit  : 0/0
 37074 ;;		Unchanged: 0/0
 37075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37077 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37079 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37080 ;;Total ram usage:        8 bytes
 37081 ;; Hardware stack levels used:    1
 37082 ;; Hardware stack levels required when called:    5
 37083 ;; This function calls:
 37084 ;;		_flash_partial_write
 37085 ;; This function is called by:
 37086 ;;		_fat_create_file
 37087 ;;		_fat_delete_file
 37088 ;;		_fat_append_to_file
 37089 ;; This function uses a non-reentrant model
 37090 ;;
 37091                           
 37092                           	psect	text189
 37093  00793C                     __ptext189:
 37094                           	opt stack 0
 37095  00793C                     __write_fat:
 37096                           	opt stack 21
 37097                           
 37098                           ;fat16.c: 160: uint16_t fat_sector;;fat16.c: 161: uint16_t offset;;fat16.c: 162: fat_sec
      +                          tor = cluster>>8;
 37099                           
 37100                           ;incstack = 0
 37101  00793C  502A               	movf	__write_fat@cluster+1,w,c
 37102  00793E  6E2D               	movwf	__write_fat@fat_sector,c
 37103  007940  6A2E               	clrf	__write_fat@fat_sector+1,c
 37104                           
 37105                           ;fat16.c: 163: fat_sector += 2;
 37106  007942  0E02               	movlw	2
 37107  007944  262D               	addwf	__write_fat@fat_sector,f,c
 37108  007946  0E00               	movlw	0
 37109  007948  222E               	addwfc	__write_fat@fat_sector+1,f,c
 37110                           
 37111                           ;fat16.c: 164: offset = cluster & 0xFF;
 37112  00794A  5029               	movf	__write_fat@cluster,w,c
 37113  00794C  6E2F               	movwf	__write_fat@offset,c
 37114  00794E  6A30               	clrf	__write_fat@offset+1,c
 37115                           
 37116                           ;fat16.c: 165: offset <<= 1;
 37117  007950  90D8               	bcf	status,0,c
 37118  007952  362F               	rlcf	__write_fat@offset,f,c
 37119  007954  3630               	rlcf	__write_fat@offset+1,f,c
 37120                           
 37121                           ;fat16.c: 166: flash_partial_write(fat_sector, offset, 2, &value);
 37122  007956  C02D  F020         	movff	__write_fat@fat_sector,flash_partial_write@page
 37123  00795A  C02E  F021         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 37124  00795E  C02F  F022         	movff	__write_fat@offset,flash_partial_write@start
 37125  007962  C030  F023         	movff	__write_fat@offset+1,flash_partial_write@start+1
 37126  007966  0E00               	movlw	0
 37127  007968  6E25               	movwf	flash_partial_write@length+1,c
 37128  00796A  0E02               	movlw	2
 37129  00796C  6E24               	movwf	flash_partial_write@length,c
 37130  00796E  0E2B               	movlw	low __write_fat@value
 37131  007970  6E26               	movwf	flash_partial_write@data,c
 37132  007972  0E00               	movlw	high __write_fat@value
 37133  007974  6E27               	movwf	flash_partial_write@data+1,c
 37134  007976  EC8D  F035         	call	_flash_partial_write	;wreg free
 37135  00797A  0012               	return		;funcret
 37136  00797C                     __end_of__write_fat:
 37137                           	opt stack 0
 37138                           tosu	equ	0xFFF
 37139                           tosh	equ	0xFFE
 37140                           tosl	equ	0xFFD
 37141                           pclath	equ	0xFFA
 37142                           tblptru	equ	0xFF8
 37143                           tblptrh	equ	0xFF7
 37144                           tblptrl	equ	0xFF6
 37145                           tablat	equ	0xFF5
 37146                           prodh	equ	0xFF4
 37147                           prodl	equ	0xFF3
 37148                           intcon	equ	0xFF2
 37149                           intcon2	equ	0xFF1
 37150                           intcon3	equ	0xFF0
 37151                           indf0	equ	0xFEF
 37152                           postinc0	equ	0xFEE
 37153                           fsr0h	equ	0xFEA
 37154                           fsr0l	equ	0xFE9
 37155                           wreg	equ	0xFE8
 37156                           indf1	equ	0xFE7
 37157                           postdec1	equ	0xFE5
 37158                           plusw1	equ	0xFE3
 37159                           fsr1h	equ	0xFE2
 37160                           fsr1l	equ	0xFE1
 37161                           indf2	equ	0xFDF
 37162                           postinc2	equ	0xFDE
 37163                           postdec2	equ	0xFDD
 37164                           plusw2	equ	0xFDB
 37165                           fsr2h	equ	0xFDA
 37166                           fsr2l	equ	0xFD9
 37167                           status	equ	0xFD8
 37168                           
 37169 ;; *************** function _flash_partial_write *****************
 37170 ;; Defined at:
 37171 ;;		line 471 in file "flash.c"
 37172 ;; Parameters:    Size  Location     Type
 37173 ;;  page            2   31[COMRAM] unsigned int 
 37174 ;;  start           2   33[COMRAM] unsigned int 
 37175 ;;  length          2   35[COMRAM] unsigned int 
 37176 ;;  data            2   37[COMRAM] PTR unsigned char 
 37177 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file
      +_size(4), 
 37178 ;;		 -> _delete_root@deleted_value(1), _write_fat@value(2), RAM(3759), 
 37179 ;; Auto vars:     Size  Location     Type
 37180 ;;  match           1   39[COMRAM] enum E6894
 37181 ;; Return value:  Size  Location     Type
 37182 ;;                  1    wreg      void 
 37183 ;; Registers used:
 37184 ;;		wreg, status,2, status,0, cstack
 37185 ;; Tracked objects:
 37186 ;;		On entry : 0/0
 37187 ;;		On exit  : 0/0
 37188 ;;		Unchanged: 0/0
 37189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37190 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37193 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37194 ;;Total ram usage:        9 bytes
 37195 ;; Hardware stack levels used:    1
 37196 ;; Hardware stack levels required when called:    4
 37197 ;; This function calls:
 37198 ;;		__flash_compare_page_to_buffer
 37199 ;;		__flash_copy_page_to_buffer
 37200 ;;		__flash_write_page_from_buffer
 37201 ;;		__flash_write_to_buffer
 37202 ;;		_flash_is_busy
 37203 ;;		_spi_set_configuration
 37204 ;; This function is called by:
 37205 ;;		__write_fat
 37206 ;;		__write_root
 37207 ;;		__delete_root
 37208 ;;		_fat_append_to_file
 37209 ;;		__write_file_size
 37210 ;; This function uses a non-reentrant model
 37211 ;;
 37212                           
 37213                           	psect	text190
 37214  006B1A                     __ptext190:
 37215                           	opt stack 0
 37216  006B1A                     _flash_partial_write:
 37217                           	opt stack 21
 37218                           
 37219                           ;flash.c: 473: flashMatchResult_t match;;flash.c: 476: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 37220                           
 37221                           ;incstack = 0
 37222  006B1A  0E00               	movlw	0
 37223  006B1C  EC7A  F024         	call	_spi_set_configuration
 37224  006B20  EC2F  F040         	call	_flash_is_busy	;wreg free
 37225  006B24  0900               	iorlw	0
 37226  006B26  A4D8               	btfss	status,2,c
 37227  006B28  D7FB               	goto	l1842
 37228                           
 37229                           ;flash.c: 482: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 37230  006B2A  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 37231  006B2E  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 37232  006B32  0E00               	movlw	0
 37233  006B34  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 37234  006B36  EC67  F039         	call	__flash_copy_page_to_buffer	;wreg free
 37235                           
 37236                           ;flash.c: 485: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 37237  006B3A  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 37238  006B3E  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 37239  006B42  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 37240  006B46  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 37241  006B4A  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 37242  006B4E  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 37243  006B52  0E00               	movlw	0
 37244  006B54  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 37245  006B56  EC65  F03B         	call	__flash_write_to_buffer	;wreg free
 37246                           
 37247                           ;flash.c: 488: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 37248  006B5A  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 37249  006B5E  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 37250  006B62  0E00               	movlw	0
 37251  006B64  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 37252  006B66  ECF5  F033         	call	__flash_compare_page_to_buffer	;wreg free
 37253  006B6A  6E28               	movwf	flash_partial_write@match,c
 37254                           
 37255                           ;flash.c: 491: if(match==DATA_DOES_NOT_MATCH)
 37256  006B6C  0428               	decf	flash_partial_write@match,w,c
 37257  006B6E  A4D8               	btfss	status,2,c
 37258  006B70  D008               	goto	l1844
 37259                           
 37260                           ;flash.c: 492: {;flash.c: 493: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 37261  006B72  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 37262  006B76  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 37263  006B7A  0E00               	movlw	0
 37264  006B7C  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 37265  006B7E  EC3B  F039         	call	__flash_write_page_from_buffer	;wreg free
 37266  006B82                     l1844:
 37267                           
 37268                           ;flash.c: 494: };flash.c: 497: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 37269  006B82  0E01               	movlw	1
 37270  006B84  EC7A  F024         	call	_spi_set_configuration
 37271  006B88  0012               	return		;funcret
 37272  006B8A                     __end_of_flash_partial_write:
 37273                           	opt stack 0
 37274                           tosu	equ	0xFFF
 37275                           tosh	equ	0xFFE
 37276                           tosl	equ	0xFFD
 37277                           pclath	equ	0xFFA
 37278                           tblptru	equ	0xFF8
 37279                           tblptrh	equ	0xFF7
 37280                           tblptrl	equ	0xFF6
 37281                           tablat	equ	0xFF5
 37282                           prodh	equ	0xFF4
 37283                           prodl	equ	0xFF3
 37284                           intcon	equ	0xFF2
 37285                           intcon2	equ	0xFF1
 37286                           intcon3	equ	0xFF0
 37287                           indf0	equ	0xFEF
 37288                           postinc0	equ	0xFEE
 37289                           fsr0h	equ	0xFEA
 37290                           fsr0l	equ	0xFE9
 37291                           wreg	equ	0xFE8
 37292                           indf1	equ	0xFE7
 37293                           postdec1	equ	0xFE5
 37294                           plusw1	equ	0xFE3
 37295                           fsr1h	equ	0xFE2
 37296                           fsr1l	equ	0xFE1
 37297                           indf2	equ	0xFDF
 37298                           postinc2	equ	0xFDE
 37299                           postdec2	equ	0xFDD
 37300                           plusw2	equ	0xFDB
 37301                           fsr2h	equ	0xFDA
 37302                           fsr2l	equ	0xFD9
 37303                           status	equ	0xFD8
 37304                           
 37305 ;; *************** function _flash_is_busy *****************
 37306 ;; Defined at:
 37307 ;;		line 354 in file "flash.c"
 37308 ;; Parameters:    Size  Location     Type
 37309 ;;		None
 37310 ;; Auto vars:     Size  Location     Type
 37311 ;;  result          1   19[COMRAM] unsigned char 
 37312 ;; Return value:  Size  Location     Type
 37313 ;;                  1    wreg      unsigned char 
 37314 ;; Registers used:
 37315 ;;		wreg, status,2, status,0, cstack
 37316 ;; Tracked objects:
 37317 ;;		On entry : 0/0
 37318 ;;		On exit  : 0/0
 37319 ;;		Unchanged: 0/0
 37320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37325 ;;Total ram usage:        1 bytes
 37326 ;; Hardware stack levels used:    1
 37327 ;; Hardware stack levels required when called:    3
 37328 ;; This function calls:
 37329 ;;		__flash_is_busy
 37330 ;;		_spi_set_configuration
 37331 ;; This function is called by:
 37332 ;;		_flash_partial_write
 37333 ;;		_api_prepare
 37334 ;;		__fill_buffer_get_status
 37335 ;; This function uses a non-reentrant model
 37336 ;;
 37337                           
 37338                           	psect	text191
 37339  00805E                     __ptext191:
 37340                           	opt stack 0
 37341  00805E                     _flash_is_busy:
 37342                           	opt stack 26
 37343                           
 37344                           ;flash.c: 356: uint8_t result;;flash.c: 359: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 37345                           
 37346                           ;incstack = 0
 37347  00805E  0E00               	movlw	0
 37348  008060  EC7A  F024         	call	_spi_set_configuration
 37349                           
 37350                           ;flash.c: 362: result = _flash_is_busy();
 37351  008064  ECB4  F03F         	call	__flash_is_busy	;wreg free
 37352  008068  6E14               	movwf	flash_is_busy@result,c
 37353                           
 37354                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 37355  00806A  0E01               	movlw	1
 37356  00806C  EC7A  F024         	call	_spi_set_configuration
 37357                           
 37358                           ;flash.c: 368: return result;
 37359  008070  5014               	movf	flash_is_busy@result,w,c
 37360  008072  0012               	return	
 37361  008074                     __end_of_flash_is_busy:
 37362                           	opt stack 0
 37363                           tosu	equ	0xFFF
 37364                           tosh	equ	0xFFE
 37365                           tosl	equ	0xFFD
 37366                           pclath	equ	0xFFA
 37367                           tblptru	equ	0xFF8
 37368                           tblptrh	equ	0xFF7
 37369                           tblptrl	equ	0xFF6
 37370                           tablat	equ	0xFF5
 37371                           prodh	equ	0xFF4
 37372                           prodl	equ	0xFF3
 37373                           intcon	equ	0xFF2
 37374                           intcon2	equ	0xFF1
 37375                           intcon3	equ	0xFF0
 37376                           indf0	equ	0xFEF
 37377                           postinc0	equ	0xFEE
 37378                           fsr0h	equ	0xFEA
 37379                           fsr0l	equ	0xFE9
 37380                           wreg	equ	0xFE8
 37381                           indf1	equ	0xFE7
 37382                           postdec1	equ	0xFE5
 37383                           plusw1	equ	0xFE3
 37384                           fsr1h	equ	0xFE2
 37385                           fsr1l	equ	0xFE1
 37386                           indf2	equ	0xFDF
 37387                           postinc2	equ	0xFDE
 37388                           postdec2	equ	0xFDD
 37389                           plusw2	equ	0xFDB
 37390                           fsr2h	equ	0xFDA
 37391                           fsr2l	equ	0xFD9
 37392                           status	equ	0xFD8
 37393                           
 37394 ;; *************** function __flash_write_to_buffer *****************
 37395 ;; Defined at:
 37396 ;;		line 232 in file "flash.c"
 37397 ;; Parameters:    Size  Location     Type
 37398 ;;  start           2   19[COMRAM] unsigned int 
 37399 ;;  data            2   21[COMRAM] PTR unsigned char 
 37400 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 37401 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 37402 ;;		 -> RAM(3759), 
 37403 ;;  data_length     2   23[COMRAM] unsigned int 
 37404 ;;  buffer          1   25[COMRAM] enum E6890
 37405 ;; Auto vars:     Size  Location     Type
 37406 ;;  command         4   26[COMRAM] unsigned char [4]
 37407 ;; Return value:  Size  Location     Type
 37408 ;;                  1    wreg      void 
 37409 ;; Registers used:
 37410 ;;		wreg, status,2, status,0, cstack
 37411 ;; Tracked objects:
 37412 ;;		On entry : 0/0
 37413 ;;		On exit  : 0/0
 37414 ;;		Unchanged: 0/0
 37415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37416 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37417 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37419 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37420 ;;Total ram usage:       11 bytes
 37421 ;; Hardware stack levels used:    1
 37422 ;; Hardware stack levels required when called:    3
 37423 ;; This function calls:
 37424 ;;		__flash_is_busy
 37425 ;;		_spi_tx_tx
 37426 ;; This function is called by:
 37427 ;;		_flash_page_write
 37428 ;;		_flash_partial_write
 37429 ;; This function uses a non-reentrant model
 37430 ;;
 37431                           
 37432                           	psect	text192
 37433  0076CA                     __ptext192:
 37434                           	opt stack 0
 37435  0076CA                     __flash_write_to_buffer:
 37436                           	opt stack 23
 37437                           
 37438                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 37439                           
 37440                           ;incstack = 0
 37441  0076CA  ECB4  F03F         	call	__flash_is_busy	;wreg free
 37442  0076CE  0900               	iorlw	0
 37443  0076D0  A4D8               	btfss	status,2,c
 37444  0076D2  D7FB               	goto	__flash_write_to_buffer
 37445                           
 37446                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 37447  0076D4  501A               	movf	__flash_write_to_buffer@buffer,w,c
 37448  0076D6  A4D8               	btfss	status,2,c
 37449  0076D8  D002               	goto	l1783
 37450                           
 37451                           ;flash.c: 241: command[0] = 0x84;
 37452  0076DA  0E84               	movlw	132
 37453  0076DC  6E1B               	movwf	__flash_write_to_buffer@command,c
 37454  0076DE                     l1783:
 37455                           
 37456                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 37457  0076DE  041A               	decf	__flash_write_to_buffer@buffer,w,c
 37458  0076E0  A4D8               	btfss	status,2,c
 37459  0076E2  D002               	goto	l1784
 37460                           
 37461                           ;flash.c: 243: command[0] = 0x87;
 37462  0076E4  0E87               	movlw	135
 37463  0076E6  6E1B               	movwf	__flash_write_to_buffer@command,c
 37464  0076E8                     l1784:
 37465                           
 37466                           ;flash.c: 245: command[1] = 0x00;
 37467  0076E8  0E00               	movlw	0
 37468  0076EA  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 37469                           
 37470                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 37471  0076EC  5015               	movf	__flash_write_to_buffer@start+1,w,c
 37472  0076EE  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 37473                           
 37474                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 37475  0076F0  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 37476                           
 37477                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 37478  0076F4  0E1B               	movlw	low __flash_write_to_buffer@command
 37479  0076F6  6E01               	movwf	spi_tx_tx@command,c
 37480  0076F8  0E00               	movlw	high __flash_write_to_buffer@command
 37481  0076FA  6E02               	movwf	spi_tx_tx@command+1,c
 37482  0076FC  0E00               	movlw	0
 37483  0076FE  6E04               	movwf	spi_tx_tx@command_length+1,c
 37484  007700  0E04               	movlw	4
 37485  007702  6E03               	movwf	spi_tx_tx@command_length,c
 37486  007704  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 37487  007708  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 37488  00770C  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 37489  007710  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 37490  007714  EC6E  F032         	call	_spi_tx_tx	;wreg free
 37491  007718  0012               	return		;funcret
 37492  00771A                     __end_of__flash_write_to_buffer:
 37493                           	opt stack 0
 37494                           tosu	equ	0xFFF
 37495                           tosh	equ	0xFFE
 37496                           tosl	equ	0xFFD
 37497                           pclath	equ	0xFFA
 37498                           tblptru	equ	0xFF8
 37499                           tblptrh	equ	0xFF7
 37500                           tblptrl	equ	0xFF6
 37501                           tablat	equ	0xFF5
 37502                           prodh	equ	0xFF4
 37503                           prodl	equ	0xFF3
 37504                           intcon	equ	0xFF2
 37505                           intcon2	equ	0xFF1
 37506                           intcon3	equ	0xFF0
 37507                           indf0	equ	0xFEF
 37508                           postinc0	equ	0xFEE
 37509                           fsr0h	equ	0xFEA
 37510                           fsr0l	equ	0xFE9
 37511                           wreg	equ	0xFE8
 37512                           indf1	equ	0xFE7
 37513                           postdec1	equ	0xFE5
 37514                           plusw1	equ	0xFE3
 37515                           fsr1h	equ	0xFE2
 37516                           fsr1l	equ	0xFE1
 37517                           indf2	equ	0xFDF
 37518                           postinc2	equ	0xFDE
 37519                           postdec2	equ	0xFDD
 37520                           plusw2	equ	0xFDB
 37521                           fsr2h	equ	0xFDA
 37522                           fsr2l	equ	0xFD9
 37523                           status	equ	0xFD8
 37524                           
 37525 ;; *************** function _spi_tx_tx *****************
 37526 ;; Defined at:
 37527 ;;		line 379 in file "spi.c"
 37528 ;; Parameters:    Size  Location     Type
 37529 ;;  command         2    0[COMRAM] PTR unsigned char 
 37530 ;;		 -> _flash_write_to_buffer@command(4), 
 37531 ;;  command_leng    2    2[COMRAM] unsigned int 
 37532 ;;  data            2    4[COMRAM] PTR unsigned char 
 37533 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 37534 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 37535 ;;		 -> RAM(3759), 
 37536 ;;  data_length     2    6[COMRAM] unsigned int 
 37537 ;; Auto vars:     Size  Location     Type
 37538 ;;		None
 37539 ;; Return value:  Size  Location     Type
 37540 ;;                  1    wreg      void 
 37541 ;; Registers used:
 37542 ;;		wreg, status,2, status,0
 37543 ;; Tracked objects:
 37544 ;;		On entry : 0/0
 37545 ;;		On exit  : 0/0
 37546 ;;		Unchanged: 0/0
 37547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37548 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37550 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37551 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37552 ;;Total ram usage:       12 bytes
 37553 ;; Hardware stack levels used:    1
 37554 ;; This function calls:
 37555 ;;		Nothing
 37556 ;; This function is called by:
 37557 ;;		__flash_write_to_buffer
 37558 ;; This function uses a non-reentrant model
 37559 ;;
 37560                           
 37561                           	psect	text193
 37562  0064DC                     __ptext193:
 37563                           	opt stack 0
 37564  0064DC                     _spi_tx_tx:
 37565                           	opt stack 25
 37566                           
 37567                           ;spi.c: 382: DMACON1bits.SSCON1 = 0;
 37568                           
 37569                           ;incstack = 0
 37570  0064DC  9E88               	bcf	3976,7,c	;volatile
 37571                           
 37572                           ;spi.c: 383: DMACON1bits.SSCON0 = 0;
 37573  0064DE  9C88               	bcf	3976,6,c	;volatile
 37574                           
 37575                           ;spi.c: 385: DMACON1bits.TXINC = 1;
 37576  0064E0  8A88               	bsf	3976,5,c	;volatile
 37577                           
 37578                           ;spi.c: 387: DMACON1bits.RXINC = 0;
 37579  0064E2  9888               	bcf	3976,4,c	;volatile
 37580                           
 37581                           ;spi.c: 389: DMACON1bits.DUPLEX1 = 0;
 37582  0064E4  9688               	bcf	3976,3,c	;volatile
 37583                           
 37584                           ;spi.c: 390: DMACON1bits.DUPLEX0 = 1;
 37585  0064E6  8488               	bsf	3976,2,c	;volatile
 37586                           
 37587                           ;spi.c: 392: DMACON1bits.DLYINTEN = 0;
 37588  0064E8  9288               	bcf	3976,1,c	;volatile
 37589                           
 37590                           ;spi.c: 394: DMACON2bits.DLYCYC = 0b0000;
 37591  0064EA  9886               	bcf	3974,4,c	;volatile
 37592  0064EC  9A86               	bcf	3974,5,c	;volatile
 37593  0064EE  9C86               	bcf	3974,6,c	;volatile
 37594  0064F0  9E86               	bcf	3974,7,c	;volatile
 37595                           
 37596                           ;spi.c: 396: DMACON2bits.INTLVL = 0b0000;
 37597  0064F2  9086               	bcf	3974,0,c	;volatile
 37598  0064F4  9286               	bcf	3974,1,c	;volatile
 37599  0064F6  9486               	bcf	3974,2,c	;volatile
 37600  0064F8  9686               	bcf	3974,3,c	;volatile
 37601                           
 37602                           ;spi.c: 399: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37603  0064FA  5002               	movf	spi_tx_tx@command+1,w,c
 37604  0064FC  6E6A               	movwf	3946,c	;volatile
 37605                           
 37606                           ;spi.c: 400: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37607  0064FE  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 37608                           
 37609                           ;spi.c: 403: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37610  006502  0EFF               	movlw	255
 37611  006504  6E09               	movwf	??_spi_tx_tx& (0+255),c
 37612  006506  0EFF               	movlw	255
 37613  006508  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 37614  00650A  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 37615  00650E  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 37616  006512  5009               	movf	??_spi_tx_tx,w,c
 37617  006514  260B               	addwf	??_spi_tx_tx+2,f,c
 37618  006516  500A               	movf	??_spi_tx_tx+1,w,c
 37619  006518  220C               	addwfc	??_spi_tx_tx+3,f,c
 37620  00651A  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37621  00651E  6A0C               	clrf	??_spi_tx_tx+3,c
 37622  006520  500B               	movf	??_spi_tx_tx+2,w,c
 37623  006522  6E66               	movwf	3942,c	;volatile
 37624                           
 37625                           ;spi.c: 404: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37626  006524  0403               	decf	spi_tx_tx@command_length,w,c
 37627  006526  6E67               	movwf	3943,c	;volatile
 37628                           
 37629                           ;spi.c: 407: LATDbits.LD7 = 0;
 37630  006528  9E8C               	bcf	3980,7,c	;volatile
 37631                           
 37632                           ;spi.c: 410: DMACON1bits.DMAEN = 1;
 37633  00652A  8088               	bsf	3976,0,c	;volatile
 37634  00652C  B088               	btfsc	3976,0,c	;volatile
 37635  00652E  D7FE               	goto	l2826
 37636                           
 37637                           ;spi.c: 414: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37638  006530  5006               	movf	spi_tx_tx@data+1,w,c
 37639  006532  6E6A               	movwf	3946,c	;volatile
 37640                           
 37641                           ;spi.c: 415: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37642  006534  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 37643                           
 37644                           ;spi.c: 418: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37645  006538  0EFF               	movlw	255
 37646  00653A  6E09               	movwf	??_spi_tx_tx& (0+255),c
 37647  00653C  0EFF               	movlw	255
 37648  00653E  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 37649  006540  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 37650  006544  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 37651  006548  5009               	movf	??_spi_tx_tx,w,c
 37652  00654A  260B               	addwf	??_spi_tx_tx+2,f,c
 37653  00654C  500A               	movf	??_spi_tx_tx+1,w,c
 37654  00654E  220C               	addwfc	??_spi_tx_tx+3,f,c
 37655  006550  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37656  006554  6A0C               	clrf	??_spi_tx_tx+3,c
 37657  006556  500B               	movf	??_spi_tx_tx+2,w,c
 37658  006558  6E66               	movwf	3942,c	;volatile
 37659                           
 37660                           ;spi.c: 419: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37661  00655A  0407               	decf	spi_tx_tx@data_length,w,c
 37662  00655C  6E67               	movwf	3943,c	;volatile
 37663                           
 37664                           ;spi.c: 422: DMACON1bits.DMAEN = 1;
 37665  00655E  8088               	bsf	3976,0,c	;volatile
 37666  006560  B088               	btfsc	3976,0,c	;volatile
 37667  006562  D7FE               	goto	l2829
 37668                           
 37669                           ;spi.c: 426: LATDbits.LD7 = 1;
 37670  006564  8E8C               	bsf	3980,7,c	;volatile
 37671  006566  0012               	return		;funcret
 37672  006568                     __end_of_spi_tx_tx:
 37673                           	opt stack 0
 37674                           tosu	equ	0xFFF
 37675                           tosh	equ	0xFFE
 37676                           tosl	equ	0xFFD
 37677                           pclath	equ	0xFFA
 37678                           tblptru	equ	0xFF8
 37679                           tblptrh	equ	0xFF7
 37680                           tblptrl	equ	0xFF6
 37681                           tablat	equ	0xFF5
 37682                           prodh	equ	0xFF4
 37683                           prodl	equ	0xFF3
 37684                           intcon	equ	0xFF2
 37685                           intcon2	equ	0xFF1
 37686                           intcon3	equ	0xFF0
 37687                           indf0	equ	0xFEF
 37688                           postinc0	equ	0xFEE
 37689                           fsr0h	equ	0xFEA
 37690                           fsr0l	equ	0xFE9
 37691                           wreg	equ	0xFE8
 37692                           indf1	equ	0xFE7
 37693                           postdec1	equ	0xFE5
 37694                           plusw1	equ	0xFE3
 37695                           fsr1h	equ	0xFE2
 37696                           fsr1l	equ	0xFE1
 37697                           indf2	equ	0xFDF
 37698                           postinc2	equ	0xFDE
 37699                           postdec2	equ	0xFDD
 37700                           plusw2	equ	0xFDB
 37701                           fsr2h	equ	0xFDA
 37702                           fsr2l	equ	0xFD9
 37703                           status	equ	0xFD8
 37704                           
 37705 ;; *************** function __flash_write_page_from_buffer *****************
 37706 ;; Defined at:
 37707 ;;		line 254 in file "flash.c"
 37708 ;; Parameters:    Size  Location     Type
 37709 ;;  page            2   19[COMRAM] unsigned int 
 37710 ;;  buffer          1   21[COMRAM] enum E6890
 37711 ;; Auto vars:     Size  Location     Type
 37712 ;;  command         4   25[COMRAM] unsigned char [4]
 37713 ;; Return value:  Size  Location     Type
 37714 ;;                  1    wreg      void 
 37715 ;; Registers used:
 37716 ;;		wreg, status,2, status,0, cstack
 37717 ;; Tracked objects:
 37718 ;;		On entry : 0/0
 37719 ;;		On exit  : 0/0
 37720 ;;		Unchanged: 0/0
 37721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37722 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37723 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37724 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37725 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37726 ;;Total ram usage:       10 bytes
 37727 ;; Hardware stack levels used:    1
 37728 ;; Hardware stack levels required when called:    3
 37729 ;; This function calls:
 37730 ;;		__flash_is_busy
 37731 ;;		_spi_tx
 37732 ;; This function is called by:
 37733 ;;		_flash_page_write
 37734 ;;		_flash_partial_write
 37735 ;; This function uses a non-reentrant model
 37736 ;;
 37737                           
 37738                           	psect	text194
 37739  007276                     __ptext194:
 37740                           	opt stack 0
 37741  007276                     __flash_write_page_from_buffer:
 37742                           	opt stack 23
 37743                           
 37744                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 37745                           
 37746                           ;incstack = 0
 37747  007276  ECB4  F03F         	call	__flash_is_busy	;wreg free
 37748  00727A  0900               	iorlw	0
 37749  00727C  A4D8               	btfss	status,2,c
 37750  00727E  D7FB               	goto	__flash_write_page_from_buffer
 37751                           
 37752                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 37753  007280  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 37754  007282  A4D8               	btfss	status,2,c
 37755  007284  D002               	goto	l1791
 37756                           
 37757                           ;flash.c: 263: command[0] = 0x83;
 37758  007286  0E83               	movlw	131
 37759  007288  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 37760  00728A                     l1791:
 37761                           
 37762                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 37763  00728A  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 37764  00728C  A4D8               	btfss	status,2,c
 37765  00728E  D002               	goto	l1792
 37766                           
 37767                           ;flash.c: 265: command[0] = 0x86;
 37768  007290  0E86               	movlw	134
 37769  007292  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 37770  007294                     l1792:
 37771                           
 37772                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37773  007294  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 37774  007298  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 37775  00729C  0E07               	movlw	7
 37776  00729E  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 37777  0072A0                     u6525:
 37778  0072A0  90D8               	bcf	status,0,c
 37779  0072A2  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 37780  0072A4  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 37781  0072A6  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 37782  0072A8  D7FB               	goto	u6525
 37783  0072AA  5017               	movf	??__flash_write_page_from_buffer,w,c
 37784  0072AC  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 37785                           
 37786                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 37787  0072AE  5014               	movf	__flash_write_page_from_buffer@page,w,c
 37788  0072B0  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 37789  0072B2  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 37790                           
 37791                           ;flash.c: 269: command[3] = 0x00;
 37792  0072B4  0E00               	movlw	0
 37793  0072B6  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 37794                           
 37795                           ;flash.c: 272: spi_tx(command, 4);
 37796  0072B8  0E1A               	movlw	low __flash_write_page_from_buffer@command
 37797  0072BA  6E01               	movwf	spi_tx@data,c
 37798  0072BC  0E00               	movlw	high __flash_write_page_from_buffer@command
 37799  0072BE  6E02               	movwf	spi_tx@data+1,c
 37800  0072C0  0E00               	movlw	0
 37801  0072C2  6E04               	movwf	spi_tx@length+1,c
 37802  0072C4  0E04               	movlw	4
 37803  0072C6  6E03               	movwf	spi_tx@length,c
 37804  0072C8  EC93  F039         	call	_spi_tx	;wreg free
 37805  0072CC  0012               	return		;funcret
 37806  0072CE                     __end_of__flash_write_page_from_buffer:
 37807                           	opt stack 0
 37808                           tosu	equ	0xFFF
 37809                           tosh	equ	0xFFE
 37810                           tosl	equ	0xFFD
 37811                           pclath	equ	0xFFA
 37812                           tblptru	equ	0xFF8
 37813                           tblptrh	equ	0xFF7
 37814                           tblptrl	equ	0xFF6
 37815                           tablat	equ	0xFF5
 37816                           prodh	equ	0xFF4
 37817                           prodl	equ	0xFF3
 37818                           intcon	equ	0xFF2
 37819                           intcon2	equ	0xFF1
 37820                           intcon3	equ	0xFF0
 37821                           indf0	equ	0xFEF
 37822                           postinc0	equ	0xFEE
 37823                           fsr0h	equ	0xFEA
 37824                           fsr0l	equ	0xFE9
 37825                           wreg	equ	0xFE8
 37826                           indf1	equ	0xFE7
 37827                           postdec1	equ	0xFE5
 37828                           plusw1	equ	0xFE3
 37829                           fsr1h	equ	0xFE2
 37830                           fsr1l	equ	0xFE1
 37831                           indf2	equ	0xFDF
 37832                           postinc2	equ	0xFDE
 37833                           postdec2	equ	0xFDD
 37834                           plusw2	equ	0xFDB
 37835                           fsr2h	equ	0xFDA
 37836                           fsr2l	equ	0xFD9
 37837                           status	equ	0xFD8
 37838                           
 37839 ;; *************** function __flash_copy_page_to_buffer *****************
 37840 ;; Defined at:
 37841 ;;		line 150 in file "flash.c"
 37842 ;; Parameters:    Size  Location     Type
 37843 ;;  page            2   19[COMRAM] unsigned int 
 37844 ;;  buffer          1   21[COMRAM] enum E6890
 37845 ;; Auto vars:     Size  Location     Type
 37846 ;;  command         4   25[COMRAM] unsigned char [4]
 37847 ;; Return value:  Size  Location     Type
 37848 ;;                  1    wreg      void 
 37849 ;; Registers used:
 37850 ;;		wreg, status,2, status,0, cstack
 37851 ;; Tracked objects:
 37852 ;;		On entry : 0/0
 37853 ;;		On exit  : 0/0
 37854 ;;		Unchanged: 0/0
 37855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37856 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37857 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37858 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37859 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37860 ;;Total ram usage:       10 bytes
 37861 ;; Hardware stack levels used:    1
 37862 ;; Hardware stack levels required when called:    3
 37863 ;; This function calls:
 37864 ;;		__flash_is_busy
 37865 ;;		_spi_tx
 37866 ;; This function is called by:
 37867 ;;		_flash_partial_write
 37868 ;; This function uses a non-reentrant model
 37869 ;;
 37870                           
 37871                           	psect	text195
 37872  0072CE                     __ptext195:
 37873                           	opt stack 0
 37874  0072CE                     __flash_copy_page_to_buffer:
 37875                           	opt stack 21
 37876                           
 37877                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 37878                           
 37879                           ;incstack = 0
 37880  0072CE  ECB4  F03F         	call	__flash_is_busy	;wreg free
 37881  0072D2  0900               	iorlw	0
 37882  0072D4  A4D8               	btfss	status,2,c
 37883  0072D6  D7FB               	goto	__flash_copy_page_to_buffer
 37884                           
 37885                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 37886  0072D8  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 37887  0072DA  A4D8               	btfss	status,2,c
 37888  0072DC  D002               	goto	l1756
 37889                           
 37890                           ;flash.c: 159: command[0] = 0x53;
 37891  0072DE  0E53               	movlw	83
 37892  0072E0  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 37893  0072E2                     l1756:
 37894                           
 37895                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 37896  0072E2  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 37897  0072E4  A4D8               	btfss	status,2,c
 37898  0072E6  D002               	goto	l1757
 37899                           
 37900                           ;flash.c: 161: command[0] = 0x55;
 37901  0072E8  0E55               	movlw	85
 37902  0072EA  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 37903  0072EC                     l1757:
 37904                           
 37905                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37906  0072EC  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 37907  0072F0  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 37908  0072F4  0E07               	movlw	7
 37909  0072F6  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 37910  0072F8                     u6775:
 37911  0072F8  90D8               	bcf	status,0,c
 37912  0072FA  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 37913  0072FC  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 37914  0072FE  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 37915  007300  D7FB               	goto	u6775
 37916  007302  5017               	movf	??__flash_copy_page_to_buffer,w,c
 37917  007304  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 37918                           
 37919                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 37920  007306  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 37921  007308  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 37922  00730A  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 37923                           
 37924                           ;flash.c: 165: command[3] = 0x00;
 37925  00730C  0E00               	movlw	0
 37926  00730E  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 37927                           
 37928                           ;flash.c: 168: spi_tx(command, 4);
 37929  007310  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 37930  007312  6E01               	movwf	spi_tx@data,c
 37931  007314  0E00               	movlw	high __flash_copy_page_to_buffer@command
 37932  007316  6E02               	movwf	spi_tx@data+1,c
 37933  007318  0E00               	movlw	0
 37934  00731A  6E04               	movwf	spi_tx@length+1,c
 37935  00731C  0E04               	movlw	4
 37936  00731E  6E03               	movwf	spi_tx@length,c
 37937  007320  EC93  F039         	call	_spi_tx	;wreg free
 37938  007324  0012               	return		;funcret
 37939  007326                     __end_of__flash_copy_page_to_buffer:
 37940                           	opt stack 0
 37941                           tosu	equ	0xFFF
 37942                           tosh	equ	0xFFE
 37943                           tosl	equ	0xFFD
 37944                           pclath	equ	0xFFA
 37945                           tblptru	equ	0xFF8
 37946                           tblptrh	equ	0xFF7
 37947                           tblptrl	equ	0xFF6
 37948                           tablat	equ	0xFF5
 37949                           prodh	equ	0xFF4
 37950                           prodl	equ	0xFF3
 37951                           intcon	equ	0xFF2
 37952                           intcon2	equ	0xFF1
 37953                           intcon3	equ	0xFF0
 37954                           indf0	equ	0xFEF
 37955                           postinc0	equ	0xFEE
 37956                           fsr0h	equ	0xFEA
 37957                           fsr0l	equ	0xFE9
 37958                           wreg	equ	0xFE8
 37959                           indf1	equ	0xFE7
 37960                           postdec1	equ	0xFE5
 37961                           plusw1	equ	0xFE3
 37962                           fsr1h	equ	0xFE2
 37963                           fsr1l	equ	0xFE1
 37964                           indf2	equ	0xFDF
 37965                           postinc2	equ	0xFDE
 37966                           postdec2	equ	0xFDD
 37967                           plusw2	equ	0xFDB
 37968                           fsr2h	equ	0xFDA
 37969                           fsr2l	equ	0xFD9
 37970                           status	equ	0xFD8
 37971                           
 37972 ;; *************** function __flash_compare_page_to_buffer *****************
 37973 ;; Defined at:
 37974 ;;		line 172 in file "flash.c"
 37975 ;; Parameters:    Size  Location     Type
 37976 ;;  page            2   19[COMRAM] unsigned int 
 37977 ;;  buffer          1   21[COMRAM] enum E6890
 37978 ;; Auto vars:     Size  Location     Type
 37979 ;;  command         4   27[COMRAM] unsigned char [4]
 37980 ;;  status          2   25[COMRAM] unsigned int 
 37981 ;; Return value:  Size  Location     Type
 37982 ;;                  1    wreg      enum E6894
 37983 ;; Registers used:
 37984 ;;		wreg, status,2, status,0, cstack
 37985 ;; Tracked objects:
 37986 ;;		On entry : 0/0
 37987 ;;		On exit  : 0/0
 37988 ;;		Unchanged: 0/0
 37989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37990 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37991 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37992 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37993 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37994 ;;Total ram usage:       12 bytes
 37995 ;; Hardware stack levels used:    1
 37996 ;; Hardware stack levels required when called:    3
 37997 ;; This function calls:
 37998 ;;		__flash_get_status
 37999 ;;		__flash_is_busy
 38000 ;;		_spi_tx
 38001 ;; This function is called by:
 38002 ;;		_flash_page_write
 38003 ;;		_flash_partial_write
 38004 ;; This function uses a non-reentrant model
 38005 ;;
 38006                           
 38007                           	psect	text196
 38008  0067EA                     __ptext196:
 38009                           	opt stack 0
 38010  0067EA                     __flash_compare_page_to_buffer:
 38011                           	opt stack 23
 38012                           
 38013                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 38014                           
 38015                           ;incstack = 0
 38016  0067EA  ECB4  F03F         	call	__flash_is_busy	;wreg free
 38017  0067EE  0900               	iorlw	0
 38018  0067F0  A4D8               	btfss	status,2,c
 38019  0067F2  D7FB               	goto	__flash_compare_page_to_buffer
 38020                           
 38021                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 38022  0067F4  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 38023  0067F6  A4D8               	btfss	status,2,c
 38024  0067F8  D002               	goto	l1764
 38025                           
 38026                           ;flash.c: 182: command[0] = 0x60;
 38027  0067FA  0E60               	movlw	96
 38028  0067FC  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 38029  0067FE                     l1764:
 38030                           
 38031                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 38032  0067FE  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 38033  006800  A4D8               	btfss	status,2,c
 38034  006802  D002               	goto	l1765
 38035                           
 38036                           ;flash.c: 184: command[0] = 0x60;
 38037  006804  0E60               	movlw	96
 38038  006806  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 38039  006808                     l1765:
 38040                           
 38041                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 38042  006808  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 38043  00680C  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 38044  006810  0E07               	movlw	7
 38045  006812  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 38046  006814                     u6435:
 38047  006814  90D8               	bcf	status,0,c
 38048  006816  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 38049  006818  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 38050  00681A  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 38051  00681C  D7FB               	goto	u6435
 38052  00681E  5017               	movf	??__flash_compare_page_to_buffer,w,c
 38053  006820  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 38054                           
 38055                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 38056  006822  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 38057  006824  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 38058  006826  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 38059                           
 38060                           ;flash.c: 188: command[3] = 0x00;
 38061  006828  0E00               	movlw	0
 38062  00682A  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 38063                           
 38064                           ;flash.c: 191: spi_tx(command, 4);
 38065  00682C  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 38066  00682E  6E01               	movwf	spi_tx@data,c
 38067  006830  0E00               	movlw	high __flash_compare_page_to_buffer@command
 38068  006832  6E02               	movwf	spi_tx@data+1,c
 38069  006834  0E00               	movlw	0
 38070  006836  6E04               	movwf	spi_tx@length+1,c
 38071  006838  0E04               	movlw	4
 38072  00683A  6E03               	movwf	spi_tx@length,c
 38073  00683C  EC93  F039         	call	_spi_tx	;wreg free
 38074  006840  ECB4  F03F         	call	__flash_is_busy	;wreg free
 38075  006844  0900               	iorlw	0
 38076  006846  A4D8               	btfss	status,2,c
 38077  006848  D7FB               	goto	l1767
 38078                           
 38079                           ;flash.c: 197: status = _flash_get_status();
 38080  00684A  EC35  F03E         	call	__flash_get_status	;wreg free
 38081  00684E  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 38082  006852  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 38083                           
 38084                           ;flash.c: 200: if(status & 0b0000000001000000)
 38085  006856  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 38086  006858  D002               	goto	l1769
 38087                           
 38088                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 38089  00685A  0E01               	movlw	1
 38090                           
 38091                           ;flash.c: 204: }
 38092  00685C  0012               	return	
 38093  00685E                     l1769:
 38094                           
 38095                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 38096  00685E  0E00               	movlw	0
 38097  006860  0012               	return	
 38098  006862                     __end_of__flash_compare_page_to_buffer:
 38099                           	opt stack 0
 38100                           tosu	equ	0xFFF
 38101                           tosh	equ	0xFFE
 38102                           tosl	equ	0xFFD
 38103                           pclath	equ	0xFFA
 38104                           tblptru	equ	0xFF8
 38105                           tblptrh	equ	0xFF7
 38106                           tblptrl	equ	0xFF6
 38107                           tablat	equ	0xFF5
 38108                           prodh	equ	0xFF4
 38109                           prodl	equ	0xFF3
 38110                           intcon	equ	0xFF2
 38111                           intcon2	equ	0xFF1
 38112                           intcon3	equ	0xFF0
 38113                           indf0	equ	0xFEF
 38114                           postinc0	equ	0xFEE
 38115                           fsr0h	equ	0xFEA
 38116                           fsr0l	equ	0xFE9
 38117                           wreg	equ	0xFE8
 38118                           indf1	equ	0xFE7
 38119                           postdec1	equ	0xFE5
 38120                           plusw1	equ	0xFE3
 38121                           fsr1h	equ	0xFE2
 38122                           fsr1l	equ	0xFE1
 38123                           indf2	equ	0xFDF
 38124                           postinc2	equ	0xFDE
 38125                           postdec2	equ	0xFDD
 38126                           plusw2	equ	0xFDB
 38127                           fsr2h	equ	0xFDA
 38128                           fsr2l	equ	0xFD9
 38129                           status	equ	0xFD8
 38130                           
 38131 ;; *************** function __update_modified_time *****************
 38132 ;; Defined at:
 38133 ;;		line 53 in file "fat16.c"
 38134 ;; Parameters:    Size  Location     Type
 38135 ;;  root            2    4[COMRAM] PTR struct .
 38136 ;;		 -> fat_append_to_file@root(32), 
 38137 ;; Auto vars:     Size  Location     Type
 38138 ;;		None
 38139 ;; Return value:  Size  Location     Type
 38140 ;;                  1    wreg      void 
 38141 ;; Registers used:
 38142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38143 ;; Tracked objects:
 38144 ;;		On entry : 0/0
 38145 ;;		On exit  : 0/0
 38146 ;;		Unchanged: 0/0
 38147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38151 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38152 ;;Total ram usage:        2 bytes
 38153 ;; Hardware stack levels used:    1
 38154 ;; Hardware stack levels required when called:    1
 38155 ;; This function calls:
 38156 ;;		__get_date
 38157 ;;		__get_time
 38158 ;; This function is called by:
 38159 ;;		_fat_append_to_file
 38160 ;; This function uses a non-reentrant model
 38161 ;;
 38162                           
 38163                           	psect	text197
 38164  007C06                     __ptext197:
 38165                           	opt stack 0
 38166  007C06                     __update_modified_time:
 38167                           	opt stack 25
 38168                           
 38169                           ;fat16.c: 55: root->modifiedDate = _get_date();
 38170                           
 38171                           ;incstack = 0
 38172  007C06  ECDC  F040         	call	__get_date	;wreg free
 38173  007C0A  EE20 F018          	lfsr	2,24
 38174  007C0E  5005               	movf	__update_modified_time@root,w,c
 38175  007C10  26D9               	addwf	fsr2l,f,c
 38176  007C12  5006               	movf	__update_modified_time@root+1,w,c
 38177  007C14  22DA               	addwfc	fsr2h,f,c
 38178  007C16  C001  FFDE         	movff	?__get_date,postinc2
 38179  007C1A  C002  FFDD         	movff	?__get_date+1,postdec2
 38180                           
 38181                           ;fat16.c: 56: root->modifiedTime = _get_time();
 38182  007C1E  ECD7  F040         	call	__get_time	;wreg free
 38183  007C22  EE20 F016          	lfsr	2,22
 38184  007C26  5005               	movf	__update_modified_time@root,w,c
 38185  007C28  26D9               	addwf	fsr2l,f,c
 38186  007C2A  5006               	movf	__update_modified_time@root+1,w,c
 38187  007C2C  22DA               	addwfc	fsr2h,f,c
 38188  007C2E  C001  FFDE         	movff	?__get_time,postinc2
 38189  007C32  C002  FFDD         	movff	?__get_time+1,postdec2
 38190  007C36  0012               	return		;funcret
 38191  007C38                     __end_of__update_modified_time:
 38192                           	opt stack 0
 38193                           tosu	equ	0xFFF
 38194                           tosh	equ	0xFFE
 38195                           tosl	equ	0xFFD
 38196                           pclath	equ	0xFFA
 38197                           tblptru	equ	0xFF8
 38198                           tblptrh	equ	0xFF7
 38199                           tblptrl	equ	0xFF6
 38200                           tablat	equ	0xFF5
 38201                           prodh	equ	0xFF4
 38202                           prodl	equ	0xFF3
 38203                           intcon	equ	0xFF2
 38204                           intcon2	equ	0xFF1
 38205                           intcon3	equ	0xFF0
 38206                           indf0	equ	0xFEF
 38207                           postinc0	equ	0xFEE
 38208                           fsr0h	equ	0xFEA
 38209                           fsr0l	equ	0xFE9
 38210                           wreg	equ	0xFE8
 38211                           indf1	equ	0xFE7
 38212                           postdec1	equ	0xFE5
 38213                           plusw1	equ	0xFE3
 38214                           fsr1h	equ	0xFE2
 38215                           fsr1l	equ	0xFE1
 38216                           indf2	equ	0xFDF
 38217                           postinc2	equ	0xFDE
 38218                           postdec2	equ	0xFDD
 38219                           plusw2	equ	0xFDB
 38220                           fsr2h	equ	0xFDA
 38221                           fsr2l	equ	0xFD9
 38222                           status	equ	0xFD8
 38223                           
 38224 ;; *************** function __get_time *****************
 38225 ;; Defined at:
 38226 ;;		line 29 in file "fat16.c"
 38227 ;; Parameters:    Size  Location     Type
 38228 ;;		None
 38229 ;; Auto vars:     Size  Location     Type
 38230 ;;  time            2    2[COMRAM] unsigned int 
 38231 ;; Return value:  Size  Location     Type
 38232 ;;                  2    0[COMRAM] unsigned int 
 38233 ;; Registers used:
 38234 ;;		None
 38235 ;; Tracked objects:
 38236 ;;		On entry : 0/0
 38237 ;;		On exit  : 0/0
 38238 ;;		Unchanged: 0/0
 38239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38243 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38244 ;;Total ram usage:        4 bytes
 38245 ;; Hardware stack levels used:    1
 38246 ;; This function calls:
 38247 ;;		Nothing
 38248 ;; This function is called by:
 38249 ;;		__update_modified_time
 38250 ;;		_fat_create_file
 38251 ;; This function uses a non-reentrant model
 38252 ;;
 38253                           
 38254                           	psect	text198
 38255  0081AE                     __ptext198:
 38256                           	opt stack 0
 38257  0081AE                     __get_time:
 38258                           	opt stack 26
 38259                           
 38260                           ;fat16.c: 31: uint16_t time;;fat16.c: 38: return time;
 38261                           
 38262                           ;incstack = 0
 38263  0081AE  C003  F001         	movff	__get_time@time,?__get_time
 38264  0081B2  C004  F002         	movff	__get_time@time+1,?__get_time+1
 38265  0081B6  0012               	return		;funcret
 38266  0081B8                     __end_of__get_time:
 38267                           	opt stack 0
 38268                           tosu	equ	0xFFF
 38269                           tosh	equ	0xFFE
 38270                           tosl	equ	0xFFD
 38271                           pclath	equ	0xFFA
 38272                           tblptru	equ	0xFF8
 38273                           tblptrh	equ	0xFF7
 38274                           tblptrl	equ	0xFF6
 38275                           tablat	equ	0xFF5
 38276                           prodh	equ	0xFF4
 38277                           prodl	equ	0xFF3
 38278                           intcon	equ	0xFF2
 38279                           intcon2	equ	0xFF1
 38280                           intcon3	equ	0xFF0
 38281                           indf0	equ	0xFEF
 38282                           postinc0	equ	0xFEE
 38283                           fsr0h	equ	0xFEA
 38284                           fsr0l	equ	0xFE9
 38285                           wreg	equ	0xFE8
 38286                           indf1	equ	0xFE7
 38287                           postdec1	equ	0xFE5
 38288                           plusw1	equ	0xFE3
 38289                           fsr1h	equ	0xFE2
 38290                           fsr1l	equ	0xFE1
 38291                           indf2	equ	0xFDF
 38292                           postinc2	equ	0xFDE
 38293                           postdec2	equ	0xFDD
 38294                           plusw2	equ	0xFDB
 38295                           fsr2h	equ	0xFDA
 38296                           fsr2l	equ	0xFD9
 38297                           status	equ	0xFD8
 38298                           
 38299 ;; *************** function __get_date *****************
 38300 ;; Defined at:
 38301 ;;		line 41 in file "fat16.c"
 38302 ;; Parameters:    Size  Location     Type
 38303 ;;		None
 38304 ;; Auto vars:     Size  Location     Type
 38305 ;;  date            2    2[COMRAM] unsigned int 
 38306 ;; Return value:  Size  Location     Type
 38307 ;;                  2    0[COMRAM] unsigned int 
 38308 ;; Registers used:
 38309 ;;		None
 38310 ;; Tracked objects:
 38311 ;;		On entry : 0/0
 38312 ;;		On exit  : 0/0
 38313 ;;		Unchanged: 0/0
 38314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38318 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38319 ;;Total ram usage:        4 bytes
 38320 ;; Hardware stack levels used:    1
 38321 ;; This function calls:
 38322 ;;		Nothing
 38323 ;; This function is called by:
 38324 ;;		__update_modified_time
 38325 ;;		_fat_create_file
 38326 ;; This function uses a non-reentrant model
 38327 ;;
 38328                           
 38329                           	psect	text199
 38330  0081B8                     __ptext199:
 38331                           	opt stack 0
 38332  0081B8                     __get_date:
 38333                           	opt stack 26
 38334                           
 38335                           ;fat16.c: 43: uint16_t date;;fat16.c: 50: return date;
 38336                           
 38337                           ;incstack = 0
 38338  0081B8  C003  F001         	movff	__get_date@date,?__get_date
 38339  0081BC  C004  F002         	movff	__get_date@date+1,?__get_date+1
 38340  0081C0  0012               	return		;funcret
 38341  0081C2                     __end_of__get_date:
 38342                           	opt stack 0
 38343                           tosu	equ	0xFFF
 38344                           tosh	equ	0xFFE
 38345                           tosl	equ	0xFFD
 38346                           pclath	equ	0xFFA
 38347                           tblptru	equ	0xFF8
 38348                           tblptrh	equ	0xFF7
 38349                           tblptrl	equ	0xFF6
 38350                           tablat	equ	0xFF5
 38351                           prodh	equ	0xFF4
 38352                           prodl	equ	0xFF3
 38353                           intcon	equ	0xFF2
 38354                           intcon2	equ	0xFF1
 38355                           intcon3	equ	0xFF0
 38356                           indf0	equ	0xFEF
 38357                           postinc0	equ	0xFEE
 38358                           fsr0h	equ	0xFEA
 38359                           fsr0l	equ	0xFE9
 38360                           wreg	equ	0xFE8
 38361                           indf1	equ	0xFE7
 38362                           postdec1	equ	0xFE5
 38363                           plusw1	equ	0xFE3
 38364                           fsr1h	equ	0xFE2
 38365                           fsr1l	equ	0xFE1
 38366                           indf2	equ	0xFDF
 38367                           postinc2	equ	0xFDE
 38368                           postdec2	equ	0xFDD
 38369                           plusw2	equ	0xFDB
 38370                           fsr2h	equ	0xFDA
 38371                           fsr2l	equ	0xFD9
 38372                           status	equ	0xFD8
 38373                           
 38374 ;; *************** function __sector_from_cluster *****************
 38375 ;; Defined at:
 38376 ;;		line 443 in file "fat16.c"
 38377 ;; Parameters:    Size  Location     Type
 38378 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 38379 ;; Auto vars:     Size  Location     Type
 38380 ;;		None
 38381 ;; Return value:  Size  Location     Type
 38382 ;;                  2    0[COMRAM] unsigned int 
 38383 ;; Registers used:
 38384 ;;		wreg, status,2, status,0
 38385 ;; Tracked objects:
 38386 ;;		On entry : 0/0
 38387 ;;		On exit  : 0/0
 38388 ;;		Unchanged: 0/0
 38389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38394 ;;Total ram usage:        2 bytes
 38395 ;; Hardware stack levels used:    1
 38396 ;; This function calls:
 38397 ;;		Nothing
 38398 ;; This function is called by:
 38399 ;;		_fat_append_to_file
 38400 ;;		_fat_read_from_file_fast
 38401 ;; This function uses a non-reentrant model
 38402 ;;
 38403                           
 38404                           	psect	text200
 38405  00811C                     __ptext200:
 38406                           	opt stack 0
 38407  00811C                     __sector_from_cluster:
 38408                           	opt stack 27
 38409                           
 38410                           ;fat16.c: 445: return fat_cluster + 38 - 2;
 38411                           
 38412                           ;incstack = 0
 38413  00811C  0E24               	movlw	36
 38414  00811E  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 38415  008120  6E01               	movwf	?__sector_from_cluster,c
 38416  008122  0E00               	movlw	0
 38417  008124  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 38418  008126  6E02               	movwf	?__sector_from_cluster+1,c
 38419  008128  0012               	return	
 38420  00812A                     __end_of__sector_from_cluster:
 38421                           	opt stack 0
 38422                           tosu	equ	0xFFF
 38423                           tosh	equ	0xFFE
 38424                           tosl	equ	0xFFD
 38425                           pclath	equ	0xFFA
 38426                           tblptru	equ	0xFF8
 38427                           tblptrh	equ	0xFF7
 38428                           tblptrl	equ	0xFF6
 38429                           tablat	equ	0xFF5
 38430                           prodh	equ	0xFF4
 38431                           prodl	equ	0xFF3
 38432                           intcon	equ	0xFF2
 38433                           intcon2	equ	0xFF1
 38434                           intcon3	equ	0xFF0
 38435                           indf0	equ	0xFEF
 38436                           postinc0	equ	0xFEE
 38437                           fsr0h	equ	0xFEA
 38438                           fsr0l	equ	0xFE9
 38439                           wreg	equ	0xFE8
 38440                           indf1	equ	0xFE7
 38441                           postdec1	equ	0xFE5
 38442                           plusw1	equ	0xFE3
 38443                           fsr1h	equ	0xFE2
 38444                           fsr1l	equ	0xFE1
 38445                           indf2	equ	0xFDF
 38446                           postinc2	equ	0xFDE
 38447                           postdec2	equ	0xFDD
 38448                           plusw2	equ	0xFDB
 38449                           fsr2h	equ	0xFDA
 38450                           fsr2l	equ	0xFD9
 38451                           status	equ	0xFD8
 38452                           
 38453 ;; *************** function __read_fat *****************
 38454 ;; Defined at:
 38455 ;;		line 169 in file "fat16.c"
 38456 ;; Parameters:    Size  Location     Type
 38457 ;;  cluster         2   47[COMRAM] unsigned int 
 38458 ;; Auto vars:     Size  Location     Type
 38459 ;;  value           2   53[COMRAM] unsigned int 
 38460 ;;  offset          2   51[COMRAM] unsigned int 
 38461 ;;  fat_sector      2   49[COMRAM] unsigned int 
 38462 ;; Return value:  Size  Location     Type
 38463 ;;                  2   47[COMRAM] unsigned int 
 38464 ;; Registers used:
 38465 ;;		wreg, status,2, status,0, cstack
 38466 ;; Tracked objects:
 38467 ;;		On entry : 0/0
 38468 ;;		On exit  : 0/0
 38469 ;;		Unchanged: 0/0
 38470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38472 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38474 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38475 ;;Total ram usage:        8 bytes
 38476 ;; Hardware stack levels used:    1
 38477 ;; Hardware stack levels required when called:    5
 38478 ;; This function calls:
 38479 ;;		_flash_partial_read
 38480 ;; This function is called by:
 38481 ;;		_fat_delete_file
 38482 ;;		_fat_append_to_file
 38483 ;;		_fat_read_from_file_fast
 38484 ;; This function uses a non-reentrant model
 38485 ;;
 38486                           
 38487                           	psect	text201
 38488  0077AA                     __ptext201:
 38489                           	opt stack 0
 38490  0077AA                     __read_fat:
 38491                           	opt stack 22
 38492                           
 38493                           ;fat16.c: 171: uint16_t fat_sector;;fat16.c: 172: uint16_t offset;;fat16.c: 173: uint16_
      +                          t value;;fat16.c: 174: fat_sector = cluster>>8;
 38494                           
 38495                           ;incstack = 0
 38496  0077AA  5031               	movf	__read_fat@cluster+1,w,c
 38497  0077AC  6E32               	movwf	__read_fat@fat_sector,c
 38498  0077AE  6A33               	clrf	__read_fat@fat_sector+1,c
 38499                           
 38500                           ;fat16.c: 175: fat_sector += 2;
 38501  0077B0  0E02               	movlw	2
 38502  0077B2  2632               	addwf	__read_fat@fat_sector,f,c
 38503  0077B4  0E00               	movlw	0
 38504  0077B6  2233               	addwfc	__read_fat@fat_sector+1,f,c
 38505                           
 38506                           ;fat16.c: 176: offset = cluster & 0xFF;
 38507  0077B8  5030               	movf	__read_fat@cluster,w,c
 38508  0077BA  6E34               	movwf	__read_fat@offset,c
 38509  0077BC  6A35               	clrf	__read_fat@offset+1,c
 38510                           
 38511                           ;fat16.c: 177: offset <<= 1;
 38512  0077BE  90D8               	bcf	status,0,c
 38513  0077C0  3634               	rlcf	__read_fat@offset,f,c
 38514  0077C2  3635               	rlcf	__read_fat@offset+1,f,c
 38515                           
 38516                           ;fat16.c: 178: flash_partial_read(fat_sector, offset, 2, &value);
 38517  0077C4  C032  F028         	movff	__read_fat@fat_sector,flash_partial_read@page
 38518  0077C8  C033  F029         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 38519  0077CC  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 38520  0077D0  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 38521  0077D4  0E00               	movlw	0
 38522  0077D6  6E2D               	movwf	flash_partial_read@length+1,c
 38523  0077D8  0E02               	movlw	2
 38524  0077DA  6E2C               	movwf	flash_partial_read@length,c
 38525  0077DC  0E36               	movlw	low __read_fat@value
 38526  0077DE  6E2E               	movwf	flash_partial_read@data,c
 38527  0077E0  0E00               	movlw	high __read_fat@value
 38528  0077E2  6E2F               	movwf	flash_partial_read@data+1,c
 38529  0077E4  EC1C  F03E         	call	_flash_partial_read	;wreg free
 38530                           
 38531                           ;fat16.c: 179: return value;
 38532  0077E8  C036  F030         	movff	__read_fat@value,?__read_fat
 38533  0077EC  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 38534  0077F0  0012               	return	
 38535  0077F2                     __end_of__read_fat:
 38536                           	opt stack 0
 38537                           tosu	equ	0xFFF
 38538                           tosh	equ	0xFFE
 38539                           tosl	equ	0xFFD
 38540                           pclath	equ	0xFFA
 38541                           tblptru	equ	0xFF8
 38542                           tblptrh	equ	0xFF7
 38543                           tblptrl	equ	0xFF6
 38544                           tablat	equ	0xFF5
 38545                           prodh	equ	0xFF4
 38546                           prodl	equ	0xFF3
 38547                           intcon	equ	0xFF2
 38548                           intcon2	equ	0xFF1
 38549                           intcon3	equ	0xFF0
 38550                           indf0	equ	0xFEF
 38551                           postinc0	equ	0xFEE
 38552                           fsr0h	equ	0xFEA
 38553                           fsr0l	equ	0xFE9
 38554                           wreg	equ	0xFE8
 38555                           indf1	equ	0xFE7
 38556                           postdec1	equ	0xFE5
 38557                           plusw1	equ	0xFE3
 38558                           fsr1h	equ	0xFE2
 38559                           fsr1l	equ	0xFE1
 38560                           indf2	equ	0xFDF
 38561                           postinc2	equ	0xFDE
 38562                           postdec2	equ	0xFDD
 38563                           plusw2	equ	0xFDB
 38564                           fsr2h	equ	0xFDA
 38565                           fsr2l	equ	0xFD9
 38566                           status	equ	0xFD8
 38567                           
 38568 ;; *************** function __get_empty_cluster *****************
 38569 ;; Defined at:
 38570 ;;		line 107 in file "fat16.c"
 38571 ;; Parameters:    Size  Location     Type
 38572 ;;  first_cluste    2   47[COMRAM] unsigned int 
 38573 ;; Auto vars:     Size  Location     Type
 38574 ;;  cluster         2   55[COMRAM] unsigned int 
 38575 ;;  value           2   53[COMRAM] unsigned int 
 38576 ;;  offset          2   51[COMRAM] unsigned int 
 38577 ;;  fat_sector      2   49[COMRAM] unsigned int 
 38578 ;; Return value:  Size  Location     Type
 38579 ;;                  2   47[COMRAM] unsigned int 
 38580 ;; Registers used:
 38581 ;;		wreg, status,2, status,0, cstack
 38582 ;; Tracked objects:
 38583 ;;		On entry : 0/0
 38584 ;;		On exit  : 0/0
 38585 ;;		Unchanged: 0/0
 38586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38588 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38590 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38591 ;;Total ram usage:       10 bytes
 38592 ;; Hardware stack levels used:    1
 38593 ;; Hardware stack levels required when called:    5
 38594 ;; This function calls:
 38595 ;;		_flash_partial_read
 38596 ;; This function is called by:
 38597 ;;		_fat_create_file
 38598 ;;		_fat_append_to_file
 38599 ;; This function uses a non-reentrant model
 38600 ;;
 38601                           
 38602                           	psect	text202
 38603  0069C4                     __ptext202:
 38604                           	opt stack 0
 38605  0069C4                     __get_empty_cluster:
 38606                           	opt stack 21
 38607                           
 38608                           ;fat16.c: 109: uint16_t cluster;;fat16.c: 110: uint16_t fat_sector;;fat16.c: 111: uint16
      +                          _t offset;;fat16.c: 112: uint16_t value;;fat16.c: 115: for(cluster=first_cluster; cluste
      +                          r<(8154+2); ++cluster)
 38609                           
 38610                           ;incstack = 0
 38611  0069C4  C030  F038         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 38612  0069C8  C031  F039         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 38613  0069CC                     l11307:
 38614  0069CC  0EDC               	movlw	220
 38615  0069CE  5C38               	subwf	__get_empty_cluster@cluster,w,c
 38616  0069D0  0E1F               	movlw	31
 38617  0069D2  5839               	subwfb	__get_empty_cluster@cluster+1,w,c
 38618  0069D4  B0D8               	btfsc	status,0,c
 38619  0069D6  D02B               	goto	u8270
 38620                           
 38621                           ;fat16.c: 116: {;fat16.c: 117: fat_sector = cluster>>8;
 38622  0069D8  5039               	movf	__get_empty_cluster@cluster+1,w,c
 38623  0069DA  6E32               	movwf	__get_empty_cluster@fat_sector,c
 38624  0069DC  6A33               	clrf	__get_empty_cluster@fat_sector+1,c
 38625                           
 38626                           ;fat16.c: 118: fat_sector += 2;
 38627  0069DE  0E02               	movlw	2
 38628  0069E0  2632               	addwf	__get_empty_cluster@fat_sector,f,c
 38629  0069E2  0E00               	movlw	0
 38630  0069E4  2233               	addwfc	__get_empty_cluster@fat_sector+1,f,c
 38631                           
 38632                           ;fat16.c: 119: offset = cluster & 0xFF;
 38633  0069E6  5038               	movf	__get_empty_cluster@cluster,w,c
 38634  0069E8  6E34               	movwf	__get_empty_cluster@offset,c
 38635  0069EA  6A35               	clrf	__get_empty_cluster@offset+1,c
 38636                           
 38637                           ;fat16.c: 120: offset <<= 1;
 38638  0069EC  90D8               	bcf	status,0,c
 38639  0069EE  3634               	rlcf	__get_empty_cluster@offset,f,c
 38640  0069F0  3635               	rlcf	__get_empty_cluster@offset+1,f,c
 38641                           
 38642                           ;fat16.c: 121: flash_partial_read(fat_sector, offset, 2, &value);
 38643  0069F2  C032  F028         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 38644  0069F6  C033  F029         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 38645  0069FA  C034  F02A         	movff	__get_empty_cluster@offset,flash_partial_read@start
 38646  0069FE  C035  F02B         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 38647  006A02  0E00               	movlw	0
 38648  006A04  6E2D               	movwf	flash_partial_read@length+1,c
 38649  006A06  0E02               	movlw	2
 38650  006A08  6E2C               	movwf	flash_partial_read@length,c
 38651  006A0A  0E36               	movlw	low __get_empty_cluster@value
 38652  006A0C  6E2E               	movwf	flash_partial_read@data,c
 38653  006A0E  0E00               	movlw	high __get_empty_cluster@value
 38654  006A10  6E2F               	movwf	flash_partial_read@data+1,c
 38655  006A12  EC1C  F03E         	call	_flash_partial_read	;wreg free
 38656                           
 38657                           ;fat16.c: 122: if(value==0x0000)
 38658  006A16  5036               	movf	__get_empty_cluster@value,w,c
 38659  006A18  1037               	iorwf	__get_empty_cluster@value+1,w,c
 38660  006A1A  A4D8               	btfss	status,2,c
 38661  006A1C  D005               	goto	l1928
 38662                           
 38663                           ;fat16.c: 123: {;fat16.c: 124: return cluster;
 38664  006A1E  C038  F030         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 38665  006A22  C039  F031         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 38666  006A26  0012               	return	
 38667  006A28                     l1928:
 38668  006A28  4A38               	infsnz	__get_empty_cluster@cluster,f,c
 38669  006A2A  2A39               	incf	__get_empty_cluster@cluster+1,f,c
 38670  006A2C  D7CF               	goto	l11307
 38671  006A2E                     u8270:
 38672                           
 38673                           ;fat16.c: 125: };fat16.c: 126: };fat16.c: 127: return 0x0000;
 38674  006A2E  0E00               	movlw	0
 38675  006A30  6E31               	movwf	?__get_empty_cluster+1,c
 38676  006A32  0E00               	movlw	0
 38677  006A34  6E30               	movwf	?__get_empty_cluster,c
 38678  006A36  0012               	return	
 38679  006A38                     __end_of__get_empty_cluster:
 38680                           	opt stack 0
 38681                           tosu	equ	0xFFF
 38682                           tosh	equ	0xFFE
 38683                           tosl	equ	0xFFD
 38684                           pclath	equ	0xFFA
 38685                           tblptru	equ	0xFF8
 38686                           tblptrh	equ	0xFF7
 38687                           tblptrl	equ	0xFF6
 38688                           tablat	equ	0xFF5
 38689                           prodh	equ	0xFF4
 38690                           prodl	equ	0xFF3
 38691                           intcon	equ	0xFF2
 38692                           intcon2	equ	0xFF1
 38693                           intcon3	equ	0xFF0
 38694                           indf0	equ	0xFEF
 38695                           postinc0	equ	0xFEE
 38696                           fsr0h	equ	0xFEA
 38697                           fsr0l	equ	0xFE9
 38698                           wreg	equ	0xFE8
 38699                           indf1	equ	0xFE7
 38700                           postdec1	equ	0xFE5
 38701                           plusw1	equ	0xFE3
 38702                           fsr1h	equ	0xFE2
 38703                           fsr1l	equ	0xFE1
 38704                           indf2	equ	0xFDF
 38705                           postinc2	equ	0xFDE
 38706                           postdec2	equ	0xFDD
 38707                           plusw2	equ	0xFDB
 38708                           fsr2h	equ	0xFDA
 38709                           fsr2l	equ	0xFD9
 38710                           status	equ	0xFD8
 38711                           
 38712 ;; *************** function _flash_partial_read *****************
 38713 ;; Defined at:
 38714 ;;		line 457 in file "flash.c"
 38715 ;; Parameters:    Size  Location     Type
 38716 ;;  page            2   39[COMRAM] unsigned int 
 38717 ;;  start           2   41[COMRAM] unsigned int 
 38718 ;;  length          2   43[COMRAM] unsigned int 
 38719 ;;  data            2   45[COMRAM] PTR unsigned char 
 38720 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 38721 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 38722 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 38723 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), RAM(3759), 
 38724 ;; Auto vars:     Size  Location     Type
 38725 ;;		None
 38726 ;; Return value:  Size  Location     Type
 38727 ;;                  1    wreg      void 
 38728 ;; Registers used:
 38729 ;;		wreg, status,2, status,0, cstack
 38730 ;; Tracked objects:
 38731 ;;		On entry : 0/0
 38732 ;;		On exit  : 0/0
 38733 ;;		Unchanged: 0/0
 38734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38735 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38738 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38739 ;;Total ram usage:        8 bytes
 38740 ;; Hardware stack levels used:    1
 38741 ;; Hardware stack levels required when called:    4
 38742 ;; This function calls:
 38743 ;;		__flash_partial_read
 38744 ;;		_spi_set_configuration
 38745 ;; This function is called by:
 38746 ;;		__root_is_available
 38747 ;;		__get_empty_cluster
 38748 ;;		_fat_get_empty_clusters
 38749 ;;		__read_fat
 38750 ;;		__get_first_cluster
 38751 ;;		_fat_find_file
 38752 ;;		_fat_get_file_size
 38753 ;;		_fat_read_from_file_fast
 38754 ;;		_fat_get_file_information
 38755 ;;		__get_file_size
 38756 ;; This function uses a non-reentrant model
 38757 ;;
 38758                           
 38759                           	psect	text203
 38760  007C38                     __ptext203:
 38761                           	opt stack 0
 38762  007C38                     _flash_partial_read:
 38763                           	opt stack 23
 38764                           
 38765                           ;flash.c: 460: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 38766                           
 38767                           ;incstack = 0
 38768  007C38  0E00               	movlw	0
 38769  007C3A  EC7A  F024         	call	_spi_set_configuration
 38770                           
 38771                           ;flash.c: 463: _flash_partial_read(page, start, length, data);
 38772  007C3E  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 38773  007C42  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 38774  007C46  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 38775  007C4A  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 38776  007C4E  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 38777  007C52  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 38778  007C56  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 38779  007C5A  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 38780  007C5E  EC31  F034         	call	__flash_partial_read	;wreg free
 38781                           
 38782                           ;flash.c: 466: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 38783  007C62  0E01               	movlw	1
 38784  007C64  EC7A  F024         	call	_spi_set_configuration
 38785  007C68  0012               	return		;funcret
 38786  007C6A                     __end_of_flash_partial_read:
 38787                           	opt stack 0
 38788                           tosu	equ	0xFFF
 38789                           tosh	equ	0xFFE
 38790                           tosl	equ	0xFFD
 38791                           pclath	equ	0xFFA
 38792                           tblptru	equ	0xFF8
 38793                           tblptrh	equ	0xFF7
 38794                           tblptrl	equ	0xFF6
 38795                           tablat	equ	0xFF5
 38796                           prodh	equ	0xFF4
 38797                           prodl	equ	0xFF3
 38798                           intcon	equ	0xFF2
 38799                           intcon2	equ	0xFF1
 38800                           intcon3	equ	0xFF0
 38801                           indf0	equ	0xFEF
 38802                           postinc0	equ	0xFEE
 38803                           fsr0h	equ	0xFEA
 38804                           fsr0l	equ	0xFE9
 38805                           wreg	equ	0xFE8
 38806                           indf1	equ	0xFE7
 38807                           postdec1	equ	0xFE5
 38808                           plusw1	equ	0xFE3
 38809                           fsr1h	equ	0xFE2
 38810                           fsr1l	equ	0xFE1
 38811                           indf2	equ	0xFDF
 38812                           postinc2	equ	0xFDE
 38813                           postdec2	equ	0xFDD
 38814                           plusw2	equ	0xFDB
 38815                           fsr2h	equ	0xFDA
 38816                           fsr2l	equ	0xFD9
 38817                           status	equ	0xFD8
 38818                           
 38819 ;; *************** function _spi_set_configuration *****************
 38820 ;; Defined at:
 38821 ;;		line 139 in file "spi.c"
 38822 ;; Parameters:    Size  Location     Type
 38823 ;;  configuratio    1    wreg     enum E6749
 38824 ;; Auto vars:     Size  Location     Type
 38825 ;;  configuratio    1    0[COMRAM] enum E6749
 38826 ;;  cntr            1    0        unsigned char 
 38827 ;; Return value:  Size  Location     Type
 38828 ;;                  1    wreg      void 
 38829 ;; Registers used:
 38830 ;;		wreg, status,2, status,0
 38831 ;; Tracked objects:
 38832 ;;		On entry : 0/0
 38833 ;;		On exit  : 0/0
 38834 ;;		Unchanged: 0/0
 38835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38840 ;;Total ram usage:        1 bytes
 38841 ;; Hardware stack levels used:    1
 38842 ;; This function calls:
 38843 ;;		Nothing
 38844 ;; This function is called by:
 38845 ;;		_flash_init
 38846 ;;		_flash_is_busy
 38847 ;;		_flash_page_read
 38848 ;;		_flash_page_write
 38849 ;;		_flash_partial_read
 38850 ;;		_flash_partial_write
 38851 ;;		_flash_set_power_state
 38852 ;; This function uses a non-reentrant model
 38853 ;;
 38854                           
 38855                           	psect	text204
 38856  0048F4                     __ptext204:
 38857                           	opt stack 0
 38858  0048F4                     _spi_set_configuration:
 38859                           	opt stack 28
 38860                           
 38861                           ;incstack = 0
 38862                           ;spi_set_configuration@configuration stored from wreg
 38863  0048F4  6E01               	movwf	spi_set_configuration@configuration,c
 38864                           
 38865                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 38866  0048F6  D076               	goto	l2809
 38867  0048F8                     l2810:
 38868                           
 38869                           ;spi.c: 152: DMACON1bits.DMAEN = 0;
 38870  0048F8  9088               	bcf	3976,0,c	;volatile
 38871                           
 38872                           ;spi.c: 153: SSP2CON1bits.SSPEN = 0;
 38873  0048FA  9A72               	bcf	3954,5,c	;volatile
 38874                           
 38875                           ;spi.c: 156: TRISDbits.TRISD6 = 1;
 38876  0048FC  8C95               	bsf	3989,6,c	;volatile
 38877                           
 38878                           ;spi.c: 157: TRISDbits.TRISD4 = 0;
 38879  0048FE  9895               	bcf	3989,4,c	;volatile
 38880                           
 38881                           ;spi.c: 158: LATDbits.LD4 = 0;
 38882  004900  988C               	bcf	3980,4,c	;volatile
 38883                           
 38884                           ;spi.c: 159: TRISDbits.TRISD5 = 0;
 38885  004902  9A95               	bcf	3989,5,c	;volatile
 38886                           
 38887                           ;spi.c: 160: LATDbits.LD5 = 0;
 38888  004904  9A8C               	bcf	3980,5,c	;volatile
 38889                           
 38890                           ;spi.c: 161: TRISDbits.TRISD7 = 0;
 38891  004906  9E95               	bcf	3989,7,c	;volatile
 38892                           
 38893                           ;spi.c: 162: LATDbits.LD7 = 1;
 38894  004908  8E8C               	bsf	3980,7,c	;volatile
 38895                           
 38896                           ;spi.c: 165: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 38897  00490A  0E55               	movlw	85
 38898  00490C  6EA7               	movwf	4007,c	;volsfr
 38899  00490E  0EAA               	movlw	170
 38900  004910  6EA7               	movwf	4007,c	;volsfr
 38901  004912  010E               	movlb	14	; () banked
 38902  004914  91BF               	bcf	191,0,b	;volatile
 38903                           
 38904                           ;spi.c: 167: RPOR23 = 0b00000;
 38905  004916  0E00               	movlw	0
 38906  004918  6FD7               	movwf	215,b	;volatile
 38907                           
 38908                           ;spi.c: 168: RPINR21 = 0b11111;
 38909  00491A  0E1F               	movlw	31
 38910  00491C  6FFC               	movwf	252,b	;volatile
 38911                           
 38912                           ;spi.c: 169: RPINR23 = 0b11111;
 38913  00491E  0E1F               	movlw	31
 38914  004920  6FFE               	movwf	254,b	;volatile
 38915                           
 38916                           ;spi.c: 171: RPINR21 = 23;
 38917  004922  0E17               	movlw	23
 38918  004924  6FFC               	movwf	252,b	;volatile
 38919                           
 38920                           ;spi.c: 172: RPOR21 = 10;
 38921  004926  0E0A               	movlw	10
 38922  004928  6FD5               	movwf	213,b	;volatile
 38923                           
 38924                           ;spi.c: 174: RPOR22 = 11;
 38925  00492A  0E0B               	movlw	11
 38926  00492C  6FD6               	movwf	214,b	;volatile
 38927                           
 38928                           ;spi.c: 175: RPINR22 = 22;
 38929  00492E  0E16               	movlw	22
 38930  004930  6FFD               	movwf	253,b	;volatile
 38931                           
 38932                           ;spi.c: 176: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 38933  004932  0E55               	movlw	85
 38934  004934  6EA7               	movwf	4007,c	;volsfr
 38935  004936  0EAA               	movlw	170
 38936  004938  6EA7               	movwf	4007,c	;volsfr
 38937                           
 38938                           ; BSR set to: 14
 38939  00493A  81BF               	bsf	191,0,b	;volatile
 38940                           
 38941                           ; BSR set to: 14
 38942                           ;spi.c: 179: SSP2STATbits.SMP = 1;
 38943  00493C  8E73               	bsf	3955,7,c	;volatile
 38944                           
 38945                           ; BSR set to: 14
 38946                           ;spi.c: 180: SSP2STATbits.CKE = 1;
 38947  00493E  8C73               	bsf	3955,6,c	;volatile
 38948                           
 38949                           ; BSR set to: 14
 38950                           ;spi.c: 181: SSP2CON1bits.WCOL = 0;
 38951  004940  9E72               	bcf	3954,7,c	;volatile
 38952                           
 38953                           ; BSR set to: 14
 38954                           ;spi.c: 182: SSP2CON1bits.SSPOV = 0;
 38955  004942  9C72               	bcf	3954,6,c	;volatile
 38956                           
 38957                           ; BSR set to: 14
 38958                           ;spi.c: 183: SSP2CON1bits.CKP = 0;
 38959  004944  9872               	bcf	3954,4,c	;volatile
 38960                           
 38961                           ; BSR set to: 14
 38962                           ;spi.c: 184: SSP2CON1bits.SSPM =0b0000;
 38963  004946  9072               	bcf	3954,0,c	;volatile
 38964  004948  9272               	bcf	3954,1,c	;volatile
 38965  00494A  9472               	bcf	3954,2,c	;volatile
 38966  00494C  9672               	bcf	3954,3,c	;volatile
 38967                           
 38968                           ; BSR set to: 14
 38969                           ;spi.c: 185: SSP2CON1bits.SSPEN = 1;
 38970  00494E  8A72               	bsf	3954,5,c	;volatile
 38971                           
 38972                           ;spi.c: 188: active_configuration = SPI_CONFIGURATION_INTERNAL;
 38973  004950  0E00               	movlw	0
 38974  004952  0101               	movlb	1	; () banked
 38975  004954  6F86               	movwf	_active_configuration& (0+255),b
 38976                           
 38977                           ;spi.c: 189: break;
 38978  004956  0012               	return	
 38979  004958                     l2812:
 38980                           
 38981                           ;spi.c: 193: DMACON1bits.DMAEN = 0;
 38982  004958  9088               	bcf	3976,0,c	;volatile
 38983                           
 38984                           ;spi.c: 194: SSP2CON1bits.SSPEN = 0;
 38985  00495A  9A72               	bcf	3954,5,c	;volatile
 38986                           
 38987                           ;spi.c: 197: ODCON3bits.SPI2OD = 0;
 38988  00495C  010F               	movlb	15	; () banked
 38989  00495E  9340               	bcf	64,1,b	;volatile
 38990                           
 38991                           ; BSR set to: 15
 38992                           ;spi.c: 200: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 38993  004960  0E55               	movlw	85
 38994  004962  6EA7               	movwf	4007,c	;volsfr
 38995  004964  0EAA               	movlw	170
 38996  004966  6EA7               	movwf	4007,c	;volsfr
 38997                           
 38998                           ; BSR set to: 15
 38999  004968  010E               	movlb	14	; () banked
 39000  00496A  91BF               	bcf	191,0,b	;volatile
 39001                           
 39002                           ;spi.c: 201: RPOR23 = 10;
 39003  00496C  0E0A               	movlw	10
 39004  00496E  6FD7               	movwf	215,b	;volatile
 39005                           
 39006                           ;spi.c: 202: RPINR21 = 21;
 39007  004970  0E15               	movlw	21
 39008  004972  6FFC               	movwf	252,b	;volatile
 39009                           
 39010                           ;spi.c: 203: RPINR22 = 22;
 39011  004974  0E16               	movlw	22
 39012  004976  6FFD               	movwf	253,b	;volatile
 39013                           
 39014                           ;spi.c: 204: RPINR23 = 19;
 39015  004978  0E13               	movlw	19
 39016  00497A  6FFE               	movwf	254,b	;volatile
 39017                           
 39018                           ;spi.c: 205: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 39019  00497C  0E55               	movlw	85
 39020  00497E  6EA7               	movwf	4007,c	;volsfr
 39021  004980  0EAA               	movlw	170
 39022  004982  6EA7               	movwf	4007,c	;volsfr
 39023                           
 39024                           ; BSR set to: 14
 39025  004984  81BF               	bsf	191,0,b	;volatile
 39026                           
 39027                           ; BSR set to: 14
 39028                           ;spi.c: 207: SSP2CON1bits.SSPEN = 0;
 39029  004986  9A72               	bcf	3954,5,c	;volatile
 39030                           
 39031                           ; BSR set to: 14
 39032                           ;spi.c: 215: TRISDbits.TRISD5 = 1;
 39033  004988  8A95               	bsf	3989,5,c	;volatile
 39034                           
 39035                           ; BSR set to: 14
 39036                           ;spi.c: 216: TRISDbits.TRISD4 = 1;
 39037  00498A  8895               	bsf	3989,4,c	;volatile
 39038                           
 39039                           ; BSR set to: 14
 39040                           ;spi.c: 219: TRISDbits.TRISD6 = 0;
 39041  00498C  9C95               	bcf	3989,6,c	;volatile
 39042                           
 39043                           ; BSR set to: 14
 39044                           ;spi.c: 220: LATDbits.LD6 = 1;
 39045  00498E  8C8C               	bsf	3980,6,c	;volatile
 39046                           
 39047                           ; BSR set to: 14
 39048                           ;spi.c: 223: TRISDbits.TRISD2 = 1;
 39049  004990  8495               	bsf	3989,2,c	;volatile
 39050                           
 39051                           ; BSR set to: 14
 39052                           ;spi.c: 229: SSP2STATbits.SMP = 0;
 39053  004992  9E73               	bcf	3955,7,c	;volatile
 39054                           
 39055                           ; BSR set to: 14
 39056                           ;spi.c: 230: SSP2STATbits.CKE = 1;
 39057  004994  8C73               	bsf	3955,6,c	;volatile
 39058                           
 39059                           ; BSR set to: 14
 39060                           ;spi.c: 231: SSP2CON1bits.WCOL = 0;
 39061  004996  9E72               	bcf	3954,7,c	;volatile
 39062                           
 39063                           ; BSR set to: 14
 39064                           ;spi.c: 232: SSP2CON1bits.SSPOV = 0;
 39065  004998  9C72               	bcf	3954,6,c	;volatile
 39066                           
 39067                           ; BSR set to: 14
 39068                           ;spi.c: 233: SSP2CON1bits.CKP = 0;
 39069  00499A  9872               	bcf	3954,4,c	;volatile
 39070                           
 39071                           ; BSR set to: 14
 39072                           ;spi.c: 234: SSP2CON1bits.SSPM =0b0100;
 39073  00499C  5072               	movf	3954,w,c	;volatile
 39074  00499E  0BF0               	andlw	-16
 39075  0049A0  0904               	iorlw	4
 39076  0049A2  6E72               	movwf	3954,c	;volatile
 39077                           
 39078                           ; BSR set to: 14
 39079                           ;spi.c: 235: PIR3bits.SSP2IF = 0;
 39080  0049A4  9EA4               	bcf	4004,7,c	;volatile
 39081                           
 39082                           ; BSR set to: 14
 39083                           ;spi.c: 236: SSP2CON1bits.SSPEN = 1;
 39084  0049A6  8A72               	bsf	3954,5,c	;volatile
 39085                           
 39086                           ; BSR set to: 14
 39087                           ;spi.c: 239: DMACON1bits.TXINC = 1;
 39088  0049A8  8A88               	bsf	3976,5,c	;volatile
 39089                           
 39090                           ; BSR set to: 14
 39091                           ;spi.c: 240: DMACON1bits.RXINC = 1;
 39092  0049AA  8888               	bsf	3976,4,c	;volatile
 39093                           
 39094                           ; BSR set to: 14
 39095                           ;spi.c: 241: DMACON1bits.DUPLEX1 = 1;
 39096  0049AC  8688               	bsf	3976,3,c	;volatile
 39097                           
 39098                           ; BSR set to: 14
 39099                           ;spi.c: 242: DMACON1bits.DUPLEX0 = 0;
 39100  0049AE  9488               	bcf	3976,2,c	;volatile
 39101                           
 39102                           ; BSR set to: 14
 39103                           ;spi.c: 243: DMACON1bits.DLYINTEN = 0;
 39104  0049B0  9288               	bcf	3976,1,c	;volatile
 39105                           
 39106                           ; BSR set to: 14
 39107                           ;spi.c: 245: DMACON2bits.DLYCYC = 0b0000;
 39108  0049B2  9886               	bcf	3974,4,c	;volatile
 39109  0049B4  9A86               	bcf	3974,5,c	;volatile
 39110  0049B6  9C86               	bcf	3974,6,c	;volatile
 39111  0049B8  9E86               	bcf	3974,7,c	;volatile
 39112                           
 39113                           ; BSR set to: 14
 39114                           ;spi.c: 246: DMACON2bits.INTLVL = 0b0000;
 39115  0049BA  9086               	bcf	3974,0,c	;volatile
 39116  0049BC  9286               	bcf	3974,1,c	;volatile
 39117  0049BE  9486               	bcf	3974,2,c	;volatile
 39118  0049C0  9686               	bcf	3974,3,c	;volatile
 39119                           
 39120                           ; BSR set to: 14
 39121                           ;spi.c: 249: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 39122  0049C2  0E00               	movlw	0
 39123  0049C4  6E66               	movwf	3942,c	;volatile
 39124                           
 39125                           ; BSR set to: 14
 39126                           ;spi.c: 250: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 39127  0049C6  0E3F               	movlw	63
 39128  0049C8  6E67               	movwf	3943,c	;volatile
 39129                           
 39130                           ; BSR set to: 14
 39131                           ;spi.c: 253: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 39132  0049CA  0E02               	movlw	high __spi_external_tx_buffer
 39133  0049CC  6E6A               	movwf	3946,c	;volatile
 39134                           
 39135                           ; BSR set to: 14
 39136                           ;spi.c: 254: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 39137  0049CE  0E50               	movlw	low (low __spi_external_tx_buffer)
 39138  0049D0  6E6B               	movwf	3947,c	;volatile
 39139                           
 39140                           ; BSR set to: 14
 39141                           ;spi.c: 257: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 39142  0049D2  0E03               	movlw	high __spi_external_rx_buffer
 39143  0049D4  6E68               	movwf	3944,c	;volatile
 39144                           
 39145                           ; BSR set to: 14
 39146                           ;spi.c: 258: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 39147  0049D6  0E00               	movlw	low (low __spi_external_rx_buffer)
 39148  0049D8  6E69               	movwf	3945,c	;volatile
 39149                           
 39150                           ; BSR set to: 14
 39151                           ;spi.c: 260: DMACON1bits.DMAEN = 1;
 39152  0049DA  8088               	bsf	3976,0,c	;volatile
 39153                           
 39154                           ; BSR set to: 14
 39155                           ;spi.c: 328: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 39156  0049DC  0E01               	movlw	1
 39157  0049DE  0101               	movlb	1	; () banked
 39158  0049E0  6F86               	movwf	_active_configuration& (0+255),b
 39159                           
 39160                           ; BSR set to: 1
 39161                           ;spi.c: 330: }
 39162                           
 39163                           ;spi.c: 329: break;
 39164  0049E2  0012               	return	
 39165  0049E4                     l2809:
 39166                           
 39167                           ; BSR set to: 1
 39168  0049E4  5001               	movf	spi_set_configuration@configuration,w,c
 39169                           
 39170                           ; Switch size 1, requested type "space"
 39171                           ; Number of cases is 2, Range of values is 0 to 1
 39172                           ; switch strategies available:
 39173                           ; Name         Instructions Cycles
 39174                           ; simple_byte            7     4 (average)
 39175                           ;	Chosen strategy is simple_byte
 39176  0049E6  0A00               	xorlw	0	; case 0
 39177  0049E8  B4D8               	btfsc	status,2,c
 39178  0049EA  D786               	goto	l2810
 39179  0049EC  0A01               	xorlw	1	; case 1
 39180  0049EE  A4D8               	btfss	status,2,c
 39181  0049F0  0012               	return	
 39182  0049F2  D7B2               	goto	l2812
 39183  0049F4                     __end_of_spi_set_configuration:
 39184                           	opt stack 0
 39185                           tosu	equ	0xFFF
 39186                           tosh	equ	0xFFE
 39187                           tosl	equ	0xFFD
 39188                           pclath	equ	0xFFA
 39189                           tblptru	equ	0xFF8
 39190                           tblptrh	equ	0xFF7
 39191                           tblptrl	equ	0xFF6
 39192                           tablat	equ	0xFF5
 39193                           prodh	equ	0xFF4
 39194                           prodl	equ	0xFF3
 39195                           intcon	equ	0xFF2
 39196                           intcon2	equ	0xFF1
 39197                           intcon3	equ	0xFF0
 39198                           indf0	equ	0xFEF
 39199                           postinc0	equ	0xFEE
 39200                           fsr0h	equ	0xFEA
 39201                           fsr0l	equ	0xFE9
 39202                           wreg	equ	0xFE8
 39203                           indf1	equ	0xFE7
 39204                           postdec1	equ	0xFE5
 39205                           plusw1	equ	0xFE3
 39206                           fsr1h	equ	0xFE2
 39207                           fsr1l	equ	0xFE1
 39208                           indf2	equ	0xFDF
 39209                           postinc2	equ	0xFDE
 39210                           postdec2	equ	0xFDD
 39211                           plusw2	equ	0xFDB
 39212                           fsr2h	equ	0xFDA
 39213                           fsr2l	equ	0xFD9
 39214                           status	equ	0xFD8
 39215                           
 39216 ;; *************** function __flash_partial_read *****************
 39217 ;; Defined at:
 39218 ;;		line 305 in file "flash.c"
 39219 ;; Parameters:    Size  Location     Type
 39220 ;;  page            2   19[COMRAM] unsigned int 
 39221 ;;  start           2   21[COMRAM] unsigned int 
 39222 ;;  length          2   23[COMRAM] unsigned int 
 39223 ;;  data            2   25[COMRAM] PTR unsigned char 
 39224 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 39225 ;;		 -> buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 39226 ;;		 -> fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_
      +cluster(2), 
 39227 ;;		 -> _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(
      +1), 
 39228 ;;		 -> msd_buffer(512), RAM(3759), 
 39229 ;; Auto vars:     Size  Location     Type
 39230 ;;  command         4   31[COMRAM] unsigned char [4]
 39231 ;;  address         4   35[COMRAM] unsigned long 
 39232 ;; Return value:  Size  Location     Type
 39233 ;;                  1    wreg      void 
 39234 ;; Registers used:
 39235 ;;		wreg, status,2, status,0, cstack
 39236 ;; Tracked objects:
 39237 ;;		On entry : 0/0
 39238 ;;		On exit  : 0/0
 39239 ;;		Unchanged: 0/0
 39240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39241 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39242 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39243 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39244 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39245 ;;Total ram usage:       20 bytes
 39246 ;; Hardware stack levels used:    1
 39247 ;; Hardware stack levels required when called:    3
 39248 ;; This function calls:
 39249 ;;		__flash_is_busy
 39250 ;;		_spi_tx_rx
 39251 ;; This function is called by:
 39252 ;;		_flash_page_read
 39253 ;;		_flash_partial_read
 39254 ;; This function uses a non-reentrant model
 39255 ;;
 39256                           
 39257                           	psect	text205
 39258  006862                     __ptext205:
 39259                           	opt stack 0
 39260  006862                     __flash_partial_read:
 39261                           	opt stack 23
 39262                           
 39263                           ;flash.c: 307: uint32_t address;;flash.c: 308: uint8_t command[4];;flash.c: 311: while(_
      +                          flash_is_busy());
 39264                           
 39265                           ;incstack = 0
 39266  006862  ECB4  F03F         	call	__flash_is_busy	;wreg free
 39267  006866  0900               	iorlw	0
 39268  006868  A4D8               	btfss	status,2,c
 39269  00686A  D7FB               	goto	__flash_partial_read
 39270                           
 39271                           ;flash.c: 314: address = page;
 39272  00686C  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 39273  006870  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 39274  006874  6A26               	clrf	__flash_partial_read@address+2,c
 39275  006876  6A27               	clrf	__flash_partial_read@address+3,c
 39276                           
 39277                           ;flash.c: 315: address <<= 9;
 39278  006878  0E09               	movlw	9
 39279  00687A                     u6545:
 39280  00687A  90D8               	bcf	status,0,c
 39281  00687C  3624               	rlcf	__flash_partial_read@address,f,c
 39282  00687E  3625               	rlcf	__flash_partial_read@address+1,f,c
 39283  006880  3626               	rlcf	__flash_partial_read@address+2,f,c
 39284  006882  3627               	rlcf	__flash_partial_read@address+3,f,c
 39285  006884  2EE8               	decfsz	wreg,f,c
 39286  006886  D7F9               	goto	u6545
 39287                           
 39288                           ;flash.c: 316: address |= start;
 39289  006888  5016               	movf	__flash_partial_read@start,w,c
 39290  00688A  6E1C               	movwf	??__flash_partial_read& (0+255),c
 39291  00688C  5017               	movf	__flash_partial_read@start+1,w,c
 39292  00688E  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 39293  006890  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 39294  006892  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 39295  006894  501C               	movf	??__flash_partial_read,w,c
 39296  006896  1224               	iorwf	__flash_partial_read@address,f,c
 39297  006898  501D               	movf	??__flash_partial_read+1,w,c
 39298  00689A  1225               	iorwf	__flash_partial_read@address+1,f,c
 39299  00689C  501E               	movf	??__flash_partial_read+2,w,c
 39300  00689E  1226               	iorwf	__flash_partial_read@address+2,f,c
 39301  0068A0  501F               	movf	??__flash_partial_read+3,w,c
 39302  0068A2  1227               	iorwf	__flash_partial_read@address+3,f,c
 39303                           
 39304                           ;flash.c: 319: command[0] = 0x03;
 39305  0068A4  0E03               	movlw	3
 39306  0068A6  6E20               	movwf	__flash_partial_read@command,c
 39307                           
 39308                           ;flash.c: 320: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 39309  0068A8  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 39310                           
 39311                           ;flash.c: 321: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 39312  0068AC  5025               	movf	__flash_partial_read@address+1,w,c
 39313  0068AE  6E22               	movwf	__flash_partial_read@command+2,c
 39314                           
 39315                           ;flash.c: 322: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 39316  0068B0  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 39317                           
 39318                           ;flash.c: 325: spi_tx_rx(command, 4, data, length);
 39319  0068B4  0E20               	movlw	low __flash_partial_read@command
 39320  0068B6  6E01               	movwf	spi_tx_rx@command,c
 39321  0068B8  0E00               	movlw	high __flash_partial_read@command
 39322  0068BA  6E02               	movwf	spi_tx_rx@command+1,c
 39323  0068BC  0E00               	movlw	0
 39324  0068BE  6E04               	movwf	spi_tx_rx@command_length+1,c
 39325  0068C0  0E04               	movlw	4
 39326  0068C2  6E03               	movwf	spi_tx_rx@command_length,c
 39327  0068C4  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 39328  0068C8  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 39329  0068CC  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 39330  0068D0  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 39331  0068D4  ECBE  F030         	call	_spi_tx_rx	;wreg free
 39332  0068D8  0012               	return		;funcret
 39333  0068DA                     __end_of__flash_partial_read:
 39334                           	opt stack 0
 39335                           tosu	equ	0xFFF
 39336                           tosh	equ	0xFFE
 39337                           tosl	equ	0xFFD
 39338                           pclath	equ	0xFFA
 39339                           tblptru	equ	0xFF8
 39340                           tblptrh	equ	0xFF7
 39341                           tblptrl	equ	0xFF6
 39342                           tablat	equ	0xFF5
 39343                           prodh	equ	0xFF4
 39344                           prodl	equ	0xFF3
 39345                           intcon	equ	0xFF2
 39346                           intcon2	equ	0xFF1
 39347                           intcon3	equ	0xFF0
 39348                           indf0	equ	0xFEF
 39349                           postinc0	equ	0xFEE
 39350                           fsr0h	equ	0xFEA
 39351                           fsr0l	equ	0xFE9
 39352                           wreg	equ	0xFE8
 39353                           indf1	equ	0xFE7
 39354                           postdec1	equ	0xFE5
 39355                           plusw1	equ	0xFE3
 39356                           fsr1h	equ	0xFE2
 39357                           fsr1l	equ	0xFE1
 39358                           indf2	equ	0xFDF
 39359                           postinc2	equ	0xFDE
 39360                           postdec2	equ	0xFDD
 39361                           plusw2	equ	0xFDB
 39362                           fsr2h	equ	0xFDA
 39363                           fsr2l	equ	0xFD9
 39364                           status	equ	0xFD8
 39365                           
 39366 ;; *************** function __flash_is_busy *****************
 39367 ;; Defined at:
 39368 ;;		line 277 in file "flash.c"
 39369 ;; Parameters:    Size  Location     Type
 39370 ;;		None
 39371 ;; Auto vars:     Size  Location     Type
 39372 ;;  status          2   17[COMRAM] unsigned int 
 39373 ;; Return value:  Size  Location     Type
 39374 ;;                  1    wreg      unsigned char 
 39375 ;; Registers used:
 39376 ;;		wreg, status,2, status,0, cstack
 39377 ;; Tracked objects:
 39378 ;;		On entry : 0/0
 39379 ;;		On exit  : 0/0
 39380 ;;		Unchanged: 0/0
 39381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39383 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39386 ;;Total ram usage:        2 bytes
 39387 ;; Hardware stack levels used:    1
 39388 ;; Hardware stack levels required when called:    2
 39389 ;; This function calls:
 39390 ;;		__flash_get_status
 39391 ;;		__flash_wakeup
 39392 ;; This function is called by:
 39393 ;;		__flash_set_page_size
 39394 ;;		__flash_copy_page_to_buffer
 39395 ;;		__flash_compare_page_to_buffer
 39396 ;;		__flash_write_to_buffer
 39397 ;;		__flash_write_page_from_buffer
 39398 ;;		__flash_partial_read
 39399 ;;		_flash_is_busy
 39400 ;;		__flash_erase_page
 39401 ;;		_flash_set_power_state
 39402 ;; This function uses a non-reentrant model
 39403 ;;
 39404                           
 39405                           	psect	text206
 39406  007F68                     __ptext206:
 39407                           	opt stack 0
 39408  007F68                     __flash_is_busy:
 39409                           	opt stack 25
 39410                           
 39411                           ;flash.c: 279: uint16_t status;;flash.c: 282: if(power_state!=FLASH_POWER_STATE_NORMAL)
 39412                           
 39413                           ;incstack = 0
 39414  007F68  0100               	movlb	0	; () banked
 39415  007F6A  51DF               	movf	_power_state& (0+255),w,b
 39416  007F6C  A4D8               	btfss	status,2,c
 39417                           
 39418                           ; BSR set to: 0
 39419                           ;flash.c: 283: {;flash.c: 284: _flash_wakeup();
 39420  007F6E  EC96  F03A         	call	__flash_wakeup	;wreg free
 39421                           
 39422                           ;flash.c: 285: };flash.c: 288: status = _flash_get_status();
 39423  007F72  EC35  F03E         	call	__flash_get_status	;wreg free
 39424  007F76  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 39425  007F7A  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 39426                           
 39427                           ;flash.c: 291: if(status & 0b0000000010000000)
 39428  007F7E  AE12               	btfss	__flash_is_busy@status,7,c
 39429  007F80  D002               	goto	l1797
 39430                           
 39431                           ;flash.c: 292: {;flash.c: 294: return 0;
 39432  007F82  0E00               	movlw	0
 39433                           
 39434                           ;flash.c: 295: }
 39435  007F84  0012               	return	
 39436  007F86                     l1797:
 39437                           
 39438                           ;flash.c: 296: else;flash.c: 297: {;flash.c: 299: return 1;
 39439  007F86  0E01               	movlw	1
 39440  007F88  0012               	return	
 39441  007F8A                     __end_of__flash_is_busy:
 39442                           	opt stack 0
 39443                           tosu	equ	0xFFF
 39444                           tosh	equ	0xFFE
 39445                           tosl	equ	0xFFD
 39446                           pclath	equ	0xFFA
 39447                           tblptru	equ	0xFF8
 39448                           tblptrh	equ	0xFF7
 39449                           tblptrl	equ	0xFF6
 39450                           tablat	equ	0xFF5
 39451                           prodh	equ	0xFF4
 39452                           prodl	equ	0xFF3
 39453                           intcon	equ	0xFF2
 39454                           intcon2	equ	0xFF1
 39455                           intcon3	equ	0xFF0
 39456                           indf0	equ	0xFEF
 39457                           postinc0	equ	0xFEE
 39458                           fsr0h	equ	0xFEA
 39459                           fsr0l	equ	0xFE9
 39460                           wreg	equ	0xFE8
 39461                           indf1	equ	0xFE7
 39462                           postdec1	equ	0xFE5
 39463                           plusw1	equ	0xFE3
 39464                           fsr1h	equ	0xFE2
 39465                           fsr1l	equ	0xFE1
 39466                           indf2	equ	0xFDF
 39467                           postinc2	equ	0xFDE
 39468                           postdec2	equ	0xFDD
 39469                           plusw2	equ	0xFDB
 39470                           fsr2h	equ	0xFDA
 39471                           fsr2l	equ	0xFD9
 39472                           status	equ	0xFD8
 39473                           
 39474 ;; *************** function __flash_wakeup *****************
 39475 ;; Defined at:
 39476 ;;		line 124 in file "flash.c"
 39477 ;; Parameters:    Size  Location     Type
 39478 ;;		None
 39479 ;; Auto vars:     Size  Location     Type
 39480 ;;  command         1    8[COMRAM] unsigned char 
 39481 ;; Return value:  Size  Location     Type
 39482 ;;                  1    wreg      void 
 39483 ;; Registers used:
 39484 ;;		wreg, status,2, status,0, cstack
 39485 ;; Tracked objects:
 39486 ;;		On entry : 0/0
 39487 ;;		On exit  : 0/0
 39488 ;;		Unchanged: 0/0
 39489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39493 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39494 ;;Total ram usage:        1 bytes
 39495 ;; Hardware stack levels used:    1
 39496 ;; Hardware stack levels required when called:    1
 39497 ;; This function calls:
 39498 ;;		_spi_tx
 39499 ;; This function is called by:
 39500 ;;		__flash_is_busy
 39501 ;;		_flash_set_power_state
 39502 ;; This function uses a non-reentrant model
 39503 ;;
 39504                           
 39505                           	psect	text207
 39506  00752C                     __ptext207:
 39507                           	opt stack 0
 39508  00752C                     __flash_wakeup:
 39509                           	opt stack 25
 39510                           
 39511                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 39512                           
 39513                           ;incstack = 0
 39514  00752C  D021               	goto	l1746
 39515  00752E                     
 39516                           ;flash.c: 131: command = 0xAB;
 39517  00752E  0EAB               	movlw	171
 39518  007530  6E09               	movwf	__flash_wakeup@command,c
 39519                           
 39520                           ;flash.c: 132: spi_tx(&command, 1);
 39521  007532  0E09               	movlw	low __flash_wakeup@command
 39522  007534  6E01               	movwf	spi_tx@data,c
 39523  007536  0E00               	movlw	high __flash_wakeup@command
 39524  007538  6E02               	movwf	spi_tx@data+1,c
 39525  00753A  0E00               	movlw	0
 39526  00753C  6E04               	movwf	spi_tx@length+1,c
 39527  00753E  0E01               	movlw	1
 39528  007540  6E03               	movwf	spi_tx@length,c
 39529  007542  EC93  F039         	call	_spi_tx	;wreg free
 39530                           
 39531                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 39532  007546  0E17               	movlw	23
 39533  007548                     u12167:
 39534  007548  2EE8               	decfsz	wreg,f,c
 39535  00754A  D7FE               	bra	u12167
 39536  00754C  F000               	nop	
 39537                           
 39538                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 39539  00754E  0E00               	movlw	0
 39540  007550  0100               	movlb	0	; () banked
 39541  007552  6FDF               	movwf	_power_state& (0+255),b
 39542                           
 39543                           ;flash.c: 135: break;
 39544  007554  0012               	return	
 39545  007556                     l1749:
 39546                           
 39547                           ; BSR set to: 0
 39548                           ;flash.c: 140: LATDbits.LD7 = 0;
 39549  007556  9E8C               	bcf	3980,7,c	;volatile
 39550                           
 39551                           ; BSR set to: 0
 39552                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 39553  007558  0E0D               	movlw	13
 39554  00755A                     u12177:
 39555  00755A  2EE8               	decfsz	wreg,f,c
 39556  00755C  D7FE               	bra	u12177
 39557  00755E  F000               	nop	
 39558                           
 39559                           ;flash.c: 142: LATDbits.LD7 = 1;
 39560  007560  8E8C               	bsf	3980,7,c	;volatile
 39561                           
 39562                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 39563  007562  0E50               	movlw	80
 39564  007564                     u12187:
 39565  007564  2EE8               	decfsz	wreg,f,c
 39566  007566  D7FE               	bra	u12187
 39567                           
 39568                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 39569  007568  0E00               	movlw	0
 39570  00756A  0100               	movlb	0	; () banked
 39571  00756C  6FDF               	movwf	_power_state& (0+255),b
 39572                           
 39573                           ; BSR set to: 0
 39574                           ;flash.c: 146: }
 39575                           
 39576                           ;flash.c: 145: break;
 39577  00756E  0012               	return	
 39578  007570                     l1746:
 39579                           
 39580                           ; BSR set to: 0
 39581  007570  0100               	movlb	0	; () banked
 39582  007572  51DF               	movf	_power_state& (0+255),w,b
 39583                           
 39584                           ; Switch size 1, requested type "space"
 39585                           ; Number of cases is 2, Range of values is 1 to 2
 39586                           ; switch strategies available:
 39587                           ; Name         Instructions Cycles
 39588                           ; simple_byte            7     4 (average)
 39589                           ;	Chosen strategy is simple_byte
 39590  007574  0A01               	xorlw	1	; case 1
 39591  007576  B4D8               	btfsc	status,2,c
 39592  007578  D7DA               	goto	l1747
 39593  00757A  0A03               	xorlw	3	; case 2
 39594  00757C  A4D8               	btfss	status,2,c
 39595  00757E  0012               	return	
 39596  007580  D7EA               	goto	l1749
 39597  007582                     __end_of__flash_wakeup:
 39598                           	opt stack 0
 39599                           tosu	equ	0xFFF
 39600                           tosh	equ	0xFFE
 39601                           tosl	equ	0xFFD
 39602                           pclath	equ	0xFFA
 39603                           tblptru	equ	0xFF8
 39604                           tblptrh	equ	0xFF7
 39605                           tblptrl	equ	0xFF6
 39606                           tablat	equ	0xFF5
 39607                           prodh	equ	0xFF4
 39608                           prodl	equ	0xFF3
 39609                           intcon	equ	0xFF2
 39610                           intcon2	equ	0xFF1
 39611                           intcon3	equ	0xFF0
 39612                           indf0	equ	0xFEF
 39613                           postinc0	equ	0xFEE
 39614                           fsr0h	equ	0xFEA
 39615                           fsr0l	equ	0xFE9
 39616                           wreg	equ	0xFE8
 39617                           indf1	equ	0xFE7
 39618                           postdec1	equ	0xFE5
 39619                           plusw1	equ	0xFE3
 39620                           fsr1h	equ	0xFE2
 39621                           fsr1l	equ	0xFE1
 39622                           indf2	equ	0xFDF
 39623                           postinc2	equ	0xFDE
 39624                           postdec2	equ	0xFDD
 39625                           plusw2	equ	0xFDB
 39626                           fsr2h	equ	0xFDA
 39627                           fsr2l	equ	0xFD9
 39628                           status	equ	0xFD8
 39629                           
 39630 ;; *************** function _spi_tx *****************
 39631 ;; Defined at:
 39632 ;;		line 341 in file "spi.c"
 39633 ;; Parameters:    Size  Location     Type
 39634 ;;  data            2    0[COMRAM] PTR unsigned char 
 39635 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 39636 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 39637 ;;  length          2    2[COMRAM] unsigned int 
 39638 ;; Auto vars:     Size  Location     Type
 39639 ;;		None
 39640 ;; Return value:  Size  Location     Type
 39641 ;;                  1    wreg      void 
 39642 ;; Registers used:
 39643 ;;		wreg, status,2, status,0
 39644 ;; Tracked objects:
 39645 ;;		On entry : 0/0
 39646 ;;		On exit  : 0/0
 39647 ;;		Unchanged: 0/0
 39648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39651 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39652 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39653 ;;Total ram usage:        8 bytes
 39654 ;; Hardware stack levels used:    1
 39655 ;; This function calls:
 39656 ;;		Nothing
 39657 ;; This function is called by:
 39658 ;;		__flash_set_page_size
 39659 ;;		__flash_wakeup
 39660 ;;		__flash_copy_page_to_buffer
 39661 ;;		__flash_compare_page_to_buffer
 39662 ;;		__flash_write_page_from_buffer
 39663 ;;		__flash_erase_page
 39664 ;;		_flash_set_power_state
 39665 ;; This function uses a non-reentrant model
 39666 ;;
 39667                           
 39668                           	psect	text208
 39669  007326                     __ptext208:
 39670                           	opt stack 0
 39671  007326                     _spi_tx:
 39672                           	opt stack 27
 39673                           
 39674                           ;spi.c: 344: DMACON1bits.SSCON1 = 0;
 39675                           
 39676                           ; BSR set to: 0
 39677                           ;incstack = 0
 39678  007326  9E88               	bcf	3976,7,c	;volatile
 39679                           
 39680                           ;spi.c: 345: DMACON1bits.SSCON0 = 0;
 39681  007328  9C88               	bcf	3976,6,c	;volatile
 39682                           
 39683                           ;spi.c: 347: DMACON1bits.TXINC = 1;
 39684  00732A  8A88               	bsf	3976,5,c	;volatile
 39685                           
 39686                           ;spi.c: 349: DMACON1bits.RXINC = 0;
 39687  00732C  9888               	bcf	3976,4,c	;volatile
 39688                           
 39689                           ;spi.c: 351: DMACON1bits.DUPLEX1 = 0;
 39690  00732E  9688               	bcf	3976,3,c	;volatile
 39691                           
 39692                           ;spi.c: 352: DMACON1bits.DUPLEX0 = 1;
 39693  007330  8488               	bsf	3976,2,c	;volatile
 39694                           
 39695                           ;spi.c: 354: DMACON1bits.DLYINTEN = 0;
 39696  007332  9288               	bcf	3976,1,c	;volatile
 39697                           
 39698                           ;spi.c: 356: DMACON2bits.DLYCYC = 0b0000;
 39699  007334  9886               	bcf	3974,4,c	;volatile
 39700  007336  9A86               	bcf	3974,5,c	;volatile
 39701  007338  9C86               	bcf	3974,6,c	;volatile
 39702  00733A  9E86               	bcf	3974,7,c	;volatile
 39703                           
 39704                           ;spi.c: 358: DMACON2bits.INTLVL = 0b0000;
 39705  00733C  9086               	bcf	3974,0,c	;volatile
 39706  00733E  9286               	bcf	3974,1,c	;volatile
 39707  007340  9486               	bcf	3974,2,c	;volatile
 39708  007342  9686               	bcf	3974,3,c	;volatile
 39709                           
 39710                           ;spi.c: 361: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39711  007344  5002               	movf	spi_tx@data+1,w,c
 39712  007346  6E6A               	movwf	3946,c	;volatile
 39713                           
 39714                           ;spi.c: 362: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39715  007348  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 39716                           
 39717                           ;spi.c: 365: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 39718  00734C  0EFF               	movlw	255
 39719  00734E  6E05               	movwf	??_spi_tx& (0+255),c
 39720  007350  0EFF               	movlw	255
 39721  007352  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 39722  007354  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 39723  007358  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 39724  00735C  5005               	movf	??_spi_tx,w,c
 39725  00735E  2607               	addwf	??_spi_tx+2,f,c
 39726  007360  5006               	movf	??_spi_tx+1,w,c
 39727  007362  2208               	addwfc	??_spi_tx+3,f,c
 39728  007364  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 39729  007368  6A08               	clrf	??_spi_tx+3,c
 39730  00736A  5007               	movf	??_spi_tx+2,w,c
 39731  00736C  6E66               	movwf	3942,c	;volatile
 39732                           
 39733                           ;spi.c: 366: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 39734  00736E  0403               	decf	spi_tx@length,w,c
 39735  007370  6E67               	movwf	3943,c	;volatile
 39736                           
 39737                           ;spi.c: 369: LATDbits.LD7 = 0;
 39738  007372  9E8C               	bcf	3980,7,c	;volatile
 39739                           
 39740                           ;spi.c: 370: DMACON1bits.DMAEN = 1;
 39741  007374  8088               	bsf	3976,0,c	;volatile
 39742  007376  B088               	btfsc	3976,0,c	;volatile
 39743  007378  D7FE               	goto	l2820
 39744                           
 39745                           ;spi.c: 372: LATDbits.LD7 = 1;
 39746  00737A  8E8C               	bsf	3980,7,c	;volatile
 39747  00737C  0012               	return		;funcret
 39748  00737E                     __end_of_spi_tx:
 39749                           	opt stack 0
 39750                           tosu	equ	0xFFF
 39751                           tosh	equ	0xFFE
 39752                           tosl	equ	0xFFD
 39753                           pclath	equ	0xFFA
 39754                           tblptru	equ	0xFF8
 39755                           tblptrh	equ	0xFF7
 39756                           tblptrl	equ	0xFF6
 39757                           tablat	equ	0xFF5
 39758                           prodh	equ	0xFF4
 39759                           prodl	equ	0xFF3
 39760                           intcon	equ	0xFF2
 39761                           intcon2	equ	0xFF1
 39762                           intcon3	equ	0xFF0
 39763                           indf0	equ	0xFEF
 39764                           postinc0	equ	0xFEE
 39765                           fsr0h	equ	0xFEA
 39766                           fsr0l	equ	0xFE9
 39767                           wreg	equ	0xFE8
 39768                           indf1	equ	0xFE7
 39769                           postdec1	equ	0xFE5
 39770                           plusw1	equ	0xFE3
 39771                           fsr1h	equ	0xFE2
 39772                           fsr1l	equ	0xFE1
 39773                           indf2	equ	0xFDF
 39774                           postinc2	equ	0xFDE
 39775                           postdec2	equ	0xFDD
 39776                           plusw2	equ	0xFDB
 39777                           fsr2h	equ	0xFDA
 39778                           fsr2l	equ	0xFD9
 39779                           status	equ	0xFD8
 39780                           
 39781 ;; *************** function __flash_get_status *****************
 39782 ;; Defined at:
 39783 ;;		line 113 in file "flash.c"
 39784 ;; Parameters:    Size  Location     Type
 39785 ;;		None
 39786 ;; Auto vars:     Size  Location     Type
 39787 ;;  status          2   15[COMRAM] unsigned int 
 39788 ;;  command         1   14[COMRAM] unsigned char 
 39789 ;; Return value:  Size  Location     Type
 39790 ;;                  2   12[COMRAM] unsigned int 
 39791 ;; Registers used:
 39792 ;;		wreg, status,2, status,0, cstack
 39793 ;; Tracked objects:
 39794 ;;		On entry : 0/0
 39795 ;;		On exit  : 0/0
 39796 ;;		Unchanged: 0/0
 39797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39799 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39801 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39802 ;;Total ram usage:        5 bytes
 39803 ;; Hardware stack levels used:    1
 39804 ;; Hardware stack levels required when called:    1
 39805 ;; This function calls:
 39806 ;;		_spi_tx_rx
 39807 ;; This function is called by:
 39808 ;;		__flash_compare_page_to_buffer
 39809 ;;		__flash_is_busy
 39810 ;; This function uses a non-reentrant model
 39811 ;;
 39812                           
 39813                           	psect	text209
 39814  007C6A                     __ptext209:
 39815                           	opt stack 0
 39816  007C6A                     __flash_get_status:
 39817                           	opt stack 25
 39818                           
 39819                           ;flash.c: 117: uint8_t command = 0xD7;
 39820                           
 39821                           ;incstack = 0
 39822  007C6A  0ED7               	movlw	215
 39823  007C6C  6E0F               	movwf	__flash_get_status@command,c
 39824                           
 39825                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 39826  007C6E  0E0F               	movlw	low __flash_get_status@command
 39827  007C70  6E01               	movwf	spi_tx_rx@command,c
 39828  007C72  0E00               	movlw	high __flash_get_status@command
 39829  007C74  6E02               	movwf	spi_tx_rx@command+1,c
 39830  007C76  0E00               	movlw	0
 39831  007C78  6E04               	movwf	spi_tx_rx@command_length+1,c
 39832  007C7A  0E01               	movlw	1
 39833  007C7C  6E03               	movwf	spi_tx_rx@command_length,c
 39834  007C7E  0E10               	movlw	low __flash_get_status@status
 39835  007C80  6E05               	movwf	spi_tx_rx@data,c
 39836  007C82  0E00               	movlw	high __flash_get_status@status
 39837  007C84  6E06               	movwf	spi_tx_rx@data+1,c
 39838  007C86  0E00               	movlw	0
 39839  007C88  6E08               	movwf	spi_tx_rx@data_length+1,c
 39840  007C8A  0E02               	movlw	2
 39841  007C8C  6E07               	movwf	spi_tx_rx@data_length,c
 39842  007C8E  ECBE  F030         	call	_spi_tx_rx	;wreg free
 39843                           
 39844                           ;flash.c: 120: return status;
 39845  007C92  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 39846  007C96  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 39847  007C9A  0012               	return	
 39848  007C9C                     __end_of__flash_get_status:
 39849                           	opt stack 0
 39850                           tosu	equ	0xFFF
 39851                           tosh	equ	0xFFE
 39852                           tosl	equ	0xFFD
 39853                           pclath	equ	0xFFA
 39854                           tblptru	equ	0xFF8
 39855                           tblptrh	equ	0xFF7
 39856                           tblptrl	equ	0xFF6
 39857                           tablat	equ	0xFF5
 39858                           prodh	equ	0xFF4
 39859                           prodl	equ	0xFF3
 39860                           intcon	equ	0xFF2
 39861                           intcon2	equ	0xFF1
 39862                           intcon3	equ	0xFF0
 39863                           indf0	equ	0xFEF
 39864                           postinc0	equ	0xFEE
 39865                           fsr0h	equ	0xFEA
 39866                           fsr0l	equ	0xFE9
 39867                           wreg	equ	0xFE8
 39868                           indf1	equ	0xFE7
 39869                           postdec1	equ	0xFE5
 39870                           plusw1	equ	0xFE3
 39871                           fsr1h	equ	0xFE2
 39872                           fsr1l	equ	0xFE1
 39873                           indf2	equ	0xFDF
 39874                           postinc2	equ	0xFDE
 39875                           postdec2	equ	0xFDD
 39876                           plusw2	equ	0xFDB
 39877                           fsr2h	equ	0xFDA
 39878                           fsr2l	equ	0xFD9
 39879                           status	equ	0xFD8
 39880                           
 39881 ;; *************** function _spi_tx_rx *****************
 39882 ;; Defined at:
 39883 ;;		line 432 in file "spi.c"
 39884 ;; Parameters:    Size  Location     Type
 39885 ;;  command         2    0[COMRAM] PTR unsigned char 
 39886 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 39887 ;;  command_leng    2    2[COMRAM] unsigned int 
 39888 ;;  data            2    4[COMRAM] PTR unsigned char 
 39889 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 39890 ;;		 -> buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 39891 ;;		 -> fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_
      +cluster(2), 
 39892 ;;		 -> _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(
      +1), 
 39893 ;;		 -> _flash_get_status@status(2), msd_buffer(512), RAM(3759), 
 39894 ;;  data_length     2    6[COMRAM] unsigned int 
 39895 ;; Auto vars:     Size  Location     Type
 39896 ;;		None
 39897 ;; Return value:  Size  Location     Type
 39898 ;;                  1    wreg      void 
 39899 ;; Registers used:
 39900 ;;		wreg, status,2, status,0
 39901 ;; Tracked objects:
 39902 ;;		On entry : 0/0
 39903 ;;		On exit  : 0/0
 39904 ;;		Unchanged: 0/0
 39905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39906 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39909 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39910 ;;Total ram usage:       12 bytes
 39911 ;; Hardware stack levels used:    1
 39912 ;; This function calls:
 39913 ;;		Nothing
 39914 ;; This function is called by:
 39915 ;;		__flash_get_status
 39916 ;;		__flash_partial_read
 39917 ;; This function uses a non-reentrant model
 39918 ;;
 39919                           
 39920                           	psect	text210
 39921  00617C                     __ptext210:
 39922                           	opt stack 0
 39923  00617C                     _spi_tx_rx:
 39924                           	opt stack 25
 39925                           
 39926                           ;spi.c: 435: DMACON1bits.SSCON1 = 0;
 39927                           
 39928                           ;incstack = 0
 39929  00617C  9E88               	bcf	3976,7,c	;volatile
 39930                           
 39931                           ;spi.c: 436: DMACON1bits.SSCON0 = 0;
 39932  00617E  9C88               	bcf	3976,6,c	;volatile
 39933                           
 39934                           ;spi.c: 438: DMACON1bits.TXINC = 1;
 39935  006180  8A88               	bsf	3976,5,c	;volatile
 39936                           
 39937                           ;spi.c: 440: DMACON1bits.RXINC = 0;
 39938  006182  9888               	bcf	3976,4,c	;volatile
 39939                           
 39940                           ;spi.c: 442: DMACON1bits.DUPLEX1 = 0;
 39941  006184  9688               	bcf	3976,3,c	;volatile
 39942                           
 39943                           ;spi.c: 443: DMACON1bits.DUPLEX0 = 1;
 39944  006186  8488               	bsf	3976,2,c	;volatile
 39945                           
 39946                           ;spi.c: 445: DMACON1bits.DLYINTEN = 0;
 39947  006188  9288               	bcf	3976,1,c	;volatile
 39948                           
 39949                           ;spi.c: 447: DMACON2bits.DLYCYC = 0b0000;
 39950  00618A  9886               	bcf	3974,4,c	;volatile
 39951  00618C  9A86               	bcf	3974,5,c	;volatile
 39952  00618E  9C86               	bcf	3974,6,c	;volatile
 39953  006190  9E86               	bcf	3974,7,c	;volatile
 39954                           
 39955                           ;spi.c: 449: DMACON2bits.INTLVL = 0b0000;
 39956  006192  9086               	bcf	3974,0,c	;volatile
 39957  006194  9286               	bcf	3974,1,c	;volatile
 39958  006196  9486               	bcf	3974,2,c	;volatile
 39959  006198  9686               	bcf	3974,3,c	;volatile
 39960                           
 39961                           ;spi.c: 452: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39962  00619A  5002               	movf	spi_tx_rx@command+1,w,c
 39963  00619C  6E6A               	movwf	3946,c	;volatile
 39964                           
 39965                           ;spi.c: 453: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39966  00619E  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 39967                           
 39968                           ;spi.c: 456: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39969  0061A2  0EFF               	movlw	255
 39970  0061A4  6E09               	movwf	??_spi_tx_rx& (0+255),c
 39971  0061A6  0EFF               	movlw	255
 39972  0061A8  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 39973  0061AA  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 39974  0061AE  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 39975  0061B2  5009               	movf	??_spi_tx_rx,w,c
 39976  0061B4  260B               	addwf	??_spi_tx_rx+2,f,c
 39977  0061B6  500A               	movf	??_spi_tx_rx+1,w,c
 39978  0061B8  220C               	addwfc	??_spi_tx_rx+3,f,c
 39979  0061BA  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39980  0061BE  6A0C               	clrf	??_spi_tx_rx+3,c
 39981  0061C0  500B               	movf	??_spi_tx_rx+2,w,c
 39982  0061C2  6E66               	movwf	3942,c	;volatile
 39983                           
 39984                           ;spi.c: 457: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39985  0061C4  0403               	decf	spi_tx_rx@command_length,w,c
 39986  0061C6  6E67               	movwf	3943,c	;volatile
 39987                           
 39988                           ;spi.c: 460: LATDbits.LD7 = 0;
 39989  0061C8  9E8C               	bcf	3980,7,c	;volatile
 39990                           
 39991                           ;spi.c: 463: DMACON1bits.DMAEN = 1;
 39992  0061CA  8088               	bsf	3976,0,c	;volatile
 39993  0061CC  B088               	btfsc	3976,0,c	;volatile
 39994  0061CE  D7FE               	goto	l2835
 39995                           
 39996                           ;spi.c: 467: DMACON1bits.TXINC = 0;
 39997  0061D0  9A88               	bcf	3976,5,c	;volatile
 39998                           
 39999                           ;spi.c: 469: DMACON1bits.RXINC = 1;
 40000  0061D2  8888               	bsf	3976,4,c	;volatile
 40001                           
 40002                           ;spi.c: 471: DMACON1bits.DUPLEX1 = 0;
 40003  0061D4  9688               	bcf	3976,3,c	;volatile
 40004                           
 40005                           ;spi.c: 472: DMACON1bits.DUPLEX0 = 0;
 40006  0061D6  9488               	bcf	3976,2,c	;volatile
 40007                           
 40008                           ;spi.c: 475: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 40009  0061D8  5006               	movf	spi_tx_rx@data+1,w,c
 40010  0061DA  6E68               	movwf	3944,c	;volatile
 40011                           
 40012                           ;spi.c: 476: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 40013  0061DC  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 40014                           
 40015                           ;spi.c: 479: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 40016  0061E0  0EFF               	movlw	255
 40017  0061E2  6E09               	movwf	??_spi_tx_rx& (0+255),c
 40018  0061E4  0EFF               	movlw	255
 40019  0061E6  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 40020  0061E8  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 40021  0061EC  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 40022  0061F0  5009               	movf	??_spi_tx_rx,w,c
 40023  0061F2  260B               	addwf	??_spi_tx_rx+2,f,c
 40024  0061F4  500A               	movf	??_spi_tx_rx+1,w,c
 40025  0061F6  220C               	addwfc	??_spi_tx_rx+3,f,c
 40026  0061F8  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 40027  0061FC  6A0C               	clrf	??_spi_tx_rx+3,c
 40028  0061FE  500B               	movf	??_spi_tx_rx+2,w,c
 40029  006200  6E66               	movwf	3942,c	;volatile
 40030                           
 40031                           ;spi.c: 480: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 40032  006202  0407               	decf	spi_tx_rx@data_length,w,c
 40033  006204  6E67               	movwf	3943,c	;volatile
 40034                           
 40035                           ;spi.c: 483: DMACON1bits.DMAEN = 1;
 40036  006206  8088               	bsf	3976,0,c	;volatile
 40037  006208  B088               	btfsc	3976,0,c	;volatile
 40038  00620A  D7FE               	goto	l2838
 40039                           
 40040                           ;spi.c: 487: LATDbits.LD7 = 1;
 40041  00620C  8E8C               	bsf	3980,7,c	;volatile
 40042  00620E  0012               	return		;funcret
 40043  006210                     __end_of_spi_tx_rx:
 40044                           	opt stack 0
 40045                           tosu	equ	0xFFF
 40046                           tosh	equ	0xFFE
 40047                           tosl	equ	0xFFD
 40048                           pclath	equ	0xFFA
 40049                           tblptru	equ	0xFF8
 40050                           tblptrh	equ	0xFF7
 40051                           tblptrl	equ	0xFF6
 40052                           tablat	equ	0xFF5
 40053                           prodh	equ	0xFF4
 40054                           prodl	equ	0xFF3
 40055                           intcon	equ	0xFF2
 40056                           intcon2	equ	0xFF1
 40057                           intcon3	equ	0xFF0
 40058                           indf0	equ	0xFEF
 40059                           postinc0	equ	0xFEE
 40060                           fsr0h	equ	0xFEA
 40061                           fsr0l	equ	0xFE9
 40062                           wreg	equ	0xFE8
 40063                           indf1	equ	0xFE7
 40064                           postdec1	equ	0xFE5
 40065                           plusw1	equ	0xFE3
 40066                           fsr1h	equ	0xFE2
 40067                           fsr1l	equ	0xFE1
 40068                           indf2	equ	0xFDF
 40069                           postinc2	equ	0xFDE
 40070                           postdec2	equ	0xFDD
 40071                           plusw2	equ	0xFDB
 40072                           fsr2h	equ	0xFDA
 40073                           fsr2l	equ	0xFD9
 40074                           status	equ	0xFD8
 40075                           
 40076 ;; *************** function _USBTransferOnePacket *****************
 40077 ;; Defined at:
 40078 ;;		line 995 in file "usb_device.c"
 40079 ;; Parameters:    Size  Location     Type
 40080 ;;  ep              1    wreg     unsigned char 
 40081 ;;  dir             1    0[COMRAM] unsigned char 
 40082 ;;  data            2    1[COMRAM] PTR unsigned char 
 40083 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 40084 ;;		 -> msd_cbw(31), NULL(0), 
 40085 ;;  len             1    3[COMRAM] unsigned char 
 40086 ;; Auto vars:     Size  Location     Type
 40087 ;;  ep              1    8[COMRAM] unsigned char 
 40088 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 40089 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 40090 ;; Return value:  Size  Location     Type
 40091 ;;                  2    0[COMRAM] PTR void 
 40092 ;; Registers used:
 40093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40094 ;; Tracked objects:
 40095 ;;		On entry : 0/0
 40096 ;;		On exit  : 0/0
 40097 ;;		Unchanged: 0/0
 40098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40100 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40101 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40102 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40103 ;;Total ram usage:       11 bytes
 40104 ;; Hardware stack levels used:    1
 40105 ;; This function calls:
 40106 ;;		Nothing
 40107 ;; This function is called by:
 40108 ;;		_USBMSDInit
 40109 ;;		_USBCheckMSDRequest
 40110 ;;		_MSDTasks
 40111 ;;		_MSDProcessCommandMediaPresent
 40112 ;;		_MSDReadHandler
 40113 ;;		_MSDWriteHandler
 40114 ;;		_MSDTransferTerminated
 40115 ;;		_APP_DeviceCustomHIDInitialize
 40116 ;;		_APP_DeviceCustomHIDTasks
 40117 ;; This function uses a non-reentrant model
 40118 ;;
 40119                           
 40120                           	psect	text211
 40121  0046F2                     __ptext211:
 40122                           	opt stack 0
 40123  0046F2                     _USBTransferOnePacket:
 40124                           	opt stack 27
 40125                           
 40126                           ;incstack = 0
 40127                           ;USBTransferOnePacket@ep stored from wreg
 40128  0046F2  6E09               	movwf	USBTransferOnePacket@ep,c
 40129                           
 40130                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 40131  0046F4  5001               	movf	USBTransferOnePacket@dir,w,c
 40132  0046F6  B4D8               	btfsc	status,2,c
 40133  0046F8  D007               	goto	l183
 40134                           
 40135                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 40136  0046FA  5009               	movf	USBTransferOnePacket@ep,w,c
 40137  0046FC  0D02               	mullw	2
 40138  0046FE  0EC5               	movlw	low _pBDTEntryIn
 40139  004700  24F3               	addwf	prodl,w,c
 40140  004702  6ED9               	movwf	fsr2l,c
 40141  004704  0E00               	movlw	high _pBDTEntryIn
 40142  004706  D006               	goto	L40
 40143  004708                     l183:
 40144                           
 40145                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 40146  004708  5009               	movf	USBTransferOnePacket@ep,w,c
 40147  00470A  0D02               	mullw	2
 40148  00470C  0E40               	movlw	low _pBDTEntryOut
 40149  00470E  24F3               	addwf	prodl,w,c
 40150  004710  6ED9               	movwf	fsr2l,c
 40151  004712  0E01               	movlw	high _pBDTEntryOut
 40152  004714                     L40:
 40153  004714  20F4               	addwfc	prodh,w,c
 40154  004716  6EDA               	movwf	fsr2h,c
 40155  004718  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 40156  00471C  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 40157                           
 40158                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 40159  004720  500A               	movf	USBTransferOnePacket@handle,w,c
 40160  004722  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 40161  004724  A4D8               	btfss	status,2,c
 40162  004726  D005               	goto	l185
 40163                           
 40164                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 40165  004728  0E00               	movlw	0
 40166  00472A  6E01               	movwf	?_USBTransferOnePacket,c
 40167  00472C  0E00               	movlw	0
 40168  00472E  6E02               	movwf	?_USBTransferOnePacket+1,c
 40169  004730  0012               	return	
 40170  004732                     l185:
 40171                           
 40172                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 40173  004732  EE20 F002          	lfsr	2,2
 40174  004736  500A               	movf	USBTransferOnePacket@handle,w,c
 40175  004738  26D9               	addwf	fsr2l,f,c
 40176  00473A  500B               	movf	USBTransferOnePacket@handle+1,w,c
 40177  00473C  22DA               	addwfc	fsr2h,f,c
 40178  00473E  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 40179  004742  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 40180                           
 40181                           ;usb_device.c: 1030: handle->CNT = len;
 40182  004746  EE20 F001          	lfsr	2,1
 40183  00474A  500A               	movf	USBTransferOnePacket@handle,w,c
 40184  00474C  26D9               	addwf	fsr2l,f,c
 40185  00474E  500B               	movf	USBTransferOnePacket@handle+1,w,c
 40186  004750  22DA               	addwfc	fsr2h,f,c
 40187  004752  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 40188                           
 40189                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 40190  004756  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 40191  00475A  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 40192  00475E  0E40               	movlw	64
 40193  004760  16DF               	andwf	indf2,f,c
 40194                           
 40195                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 40196  004762  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 40197  004766  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 40198  00476A  0E00               	movlw	0
 40199  00476C  86DB               	bsf	plusw2,3,c
 40200                           
 40201                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 40202  00476E  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 40203  004772  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 40204  004776  0E00               	movlw	0
 40205  004778  8EDB               	bsf	plusw2,7,c
 40206                           
 40207                           ;usb_device.c: 1036: if(dir != 0)
 40208  00477A  5001               	movf	USBTransferOnePacket@dir,w,c
 40209  00477C  B4D8               	btfsc	status,2,c
 40210  00477E  D018               	goto	l187
 40211                           
 40212                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 40213  004780  5009               	movf	USBTransferOnePacket@ep,w,c
 40214  004782  0D02               	mullw	2
 40215  004784  0EC5               	movlw	low _pBDTEntryIn
 40216  004786  24F3               	addwf	prodl,w,c
 40217  004788  6ED9               	movwf	fsr2l,c
 40218  00478A  0E00               	movlw	high _pBDTEntryIn
 40219  00478C  20F4               	addwfc	prodh,w,c
 40220  00478E  6EDA               	movwf	fsr2h,c
 40221  004790  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 40222  004794  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 40223  004798  0E04               	movlw	4
 40224  00479A  1805               	xorwf	??_USBTransferOnePacket,w,c
 40225  00479C  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 40226  00479E  5006               	movf	??_USBTransferOnePacket+1,w,c
 40227  0047A0  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 40228  0047A2  5009               	movf	USBTransferOnePacket@ep,w,c
 40229  0047A4  0D02               	mullw	2
 40230  0047A6  0EC5               	movlw	low _pBDTEntryIn
 40231  0047A8  24F3               	addwf	prodl,w,c
 40232  0047AA  6ED9               	movwf	fsr2l,c
 40233  0047AC  0E00               	movlw	high _pBDTEntryIn
 40234  0047AE  D017               	goto	L41
 40235  0047B0                     l187:
 40236                           
 40237                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 40238  0047B0  5009               	movf	USBTransferOnePacket@ep,w,c
 40239  0047B2  0D02               	mullw	2
 40240  0047B4  0E40               	movlw	low _pBDTEntryOut
 40241  0047B6  24F3               	addwf	prodl,w,c
 40242  0047B8  6ED9               	movwf	fsr2l,c
 40243  0047BA  0E01               	movlw	high _pBDTEntryOut
 40244  0047BC  20F4               	addwfc	prodh,w,c
 40245  0047BE  6EDA               	movwf	fsr2h,c
 40246  0047C0  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 40247  0047C4  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 40248  0047C8  0E04               	movlw	4
 40249  0047CA  1805               	xorwf	??_USBTransferOnePacket,w,c
 40250  0047CC  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 40251  0047CE  5006               	movf	??_USBTransferOnePacket+1,w,c
 40252  0047D0  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 40253  0047D2  5009               	movf	USBTransferOnePacket@ep,w,c
 40254  0047D4  0D02               	mullw	2
 40255  0047D6  0E40               	movlw	low _pBDTEntryOut
 40256  0047D8  24F3               	addwf	prodl,w,c
 40257  0047DA  6ED9               	movwf	fsr2l,c
 40258  0047DC  0E01               	movlw	high _pBDTEntryOut
 40259  0047DE                     L41:
 40260  0047DE  20F4               	addwfc	prodh,w,c
 40261  0047E0  6EDA               	movwf	fsr2h,c
 40262  0047E2  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 40263  0047E6  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 40264                           
 40265                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 40266  0047EA  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 40267  0047EE  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 40268  0047F2  0012               	return	
 40269  0047F4                     __end_of_USBTransferOnePacket:
 40270                           	opt stack 0
 40271                           tosu	equ	0xFFF
 40272                           tosh	equ	0xFFE
 40273                           tosl	equ	0xFFD
 40274                           pclath	equ	0xFFA
 40275                           tblptru	equ	0xFF8
 40276                           tblptrh	equ	0xFF7
 40277                           tblptrl	equ	0xFF6
 40278                           tablat	equ	0xFF5
 40279                           prodh	equ	0xFF4
 40280                           prodl	equ	0xFF3
 40281                           intcon	equ	0xFF2
 40282                           intcon2	equ	0xFF1
 40283                           intcon3	equ	0xFF0
 40284                           indf0	equ	0xFEF
 40285                           postinc0	equ	0xFEE
 40286                           fsr0h	equ	0xFEA
 40287                           fsr0l	equ	0xFE9
 40288                           wreg	equ	0xFE8
 40289                           indf1	equ	0xFE7
 40290                           postdec1	equ	0xFE5
 40291                           plusw1	equ	0xFE3
 40292                           fsr1h	equ	0xFE2
 40293                           fsr1l	equ	0xFE1
 40294                           indf2	equ	0xFDF
 40295                           postinc2	equ	0xFDE
 40296                           postdec2	equ	0xFDD
 40297                           plusw2	equ	0xFDB
 40298                           fsr2h	equ	0xFDA
 40299                           fsr2l	equ	0xFD9
 40300                           status	equ	0xFD8
 40301                           tosu	equ	0xFFF
 40302                           tosh	equ	0xFFE
 40303                           tosl	equ	0xFFD
 40304                           pclath	equ	0xFFA
 40305                           tblptru	equ	0xFF8
 40306                           tblptrh	equ	0xFF7
 40307                           tblptrl	equ	0xFF6
 40308                           tablat	equ	0xFF5
 40309                           prodh	equ	0xFF4
 40310                           prodl	equ	0xFF3
 40311                           intcon	equ	0xFF2
 40312                           intcon2	equ	0xFF1
 40313                           intcon3	equ	0xFF0
 40314                           indf0	equ	0xFEF
 40315                           postinc0	equ	0xFEE
 40316                           fsr0h	equ	0xFEA
 40317                           fsr0l	equ	0xFE9
 40318                           wreg	equ	0xFE8
 40319                           indf1	equ	0xFE7
 40320                           postdec1	equ	0xFE5
 40321                           plusw1	equ	0xFE3
 40322                           fsr1h	equ	0xFE2
 40323                           fsr1l	equ	0xFE1
 40324                           indf2	equ	0xFDF
 40325                           postinc2	equ	0xFDE
 40326                           postdec2	equ	0xFDD
 40327                           plusw2	equ	0xFDB
 40328                           fsr2h	equ	0xFDA
 40329                           fsr2l	equ	0xFD9
 40330                           status	equ	0xFD8
 40331                           
 40332                           	psect	text212
 40333  000000                     __ptext212:
 40334                           	opt stack 0
 40335                           tosu	equ	0xFFF
 40336                           tosh	equ	0xFFE
 40337                           tosl	equ	0xFFD
 40338                           pclath	equ	0xFFA
 40339                           tblptru	equ	0xFF8
 40340                           tblptrh	equ	0xFF7
 40341                           tblptrl	equ	0xFF6
 40342                           tablat	equ	0xFF5
 40343                           prodh	equ	0xFF4
 40344                           prodl	equ	0xFF3
 40345                           intcon	equ	0xFF2
 40346                           intcon2	equ	0xFF1
 40347                           intcon3	equ	0xFF0
 40348                           indf0	equ	0xFEF
 40349                           postinc0	equ	0xFEE
 40350                           fsr0h	equ	0xFEA
 40351                           fsr0l	equ	0xFE9
 40352                           wreg	equ	0xFE8
 40353                           indf1	equ	0xFE7
 40354                           postdec1	equ	0xFE5
 40355                           plusw1	equ	0xFE3
 40356                           fsr1h	equ	0xFE2
 40357                           fsr1l	equ	0xFE1
 40358                           indf2	equ	0xFDF
 40359                           postinc2	equ	0xFDE
 40360                           postdec2	equ	0xFDD
 40361                           plusw2	equ	0xFDB
 40362                           fsr2h	equ	0xFDA
 40363                           fsr2l	equ	0xFD9
 40364                           status	equ	0xFD8
 40365                           
 40366                           	psect	rparam
 40367  0000                     tosu	equ	0xFFF
 40368                           tosh	equ	0xFFE
 40369                           tosl	equ	0xFFD
 40370                           pclath	equ	0xFFA
 40371                           tblptru	equ	0xFF8
 40372                           tblptrh	equ	0xFF7
 40373                           tblptrl	equ	0xFF6
 40374                           tablat	equ	0xFF5
 40375                           prodh	equ	0xFF4
 40376                           prodl	equ	0xFF3
 40377                           intcon	equ	0xFF2
 40378                           intcon2	equ	0xFF1
 40379                           intcon3	equ	0xFF0
 40380                           indf0	equ	0xFEF
 40381                           postinc0	equ	0xFEE
 40382                           fsr0h	equ	0xFEA
 40383                           fsr0l	equ	0xFE9
 40384                           wreg	equ	0xFE8
 40385                           indf1	equ	0xFE7
 40386                           postdec1	equ	0xFE5
 40387                           plusw1	equ	0xFE3
 40388                           fsr1h	equ	0xFE2
 40389                           fsr1l	equ	0xFE1
 40390                           indf2	equ	0xFDF
 40391                           postinc2	equ	0xFDE
 40392                           postdec2	equ	0xFDD
 40393                           plusw2	equ	0xFDB
 40394                           fsr2h	equ	0xFDA
 40395                           fsr2l	equ	0xFD9
 40396                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    823
    Data        38
    BSS         2159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     89     160
    BANK1           256      0     253
    BANK2           256      0     208
    BANK3           256      0     128
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_truncate@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), 
		 -> _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK1[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), RAM(DATA[3759]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK1[50]), RAM(DATA[3759]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 3759
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), 
		 -> _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), RAM(DATA[3759]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), 
		 -> fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), RAM(DATA[3759]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), 
		 -> _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_api_prepare
    _main->_bootloader_run
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    _fat_format->_flash_page_write
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_find_file
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->__flash_partial_read
    _APP_DeviceCustomHIDTasks->_api_prepare
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__read_fat
    _fat_get_file_size->_flash_partial_read
    __fill_buffer_get_status->_flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _api_parse->__parse_command_long
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u32
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_create
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__get_first_cluster
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_get_file_information
    _fat_get_file_information->__root_is_available
    __root_is_available->_flash_partial_read
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    _flash_is_busy->__flash_is_busy
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    __parse_file_rename->_fat_rename_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 1508279
                                             79 BANK0     10    10      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   93854
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   86544
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      44
                           _i2c_init
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   28085
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6304
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6060
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   21781
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    5367
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16414
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  110387
                                             93 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   47980
                                              0 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   44971
                                              0 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   17370
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5816
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   99240
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   99240
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   94076
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   47789
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   46031
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   22671
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15083
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14738
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   12464
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5068
                                             43 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    4787
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  472911
                                             75 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   82402
                                             93 COMRAM     1     1      0
                                             71 BANK0      4     0      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   45185
                                             51 BANK0     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  51    41     10   36386
                                              0 BANK0     51    41     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             38    24     14   19282
                                             55 COMRAM    38    24     14
                          __read_fat
               __sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    7995
                                             47 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    2866
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        5     1      4   16961
                                             62 COMRAM     5     1      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    9819
                                             67 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  387196
                                             85 COMRAM     3     3      0
                                             51 BANK0      3     0      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   86566
                                             43 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   83335
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   80147
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0   15330
                                             36 COMRAM     1     1      0
                  __display_itoa_u32
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0   15351
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   21962
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    6     0      6   14943
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3163
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  299984
                                             82 COMRAM     3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
               __parse_file_truncate
 ---------------------------------------------------------------------------------
 (3) __parse_file_truncate                                 2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   39294
                                             66 COMRAM     3     1      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     38    34      4   39073
                                             62 COMRAM     4     0      4
                                              0 BANK0     34    34      0
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   68995
                                             62 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      5     5      0   68818
                                             57 COMRAM     5     5      0
                       __delete_root
                 __get_first_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                  10     8      2    7994
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         7     7      0   21685
                                             40 COMRAM     7     7      0
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   3     1      2   82238
                                             79 COMRAM     3     1      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     53    45      8   82039
                                             67 COMRAM    12     4      8
                                              0 BANK0     41    41      0
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (5) _fat_get_empty_clusters                              12    10      2    8218
                                             47 COMRAM    12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    9375
                                             47 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    8126
                                             54 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  109007
                                             74 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  63    59      4  108764
                                             62 COMRAM    12     8      4
                                              0 BANK0     51    51      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2   16584
                                             54 COMRAM     8     6      2
                 __root_is_available
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   7     7      0    8036
                                             47 COMRAM     7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __write_root                                          8     6      2   21951
                                             40 COMRAM     8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __write_fat                                           8     4      4   22575
                                             40 COMRAM     8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   21571
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) _flash_is_busy                                        1     1      0    2380
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (7) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __update_modified_time                                2     0      2     177
                                              4 COMRAM     2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (5) __get_time                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8349
                                             47 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_empty_cluster                                  10     8      2    8350
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7857
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4187
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             __update_modified_time
               __get_date
               __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_find_file
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _fat_get_empty_clusters
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __get_first_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
         __parse_file_modify
         __parse_file_rename
           _fat_rename_file
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_truncate
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_file_append
         _fat_append_to_file
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           __update_modified_time
             __get_date
             __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_set_configuration
             _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_find_file
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _fat_get_empty_clusters
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __get_first_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
       __parse_file_modify
       __parse_file_rename
         _fat_rename_file
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_truncate
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_file
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file_fast
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
     _flash_is_busy
       __flash_is_busy
         __flash_get_status
           _spi_tx_rx
         __flash_wakeup
           _spi_tx
       _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D0       9       81.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     34C      31        0.0%
DATA                 0      0     94C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Sep 03 23:34:38 2018

                          __end_of_fat_read_from_file 617C  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
                            fat_create_file@extension 0046  
              __end_of_i2c_display_send_init_sequence 7D26  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 7CFA  
                                 __system_timer0_init 7F8A  
                                                  _os 00B9  
                                       _USBDeviceInit 3BDA  
                                  _USBCheckHIDRequest 4AD6  
                __bootloader_verify_file@return_value 0089  
                                    ??__flash_is_busy 0012  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0031  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 546C  
                                                 l210 5E50  
                                                 l220 481C  
                                                 l141 3C48  
                                                 l214 60B6  
                                                 l310 59EC  
                                                 l150 3654  
                                                 l143 3C84  
                                                 l303 7A92  
                                                 l151 364C  
                                                 l320 700C  
                                                 l208 5E36  
                                                 l224 489E  
                                                 l304 7A90  
                                                 l152 364A  
                                                 l241 50E2  
                                                 l233 5036  
                                                 l161 36CC  
                                                 l242 50AA  
                                                 l330 5416  
                                                 l322 7056  
                                                 l235 5040  
                                                 l331 53DC  
                                                 l251 4176  
                                                 l411 4B24  
                                                 l219 4874  
                                                 l139 3C20  
                                                 l171 375A  
                                                 l163 36E2  
                                                 l155 366E  
                                                 l252 415C  
                                                 l412 4AF2  
                                                 l260 4EA6  
                                                 l164 36EE  
                                                 l156 367E  
                                                 l237 50A2  
                                                 l333 53FC  
                                                 l309 59F2  
                                                 l173 377E  
                                                 l165 3716  
                                                 l157 3686  
                                                 l238 506A  
                                                 l422 4B46  
                                                 l414 4B36  
                         __end_of_USBStdGetDscHandler 3E62  
                                                 l262 4F1A  
                                                 l350 4A34  
                                                 l166 3720  
                                                 l158 369A  
                                                 l183 4708  
                                                 l191 4338  
                                                 l423 4B5E  
                                                 l415 4B10  
                                                 l271 3D4E  
                                                 l343 4A92  
                                                 l175 379A  
                                                 l159 36A6  
                                                 l328 5394  
                                                 l248 4100  
                                                 l424 4B6A  
                                                 l360 186C  
                                                 l272 3DDC  
                                                 l352 4A3A  
                                                 l344 4A04  
                                                 l168 3732  
                                                 l185 4732  
                                                 l329 5398  
                                                 l249 40DE  
                                                 l521 45DC  
                                                 l425 4B82  
                                                 l361 1872  
                                                 l281 5A82  
                                                 l353 4A58  
                                                 l610 6F0E  
                                                 l178 79C8  
                                                 l418 4B8E  
                                                 l530 55C0  
                                                 l274 3DE4  
                                                 l282 5A10  
                                                 l354 4A74  
                                                 l346 4A0E  
                                                 l187 47B0  
                                                 l603 6F16  
                                                 l179 79D6  
                                                 l371 1992  
                                                 l363 18DE  
                                                 l275 3E3A  
                                                 l347 4A14  
                                                 l620 04BE  
                                                 l604 6EDA  
                                                 l372 19AE  
                                                 l268 3E4A  
                                                 l348 4A1A  
                                                 l621 04C8  
                                                 l381 1AA6  
                                                 l365 1926  
                                                 l277 3E42  
                                                 l269 3D3A  
                                                 l285 5A98  
                                                 l349 4A2E  
                                                 l710 4BC8  
                                                 l702 17D6  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6EF6  
                                                 l518 45E4  
                                                 l534 5626  
                                                 l374 1A14  
                                                 l286 5A22  
                                                 l703 17EE  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 4558  
                                                 l375 1A20  
                                                 l367 1948  
                                                 l287 5A28  
                                                 l295 7832  
                                                 l712 4BDE  
                                                 l704 1808  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6F02  
                                                 l800 659C  
                                                 l376 1A9A  
                                                 l288 5A46  
                                                 l296 7830  
                                                 l721 4C6A  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 6F08  
                                                 l561 1E7E  
                                                 l529 565C  
                                                 l369 19C8  
                                                 l722 4C54  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1F6A  
                                                 l562 1E68  
                                                 l546 562E  
                                                 l810 658E  
                                                 l715 4C0E  
                                                 l651 07CC  
                                                 l571 1E9A  
                                                 l563 1E3C  
                                                 l555 1D3A  
                                                 l379 1A54  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1E44  
                                                 l804 656A  
                                                 l900 3A12  
                                                 l661 5F76  
                                                 l741 4618  
                                                 l733 4C7C  
                                                 l645 0784  
                                                 l573 1EAC  
                                                 l805 6572  
                                                 l901 3A1A  
                                                 l750 464C  
                                                 l718 4C1A  
                                                 l670 2E10  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1E5C  
                                                 l806 657A  
                                                 l910 7194  
                                                 l902 3A22  
                                                 l751 4658  
                                                 l719 4C34  
                                                 l671 2E1A  
                                                 l575 1ECE  
                                                 l559 1D5C  
                                                 l903 3A2C  
                                                 l752 466A  
                                                 l680 2F48  
                                                 l672 2E2E  
                                                 l648 07CE  
                                                 l592 4236  
                                                 l576 1ED6  
                                                 l808 6584  
                                                 l753 4676  
                                                 l737 4C8C  
                                                 l665 2F5E  
                                                 l649 07A8  
                                                 l577 1EFA  
                                                 l913 71BA  
                                                 l754 4688  
                                                 l674 2E78  
                                                 l666 2DB0  
                                                 l690 1638  
                                                 l586 1F4C  
                                                 l930 75A2  
                                                 l659 5F60  
                                                 l747 46CA  
                                                 l755 46BE  
                                                 l675 2EA0  
                                                 l691 1644  
                                                 l923 75C0  
                                                 l915 71C2  
                                                 l748 4644  
                                                 l668 2F82  
                                                 l676 2ED0  
                                                 l684 181E  
                                                 l692 1664  
                                                 l596 42CE  
                                                 l764 73F2  
                                                 l932 75AE  
                                                 l924 7586  
                                                 _BDT 000D00  
                                                 l677 2EE2  
                                                 l669 2E04  
                                                 l693 16AE  
                                                 l685 1592  
                                                 l597 42C8  
                                                 l589 1F54  
                                                 l678 2EE8  
                                                 l694 1688  
                                                 l926 7590  
                                                 l679 2EFC  
                                                 l687 1842  
                                                 l695 16F4  
                                                 l599 42D2  
                                                 l767 7428  
                                                 l696 16EC  
                                                 l688 1632  
                       __size_of__sector_from_cluster 000E  
                                                 l698 1708  
                                                 l890 395C  
                                                 l963 5AB6  
                                                 l699 1770  
                                                 l892 39E4  
                                                 l894 3A3C  
                                                 l895 39F2  
                                                 l896 3A80  
                                                 l969 5B24  
                                                 l897 39FA  
                                                 l889 394E  
                                                 l898 3A02  
                                                 l899 3A0A  
                                                 _LBA 015A  
                                                 _LUN 01D8  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                             __get_first_cluster@slot 0039  
                                _i2c_digipot_reset_on 7F02  
                                   main@tx_start_addr 00B1  
                            __size_of__display_failed 02F6  
                                         _start_line1 8DF4  
                                         _start_line2 8E62  
                                         _start_line3 8EA7  
                                         _start_line4 8E22  
                                  api_prepare@command 005E  
                                          _USBSuspend 7C9C  
                                  _internalFlash_read 7A9E  
                              __end_of_display_update 6CCE  
                                USBStdSetCfgHandler@i 0018  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 362C  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 005F  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 48F4  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 0032  
                                       _hex_file_size 00CB  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 00A7  
                            fat_create_file@root_slot 0064  
                         __flash_write_to_buffer@data 0016  
                                                l1005 8090  
                                                l2000 21C6  
                                                l1200 779C  
                                                l1201 7780  
                                                l1114 802E  
                                                l2003 2234  
                                                l2004 220E  
                                                l2020 613E  
                                                l2100 1BC4  
                                                l2013 5FE0  
                                                l2101 1BC8  
                                                l1301 4DD8  
                                                l2006 238A  
                                                l1230 74AC  
                                                l2030 2094  
                                                l1206 648C  
                                                l2110 1BEC  
                                                l2102 1BCC  
                                                l2007 22AC  
                                                l2015 6014  
                                                l1151 81CC  
                                                l2031 20BA  
                                                l1207 6470  
                                                l2103 1BD0  
                                                l1303 4DF0  
                                                l2008 2302  
                                                l2032 2160  
                                                l1160 8160  
                                                l2120 7390  
                                                l2104 1BD4  
                                                l2040 5298  
                                                l1080 7AF2  
                                                l1320 43F6  
                                                l2009 2348  
                                                l2201 7D36  
                                                l2121 7394  
                                                l2105 1BD8  
                                                l2041 529C  
                                                l1081 7AFC  
                                                l1305 4E00  
                                                l1321 440A  
                                                l2026 200E  
                                                l2114 739C  
                                                l2122 7398  
                                                l2106 1BDC  
                                                l2050 52C0  
                                                l2042 52A0  
                                                l1322 4420  
                                                l2027 1FCC  
                                                l2203 7D40  
                                                l2115 7380  
                                                l2107 1BE0  
                                                l2051 52C4  
                                                l2043 52A4  
                                                l2131 3390  
                                                l1172 816C  
                                                l2220 0188  
                                                l2060 1BF0  
                                                l2108 1BE4  
                                                l2036 52DC  
                                                l2052 52C8  
                                                l2044 52A8  
                                                l2140 33E4  
                                                l1316 44BC  
                                                l1324 4448  
                                                l1229 74C8  
                                                l2029 21A0  
                                                l2205 7D4E  
                                                l2117 7384  
                                                l2109 1BE8  
                                                l2061 1ACE  
                                                l2053 52CC  
                                                l2045 52AC  
                                                l2037 5290  
                                                l2133 3420  
                                                l2141 33E8  
                                                l1325 4470  
                                                l1317 43E2  
                                                l1166 81C4  
                                                l2230 0458  
                                                l2222 033E  
                                                l2310 7130  
                                                l2118 7388  
                                                l2070 1B2C  
                                                l2054 52D0  
                                                l2046 52B0  
                                                l2150 340C  
                                                l2142 33EC  
                                                l2134 33CC  
                                                l1511 0E38  
                                                l1087 7EB0  
                                                l2223 0310  
                                                l2119 738C  
                                                l2071 1B3C  
                                                l2063 1AD2  
                                                l2055 52D4  
                                                l2047 52B4  
                                                l2039 5294  
                                                l2151 3410  
                                                l2143 33F0  
                                                l2135 33D0  
                                                l2127 334A  
                                                l1327 448C  
                                                l1192 7D90  
                                                l1088 7E9E  
                                                l2320 4F46  
                                                l2232 048A  
                                                l2216 003E  
                                                l2304 7142  
                                                l2080 1B78  
                                                l2072 1B4C  
                                                l2064 1AD6  
                                                l2056 52D8  
                                                l2048 52B8  
                                                l2152 3414  
                                                l2144 33F4  
                                                l2136 33D4  
                                                l1328 44AC  
                                                l1193 7D82  
                                                l1513 0EE4  
                                                l1505 0C36  
                                                l1601 2D8C  
                                                l2321 4F9C  
                                                l2225 039C  
                                                l2313 7136  
                                                l2305 7118  
                                                l2081 1B7C  
                                                l2073 1B5C  
                                                l2065 1ADA  
                                                l2049 52BC  
                                                l2153 3418  
                                                l2145 33F8  
                                                l2137 33D8  
                                                l2129 3358  
                                                l1194 7DA4  
                                                l1602 2D5E  
                                                l1610 3EEA  
                                                l1178 8158  
                                                l2226 03C0  
                                                l2218 00B4  
                                                l2090 1BA0  
                                                l2082 1B80  
                                                l2074 1B60  
                                                l2066 1AEC  
                                                l2154 341C  
                                                l2146 33FC  
                                                l2138 33DC  
                                                l1290 4D7E  
                                                l1195 7D86  
                                                l1507 0CE0  
                                                l1611 3EBC  
                                                l2331 5BDC  
                                                l2323 4FF2  
                                                l2219 0202  
                                                l2091 1BA4  
                                                l2083 1B84  
                                                l2075 1B64  
                                                l2067 1AFC  
                                                l2155 34AC  
                                                l2147 3400  
                                                l2139 33E0  
                                                l1196 7D8A  
                                                l1620 34B6  
                                                l1540 51C4  
                                                l2324 4FF4  
                                                l2228 0426  
                                                l2340 1066  
                                                l2308 7124  
                                                l2092 1BA8  
                                                l2084 1B88  
                                                l2076 1B68  
                                                l2068 1B0C  
                                                l2148 3404  
                                                l2164 5C46  
                                                l1461 7726  
                                                l1509 0D8C  
                                                l1613 3F3E  
                                                l2325 4FFE  
                                                l2341 10CE  
                                                l2093 1BAC  
                                                l2085 1B8C  
                                                l2077 1B6C  
                                                l2069 1B1C  
                                                l2149 3408  
                                                l1293 4D90  
                                                l1622 3538  
                                                l1614 3F10  
                                                l1550 5258  
                                                l1542 51CA  
                                                l2342 1148  
                                                l2158 7DF8  
                                                l2094 1BB0  
                                                l2086 1B90  
                                                l2078 1B70  
                                                l1471 5550  
                                                l1623 350A  
                                                l1463 7732  
                                                l1607 3E96  
                                                l1551 5244  
                                                l1543 51D0  
                                                l2319 500A  
                                                l2095 1BB4  
                                                l2087 1B94  
                                                l2079 1B74  
                                                l1295 4DA0  
                                                l1640 14F4  
                                                l1560 27F8  
                                                l1608 3E68  
                                                l1552 524A  
                                                l1544 51D6  
                                                l2600 511C  
                                                l2344 11A8  
                                                l2096 1BB8  
                                                l2088 1B98  
                                                l2168 5C96  
                                                l1473 5574  
                                                l1625 35B6  
                                                l1553 5250  
                                                l1545 51DC  
                                                l2601 51B0  
                                                l2361 0BF6  
                                                l2345 11DA  
                                                l2337 0FBA  
                                                l2097 1BBC  
                                                l2089 1B9C  
                                                l1289 4E26  
                                                l1297 4DB8  
                                                l1626 357E  
                                                l1642 1376  
                                                l1634 12CE  
                                                l1562 287A  
                                                l1554 5282  
                                                l1546 51E2  
                                                l2602 5134  
                                                l2370 0B6A  
                                                l2362 09FE  
                                                l2354 08A0  
                                                l2346 1208  
                                                l2338 0FDE  
                                                l2098 1BC0  
                                                l3323 75F4  
                                                l1475 5598  
                                                l1619 34E4  
                                                l1651 1416  
                                                l1643 1348  
                                                l1635 12A0  
                                                l1563 284C  
                                                l1539 51FA  
                                                l1547 51E8  
                                                l2603 5150  
                                                l2611 5802  
                                                l2371 0BA6  
                                                l2347 1264  
                                                l1299 4DC8  
                                                l2196 695C  
                                                l3324 75EC  
                                                l1468 552A  
                                                l1628 360A  
                                                l3252 6E2A  
                                                l1660 1488  
                                                l1652 13E8  
                                                l1580 3B64  
                                                l1548 51EE  
                                                l2460 7E0A  
                                                l2356 092A  
                          USBConfigureEndpoint@handle 0007  
                                                l3333 78D0  
                                                l1629 35DC  
                                                l3253 6E1E  
                                                l1645 1516  
                                                l1637 1322  
                                                l1581 3B36  
                                                l1565 296C  
                                                l1549 51F4  
                                                l2613 583C  
                                                l2453 672E  
                                                l2373 0BC2  
                                                l2365 0A3A  
                                                l2357 0992  
                                                l2349 1286  
                                                l2198 696C  
                                                l3334 78C8  
                                                l1662 154A  
                                                l1638 12F4  
                                                l1590 2BD6  
                                                l1574 3ABC  
                                                l1566 293E  
                                                l2358 09EC  
                                                l3327 7614  
                                                l3511 5CA8  
                                                l1663 151C  
                                                l1655 1466  
                                                l1647 13C6  
                                                l1671 3010  
                                                l1583 3BB8  
                                                l1575 3A8E  
                                                l1559 2826  
                                                l2623 2B98  
                                                l2615 587A  
                                                l2455 673A  
                                                l2367 0AE8  
                                                l1912 68E6  
                                                l1920 7EEA  
                                                l3520 6E88  
                                                l3328 761E  
                                                l3256 6E52  
                                                l1656 1438  
                                                l1648 1398  
                                                l1592 2C58  
                                                l1672 2FE2  
                                                l1584 3B8A  
                                                l1568 29C0  
                                                l2624 2BC6  
                                                l2616 5846  
                                                l2368 0BAC  
                                                l3337 78E8  
                                                l3513 5CE2  
                                                l3257 6E60  
                                                l1593 2C2A  
                                                l1577 3B10  
                                                l1569 2992  
                                                l2625 2B9E  
                                                l2617 5852  
                                                l2641 2590  
                                                l2369 0AF2  
                                                l1746 7570  
                                                l2810 48F8  
                                                l1842 6B20  
                                                l1914 694C  
                                                l1922 7EFA  
                                                l3338 78F2  
                                                l3514 5D20  
                                                l1690 3850  
                                                l1674 3064  
                                                l1578 3AE2  
                                                l2650 58FC  
                                                l1834 7478  
                                                l1738 67A8  
                                                l2802 79A4  
                                                l1747 752E  
                                                l3507 789C  
                                                l1683 37D6  
                                                l1659 14B6  
                                                l1595 2CAC  
                                                l1675 3036  
                                                l2651 5918  
                                                l1739 67D4  
                                                l2803 7980  
                                                l2820 7376  
                                                l2812 4958  
                                                l1764 67FE  
                                                l1756 72E2  
                                                l1844 6B82  
                                                l1932 63D4  
                                                l2660 6348  
                                                l1692 38F6  
                                                l1684 37A8  
                                                l1596 2C7E  
                                                l1668 2FBC  
                                                l2652 591E  
                                                l2636 5DAA  
                                                l2804 79B2  
                                                l1749 7556  
                                                l1765 6808  
                                                l1757 72EC  
                                                l2661 6356  
                                                l1693 38C8  
                                                l1589 2C04  
                                                l1677 3118  
                                                l1669 2F8E  
                                                l2645 592A  
                                                l2653 5924  
                                                l2581 3FCE  
                                                l3525 7D6C  
                                                l2469 7AD2  
                                                l2805 7992  
                                                l2662 6364  
                                                l1686 382A  
                                                l1598 2D38  
                                                l1678 30EA  
                                                l2646 58A8  
                                                l2590 4050  
                                                l2582 3FE4  
                                                l3526 7D5C  
                                                l1767 6840  
                                                l1791 728A  
                                                l1783 76DE  
                                                l1935 6436  
                                                l3519 6EC6  
                                                l2671 7664  
                                                l2663 6372  
                                                l1687 37FC  
                                                l1599 2D00  
                                                l2591 405E  
                                                l1928 6A28  
                                                l1792 7294  
                                                l1784 76E8  
                                                l2664 6380  
                                                l2648 58C4  
                                                l2584 4086  
                                                l2809 49E4  
                                                l1769 685E  
                                                l3537 5716  
                                                l2657 6390  
                                                l1689 387E  
                                                l2649 58E0  
                                                l2585 4010  
                                                l1873 7BBC  
                                                l2826 652C  
                                                l3538 5670  
                                                l1970 57DA  
                                                l2658 633A  
                                                l1698 750A  
                                                l2594 50FA  
                                                l2578 3FFA  
                                                l2835 61CC  
                                                l3539 570E  
                                                l2683 6D0A  
                                                l2659 63BE  
                                                l1699 74DC  
                                                l2587 401E  
                                                l2579 3FB8  
                                                l1964 5786  
                                                l1980 330C  
                                                l2588 4030  
                                                l1797 7F86  
                                                l2829 6560  
                                                l1981 32AE  
                                                l2677 6C34  
                                                l2597 5100  
                                                l2589 4042  
                                                l1877 7B8A  
                                                l2838 6208  
                                                l1982 32D0  
                                                l1990 6D5C  
                                                l1983 3306  
                                                l2871 661C  
                                                l2599 5178  
                                                l1992 6D9A  
                                                l2872 6610  
                                                l2689 66AC  
                                                l1979 31D4  
                                                l1987 6D42  
                                                l2875 6650  
                                                l2876 665E  
                                                STR_1 8FF2  
                                                STR_2 8FF2  
                                                STR_3 8FF2  
                                                STR_4 8FF2  
                                                STR_5 8FF2  
                                                STR_6 8FF2  
                                                STR_7 8FF2  
                               __end_of_checked_line1 8DC4  
                                                STR_8 8FF2  
                               __end_of_checked_line2 8CAE  
                                                STR_9 8FDD  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D43  
                                      _bootloader_run 7114  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 0187  
                                                u6130 75F8  
                                                u6300 71D0  
                                                u6310 71DC  
                                                u7110 4C66  
                                                u6320 71E8  
                                                u6160 78D4  
                                                u6330 71F4  
                                                u7130 4C78  
                                                u6340 7200  
                                                u6308 71D2  
                                                u7220 0CF4  
                                                u6350 720A  
                                                u6318 71DE  
                                                u7230 0DA0  
                                                u7150 4C88  
                                                u7320 6948  
                                                u6328 71EA  
                                                u7240 0E4C  
                                                u7080 4C50  
                                                u9000 075E  
                                                u7305 690C  
                                                u7330 5690  
                                                u6338 71F6  
                                                u6435 6814  
                                                u6356 720C  
                                                u6348 7202  
                                                u6700 5516  
                                                u6525 72A0  
                                                u7350 56C8  
                                                u6710 553C  
                                                u7270 7BB8  
                                                u9030 07D6  
                                                u7430 5092  
                                                u6614 45CE  
                                                u6615 45C8  
                               ??_USBCtrlTrfTxService 0001  
                                                u8240 7EFE  
                                                u7360 56FE  
                                                u6720 5560  
                                                u6800 6620  
                                                u6640 4604  
                                                u7280 7B86  
                                                u6545 687A  
                                                u7337 5686  
                                                u8410 57E6  
                                                u6730 5584  
                                                u7450 50D2  
                                                u7355 56C2  
                                                u8420 57EC  
                                                u9220 6008  
                                                u8325 7246  
                                                u7357 56B8  
                                                u7605 15B8  
                                                u7437 5088  
                                                u8270 6A2E  
                                                u7470 6EA8  
                                                u6830 6E2E  
                                                u7367 56F4  
                                                u8335 70E0  
                                                _UCFG 000F39  
                                                u9080 31A4  
                                                u9240 6044  
                                                u8600 3E2E  
                                                u8345 6DCC  
                                                u7457 50C8  
                                                u9090 31D2  
                                                u7730 17AA  
                                                u6578 4578  
                                                u8530 4ED2  
                                                u6579 458A  
                                                u7548 2E52  
                                                u7740 17AC  
                                                u7628 15EC  
                                                _UEP0 000F26  
                                                u7477 6E9E  
                                                u9085 319A  
                                                u7549 2E66  
                                                u7629 1600  
                                                _UEP1 000F27  
                                                u7830 775E  
                                                u6598 459C  
                                                u6950 5608  
                                    ?_fat_create_file 0044  
                                                u6775 72F8  
                                                u8455 6992  
                                                u9255 1FA6  
                                                u7495 2DD6  
                                                u6599 45B0  
                                                u8607 3E24  
                                                u8570 3DA6  
                                                _UEIE 000F37  
                                                u8820 1A3A  
                                                u8580 3DD6  
                                                u7758 17B2  
                                                u9535 6A5A  
                                                u7759 17C4  
                                                u9720 6C30  
                                                u7688 16BA  
                                                u8920 062C  
                                                u7689 16CE  
                                                u8577 3D9C  
                                                u9625 6AB8  
                                                u9475 7908  
                                                u8587 3DCC  
                                                u9645 7CDA  
                                                u9581 3362  
                                                u9750 6D06  
                                                u9904 421A  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u9905 4214  
                                                u9690 7660  
                                                u8938 064C  
                                                u9914 424C  
                                                u8939 0660  
                                                u9915 4246  
                                                u9780 66A8  
                                                u8990 074C  
                                                u8888 052C  
                                                u8889 0540  
                                                u8898 055C  
                                                u9954 429E  
                                                u9938 426E  
                                                u9890 4204  
                                                u8899 0570  
                                                u9955 4298  
                                                u9939 4280  
                                                u9878 41D2  
                                                u9879 41E6  
                               _i2c_digipot_reset_off 7F24  
                             ??_fat_get_format_status 002C  
                           __parse_file_truncate@data 0001  
                               __size_of__delete_root 005C  
                                      _ResetSenseData 6F3A  
              __end_of__fill_buffer_get_configuration 5F22  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 5E84  
              USBStdFeatureReqHandler@current_ep_data 001B  
                              ?__update_modified_time 0005  
                                                _pDst 0184  
                                                _main 3918  
                                                _itoa 7878  
                          __end_of_fat_append_to_file 23D8  
                         __size_of_APP_DeviceMSDTasks 0012  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 528E  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 5CA0  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 004C  
                             __bootloader_verify_file 0F7C  
                           _ExternalFlash_MediaDetect 8202  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 810E  
                               _display_get_character 7DAA  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DB4  
                                __end_of_failed_line2 8D20  
                                __end_of_failed_line4 8E73  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 4AD6  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 085A  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0046  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 0056  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 017C  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 362C  
                                      _hex_file_entry 01BA  
                              _bootloader_get_entries 8190  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 7C6A  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                            _system_ui_inactive_count 0178  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 6E0C  
                                               l10245 4B0A  
                                               l10431 7590  
                                               l11307 69CC  
                                               l11411 5750  
                                               l10363 4C1A  
                                               l10435 75AE  
                                               l11405 573C  
                                               l12045 5FD8  
                                               l10607 5670  
                                               l10705 6E88  
                                               l12057 600C  
                                               l10465 0C36  
                                               l10625 7D5C  
                              ?_i2c_digipot_backlight 0001  
                                               l11357 6436  
                                               l13205 2640  
                                               l13125 6772  
                                               l11287 7EE2  
                                               l11447 57EC  
                                               l11359 643A  
                                               l12079 1FCC  
                                               l10673 5040  
                                               l13233 26C8  
                                               l13153 5C18  
                                               l11539 4E9E  
                                               l13219 2684  
                                               l13171 5C68  
                                               l10933 772A  
                                               l13245 26EE  
                             ?__fill_buffer_find_file 0044  
                                               l10927 771E  
                                               l10783 2F58  
                                               l12703 334A  
                                               l13271 2760  
                                               l13255 2714  
                                               l13191 25FC  
                                               l14073 514C  
                                               l13257 271C  
                                               l11771 05FC  
                                               l13283 2786  
                                               l13541 5DA2  
                                               l14261 0FD6  
                                               l12717 3390  
                                               l12709 3358  
                                               l13293 27AC  
                                               l13615 584A  
                                               l13463 6726  
                                               l13295 27B4  
                                               l12825 7DF8  
                                               l12809 3420  
                                               l13395 4F9C  
                                               l11957 32D0  
                                               l13469 6732  
                                               l15271 65B4  
                                               l14519 372A  
                                               l15273 65E8  
                                               l13817 3C7C  
                                               l14393 0B6A  
                                               l15265 1C08  
                                               l15267 1D20  
                                               l11999 220E  
                                               l13927 1D54  
                                        spi_tx@length 0003  
                                               l13789 3C18  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 6054  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE9  
                                               STR_11 8FFB  
                                               STR_12 8FD0  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 6670  
                                               u10020 5C4C  
                                               u10110 26AC  
                                               ?_utoa 0008  
                                               u11001 7D04  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10210 27AC  
                                               u10130 26E6  
                                               u10050 5C9C  
                                               u10230 27DC  
                                               u10150 2714  
                                               u10070 2624  
                                               u10330 4F6C  
                                               u10250 00A2  
                                               u11130 1028  
                                               u10170 2744  
                                               u10090 2668  
                                               u10405 7FCA  
                                               u10350 4FC8  
                                               u11230 08EC  
                                               u10190 277E  
                                               u10415 7B16  
                                               u10425 6700  
                                               u10530 5878  
                                               u10610 3CE0  
                                               u10450 6754  
                                     __end_of___llmod 6E72  
                                               u10490 2580  
                                               u10730 1D50  
                              __end_of_USBDeviceTasks 37A2  
                                               u10580 3C3C  
                                               u12157 7EA4  
                                               u10750 1D84  
                                               u11550 379E  
                                               u12167 7548  
                                               u11640 5AD0  
                                               u10920 1F2E  
                                               u12177 755A  
                                               u12187 7564  
                                               u11660 5AE4  
                                               u11740 4432  
                                               u11790 44A6  
                                               u10985 7686  
                           ?_USBCtrlEPServiceComplete 0001  
                                     __end_of___lwdiv 7628  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 78FC  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                                _file_minimum_address 014E  
                                    ??__display_start 0025  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 0097  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                        __delete_root 70B8  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 006E  
                                    __end_of_MSDTasks 1F88  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 55AC  
                     __end_of_internalFlash_getBuffer 8154  
                     __end_of_USBCtrlEPAllowDataStage 5E84  
                                               _sd000 8FCC  
                                               _sd001 8EE8  
                                               _sd002 8F1C  
                                               _sd003 8F8B  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 716E  
                 i2c_display_send_init_sequence@F6808 01EC  
                       __end_of_MSDTransferTerminated 742A  
                                        _gblCBWLength 00E4  
                          __end_of__parse_file_delete 767A  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 66F2  
                          __end_of__parse_file_create 6C64  
                              __end_of_ResetSenseData 6F9C  
                            __get_empty_cluster@value 0036  
                          __end_of__parse_file_modify 820E  
                          __end_of__parse_file_rename 6D38  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 0053  
                           fat_get_format_status@cntr 002E  
                             ?__fill_buffer_read_file 0093  
                                               pclath 000FFA  
                                     __end_of_ui_init 8088  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00E8  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 7B3C  
                          __end_of__display_rebooting 752C  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 5730  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 0093  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 7E4A  
             __fill_buffer_get_file_details@outBuffer 0041  
                                      _MSDReadHandler 2DAE  
                                   __delete_root@slot 002F  
                        __size_of_USBStdSetCfgHandler 00E0  
                   fat_create_file@number_of_clusters 0065  
                                flash_page_write@data 0022  
                     __size_of_fat_get_empty_clusters 008E  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 6210  
                       fat_read_from_file@file_number 006E  
                           __end_of__flash_get_status 7C9C  
                        fat_get_file_information@data 0037  
                         fat_read_from_file_fast@data 0040  
                  spi_set_configuration@configuration 0001  
                                 _system_minimal_init 80DE  
               __end_of_ExternalFlash_MediaInitialize 8016  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 7FFC  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 016E  
                                        __end_of_main 3A88  
                                        __end_of_itoa 78BA  
                       __end_of_system_encoder_enable 80CE  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 74D6  
                                        __end_of_utoa 5D44  
                       fat_read_from_file_fast@length 003C  
                                __end_of__normal_mode 71C6  
                                    _timer_pseudo_isr 7AD4  
                       fat_read_from_file_fast@offset 0056  
                            __parse_command_short@cmd 002C  
                  fat_read_from_file_fast@read_length 0058  
                                    __end_of_i2c_init 8136  
                       fat_read_from_file_fast@sector 0052  
                            __end_of__i2c_acknowledge 8172  
                      __end_of__fill_buffer_find_file 5DE6  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 00CF  
                          __end_of__get_empty_cluster 6A38  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 8048  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 0176  
                                api_prepare@outBuffer 00A9  
                                              ??_main 00AF  
                                    __end_of__i2c_get 8168  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00E0  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 0068  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00B3  
                            _fat_get_file_information 6950  
                                  __write_root@offset 002E  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 8202  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 81FE  
                                         ?_USBSuspend 0001  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 0120  
                               ??__bootloader_program 0060  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                              ?_spi_set_configuration 0001  
                                _i2c_eeprom_writeByte 78FC  
                         ?_spi_get_external_tx_buffer 0001  
                                ?_system_minimal_init 0001  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 7E96  
                              __flash_write_to_buffer 76CA  
                     i2c_digipot_reset_off@data_array 000B  
                       __size_of__parse_file_truncate 0004  
                      __end_of__fill_buffer_read_file 25F4  
                                _start_from_byte_next 00DD  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0037  
                                          __i2c_start 81CA  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 7762  
                           fat_read_from_file@cluster 0071  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0060  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 73D4  
                                    __end_of__get_fbr 1D30  
                                    __end_of__get_mbr 535C  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 005C  
                                   ??__display_verify 001F  
                                  __size_of_i2c_reset 000E  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 2F88  
                                 _flash_pages_written 0170  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                         fat_append_to_file@file_size 0062  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 5B56  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 80FE  
                   __bootloader_program@page_to_write 0099  
                                   _shortPacketStatus 00F6  
                   fat_append_to_file@number_of_bytes 003F  
                          __get_empty_cluster@cluster 0038  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 6770  
                        __end_of__flash_set_page_size 67EA  
                                     _hexCharsToUint8 7FAA  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 6A38  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3036 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 00E3  
                                           ??___lwmod 0005  
                                              _buffer 0380  
                                   _USBEnableEndpoint 79B8  
                       __bootloader_program@address32 0092  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 6E72  
                                  ?_fat_get_file_size 0030  
                                              _memset 7D52  
                                              clear_0 624A  
                                              clear_1 625E  
                                              clear_2 6270  
                                              clear_3 627C  
                                              clear_4 6288  
                                              clear_5 6294  
                           _ExternalFlash_SectorWrite 7B70  
                                   api_parse@inBuffer 0093  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6E  
                                              _reboot 8016  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 43E0  
                                              _spi_tx 7326  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 7C38  
                                              _tx_buf 01F5  
                                    ?_fat_rename_file 003F  
                          __parse_command_long@length 0055  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                             __write_root@root_sector 002C  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 7D7E  
                        __end_of_jump_to_main_program 81E0  
                               __end_of_fat_find_file 57F0  
                         fat_get_empty_clusters@value 0036  
                                 ??_fat_get_file_size 0034  
                              _fat_get_empty_clusters 63C2  
                       __size_of__parse_command_short 00B4  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0230  
                                        __mediumconst 8C98  
                                 __end_of__i2c_open_1 8048  
                      i2c_digipot_reset_on@data_array 000B  
                               ??_system_minimal_init 0002  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 6FFC  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 6F9C  
                                              tblptru 000FF8  
                                    __end_of_spi_init 79B8  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00B5  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0032  
                                       spi_tx_rx@data 0005  
                          __end_of__root_is_available 6950  
                             __spi_external_rx_buffer 0300  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0058  
                                       main@tx_buffer 00B7  
                               __end_of_ui_get_status 81F8  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00F5  
                          ??_APP_DeviceCustomHIDTasks 00AB  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0250  
                                   _SYSTEM_Initialize 7582  
                                 ??_i2c_set_frequency 0001  
                                          __accesstop 0060  
                             __end_of__initialization 629C  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 815E  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 009B  
                         __end_of__parse_command_long 63C2  
                   __end_of_failed_line3_noNextRecord 8E22  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 6AAA  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                               __write_fat@fat_sector 002D  
                               flash_page_write@match 0024  
                                ??_flash_partial_read 0030  
                                    _flash_page_write 742A  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 79F4  
                            _bootloader_get_file_size 80AC  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FD0  
                                       __end_of_sd001 8F1C  
                                       __end_of_sd002 8F4A  
                                       __end_of_sd003 8FA5  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 820E  
                                        __pidataBANK1 7E70  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 81A4  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 819A  
                           __get_available_root_entry 7EDE  
                                 fat_rename_file@cntr 0081  
                                 fat_rename_file@name 003F  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 0061  
                                  __size_of__read_fat 0048  
                                     _active_protocol 00FB  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 129A  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 5424  
                                 _userInterfaceStatus 00E0  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 45EC  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 7DAA  
                       __size_of__display_programming 01D6  
                                   __end_of_i2c_reset 811C  
                             __end_of_system_delay_ms 7EBA  
                                  __size_of_api_parse 00D2  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0174  
                      __end_of_failed_line3_startCode 8CE9  
                               _communicationSettings 0139  
                    fat_get_empty_clusters@fat_sector 0032  
                                  _fat_read_from_file 60E8  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 003E  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8DA4  
                                        _failed_line2 8D0E  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00EA  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 75D6  
                             ??__update_modified_time 0007  
                                   __end_of__i2c_read 64DC  
                                   __end_of__i2c_send 81DA  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 5A04  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 81CA  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 0060  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 00B9  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                       fat_append_to_file@fat_cluster 0068  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 42D8  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0156  
                                           ?_i2c_init 0001  
                    __fill_buffer_read_file@outBuffer 0095  
                        __end_of__sector_from_cluster 812A  
                                    _mediaInformation 01D1  
                             __end_of_hexCharsToUint8 7FC6  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 003C  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 5CA0  
                     ??__fill_buffer_get_file_details 0043  
                                       __flash_wakeup 752C  
                            __fill_buffer_get_display 57F0  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 00C5  
                               __size_of__normal_mode 0058  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                          __update_modified_time@root 0005  
                    __end_of_USBCtrlEPServiceComplete 48F4  
               __end_of_APP_DeviceCustomHIDInitialize 7B70  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 7B3C  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 4F3C  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 25F4  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 006A  
                        __size_of__flash_partial_read 0078  
                            __size_of_fat_delete_file 006A  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 21B8  
                                             ?_memset 0001  
                                          _device_dsc 8FA5  
                 fat_get_file_information@file_number 003E  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 8030  
                                    _USBCtrlEPService 5958  
                                             ?_ui_run 0001  
                                          _ep_data_in 016B  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0146  
                                  __display_clear@row 0003  
                       fat_append_to_file@file_number 006C  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 37A2  
                    __sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 41C6  
                                  _USBCheckStdRequest 49F4  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA8  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 003F  
                              fat_append_to_file@data 0041  
                                          _flash_init 7FE2  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 50EA  
                                   __end_of__get_data 7DFC  
                                   __end_of__get_date 81C2  
                                 _USBStdSetCfgHandler 4E5C  
                              fat_append_to_file@root 0073  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 81B8  
                                   __end_of__get_root 34B0  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 8D74  
                                          _done_line2 8E9F  
                                          _done_line3 8D64  
                                          _done_line4 8D54  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 805E  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0172  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 6770  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 7B08  
                                  __get_first_cluster 6DA2  
                                        __normal_mode 716E  
                          __end_of_APP_DeviceMSDTasks 809A  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 77F2  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 80CE  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 0088  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 6862  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 67EA  
                                          __write_fat 793C  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB7  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                    _system_full_init 705C  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 0054  
                                   ??_flash_page_read 002C  
                      __end_of_bootloader_get_entries 819A  
                              fat_find_file@extension 0032  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 51BC  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 41C6  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 0043  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 7628  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 0072  
                                   __end_of__spi_init 7A66  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 6670  
                                             __Lparam 0000  
                                  __parse_file_create 6BF8  
                                _jump_to_main_program 81DA  
                            __size_of_fat_create_file 01BC  
                                   __end_of_hid_rpt01 8F8B  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 46F2  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                  __parse_file_modify 820A  
                                  __parse_file_rename 6CCE  
                          ??_fat_get_file_information 0039  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 6AAA  
                                          _last_error 00DE  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0340  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 65EE  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 6E0C  
                                             ___lwdiv 75D6  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 78BA  
                                   _fast_read_cluster 00F9  
                                  __display_rebooting 74D6  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 003F  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 004B  
                                 ?__parse_file_create 0050  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 7A2E  
                                             __pcinit 6210  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 8EE8  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 3918  
                                             __ptext1 43E0  
                                     __display_failed 129A  
                                             __ptext2 80BE  
                                             __ptext3 7CFA  
                                             __ptext4 7F02  
                                             __ptext5 7F24  
                                             __ptext6 7E24  
                                             __ptext7 4D7C  
                                             __ptext8 7AD4  
                                 ?__parse_file_modify 0001  
                                             __ptext9 80CE  
                                             _inPipes 00BF  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0043  
                                     __size_of_ui_run 0106  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00EB  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005E  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 7FAA  
                                ??__get_first_cluster 0032  
                             _fat_read_from_file_fast 1F88  
                                        ??_USBSuspend 0018  
                                     __display_search 3A88  
                                  __end_of_USBMSDInit 45EC  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 80FE  
                                             _msd_cbw 000D40  
                                     __display_verify 3E62  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 8154  
                                             _ui_init 8074  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 8074  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                  __get_empty_cluster 69C4  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 003D  
                                             _strncmp 566E  
                                 _flash_partial_write 6B1A  
                                end_of_initialization 629C  
                                ??__parse_file_delete 0041  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 73D4  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 2BD0  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 29E2  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 004D  
                                ??__parse_file_create 0052  
                                  __end_of_USB_SD_Ptr 8E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                    __write_fat@value 002B  
                                 _pBDTEntryEP0OutNext 00D9  
                                ??__parse_file_modify 0003  
                           __end_of_MSDProcessCommand 42D8  
                                             itoa@buf 0011  
                                ??__parse_file_rename 0045  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 003C  
                                     _USB1msTickCount 015E  
                                    ?_hexCharsToUint8 0003  
                                 ?__get_empty_cluster 0030  
                            __flash_partial_read@data 001A  
                        fat_get_empty_clusters@offset 0034  
                              _internalFlash_readPage 7836  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                            fat_append_to_file@length 006D  
                         i2c_eeprom_writeByte@address 000B  
                            fat_append_to_file@offset 006A  
           __fill_buffer_get_file_details@file_number 0043  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                            fat_append_to_file@sector 0060  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 7CCC  
                        __end_of__parse_file_truncate 820A  
                             _USBCtrlEPAllowDataStage 5DE6  
                                   __end_of_spi_tx_rx 6210  
                                   __end_of_spi_tx_tx 6568  
               __end_of__fill_buffer_get_file_details 6BF8  
              __size_of__fill_buffer_get_file_details 006E  
                       __fill_buffer_get_file_details 6B8A  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 817C  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 8172  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 002C  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 47F4  
                                             utoa@val 000A  
                                           _MSD_State 00E9  
                         __end_of__bootloader_program 0C0E  
                               _system_encoder_enable 80BE  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 005E  
                          _USBStatusStageEnabledFlag1 00EE  
                          _USBStatusStageEnabledFlag2 00ED  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                             ?_fat_get_empty_clusters 0030  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                                ??__get_empty_cluster 0032  
                      __end_of__flash_write_to_buffer 771A  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 811C  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       fat_append_to_file@new_cluster 0066  
                                   ??_fat_delete_file 003A  
                              fat_create_file@cluster 0067  
                                 flash_page_read@data 002A  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0028  
                                    __CFG_CPUDIV$OSC1 000000  
                       fat_get_empty_clusters@cluster 003A  
                     __fill_buffer_find_file@inBuffer 0044  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0290  
                                  _BothEP0OutUOWNsSet 00F1  
                       fat_get_empty_clusters@maximum 0030  
                            __end_of_flash_page_write 7480  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 0380  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 7480  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00FD  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DB4  
                                       _checked_line2 8C99  
                                       _checked_line3 8E73  
                                       _checked_line4 8D32  
                                         ?__write_fat 0029  
                                 __delete_root@offset 002C  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E31  
                             __size_of__display_start 01F0  
                        __end_of_USBTransferOnePacket 47F4  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 5958  
               __end_of_internalFlash_pageFromAddress 7FE2  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 7FC6  
                                __end_of_reboot_line1 8E4C  
                                __end_of_search_line1 8DF4  
                                __end_of_search_line2 8D54  
                                __end_of_search_line3 8CD6  
                                __end_of_search_line4 8E62  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 68DA  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 1590  
                       __get_empty_cluster@fat_sector 0032  
                                    ?_MSDErrorHandler 0001  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 62A2  
                               ??_flash_partial_write 0028  
                       ??_bootloader_get_rec_checksum 0001  
                                    __write_root@slot 0030  
                      __bootloader_program@entry_page 006A  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00D2  
                             __end_of__display_search 3BDA  
                               __end_of_USBDeviceInit 3D28  
               __end_of_USBIncrement1msInternalTimers 7F68  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 7F46  
                                     ??__display_done 001F  
                      __end_of_fat_get_empty_clusters 6450  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 3F8E  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                           ??_fat_read_from_file_fast 0046  
                            __end_of_USBStallEndpoint 43E0  
                                 _i2c_eeprom_readByte 767A  
                                   ??_fat_create_file 004C  
                 __bootloader_program@start_from_byte 0096  
                  __fill_buffer_read_file@data_length 009F  
                         __end_of_system_minimal_init 80EE  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CAE  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 6ED8  
                                     _MSDRetryAttempt 00E5  
                                      __end_of_memset 7D7E  
                                      __end_of_reboot 8030  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 00F3  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 44E6  
                                      __end_of_spi_tx 737E  
               __get_available_root_entry@file_number 0037  
                                 __end_of__ui_encoder 4E5C  
                           __flash_set_page_size@size 0018  
                                 start_initialization 6210  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                           _i2c_reset 810E  
                                 __end_of_api_prepare 40AE  
                   __end_of__get_available_root_entry 7F02  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0096  
                                     _USBMSDOutHandle 00D7  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 60E8  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1ACC  
                                 __flash_partial_read 6862  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0044  
                                       _MSDHostNoData 00E2  
                                      _hexCharToUint8 7D26  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                      __size_of__update_modified_time 0032  
                   __end_of_USBCtrlEPAllowStatusStage 54E8  
                            _fast_read_cluster_number 00F7  
                                ?_i2c_eeprom_readByte 0012  
                       __end_of__update_modified_time 7C38  
                        __end_of__display_programming 315E  
                fat_get_empty_clusters@empty_clusters 0038  
                            __end_of_USBCtrlEPService 5A04  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 79F4  
                                           __i2c_read 6450  
                                           __i2c_send 81D2  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 81C2  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 0048  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 81FE  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8E13  
                       __root_is_available@first_byte 0036  
                              _pBDTEntryEP0OutCurrent 00DB  
                              __size_of_fat_find_file 00C0  
                    __end_of_fat_get_file_information 69C4  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8D94  
                                   _programming_line2 8CFC  
                                   _programming_line3 8E83  
                                   _programming_line4 8D84  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                                      __get_date@date 0003  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 3D28  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00A8  
                          fat_get_file_size@file_size 0037  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01D8  
                           ?_APP_DeviceCustomHIDTasks 0001  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 008E  
                       __end_of_i2c_digipot_backlight 7E4A  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 002C  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 002C  
                                  __end_of__i2c_start 81D2  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 003F  
                                  __end_of__i2c_write 77AA  
                            __end_of_system_full_init 70B8  
                           __root_is_available@offset 0033  
                                 __size_of__write_fat 0040  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00FE  
                            ??__fill_buffer_read_file 0097  
                      __end_of_USBStdGetStatusHandler 5AAE  
                          ??_system_minimal_init_undo 0001  
                         api_parse@receivedDataLength 0095  
                                         __pbssCOMRAM 005F  
                   __end_of__bootloader_check_address 5016  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 7CFA  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 7CCC  
                          fat_append_to_file@position 006F  
                         fat_create_file@next_cluster 0060  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                                     _flash_page_read 7BD4  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 0060  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                          ?_i2c_reset 0001  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCC  
                       __end_of_MSDCheckForErrorCases 4C9A  
             __bootloader_program@address_within_page 006C  
                              __end_of_hexCharToUint8 7D52  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 0152  
                  __end_of_flash_command_pagesize_512 8FC8  
                          _flash_command_pagesize_512 8FC4  
                  __end_of_flash_command_pagesize_528 8FC4  
                          _flash_command_pagesize_528 8FC0  
                                      __flash_is_busy 7F68  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 6B1A  
                                __parse_file_truncate 8206  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E91  
                                           __get_data 7DD4  
                                           __get_date 81B8  
                    __bootloader_program@return_value 008E  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 003A  
                                   ?_timer_pseudo_isr 0001  
                     __end_of_fat_read_from_file_fast 21B8  
                                           __get_time 81AE  
                                           __get_root 331A  
                                 __end_of__write_root 7276  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 7A9E  
                            __delete_root@root_sector 002A  
                          __end_of_i2c_display_cursor 7EDE  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 77F2  
                                        _pBDTEntryOut 0140  
                                          ?__i2c_stop 0001  
                          fat_rename_file@file_number 0060  
                                           __read_fat 77AA  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DA4  
                           __end_of_programming_line2 8D0E  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8D94  
                    __end_of_ExternalFlash_SectorRead 7BD4  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 81AE  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 81A4  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 5BFC  
                   fat_read_from_file_fast@start_byte 0038  
                                   fat_find_file@name 0030  
                      MSDProcessCommandMediaPresent@i 0047  
                                 fat_find_file@buffer 0034  
                                   fat_find_file@slot 003F  
                                           _api_parse 50EA  
                           fat_create_file@root_entry 0069  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 4C9A  
                                  _APP_DeviceMSDTasks 8088  
                                       __pmediumconst 8C98  
                                 fat_find_file@offset 0042  
                               ??__flash_partial_read 001C  
                                           __ptext100 42D8  
                                           __ptext101 6F3A  
                                           __ptext110 3F8E  
                                           __ptext102 7BA2  
                                           __ptext111 23D8  
                                           __ptext103 7BD4  
                                           __ptext200 811C  
                                           __ptext120 29E2  
                                           __ptext112 60E8  
                                           __ptext104 5F22  
                                           __ptext201 77AA  
                                           __ptext121 81E0  
                                           __ptext113 1F88  
                                           __ptext105 8172  
                                           __ptext210 617C  
                                           __ptext202 69C4  
                                           __ptext130 8016  
                                           __ptext122 817C  
                                           __ptext114 6A38  
                                           __ptext106 809A  
                                           __ptext211 46F2  
                                           __ptext203 7C38  
                                           __ptext131 81F2  
                                           __ptext123 8048  
                                           __ptext115 4C9A  
                                           __ptext107 7FFC  
                                           __ptext212 0000  
                                           __ptext204 48F4  
                                           __ptext140 74D6  
                                           __ptext132 6C64  
                                           __ptext124 81E6  
                                           __ptext116 6B8A  
                                           __ptext108 8202  
                                           __ptext205 6862  
                                           __ptext141 2F88  
                                           __ptext133 7480  
                                           __ptext125 81EC  
                                           __ptext117 57F0  
                                           __ptext109 5AAE  
                                           __ptext206 7F68  
                                           __ptext150 65EE  
                                           __ptext142 2BD0  
                                           __ptext134 7EBA  
                                           __ptext126 5D44  
                                           __ptext118 7DAA  
                                           __ptext207 752C  
                                           __ptext151 37A2  
                                           __ptext143 80AC  
                                           __ptext135 7E4A  
                                           __ptext127 50EA  
                                           __ptext119 5E84  
                                           __ptext208 7326  
                                           __ptext160 75D6  
                                           __ptext152 819A  
                                           __ptext144 129A  
                                           __ptext136 51BC  
                                           __ptext128 58A4  
                                           __ptext209 7C6A  
                                           __ptext161 78FC  
                                           __ptext153 771A  
                                           __ptext145 8186  
                                           __ptext137 3E62  
                                           __ptext129 7E96  
                                           __ptext170 6CCE  
                                           __ptext162 7D7E  
                                           __ptext154 34B0  
                                           __ptext146 81F8  
                                           __ptext138 27F2  
                                           __ptext171 5FBE  
                                           __ptext163 7762  
                                           __ptext155 81A4  
                                           __ptext147 8190  
                                           __ptext139 3A88  
                                           __ptext180 63C2  
                                           __ptext172 820A  
                                           __ptext164 71C6  
                                           __ptext156 54E8  
                                           __ptext148 0C0E  
                                           __ptext181 5730  
                                           __ptext173 7628  
                                           __ptext165 81C2  
                                           __ptext157 7878  
                                           __ptext149 6E0C  
                                           __ptext190 6B1A  
                                           __ptext182 566E  
                                           __ptext174 6D38  
                                           __ptext166 81CA  
                                           __ptext158 5CA0  
                                           __ptext191 805E  
                                           __ptext183 7EDE  
                                           __ptext175 6DA2  
                                           __ptext167 81D2  
                                           __ptext159 78BA  
                                           __ptext192 76CA  
                                           __ptext184 6670  
                                           __ptext176 70B8  
                                           __ptext168 6334  
                                           __ptext193 64DC  
                                           __ptext185 21B8  
                                           __ptext177 6BF8  
                                           __ptext169 8206  
                                           __ptext194 7276  
                                           __ptext186 6950  
                                           __ptext178 315E  
                                           __ptext195 72CE  
                                           __ptext187 68DA  
                                           __ptext179 6E72  
                                           __ptext196 67EA  
                                           __ptext188 721E  
                                           __ptext197 7C06  
                                           __ptext189 793C  
                                           __ptext198 81AE  
                                           __ptext199 81B8  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0040  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                           __spi_init 7A2E  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 0094  
                                    ?__display_search 0001  
                                           _hid_rpt01 8F6E  
                                         __ui_encoder 4D7C  
                           __get_first_cluster@offset 0035  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 00FC  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0033  
                                      __get_time@time 0003  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 3F8E  
                             __parse_file_delete@data 003F  
                                     __i2c_write@data 0006  
                                _file_maximum_address 014A  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 0044  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0048  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 46F2  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 0100  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 49F4  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 58A4  
                        ??_spi_get_external_rx_buffer 0003  
                 __fill_buffer_get_display@secondHalf 0007  
                              fat_read_from_file@data 0068  
                              __end_of__flash_is_busy 7F8A  
                                       _fat_find_file 5730  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 0073  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 0C0E  
                                   __display_itoa_u16 54E8  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 705C  
                               ??_USBStdGetDscHandler 0001  
                               ?__parse_file_truncate 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8DE4  
                                 __end_of_found_line2 8CFC  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D32  
                                         _ep_data_out 0168  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 8186  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 7F46  
                       _bootloader_get_rec_dataLength 817C  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 00E6  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 771A  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2BD0  
                    __end_of_bootloader_get_file_size 80BE  
                                         _file_buffer 0188  
                                     _config_internal 0165  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 81F2  
                                     _config_external 0162  
                                      __display_start 27F2  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 7DD4  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 4BB8  
                      __root_is_available@file_number 0035  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 0043  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0220  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 003F  
                   __bootloader_verify_file@address32 008D  
                          __end_of_internalFlash_read 7AD4  
                                          ?_api_parse 0093  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 004B  
                                            _MSDTasks 1D30  
                          _USBDeferINDataStagePackets 00EC  
                                        ??_fat_format 0025  
                                     _fat_delete_file 6D38  
                                _active_configuration 0186  
                           ?__ic2_display_set_address 0001  
                                            _SSP1CON1 000FC6  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0050  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 6054  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 7C06  
                                           _spi_tx_rx 617C  
                                           _spi_tx_tx 64DC  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 00D5  
                 __size_of_spi_get_external_tx_buffer 000A  
                                __display_programming 2F88  
                               ?_USBTransferOnePacket 0001  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 006A  
                           __end_of__display_itoa_u16 55AC  
                           __end_of__display_itoa_u32 0F7C  
                     __size_of__fill_buffer_read_file 021C  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8DD4  
                                __end_of_verify_line2 8E59  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0030  
                            fat_rename_file@extension 0041  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00F4  
                   __end_of_ExternalFlash_MediaDetect 8206  
                                        _reboot_line1 8E3F  
                                        _search_line1 8DE4  
                                        _search_line2 8D43  
                                        _search_line3 8CC2  
                                        _search_line4 8E59  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 005A  
                                     ?__flash_is_busy 0001  
                                         ??_i2c_reset 0001  
                    __end_of__fill_buffer_get_display 58A4  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 721E  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 7762  
                   __size_of_fat_get_file_information 0074  
                                _bootloader_get_error 81F8  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0037  
                              __end_of__display_found 2DAE  
                             __end_of_USBStallHandler 7836  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 7878  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 29E2  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 6224  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                        fat_create_file@cluster_count 0062  
                         __end_of_USBStdSetCfgHandler 4F3C  
                                  ??_flash_page_write 0024  
                         __size_of__parse_file_delete 0052  
                                        ??__write_fat 002D  
                                  __end_of_fat_format 27F2  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 006C  
                                 __display_found@cntr 0028  
                                            _i2c_init 812A  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 0004  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00E7  
                         __size_of__parse_file_rename 006A  
                                         ??__i2c_stop 0001  
                                  __write_fat@cluster 0029  
                                  __end_of_device_dsc 8FB7  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 815E  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 315E  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0064  
                                            __Hrparam 0000  
                         __end_of_bootloader_filename 8FC0  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 7FFC  
                                      _TransferLength 00D3  
                                _bootloader_extension 8FC8  
                           __get_empty_cluster@offset 0034  
                          __end_of_USBCheckMSDRequest 566E  
               fat_read_from_file_fast@cluster_number 0044  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 7BA2  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 8D84  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8D74  
                                  __end_of_done_line4 8D64  
                                      __i2c_wait_idle 71C6  
                                     _MSDWriteHandler 1590  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 00E1  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 80DE  
                                         _found_line1 8DD4  
                                         _found_line2 8CE9  
                                         _found_line3 8E98  
                                         _found_line4 8D20  
                                            __get_fat 737E  
                                            __get_fbr 1ACC  
                         __size_of__get_empty_cluster 0074  
                                            __get_mbr 528E  
                                  __end_of__write_fat 797C  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 80AC  
                          _ExternalFlash_CapacityRead 809A  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 5D44  
                              ??__parse_file_truncate 0003  
                        __size_of__bootloader_program 03B4  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0176  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 80EE  
                    __get_first_cluster@first_cluster 0037  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                                    __display_checked 34B0  
               __end_of_bootloader_get_rec_recordType 81E6  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 81E0  
                                            __ptext10 810E  
                                            __ptext11 80DE  
                                            __ptext20 80EE  
                                            __ptext12 812A  
                                            __ptext21 5BFC  
                                            __ptext13 8030  
                                            __ptext30 8136  
                                            __ptext22 25F4  
                                            __ptext14 705C  
                                            __ptext31 8140  
                                            __ptext23 331A  
                                            __ptext15 8074  
                                            __ptext40 66F2  
                                            __ptext32 81DA  
                                            __ptext24 528E  
                                            __ptext16 7FE2  
                                            __ptext41 7836  
                                            __ptext33 7114  
                                            __ptext25 1ACC  
                                            __ptext17 797C  
                                            __ptext50 5B56  
                                            __ptext42 7A9E  
                                            __ptext34 0F7C  
                                            __ptext26 737E  
                                            __ptext18 7A2E  
                                            __ptext51 716E  
                                            __ptext43 7FC6  
                                            __ptext35 085A  
                                            __ptext27 7DD4  
                                            __ptext19 6770  
                                            __ptext60 77F2  
                                            __ptext52 767A  
                                            __ptext44 814A  
                                            __ptext36 0020  
                                            __ptext28 7F8A  
                                            __ptext61 7F46  
                                            __ptext53 6450  
                                            __ptext45 7B08  
                                            __ptext37 7FAA  
                                            __ptext29 79F4  
                                            __ptext70 5A04  
                                            __ptext62 3BDA  
                                            __ptext54 8154  
                                            __ptext46 7DFC  
                                            __ptext38 6AAA  
                                            __ptext71 3D28  
                                            __ptext63 5958  
                                            __ptext55 815E  
                                            __ptext47 6F9C  
                                            __ptext39 7D26  
                                            __ptext80 7B3C  
                                            __ptext72 1848  
                                            __ptext64 62A2  
                                            __ptext56 8168  
                                            __ptext48 7CCC  
                                            __ptext81 79B8  
                                            __ptext73 6568  
                                            __ptext65 47F4  
                                            __ptext57 362C  
                                            __ptext49 4F3C  
                                            __ptext90 41C6  
                                            __ptext82 6054  
                                            __ptext74 55AC  
                                            __ptext66 5DE6  
                                            __ptext58 7A66  
                                            __ptext91 6ED8  
                                            __ptext83 6FFC  
                                            __ptext75 4AD6  
                                            __ptext67 49F4  
                                            __ptext59 7C9C  
                                            __ptext92 049C  
                                            __ptext84 40AE  
                                            __ptext76 7582  
                                            __ptext68 4E5C  
                                            __ptext93 1590  
                                            __ptext85 5424  
                                            __ptext77 73D4  
                                            __ptext69 7D52  
                                            __ptext94 81FE  
                                            __ptext86 535C  
                                            __ptext78 80FE  
                                            __ptext95 7B70  
                                            __ptext87 5016  
                                            __ptext79 44E6  
                                            __ptext96 742A  
                                            __ptext88 8088  
                                            __ptext97 2DAE  
                                            __ptext89 1D30  
                                            __ptext98 4BB8  
                                            __ptext99 45EC  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 6F3A  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 6ED8  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 005A  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 6334  
                   __end_of_failed_line3_addressRange 8CC2  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 0058  
                      __size_of__bootloader_find_file 00A6  
                  __end_of__flash_copy_page_to_buffer 7326  
                          __flash_copy_page_to_buffer 72CE  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 5B56  
                       __end_of__bootloader_find_file 5BFC  
                        __end_of_i2c_digipot_reset_on 7F24  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 7582  
                      __end_of_USBCtrlTrfSetupHandler 6334  
                                       __size_of_main 0170  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F4A  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 6DA2  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 23D8  
                         __end_of_flash_partial_write 6B8A  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003B  
                             fat_get_file_size@sector 0035  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 7114  
                    __size_of__bootloader_verify_file 031E  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 81EC  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 81E6  
                                 _USBCtrlTrfInHandler 535C  
                  _MSDProcessCommandMediaPresent$2390 003C  
                    __get_empty_cluster@first_cluster 0030  
                      fat_read_from_file_fast@cluster 0042  
                                         ??_api_parse 0056  
                              __end_of__i2c_wait_idle 721E  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 797C  
                                _USBCtrlTrfOutHandler 6FFC  
                           _USBCtrlEPAllowStatusStage 5424  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 814A  
                                ?__parse_command_long 0053  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                    ?_flash_page_read 0028  
                                 __display_start@cntr 0025  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 3918  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0034  
                              ??__parse_command_short 002C  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00EF  
                  __end_of_spi_get_external_rx_buffer 814A  
                          _spi_get_external_rx_buffer 8140  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 4D7C  
                             __parse_file_modify@data 0001  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 7E24  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 7DFC  
                             _internalFlash_erasePage 7B08  
                                   __write_fat@offset 002F  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 8140  
                          _spi_get_external_tx_buffer 8136  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0010  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                    fat_read_from_file@cluster_number 006F  
                __end_of_MSDComputeDeviceInAndResidue 5FBE  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 5F22  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8E04  
                                 __end_of_start_line2 8E6B  
                                 __end_of_start_line3 8EA8  
                                 __end_of_start_line4 8E31  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 805E  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 8168  
                              bootloader_run@timeslot 005E  
                             __end_of_fat_create_file 331A  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0076  
                             __parse_file_rename@data 0043  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 65EE  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 6568  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 7BA2  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 72CE  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 7276  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               __update_modified_time 7C06  
                        fat_read_from_file@start_byte 0060  
                                     _display_content 0200  
                          __end_of_flash_partial_read 7C6A  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 1848  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 81F2  
                         _bootloader_get_rec_checksum 81EC  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                        __bootloader_verify_file@root 0068  
                   __size_of__fill_buffer_get_display 00B4  
                            ?_fat_read_from_file_fast 0038  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 51BC  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E04  
                                 _USBCtrlTrfRxService 40AE  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 7A66  
                               ??__parse_command_long 0055  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 7EBA  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1848  
                        __fill_buffer_read_file@start 00A3  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 5016  
                         fat_delete_file@next_cluster 003A  
                                        ?_api_prepare 00A7  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 017E  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 7E24  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E3F  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 8190  
                          _bootloader_get_rec_address 8186  
                               _USBAlternateInterface 01D6  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 76CA  
                          __delete_root@deleted_value 002E  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0182  
                           _failed_line3_noNextRecord 8E13  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 5FBE  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00F2  
                                      _display_update 6C64  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8CD6  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 4BB8  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 7E70  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0180  
                             _internalFlash_writePage 66F2  
                                ?_USBCtrlTrfTxService 0001  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 44E6  
                        _USBStatusStageTimeoutCounter 00F0  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 0010  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 68DA  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 793C  
                                        _verify_line1 8DC4  
                                        _verify_line2 8E4C  
                                        _verify_line3 8E8A  
                            ??_fat_get_empty_clusters 0032  
                                          _USB_CD_Ptr 8EA5  
                                         _power_state 00DF  
                                         _USBInHandle 017A  
                            _APP_DeviceCustomHIDTasks 5AAE  
